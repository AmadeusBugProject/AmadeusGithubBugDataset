{"projectName": "pmd/pmd", "bugLabels": ["a:bug"], "captureTime": "Sat Jul  4 02:13:09 2020", "issues": [{"title": "[java] Java 13 code analysis in case of Java 13 Preview feature is used in code", "body": "[Java-13]  [pmd-6.24.0]\r\n\r\n**Affects PMD Version:** \r\n6.24.0\r\n\r\n**Description:**\r\n\r\nI did not enable the preview features for java 13 by env variables `PMD_JAVA_OPTS`.\r\n\r\nBut when I run code analysis on code which has a preview feature let us say text block, then it doesn't return any issues.\r\n\r\nHowever, if the same code and I comment out the text block code part, then it does return the issues.\r\n", "url": "https://github.com/pmd/pmd/issues/2562", "user": "niranjanh", "labels": ["a:bug"], "created": "2020-06-03 06:58:33", "closed": "2020-06-05 12:20:38", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[apex] Exception applying rule UnusedLocalVariable on trigger", "body": "Executed by : ant\r\nApex language : trigger code\r\nRule name: [UnusedLocalVariable](https://pmd.github.io/latest/pmd_rules_apex_bestpractices.html#unusedlocalvariable) subset of\r\n\r\n`<rule ref=\"category/apex/bestpractices.xml\" />`\r\n\r\ncode:\r\n`trigger leadOwnerUpdate on Lead (after update)\r\n{\r\nfor(Lead Id : Trigger.new)\r\n    {}\r\n\t}`\r\n\r\n**Error**:\r\n\r\n\r\n\r\n```\r\nException applying rule UnusedLocalVariable on file E:\\writable\\OneDrive\\OneDrive - ANkush\\Documents\\sfdc\\src\\triggers\\leadOwnerUpdate.trigger, continuing with next rule\r\njava.lang.NullPointerException\r\n        at net.sourceforge.pmd.lang.apex.rule.bestpractices.UnusedLocalVariableRule.visit(UnusedLocalVariableRule.java:31)\r\n        at net.sourceforge.pmd.lang.apex.ast.ASTVariableDeclaration.jjtAccept(ASTVariableDeclaration.java:22)\r\n        at net.sourceforge.pmd.lang.apex.rule.ApexRuleChainVisitor.visit(ApexRuleChainVisitor.java:42)\r\n        at net.sourceforge.pmd.lang.rule.AbstractRuleChainVisitor.visitAll(AbstractRuleChainVisitor.java:96)\r\n        at net.sourceforge.pmd.RuleChain.apply(RuleChain.java:67)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:140)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:194)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:107)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:89)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n        at net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n        at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:122)\r\n        at net.sourceforge.pmd.PMD.processFiles(PMD.java:310)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:196)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:281)\r\n        at net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:50)\r\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\r\n        at java.lang.reflect.Method.invoke(Unknown Source)\r\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n        at org.apache.tools.ant.Task.perform(Task.java:352)\r\n        at org.apache.tools.ant.Target.execute(Target.java:437)\r\n        at org.apache.tools.ant.Target.performTasks(Target.java:458)\r\n        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1406)\r\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1377)\r\n        at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\r\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1261)\r\n        at org.apache.tools.ant.Main.runBuild(Main.java:857)\r\n        at org.apache.tools.ant.Main.startAnt(Main.java:236)\r\n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:287)\r\n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:112)\r\n```", "url": "https://github.com/pmd/pmd/issues/2554", "user": "ankushsomani09", "labels": ["a:bug", "has:pr"], "created": "2020-05-29 18:28:17", "closed": "2020-06-18 13:19:56", "commits": {"c680b260b9c613f268a97b4f6522cca4b302c1c1": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "c680b260b9c613f268a97b4f6522cca4b302c1c1", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["bc4a1d67eb091eeebcad26983eeeafbc68aa2698"], "nameRev": "c680b260b9c613f268a97b4f6522cca4b302c1c1 tags/pmd_releases/6.25.0~2^2~9^2", "commitMessage": "[apex] Exception applying rule UnusedLocalVariable on trigger\n\nFixes #2554\n", "commitDateTime": "2020-05-30 11:08:44", "authoredDateTime": "2020-05-30 11:08:44", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/bestpractices/UnusedLocalVariableRule.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "pmd-apex/src/test/resources/net/sourceforge/pmd/lang/apex/rule/bestpractices/xml/UnusedLocalVariable.xml", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UnusedLocalVariableRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.rule.bestpractices.UnusedLocalVariableRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTVariableDeclaration,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c680b260b9c613f268a97b4f6522cca4b302c1c1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.apex.rule.bestpractices.UnusedLocalVariableRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTVariableDeclaration,java.lang.Object)"]}, {"title": "[c#] CPD suppression with comments doesn't work", "body": "https://pmd.github.io/pmd-6.24.0/pmd_userdocs_cpd.html#suppression\r\n\r\nThe docs state:\r\n\r\n> Arbitrary blocks of code can be ignored through comments on Java, C/C++, Dart, Go, Javascript, Kotlin, Lua, Matlab, Objective-C, PL/SQL, Python and Swift by including the keywords CPD-OFF and CPD-ON.\r\n\r\nBut C# is also supported. See #2550 \r\n\r\nDouble checking for any other missing languages would be nice.", "url": "https://github.com/pmd/pmd/issues/2551", "user": "jsotuyod", "labels": ["a:bug", "good first issue", "has:pr", "help-wanted", "in:documentation"], "created": "2020-05-28 17:53:55", "closed": "2020-06-12 11:00:14", "commits": {"30ec2829bdef8c872116c5621c9082816a3e9d0e": {"commitGHEventType": "closed", "commitUser": "adangel"}, "28ea13e4f9e1d65074f2b7eff259d94e0fe251f4": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "30ec2829bdef8c872116c5621c9082816a3e9d0e", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["e2a526461a7c710119196c7860280dea16ff3913"], "nameRev": "30ec2829bdef8c872116c5621c9082816a3e9d0e tags/pmd_releases/6.25.0~16^2", "commitMessage": "[doc] Update release notes, fixes #2551, refs #2567\n", "commitDateTime": "2020-06-12 12:48:31", "authoredDateTime": "2020-06-12 12:48:31", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "28ea13e4f9e1d65074f2b7eff259d94e0fe251f4", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["702936ba4523fdece313ee3e1ad8b4b3841d0ba0", "30ec2829bdef8c872116c5621c9082816a3e9d0e"], "nameRev": "28ea13e4f9e1d65074f2b7eff259d94e0fe251f4 tags/pmd_releases/6.25.0~16", "commitMessage": "Merge branch 'pr-2567'\n\n[c#] Fix CPD suppression with comments doesn't work #2551 #2567\n", "commitDateTime": "2020-06-12 12:49:21", "authoredDateTime": "2020-06-12 12:49:21", "commitGitStats": [{"filePath": "docs/pages/pmd/userdocs/cpd/cpd.md", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/token/AntlrToken.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-cs/src/test/java/net/sourceforge/pmd/cpd/CsTokenizerTest.java", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AntlrToken.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.token.AntlrToken.isHidden()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "CsTokenizerTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CsTokenizerTest.testIgnoreBetweenSpecialComments()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[java] Auxclasspath in PMD CLI does not support relative file path", "body": "**Affects PMD Version:** \r\n6.24.0 onwards.\r\n\r\n**Description:**\r\n\r\nAuxclasspath does not support relative file path when specifying classpath file in PMD CLI namely file URLs with the format\r\nfile:./fname\r\n\r\n(This could be mitigated by using command realpath to obtain the full path.)\r\n\r\nAdditionally, the file parameter could be specified in a new option, auxclasspathfile instead.\r\n\r\n**Exception Stacktrace:**\r\n\r\n```\r\nWARNING: Auxclasspath entry file:/data/data/com.termux/files/home/LearnJava/Unsafe/file doesn't exist, ignoring it\r\nMay 28, 2020 3:04:43 AM net.sourceforge.pmd.cache.FileAnalysisCache persist\r\nINFO: Analysis cache updated\r\n./pmdauxrel exited with error code 4\r\n```\r\n\r\n**Running PMD through:** *[CLI ]*\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/2549", "user": "Fernal73", "labels": ["a:bug"], "created": "2020-05-28 00:50:08", "closed": "2020-06-18 13:19:57", "commits": {"08c6ffd719f733f13b05edcd46762a0c9ed79cac": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "08c6ffd719f733f13b05edcd46762a0c9ed79cac", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["bc4a1d67eb091eeebcad26983eeeafbc68aa2698"], "nameRev": "08c6ffd719f733f13b05edcd46762a0c9ed79cac tags/pmd_releases/6.25.0~2^2~7^2~1", "commitMessage": "[java] Auxclasspath in PMD CLI does not support relative file path\n\nFixes #2549\n", "commitDateTime": "2020-06-04 12:27:07", "authoredDateTime": "2020-06-04 12:27:07", "commitGitStats": [{"filePath": "docs/pages/pmd/userdocs/cli_reference.md", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cli/PMDParameters.java", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/util/ClasspathClassLoader.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/ConfigurationTest.java", "insertions": 44, "deletions": 0, "lines": 44}, {"filePath": "pmd-core/src/test/resources/net/sourceforge/pmd/cli/auxclasspath-empty.cp", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "pmd-core/src/test/resources/net/sourceforge/pmd/cli/auxclasspath.cp", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PMDParameters.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cli.PMDParameters", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClasspathClassLoader.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.util.ClasspathClassLoader.initURLs(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.util.ClasspathClassLoader.createURLFromPath(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.util.ClasspathClassLoader.addFileURLs(java.util.List,java.net.URL)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ConfigurationTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.ConfigurationTest.auxClasspathWithRelativeFileEmpty()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.ConfigurationTest.auxClasspathWithRelativeFileEmpty2()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.ConfigurationTest.auxClasspathWithRelativeFile()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["08c6ffd719f733f13b05edcd46762a0c9ed79cac"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 4, "lines": 12, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 2, "INS": 3, "MOV": 2, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd/cli", "pmd-core/src/main/java/net/sourceforge/pmd/util"], "changesInPackagesSPOON": ["net.sourceforge.pmd.util.ClasspathClassLoader.addFileURLs(java.util.List,java.net.URL)", "net.sourceforge.pmd.cli.PMDParameters", "net.sourceforge.pmd.util.ClasspathClassLoader.createURLFromPath(java.lang.String)", "net.sourceforge.pmd.util.ClasspathClassLoader.initURLs(java.lang.String)"]}, {"title": "[java] Auxclasspath in PMD CLI does not support absolute path to jars in classpath", "body": "**Affects PMD Version:** \r\n6.24.0\r\n\r\n\r\n**Description:**\r\nOption auxclasspath in PMD CLI does not support absolute path for jars specified in the classpath supplied. \r\n\r\n**Exception Stacktrace:**\r\n\r\n```\r\n\r\n+ java -cp @../pmd.cp net.sourceforge.pmd.PMD -filelist pmdfiles.txt -R ../pmdrules.xml -f text -min 5 -norulesetcompatibility -failOnViolation true -cache pmd.cache -reportfile pmd.errors -auxclasspath file:///data/data/com.termux/files/home/LearnJava/Unsafe/pmdaux.cp -t 5\r\nMay 28, 2020 1:46:33 AM net.sourceforge.pmd.cache.FileAnalysisCache loadFromFile\r\nINFO: Analysis cache loaded\r\nMay 28, 2020 1:46:50 AM net.sourceforge.pmd.cache.AbstractAnalysisCache checkValidity\r\nINFO: Analysis cache invalidated, auxclasspath changed.\r\nException in thread \"main\" java.lang.NoClassDefFoundError: org/hamcrest/Matcher\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3166)\r\n\tat java.base/java.lang.Class.privateGetPublicMethods(Class.java:3191)\r\n\tat java.base/java.lang.Class.getMethods(Class.java:1904)\r\n\tat net.sourceforge.pmd.lang.rule.ImportWrapper.<init>(ImportWrapper.java:33)\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.UnusedImportsRule.visit(UnusedImportsRule.java:121)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTImportDeclaration.jjtAccept(ASTImportDeclaration.java:143)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:225)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:397)\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.UnusedImportsRule.visit(UnusedImportsRule.java:58)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:168)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:156)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:336)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:575)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:194)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:107)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:89)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: java.lang.ClassNotFoundException: org.hamcrest.Matcher\r\n\tat java.base/java.net.URLClassLoader.findClass(URLClassLoader.java:471)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:588)\r\n\tat net.sourceforge.pmd.util.ClasspathClassLoader.loadClass(ClasspathClassLoader.java:123)\r\n\tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\r\n\t... 27 more\r\n+ exitCode=1\r\n+ echo './pmd exited with error code 1'\r\n./pmd exited with error code 1\r\n+ exit 1\r\n\r\n```\r\n\r\nContents of pmdaux.cp\r\n```\r\n$ cat pmdaux.cp\r\n/data/data/com.termux/files/home/LearnJava/lib/junit-4.13.jar\r\n.\r\n```\r\n\r\nContents of PMD.cp\r\n```\r\n/data/data/com.termux/files/home/LearnJava/lib/antlr4-runtime-4.7.jar:/data/data/com.termux/files/home/LearnJava/lib/asm-7.3.1.jar:/data/data/com.termux/files/home/LearnJava/lib/commons-io-2.6.jar:/data/data/com.termux/files/home/LearnJava/lib/commons-lang3-3.8.1.jar:/data/data/com.termux/files/home/LearnJava/lib/gson-2.8.5.jar:/data/data/com.termux/files/home/LearnJava/lib/javacc-5.0.jar:/data/data/com.termux/files/home/LearnJava/lib/jcommander-1.72.jar:/data/data/com.termux/files/home/LearnJava/lib/pmd-core-6.24.0.jar:/data/data/com.termux/files/home/LearnJava/lib/pmd-java-6.24.0.jar:/data/data/com.termux/files/home/LearnJava/lib/pmd-jsp-6.24.0.jar:/data/data/com.termux/files/home/LearnJava/lib/pmd-xml-6.24.0.jar:/data/data/com.termux/files/home/LearnJava/lib/saxon-9.1.0.8-dom.jar:/data/data/com.termux/files/home/LearnJava/lib/saxon-9.1.0.8.jar\r\n```\r\n\r\nSame error occurs when auxclasspath is specified via command line as against input file.\r\n\r\n**Steps to reproduce:**\r\n\r\nSpecify absolute path to jar file preferably not in working directory as part of the auxclasspath.\r\n\r\n\r\n**Running PMD through:** *[CLI ]*\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/2548", "user": "Fernal73", "labels": ["a:bug", "was:unreproducible"], "created": "2020-05-28 00:45:41", "closed": "2020-06-05 08:54:36", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "[java] UseDiamondOperator false negatives", "body": "**Affects PMD Version:** 6.23.0 and 6.24.0 (but not 6.22.0)\r\n\r\nMake sure, to test with the latest PMD version.\r\n\r\n**Description:**\r\n\r\nI've identified a couple of (what I believe are) false negatives for rule UseDiamondOperator. These seem to have been introduced in PMD 6.23.0, probably as a side effect of fixing #1723.\r\n\r\nThese false negatives are as follows:\r\n* When using nested type parameters (e.g., `List<Map<String,Object>>`), the rule doesn't seem to trigger even in cases where it should\r\n* When using a ternary operator (`boolean ? value : otherValue`), the rule doesn't seem to trigger either\r\n* It also doesn't seem to work in a static initializer\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nimport java.util.List;\r\nimport java.util.ArrayList;\r\nimport java.util.Map;\r\nimport java.util.HashMap;\r\npublic class File {\r\n  List<Map<String,Object>> l = new ArrayList<Map<String,Object>>(); // FN\r\n  public void test() {\r\n    final List<String> l2;\r\n    l2 = true ? new ArrayList<String>() : new ArrayList<String>(); // FN\r\n  }\r\n  static {\r\n    l = new ArrayList<Map<String,Object>>(); // FN\r\n  }\r\n}\r\n```\r\nPMD 6.22.0 reports the following:\r\n\r\n> /tmp/File.java:6:\tExplicit type arguments can be replaced by Diamond Operator\r\n/tmp/File.java:9:\tExplicit type arguments can be replaced by Diamond Operator\r\n/tmp/File.java:9:\tExplicit type arguments can be replaced by Diamond Operator\r\n/tmp/File.java:12:\tExplicit type arguments can be replaced by Diamond Operator\r\n\r\nPMD 6.23.0 and 6.24.0 report no violations at all.\r\n\r\n**Steps to reproduce:**\r\n\r\nPlease provide detailed steps for how we can reproduce the bug.\r\n\r\n1. Save the code example above to /tmp/File.java\r\n2.  Run `./run.sh pmd -d /tmp/File.java -R category/java/codestyle.xml/UseDiamondOperator` \r\n\r\n**Running PMD through:** *CLI*", "url": "https://github.com/pmd/pmd/issues/2545", "user": "maikelsteneker", "labels": ["a:bug", "a:false-negative", "has:pr"], "created": "2020-05-26 10:21:45", "closed": "2020-06-15 15:48:54", "commits": {"c2cea9d15bcf512dbfce8d67c466ff0d17774ded": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "c2cea9d15bcf512dbfce8d67c466ff0d17774ded", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["bc4a1d67eb091eeebcad26983eeeafbc68aa2698"], "nameRev": "c2cea9d15bcf512dbfce8d67c466ff0d17774ded tags/pmd_releases/6.25.0~6^2~7^2~4", "commitMessage": "[java] UseDiamondOperator - support nested type arguments\n\nFixes #2545 partially\n", "commitDateTime": "2020-05-30 10:23:52", "authoredDateTime": "2020-05-30 10:23:52", "commitGitStats": [{"filePath": "pmd-java/src/main/resources/category/java/codestyle.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/codestyle/xml/UseDiamondOperator.xml", "insertions": 63, "deletions": 14, "lines": 77}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c2cea9d15bcf512dbfce8d67c466ff0d17774ded"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] UseProperClassLoader can not detect the case with method call on intermediate variable", "body": "**Affects PMD Version:** \r\n6.22.0\r\n\r\n**Rule:**\r\n[UseProperClassLoader](https://pmd.github.io/latest/pmd_rules_java_errorprone.html#useproperclassloader)\r\n\r\n**Description:**\r\nUseProperClassLoader can not detect the case which is written in two lines:<code>Foo foo = new Foo()</code> and then <code>ClassLoader classLoader = foo.getClassLoader();</code>\r\nThis rule is implemented through xpath search:\r\n\r\n```\r\n//PrimarySuffix[@Image='getClassLoader']\r\n```\r\nThis rule can only detect the case <code>new Foo().getClassLoader()</code>\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\nFoo foo = new Foo()\r\nClassLoader classLoader = foo.getClassLoader();\r\n```\r\n\r\n**Expected outcome:**\r\nfalse-negative\r\n\r\n\r\n**Running PMD through:**\r\nCLI\r\n", "url": "https://github.com/pmd/pmd/issues/2544", "user": "wuchiuwong", "labels": ["a:bug", "a:false-negative", "has:pr"], "created": "2020-05-26 09:20:29", "closed": "2020-06-18 13:19:57", "commits": {"b21f3efcfda1a07eceb877487dc3bf666e38a6c3": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "b21f3efcfda1a07eceb877487dc3bf666e38a6c3", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["bc4a1d67eb091eeebcad26983eeeafbc68aa2698"], "nameRev": "b21f3efcfda1a07eceb877487dc3bf666e38a6c3 tags/pmd_releases/6.25.0~2^2~8^2", "commitMessage": "[java] UseProperClassLoader can not detect the case with method call on intermediate variable\n\nFixes #2544\n", "commitDateTime": "2020-05-30 11:23:23", "authoredDateTime": "2020-05-30 11:23:23", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/resources/category/java/errorprone.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/errorprone/xml/UseProperClassLoader.xml", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b21f3efcfda1a07eceb877487dc3bf666e38a6c3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[xml] XPath 2.0 matching incorrect nodes based on boolean condition", "body": "**Affects PMD Version:**\r\n\r\n6.23.0\r\n\r\n**Description:**\r\n\r\nEither my XPath 2.0 expression is incorrect or the XPath boolean filter is not working as expected. When attempting to match only the `userPermissions` elements where `enabled` is true, it matches regardless of the value in `enabled`.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<Profile xmlns=\"http://soap.sforce.com/2006/04/metadata\">\r\n    <userPermissions>\r\n        <enabled>true</enabled>\r\n        <name>ViewRoles</name>\r\n    </userPermissions>\r\n    <userPermissions>\r\n        <enabled>false</enabled>\r\n        <name>ViewSetup</name>\r\n    </userPermissions>\r\n</Profile>\r\n```\r\n\r\n```\r\n//userPermissions[\r\n    enabled/text[boolean(@Image) = true()]\r\n]/name/text\r\n```\r\n\r\n![image](https://user-images.githubusercontent.com/10981949/82313273-097a4500-99c0-11ea-8599-5439f900d962.png)\r\n\r\n---\r\n\r\nAlthough, changing the condition to text comparison works:\r\n```\r\n//userPermissions[\r\n    enabled/text[@Image = 'true']\r\n]/name/text\r\n```\r\n![image](https://user-images.githubusercontent.com/10981949/82314385-a7224400-99c1-11ea-8c6e-0e6e01fb30d4.png)\r\n\r\n**Steps to reproduce:**\r\n\r\nPlease provide detailed steps for how we can reproduce the bug.\r\n\r\n1. Start PMD Designer\r\n2. Set language to XML\r\n3. Copy-paste code sample from above\r\n4. Copy-paste XPath expression and set version to 2.0\r\n5. Observe incorrectly matched nodes\r\n\r\n**Running PMD through:** *[Ant | Designer]*", "url": "https://github.com/pmd/pmd/issues/2494", "user": "hudec117", "labels": ["a:bug", "was:invalid"], "created": "2020-05-19 10:21:40", "closed": "2020-05-19 16:19:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[apex] @SuppressWarnings has no effect", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** \r\n PMD 6.0.0\r\n\r\n**Description:**\r\nEven after adding @SuppressWarnings('PMD.EmptyStatementBlock') PMD shows \r\n\r\n> Avoid empty block statements warning message\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class Foo {\r\n\r\n   private Integer _bar;\r\n\r\n   @SuppressWarnings('PMD.EmptyStatementBlock') \r\n   public void setBar(Integer bar) {\r\n        // empty\r\n   }\r\n\r\n}\r\n```\r\n\r\n**Running PMD through** *Codacy*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/2482", "user": "anmolgkv", "labels": ["a:bug"], "created": "2020-05-13 08:47:11", "closed": "2020-05-15 04:13:46", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[java] JUnitSpelling false-positive for JUnit5/4 tests", "body": "**Affects PMD Version:** \r\n6.23\r\n\r\n**Description:**\r\n[JUnitSpelling](https://pmd.github.io/latest/pmd_rules_java_errorprone.html#junitspelling) requires some tweaks in terms of documentation and produces false positives for:\r\n1) JUnit4 class when it doesn't extend `TestCase` but has a `setup` method\r\n2) JUnit5 class when it has a `setup` method\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\n\r\npublic class BTest {\r\n\r\n    @BeforeEach\r\n    void setup() {    }\r\n\r\n    @Test\r\n    void test() {    }\r\n}\r\n```\r\n\r\n```java\r\nimport org.junit.Before;\r\nimport org.junit.Test;\r\npublic class BTest {\r\n\r\n    @Before\r\n    void setup() {    }\r\n\r\n    @Test\r\n    void test() {    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *[CLI]*\r\n\r\nI suggest two things:\r\n\r\n1) Do not trigger if it's a junit5 class (`isJUnit5Class` from `AbstractJUnitRule` can be used).\r\n2) Do not trigger if junit4 doesn't extend `TestCase`\r\n\r\nWDYT?", "url": "https://github.com/pmd/pmd/issues/2477", "user": "KroArtem", "labels": ["a:bug", "a:false-positive", "has:pr"], "created": "2020-05-11 20:06:38", "closed": "2020-05-18 18:42:38", "commits": {"d349d6669661d78921c730fbfb343b794a040cc4": {"commitGHEventType": "closed", "commitUser": "adangel"}, "33e3bc24c4c2cde1b799f970526891cd82770ff1": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "d349d6669661d78921c730fbfb343b794a040cc4", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["2bce93c8b614db63b148dc3170a6a78e91130d26"], "nameRev": "d349d6669661d78921c730fbfb343b794a040cc4 tags/pmd_releases/6.24.0~19^2~4", "commitMessage": "fix JUnitSpellingRule false positive, closes #2477. Also add two more tests\n", "commitDateTime": "2020-05-13 01:46:36", "authoredDateTime": "2020-05-13 01:46:36", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/AbstractJUnitRule.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/JUnitSpellingRule.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/errorprone/xml/JUnitSpelling.xml", "insertions": 37, "deletions": 0, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJUnitRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.AbstractJUnitRule.isJUnit3Class(net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.AbstractJUnitRule.isJUnit4Class(net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.AbstractJUnitRule.isJUnit5Class(net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JUnitSpellingRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.errorprone.JUnitSpellingRule.visit(net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "33e3bc24c4c2cde1b799f970526891cd82770ff1", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["dfd5e608d66730212a835f84656916d3e1d8f86e"], "nameRev": "33e3bc24c4c2cde1b799f970526891cd82770ff1 tags/pmd_releases/6.24.0~19^2", "commitMessage": "[doc] Update release notes, fixes #2477, refs #2481\n", "commitDateTime": "2020-05-18 19:57:05", "authoredDateTime": "2020-05-18 19:57:05", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d349d6669661d78921c730fbfb343b794a040cc4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 5, "lines": 16, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7.0, "UPD": 5.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.rule.AbstractJUnitRule.isJUnit4Class(net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit)", "net.sourceforge.pmd.lang.java.rule.AbstractJUnitRule.isJUnit3Class(net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit)", "net.sourceforge.pmd.lang.java.rule.errorprone.JUnitSpellingRule.visit(net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration,java.lang.Object)", "net.sourceforge.pmd.lang.java.rule.AbstractJUnitRule.isJUnit5Class(net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit)"]}, {"title": "[java] JavaCharStream throws an Error on invalid escape", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** 6.23.0\r\n\r\n**Description:** Javacc throws an Error on invalid escapes, which isn't caught, so it crashes the whole program. It also doesn't mention the filename.\r\n\r\n**Exception Stacktrace:**\r\n\r\n```\r\nException in thread \"main\" java.lang.Error: Invalid escape character at line 1 column 2.\r\n\tat net.sourceforge.pmd.lang.ast.JavaCharStream.readChar(JavaCharStream.java:331)\r\n\tat net.sourceforge.pmd.lang.ast.JavaCharStream.BeginToken(JavaCharStream.java:193)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserTokenManager.getNextToken(JavaParserTokenManager.java:2271)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.<init>(JavaParser.java:12555)\r\n\tat net.sourceforge.pmd.lang.java.AbstractJavaParser.createJavaParser(AbstractJavaParser.java:46)\r\n\tat net.sourceforge.pmd.lang.java.JavaLanguageParser.createJavaParser(JavaLanguageParser.java:41)\r\n\tat net.sourceforge.pmd.lang.java.AbstractJavaParser.parse(AbstractJavaParser.java:62)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:121)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:185)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:107)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:89)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n\\u00k0 // not a valid unicode escape because k is not a valid hex digit \r\n```\r\n\r\n**Steps to reproduce:** \r\n\r\n1.  analyse a file with an invalid escape like above\r\n\r\n**Running PMD through:** any\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/2472", "user": "oowekyala", "labels": ["a:bug", "has:pr"], "created": "2020-05-07 13:45:16", "closed": "2020-05-18 18:42:39", "commits": {"ca341e85d4df9b03ce7564fd1513aa283d9d7367": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "ca341e85d4df9b03ce7564fd1513aa283d9d7367", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["c457f09f08a87beeb0da44569d82120ce8b9b6ae"], "nameRev": "ca341e85d4df9b03ce7564fd1513aa283d9d7367 tags/pmd_releases/6.24.0~16^2", "commitMessage": "[doc] Update release notes, fixes #2472\n", "commitDateTime": "2020-05-18 20:27:03", "authoredDateTime": "2020-05-18 20:27:03", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ca341e85d4df9b03ce7564fd1513aa283d9d7367"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] Null assignment with developer intent", "body": "**Affects PMD Version:** \r\n6.20\r\n\r\n**Rule:**\r\nNullAssignment\r\n<https://pmd.github.io/latest/pmd_rules_java_errorprone.html#nullassignment>\r\n\r\n**Description:**\r\nFor the case where variable 'next' is not null, the developer intentionally makes 'next' into null. In this case, detecting this as an error is false positive.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\nprivate WindowedValue<T> consumeCurrent(){\r\n  if (next == null) {\r\n    throw new NoSuchElementException();\r\n  }\r\n else {\r\n    final WindowedValue<T> current=next;\r\n    next=null;\r\n    return current;\r\n  }\r\n}\r\n```\r\n\r\n**Expected outcome:**\r\n*   Does PMD report a violation, where there shouldn't be one? -> false-positive\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nCLI", "url": "https://github.com/pmd/pmd/issues/2455", "user": "0pencoding", "labels": ["a:bug"], "created": "2020-04-29 16:15:10", "closed": "2020-04-30 03:15:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] [6.23.0] java.lang.IllegalArgumentException: Not a valid class name \"java.sql.ResultSet]\"", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** \r\n\r\n6.23.0\r\n\r\n**Description:**\r\n\r\nAfter upgrading from 6.22.0, for every single file I get:\r\n\r\n**Exception Stacktrace:**\r\n\r\n```\r\njava.lang.IllegalArgumentException: Not a valid class name \"java.sql.ResultSet]\"\r\n        at net.sourceforge.pmd.lang.java.typeresolution.TypeHelper.invalidClassName(TypeHelper.java:216)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.TypeHelper.checkJavaIdent(TypeHelper.java:227)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.TypeHelper.loadClassMaybeArray(TypeHelper.java:210)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.TypeHelper.loadClass(TypeHelper.java:166)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.TypeHelper.loadClassWithNodeClassloader(TypeHelper.java:152)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.TypeHelper.isA(TypeHelper.java:64)\r\n        at net.sourceforge.pmd.lang.java.rule.errorprone.CloseResourceRule.isResourceTypeOrSubtype(CloseResourceRule.java:267)\r\n        at net.sourceforge.pmd.lang.java.rule.errorprone.CloseResourceRule.checkForResources(CloseResourceRule.java:164)\r\n        at net.sourceforge.pmd.lang.java.rule.errorprone.CloseResourceRule.visit(CloseResourceRule.java:145)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:37)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:225)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:272)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:44)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:225)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:267)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:35)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:225)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:237)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:55)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:225)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:422)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:225)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:397)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:168)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:156)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:336)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:575)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:194)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCodeWithoutCache(SourceCodeProcessor.java:107)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:89)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n        at net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n        at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:122)\r\n        at net.sourceforge.pmd.PMD.processFiles(PMD.java:310)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:196)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:281)\r\n        at net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:50)\r\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)\r\n        at jdk.internal.reflect.GeneratedMethodAccessor744.invoke(Unknown Source)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:99)\r\n        at groovy.util.AntBuilder.performTask(AntBuilder.java:333)\r\n        at groovy.util.AntBuilder.nodeCompleted(AntBuilder.java:278)\r\n        at org.gradle.api.internal.project.ant.BasicAntBuilder.nodeCompleted(BasicAntBuilder.java:80)\r\n        at jdk.internal.reflect.GeneratedMethodAccessor708.invoke(Unknown Source)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n        at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n        at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n        at org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:483)\r\n        at org.gradle.internal.metaobject.BeanDynamicObject.tryInvokeMethod(BeanDynamicObject.java:195)\r\n        at org.gradle.internal.metaobject.AbstractDynamicObject.invokeMethod(AbstractDynamicObject.java:163)\r\n        at org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.nodeCompleted(AntBuilderDelegate.java:124)\r\n        at groovy.util.BuilderSupport.doInvokeMethod(BuilderSupport.java:151)\r\n        at groovy.util.BuilderSupport.invokeMethod(BuilderSupport.java:64)\r\n        at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:43)\r\n        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:135)\r\n        at org.gradle.api.plugins.quality.internal.PmdInvoker$1$_create_closure1.doCall(PmdInvoker.groovy:102)\r\n        at jdk.internal.reflect.GeneratedMethodAccessor1714.invoke(Unknown Source)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n        at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)\r\n        at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)\r\n        at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:263)\r\n        at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1041)\r\n        at groovy.lang.Closure.call(Closure.java:405)\r\n        at groovy.lang.Closure.call(Closure.java:421)\r\n        at org.gradle.util.ClosureBackedAction.execute(ClosureBackedAction.java:71)\r\n        at org.gradle.util.ClosureBackedAction.execute(ClosureBackedAction.java:52)\r\n        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:154)\r\n        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:136)\r\n        at org.gradle.api.internal.project.antbuilder.ClassPathToClassLoaderCache.withCachedClassLoader(ClassPathToClassLoaderCache.java:135)\r\n        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder.execute(DefaultIsolatedAntBuilder.java:130)\r\n        at org.gradle.api.internal.project.IsolatedAntBuilder$execute$0.call(Unknown Source)\r\n        at org.gradle.api.plugins.quality.internal.PmdInvoker$1.create(PmdInvoker.groovy:56)\r\n        at org.gradle.api.plugins.quality.internal.PmdInvoker$1.create(PmdInvoker.groovy)\r\n        at org.gradle.internal.SystemProperties.withSystemProperty(SystemProperties.java:114)\r\n        at org.gradle.internal.SystemProperties$withSystemProperty.call(Unknown Source)\r\n        at org.gradle.api.plugins.quality.internal.PmdInvoker.invoke(PmdInvoker.groovy:53)\r\n        at org.gradle.api.plugins.quality.Pmd.run(Pmd.java:94)\r\n        at jdk.internal.reflect.GeneratedMethodAccessor1700.invoke(Unknown Source)\r\n        at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:104)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:49)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:42)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:28)\r\n        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:727)\r\n        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:694)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$3.run(ExecuteActionsTaskExecuter.java:568)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:402)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:394)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:92)\r\n        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:553)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:536)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$300(ExecuteActionsTaskExecuter.java:109)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.executeWithPreviousOutputFiles(ExecuteActionsTaskExecuter.java:276)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:265)\r\n        at org.gradle.internal.execution.steps.ExecuteStep.lambda$execute$1(ExecuteStep.java:33)\r\n        at java.base/java.util.Optional.orElseGet(Optional.java:362)\r\n        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:33)\r\n        at org.gradle.internal.execution.steps.ExecuteStep.execute(ExecuteStep.java:26)\r\n        at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:67)\r\n        at org.gradle.internal.execution.steps.CleanupOutputsStep.execute(CleanupOutputsStep.java:36)\r\n        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:49)\r\n        at org.gradle.internal.execution.steps.ResolveInputChangesStep.execute(ResolveInputChangesStep.java:34)\r\n        at org.gradle.internal.execution.steps.CancelExecutionStep.execute(CancelExecutionStep.java:43)\r\n        at org.gradle.internal.execution.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:73)\r\n        at org.gradle.internal.execution.steps.TimeoutStep.execute(TimeoutStep.java:54)\r\n        at org.gradle.internal.execution.steps.CatchExceptionStep.execute(CatchExceptionStep.java:34)\r\n        at org.gradle.internal.execution.steps.CreateOutputsStep.execute(CreateOutputsStep.java:44)\r\n        at org.gradle.internal.execution.steps.SnapshotOutputsStep.execute(SnapshotOutputsStep.java:54)\r\n        at org.gradle.internal.execution.steps.SnapshotOutputsStep.execute(SnapshotOutputsStep.java:38)\r\n        at org.gradle.internal.execution.steps.BroadcastChangingOutputsStep.execute(BroadcastChangingOutputsStep.java:49)\r\n        at org.gradle.internal.execution.steps.CacheStep.executeWithoutCache(CacheStep.java:159)\r\n        at org.gradle.internal.execution.steps.CacheStep.execute(CacheStep.java:72)\r\n        at org.gradle.internal.execution.steps.CacheStep.execute(CacheStep.java:43)\r\n        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:44)\r\n        at org.gradle.internal.execution.steps.StoreExecutionStateStep.execute(StoreExecutionStateStep.java:33)\r\n        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:38)\r\n        at org.gradle.internal.execution.steps.RecordOutputsStep.execute(RecordOutputsStep.java:24)\r\n        at org.gradle.internal.execution.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:92)\r\n        at org.gradle.internal.execution.steps.SkipUpToDateStep.lambda$execute$0(SkipUpToDateStep.java:85)\r\n        at java.base/java.util.Optional.map(Optional.java:258)\r\n        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:55)\r\n        at org.gradle.internal.execution.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:39)\r\n        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:76)\r\n        at org.gradle.internal.execution.steps.ResolveChangesStep.execute(ResolveChangesStep.java:37)\r\n        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:36)\r\n        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsFinishedStep.execute(MarkSnapshottingInputsFinishedStep.java:26)\r\n        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:94)\r\n        at org.gradle.internal.execution.steps.ResolveCachingStateStep.execute(ResolveCachingStateStep.java:49)\r\n        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:79)\r\n        at org.gradle.internal.execution.steps.CaptureStateBeforeExecutionStep.execute(CaptureStateBeforeExecutionStep.java:53)\r\n        at org.gradle.internal.execution.steps.ValidateStep.execute(ValidateStep.java:74)\r\n        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.lambda$execute$2(SkipEmptyWorkStep.java:78)\r\n        at java.base/java.util.Optional.orElseGet(Optional.java:362)\r\n        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:78)\r\n        at org.gradle.internal.execution.steps.SkipEmptyWorkStep.execute(SkipEmptyWorkStep.java:34)\r\n        at org.gradle.internal.execution.steps.legacy.MarkSnapshottingInputsStartedStep.execute(MarkSnapshottingInputsStartedStep.java:39)\r\n        at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:40)\r\n        at org.gradle.internal.execution.steps.LoadExecutionStateStep.execute(LoadExecutionStateStep.java:28)\r\n        at org.gradle.internal.execution.impl.DefaultWorkExecutor.execute(DefaultWorkExecutor.java:33)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeIfValid(ExecuteActionsTaskExecuter.java:192)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:184)\r\n        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:114)\r\n        at org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:46)\r\n        at org.gradle.api.internal.tasks.execution.ResolveTaskExecutionModeExecuter.execute(ResolveTaskExecutionModeExecuter.java:62)\r\n        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:57)\r\n        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:56)\r\n        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\r\n        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:77)\r\n        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:55)\r\n        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:416)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:406)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor$1.execute(DefaultBuildOperationExecutor.java:165)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:250)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:158)\r\n        at org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:102)\r\n        at org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)\r\n        at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:52)\r\n        at org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:41)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:372)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:359)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:352)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:338)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.lambda$run$0(DefaultPlanExecutor.java:127)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:191)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:182)\r\n        at org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:124)\r\n        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:64)\r\n        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:48)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:56)\r\n        at java.base/java.lang.Thread.run(Thread.java:830)\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\n\r\nGradle\r\n\r\nI'm not sure why that would happen as that class `java.sql.ResultSet` is in the JDK itself. I'm using JDK 13.0.2.\r\n\r\nP.S. This happens when `applying rule CloseResource`.", "url": "https://github.com/pmd/pmd/issues/2436", "user": "boris-petrov", "labels": ["a:bug"], "created": "2020-04-24 09:56:21", "closed": "2020-04-24 11:22:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] CodeClimate renderer links are dead", "body": "The dead links checker reports the links\r\n* `[PMD properties](https://pmd.github.io/pmd-6.22.0/pmd_devdocs_working_with_properties.html)`\r\n* `[Categories](https://github.com/codeclimate/spec/blob/master/SPEC.md#categories)`\r\n\r\n\r\n_Originally posted by @oowekyala in https://github.com/pmd/pmd/pull/2413/review_comment/create_\r\n\r\nhttps://github.com/pmd/pmd/blob/491e51377573120e66f96d135d7378648b655660/pmd-core/src/main/java/net/sourceforge/pmd/renderers/CodeClimateRenderer.java#L47-L47\r\n\r\nHas been moved to https://pmd.github.io/latest/pmd_userdocs_configuring_rules.html#rule-properties\r\n\r\nThese two other links have moved i don't know where\r\n\r\nhttps://github.com/pmd/pmd/blob/491e51377573120e66f96d135d7378648b655660/pmd-core/src/main/java/net/sourceforge/pmd/renderers/CodeClimateRenderer.java#L149\r\n\r\nhttps://github.com/pmd/pmd/blob/491e51377573120e66f96d135d7378648b655660/pmd-core/src/main/java/net/sourceforge/pmd/renderers/CodeClimateRenderer.java#L151\r\n", "url": "https://github.com/pmd/pmd/issues/2426", "user": "oowekyala", "labels": ["a:bug"], "created": "2020-04-20 08:01:49", "closed": "2020-04-23 09:36:18", "commits": {"a0f127905bad6964eb688782ce3068fb8fb8c501": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "a0f127905bad6964eb688782ce3068fb8fb8c501", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["bc49a8afff5256b7d6a5e8c2ccd736efe7363c1d"], "nameRev": "a0f127905bad6964eb688782ce3068fb8fb8c501 tags/pmd_releases/6.23.0~12", "commitMessage": "[core] CodeClimate renderer links are dead\n\nFixes #2426\n", "commitDateTime": "2020-04-23 10:44:55", "authoredDateTime": "2020-04-23 10:44:55", "commitGitStats": [{"filePath": "docs/pages/pmd/userdocs/pmd_report_formats.md", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/CodeClimateRenderer.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/renderers/CodeClimateRendererTest.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CodeClimateRenderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.renderers.CodeClimateRenderer.getPmdPropertiesURL()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "CodeClimateRendererTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.renderers.CodeClimateRendererTest.getExpectedMultiple()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.CodeClimateRendererTest.getExpected()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.CodeClimateRendererTest.getExpectedWithProperties()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a0f127905bad6964eb688782ce3068fb8fb8c501"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd/renderers"], "changesInPackagesSPOON": ["net.sourceforge.pmd.renderers.CodeClimateRenderer.getPmdPropertiesURL()"]}, {"title": "[core] HTMLRenderer doesn't render links to source files", "body": "**Affects PMD Version:** 6.22.0\r\n\r\n**Description:** When using `-f format` with the properties `-P linkPrefix=https://github.com/user/myproject/blob/master -P linePrefix`, no links are rendered.\r\n\r\n**Steps to reproduce:**\r\n\r\n1.  `bin/run.sh pmd -d pmd-core -R rulesets/java/quickstart.xml -f html -P linkPrefix=https://github.com/pmd/pmd/blob/master -P linePrefix=L`\r\n\r\nThe output looks e.g. like this:\r\n```html\r\n<td align=\"center\">70</td>\r\n<td width=\"*%\">/home/andreas/PMD/source/pmd-github/pmd-core/src/main/java/net/sourceforge/pmd/properties/MethodProperty.java</td>\r\n<td align=\"center\" width=\"5%\">93</td>\r\n<td width=\"*\"><a href=\"https://pmd.github.io/pmd-6.22.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname\">Unnecessary use of fully qualified name 'ValueParserConstants.METHOD_PARSER' due to existing static import 'net.sourceforge.pmd.properties.ValueParserConstants.METHOD_PARSER'</a></td>\r\n</tr>\r\n```\r\n\r\nThere is no \"<a\"-tag ...\r\n\r\nIt should be\r\n\r\n```html\r\n<td align=\"center\">70</td>\r\n<td width=\"*%\"><a href=\"https://github.com/pmd/pmd/blob/master/pmd-core/src/main/java/net/sourceforge/pmd/properties/MethodProperty.java#L93\">/home/andreas/PMD/source/pmd-github/pmd-core/src/main/java/net/sourceforge/pmd/properties/MethodProperty.java</a></td>\r\n<td align=\"center\" width=\"5%\">93</td>\r\n<td width=\"*\"><a href=\"https://pmd.github.io/pmd-6.22.0/pmd_rules_java_codestyle.html#unnecessaryfullyqualifiedname\">Unnecessary use of fully qualified name 'ValueParserConstants.METHOD_PARSER' due to existing static import 'net.sourceforge.pmd.properties.ValueParserConstants.METHOD_PARSER'</a></td>\r\n</tr>\r\n```\r\n\r\n**Running PMD through:** CLI\r\n", "url": "https://github.com/pmd/pmd/issues/2412", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2020-04-11 17:58:13", "closed": "2020-04-23 09:36:17", "commits": {"44e43d618639065a7a71337b6205c1a6db723e86": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "44e43d618639065a7a71337b6205c1a6db723e86", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["85924b5ad185fab7b8a1199bff606da081b0e82b"], "nameRev": "44e43d618639065a7a71337b6205c1a6db723e86 tags/pmd_releases/6.23.0~10^2~4", "commitMessage": "[core] Fix HTMLRenderer not using linkPrefix/linePrefix\n\n* add new option \"htmlExtension\", so that the mechanism can\nbe used with github as well\n* render links for suppressed violations and errors\n\nFixes #2412\n", "commitDateTime": "2020-04-11 20:15:04", "authoredDateTime": "2020-04-11 20:02:48", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/HTMLRenderer.java", "insertions": 46, "deletions": 12, "lines": 58}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/renderers/SummaryHTMLRenderer.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/renderers/AbstractRendererTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/renderers/HTMLRendererTest.java", "insertions": 32, "deletions": 1, "lines": 33}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/renderers/SummaryHTMLRendererTest.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HTMLRenderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.glomRuleViolations(java.io.Writer,java.util.Iterator)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.glomProcessingErrors(java.io.Writer,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.glomSuppressions(java.io.Writer,java.util.List)", "TOT": 11, "UPD": 3, "INS": 2, "MOV": 4, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.glomConfigurationErrors(java.io.Writer,java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.maybeWrap(java.lang.String,java.lang.String)", "TOT": 11, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 4}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.renderFileName(java.lang.String,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.renderRuleName(net.sourceforge.pmd.Rule)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.renderBody(java.io.Writer,net.sourceforge.pmd.Report)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRenderer.start()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SummaryHTMLRenderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.renderers.SummaryHTMLRenderer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.SummaryHTMLRenderer.end()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractRendererTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.renderers.AbstractRendererTest.reportOneViolation()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HTMLRendererTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRendererTest.getExpected(java.lang.String,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRendererTest.testLinkPrefix()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.HTMLRendererTest.getExpected()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "SummaryHTMLRendererTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.renderers.SummaryHTMLRendererTest.getExpectedError(net.sourceforge.pmd.Report.ProcessingError)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.SummaryHTMLRendererTest.testShowSuppressions()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.renderers.SummaryHTMLRendererTest.getRenderer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["44e43d618639065a7a71337b6205c1a6db723e86"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 48, "deletions": 12, "lines": 60, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 42, "UPD": 7, "INS": 16, "MOV": 13, "DEL": 6, "spoonFilesChanged": 2, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd/renderers"], "changesInPackagesSPOON": ["net.sourceforge.pmd.renderers.HTMLRenderer.renderBody(java.io.Writer,net.sourceforge.pmd.Report)", "net.sourceforge.pmd.renderers.SummaryHTMLRenderer.end()", "net.sourceforge.pmd.renderers.HTMLRenderer.glomRuleViolations(java.io.Writer,java.util.Iterator)", "net.sourceforge.pmd.renderers.HTMLRenderer.renderRuleName(net.sourceforge.pmd.Rule)", "net.sourceforge.pmd.renderers.HTMLRenderer.glomConfigurationErrors(java.io.Writer,java.util.List)", "net.sourceforge.pmd.renderers.HTMLRenderer.maybeWrap(java.lang.String,java.lang.String)", "net.sourceforge.pmd.renderers.HTMLRenderer.glomSuppressions(java.io.Writer,java.util.List)", "net.sourceforge.pmd.renderers.HTMLRenderer", "net.sourceforge.pmd.renderers.HTMLRenderer.glomProcessingErrors(java.io.Writer,java.util.List)", "net.sourceforge.pmd.renderers.HTMLRenderer.renderFileName(java.lang.String,int)", "net.sourceforge.pmd.renderers.SummaryHTMLRenderer", "net.sourceforge.pmd.renderers.HTMLRenderer.start()"]}, {"title": "[java] CloseResource possible false positive with Primitive Streams", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex] -->\r\n\r\n**Affects PMD Version:** 6.22.0\r\n\r\n**Rule:**\r\n\r\n[CloseResource](https://pmd.github.io/latest/pmd_rules_java_errorprone.html#closeresource)\r\n\r\n**Description:**\r\n\r\nIn Issue #1922 only java.util.Stream got handled, now the same false/positives occure on IntStream, LongStream and DoubleStream\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class PmdPrimitiveStreamReproducer {\r\n\r\n    public void reproduceIntStream() {\r\n        IntStream iStream = IntStream.of(1).filter(i -> i < 5);\r\n        iStream.anyMatch(i -> i < 5);\r\n    }\r\n\r\n\r\n    public void reproduceLongStream() {\r\n        LongStream lStream = LongStream.of(1).filter(i -> i < 5);\r\n        lStream.anyMatch(i -> i < 5);\r\n    }\r\n\r\n\r\n    public void reproduceDoubleStream() {\r\n        DoubleStream dStream = DoubleStream.of(1).filter(i -> i < 5);\r\n        dStream.anyMatch(i -> i < 5);\r\n    }\r\n\r\n}\r\n\r\n```\r\n\r\n**Expected outcome:** no violation should be thrown\r\n\r\n*   Does PMD report a violation, where there shouldn't be one? -> false-positive\r\n\r\n\r\n\r\n**Running PMD through:** *[ Gradle | IntelliJ]*\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/2402", "user": "BerndFarkaDyna", "labels": ["a:bug", "a:false-positive", "has:pr"], "created": "2020-04-05 06:59:31", "closed": "2020-04-06 18:35:16", "commits": {"d64ea87bbc1c3ff98f3e372e334cd12924f40dec": {"commitGHEventType": "closed", "commitUser": "adangel"}, "41c56803af6d1ae9da2f55e0ef8d72acc0029881": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "d64ea87bbc1c3ff98f3e372e334cd12924f40dec", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["f28bdbed5ee9f59826e91fbfb2cf8c86366bc7dc"], "nameRev": "d64ea87bbc1c3ff98f3e372e334cd12924f40dec tags/pmd_releases/6.23.0~28^2", "commitMessage": "[doc] Update release notes, refs #2403, fixes #2402\n", "commitDateTime": "2020-04-06 20:07:47", "authoredDateTime": "2020-04-06 20:07:47", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "41c56803af6d1ae9da2f55e0ef8d72acc0029881", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["0356895cc2e6afc6379afa104e55def2b6f0310f", "d64ea87bbc1c3ff98f3e372e334cd12924f40dec"], "nameRev": "41c56803af6d1ae9da2f55e0ef8d72acc0029881 tags/pmd_releases/6.23.0~28", "commitMessage": "Merge branch 'pr-2403'\n\n[java] #2402 fix false-positives on Primitive Streams #2403\n", "commitDateTime": "2020-04-06 20:07:55", "authoredDateTime": "2020-04-06 20:07:55", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/CloseResourceRule.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/errorprone/xml/CloseResource.xml", "insertions": 29, "deletions": 0, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CloseResourceRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.errorprone.CloseResourceRule", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[javascript] Support for-of loop", "body": "**Affects PMD Version:** \r\n\r\n6.22.0\r\n\r\n**Description:**\r\n\r\nThe for-of loop is recognised incorrectly as an \"EmptyStatement\".\r\n\r\nThat's an [ES6 / ECMAScript 2015](https://www.ecma-international.org/ecma-262/6.0/#sec-for-in-and-for-of-statements) feature.\r\n\r\nIt seems to be partially supported by Rhino: http://mozilla.github.io/rhino/compat/engines.html\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```javascript\r\n// Generates \"ForInLoop\" in AST\r\nfor (var item in items) {}\r\n\r\n// Generate \"EmptyStatement\" in AST\r\nfor (var item of items) {}\r\nfor (let item of items) {}\r\nfor (const item of items) {}\r\n```\r\n![image](https://user-images.githubusercontent.com/10981949/77306398-8609e380-6cef-11ea-9654-b86f5af002c5.png)\r\n\r\n**Steps to reproduce:**\r\n\r\n1. Start PMD Designer\r\n2. Set language to Ecmascript\r\n3. Copy-paste code sample from above\r\n4. Observe AST for incorrect \"EmptyStatement\"\r\n\r\n**Running PMD through:** Designer\r\n\r\nRelated issues: #2305 #1235 #699 \r\n", "url": "https://github.com/pmd/pmd/issues/2379", "user": "hudec117", "labels": ["a:bug", "has:pr"], "created": "2020-03-23 10:23:22", "closed": "2020-04-20 09:53:57", "commits": {"e2ee78dae3c4b311ca0e7e02fc369e749d27a177": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "e2ee78dae3c4b311ca0e7e02fc369e749d27a177", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["954bfb28d4b0f19bca4fd41d5522d4a5beed391d"], "nameRev": "e2ee78dae3c4b311ca0e7e02fc369e749d27a177 tags/pmd_releases/6.23.0~14^2~1", "commitMessage": "[javascript] Add support for ES6 version and use that as default\n\nFixes #1235\nFixes #2379\n", "commitDateTime": "2020-04-16 16:42:16", "authoredDateTime": "2020-04-16 16:32:49", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/EcmascriptParserOptions.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTForInLoop.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/EcmascriptParserOptionsTest.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTForInLoopTest.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTVariableDeclarationTest.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EcmascriptParserOptions.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.EcmascriptParserOptions", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.EcmascriptParserOptions.Version", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTForInLoop.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.ast.ASTForInLoop.isForOf()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EcmascriptParserOptionsTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.EcmascriptParserOptionsTest.testDefaults()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.EcmascriptParserOptionsTest.suite()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ASTForInLoopTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.ast.ASTForInLoopTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTVariableDeclarationTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.ast.ASTVariableDeclarationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[apex] Invalid Apex in Cognitive Complexity tests ", "body": "The [Cognitive Complexity rule](https://pmd.github.io/latest/pmd_rules_apex_design.html#cognitivecomplexity) added by @gwilymatgearset in PMD 6.22 (#2297) has text sample code that is no valid Apex.\r\n\r\nPlease check and fix ALL instances but here are a few issues:\r\n- Uses double quotes instead of single quotes for Strings\r\n- Uses Lowercase Type names string instead of String\r\n- method setPhoneNumberIfNotExisting is missing a return;\r\n\r\nHere's the example code, that needs to be fixed:\r\nhttps://github.com/pmd/pmd/blob/31bf08af547b6f2028d878114bbceeeacb113349/pmd-apex/src/main/resources/category/apex/design.xml#L112-L143\r\n", "url": "https://github.com/pmd/pmd/issues/2358", "user": "rsoesemann", "labels": ["a:bug"], "created": "2020-03-17 10:50:29", "closed": "2020-03-27 18:14:10", "commits": {"409b35d4aa3744cf6d2077f77c2d6df2429d26ef": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "409b35d4aa3744cf6d2077f77c2d6df2429d26ef", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["6042b6938549cacec7d8dd8982d61c13510679c6"], "nameRev": "409b35d4aa3744cf6d2077f77c2d6df2429d26ef tags/pmd_releases/6.23.0~44", "commitMessage": "[doc] Update release notes, refs #2383, fixes #2358\n", "commitDateTime": "2020-03-27 22:35:06", "authoredDateTime": "2020-03-27 22:35:06", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] NullPointerException while running parsing test for CREATE TRIGGER", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.21.0\r\n\r\n**Description:** Below error appears when I try to run simple test case for CREATE TRIGGER statement. Code with CREATE TRIGGER is parsed correctly (it can be checked in Designer), but checking it with PMD also results in below exception.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nTestcase:\r\n    @Test\r\n    public void parseCreateTrigger() {\r\n        plsql.parseResource(\"trigger_unit.sql\");\r\n    }\r\n\r\ntrigger_unit.sql:\r\n\r\ncreate or replace trigger test_trigger\r\ninstead of update\r\non test_table\r\nfor each row\r\nbegin\r\n  test.clr;\r\nend;\r\n/\r\n\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.plsql.ast.AbstractPLSQLNode.getScope(AbstractPLSQLNode.java:136)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.AbstractPLSQLNode.getScope(AbstractPLSQLNode.java:136)\r\n\tat net.sourceforge.pmd.lang.plsql.dfa.VariableAccessVisitor.collectDeclarations(VariableAccessVisitor.java:122)\r\n\tat net.sourceforge.pmd.lang.plsql.dfa.VariableAccessVisitor.markUsages(VariableAccessVisitor.java:90)\r\n\tat net.sourceforge.pmd.lang.plsql.dfa.VariableAccessVisitor.computeNow(VariableAccessVisitor.java:76)\r\n\tat net.sourceforge.pmd.lang.plsql.dfa.VariableAccessVisitor.compute(VariableAccessVisitor.java:61)\r\n\tat net.sourceforge.pmd.lang.plsql.dfa.DataFlowFacade.visit(DataFlowFacade.java:79)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.ASTTriggerUnit.jjtAccept(ASTTriggerUnit.java:24)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.AbstractPLSQLNode.childrenAccept(AbstractPLSQLNode.java:64)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParserVisitorAdapter.visit(PLSQLParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParserVisitorAdapter.visit(PLSQLParserVisitorAdapter.java:16)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.ASTInput.jjtAccept(ASTInput.java:25)\r\n\tat net.sourceforge.pmd.lang.plsql.dfa.DataFlowFacade.initializeWith(DataFlowFacade.java:36)\r\n\tat net.sourceforge.pmd.lang.plsql.PLSQLHandler$1.start(PLSQLHandler.java:60)\r\n\tat net.sourceforge.pmd.lang.ast.test.BaseParsingHelper.parse(BaseParsingHelper.kt:116)\r\n\tat net.sourceforge.pmd.lang.ast.test.BaseParsingHelper.parseResource(BaseParsingHelper.kt:130)\r\n\tat net.sourceforge.pmd.lang.ast.test.BaseParsingHelper.parseResource$default(BaseParsingHelper.kt:129)\r\n\tat net.sourceforge.pmd.lang.ast.test.BaseParsingHelper.parseResource(BaseParsingHelper.kt)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.ViewTest.parseCreateViewAndTrigger(ViewTest.java:30)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:567)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n\r\n\r\n```\r\n\r\n**Running PMD through:** *[Maven]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/2325", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2020-03-03 16:57:28", "closed": "2020-03-12 10:01:49", "commits": {"4468db24283a99f073103d84bcd66c1fc2420906": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "4468db24283a99f073103d84bcd66c1fc2420906", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["38ce869b124e5e3605b426011cf380ca52010c25"], "nameRev": "4468db24283a99f073103d84bcd66c1fc2420906 tags/pmd_releases/6.22.0~11^2~1", "commitMessage": "[core] Call SymbolFacade without classloader by default\n\nThis allows languages, that don't need a classloader while creating\nsymbol table to just override the one method.\nIn the test, we call always the overloaded method with class loader\nwith made the symbol table processing not being run for tests\nin plsql.\n\nFixes #2325\n", "commitDateTime": "2020-03-06 10:59:02", "authoredDateTime": "2020-03-06 10:59:02", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/lang/AbstractLanguageVersionHandler.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/AbstractPLSQLNode.java", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/ast/ASTExtractExpressionTest.java", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/ast/TriggerTest.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "pmd-plsql/src/test/resources/net/sourceforge/pmd/lang/plsql/ast/TriggerUnit.pls", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractLanguageVersionHandler.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.AbstractLanguageVersionHandler.getSymbolFacade(java.lang.ClassLoader)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AbstractPLSQLNode.java", "spoonMethods": []}, {"spoonFilePath": "ASTExtractExpressionTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.plsql.ast.ASTExtractExpressionTest.testXml()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.lang.plsql.ast.ASTExtractExpressionTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TriggerTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.plsql.ast.TriggerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4468db24283a99f073103d84bcd66c1fc2420906"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 6, "lines": 7, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast", "pmd-core/src/main/java/net/sourceforge/pmd/lang"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.AbstractLanguageVersionHandler.getSymbolFacade(java.lang.ClassLoader)"]}, {"title": "[java] Parse errors with yield statement", "body": "**Affects PMD Version:** 6.21.0\r\n\r\n**Description:** Our parser is not conservative enough when it comes to parsing yield statements. For now javac has the following behaviour:\r\n- [ ] yield *may* only start a yield statement inside a switch\r\n- [ ] even in this case, yield is only tokenized as a statement if it's followed by a token that may start an expression (eg not `=`), allowing `yield = 0;` to parse as an assignment\r\n- [ ] if it's followed by an opening parenthesis, javac counts the commas (balancing parentheses), to allow eg `yield(a,b);` or `yield((a),b);` to parse as method calls\r\n\r\nhttps://hg.openjdk.java.net/jdk/jdk/file/bc3da0226ffa/src/jdk.compiler/share/classes/com/sun/tools/javac/parser/JavacParser.java#l2580\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\nclass Foo {\r\n {\r\n  int yield = 0;\r\n  yield = 0; // not even inside a switch  (currently an error)\r\n  yield(2);  // not even inside a switch, should be a method call  (currently an error)\r\n\r\n  switch (e) {\r\n    case 1 -> {\r\n       yield(a,b); // should be a method call     (currently an error)\r\n       yield = 2;  // should be an assignment     (currently an error)\r\n       yield (2);  // should be a yield statement (currently ok)\r\n    }\r\n  }\r\n }\r\n}\r\n```\r\n\r\nThe parse exception is either `yield statements are only supported on java 13 preview` or \r\n```\r\nEncountered \"=\" at line ....\r\nWas expecting one of:\r\n    \"++\" ...\r\n    \"--\" ...\r\n    \"+\" ...\r\n    \"-\" ... \r\n```", "url": "https://github.com/pmd/pmd/issues/2319", "user": "oowekyala", "labels": ["a:bug", "has:pr", "in:ast"], "created": "2020-02-27 20:59:21", "closed": "2020-04-04 16:31:15", "commits": {"69ed0464a7ece1d36fd710c675fbbbcd3a710df0": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "69ed0464a7ece1d36fd710c675fbbbcd3a710df0", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["5ed857070373f222ad6d8aa69b797574ba9b258e", "7c433f882039cfc2082b1fbef25a4eae25f7f0dc"], "nameRev": "69ed0464a7ece1d36fd710c675fbbbcd3a710df0 tags/pmd_releases/6.23.0~30", "commitMessage": "Merge branch 'pr-2385'\n\n[java] Make yield statements more conditional #2385\n\nFixes #2319\n", "commitDateTime": "2020-04-04 18:20:49", "authoredDateTime": "2020-04-04 18:20:49", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/AbstractNode.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/Node.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-java/etc/grammar/Java.jjt", "insertions": 54, "deletions": 3, "lines": 57}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/Java14Test.java", "insertions": 58, "deletions": 1, "lines": 59}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/ast/jdkversiontests/java14/YieldStatements.java", "insertions": 35, "deletions": 0, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractNode.java", "spoonMethods": []}, {"spoonFilePath": "Node.java", "spoonMethods": []}, {"spoonFilePath": "Java14Test.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.Java14Test.checkYieldConditionalBehaviour()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.Java14Test.checkYieldConditionalBehaviourJ14()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.Java14Test.checkYieldStatements(net.sourceforge.pmd.lang.java.JavaParsingHelper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "YieldStatements.java", "spoonMethods": [{"spoonMethodName": "SPOON_EXCEPTION"}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[java] Documenation for DoNotUseThreads is outdated", "body": "**Rule:**\r\n[DoNotUseThreads](https://pmd.github.io/latest/pmd_rules_java_multithreading.html#donotusethreads)\r\n\r\n**Description:**\r\nThe documentation in [here](https://pmd.github.io/pmd/pmd_rules_java_multithreading.html#donotusethreads) still shows Runnable as a problematic pattern. However, according to [this issue](https://github.com/pmd/pmd/issues/1627) this is no longer the case. Running the tool doesn't flag Runnable either.\r\n\r\n--> The example needs to be updated to not show \"Runnable\" as problematic:\r\nhttps://github.com/pmd/pmd/blob/90f286a4a156ecb467eec76c96d2bd3a233860f9/pmd-java/src/main/resources/category/java/multithreading.xml#L142-L157", "url": "https://github.com/pmd/pmd/issues/2313", "user": "franciscodua", "labels": ["a:bug", "good first issue", "has:pr", "in:documentation"], "created": "2020-02-26 14:50:36", "closed": "2020-04-06 18:35:15", "commits": {"dcde4258b389f173348c0cddbcdfa7cf57e2c291": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 40.000277777777775, "commitsDetails": [{"commitHash": "dcde4258b389f173348c0cddbcdfa7cf57e2c291", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["0356895cc2e6afc6379afa104e55def2b6f0310f"], "nameRev": "dcde4258b389f173348c0cddbcdfa7cf57e2c291 tags/pmd_releases/6.23.0~27^2~1", "commitMessage": "Update DoNotUseThreads rule documentation\n\nFixes #2313 [java] Documentation for DoNotUseThreads is outdated\n", "commitDateTime": "2020-04-05 11:34:51", "authoredDateTime": "2020-04-05 11:34:51", "commitGitStats": [{"filePath": "pmd-java/src/main/resources/category/java/multithreading.xml", "insertions": 22, "deletions": 4, "lines": 26}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dcde4258b389f173348c0cddbcdfa7cf57e2c291"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[apex] Switch statements are not parsed/supported", "body": "> Switch statements. It seems like these don't parse in the current version of PMD?\r\n>\r\n\r\n@adangel I just reread this and saw that Apex switch statement still not seem to be supported. I am sure we added such a contribution long ago. Can you recall if that's true and already released?\r\n\r\n_Originally posted by @rsoesemann in https://github.com/pmd/pmd/pull/2297#issuecomment-589738458_\r\n\r\nExample (from https://developer.salesforce.com/docs/atlas.en-us.apexcode.meta/apexcode/langCon_apex_switch.htm):\r\n\r\n```java\r\npublic class ApexSwitchStatements {\r\n    public void example1() {\r\n        int i = 3;\r\n        switch on i {\r\n           when 2 {\r\n               System.debug('when block 2');\r\n           }\r\n           when 3, 4, 5 {\r\n               System.debug('when block 3 and 4 and 5');\r\n           }\r\n           when 6, 7 {\r\n               System.debug('when block 6 and 7');\r\n           }\r\n           when -3 {\r\n               System.debug('when block -3');\r\n           }\r\n           when null {\r\n               System.debug('bad integer');\r\n           }\r\n           when else {\r\n               System.debug('default');\r\n           }\r\n        }\r\n    }\r\n\r\n    public void example2() {\r\n        int i = 1;\r\n        switch on someInteger(i) {\r\n           when 2 {\r\n               System.debug('when block 2');\r\n           }\r\n           when 3 {\r\n               System.debug('when block 3');\r\n           }\r\n           when else {\r\n               System.debug('default');\r\n           }\r\n        }\r\n    }\r\n    private int someInteger(int i) {\r\n        return i + 1;\r\n    }\r\n\r\n    public void example3() {\r\n        switch on sobject {\r\n           when Account a {\r\n               System.debug('account ' + a);\r\n           }\r\n           when Contact c {\r\n               System.debug('contact ' + c);\r\n           }\r\n           when null {\r\n               System.debug('null');\r\n           }\r\n           when else {\r\n               System.debug('default');\r\n           }\r\n        }\r\n    }\r\n\r\n    public void example4() {\r\n        switch on season {\r\n           when WINTER {\r\n               System.debug('boots');\r\n           }\r\n           when SPRING, SUMMER {\r\n               System.debug('sandals');\r\n           }\r\n           when else {\r\n               System.debug('none of the above');\r\n           }\r\n        }\r\n    }\r\n}\r\n```", "url": "https://github.com/pmd/pmd/issues/2306", "user": "adangel", "labels": ["a:bug"], "created": "2020-02-22 10:22:00", "closed": "2020-02-29 09:36:28", "commits": {"00c2d5cc6bf099a379d4ad056a838cac97612506": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "00c2d5cc6bf099a379d4ad056a838cac97612506", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["d21e2565ae2aa89cabde1f1c92509b63d6d92149"], "nameRev": "00c2d5cc6bf099a379d4ad056a838cac97612506 tags/pmd_releases/6.22.0~30^2~3", "commitMessage": "[apex] Add parser support for Switch Statements\n\nFixes #2306\n", "commitDateTime": "2020-02-22 14:54:28", "authoredDateTime": "2020-02-22 14:54:28", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTElseWhenBlock.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTIdentifierCase.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTLiteralCase.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTSwitchStatement.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTTypeWhenBlock.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTValueWhenBlock.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ApexParserVisitor.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ApexParserVisitorAdapter.java", "insertions": 30, "deletions": 0, "lines": 30}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ApexTreeBuilder.java", "insertions": 47, "deletions": 3, "lines": 50}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/AbstractApexRule.java", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "pmd-apex/src/test/java/net/sourceforge/pmd/lang/apex/ast/ASTSwitchStatementTest.java", "insertions": 42, "deletions": 0, "lines": 42}, {"filePath": "pmd-apex/src/test/resources/net/sourceforge/pmd/lang/apex/ast/SwitchStatements.cls", "insertions": 74, "deletions": 0, "lines": 74}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ASTElseWhenBlock.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ASTElseWhenBlock", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTIdentifierCase.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ASTIdentifierCase", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTLiteralCase.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ASTLiteralCase", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTSwitchStatement.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatement", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTTypeWhenBlock.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ASTTypeWhenBlock", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTValueWhenBlock.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ASTValueWhenBlock", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ApexParserVisitor.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatement,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTElseWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTTypeWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTValueWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTLiteralCase,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTIdentifierCase,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ApexParserVisitorAdapter.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatement,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTElseWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTTypeWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTValueWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTIdentifierCase,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTLiteralCase,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ApexTreeBuilder.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.register(java.lang.Class,java.lang.Class)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.SwitchStatement,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.ElseWhenBlock,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.TypeWhenBlock,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.ValueWhenBlock,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.WhenCases.LiteralCase,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.WhenCases.IdentifierCase,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractApexRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatement,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTElseWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTTypeWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTValueWhenBlock,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTIdentifierCase,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTLiteralCase,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTSwitchStatementTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatementTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00c2d5cc6bf099a379d4ad056a838cac97612506"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 251, "deletions": 3, "lines": 254, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 37, "UPD": 1, "INS": 36, "MOV": 0, "DEL": 0, "spoonFilesChanged": 10, "spoonMethodsChanged": 32}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast", "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTElseWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.TypeWhenBlock,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTLiteralCase,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ASTIdentifierCase", "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTLiteralCase,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.SwitchStatement,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.ElseWhenBlock,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTElseWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTElseWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder", "net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatement", "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatement,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.WhenCases.IdentifierCase,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTValueWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ASTTypeWhenBlock", "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTValueWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.ValueWhenBlock,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatement,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTIdentifierCase,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTTypeWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTTypeWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTLiteralCase,java.lang.Object)", "net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(net.sourceforge.pmd.lang.apex.ast.ASTIdentifierCase,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ASTValueWhenBlock", "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.visit(apex.jorje.semantic.ast.statement.WhenCases.LiteralCase,apex.jorje.semantic.ast.visitor.AdditionalPassScope)", "net.sourceforge.pmd.lang.apex.ast.ApexTreeBuilder.register(java.lang.Class,java.lang.Class)", "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTTypeWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTValueWhenBlock,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ASTElseWhenBlock", "net.sourceforge.pmd.lang.apex.ast.ApexParserVisitorAdapter.visit(net.sourceforge.pmd.lang.apex.ast.ASTSwitchStatement,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.visit(net.sourceforge.pmd.lang.apex.ast.ASTIdentifierCase,java.lang.Object)", "net.sourceforge.pmd.lang.apex.ast.ASTLiteralCase"]}, {"title": "[java] JavaRuleViolation reports wrong class name", "body": "**Affects PMD Version:** 6.20.0\r\n\r\n**Description:**\r\n\r\nIn some cases, the reported class is wrong. This might be a regression of #2105 .\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npackage pkg;\r\npublic class Foo {\r\n    int a;\r\n}\r\n```\r\n\r\nIf e.g. UnusedField is reported on the node \"FieldDeclaration\", then the resulting class name is \"Foo$Foo\" instead of just \"Foo\".\r\n\r\n```xml\r\n<violation beginline=\"3\" endline=\"3\" begincolumn=\"4\" endcolumn=\"9\" rule=\"UnusedPrivateField\" ruleset=\"Best Practices\" package=\"pkg\" class=\"Foo$Foo\" variable=\"a\" externalInfoUrl=\"https://pmd.github.io/pmd-6.20.0/pmd_rules_java_bestpractices.html#unusedprivatefield\" priority=\"3\">\r\n Avoid unused private fields such as 'a'.\r\n </violation>\r\n```\r\n\r\nNote, that this only affects nodes, the are descendants of the class declaration. If the violation is created directly on the class node, then the class name is fine.\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\n", "url": "https://github.com/pmd/pmd/issues/2212", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2020-01-11 11:34:30", "closed": "2020-01-12 22:34:34", "commits": {"bc92fa45907c96f7d0697d5189356253a19f8c43": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "bc92fa45907c96f7d0697d5189356253a19f8c43", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["271efff28997e99620c4dda06a43fe3f73f03200"], "nameRev": "bc92fa45907c96f7d0697d5189356253a19f8c43 tags/pmd_releases/6.21.0~23^2~1", "commitMessage": "[java] JavaRuleViolation reports wrong class name\n\nFixes #2212\n", "commitDateTime": "2020-01-11 12:51:21", "authoredDateTime": "2020-01-11 12:51:21", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/JavaRuleViolation.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/JavaRuleViolationTest.java", "insertions": 30, "deletions": 3, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JavaRuleViolation.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.JavaRuleViolation.setClassNameFrom(net.sourceforge.pmd.lang.java.ast.JavaNode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JavaRuleViolationTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.JavaRuleViolationTest.testPackageAndClassName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.JavaRuleViolationTest.testInnerClass()", "TOT": 7, "UPD": 1, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.JavaRuleViolationTest.testPackageAndClassNameForField()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bc92fa45907c96f7d0697d5189356253a19f8c43"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.rule.JavaRuleViolation.setClassNameFrom(net.sourceforge.pmd.lang.java.ast.JavaNode)"]}, {"title": "[cs] CPD doesn't understand alternate using statement syntax with C# 8.0", "body": "\r\nAffects PMD Version: Current\r\n\r\nCPD treats the following as if it was a using directive when using the --ignoreUsings flag.\r\n\r\n``` \r\nusing var font1 = new Font(\"Arial\", 10.0f);\r\n```\r\n\r\nThis makes --ignoreUsings less useful, as, if you are using C# 8.0 the flag will mean less duplication show up, as --ignoreUsings turns that into a random string.\r\n\r\nRunning PMD through: CLI\r\n", "url": "https://github.com/pmd/pmd/issues/2139", "user": "mayerj", "labels": ["a:bug"], "created": "2019-11-29 15:04:01", "closed": "2020-02-29 10:51:36", "commits": {"bdfbfae231ce437f6c9a6a67e7a313b6295a9632": {"commitGHEventType": "closed", "commitUser": "adangel"}, "b65a6a52eace051d05fa7b99c4b33a773c5c56de": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 91.00027777777778, "commitsDetails": [{"commitHash": "bdfbfae231ce437f6c9a6a67e7a313b6295a9632", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["659e709f7988a5cda6338d8820bde289a22d5f62"], "nameRev": "bdfbfae231ce437f6c9a6a67e7a313b6295a9632 tags/pmd_releases/6.22.0~29^2~2", "commitMessage": "C# tokenizer is now Antlr-based.\n\nThis is based on the Antlr grammar from https://github.com/antlr/grammars-v4/tree/master/csharp.\n\nThis adds column information for C# and fixes #2139.\n", "commitDateTime": "2020-02-12 11:46:12", "authoredDateTime": "2020-02-12 11:19:20", "commitGitStats": [{"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/token/internal/BaseTokenFilterTest.java", "insertions": 190, "deletions": 0, "lines": 190}, {"filePath": "pmd-cs/pom.xml", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "pmd-cs/src/main/antlr4/net/sourceforge/pmd/lang/cs/antlr4/CSharpLexer.g4", "insertions": 1105, "deletions": 0, "lines": 1105}, {"filePath": "pmd-cs/src/main/java/net/sourceforge/pmd/cpd/CsTokenizer.java", "insertions": 109, "deletions": 266, "lines": 375}, {"filePath": "pmd-cs/src/test/java/net/sourceforge/pmd/cpd/CsTokenizerTest.java", "insertions": 17, "deletions": 6, "lines": 23}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "b65a6a52eace051d05fa7b99c4b33a773c5c56de", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["4bd5a159e504b7f92e00e779da214c4ca102f0b8"], "nameRev": "b65a6a52eace051d05fa7b99c4b33a773c5c56de tags/pmd_releases/6.22.0~29^2", "commitMessage": "[doc] Update release notes, fixes #2139, refs #2280.\n", "commitDateTime": "2020-02-29 11:34:50", "authoredDateTime": "2020-02-29 11:34:50", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bdfbfae231ce437f6c9a6a67e7a313b6295a9632"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1214, "deletions": 266, "lines": 1480, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-cs/src/main/java/net/sourceforge/pmd/cpd", "pmd-cs/src/main/antlr4/net/sourceforge/pmd/lang/cs/antlr4"]}, {"title": "[java] Parser exception for parameterized constructor call", "body": "**Affects PMD Version:** \r\nSo far tested in pmd versions greater than 6.11.0\r\n**Rule:**\r\nCloseResource\r\n**Description:**\r\nWe have been using pmd for our codechecks. while instantiating a ArrayList object with specific syntax:\r\n\r\n```java\r\njukebox(new <Long>ArrayList(test));\r\n```\r\npmd throws parser exception and I hope it is syntactically right statement. But anyhow if i write the statement as:\r\n\r\n```java\r\njukebox(new ArrayList<Long>(test));\r\n```\r\nparser generates tree without any error. \r\n\r\nDetailed Exception:\r\n\r\n```\r\nnet.sourceforge.pmd.lang.java.ast.ParseException: Encountered \" \"<\" \"< \"\" at line 4, column 29.\r\nWas expecting one of:\r\n    <IDENTIFIER> ...\r\n    \"@\" ...\r\n    \"@\" ...\r\n    \"@\" ...\r\n    \"@\" ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    \r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.generateParseException(JavaParser.java:11937)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.jj_consume_token(JavaParser.java:11821)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.AllocationExpression(JavaParser.java:4654)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.PrimaryPrefix(JavaParser.java:3918)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.PrimaryExpression(JavaParser.java:3731)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.PostfixExpression(JavaParser.java:3593)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.UnaryExpressionNotPlusMinus(JavaParser.java:3555)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.UnaryExpression(JavaParser.java:3408)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.MultiplicativeExpression(JavaParser.java:3302)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.AdditiveExpression(JavaParser.java:3249)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ShiftExpression(JavaParser.java:3192)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.RelationalExpression(JavaParser.java:3131)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.InstanceOfExpression(JavaParser.java:3095)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.EqualityExpression(JavaParser.java:3042)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.AndExpression(JavaParser.java:3002)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ExclusiveOrExpression(JavaParser.java:2962)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.InclusiveOrExpression(JavaParser.java:2922)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalAndExpression(JavaParser.java:2882)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalOrExpression(JavaParser.java:2842)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalExpression(JavaParser.java:2804)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.Expression(JavaParser.java:2661)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ArgumentList(JavaParser.java:4561)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.Arguments(JavaParser.java:4525)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.PrimarySuffix(JavaParser.java:4330)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.PrimaryExpression(JavaParser.java:3739)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.PostfixExpression(JavaParser.java:3593)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.StatementExpression(JavaParser.java:5171)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.Statement(JavaParser.java:4820)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.BlockStatement(JavaParser.java:4974)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.Block(JavaParser.java:4932)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.MethodDeclaration(JavaParser.java:1615)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBodyDeclaration(JavaParser.java:1239)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBody(JavaParser.java:1194)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceDeclaration(JavaParser.java:650)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.TypeDeclaration(JavaParser.java:539)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParser.CompilationUnit(JavaParser.java:276)\r\n\tat net.sourceforge.pmd.lang.java.AbstractJavaParser.parse(AbstractJavaParser.java:59)\r\n\tat net.sourceforge.pmd.util.fxdesigner.model.ASTManager.updateIfChanged(ASTManager.java:93)\r\n\tat net.sourceforge.pmd.util.fxdesigner.SourceEditorController.refreshAST(SourceEditorController.java:212)\r\n\tat net.sourceforge.pmd.util.fxdesigner.MainDesignerController.refreshAST(MainDesignerController.java:196)\r\n\tat com.sun.javafx.application.PlatformImpl.lambda$null$172(PlatformImpl.java:295)\r\n\tat java.security.AccessController.doPrivileged(Native Method)\r\n\tat com.sun.javafx.application.PlatformImpl.lambda$runLater$173(PlatformImpl.java:294)\r\n\tat com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)\r\n\tat com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method)\r\n\tat com.sun.glass.ui.gtk.GtkApplication.lambda$null$48(GtkApplication.java:139)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\r\n\r\n```\r\n**Code Sample demonstrating the issue:**\r\n\r\nError snippet:\r\n\r\n```java\r\npublic class test {\r\n\tpublic static void main(String a[]){\r\n\t\tVector<Long> test = null;\r\n\t\tjukebox(new <Long>ArrayList(test));\r\n\t}\r\n\tprivate static void jukebox(ArrayList<Long> arrayList) {\r\n\r\n\t}\r\n}\r\n```\r\n\r\nJava Enivronment:\r\n```\r\njava version \"1.7.0_25\"\r\nJava(TM) SE Runtime Environment (build 1.7.0_25-b15)\r\nJava HotSpot(TM) 64-Bit Server VM (build 23.25-b01, mixed mode)\r\n\r\n```\r\nIssue  also persists in java 1.8( tested in openjdk, zulu jdk and as well as SE).\r\n \r\nAny help is appreciated!\r\n\r\n**Running PMD through:** *[CLI | Designer]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/2119", "user": "logesh14", "labels": ["a:bug"], "created": "2019-11-18 15:27:01", "closed": "2019-11-18 18:38:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] Wrong name for inner classes in violations", "body": "**Affects PMD Version:** \r\n6.19.0\r\n\r\n**Rule:**\r\nany\r\n\r\n**Description:**\r\nWhen a Java class has inner classes, their classname is not correctly reported when looking at the class itself. This is not an issue for code inside a class, but the inner class declaration itself.\r\n\r\n**Code Sample demonstrating the issue:**\r\n```java\r\nclass Foo { // classname: Foo -> correct\r\n    class Bar { // classname Foo -> wrong, should be Foo$Bar\r\n    } \r\n}\r\n```\r\n\r\n**Running PMD through:** *[Java API | any]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/2105", "user": "andipabst", "labels": ["a:bug", "has:pr"], "created": "2019-11-12 12:50:35", "closed": "2019-11-15 07:58:47", "commits": {"6bf6e2240cb5f362c13e62842315c759397e8126": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "6bf6e2240cb5f362c13e62842315c759397e8126", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["60f11fcb7df52e7d16de720796c1e2ba6477138d"], "nameRev": "6bf6e2240cb5f362c13e62842315c759397e8126 tags/pmd_releases/6.20.0~21^2", "commitMessage": "[doc] Update release notes, refs #2106, fixes #2105\n", "commitDateTime": "2019-11-15 08:51:43", "authoredDateTime": "2019-11-15 08:51:43", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[core] Referencing category errorprone.xml produces deprecation warnings for InvalidSlf4jMessageFormat", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** \r\n\r\n6.19.0\r\n\r\n**Rule:**\r\n\r\ncategory/java/errorprone.xml\r\n\r\n**Description:**\r\n\r\nAfter upgrading from `6.17.0` to `6.19.0` started seeing deprecation warnings for a rule that is never explicitly referenced (InvalidSlf4jMessageFormat):\r\n\r\n`Use Rule name category/java/errorprone.xml/InvalidLogMessageFormat instead of the deprecated Rule name category/java/errorprone.xml/InvalidSlf4jMessageFormat. PMD 7.0.0 will remove support for this deprecated Rule name usage.`\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n<rule ref=\"category/java/errorprone.xml\"/>\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\n\r\nGradle\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/2096", "user": "cmuchinsky", "labels": ["a:bug", "has:pr"], "created": "2019-11-03 12:10:00", "closed": "2019-11-08 02:54:52", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[apex] ApexLexer logs visible when Apex is the selected language upon starting the designer", "body": "**Describe the bug**\r\nWhen the designer is open, **if** Apex is the currently selected language, the console outputs:\r\n\r\n```\r\nOct 29, 2019 10:42:39 PM apex.jorje.parser.impl.BaseApexLexer dedupe\r\nINFO: Deduped array ApexLexer.DFA22_transition. Found 7272051 shorts which is 13MB not including array overhead. Removed 6615472 shorts which is 12MB not counting array overhead. Took 5 ms.\r\n```\r\n\r\nWhich seems to ignore the fixes introduced in https://github.com/pmd/pmd/pull/503\r\n\r\nIf upon opening the designer the language is not Apex, simply changing it to apex would not produce the logs. It has to be the selected language upon executing the designer.\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior:\r\n1. Launch the designer from run.sh\r\n2. Change the language to Apex\r\n3. Close the desinger\r\n4. Restart the designer from CLI\r\n5. See error\r\n\r\n**Expected behavior**\r\nNo ApexLexer logs should be visible.\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/2092", "user": "jsotuyod", "labels": ["a:bug", "has:pr"], "created": "2019-10-30 05:48:08", "closed": "2019-11-04 02:24:53", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[core] Incorrect logging of deprecated/renamed rules", "body": "With the logging, there seem to be more issues:\r\n* deprecation warning is logged twice, although the rule is referenced only once\r\n* if the complete category ruleset is referenced, the deprecation warning is logged once - but I think, in that case, we should not consider renamed rules and ignore such deprecated rules\r\n* if the complete category ruleset is referenced and the deprecated rule is excluded, we still log the deprecation warning. this looks totally wrong.\r\n\r\nThis logging is somehow related to #2059, which is just a special case.\r\nFixing these issues is outside of the scope of this PR.\r\n\r\n_Originally posted by @adangel in https://github.com/pmd/pmd/pull/2054#issuecomment-546582446_", "url": "https://github.com/pmd/pmd/issues/2082", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-10-26 08:30:24", "closed": "2019-10-29 18:52:09", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[core] Build issue on Windows", "body": "**Affects PMD Version:**  Freshly checked out master (commit bf2bece0856dd7c9d1a6a8ea976bc0f798e67413) \r\n\r\n**Description:** Tests fail during build on Windows due to file separator issues.\r\n\r\nBuilt on Windows 7 w/ OpenJDK 13 and the provided maven wrapper. [Build log.](https://gist.github.com/Saladoc/350bc65496d0f0121b1b3543a243c023)\r\n\r\nAll failures follow the pattern of ```[ERROR]   Run 2: CSVRendererTest>AbstractRendererTst.testRenderer:111 expected:<...t\",\"Rule\"\r\n\"1\",\"\",\"n[/]a\",\"5\",\"1\",\"blah\",\"R...> but was:<...t\",\"Rule\"\r\n\"1\",\"\",\"n[\\]a\",\"5\",\"1\",\"blah\",\"R...>```\r\n\r\nI'm opening this issue to make sure that it is an actual problem with the code and not my setup and have started working on a PR to use the platform dependent file separator as obtained from `File.separator()` for the tests.", "url": "https://github.com/pmd/pmd/issues/2067", "user": "Saladoc", "labels": ["a:bug", "has:pr"], "created": "2019-10-13 21:23:53", "closed": "2019-10-17 18:49:50", "commits": {"a91803f157a19f17ddf05a06ac9a7dcd8d03017d": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "a91803f157a19f17ddf05a06ac9a7dcd8d03017d", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["66b52ee38f74226e95f4a764a115b9fa8a5f4b37"], "nameRev": "a91803f157a19f17ddf05a06ac9a7dcd8d03017d tags/pmd_releases/6.19.0~22^2", "commitMessage": "[doc] Update release notes, refs #2070, fixes #2067\n", "commitDateTime": "2019-10-17 20:32:59", "authoredDateTime": "2019-10-17 20:32:59", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[core] Shortnames parameter does not work with Ant", "body": "**Affects PMD Version:** \r\n6.18.0\r\n\r\n**Rule:**\r\nN/A\r\n\r\n**Description:**\r\nI previously was able to run the short-names parameter in my ant buildscript and it would output in the report with the relative path. In 6.18.0 it appears that shortnames has stopped working with Ant. The short-names parameter does work with the PMD CLI however.\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n<target name=\"pmd\">\r\n        <taskdef name=\"pmd\" classname=\"net.sourceforge.pmd.ant.PMDTask\">\r\n            <classpath>\r\n                <fileset dir=\"${pmdLibFolder}\">\r\n                    <include name=\"*.jar\"/>\r\n                </fileset>\r\n            </classpath>\r\n        </taskdef>\r\n        <pmd shortFilenames=\"true\" cacheLocation=\"pmd.cache\">\r\n            <formatter type=\"xml\" toFile=\"pmd_report.xml\" toConsole=\"true\"/>\r\n            <ruleset>ruleset.xml</ruleset>\r\n            <fileset dir=\"${src}\">\r\n                <include name=\"**/Application.java\"/>\r\n            </fileset>\r\n        </pmd>\r\n    </target>\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nAnt\r\n", "url": "https://github.com/pmd/pmd/issues/2062", "user": "mriddell95", "labels": ["a:bug", "has:pr"], "created": "2019-10-10 18:35:40", "closed": "2019-11-21 19:32:58", "commits": {"2541e22c3836d09e3b8754760ee5b4ee6ab5bf03": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 42.000277777777775, "commitsDetails": [{"commitHash": "2541e22c3836d09e3b8754760ee5b4ee6ab5bf03", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["a25dadc49554e1fd1336360781a190006bfb8bb3"], "nameRev": "2541e22c3836d09e3b8754760ee5b4ee6ab5bf03 tags/pmd_releases/6.20.0~15^2", "commitMessage": "[core] Shortnames parameter does not work with Ant\n\nFixes #2062\n", "commitDateTime": "2019-11-08 12:28:35", "authoredDateTime": "2019-11-08 12:27:35", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/ant/internal/PMDTaskImpl.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/ant/PMDTaskTest.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "pmd-core/src/test/resources/net/sourceforge/pmd/ant/src/sample.dummy", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-core/src/test/resources/net/sourceforge/pmd/ant/xml/pmdtasktest.xml", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "pmd-core/src/test/resources/rulesets/dummy/basic.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PMDTaskImpl.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask()", "TOT": 8, "UPD": 2, "INS": 5, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask().1.startFileAnalysis(net.sourceforge.pmd.util.datasource.DataSource)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PMDTaskTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.ant.PMDTaskTest.testWithShortFilenames()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2541e22c3836d09e3b8754760ee5b4ee6ab5bf03"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 4, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 3, "INS": 5, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd/ant/internal"], "changesInPackagesSPOON": ["net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask()", "net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask().1.startFileAnalysis(net.sourceforge.pmd.util.datasource.DataSource)"]}, {"title": "[java] PMD crashes with ClassFormatError: Absent Code attribute...", "body": "**Affects PMD Version:** 6.18.0\r\n\r\n**Rule:** n/a\r\n\r\n**Description:**\r\nPMD crashes with the following stacktrace:\r\n\r\n```\r\nCaused by: java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/xml/ws/Service\r\n    at java.lang.ClassLoader.defineClass1 (Native Method)\r\n    at java.lang.ClassLoader.defineClass (ClassLoader.java:1016)\r\n    at java.security.SecureClassLoader.defineClass (SecureClassLoader.java:151)\r\n    at java.net.URLClassLoader.defineClass (URLClassLoader.java:515)\r\n    at java.net.URLClassLoader$1.run (URLClassLoader.java:423)\r\n    at java.net.URLClassLoader$1.run (URLClassLoader.java:417)\r\n    at java.security.AccessController.doPrivileged (AccessController.java:689)\r\n    at java.net.URLClassLoader.findClass (URLClassLoader.java:416)\r\n    at net.sourceforge.pmd.util.ClasspathClassLoader.loadClass (ClasspathClassLoader.java:114)\r\n    at java.lang.ClassLoader.loadClass (ClassLoader.java:521)\r\n    at java.lang.ClassLoader.defineClass1 (Native Method)\r\n    at java.lang.ClassLoader.defineClass (ClassLoader.java:1016)\r\n    at java.security.SecureClassLoader.defineClass (SecureClassLoader.java:151)\r\n    at java.net.URLClassLoader.defineClass (URLClassLoader.java:515)\r\n    at java.net.URLClassLoader$1.run (URLClassLoader.java:423)\r\n    at java.net.URLClassLoader$1.run (URLClassLoader.java:417)\r\n    at java.security.AccessController.doPrivileged (AccessController.java:689)\r\n    at java.net.URLClassLoader.findClass (URLClassLoader.java:416)\r\n    at net.sourceforge.pmd.util.ClasspathClassLoader.loadClass (ClasspathClassLoader.java:114)\r\n    at java.lang.ClassLoader.loadClass (ClassLoader.java:521)\r\n    at java.lang.Class.getDeclaringClass0 (Native Method)\r\n    at java.lang.Class.getEnclosingClass (Class.java:1522)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.<init> (JavaTypeDefinitionSimple.java:68)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinition.forClass (JavaTypeDefinition.java:74)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractAnyTypeDeclaration.setQualifiedName (AbstractAnyTypeDeclaration.java:90)\r\n    at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit (QualifiedNameResolver.java:212)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit (JavaParserVisitorReducedAdapter.java:16)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept (ASTClassOrInterfaceDeclaration.java:55)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:61)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:11)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:56)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept (ASTClassOrInterfaceBodyDeclaration.java:44)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:61)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:11)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:51)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept (ASTClassOrInterfaceBody.java:35)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:61)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:11)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit (JavaParserVisitorReducedAdapter.java:33)\r\n    at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit (QualifiedNameResolver.java:214)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit (JavaParserVisitorReducedAdapter.java:16)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept (ASTClassOrInterfaceDeclaration.java:55)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:61)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:11)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:206)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept (ASTTypeDeclaration.java:39)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:61)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:11)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:181)\r\n    at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit (QualifiedNameResolver.java:134)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept (ASTCompilationUnit.java:44)\r\n    at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.initializeWith (QualifiedNameResolver.java:118)\r\n    at net.sourceforge.pmd.lang.java.AbstractJavaHandler$8.start (AbstractJavaHandler.java:153)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.resolveQualifiedNames (SourceCodeProcessor.java:125)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSource (SourceCodeProcessor.java:176)\r\n```\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\nThanks to @gmshake the issue can be reproduced like that: https://github.com/adangel/scratchpad/pull/1\r\n\r\n\r\n**Running PMD through:** Maven\r\n", "url": "https://github.com/pmd/pmd/issues/2042", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-09-28 17:47:12", "closed": "2019-09-30 03:37:23", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[core] Wrong deprecation warnings for unused XPath attributes", "body": "**Affects PMD Version:** 6.18.0\r\n\r\n**Description:**\r\nPMD 6.18.0 reports deprecation warnings for XPath attributes, that are not really used.\r\nThis is irritating and a bug.\r\n\r\nSee also #2019 for an improvement for the deprecation warnings in general.\r\n\r\nA partial fix is already available: https://github.com/pmd/pmd/commit/e4ce2faf78c2b08aa1663ebc1a76f110a09a9bba\r\n\r\nWhat's missing:\r\n* handling of null values\r\n* making PMDCoverageTest fail, to detect these problems in the future\r\n\r\nI think, the reason, why PMDCoverageTest didn't detect the problem is, that we only log the warnings once per attribute. In other tests, that were executed before PMDCoverageTest, the warnings was already logged, so it wasn't logged again and thus wasn't detected and failed the build. We could execute PMDCoverageTest in a separate jvm (to avoid the static cache) or we could add a integration test in pmd-dist. PMDCoverageTest is only java and we would only detect these problems for our java rulesets, but the same problem could apply for apex as well.\r\n", "url": "https://github.com/pmd/pmd/issues/2020", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-09-17 11:12:49", "closed": "2019-10-28 18:41:00", "commits": {"0ff97e5959a939d90abca9f07b6f392ea9b31f78": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 41.000277777777775, "commitsDetails": [{"commitHash": "0ff97e5959a939d90abca9f07b6f392ea9b31f78", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["dff6f4d7ab98346696c6a1ea087d5806cc1814d0"], "nameRev": "0ff97e5959a939d90abca9f07b6f392ea9b31f78 tags/pmd_releases/6.19.0~8^2~2", "commitMessage": "fix:[core] Wrong deprecation warnings for unused XPath attributes\n\n* Improve integration tests in pmd-dist to detect\n  warnings about deprecated attributes.\n* Wrap the attribute value in a singleton list, to be able to distinguish\n  between no value (null in the list) and value not determined yet\n  (list is null).\n* Add integration test for apex.\n* Updated release notes\n\nfixes #2020\n", "commitDateTime": "2019-10-13 15:55:27", "authoredDateTime": "2019-09-29 14:59:55", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/Attribute.java", "insertions": 11, "deletions": 11, "lines": 22}, {"filePath": "pmd-dist/src/test/java/net/sourceforge/pmd/it/BinaryDistributionIT.java", "insertions": 28, "deletions": 2, "lines": 30}, {"filePath": "pmd-dist/src/test/java/net/sourceforge/pmd/it/CpdExecutor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "pmd-dist/src/test/java/net/sourceforge/pmd/it/ExecutionResult.java", "insertions": 83, "deletions": 5, "lines": 88}, {"filePath": "pmd-dist/src/test/java/net/sourceforge/pmd/it/PMDExecutor.java", "insertions": 62, "deletions": 21, "lines": 83}, {"filePath": "pmd-dist/src/test/resources/rulesets/all-apex.xml", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "pmd-dist/src/test/resources/rulesets/all-java.xml", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "pmd-dist/src/test/resources/sample-source/apex/TableGridController.cls", "insertions": 371, "deletions": 0, "lines": 371}, {"filePath": "pmd-dist/src/test/resources/sample-source/{ => java}/JumbledIncrementer.java", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Attribute.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ast.xpath.Attribute", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.lang.ast.xpath.Attribute.getStringValue()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue()", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "BinaryDistributionIT.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.it.BinaryDistributionIT.runPMD()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.BinaryDistributionIT.testAllJavaRules()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.BinaryDistributionIT.testAllApexRules()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.BinaryDistributionIT.assertDefaultExecutionResult(net.sourceforge.pmd.it.ExecutionResult)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CpdExecutor.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.it.CpdExecutor.runCpdUnix(java.nio.file.Path,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.CpdExecutor.runCpdWindows(java.nio.file.Path,java.lang.String[])", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ExecutionResult.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.it.ExecutionResult.assertExecutionResult(int,java.lang.String)", "TOT": 7, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.it.ExecutionResult", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.ExecutionResult.assertNoError(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.ExecutionResult.assertNoErrorInReport(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.ExecutionResult.Builder", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.ExecutionResult.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.ExecutionResult.assertExecutionResult(int,java.lang.String,java.lang.String)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PMDExecutor.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.it.PMDExecutor.runPMDWindows(java.nio.file.Path,java.lang.String[])", "TOT": 20, "UPD": 5, "INS": 0, "MOV": 13, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.it.PMDExecutor.runPMDUnix(java.nio.file.Path,java.lang.String[])", "TOT": 24, "UPD": 5, "INS": 0, "MOV": 17, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.it.PMDExecutor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.PMDExecutor.runPMDUnix(java.nio.file.Path,java.nio.file.Path,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.PMDExecutor.runPMDWindows(java.nio.file.Path,java.nio.file.Path,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.PMDExecutor.runPMD(java.lang.String,java.util.List,java.nio.file.Path)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.PMDExecutor.runPMDRules(java.nio.file.Path,java.lang.String,java.lang.String)", "TOT": 9, "UPD": 0, "INS": 8, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.it.PMDExecutor.runPMD(java.nio.file.Path,java.lang.String[])", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JumbledIncrementer.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0ff97e5959a939d90abca9f07b6f392ea9b31f78"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 11, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 103, "UPD": 15, "INS": 39, "MOV": 40, "DEL": 9, "spoonFilesChanged": 5, "spoonMethodsChanged": 24}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath"], "changesInPackagesSPOON": ["net.sourceforge.pmd.it.PMDExecutor.runPMDUnix(java.nio.file.Path,java.nio.file.Path,java.lang.String[])", "net.sourceforge.pmd.it.ExecutionResult.toString()", "net.sourceforge.pmd.it.PMDExecutor.runPMDWindows(java.nio.file.Path,java.nio.file.Path,java.lang.String[])", "net.sourceforge.pmd.it.PMDExecutor.runPMD(java.nio.file.Path,java.lang.String[])", "net.sourceforge.pmd.it.BinaryDistributionIT.testAllJavaRules()", "net.sourceforge.pmd.it.ExecutionResult.Builder", "net.sourceforge.pmd.it.ExecutionResult.assertExecutionResult(int,java.lang.String,java.lang.String)", "net.sourceforge.pmd.lang.ast.xpath.Attribute.getStringValue()", "net.sourceforge.pmd.it.PMDExecutor.runPMDWindows(java.nio.file.Path,java.lang.String[])", "net.sourceforge.pmd.it.PMDExecutor", "net.sourceforge.pmd.it.CpdExecutor.runCpdWindows(java.nio.file.Path,java.lang.String[])", "net.sourceforge.pmd.it.BinaryDistributionIT.assertDefaultExecutionResult(net.sourceforge.pmd.it.ExecutionResult)", "net.sourceforge.pmd.it.PMDExecutor.runPMD(java.lang.String,java.util.List,java.nio.file.Path)", "net.sourceforge.pmd.it.BinaryDistributionIT.runPMD()", "net.sourceforge.pmd.it.ExecutionResult.assertExecutionResult(int,java.lang.String)", "net.sourceforge.pmd.it.PMDExecutor.runPMDRules(java.nio.file.Path,java.lang.String,java.lang.String)", "net.sourceforge.pmd.it.ExecutionResult.assertNoErrorInReport(java.lang.String)", "net.sourceforge.pmd.it.BinaryDistributionIT.testAllApexRules()", "net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue()", "net.sourceforge.pmd.it.CpdExecutor.runCpdUnix(java.nio.file.Path,java.lang.String[])", "net.sourceforge.pmd.it.ExecutionResult", "net.sourceforge.pmd.it.PMDExecutor.runPMDUnix(java.nio.file.Path,java.lang.String[])", "net.sourceforge.pmd.it.ExecutionResult.assertNoError(java.lang.String)", "net.sourceforge.pmd.lang.ast.xpath.Attribute"]}, {"title": "[plsql] Multiple DDL commands are skipped during parsing", "body": "**Affects PMD Version:** 6.17.0\r\n\r\n**Rule:** n/a\r\n\r\n**Description:**\r\n\r\nIf the SQL input source contains multiple DDL commands, then the parsing result only shows one command - the other commands are skipped, which is wrong.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nCOMMENT ON COLUMN employees.job_id IS 'abbreviated job title';\r\n\r\nCOMMENT ON COLUMN employees.job_id IS 'abbreviated job title';\r\n\r\nCOMMENT ON COLUMN employees.job_id IS 'abbreviated job title'; \r\n```\r\n\r\n**Running PMD through:** Designer\r\n\r\nSQL Documentation:\r\n* https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/COMMENT.html#GUID-65F447C4-6914-4823-9691-F15D52DB74D7", "url": "https://github.com/pmd/pmd/issues/2009", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-09-08 14:17:38", "closed": "2020-01-05 18:35:01", "commits": {"9a82ce14544ce6bc75df4f5eda97d5b1fafc31c6": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 119.00027777777778, "commitsDetails": [{"commitHash": "9a82ce14544ce6bc75df4f5eda97d5b1fafc31c6", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["e345e811bee1c5260490866612af3ab583863911"], "nameRev": "9a82ce14544ce6bc75df4f5eda97d5b1fafc31c6 tags/pmd_releases/6.21.0~32^2", "commitMessage": "[doc] Update release notes, fixes #2009\n", "commitDateTime": "2019-12-24 11:38:35", "authoredDateTime": "2019-12-24 11:38:35", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a82ce14544ce6bc75df4f5eda97d5b1fafc31c6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] In StringLiteral using alternative quoting mechanism single quotes cause parsing errors", "body": "**Affects PMD Version:** 6.17.0\r\n\r\n**Rule:** n/a\r\n\r\n**Description:**\r\nWhen using (multiline) StringLiterals with a custom start and end delimiter (alternative quoting mechanism), then you currently cannot use the single quote character within that literal.\r\n\r\nSyntax is described here: https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/Literals.html#GUID-1824CBAA-6E16-4921-B2A6-112FB02248DA\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ndeclare\r\n\r\n  literal1 clob := q'!name LIKE '%DBMS_%%'!';\r\n  literal2 clob := q'{SELECT * FROM employees WHERE last_name = 'Smith';}';\r\n  literal3 clob := q'% test'test %';\r\n\r\n  -- works\r\n  literal1a clob := q'! test !';\r\n  literal2a clob := q'{\r\n    also multiple\r\n    lines\r\n  }';\r\n  literal3a clob := q'% test abc %';\r\n\r\nbegin\r\n  null;\r\nend;\r\n/\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/2008", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-09-08 14:11:41", "closed": "2020-01-05 18:35:01", "commits": {"4599b6989a8a4ec2e7af7f8517faa6710f00955d": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 119.00027777777778, "commitsDetails": [{"commitHash": "4599b6989a8a4ec2e7af7f8517faa6710f00955d", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["ea6de080947266f8d30c373e062b67c94651245f"], "nameRev": "4599b6989a8a4ec2e7af7f8517faa6710f00955d tags/pmd_releases/6.21.0~33^2~3", "commitMessage": "[plsql] Fix StringLiteral token\n\nStringLiterals can use a custom quote delimiter that\nmarks the end of a string literal. This quote delimiter\nis only effective together with the quote character.\nA single quote character, that is not preceded by the\ndelimiter, should be allowed.\n\nAdditionally, the ASTStringLiteral node gives\nnow access to the plain string value of the\nliteral without the quoting.\n\nFixes #2008\n", "commitDateTime": "2019-12-23 18:24:14", "authoredDateTime": "2019-12-23 18:18:26", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-plsql/etc/grammar/PldocAST.jjt", "insertions": 40, "deletions": 66, "lines": 106}, {"filePath": "pmd-plsql/src/main/ant/alljavacc.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTStringLiteral.java", "insertions": 43, "deletions": 0, "lines": 43}, {"filePath": "pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/ast/StringLiteralsTest.java", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "pmd-plsql/src/test/resources/net/sourceforge/pmd/lang/plsql/ast/StringLiterals.pls", "insertions": 45, "deletions": 0, "lines": 45}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ASTStringLiteral.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.plsql.ast.ASTStringLiteral", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "StringLiteralsTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.plsql.ast.StringLiteralsTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4599b6989a8a4ec2e7af7f8517faa6710f00955d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 83, "deletions": 66, "lines": 149, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast", "pmd-plsql/etc/grammar/PldocAST.jjt"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.plsql.ast.ASTStringLiteral"]}, {"title": "[core] Incremental analysis mixes XPath rule violations", "body": "**Affects PMD Version:** 6.17\r\n\r\n**Rule:** TooManyStaticImports (but maybe the problem is not related to the rule)\r\n\r\n**Description:**\r\nI updated my Gradle version to 5.6 and started to use incremental analysis flag.\r\nhttps://docs.gradle.org/5.6/release-notes.html#support-for-pmd-incremental-analysis\r\nIt seems that the rule reference is wrong but the description is right.\r\nAlso the priority field is from the wrong rule.\r\nHere 2 example of xml. Unfortunately I can't give you my project to test this issue, sorry.\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\n**right example**\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<pmd xmlns=\"http://pmd.sourceforge.net/report/2.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd\"\r\n    version=\"6.17.0\" timestamp=\"2019-08-26T11:46:19.393\">\r\n<file name=\"MyFile.java\">\r\n<violation beginline=\"1\" endline=\"457\" begincolumn=\"1\" endcolumn=\"2\" rule=\"TooManyStaticImports\" ruleset=\"Code Style\" package=\"my.package\" class=\"MyFile\" externalInfoUrl=\"https://pmd.github.io/pmd-6.17.0/pmd_rules_java_codestyle.html#toomanystaticimports\" priority=\"5\">\r\nToo many static imports may lead to messy code\r\n</violation>\r\n</file>\r\n</pmd>\r\n```\r\n**wrong example**\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<pmd xmlns=\"http://pmd.sourceforge.net/report/2.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd\"\r\n    version=\"6.17.0\" timestamp=\"2019-08-26T10:35:33.313\">\r\n<file name=\"MyFile.java\">\r\n<violation beginline=\"1\" endline=\"457\" begincolumn=\"1\" endcolumn=\"2\" rule=\"ByteInstantiation\" ruleset=\"Performance\" package=\"my.package\" class=\"MyFile\" externalInfoUrl=\"https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation\" priority=\"2\">\r\nToo many static imports may lead to messy code\r\n</violation>\r\n<violation beginline=\"1\" endline=\"457\" begincolumn=\"1\" endcolumn=\"2\" rule=\"ByteInstantiation\" ruleset=\"Performance\" package=\"my.package\" class=\"MyFile\" externalInfoUrl=\"https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation\" priority=\"2\">\r\nToo many static imports may lead to messy code\r\n</violation>\r\n<violation beginline=\"1\" endline=\"457\" begincolumn=\"1\" endcolumn=\"2\" rule=\"ByteInstantiation\" ruleset=\"Performance\" package=\"my.package\" class=\"MyFile\" externalInfoUrl=\"https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation\" priority=\"2\">\r\nToo many static imports may lead to messy code\r\n</violation>\r\n<violation beginline=\"1\" endline=\"457\" begincolumn=\"1\" endcolumn=\"2\" rule=\"ByteInstantiation\" ruleset=\"Performance\" package=\"my.package\" class=\"MyFile\" externalInfoUrl=\"https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation\" priority=\"2\">\r\nToo many static imports may lead to messy code\r\n</violation>\r\n</file>\r\n</pmd>\r\n```\r\nI also executed pmd different times:\r\n**first launch**\r\n```\r\n<file name=\"MyFile.java\">\r\n<violation beginline=\"1\" endline=\"442\" begincolumn=\"1\" endcolumn=\"2\" rule=\"ByteInstantiation\" ruleset=\"Performance\" package=\"my.package\" class=\"MyFile\" externalInfoUrl=\"https://pmd.github.io/pmd-6.17.0/pmd_rules_java_performance.html#byteinstantiation\" priority=\"2\">\r\nToo many static imports may lead to messy code\r\n</violation>\r\n```\r\n**second launch**\r\n```\r\n<file name=\"MyFile.java\">\r\n<violation beginline=\"1\" endline=\"457\" begincolumn=\"1\" endcolumn=\"2\" rule=\"ProperCloneImplementation\" ruleset=\"Error Prone\" package=\"my.package\" class=\"MyFile\" externalInfoUrl=\"https://pmd.github.io/pmd-6.17.0/pmd_rules_java_errorprone.html#propercloneimplementation\" priority=\"2\">\r\nToo many static imports may lead to messy code\r\n</violation>\r\n```\r\n**third launch after clean**\r\n```\r\n<file name=\"MyFile.java\">\r\n<violation beginline=\"1\" endline=\"457\" begincolumn=\"1\" endcolumn=\"2\" rule=\"JUnitStaticSuite\" ruleset=\"Error Prone\" package=\"my.package\" class=\"MyFile\" externalInfoUrl=\"https://pmd.github.io/pmd-6.17.0/pmd_rules_java_errorprone.html#junitstaticsuite\" priority=\"3\">\r\nToo many static imports may lead to messy code\r\n</violation>\r\n```\r\n**fourth launch after clean**\r\nrule reference changed again: **WhileLoopWithLiteralBoolean**\r\n\r\n**Running PMD through:** Gradle 5.6\r\n\r\nO.S. both linux and windows\r\nJDK 1.8", "url": "https://github.com/pmd/pmd/issues/1990", "user": "regrog", "labels": ["a:bug", "has:pr"], "created": "2019-08-26 10:00:11", "closed": "2019-08-29 20:18:11", "commits": {"b85d71f632dbcd14d4824ea6e0c60cb41800f022": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "b85d71f632dbcd14d4824ea6e0c60cb41800f022", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["056b0f73a8fb9110ceb9472766902ca56c360255"], "nameRev": "b85d71f632dbcd14d4824ea6e0c60cb41800f022 tags/pmd_releases/6.18.0~32^2~2", "commitMessage": "[core] Resolve cached rule instances by more than class name\n\n - Fixes #1990\n", "commitDateTime": "2019-08-27 11:02:27", "authoredDateTime": "2019-08-27 11:00:33", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cache/CachedRuleMapper.java", "insertions": 14, "deletions": 5, "lines": 19}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cache/CachedRuleViolation.java", "insertions": 14, "deletions": 5, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CachedRuleMapper.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleMapper", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleMapper.getRuleForClass(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleMapper.initialize(net.sourceforge.pmd.RuleSets)", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleMapper.getRuleKey(java.lang.String,java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleMapper.getRuleForClass(java.lang.String,java.lang.String,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CachedRuleViolation.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleViolation.loadFromStream(java.io.DataInputStream,java.lang.String,net.sourceforge.pmd.cache.CachedRuleMapper)", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleViolation", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleViolation.storeToStream(java.io.DataOutputStream,net.sourceforge.pmd.RuleViolation)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cache.CachedRuleViolation.getRule()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b85d71f632dbcd14d4824ea6e0c60cb41800f022"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 10, "lines": 38, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 27, "UPD": 4, "INS": 20, "MOV": 3, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd/cache"], "changesInPackagesSPOON": ["net.sourceforge.pmd.cache.CachedRuleMapper.getRuleForClass(java.lang.String)", "net.sourceforge.pmd.cache.CachedRuleMapper.getRuleKey(java.lang.String,java.lang.String,java.lang.String)", "net.sourceforge.pmd.cache.CachedRuleViolation", "net.sourceforge.pmd.cache.CachedRuleViolation.loadFromStream(java.io.DataInputStream,java.lang.String,net.sourceforge.pmd.cache.CachedRuleMapper)", "net.sourceforge.pmd.cache.CachedRuleViolation.getRule()", "net.sourceforge.pmd.cache.CachedRuleMapper", "net.sourceforge.pmd.cache.CachedRuleViolation.storeToStream(java.io.DataOutputStream,net.sourceforge.pmd.RuleViolation)", "net.sourceforge.pmd.cache.CachedRuleMapper.initialize(net.sourceforge.pmd.RuleSets)", "net.sourceforge.pmd.cache.CachedRuleMapper.getRuleForClass(java.lang.String,java.lang.String,java.lang.String)"]}, {"title": "[java] Cyclomatic complexity is misreported (lack of clearing metrics cache)", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** \r\n\r\n6.13.0\r\n\r\n**Rule:**\r\n[CyclomaticComplexity](https://pmd.github.io/latest/pmd_rules_java_design.html#cyclomaticcomplexity)\r\n\r\n**Description:**\r\n\r\nI had a function with a high cyclomatic complexity. I started to reduce it, but even when it became a linear one, I still have the warning:\r\n```\r\nDescription\tResource\tPath\tLocation\tType\r\nThe method 'createContract(List, Method, ContractRunnerData)' has a cyclomatic complexity of 9.\tContractCreationServiceImpl.java\t/cdd/src/main/java/com/kodekonveyor/cdd/build/impl\tline 32\tPMD Marker (Prio 3)\r\n\r\n```\r\n\r\nI am using   PMD Plug-in\t4.2.0.v20190331-1136 in eclipse.\r\nTried to clear violations and check again, clean the source code and rebuild from eclipse, clean the source code with `git clean -fdx`, refresh the project from disk, and all combinations thereof.\r\n\r\n**Code Sample demonstrating the issue:**\r\nThis code sample still have the warning above:\r\n\r\n```\r\n  @Override\r\n  public ContractInfo<ServiceType> createContract(\r\n      final List<ContractInfo<ServiceType>> contracts, final Method method,\r\n      final ContractRunnerData<ServiceType> data\r\n  ) throws AssertionError, Throwable {\r\n\r\n    return null;\r\n  }\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\n\r\neclipse\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1984", "user": "magwas", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2019-08-16 17:45:23", "closed": "2020-01-17 17:42:28", "commits": {"b71575fa3695e97552f64460f771c5a91f58f9b6": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 153.00027777777777, "commitsDetails": [{"commitHash": "b71575fa3695e97552f64460f771c5a91f58f9b6", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["0d19482bb8164d6f0164f36184a56355e45e64f1"], "nameRev": "b71575fa3695e97552f64460f771c5a91f58f9b6 tags/pmd_releases/6.21.0~12^2~1", "commitMessage": "[java] Cyclomatic complexity is misreported (lack of clearing metrics cache)\n\nFixes #1984\n", "commitDateTime": "2020-01-17 11:35:32", "authoredDateTime": "2020-01-17 11:35:32", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ApexHandler.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/metrics/ApexMetrics.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/lang/metrics/LanguageMetricsProvider.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/processor/AbstractPMDProcessor.java", "insertions": 14, "deletions": 0, "lines": 14}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/AbstractJavaHandler.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/JavaMetrics.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApexHandler.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.ApexHandler.ApexMetricsProvider.initialize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ApexMetrics.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.apex.metrics.ApexMetrics.reset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LanguageMetricsProvider.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.metrics.initialize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractPMDProcessor.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.processor.AbstractPMDProcessor.resetMetrics()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractJavaHandler.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.AbstractJavaHandler.JavaMetricsProvider.initialize()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JavaMetrics.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.metrics.JavaMetrics.reset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b71575fa3695e97552f64460f771c5a91f58f9b6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 40, "deletions": 4, "lines": 44, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0, "spoonFilesChanged": 6, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics", "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/metrics", "pmd-core/src/main/java/net/sourceforge/pmd/lang/metrics", "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex", "pmd-core/src/main/java/net/sourceforge/pmd/processor", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.AbstractJavaHandler.JavaMetricsProvider.initialize()", "net.sourceforge.pmd.lang.metrics.initialize()", "net.sourceforge.pmd.lang.apex.ApexHandler.ApexMetricsProvider.initialize()", "net.sourceforge.pmd.lang.java.metrics.JavaMetrics.reset()", "net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)", "net.sourceforge.pmd.lang.apex.metrics.ApexMetrics.reset()", "net.sourceforge.pmd.processor.AbstractPMDProcessor.resetMetrics()"]}, {"title": "[core] PMD fails on excluding unknown rules", "body": "Not sure if error or missing feature. But the thing is that we have a common project that contains rule files for all quality plugins and one of them is PMD. The projects are set up in a way that they always fetch the latest bundle of rulefiles (so we can update the quality gates without changing the projects). So far so good,\r\n\r\nBut the issue is that we updated PMD in some project and noticed that of the rules does not suite our needs. So we suppresed it... And now the issue. Not all projects have the latest PMD -> _Unable to exclude rules [AvoidUncheckedExceptionsInSignatures]; perhaps the rule name is mispelled?_\r\n\r\nIs it somehow possible to get rid of this behavior and set PMD to tolerant mode. Maybe write some warning to log... but not fail the build? From my perspective its much cleaner approach, as not applying exclusion at all (the worst case) cannot lower the quality of the checked product...\r\nEssentially this makes any changes to shared rulesets to be backward incompatible...", "url": "https://github.com/pmd/pmd/issues/1978", "user": "malejpavouk", "labels": ["a:bug", "has:pr"], "created": "2019-08-14 15:33:06", "closed": "2019-10-29 18:52:09", "commits": {"3c32f229f61b9041a532f50dd4ce0a136d7a204c": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 76.00027777777778, "commitsDetails": [{"commitHash": "3c32f229f61b9041a532f50dd4ce0a136d7a204c", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["9019f15cab4e3b9fdd646dd8a689b90060167193"], "nameRev": "3c32f229f61b9041a532f50dd4ce0a136d7a204c tags/pmd_releases/6.19.0~5^2~4", "commitMessage": "[core] Don't fail hard anymore if excluded rule doesn't exist\n\nFixes #1978\n", "commitDateTime": "2019-10-27 10:16:17", "authoredDateTime": "2019-10-27 10:16:17", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/RuleSetFactory.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java", "insertions": 35, "deletions": 2, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RuleSetFactory.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.RuleSetFactory.parseRuleSetReferenceNode(net.sourceforge.pmd.RuleSet.RuleSetBuilder,org.w3c.dom.Element,java.lang.String)", "TOT": 10, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 3}]}, {"spoonFilePath": "RuleSetFactoryTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.RuleSetFactoryTest.testWrongRuleNameExcluded()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.RuleSetFactoryTest.testRuleSetReferencesRulesetWithAExcludedNonExistingRule()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3c32f229f61b9041a532f50dd4ce0a136d7a204c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 3, "lines": 9, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd"], "changesInPackagesSPOON": ["net.sourceforge.pmd.RuleSetFactory.parseRuleSetReferenceNode(net.sourceforge.pmd.RuleSet.RuleSetBuilder,org.w3c.dom.Element,java.lang.String)"]}, {"title": "[plsql] ParseException with WITH in CURSOR", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.17\r\n\r\n**Rule:**\r\n\r\n**Description:** As in given example WITH clause can't be used in cursor\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ncreate or replace procedure tia_uf_lr2_trf_1 is\r\n   \r\n    cursor c_tariff_price(cp_obj_seq_no number) is\r\n      with obj_row as\r\n       (select orr.self_participation_variant spv\r\n        from   obj_rech_r2 orr\r\n        where  orr.seq_no = cp_obj_seq_no)\r\n      select 1 from dual;\r\n  \r\n  begin\r\n    null;\r\n  end;\r\n/\r\n\r\n```\r\n\r\n**Running PMD through:** *[Designer]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1953", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2019-07-30 13:10:59", "closed": "2019-09-08 13:26:47", "commits": {"47d2b9b57ba3300f1d7c06eef89ecf72d8f9c89b": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 40.000277777777775, "commitsDetails": [{"commitHash": "47d2b9b57ba3300f1d7c06eef89ecf72d8f9c89b", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["20d34103ce465c96ff9bd73d1dfab84b60c6f913"], "nameRev": "47d2b9b57ba3300f1d7c06eef89ecf72d8f9c89b tags/pmd_releases/6.18.0~17^2", "commitMessage": "Update release notes, refs #1977, fixes #1953\n", "commitDateTime": "2019-09-08 15:22:19", "authoredDateTime": "2019-09-08 15:22:19", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] ParseException with UPDATE and package record variable", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.16\r\n\r\n**Rule:**\r\n\r\n**Description:** In given example\r\n- solt9001 is package\r\n- solt9001.rec is packages global record type variable\r\n- solt9001.rec.record_version is records field\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ncreate or replace package body solt9001 is\r\n \r\n  procedure upd is\r\n\r\n  begin\r\n  \r\n      update solt90_web_service_log\r\n      set    row = solt9001.rec\r\n      returning record_version into solt9001.rec.record_version;\r\n\r\n  end upd;\r\n\r\nend;\r\n/\r\n```\r\n\r\n**Running PMD through:** *[Designer]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1950", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2019-07-29 13:36:46", "closed": "2019-09-08 09:56:36", "commits": {"8124a0498bd0084cb44abf3a926bf51716950fd9": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 40.000277777777775, "commitsDetails": [{"commitHash": "8124a0498bd0084cb44abf3a926bf51716950fd9", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["182ba549ba357693f9fa7eec737397ba9761c6e1"], "nameRev": "8124a0498bd0084cb44abf3a926bf51716950fd9 tags/pmd_releases/6.18.0~20^2", "commitMessage": "Update release notes, refs #1974\n\nFixes #1935\nFixes #1948\nFixes #1950\n", "commitDateTime": "2019-09-08 11:46:44", "authoredDateTime": "2019-09-08 11:46:44", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] ParseException with INSERT INTO using package global variables", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.16\r\n\r\n**Rule:**\r\n\r\n**Description:** In given example:\r\n- solt4601 is package\r\n- solt4601.rec is global record type variable\r\n- solt4601.rec.record_version is records field\r\n- solt4601.current_rowid is global variable\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ncreate or replace function test return varchar2 is\r\n  begin\r\n\r\n    insert into sol_individual_commission_rate\r\n    values solt4601.rec\r\n    returning record_version, rowid into solt4601.rec.record_version, solt4601.current_rowid;\r\n\r\n    return null;\r\n  end test;\r\n/\r\n```\r\n\r\n**Running PMD through:** *[Designer]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1948", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2019-07-26 15:40:12", "closed": "2019-09-08 09:56:36", "commits": {"8124a0498bd0084cb44abf3a926bf51716950fd9": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "8124a0498bd0084cb44abf3a926bf51716950fd9", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["182ba549ba357693f9fa7eec737397ba9761c6e1"], "nameRev": "8124a0498bd0084cb44abf3a926bf51716950fd9 tags/pmd_releases/6.18.0~20^2", "commitMessage": "Update release notes, refs #1974\n\nFixes #1935\nFixes #1948\nFixes #1950\n", "commitDateTime": "2019-09-08 11:46:44", "authoredDateTime": "2019-09-08 11:46:44", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] ParseError - SELECT with FOR UPDATE OF", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.16.0\r\n\r\n**Rule:**\r\n\r\n**Description:** As shown in example\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ncreate or replace function test return varchar2 is\r\n  begin\r\n     for r in (select *\r\n                from   sol_individual_commission_rate\r\n                where  rowid = solt4601.current_rowid\r\n                and    rownum = 1\r\n                for    update of record_version nowait)\r\n      loop\r\n        null;\r\n      end loop;\r\n    return null;\r\n  end test;\r\n/\r\n```\r\n\r\n**Running PMD through:** *[Designer]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1947", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2019-07-26 15:01:21", "closed": "2019-09-08 09:30:44", "commits": {"949a03acde75da476f079916a63c2a857ce9aef6": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "949a03acde75da476f079916a63c2a857ce9aef6", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["f283a663a3cb60624f0486931b0f3abf5106eb7b"], "nameRev": "949a03acde75da476f079916a63c2a857ce9aef6 tags/pmd_releases/6.18.0~21^2", "commitMessage": "Update release notes, fixes #1947, refs #1972\n", "commitDateTime": "2019-09-08 11:20:03", "authoredDateTime": "2019-09-08 11:20:03", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] ParseException with using TRIM inside IF statements condition", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.16\r\n\r\n**Rule:**\r\n\r\n**Description:** As shown in example. Works fine when using other functions\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ncreate or replace function test return varchar2 is\r\n  begin\r\n      if trim(p_row.dim03) not in ('test1', 'test2') then\r\n        NULL;\r\n      end if;\r\n    return NULL;\r\n  end test;\r\n/\r\n```\r\n\r\n**Running PMD through:** *[Designer]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1946", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2019-07-26 14:36:29", "closed": "2019-09-08 10:06:01", "commits": {"6e878e95bb66c3be06c6afb81e949171ff5b1385": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "6e878e95bb66c3be06c6afb81e949171ff5b1385", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["8c669f5a47291d30a25fe4de81f5c6389b11376b"], "nameRev": "6e878e95bb66c3be06c6afb81e949171ff5b1385 tags/pmd_releases/6.18.0~19^2", "commitMessage": "Update release notes, refs #1975, fixes #1946\n", "commitDateTime": "2019-09-08 11:59:27", "authoredDateTime": "2019-09-08 11:59:27", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plslq] ParseException with cursor inside procedure declaration", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.17.0\r\n\r\n**Rule:**\r\n\r\n**Description:** ParseException with cursor declared inside procedure declared inside anonymous block declare section\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ndeclare\r\n  gw_start_date date := to_date('2017-01-01', 'yyyy-mm-dd');\r\n  gw_acl_name   varchar2(100);\r\n\r\n  procedure create_acl(p_acl_name in varchar2) is\r\n    cursor c_acl is\r\n      select dna.acl\r\n      from   dba_network_acls dna\r\n      where  acl like '%' || p_acl_name;\r\n    w_acl_name varchar2(100);\r\n  begin\r\n    open c_acl;\r\n    fetch c_acl\r\n      into w_acl_name;\r\n    close c_acl;\r\n    \r\n  end;\r\n\r\nbegin\r\n  null;\r\nend;\r\n/\r\n\r\n```\r\n\r\n**Running PMD through:** *[CLI]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1936", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2019-07-23 13:10:46", "closed": "2019-09-08 13:41:45", "commits": {"00f0cc3e3d0d3c3984486a6b5aa085c71822d370": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "00f0cc3e3d0d3c3984486a6b5aa085c71822d370", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["5a444276f81bbda54f9793846cd599915f4182fd"], "nameRev": "00f0cc3e3d0d3c3984486a6b5aa085c71822d370 tags/pmd_releases/6.18.0~16^2", "commitMessage": "Update release notes, refs #1986, fixes #1933, fixes #1936\n", "commitDateTime": "2019-09-08 15:38:36", "authoredDateTime": "2019-09-08 15:38:36", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] ParseException with SELECT INTO record defined as global variable", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.17.0\r\n\r\n**Rule:**\r\n\r\n**Description:** In below code sample I try to insert into t4666.rec.agent_no\r\nt4666 is package\r\nrec is record type\r\nagent_no is records field\r\n\r\n```\r\nlip 23, 2019 2:56:17 PM net.sourceforge.pmd.RulesetsFactoryUtils printRuleNamesInDebug\r\nFINER: Loaded rule AvoidTabCharacter\r\nlip 23, 2019 2:56:17 PM net.sourceforge.pmd.PMD getApplicableLanguages\r\nFINE: Using PLSQL version: PLSQL\r\nlip 23, 2019 2:56:17 PM net.sourceforge.pmd.PMD processFiles\r\nWARNING: This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/latest/pmd_userdocs_incremental_analysis.html\r\nlip 23, 2019 2:56:17 PM net.sourceforge.pmd.RulesetsFactoryUtils printRuleNamesInDebug\r\nFINER: Loaded rule AvoidTabCharacter\r\nlip 23, 2019 2:56:17 PM net.sourceforge.pmd.processor.PmdRunnable call\r\nFINE: Processing C:\\Users\\...\\01_DB\\00_Scripts\\sols46_com_group_agent.sql\r\nlip 23, 2019 2:56:17 PM net.sourceforge.pmd.processor.PmdRunnable addError\r\nFINE: Error while processing file: C:\\Users\\...\\01_DB\\00_Scripts\\sols46_com_group_agent.sql\r\nnet.sourceforge.pmd.PMDException: Error while parsing C:\\Users\\...\\01_DB\\00_Scripts\\sols46_com_group_agent.sql\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:99)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n        at java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n        at java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n        at java.lang.Thread.run(Unknown Source)\r\nCaused by: net.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \".\" \". \"\" at line 8, column 28.\r\nWas expecting one of:\r\n    \",\" ...\r\n    \"FROM\" ...\r\n    \",\" ...\r\n    \"FROM\" ...\r\n\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.FromClause(PLSQLParser.java:20506)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.RestOfStatement(PLSQLParser.java:10592)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.SelectStatement(PLSQLParser.java:27804)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:22950)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:23875)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Block(PLSQLParser.java:952)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:505)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:202)\r\n        at net.sourceforge.pmd.lang.plsql.PLSQLParser.parse(PLSQLParser.java:55)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:111)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:175)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:96)\r\n        ... 9 more\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nbegin\r\n\r\nselect id_no into t4666.rec.agent_no from name where company_reg_no = '66666111';\r\n\r\nend;\r\n/\r\n\r\n```\r\n\r\n**Running PMD through:** *[CLI]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1935", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2019-07-23 13:06:53", "closed": "2019-09-08 09:56:36", "commits": {"8124a0498bd0084cb44abf3a926bf51716950fd9": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 46.000277777777775, "commitsDetails": [{"commitHash": "8124a0498bd0084cb44abf3a926bf51716950fd9", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["182ba549ba357693f9fa7eec737397ba9761c6e1"], "nameRev": "8124a0498bd0084cb44abf3a926bf51716950fd9 tags/pmd_releases/6.18.0~20^2", "commitMessage": "Update release notes, refs #1974\n\nFixes #1935\nFixes #1948\nFixes #1950\n", "commitDateTime": "2019-09-08 11:46:44", "authoredDateTime": "2019-09-08 11:46:44", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] ParseException with cursor declared in anonymous block", "body": "\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** 6.17.0\r\n\r\n**Rule:**\r\n\r\n**Description:** I get ParseException when trying to process file with single script with cursor in anonymous block declaration.\r\n\r\n```\r\nlip 23, 2019 2:12:18 PM net.sourceforge.pmd.RulesetsFactoryUtils printRuleNamesInDebug\r\nFINER: Loaded rule AvoidTabCharacter\r\nlip 23, 2019 2:12:18 PM net.sourceforge.pmd.PMD getApplicableLanguages\r\nFINE: Using PLSQL version: PLSQL\r\nlip 23, 2019 2:12:18 PM net.sourceforge.pmd.PMD processFiles\r\nWARNING: This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/latest/pmd_userdocs_incremental_analysis.html\r\nlip 23, 2019 2:12:18 PM net.sourceforge.pmd.RulesetsFactoryUtils printRuleNamesInDebug\r\nFINER: Loaded rule AvoidTabCharacter\r\nlip 23, 2019 2:12:18 PM net.sourceforge.pmd.processor.PmdRunnable call\r\nFINE: Processing C:\\Users\\...\\01_DB\\00_Scripts\\sols83_icom_aq.sql\r\nlip 23, 2019 2:12:18 PM net.sourceforge.pmd.processor.PmdRunnable addError\r\nFINE: Error while processing file: C:\\Users\\...\\01_DB\\00_Scripts\\sols83_icom_aq.sql\r\nnet.sourceforge.pmd.PMDException: Error while parsing C:\\Users\\...\\01_DB\\00_Scripts\\sols83_icom_aq.sql\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:99)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n        at java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n        at java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n        at java.lang.Thread.run(Unknown Source)\r\nCaused by: net.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \"\" at line 1, column 1.\r\nWas expecting one of:\r\n\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:510)\r\n        at net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:202)\r\n        at net.sourceforge.pmd.lang.plsql.PLSQLParser.parse(PLSQLParser.java:55)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:111)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:175)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:96)\r\n        ... 9 more\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ndeclare\r\n\r\n  cursor c_queue_exists(cp_queue_name xla_reference_code.code%type) is\r\n    select 1\r\n    from   dba_queues dq\r\n    where  dq.name = cp_queue_name;\r\n\r\n  r_queue_exists c_queue_exists%rowtype;\r\nbegin\r\n  null;\r\nend;\r\n/\r\n```\r\n\r\n**Running PMD through:** *[CLI]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1933", "user": "szyman23", "labels": ["a:bug", "has:pr"], "created": "2019-07-23 12:43:24", "closed": "2019-09-08 13:41:45", "commits": {"00f0cc3e3d0d3c3984486a6b5aa085c71822d370": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 47.000277777777775, "commitsDetails": [{"commitHash": "00f0cc3e3d0d3c3984486a6b5aa085c71822d370", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["5a444276f81bbda54f9793846cd599915f4182fd"], "nameRev": "00f0cc3e3d0d3c3984486a6b5aa085c71822d370 tags/pmd_releases/6.18.0~16^2", "commitMessage": "Update release notes, refs #1986, fixes #1933, fixes #1936\n", "commitDateTime": "2019-09-08 15:38:36", "authoredDateTime": "2019-09-08 15:38:36", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[core] Incremental analysis does not work with shortnames", "body": "**Affects PMD Version:** \r\n6.16.0\r\n\r\n**Rule:**\r\nN/A\r\n\r\n**Description:**\r\nI am trying to run the incremental analysis with the shortFilenames option on. On first run of the code base everything works and a cache file is created with violations that exist within the code base. Upon fixing one of those violations and running PMD again, PMD is using the existing violations within the cache file and not scanning the changed file with the resolved violation. PMD then reports on the old violations that existed within the cache file.\r\n\r\n**Code Sample demonstrating the issue:**\r\nHere is the Ant target I used to recreate the issue:\r\n```\r\n<target name=\"pmd\">\r\n        <taskdef name=\"pmd\" classname=\"net.sourceforge.pmd.ant.PMDTask\">\r\n            <classpath>\r\n                <fileset dir=\"<path_to_pmd_lib>\">\r\n                    <include name=\"*.jar\"/>\r\n                </fileset>\r\n            </classpath>\r\n        </taskdef>\r\n        <pmd shortFilenames=\"true\" cacheLocation=\"pmd.cache\">\r\n            <formatter type=\"xml\" toFile=\"pmd_report.xml\" toConsole=\"true\"/>\r\n            <ruleset>build/archruleset_java.xml</ruleset>\r\n            <fileset dir=\"${src}\">\r\n                <include name=\"**/Application.java\"/>\r\n            </fileset>\r\n        </pmd>\r\n    </target>\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nThis was run through Ant. I tried replicating this with the CLI as well but I ran into a separate error:;\r\n```\r\n<error filename=\"src/main/java/Application.java\" msg=\"NullPointerException: null\">\r\n<![CDATA[java.lang.NullPointerException\r\n        at net.sourceforge.pmd.cache.AbstractAnalysisCache.ruleViolationAdded(AbstractAnalysisCache.java:232)\r\n        at net.sourceforge.pmd.Report.addRuleViolation(Report.java:335)\r\n        at net.sourceforge.pmd.lang.rule.AbstractRuleViolationFactory.addViolation(AbstractRuleViolationFactory.java:37)\r\n        at net.sourceforge.pmd.lang.rule.AbstractRule.addViolation(AbstractRule.java:349)\r\n        at com.pmd.archrules.hystrix.HystrixConfigRule.visit(HystrixConfigRule.java:40)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:280)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:37)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:255)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:499)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:184)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:96)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n]]>\r\n</error>\r\n```\r\n", "url": "https://github.com/pmd/pmd/issues/1923", "user": "mriddell95", "labels": ["a:bug", "has:pr"], "created": "2019-07-18 19:07:07", "closed": "2019-09-05 23:04:22", "commits": {}, "ttf": 49.000277777777775, "commitsDetails": []}, {"title": "[core] \"-help\" CLI option ends with status code != 0", "body": "Running PMD 6.16.0 through the CLI here. I set an alias using:\r\n\r\n```\r\nalias pmd=\"sh $HOME/pmd-bin-6.16.0/bin/run.sh pmd\"\r\n```\r\n\r\nBut I noticed that running `pmd -help` returns a status code of 1 instead of 0. I believe simply printing the help command shouldn't be an error (status code different than zero).\r\n\r\n```\r\n$ echo $?\r\n1\r\n```\r\n\r\nI'm working with a pipeline where I'm trying to test if PMD is installed, so I just try to run it. I know there are other ways to do this, but doing it this way I found this issue.", "url": "https://github.com/pmd/pmd/issues/1913", "user": "renatoliveira", "labels": ["a:bug", "good first issue", "has:pr", "in:cli"], "created": "2019-07-11 14:59:24", "closed": "2019-07-19 09:24:10", "commits": {"d3a3c5529f8850862e7a0fc6d4416b3d943e76c4": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "d3a3c5529f8850862e7a0fc6d4416b3d943e76c4", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["efd0eafff0df573427b18a42c290ee46a22868cc"], "nameRev": "d3a3c5529f8850862e7a0fc6d4416b3d943e76c4 tags/pmd_releases/6.17.0~17^2~1", "commitMessage": "Update release notes, fixes #1913, refs #1917\n", "commitDateTime": "2019-07-19 11:07:46", "authoredDateTime": "2019-07-19 11:03:21", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] ATFD calculation problem", "body": "**Affects PMD Version:** \r\n6.16.0\r\nand 53fbbb5a2d8514cacb551350ad9ce8e860c794c0\r\n\r\n**Rule:**\r\n[GodClass](https://pmd.github.io/latest/pmd_rules_java_design.html#godclass)\r\n\r\n**Description:**\r\nSome external properties are not calculated when code is structured in a certain way. \r\n\r\nExample in: https://github.com/gulrich/HotDraw/blob/master/JHotDraw%20%5BJava%5D/src/org/jhotdraw/application/DrawApplication.java#L941\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n\r\n```java\r\n\r\n// Counts as 2 external properties:\r\n//  Possible God Class (WMC=130, ATFD=105, TCC=0.631%)\r\nFileFilter tmp = openDialog.getFileFilter();\r\nshowStatus(\"Not a valid file format: \" + tmp.getDescription());\r\n\r\n// Counts no external properties:\r\n// Possible God Class (WMC=130, ATFD=107, TCC=0.631%)\r\nshowStatus(\"Not a valid file format: \" + openDialog.getFileFilter().getDescription());\r\n```\r\n\r\nFor me, both code fragments should give the same ATFD\r\n\r\n**Running PMD through:** *CLI *\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1910", "user": "EmileSonneveld", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2019-07-09 11:51:50", "closed": "2019-07-23 13:41:11", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "[pslql] ParseException when parsing (+)", "body": "**Affects PMD Version:**  6.16.0\r\n\r\n**Description:**\r\nI\u2019m trying to test PMD with PLSQL and I\u2019m getting an error when parsing\r\nWhen I use WHERE with (+) then I get parsing error.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nSELECT DISTINCT\r\n                      o.op_id                      \r\n                  FROM\r\n                      opportunities o,\r\n                      v_opp_bundles b,\r\n                      jopportunities h\r\n                  WHERE\r\n                      o.opp_id = b.opp_id\r\n                      AND b.bun_id = p_bun_id\r\n                      AND o.opp_id = h.opp_id (+);\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nRunning from command line with JDK 11.\r\npmd -d C:\\pmd-bin-6.16.0\\test -l plsql -R rulesets/plsql/TomKytesDespair.xml -f xml\r\n", "url": "https://github.com/pmd/pmd/issues/1902", "user": "Andro72", "labels": ["a:bug", "has:pr"], "created": "2019-07-03 14:02:57", "closed": "2019-07-23 18:32:48", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "[pslql] ParseException when parsing LEFT JOIN", "body": "**Affects PMD Version:** 6.15.0\r\n\r\n**Description:**\r\nI\u2019m trying to test PMD with PLSQL and I\u2019m getting an error when parsing\r\n\r\nWhen I use LEFT JOIN it does not works fine in this format.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nSELECT cv.hidden\r\n                  FROM (SELECT CONNECT_BY_ROOT dep_id dep_id, LEVEL as dep_level\r\n                          FROM departments\r\n                         WHERE dep_id = c.dep_id\r\n                       CONNECT BY PRIOR dep_id = parent_dep_id\r\n                         ORDER BY LEVEL) dep\r\n                  LEFT JOIN config_visibility cv ON (cv.dep_id = dep.dep_id AND cv.app_id = p_app_id)\r\n                  ORDER BY dep.dep_level;\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nRunning from command line with JDK 11.\r\npmd -d C:\\pmd-bin-6.12.0\\test -l plsql -R rulesets/plsql/TomKytesDespair.xml -f xml\r\n", "url": "https://github.com/pmd/pmd/issues/1879", "user": "Andro72", "labels": ["a:bug", "has:pr"], "created": "2019-06-21 14:04:51", "closed": "2019-06-29 19:51:06", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "[pslql] ParseException when parsing USING", "body": "**Affects PMD Version:**  6.15.0\r\n\r\n**Description:**\r\nI\u2019m trying to test PMD with PLSQL and I\u2019m getting an error when parsing\r\nWhen I use INNER JOIN without USING it works fine but when I use it i got an exception.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nSELECT COUNT(qsec_id)\r\n      FROM quots_sections  qsec\r\n           INNER JOIN quots_sections_lang USING (qsec_id)\r\n     WHERE qsec.wsh_id = 11\r\n       AND qsec.revision = 1\r\n       AND lang_code = 'en';\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nRunning from command line with JDK 11.\r\npmd -d C:\\pmd-bin-6.15.0\\test -l plsql -R rulesets/plsql/TomKytesDespair.xml -f xml\r\n", "url": "https://github.com/pmd/pmd/issues/1878", "user": "Andro72", "labels": ["a:bug", "has:pr"], "created": "2019-06-21 13:58:38", "closed": "2019-06-27 17:53:38", "commits": {"ac285e50a5b07fb3a4b402290c956d1336a231d8": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "ac285e50a5b07fb3a4b402290c956d1336a231d8", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["cd2bbdb46e52d5da1ae029f06edee9bbd56025c2"], "nameRev": "ac285e50a5b07fb3a4b402290c956d1336a231d8 tags/pmd_releases/6.16.0~20^2~4", "commitMessage": "[plsql] fix #1878 Support explicit INNER word for INNER JOIN\n", "commitDateTime": "2019-06-24 19:53:48", "authoredDateTime": "2019-06-23 10:04:54", "commitGitStats": [{"filePath": "pmd-plsql/etc/grammar/PldocAST.jjt", "insertions": 9, "deletions": 12, "lines": 21}, {"filePath": "pmd-plsql/src/test/java/net/sourceforge/pmd/lang/plsql/ast/JoinClauseTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-plsql/src/test/resources/net/sourceforge/pmd/lang/plsql/ast/InnerJoinUsing.pls", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JoinClauseTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.plsql.ast.JoinClauseTest.testInnerJoinUsing()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ac285e50a5b07fb3a4b402290c956d1336a231d8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 12, "lines": 21, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-plsql/etc/grammar/PldocAST.jjt"], "changesInPackagesSPOON": []}, {"title": "[plsql] Expression list not working", "body": "Affects PMD Version: 6.15.0\r\n\r\nRule: InCondition\r\n\r\nDescription: In condition not working with lists\r\n\r\nCode Sample demonstrating the issue:\r\n\r\n```\r\nselect *\r\n    FROM dual\r\n    WHERE (dummy, 'X') in (select dummy, 'X' from dual);\r\n```", "url": "https://github.com/pmd/pmd/issues/1873", "user": "kabroxiko", "labels": ["a:bug", "has:pr"], "created": "2019-06-19 12:35:27", "closed": "2019-06-28 18:51:16", "commits": {"4b7e2c97d576788bcf2f51226196443554bae245": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "4b7e2c97d576788bcf2f51226196443554bae245", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["cd2bbdb46e52d5da1ae029f06edee9bbd56025c2"], "nameRev": "4b7e2c97d576788bcf2f51226196443554bae245 tags/pmd_releases/6.16.0~18^2~3", "commitMessage": "[plsql] fix #1873 Expression list not working\n", "commitDateTime": "2019-06-24 19:49:50", "authoredDateTime": "2019-06-22 22:17:57", "commitGitStats": [{"filePath": "pmd-plsql/etc/grammar/PldocAST.jjt", "insertions": 27, "deletions": 34, "lines": 61}, {"filePath": "pmd-plsql/src/test/resources/net/sourceforge/pmd/lang/plsql/ast/SelectExpressions.pls", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "pmd-plsql/src/test/resources/net/sourceforge/pmd/lang/plsql/ast/WhereClauseParens.pls", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4b7e2c97d576788bcf2f51226196443554bae245"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 34, "lines": 61, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-plsql/etc/grammar/PldocAST.jjt"]}, {"title": "[plsql] Parsing errors with INSERT using returning or records and TRIM expression", "body": "**Affects PMD Version:** 6.15.0\r\n\r\n**Rule:** n/a\r\n\r\n**Description:**\r\n* The [returning clause](https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/INSERT.html#GUID-903F8043-0254-4EE9-ACC1-CB8AC0AF3423) is not supported, e.g.\r\n\r\n```\r\nBEGIN\r\n\r\nINSERT INTO employees \r\n      (employee_id, last_name, email, hire_date, job_id, salary)\r\n   VALUES \r\n   (employees_seq.nextval, 'Doe', 'john.doe@example.com', \r\n       SYSDATE, 'SH_CLERK', 2400) \r\n   RETURNING salary*12, job_id INTO :bnd1, :bnd2;\r\n\r\nEND;\r\n```\r\n\r\n* The [values clause](https://docs.oracle.com/en/database/oracle/oracle-database/18/lnpls/INSERT-statement-extension.html#GUID-D81224C4-06DE-4635-A850-41D29D4A8E1B) of the insert statement should support records in plsql, e.g.\r\n\r\n```\r\nDECLARE\r\n   l_employee   omag_employees%ROWTYPE;\r\nBEGIN\r\n   l_employee.employee_id := 500;\r\n   l_employee.last_name := 'Mondrian';\r\n   l_employee.salary := 2000;\r\n\r\n   INSERT\r\n     INTO omag_employees \r\n   VALUES l_employee;\r\nEND;\r\n```\r\n\r\n* The [trim function](https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/TRIM.html) should support the default case, which is not specifying the characters to trim (then spaces are trimmed):\r\n\r\n```\r\nselect max(cmp_id)\r\n        into v_cmp_id\r\n        from companies\r\n        where trim(sap_number) = trim(v_sap_nr);\r\n```\r\n\r\n* [Implicit cursor attributes](https://docs.oracle.com/en/database/oracle/oracle-database/18/lnpls/implicit-cursor-attribute.html#GUID-5A938EE7-E8D2-468C-B60F-81898F110BE1) such as BULK_ROWCOUNT or BULK_EXCEPTIONS are not supported:\r\n\r\n```\r\nDECLARE\r\n  TYPE NumList IS TABLE OF NUMBER;\r\n  depts NumList := NumList(30, 50, 60);\r\nBEGIN\r\n  FORALL j IN depts.FIRST..depts.LAST\r\n    DELETE FROM emp_temp WHERE department_id = depts(j);\r\n\r\n  FOR i IN depts.FIRST..depts.LAST LOOP\r\n    DBMS_OUTPUT.PUT_LINE (\r\n      'Statement #' || i || ' deleted ' ||\r\n      SQL%BULK_ROWCOUNT(i) || ' rows.'\r\n    );\r\n  END LOOP;\r\n\r\n  DBMS_OUTPUT.PUT_LINE('Total rows deleted: ' || SQL%ROWCOUNT);\r\nEND;\r\n```\r\n\r\n\r\n*Note:* The PR #1808 has a fix for these issues.", "url": "https://github.com/pmd/pmd/issues/1850", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-05-31 16:31:29", "closed": "2019-06-08 15:31:12", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "[java] Local classes should preserve their modifiers", "body": "Local classes have several problems for now:\r\n* The modifiers are not preserved (the production is called with `ClassOrInterfaceDeclaration(0)`, where `0` is supposed to be the modifiers)\r\n* Modifiers can't be mixed with annotations, the lookahead explicitly needs the annotations to precede the modifiers. But mixing modifiers with annotations like `@F final @B class Local {}` is just as valid for local classes as it would be for other types of class declarations.  \r\n* for a local class, `AccessNode#isPackagePrivate` returns true, since there are no other visibility modifiers. A local class is *not* package private though... it's local.\r\n\r\nhttps://github.com/pmd/pmd/blob/c28c34e2f8d4c2f1dac838400cfb81aaab760bc4/pmd-java/etc/grammar/Java.jjt#L2426-L2432", "url": "https://github.com/pmd/pmd/issues/1848", "user": "oowekyala", "labels": ["a:bug", "has:pr", "in:ast"], "created": "2019-05-30 13:05:06", "closed": "2019-06-01 17:49:55", "commits": {"df53fddef93bd53b9b6083c8cf4c0fa98d40a490": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "df53fddef93bd53b9b6083c8cf4c0fa98d40a490", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["94afed80dfc12898b14bb144feff0a48358fc020"], "nameRev": "df53fddef93bd53b9b6083c8cf4c0fa98d40a490 tags/pmd_releases/6.16.0~38^2", "commitMessage": "Update release notes, fixes #1848\n", "commitDateTime": "2019-06-01 19:41:14", "authoredDateTime": "2019-06-01 19:41:14", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["df53fddef93bd53b9b6083c8cf4c0fa98d40a490"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] Regression in MethodReturnsInternalArray not handling enums", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** \r\n6.15\r\n**Rule:**\r\n[MethodReturnsInternalArray](https://pmd.github.io/pmd-6.15.0/pmd_rules_java_bestpractices.html#methodreturnsinternalarray)\r\n**Description:**\r\nIt seems like https://github.com/pmd/pmd/pull/1799 breaks the rule for enums\r\n**Code Sample demonstrating the issue:**\r\n\r\nConsider I have the following enum:\r\n\r\n```\r\npackage com.ourapp.constants.forms;\r\n\r\nimport java.util.Arrays;\r\npublic enum OptionConditionsMenu {\r\n    REDIRECT(Constants.REDIRECT),\r\n\r\n    CONTINUE_TO_NEXT_PAGE(Constants.REDIRECT, \"Continue to next page\"),\r\n    GO_TO_PAGE(Constants.REDIRECT, \"Go to page %d\"),\r\n\r\n    private String[] titles;\r\n\r\n    OptionConditionsMenu(String... titles) {\r\n        this.titles = Arrays.copyOf(titles, titles.length);\r\n    }\r\n\r\n    public String[] getTitles() {\r\n        return titles.clone();\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return titles[0];\r\n    }\r\n\r\n    private static class Constants {\r\n        static final String REDIRECT = \"Redirect\";\r\n    }\r\n\r\n}\r\n```\r\n\r\nI've reduced it a bit just not to be that big. When PMD checks this file, it shows the following warning:\r\n```\r\nMay 26, 2019 8:30:59 PM net.sourceforge.pmd.RuleSet apply\r\nWARNING: Exception applying rule MethodReturnsInternalArray on file /directory/com/ourapp/constants/forms/OptionConditionsMenu.java, continuing with next rule\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.AbstractSunSecureRule.isField(AbstractSunSecureRule.java:42)\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.MethodReturnsInternalArrayRule.visit(MethodReturnsInternalArrayRule.java:52)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:130)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:43)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:135)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTEnumBody.jjtAccept(ASTEnumBody.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:260)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTEnumDeclaration.jjtAccept(ASTEnumDeclaration.java:23)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:280)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:37)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:255)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:336)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:499)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:184)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:96)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\nI believe the source of the problem is that in `MethodReturnsInternalArrayRule:49` there is this line of code:\r\n\r\n```ASTClassOrInterfaceDeclaration td = method.getFirstParentOfType(ASTClassOrInterfaceDeclaration.class);```\r\n\r\nThis one becomes null as it's a enum and this check fails:\r\n```            if (!isField(vn, td)) {```\r\n\r\n**Running PMD through:** *[Other]*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1845", "user": "KroArtem", "labels": ["a:bug", "good first issue", "has:pr"], "created": "2019-05-27 21:10:31", "closed": "2019-06-14 12:30:02", "commits": {"ef90a7c64e2352207b561c61e08e579230be98da": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "ef90a7c64e2352207b561c61e08e579230be98da", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["fadaf070156e1c85cb3ad89d820748531e98cdb0"], "nameRev": "ef90a7c64e2352207b561c61e08e579230be98da tags/pmd_releases/6.16.0~29^2", "commitMessage": "Update release notes, fixes #1845, refs #1847\n", "commitDateTime": "2019-06-14 14:22:58", "authoredDateTime": "2019-06-14 14:22:58", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] Annotated module declarations cause parse error", "body": "Module declarations may be annotated. Although the grammar explicitly tries to handle this,\r\nthe lookahead is not sufficient and when seeing an annotation, the TypeDeclaration branch is taken: \r\n\r\nhttps://github.com/pmd/pmd/blob/fa91d47f7b7b07a1126a515a18a28a3fc932826f/pmd-java/etc/grammar/Java.jjt#L1609-L1610\r\n\r\nThis can be used as a test case:\r\n\r\n```java\r\n@Deprecated(since = \"11\", forRemoval = true)\r\nmodule jdk.pack {\r\n}\r\n```", "url": "https://github.com/pmd/pmd/issues/1842", "user": "oowekyala", "labels": ["a:bug", "has:pr", "in:ast"], "created": "2019-05-25 05:24:28", "closed": "2019-05-25 16:59:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[matlab] [cpd] Parse error with comments", "body": "**Description:** Single line comments after `)` produce parse errors\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nfunction [obj, c,t, s ] = Classification( obj,m,t, cm )%#codegen\r\n```\r\n\r\nThis is fixed by #1813 ", "url": "https://github.com/pmd/pmd/issues/1830", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-05-12 13:48:55", "closed": "2019-05-12 14:27:55", "commits": {"5a5eee16ca664b0ed2276326e5b5dfb896044f56": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5a5eee16ca664b0ed2276326e5b5dfb896044f56", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["ecda36fa70c7da97a18946389845b4da17d30c0f"], "nameRev": "5a5eee16ca664b0ed2276326e5b5dfb896044f56 tags/pmd_releases/6.15.0~26^2", "commitMessage": "Update release notes, fixes #1830, refs #1813\n", "commitDateTime": "2019-05-12 15:51:38", "authoredDateTime": "2019-05-12 15:51:38", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] Parentheses stopped working", "body": "**Affects PMD Version:** 6.11.0\r\n\r\n**Rule:** Parentheses\r\n\r\n**Description:** Parentheses stopped working from version 6.11.0\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nselect *\r\nfrom dual\r\nwhere (dummy = X or 1 = 2)\r\nand 1=1;\r\n", "url": "https://github.com/pmd/pmd/issues/1828", "user": "kabroxiko", "labels": ["a:bug", "has:pr"], "created": "2019-05-11 13:10:34", "closed": "2019-06-08 15:31:14", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "[java] UnsynchronizedStaticFormatter documentation and implementation wrong", "body": "I'm not exactly sure I'm correct but I wanted to note this.\r\n\r\nIn the [documentation](https://pmd.github.io/pmd-6.14.0/pmd_rules_java_multithreading.html#unsynchronizedstaticformatter) it is written that `If multiple threads must access a static formatter, the formatter must be synchronized either on method or block level.`. But mustn't the formatter be synchronized on the *class* instead of on the *instance* if it is a static one? Going through the Java source code of `SimpleDateFormat` for example I can see that this is indeed the case. If I am correct, than the example in the documentation (and the check itself) is wrong:\r\n\r\n```java\r\npublic class Foo {\r\n    private static final SimpleDateFormat sdf = new SimpleDateFormat();\r\n    void bar() {\r\n        sdf.format(); // poor, no thread-safety\r\n    }\r\n    synchronized void foo() {\r\n        sdf.format(); // preferred\r\n    }\r\n}\r\n```\r\n\r\nRather, it should be:\r\n\r\n```java\r\npublic class Foo {\r\n    private static final SimpleDateFormat sdf = new SimpleDateFormat();\r\n    void bar() {\r\n        sdf.format(); // poor, no thread-safety\r\n    }\r\n    void foo() {\r\n        synchronized (Foo.class) {\r\n            sdf.format(); // preferred\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nAm I mistaken somewhere?", "url": "https://github.com/pmd/pmd/issues/1814", "user": "boris-petrov", "labels": ["a:bug", "has:pr", "in:documentation"], "created": "2019-05-08 15:07:53", "closed": "2019-06-08 15:31:13", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "[python] [cpd] Parse error when using Python 2 backticks", "body": "**Example:**\r\n\r\n```python\r\ntest = 'hello'\r\nquoted = `test`\r\nprint quoted\r\n```\r\n\r\n**Parse Error:**\r\n\r\n<details>\r\n<summary>Stacktrace</summary>\r\n<p>\r\n\r\n```\r\nnet.sourceforge.pmd.lang.ast.TokenMgrError: Lexical error in file CODE_LOADED_FROM_STRING at line 2, column 10.  Encountered: \"`\" (96), after : \"\"\r\n\tat net.sourceforge.pmd.lang.python.ast.PythonParserTokenManager.getNextToken(PythonParserTokenManager.java:3763)\r\n\tat net.sourceforge.pmd.lang.python.PythonTokenManager.getNextToken(PythonTokenManager.java:31)\r\n\tat net.sourceforge.pmd.cpd.token.internal.BaseTokenFilter.getNextToken(BaseTokenFilter.java:30)\r\n\tat net.sourceforge.pmd.cpd.internal.JavaCCTokenizer.tokenize(JavaCCTokenizer.java:40)\r\n\tat net.sourceforge.pmd.cpd.PythonTokenizerTest.testBackticks(PythonTokenizerTest.java:64)\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n\r\nBackticks are delimiters in Python 2:\r\nhttps://docs.python.org/2.7/reference/lexical_analysis.html#delimiters\r\n\r\nNote: In Python3 this is not anymore the case: https://docs.python.org/3/reference/lexical_analysis.html#delimiters\r\n\r\nThe PR #1802 fixes this.", "url": "https://github.com/pmd/pmd/issues/1810", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-05-03 10:23:55", "closed": "2019-05-03 11:05:43", "commits": {"cd6be28f9bdea3e15b48c286b98afd8fa5c7184c": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cd6be28f9bdea3e15b48c286b98afd8fa5c7184c", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["cad32d9b830b7b437cd299e87fbdd01658407326"], "nameRev": "cd6be28f9bdea3e15b48c286b98afd8fa5c7184c tags/pmd_releases/6.15.0~28^2", "commitMessage": "Update release notes, refs #1802, fixes #1810\n", "commitDateTime": "2019-05-03 12:27:47", "authoredDateTime": "2019-05-03 12:27:47", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[dart] [cpd] Parse error with escape sequences", "body": "As a result of #1791, certain escape sequences resulted in parse errors. These have now been made explicit.\r\n\r\nExample:\r\n```\r\n\"\\\\\"\r\n```\r\n\r\n\r\nThis is fixed with #1803.", "url": "https://github.com/pmd/pmd/issues/1809", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-05-03 09:54:35", "closed": "2019-05-03 10:03:17", "commits": {"eb37bc12c416e647d6e0ccd0de927601faf5db1b": {"commitGHEventType": "closed", "commitUser": "adangel"}, "97354a64d5de4fe4d564eb3eaa63693d2066d38e": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "eb37bc12c416e647d6e0ccd0de927601faf5db1b", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["becc6ff2f5775488efbbdf62021b9aa26bf050cd"], "nameRev": "eb37bc12c416e647d6e0ccd0de927601faf5db1b tags/pmd_releases/6.15.0~29", "commitMessage": "Updates release notes, fixes #1809, refs #1803\n", "commitDateTime": "2019-05-03 11:55:28", "authoredDateTime": "2019-05-03 11:55:28", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "97354a64d5de4fe4d564eb3eaa63693d2066d38e", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["1ebfb7df87c6d8aab648078489aa35516fe6cdc0"], "nameRev": "97354a64d5de4fe4d564eb3eaa63693d2066d38e tags/pmd_releases/6.15.0~34^2", "commitMessage": "Update changelog, refs #1803\n", "commitDateTime": "2019-04-30 10:40:02", "authoredDateTime": "2019-04-30 10:40:02", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["97354a64d5de4fe4d564eb3eaa63693d2066d38e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] NPE in UnnecessaryLocalBeforeReturnRule", "body": "**Affects PMD Version:** \r\n\r\n6.14.0\r\n\r\n**Rule:**\r\n\r\nUnnecessaryLocalBeforeReturnRule\r\n\r\n**Description:**\r\n\r\nSome code produced an NPE, example shown below.\r\n\r\n```\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.rule.codestyle.UnnecessaryLocalBeforeReturnRule.isAfter(UnnecessaryLocalBeforeReturnRule.java:109)\r\n\tat net.sourceforge.pmd.lang.java.rule.codestyle.UnnecessaryLocalBeforeReturnRule.isInitDataModifiedAfterInit(UnnecessaryLocalBeforeReturnRule.java:139)\r\n\tat net.sourceforge.pmd.lang.java.rule.codestyle.UnnecessaryLocalBeforeReturnRule.visit(UnnecessaryLocalBeforeReturnRule.java:82)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTReturnStatement.jjtAccept(ASTReturnStatement.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:520)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:535)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:530)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:310)\r\n\tat net.sourceforge.pmd.lang.java.rule.codestyle.UnnecessaryLocalBeforeReturnRule.visit(UnnecessaryLocalBeforeReturnRule.java:45)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:130)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:43)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:125)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:32)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:95)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:55)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:280)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:37)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:255)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:336)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class ObjectCreator {\r\n\r\n    private static final String A = \"\"; \r\n    private static final String B = \"\" + A; // the existence of this line causes the NPE.\r\n\r\n    public Object create() {\r\n        final Object o = new Object(A);\r\n        return o;\r\n    }   \r\n}\r\n\r\n```\r\n\r\n**Running PMD through:**\r\nCLI | Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1804", "user": "davidburstromspotify", "labels": ["a:bug", "has:pr"], "created": "2019-04-30 14:09:27", "closed": "2019-05-03 10:03:15", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[core] Ruleset Compatibility fails with excluding rules", "body": "**Affects PMD Version:** 6.13.0\r\n\r\n**Description:**\r\n\r\nWhen a PMD5 ruleset is used, that excludes a rule, that has been both moved and renamed, then the ruleset can't be loaded anymore.\r\n\r\n<details>\r\n<summary>Stacktrace</summary>\r\n<p>\r\n\r\n```\r\njava.lang.IllegalArgumentException: Unable to exclude rules [GuardLogStatement]; perhaps the rule name is mispelled?\r\nat net.sourceforge.pmd.RuleSetFactory.parseRuleSetReferenceNode(RuleSetFactory.java:536)\r\nat net.sourceforge.pmd.RuleSetFactory.parseRuleNode(RuleSetFactory.java:459)\r\nat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:367)\r\nat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:214)\r\nat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:209)\r\n...\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n<rule ref=\"rulesets/java/logging-java.xml\">\r\n    <exclude name=\"GuardLogStatementJavaUtil\"/>\r\n</rule>\r\n```\r\n\r\nThe issue originated here: https://github.com/m2e-code-quality/m2e-code-quality/issues/213", "url": "https://github.com/pmd/pmd/issues/1794", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-04-26 12:28:21", "closed": "2019-04-28 01:41:07", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[cpd] [core] Use better ClassLoader for ServiceLoader in LanguageFactory", "body": "**Affects PMD Version:** at least > 6.0.0\r\n\r\n**Background:** I currently migrate [gradle-cpd-plugin](https://github.com/aaschmid/gradle-cpd-plugin) using [Gradle Worker API](https://guides.gradle.org/using-the-worker-api/) in order to avoid conflicts of different ANTLR versions and not pollute the default Gradle task execution classpath.\r\n\r\n**Description:** Creating a `Language` within a Gradle worker thread causes a `java.util.ServiceConfigurationError: net.sourceforge.pmd.cpd.Language: Provider net.sourceforge.pmd.cpd.CPPLanguage not a subtype` exception. The reason is that the `ServiceLoader` used in `LanguageFactory` defaults to `Thread.currentThread().getContextClassLoader()` to load classes. Gradle's Worker used a different classloader to load the class where `LanguageFactory#createLanguage` is called from.\r\n\r\n**My Solution:** I copied `LanguageFactory` and replaced `ServiceLoader.load(Language.class, this.getClass().getClassLoader())` (see [de.aaschmid.gradle.plugins.cpd.internal.cpd.LanguageFactory](https://github.com/aaschmid/gradle-cpd-plugin/blob/use-worker-api/src/main/java/de/aaschmid/gradle/plugins/cpd/internal/cpd/LanguageFactory.java#L37)). This is not a generic solution, however. Do you have other ideas on this or is it just an issue you are not willing to fix? I can try a PR if you give a rough direction how you would like to have it fixed.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n1. Clone https://github.com/aaschmid/gradle-cpd-plugin\r\n2. Switch to branch \"use-worker-api\" (Note: it is still WIP)\r\n3. Execute `CpdAcceptanceTest#executing 'Cpd' task on duplicate 'java' source should throw 'GradleException' and produce 'cpdCheck.csv' with one warning`. Note that \"cpdCheck.csv\" is generated correctly (even if test might fail).\r\n4. Goto `LanguageFactory` and restore to `ServiceLoader.load(Language.class)`. Now it fails with something like `ServiceLoader<Language> languageLoader = ServiceLoader.load(Language.class); //, this.getClass().getClassLoader());`\r\n\r\n(Note: Don't hesitate to ask for a better branch / example. It is currently very WIP).\r\n\r\n\r\n**Running PMD through:** *[CPDs Java API]* using Java 8 on Archlinux\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1788", "user": "aaschmid", "labels": ["a:bug", "in:cpd"], "created": "2019-04-22 13:04:45", "closed": "2019-04-22 16:33:58", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[cpp] Improve support for raw string literals", "body": "**Affects PMD Version:** \r\n6.13.0\r\n\r\n**Description:**\r\nC++ has support for raw string literals (see https://en.cppreference.com/w/cpp/language/string_literal). It seems like CPD doesn't support these properly when they span multiple lines.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n    const char* qml = R\"QML(\r\nimport QtQuick 2.6\r\nimport QtQuick.Controls 1.5\r\nimport QtQuick.Layouts 1.3\r\n\r\nItem {\r\n  ApplicationWindow {\r\n    visible : true\r\n    width   : 800\r\n    height  : 600\r\n    title   : qsTr( \"A\" )\r\n  }\r\n}\r\n)QML\";\r\n```\r\n\r\n**Running PMD through:** *CLI*\r\n```\r\nnet.sourceforge.pmd.lang.ast.TokenMgrError: Lexical error in file /tmp/cpd/21920/QML.cpp at line 1, column 29.  Encountered: \"\\n\" (10), after : \"\\\"QML(\"\r\n\tat net.sourceforge.pmd.lang.cpp.ast.CppParserTokenManager.getNextToken(CppParserTokenManager.java:1837)\r\n\tat net.sourceforge.pmd.lang.cpp.CppTokenManager.getNextToken(CppTokenManager.java:30)\r\n\tat net.sourceforge.pmd.cpd.token.internal.BaseTokenFilter.getNextToken(BaseTokenFilter.java:30)\r\n\tat net.sourceforge.pmd.cpd.internal.JavaCCTokenizer.tokenize(JavaCCTokenizer.java:40)\r\n\tat net.sourceforge.pmd.cpd.CPD.addAndThrowLexicalError(CPD.java:142)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:137)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:107)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:69)\r\n\tat net.sourceforge.pmd.cpd.CPD.addDirectory(CPD.java:79)\r\n\tat net.sourceforge.pmd.cpd.CPD.addRecursively(CPD.java:64)\r\n\tat net.sourceforge.pmd.cpd.CPDCommandLineInterface.addSourcesFilesToCPD(CPDCommandLineInterface.java:133)\r\n\tat net.sourceforge.pmd.cpd.CPDCommandLineInterface.addSourceFilesToCPD(CPDCommandLineInterface.java:113)\r\n\tat net.sourceforge.pmd.cpd.CPDCommandLineInterface.main(CPDCommandLineInterface.java:86)\r\n\tat net.sourceforge.pmd.cpd.CPD.main(CPD.java:177)\r\n```", "url": "https://github.com/pmd/pmd/issues/1784", "user": "maikelsteneker", "labels": ["a:bug", "has:pr"], "created": "2019-04-19 09:45:07", "closed": "2019-05-16 17:02:41", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "[apex] comments on constructor not recognized when the Class has inner class", "body": "Affects PMD Version: 6.13.0\r\n\r\nRule: [ApexDoc](https://pmd.github.io/pmd-6.14.0/pmd_rules_apex_documentation.html#apexdoc)\r\n\r\nDescription: comments on constructor not being recognized when the apex class has inner classes\r\n\r\nCode Sample demonstrating the issue:\r\n```\r\n/**\r\n * @description outer class\r\n */\r\npublic class OuterClass {\r\n\r\n    private String testStr;\r\n\r\n    /**\r\n     * @description constructor\r\n     *\r\n     * @param       testStr     test string\r\n     */\r\n    public OuterClass(String testStr) { \r\n        this.testStr = testStr;\r\n    }\r\n\r\n    /**\r\n     * @description inner class\r\n     */\r\n    public class InnerClass {\r\n\r\n    }\r\n}\r\n```\r\n\r\nwhen I run pmd with the rule, it reports that there is Missing ApexDoc Comment on the OuterClass constructor, after I removed the InnerClass definition, it passed the pmd check.\r\n\r\nRunning PMD through: CLI\r\n\r\nJava Version: \"1.8.0_25\"\r\nOS: Mac Mojave 10.14.4\r\n", "url": "https://github.com/pmd/pmd/issues/1783", "user": "MessShawn", "labels": ["a:bug", "has:pr"], "created": "2019-04-19 06:41:33", "closed": "2019-05-17 14:32:41", "commits": {"7de0df16ebf1de795720e14acaa71c32ecd44cc4": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 28.00027777777778, "commitsDetails": [{"commitHash": "7de0df16ebf1de795720e14acaa71c32ecd44cc4", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["bce37244f7021cbefe0f4f6309c2eef049463696"], "nameRev": "7de0df16ebf1de795720e14acaa71c32ecd44cc4 tags/pmd_releases/6.15.0~21^2", "commitMessage": "Update release notes, fixes #1783, refs #1816\n", "commitDateTime": "2019-05-17 15:58:37", "authoredDateTime": "2019-05-17 15:58:37", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[go] Parsing errors encountered with escaped backslash", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** \r\n6.13.0\r\n[CPD]\r\n\r\n**Description:**\r\nI am using cpd to run a folder contains go files. Following is the command I run, and errors encountered. \r\n\r\n**Code Sample demonstrating the issue:**\r\n```\r\ncpd.bat --minimum-tokens 100 --files . --language go --format xml --encoding utf-8 > cpd_test.xml\r\nnet.sourceforge.pmd.lang.ast.TokenMgrError: Lexical error in file test.go at line 392, column 47.  Encountered: token recognition error at: '\\\\'\r\n        at net.sourceforge.pmd.cpd.AntlrTokenizer.tokenize(AntlrTokenizer.java:45)\r\n        at net.sourceforge.pmd.cpd.CPD.addAndThrowLexicalError(CPD.java:142)\r\n        at net.sourceforge.pmd.cpd.CPD.add(CPD.java:137)\r\n        at net.sourceforge.pmd.cpd.CPD.add(CPD.java:107)\r\n        at net.sourceforge.pmd.cpd.CPD.add(CPD.java:69)\r\n        at net.sourceforge.pmd.cpd.CPD.addDirectory(CPD.java:79)\r\n        at net.sourceforge.pmd.cpd.CPD.addRecursively(CPD.java:64)\r\n        at net.sourceforge.pmd.cpd.CPDCommandLineInterface.addSourcesFilesToCPD(CPDCommandLineInterface.java:133)\r\n        at net.sourceforge.pmd.cpd.CPDCommandLineInterface.addSourceFilesToCPD(CPDCommandLineInterface.java:113)\r\n        at net.sourceforge.pmd.cpd.CPDCommandLineInterface.main(CPDCommandLineInterface.java:86)\r\n        at net.sourceforge.pmd.cpd.CPD.main(CPD.java:177)\r\n```\r\nThe following code is where the error appears\r\n```\r\nfunc test(in *Value, param *Value) (*Value, *Error) {\r\n\toutput := strings.Replace(in.String(), \"\\\\\", \"\\\\\\\\\", -1)    ----line:392\r\n\toutput = strings.Replace(output, \"\\\"\", \"\\\\\\\"\", -1)\r\n\toutput = strings.Replace(output, \"'\", \"\\\\'\", -1)\r\n\treturn AsValue(output), nil\r\n}\r\n```\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1751", "user": "iccengan", "labels": ["a:bug", "has:pr"], "created": "2019-04-02 09:41:34", "closed": "2019-04-05 12:17:39", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[plsql] % not supported in \"TestSearch%notfound\"", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n<!-- NB: issues about the rule designer should be opened at https://github.com/pmd/pmd-designer/issues -->\r\n\r\n**Affects PMD Version:** \r\npmd-bin-6.12.0\r\n**Rule:**\r\nTomKytesDespair\r\n**Description:**\r\nParse Exception:\r\n\r\nCaused by: net.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"%\" \"% \"\" at line 23, column 18.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n``` plsql\r\nCREATE OR REPLACE PACKAGE lpe_test is\r\n\r\nprocedure testif;\r\n\r\nend lpe_test;\r\n/\r\n\r\nCREATE OR REPLACE PACKAGE BODY lpe_test is\r\n\r\n\r\nprocedure testif\r\nis\r\ncursor TestSearch\r\nis\r\nselect 1 from dual;\r\n\r\nTestRow TestSearch%rowtype;\r\n\r\nbegin\r\n    open TestSearch;\r\n    fetch TestSearch into TestRow;\r\n\r\n    if TestSearch%notfound then\r\n        DBMS_OUTPUT.PUT_LINE('Not found');\r\n    else\r\n        DBMS_OUTPUT.PUT_LINE('Found');\r\n    end if;\r\n    close TestSearch;\r\nend testif;\r\n\r\nend lpe_test;\r\n/\r\n```\r\n\r\n**Running PMD through:** *[ Ant or standalone with JDK 1.8]*\r\npmd-bin-6.12.0/bin/run.sh pmd -d /home/tstdba/dcs/jenkins/test_plsql_pmd_issue.sql -l plsql -R rulesets/plsql/TomKytesDespair.xml -f xml\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1733", "user": "lpeddy", "labels": ["a:bug", "has:pr"], "created": "2019-03-21 17:09:20", "closed": "2019-03-30 17:11:56", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[pslql] ParseException when parsing ELSIF", "body": "**Affects PMD Version:** 6.12.0\r\n\r\n**Description:**\r\nI\u2019m trying to test PMD with PLSQL and I\u2019m getting an error when parsing  <IF> <THEN> <ELSIF> <ELSE> <ENDIF>\r\n\r\nWhen I use IF whitout ELSIF it works fine but when I use it i got an exception.\r\n\r\n<details>\r\n  <summary>Exception stacktrace</summary>\r\n  <p>\r\n\r\n```\r\nnet.sourceforge.pmd.PMDException: Error while parsing C:\\sapatin\\pmd-bin-6.12.0\\update_planned_hrs.sql\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:99)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n        at java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n        at java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n        at java.lang.Thread.run(Unknown Source)\r\nCaused by: net.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" <UNSIGNED_NUMERIC_LITERAL> \"2 \"\" at line 15, column 11.\r\n...\r\n```\r\n\r\n</p>\r\n</details>\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nCREATE OR REPLACE PACKAGE BODY update_planned_hrs\r\nIS\r\n\r\nFUNCTION existing_planned (p_emp_id IN NUMBER, p_project_id IN NUMBER) RETURN NUMBER\r\n\r\nIS\r\n\r\nexisting_hours NUMBER(4);\r\n\r\nBEGIN\r\n   IF  1 = 1   THEN\r\n    \r\n     null;\r\n     \r\n   ELSIF 2 = 2  THEN\r\n     null;\r\n   ELSE\r\n     null;\r\n     \r\n   END IF;\r\n\r\n\r\n   RETURN (existing_hours);\r\n\r\n   EXCEPTION\r\n          WHEN OTHERS THEN NULL;\r\n\r\n   END existing_planned;\r\n   \r\n\r\nEND update_planned_hrs;\r\n/\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nRunning from command line with JDK 11.\r\n`pmd -d C:\\pmd-bin-6.12.0\\test -l plsql -R rulesets/plsql/TomKytesDespair.xml -f xml`\r\n", "url": "https://github.com/pmd/pmd/issues/1731", "user": "fsapatin", "labels": ["a:bug", "has:pr"], "created": "2019-03-20 21:05:10", "closed": "2019-03-30 17:11:56", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[java] JavaRuleViolation loses information in `className` field when class has package-private access level ", "body": "\r\n**Affects PMD Version:** 6.12\r\n\r\n**Rule:** e.g UnusedUmportsRule\r\n\r\n**Description:**\r\nUnusedImportsRule warns about unused imports. When it founds an unused import, it adds it to a `Set<ImportWrapper> imports` and then adds violation. `JavaRuleViolation` has method `setClassNameFrom`, which (I believe) has the root of the problem.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nHere is this method that has the problem. If the class has default (package-private) access level, `qualifiedName` and `className` both remain **null**.\r\n```\r\n    private void setClassNameFrom(JavaNode node) {\r\n        String qualifiedName = null;\r\n        for (AbstractAnyTypeDeclaration parent : node.getParentsOfType(AbstractAnyTypeDeclaration.class)) {\r\n            String clsName = parent.getScope().getEnclosingScope(ClassScope.class).getClassName();\r\n            if (qualifiedName == null) {\r\n                qualifiedName = clsName;\r\n            } else {\r\n                qualifiedName = clsName + '$' + qualifiedName;\r\n            }\r\n        }\r\n\r\n        if (qualifiedName == null) {\r\n            Set<ClassNameDeclaration> classes = node.getScope().getEnclosingScope(SourceFileScope.class)\r\n                    .getClassDeclarations().keySet();\r\n            for (ClassNameDeclaration c : classes) {\r\n                // find the first public class/enum declaration\r\n                if (c.getAccessNodeParent() instanceof AccessNode) {\r\n                    if (((AccessNode) c.getAccessNodeParent()).isPublic()) {\r\n                        qualifiedName = c.getImage();\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (qualifiedName != null) {\r\n            className = qualifiedName;\r\n        }\r\n```\r\n\r\n**Running PMD through:** *Other*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1729", "user": "KroArtem", "labels": ["a:bug", "has:pr"], "created": "2019-03-19 14:21:17", "closed": "2019-04-01 17:46:46", "commits": {"7e500416905f9fba2f9b223687e932b323abd313": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "7e500416905f9fba2f9b223687e932b323abd313", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["8468c4e2bc65498f41f5803e1fbe46d1afff7b9d"], "nameRev": "7e500416905f9fba2f9b223687e932b323abd313 tags/pmd_releases/6.14.0~42^2", "commitMessage": "Update release notes, fixes #1729, refs #1744\n", "commitDateTime": "2019-04-01 19:35:10", "authoredDateTime": "2019-04-01 19:35:10", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[kotlin] CPD: Lexical error in file when using Mockito.`when` or Hamcrest.`is`", "body": "**Affects PMD Version:** 6.11.0\r\n\r\n**Description:** In Koltin when and is are reserved keywords, so when using Mockito or Hamcrest the usages have to be escaped with back ticks\r\n\r\n```\r\nimport org.mockito.Mockito.`when`\r\nor\r\nimport org.hamcrest.Matchers.`is`\r\nassertThat(xyz, `is`(0))\r\n```\r\n\r\n**Running PMD through:** Gradle\r\n\r\n**Stacktrace:**\r\n> Caused by: net.sourceforge.pmd.lang.ast.TokenMgrError: Lexical error in file xyz.kt at line 21, column 30.  Encountered: \"`\" (96), after : \"\"\r\n>         at net.sourceforge.pmd.lang.java.ast.JavaParserTokenManager.getNextToken(JavaParserTokenManager.java:2393)\r\n>         at net.sourceforge.pmd.lang.java.JavaTokenManager.getNextToken(JavaTokenManager.java:25)\r\n>         at net.sourceforge.pmd.cpd.token.JavaCCTokenFilter.getNextToken(JavaCCTokenFilter.java:38)\r\n>         at net.sourceforge.pmd.cpd.JavaTokenizer.tokenize(JavaTokenizer.java:42)\r\n>         at net.sourceforge.pmd.cpd.CPD.addAndThrowLexicalError(CPD.java:142)\r\n>         at net.sourceforge.pmd.cpd.CPD.add(CPD.java:137)\r\n>         at net.sourceforge.pmd.cpd.CPD.add(CPD.java:107)\r\n>         at net.sourceforge.pmd.cpd.CPD$add.call(Unknown Source)\r\n>         at de.aaschmid.gradle.plugins.cpd.internal.CpdExecutor.run(CpdExecutor.groovy:67)\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1722", "user": "MatFl", "labels": ["a:bug"], "created": "2019-03-15 08:39:00", "closed": "2019-04-12 16:41:35", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "[ci] Release Notes are not generated and uploaded automatically", "body": "Something's wrong here:\r\n\r\n```\r\n/home/travis/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/core_ext/kernel_require.rb:54:in `require': cannot load such file -- liquid (LoadError)\r\n\tfrom /home/travis/.rvm/rubies/ruby-2.4.1/lib/ruby/site_ruby/2.4.0/rubygems/core_ext/kernel_require.rb:54:in `require'\r\n\tfrom .travis/render_release_notes.rb:11:in `<main>'\r\n```\r\n(https://travis-ci.org/pmd/pmd/jobs/497700742#L7815)\r\n\r\nWhich means, the \"Readme.md\" file is missing in https://sourceforge.net/projects/pmd/files/pmd/6.12.0/ \r\n(I've uploaded it now manually).\r\n\r\nBut it's also missing for the snapshots, e.g. https://sourceforge.net/projects/pmd/files/pmd/6.13.0-SNAPSHOT/\r\n\r\nIt works in the deploy phase of travis, since the release notes are automatically added to github:\r\nhttps://github.com/pmd/pmd/releases/tag/pmd_releases/6.12.0\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1695", "user": "adangel", "labels": ["a:bug", "in:pmd-internals"], "created": "2019-02-24 08:33:29", "closed": "2019-02-25 19:13:23", "commits": {"9e8fc3f4a2c74cb9ba338a2407ca3c6aeb51d657": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "9e8fc3f4a2c74cb9ba338a2407ca3c6aeb51d657", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["65e59a4e5213dd981a2115eb6092e501bcf6d5cf"], "nameRev": "9e8fc3f4a2c74cb9ba338a2407ca3c6aeb51d657 tags/pmd_releases/6.13.0~59", "commitMessage": "[ci] Release Notes are not generated and uploaded automatically\nFixes #1695\n\nWe need to call ruby via bundler to have all the installed gems available.\n", "commitDateTime": "2019-02-25 20:12:45", "authoredDateTime": "2019-02-25 20:12:45", "commitGitStats": [{"filePath": ".travis/build-deploy.sh", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9e8fc3f4a2c74cb9ba338a2407ca3c6aeb51d657"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": [".travis/build-deploy.sh"]}, {"title": "[java] Possible Data Race in JavaTypeDefinitionSimple.getGenericType", "body": "I am seeing this issue with PMD 6.11.0, using Java 8. It happens _sometimes_ on our CI server, but I was unable to reproduce it consistently for now.\r\n\r\nPMD is configured to use 8 threads on an 8 cores machine.\r\n\r\nHere's the relevant part from a stack trace.\r\n\r\n```\r\nnet.sourceforge.pmd.PMDException: Error while processing\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:102)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n    at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n    at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n    ...\r\nCaused by: java.lang.ArrayIndexOutOfBoundsException: 1\r\n    at java.util.ArrayList.add(ArrayList.java:463)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.getGenericType(JavaTypeDefinitionSimple.java:138)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.getGenericType(JavaTypeDefinitionSimple.java:107)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.getGenericType(JavaTypeDefinitionSimple.java:97)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.resolveTypeDefinition(JavaTypeDefinitionSimple.java:183)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.resolveTypeDefinition(JavaTypeDefinitionSimple.java:177)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.resolveTypeDefinition(JavaTypeDefinitionSimple.java:157)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.getApplicableMethods(MethodTypeResolution.java:481)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:387)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTName.jjtAccept(ASTName.java:35)\r\n    ...\r\n```\r\n\r\nMaybe this is a data race in the lazy initialization of a `JavaTypeDefinitionSimple.genericArgs`?", "url": "https://github.com/pmd/pmd/issues/1691", "user": "rblasch", "labels": ["a:bug", "has:pr"], "created": "2019-02-22 13:03:16", "closed": "2019-04-19 17:08:38", "commits": {}, "ttf": 56.000277777777775, "commitsDetails": []}, {"title": "[ui] No default language version selected", "body": "Default version was not filled-in on first startup. Pointed out by #1672 ", "url": "https://github.com/pmd/pmd/issues/1679", "user": "oowekyala", "labels": ["a:bug"], "created": "2019-02-20 12:39:10", "closed": "2019-02-20 12:41:11", "commits": {"60bf26d3754b18c0886f852de41c191d15365609": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "60bf26d3754b18c0886f852de41c191d15365609", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["f6b909d844a522391bf2a0a88a77f9732d85ab3d"], "nameRev": "60bf26d3754b18c0886f852de41c191d15365609 tags/pmd_releases/6.12.0~8", "commitMessage": "Update release notes\n\nCloses #1679\n", "commitDateTime": "2019-02-20 13:41:02", "authoredDateTime": "2019-02-20 13:41:02", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["60bf26d3754b18c0886f852de41c191d15365609"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] ParseException with analytic functions, trim and subqueries", "body": "**Affects PMD Version:**  6.11.0\r\n\r\nThere are a couple of parse problems:\r\n\r\n1. AnalyticClause (OVER)\r\n\r\nSee https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/Analytic-Functions.html\r\n\r\n```\r\n-- Example from: https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/AVG.html\r\nSELECT manager_id, last_name, hire_date, salary,\r\n       AVG(salary) OVER (PARTITION BY manager_id ORDER BY hire_date\r\n  ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS c_mavg\r\n  INTO some_record\r\n  FROM employees\r\n  ORDER BY manager_id, hire_date, salary;\r\n```\r\n\r\n2. LISTAGG Function \r\n\r\nSee https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/LISTAGG.html\r\n\r\n```\r\n-- Example from: https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/LISTAGG.html\r\nSELECT LISTAGG(last_name, '; ')\r\n         WITHIN GROUP (ORDER BY hire_date, last_name) \"Emp_list\",\r\n       MIN(hire_date) \"Earliest\"\r\n  INTO some_record\r\n  FROM employees\r\n  WHERE department_id = 30;\r\n```\r\n\r\n3. SELECT INTO should allow to address a field of a record variable\r\n\r\n```\r\nSELECT the_id\r\n    INTO my_record.the_id\r\n    FROM my_table\r\n    WHERE the_id = '1';\r\n```\r\n\r\n4. Subqueries in SELECTs should be possible\r\n\r\n```\r\nSELECT (SELECT a FROM DUAL) INTO foo FROM DUAL;\r\n```\r\n\r\n5. Update Statement doesn't support RETURNING\r\n\r\n```\r\nUPDATE employees\r\n   SET salary = salary * 1.1\r\n   WHERE department_id = 100\r\n   RETURNING SUM(salary) INTO :bnd1;\r\n```\r\n\r\n6. TRIM function is not supported yet\r\n\r\nSee https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/TRIM.html\r\n\r\n```\r\nSELECT employee_id,\r\n      TO_CHAR(TRIM(LEADING 0 FROM hire_date))\r\n      FROM employees\r\n      WHERE department_id = 60\r\n      ORDER BY employee_id;\r\n```\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1656", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-02-16 21:08:56", "closed": "2019-02-18 03:46:15", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[core] Advisory - XXE attack on ruleset parsing", "body": "This issue is for future reference.\r\n\r\nAs part of an unrelated security concern discussion regarding a possible remote code execution (which was discarded as impossible) on a [separate issue](https://github.com/pmd/pmd/issues/532), I found that our XML parsing wasn't hardened, allowing for XXE attacks.\r\n\r\nWhen PMD is run, the ruleset XMLs were parsed with the default Java parser settings, which allowed an attacker to perform an XXE attack.\r\n\r\nRulesets can be either local files, or accessed through the network over http / https. So, depending on the context, this attack could require physical access to the machine, or be achieved through a man-in-the-middle attack.\r\n\r\nThe XXE attack can be used to perform information disclosure on the developer's machine, CI servers or other infrastructure running PMD; as well as denial of service attacks and request forgery.\r\n\r\nAll PMD versions up to PMD 6.0.0 are vulnerable.\r\n\r\nA fix was produced in https://github.com/pmd/pmd/pull/592 following [OWASP XXE Prevention cheatsheet](https://www.owasp.org/index.php/XML_External_Entity_(XXE)_Prevention_Cheat_Sheet#Java), making all PMD 6 releases and later safe.", "url": "https://github.com/pmd/pmd/issues/1650", "user": "jsotuyod", "labels": ["a:bug"], "created": "2019-02-11 11:58:33", "closed": "2019-02-11 11:58:40", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[plsql] ParseException when using hierarchical query clause", "body": "**Affects PMD Version:** 6.10.0\r\n\r\n**Description:** Stacktrace:\r\n```\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"BY\" \"BY \"\" at line 5, column 11.\r\nWas expecting one of:\r\n    \";\" ...\r\n    \",\" ...\r\n    \"FETCH\" ...\r\n    \"GROUP\" ...\r\n    \"OFFSET\" ...\r\n    \"ORDER\" ...\r\n    \"WHERE\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53977)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53828)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:14915)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:15630)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Block(PLSQLParser.java:848)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:497)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:194)\r\n```\r\n\r\nSee also https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/SELECT.html#GUID-CFA006CA-6FF1-4972-821E-6996142A51C6\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nBEGIN\r\n\r\nSELECT id INTO v_id \r\n  FROM (SELECT separator_in || string_in || separator_in AS token_list FROM DUAL)\r\n  CONNECT BY col_length <= LENGTH(string_in) - LENGTH(separator_in);\r\n\r\nEND;\r\n/\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1590", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-01-15 16:24:42", "closed": "2019-02-18 03:46:14", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "[plsql] ParseException with subqueries in WHERE clause", "body": "**Affects PMD Version:** 6.10.0\r\n\r\n**Description:** Stacktrace\r\n```\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"=\" \"= \"\" at line 4, column 12.\r\nWas expecting one of:\r\n    \";\" ...\r\n    \"FETCH\" ...\r\n    \"GROUP\" ...\r\n    \"OFFSET\" ...\r\n    \"ORDER\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53977)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53828)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:14915)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:15630)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Block(PLSQLParser.java:848)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:497)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:194)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nBEGIN\r\n\r\nSELECT id INTO v_id FROM table\r\n  WHERE id = (SELECT id FROM other_table);\r\n\r\nUPDATE table SET name = 'a'\r\n  WHERE id = (SELECT id FROM other_table);\r\n\r\nEND;\r\n/\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1589", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-01-15 16:16:04", "closed": "2019-02-18 03:46:13", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "[plsql] Parse Exception with function calls in WHERE clause", "body": "**Affects PMD Version:** 6.10.0\r\n\r\n**Description:** Stacktrace:\r\n```\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"(\" \"( \"\" at line 6, column 41.\r\nWas expecting one of:\r\n    \";\" ...\r\n    \"FETCH\" ...\r\n    \"GROUP\" ...\r\n    \"OFFSET\" ...\r\n    \"ORDER\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53977)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53828)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:14915)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:15630)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nBEGIN\r\n\r\nSELECT value\r\n        INTO v_value\r\n        FROM table\r\n       WHERE colname = utils.get_colname('COLUMN_ID');\r\nEND;\r\n/\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1588", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-01-15 16:08:00", "closed": "2019-01-26 22:26:25", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[plsql] ParseException with EXISTS", "body": "**Affects PMD Version:** 6.10.0\r\n\r\n**Description:**\r\nStacktrace:\r\n\r\n```\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \"\" at line 6, column 9.\r\nWas expecting one of:\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53977)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53828)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Condition(PLSQLParser.java:11055)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.WhereClause(PLSQLParser.java:11015)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.RestOfStatement(PLSQLParser.java:10028)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.SelectIntoStatement(PLSQLParser.java:9998)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nBEGIN\r\n\r\nSELECT id\r\n  INTO id_out\r\n  FROM some_table\r\n  WHERE EXISTS\r\n    (SELECT NULL\r\n     FROM other_table\r\n     WHERE other_id = other_id_in);\r\n\r\nDELETE FROM some_table\r\n  WHERE id = id_in\r\n  AND NOT EXISTS\r\n    (SELECT NULL\r\n     FROM other_table\r\n     WHERE id = id_in);\r\n\r\nEND;\r\n/\r\n\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1587", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-01-15 15:58:13", "closed": "2019-02-18 03:46:13", "commits": {}, "ttf": 33.000277777777775, "commitsDetails": []}, {"title": "[plsql] Parse Exception when functions are used with LIKE", "body": "**Affects PMD Version:** 6.10.0\r\n\r\n**Description:**\r\nStacktrace:\r\n\r\n```\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"LIKE\" \"like \"\" at line 8, column 31.\r\nWas expecting one of:\r\n    \"IN\" ...\r\n    \"NOT\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53977)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53828)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.InCondition(PLSQLParser.java:11373)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Condition2(PLSQLParser.java:11092)\r\n```\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nBEGIN\r\n\r\nselect count(1) \r\n        into users\r\n        from users_table \r\n        where userid = 1\r\n            AND NVL(cmp_id,0) like NVL(other_cmp_id,0);\r\n\r\nselect count(1) \r\n        into users\r\n        from users_table \r\n        where userid = 1\r\n           AND LOWER (what) LIKE LOWER ('%' || name_in || '%');\r\n\r\nEND;\r\n/\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1586", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-01-15 15:49:27", "closed": "2019-01-20 14:08:34", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[plsql] Update Set Clause should allow multiple columns", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** 6.10.0\r\n\r\n**Rule:** n/a\r\n\r\n**Description:**\r\nThere is already a PR which fixes this: #1554 \r\nSee also:\r\n* https://docs.oracle.com/en/database/oracle/oracle-database/18/lnpls/UPDATE-statement-extensions.html#GUID-8FA29ACC-5E0F-4BE1-BC33-2B882C87E36D\r\n* https://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/UPDATE.html#GUID-027A462D-379D-4E35-8611-410F3AC8FDA5\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n    UPDATE schedule\r\n    SET Mon = 'Day Off',\r\n        Tue = 'Day Off'\r\n    WHERE week = 1;\r\n```\r\n\r\n**Running PMD through:** Designer", "url": "https://github.com/pmd/pmd/issues/1583", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2019-01-14 18:16:21", "closed": "2019-01-20 09:44:02", "commits": {"1b75d6c49c044635693730a2104cf2621881d6d8": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "1b75d6c49c044635693730a2104cf2621881d6d8", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["b4d545b0c1ef78d36696f7fd11e1d4d2830551db"], "nameRev": "1b75d6c49c044635693730a2104cf2621881d6d8 tags/pmd_releases/6.11.0~16^2", "commitMessage": "Update release notes, refs #1554, fixes #1583\n", "commitDateTime": "2019-01-20 10:29:43", "authoredDateTime": "2019-01-20 10:29:43", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] Private field is detected as public inside nested classes in interfaces", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** 6.10.0\r\n\r\n**Rule:** No rule explicitly, but rules that evaluate the Private attribute of FieldDeclarations\r\n\r\n**Description:**\r\nThe XPath 2.0 Expression `//FieldDeclaration[@Private=true()]` should find the second field named `serialVersionUID`, but it doesn't.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n``` java\r\npublic interface MyInterface {\r\n    public static final Map<String, String> MAPPING = Collections.unmodifiableMap(new HashMap<String, String>() {\r\n        private static final long serialVersionUID = 3855526803226948630L;\r\n        {\r\n            put(\"X\", \"10\");\r\n            put(\"L\", \"50\");\r\n            put(\"C\", \"100\");\r\n            put(\"M\", \"1000\");\r\n        }\r\n    });\r\n}\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1578", "user": "adangel", "labels": ["a:bug", "has:pr", "in:ast"], "created": "2019-01-11 13:35:02", "closed": "2019-01-12 23:19:56", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[java] AvoidDuplicateLiterals warning about deprecated separator property when not used", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** \r\n6.10.0\r\n\r\n**Rule:**\r\n[AvoidDuplicateLiterals](https://pmd.github.io/pmd-6.12.0/pmd_rules_java_errorprone.html#avoidduplicateliterals)\r\n\r\n**Description:**\r\nMany copies of the following warning are printed when running PMD, despite the fact that I have not set the \"separator\" property:\r\n\r\n```\r\n[WARNING] Rule AvoidDuplicateLiterals uses deprecated property 'separator'. Future versions of PMD will remove support for this property. Please use the default separator (',') and avoid setting this property instead.\r\n```\r\n\r\nRelevant section of my PMD config:\r\n\r\n```xml\r\n<rule ref=\"category/java/errorprone.xml/AvoidDuplicateLiterals\">\r\n        <!-- TODO: Someday set this back to default priority to fail builds -->\r\n        <priority>5</priority>\r\n        <properties>\r\n            <property name=\"maxDuplicateLiterals\" value=\"2\" />\r\n            <property name=\"minimumLength\" value=\"1\" />\r\n            <property name=\"exceptionList\" value=\"]\" />\r\n            <property name=\"skipAnnotations\" value=\"true\" />\r\n            <!-- Suppress in exceptions and LOG statements -->\r\n            <property name=\"violationSuppressXPath\">\r\n                <value>\r\n                    <![CDATA[./ancestor::ThrowStatement |\r\n                    ./ancestor::PrimaryExpression/PrimaryPrefix/Name[starts-with(@Image,'LOG.')]]]>\r\n                </value>\r\n            </property>\r\n        </properties>\r\n    </rule>\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nMaven 3.6.0, pmd plugin 3.11.0, Java 8, Mac OS 10.14.1\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1570", "user": "zman0900", "labels": ["a:bug", "has:pr"], "created": "2019-01-09 15:17:10", "closed": "2019-03-30 17:11:57", "commits": {}, "ttf": 80.00027777777778, "commitsDetails": []}, {"title": "[apex] AST node attribute @Image not usable / always null in XPath rule / Designer", "body": "\r\n<img width=\"1160\" alt=\"pmd_rule_designer__v_6_1_0_\" src=\"https://user-images.githubusercontent.com/8180281/50896707-34d34400-140a-11e9-8599-49d41a7655a8.png\">\r\n<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** \r\n6.1\r\n\r\n**Rule:**\r\nCustom XPath Rule see screenshot\r\n\r\n**Description:**\r\nI am unable to see the contents of the Image AST Attribute and do regexp on it in XPath rules\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nclass MyApexClass {\r\n    void bar(){\r\n         if(!list.isEmpty() && list != null) {\r\n            foo();\r\n         }\r\n    }\r\n}\r\n```\r\n\r\n```\r\n//*[matches(@Image, '&& [a-zA-Z0-9]* != null')]\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nDesigner from CLI\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1568", "user": "rsoesemann", "labels": ["a:bug", "has:pr"], "created": "2019-01-09 11:28:55", "closed": "2019-01-25 17:17:40", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "[core] CPD: Lexical error in file (no file name provided)", "body": "**Affects PMD Version:** 6.10.0\r\n\r\n**Rule:** CPD\r\n\r\n**Description:**\r\n\r\nRunning CPD on the given file (`run.sh cpd --minimum-tokens 100 --language cpp --files File.cpp`) produces the following error:\r\nnet.sourceforge.pmd.lang.ast.TokenMgrError: Lexical error in file (no file name provided) at line 7, column 37.\r\nThe parse error is unfortunate, but what is more surprising is that the error message says \"no file name provided\", even though I have provided the filename. When running the same command with PMD 6.9.0, the error message does contain the correct filename:\r\nnet.sourceforge.pmd.lang.ast.TokenMgrError: Lexical error in file /tmp/project/File.cpp at line 7, column 37.  Encountered: \"\\n\" (10), after : \"\\\"QML(\"\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nnamespace ABC\r\n{\r\n  namespace DEF\r\n  {\r\n\r\n#ifdef USE_QT\r\n    const char* perPixelQml = R\"QML(\r\n)QML\";\r\n  }\r\n}\r\n#endif // USE_QT\r\n```\r\n\r\n**Running PMD through:** *CLI*", "url": "https://github.com/pmd/pmd/issues/1559", "user": "maikelsteneker", "labels": ["a:bug", "has:pr", "in:cpd"], "created": "2019-01-07 13:53:49", "closed": "2019-02-17 19:34:24", "commits": {}, "ttf": 41.000277777777775, "commitsDetails": []}, {"title": "[java] Default methods should not be considered abstract", "body": "Default methods are by definition not abstract, and the current implementation considers all interface methods abstract. This is inconsistent with the JLS, and the java.lang.reflect API. \r\n\r\nhttps://github.com/pmd/pmd/blob/45c8f50930abd69ca6b11c229c7571d341aedbef/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMethodDeclaration.java#L88-L89", "url": "https://github.com/pmd/pmd/issues/1556", "user": "oowekyala", "labels": ["a:bug", "has:pr"], "created": "2019-01-05 22:11:39", "closed": "2019-01-06 21:47:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] NPE in PMD 6.8.0 InvalidSlf4jMessageFormat", "body": "**Affects PMD Version:** 6.8.0\r\n\r\n**Rule:** <rule ref=\"rulesets/java/logging-java.xml/InvalidSlf4jMessageFormat\"/>\r\n\r\n**Description:**\r\nNPE while applying rule InvalidSlf4jMessageFormat. Trace:\r\n ```\r\nException applying rule InvalidSlf4jMessageFormat on file ...ClassName.java, continuing with next rule\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.rule.errorprone.InvalidSlf4jMessageFormatRule.expectedArguments(InvalidSlf4jMessageFormatRule.java:175)\r\n\tat net.sourceforge.pmd.lang.java.rule.errorprone.InvalidSlf4jMessageFormatRule.visit(InvalidSlf4jMessageFormatRule.java:86)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTName.jjtAccept(ASTName.java:35)\r\n\tat net.sourceforge.pmd.lang.java.rule.JavaRuleChainVisitor.visit(JavaRuleChainVisitor.java:44)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractRuleChainVisitor.visitAll(AbstractRuleChainVisitor.java:96)\r\n\tat net.sourceforge.pmd.RuleChain.apply(RuleChain.java:67)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:140)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:184)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:96)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n\tat net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:108)\r\n\tat net.sourceforge.pmd.PMD.processFiles(PMD.java:329)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:191)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:275)\r\n\tat net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:50)\r\n        ...\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic enum ClassName {\r\n    INSTANCE;\r\n\r\n    private final Logger log = LoggerFactory.getLogger(ClassName.class);\r\n\r\n    public void sendMessage(String message) {\r\n        log.info(message);\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        ClassName.INSTANCE.sendMessage(\"A message\");\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *Gradle*", "url": "https://github.com/pmd/pmd/issues/1549", "user": "cynthux", "labels": ["a:bug", "good first issue", "has:pr"], "created": "2018-12-27 20:41:32", "closed": "2019-01-08 23:43:56", "commits": {}, "ttf": 12.000277777777777, "commitsDetails": []}, {"title": "[apex] PMD parsing exception for Apex classes using 'inherited sharing' keyword", "body": "**Affects PMD Version:** 6.10\r\n\r\n**Rule:**  Not a rule specific, general parsing error when building AST\r\n\r\n**Description:**\r\nWe are running pmd against our apex classes written in 44.0 SF api version.\r\nBunch of the classes are using 'inherited sharing' keywords.\r\nAnd all such classes fail with an error message when parsing by PMD:\r\n\r\n> net.sourceforge.pmd.lang.ast.ParseException: Couldn't parse the source - there is not root node - Syntax Error??\r\n\r\nAfter getting rid off 'inherited sharing', classes have been parsed successfully.\r\n\r\n**Code Sample demonstrating the issue:**\r\n```\r\npublic inherited sharing class SimpleClass {\r\n}\r\n```\r\n\r\n**Running PMD through:** *[Ant ]*\r\n", "url": "https://github.com/pmd/pmd/issues/1546", "user": "avesolovksyy", "labels": ["a:bug", "has:pr"], "created": "2018-12-26 16:48:48", "closed": "2019-01-18 14:29:01", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "[java] NPE with incomplete auxclasspath", "body": "When running with an incomplete auxclasspath, I'm finding some NPEs during typeresolution.\r\n\r\nStacktrace follows:\r\n\r\n```\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.populateType(ClassTypeResolver.java:1361)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:262)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceType.jjtAccept(ASTClassOrInterfaceType.java:32)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:436)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:1156)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTAllocationExpression.jjtAccept(ASTAllocationExpression.java:28)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:401)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:1035)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryPrefix.jjtAccept(ASTPrimaryPrefix.java:42)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:869)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:296)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:729)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTExpression.jjtAccept(ASTExpression.java:34)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:431)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTArgumentList.jjtAccept(ASTArgumentList.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:426)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTArguments.jjtAccept(ASTArguments.java:29)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:406)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimarySuffix.jjtAccept(ASTPrimarySuffix.java:57)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:869)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:476)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:1172)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTStatementExpression.jjtAccept(ASTStatementExpression.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:446)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:461)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:456)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:236)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:43)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:51)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:32)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:55)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:206)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:242)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:37)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:181)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:213)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:41)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.TypeResolutionFacade.initializeWith(TypeResolutionFacade.java:18)\r\n\tat net.sourceforge.pmd.lang.java.AbstractJavaHandler$5.start(AbstractJavaHandler.java:109)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.usesTypeResolution(SourceCodeProcessor.java:153)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:180)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:96)\r\n```\r\n\r\nThis is caused because `JavaTypeDefinition` may return `null`,  but is treated as it is always non-null\r\n\r\nhttps://github.com/pmd/pmd/blob/7cde3ffef980a8afe8aa5e0a930cff3cee4d9374/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinition.java#L41-L49", "url": "https://github.com/pmd/pmd/issues/1532", "user": "jsotuyod", "labels": ["a:bug", "has:pr", "in:type-resolution"], "created": "2018-12-20 15:35:58", "closed": "2019-04-19 16:24:37", "commits": {}, "ttf": 120.00027777777778, "commitsDetails": []}, {"title": "[plsql] ParseException when using TableCollectionExpression", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** 6.10.0-SNAPSHOT\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nBEGIN\r\n\r\nUPDATE someTable\r\n       SET colName = 'N'\r\n       WHERE id = other_id\r\n         AND id NOT IN (SELECT * FROM TABLE(the_expression));\r\n\r\nEND;\r\n/\r\n```\r\n\r\nThis syntax is described here:\r\nhttps://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/SELECT.html#GUID-CFA006CA-6FF1-4972-821E-6996142A51C6__I2065746\r\nhttps://docs.oracle.com/en/database/oracle/oracle-database/18/sqlrf/SELECT.html#GUID-CFA006CA-6FF1-4972-821E-6996142A51C6\r\n\r\n\r\n> table_collection_expression\r\n>\r\n> The table_collection_expression lets you inform Oracle that the value of collection_expression should \r\n> be treated as a table for purposes of query and DML operations. The collection_expression can be a \r\n> subquery, a column, a function, or a collection constructor. Regardless of its form, it must return a\r\n> collection value\u2014that is, a value whose type is nested table or varray. This process of extracting the \r\n> elements of a collection is called collection unnesting.\r\n>\r\n> The optional plus (+) is relevant if you are joining the TABLE collection expression with the parent \r\n> table. The + creates an outer join of the two, so that the query returns rows from the outer table even \r\n> if the collection expression is null. \r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1526", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-12-13 16:43:40", "closed": "2019-01-26 22:31:44", "commits": {}, "ttf": 44.000277777777775, "commitsDetails": []}, {"title": "[java] InvalidSlf4jMessageFormatRule causes NPE in lambda and static blocks", "body": "\r\n**Affects PMD Version:**  6.9.0\r\n\r\n**Rule:** [InvalidSlf4jMessageFormat](https://pmd.github.io/pmd-6.9.0/pmd_rules_java_errorprone.html#invalidslf4jmessageformat)\r\n\r\n**Description:**\r\nNullpointerexception when a logger call with a variable as parameter is not inside a method or constructor\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nsee #1504 \r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1512", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-12-07 18:35:14", "closed": "2018-12-07 18:50:20", "commits": {"c77345a8867f79eda486bedef60a578534d7bf4c": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c77345a8867f79eda486bedef60a578534d7bf4c", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["8f1791c5afad498b0619631e743972ecba0b8dca"], "nameRev": "c77345a8867f79eda486bedef60a578534d7bf4c tags/pmd_releases/6.10.0~11^2", "commitMessage": "Update release notes, fixes #1512, refs #1504\n", "commitDateTime": "2018-12-07 19:40:34", "authoredDateTime": "2018-12-07 19:40:34", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/errorprone/xml/InvalidSlf4jMessageFormat.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[plsql] Parse Exception with IS NOT NULL", "body": "**Affects PMD Version:** 6.10.0-SNAPSHOT\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nBEGIN\r\n\r\nIF (V_BUF.x IS NOT NULL) THEN\r\n  null;\r\nend if;\r\n\r\nend;\r\n```\r\n\r\nException:\r\n```\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"NULL\" \"NULL \"\" at line 3, column 20.\r\nWas expecting:\r\n    \"OF\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53972)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53823)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.IsOfTypeCondition(PLSQLParser.java:27683)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.IsNullCondition(PLSQLParser.java:27572)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnaryExpressionNotPlusMinus(PLSQLParser.java:27244)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnaryExpression(PLSQLParser.java:26927)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.MultiplicativeExpression(PLSQLParser.java:26564)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.AdditiveExpression(PLSQLParser.java:26450)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.RelationalExpression(PLSQLParser.java:26209)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.EqualityExpression(PLSQLParser.java:26139)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.ConditionalAndExpression(PLSQLParser.java:26091)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.ConditionalOrExpression(PLSQLParser.java:26043)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Expression(PLSQLParser.java:25032)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.PrimaryPrefix(PLSQLParser.java:28968)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.PrimaryExpression(PLSQLParser.java:28596)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.IsOfTypeCondition(PLSQLParser.java:27998)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.IsNullCondition(PLSQLParser.java:27572)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnaryExpressionNotPlusMinus(PLSQLParser.java:27244)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnaryExpression(PLSQLParser.java:26927)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.MultiplicativeExpression(PLSQLParser.java:26564)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.AdditiveExpression(PLSQLParser.java:26450)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.RelationalExpression(PLSQLParser.java:26209)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.EqualityExpression(PLSQLParser.java:26139)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.ConditionalAndExpression(PLSQLParser.java:26091)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.ConditionalOrExpression(PLSQLParser.java:26043)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Expression(PLSQLParser.java:25032)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.IfStatement(PLSQLParser.java:20066)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:15297)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:15980)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Block(PLSQLParser.java:848)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:497)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:194)\r\n```\r\n\r\n**Running PMD through:** Designer\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1511", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-12-07 14:39:59", "closed": "2018-12-17 15:08:51", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "[plsql] Parse Exception with OUTER/INNER Joins", "body": "**Affects PMD Version:** 6.10.0-SNAPSHOT\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nBEGIN\r\n\r\nSELECT times.time_id, product, quantity\r\n  INTO r_record\r\n  FROM inventory \r\n     FULL OUTER JOIN times ON (times.time_id = inventory.time_id) \r\n     ORDER BY  2,1;\r\n\r\n\r\nSELECT a\r\n  INTO b\r\n  FROM c tablealias\r\n  INNER JOIN ( SELECT e FROM f )\r\n;\r\n\r\n\r\nEND;\r\n/\r\n```\r\n\r\nExceptions:\r\n```\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"OUTER\" \"OUTER \"\" at line 6, column 11.\r\nWas expecting one of:\r\n    \";\" ...\r\n    \",\" ...\r\n    \"FETCH\" ...\r\n    \"GROUP\" ...\r\n    \"OFFSET\" ...\r\n    \"ORDER\" ...\r\n    \"WHERE\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53972)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53823)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:15265)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:15980)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Block(PLSQLParser.java:848)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:497)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:194)\r\n\r\n\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"INNER\" \"INNER \"\" at line 13, column 3.\r\nWas expecting one of:\r\n    \";\" ...\r\n    \",\" ...\r\n    \"FETCH\" ...\r\n    \"GROUP\" ...\r\n    \"OFFSET\" ...\r\n    \"ORDER\" ...\r\n    \"WHERE\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53972)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53823)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:15265)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:15980)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Block(PLSQLParser.java:848)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:497)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:194)\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1509", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-12-07 14:14:20", "closed": "2018-12-17 15:06:06", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "[plsql] Parse Exception when using SELECT COUNT(*)", "body": "**Affects PMD Version:** 6.10.0-SNAPSHOT\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nDECLARE\r\nBEGIN\r\n\r\nSELECT COUNT(*) INTO x FROM y;\r\nSELECT COUNT (*)  INTO x FROM y;\r\nSELECT COUNT(DISTINCT other_id) INTO x FROM y;\r\n\r\nEND;\r\n/\r\n```\r\n\r\n**Running PMD through:** Designer\r\n", "url": "https://github.com/pmd/pmd/issues/1508", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-12-07 13:55:19", "closed": "2018-12-17 14:44:48", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "[plsql] Parse Exception when using '||' operator in where clause", "body": "**Affects PMD Version:** 6.10.0-SNAPSHOT\r\n\r\n**Description:**\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nDECLARE\r\nBEGIN\r\n\r\nSELECT *\r\n  INTO x\r\n  FROM y\r\n  WHERE a = 'a' || 'b';\r\n\r\nEND;\r\n/\r\n```\r\n\r\nException:\r\n\r\n```\r\nnet.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" \"||\" \"|| \"\" at line 7, column 17.\r\nWas expecting one of:\r\n    \";\" ...\r\n    \"FETCH\" ...\r\n    \"GROUP\" ...\r\n    \"OFFSET\" ...\r\n    \"ORDER\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:53972)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:53823)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:15265)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:15980)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Block(PLSQLParser.java:848)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:497)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:194)\r\n\tat net.sourceforge.pmd.lang.plsql.PLSQLParser.parse(PLSQLParser.java:49)\r\n\tat net.sourceforge.pmd.util.fxdesigner.model.ASTManager.updateIfChanged(ASTManager.java:93)\r\n...\r\n```\r\n\r\n\r\n**Running PMD through:** Designer", "url": "https://github.com/pmd/pmd/issues/1507", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-12-07 13:46:24", "closed": "2019-01-07 21:28:41", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "[java] Cyclo metric should count conditions of for statements correctly", "body": "E.g.\r\n```java\r\n           class Foo {\r\n                private static int compareImports(String import1, String import2) {\r\n                    for (int i = 0; i != import1Tokens.length && i != import2Tokens.length; i++) {\r\n                    }\r\n                }\r\n            }\r\n```\r\n\r\nThe current implementation counts the complexity of the expression in the initializer `int i = 0` instead of the boolean expression:\r\nhttps://github.com/pmd/pmd/blob/1db950bec62df857ae734c1b01ccc0e1876e7124/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/visitors/CycloPathAwareDecorator.java#L49", "url": "https://github.com/pmd/pmd/issues/1483", "user": "oowekyala", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2018-11-27 16:41:57", "closed": "2018-11-28 19:18:39", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[core] Analysis cache fails with wildcard classpath entries", "body": "**Affects PMD Version:** 6.9.0\r\n\r\n**Rule:** Runtime, no specific rule.\r\n\r\n**Description:** We have a file path variable on the stack that ends with a * for wildcarding. For backwards compatibility reasons this cannot be removed. If I add the cacheLocation parameter to the pmd call with any path, absolute, relative, parameterized, etc, it throws the following error when running the PMD target:\r\nc:\\absolutepath\\build.xml:1301: java.nio.file.InvalidPathException: Illegal char * at index 35: c:\\wildcardingpath\\*\r\nAdding that parameter appears to make PMD look at other variables on the stack that aren't directly provided to it. \r\nWe had this same issue with junit and javac but those targets allow the includeAntRuntime=\"false\" parameter to forcibly tell them to ignore all other variables on the stack aside from what you pass into the target. This parameter for ignoring other variables doesn't appear to be allowed on PMD.\r\n\r\n**Running PMD through:** *[Ant]*\r\n\r\nI am running this through Java 11 64 bit on a windows 7 machine.\r\n", "url": "https://github.com/pmd/pmd/issues/1477", "user": "ColColonCleaner", "labels": ["a:bug", "has:pr"], "created": "2018-11-20 21:25:35", "closed": "2018-12-08 19:23:45", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "[core] XMLRenderer: ProcessingErrors from exceptions without a message missing", "body": "**Affects PMD Version:** it's on the master branch\r\n\r\nA ProcessingError could be a `NullPointerException`. If this exception is raised by the JVM, then it usually has no message.\r\n\r\nThis in turn leads to a NPE in the XMLRenderer, which then doesn't render this and the remaining errors. I think, violations are fully renderer, since they have already been processed.\r\n\r\n```\r\nNov. 16, 2018 9:27:51 NACHM. net.sourceforge.pmd.PMD doPMD\r\nSEVERE: Exception during processing\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.util.StringUtil.appendXmlEscaped(StringUtil.java:214)\r\n\tat net.sourceforge.pmd.renderers.XMLRenderer.end(XMLRenderer.java:126)\r\n\tat net.sourceforge.pmd.PMD.doPMD(PMD.java:244)\r\n\tat net.sourceforge.pmd.PMD.run(PMD.java:485)\r\n\tat net.sourceforge.pmd.cli.PMDCommandLineInterface.run(PMDCommandLineInterface.java:165)\r\n\tat net.sourceforge.pmd.PMD.main(PMD.java:455)\r\n```\r\n\r\nThis was the reason for the strange pmdtester report on #1434, where violations have been removed (because a rule failed and was skipped) - but no additional errors have been logged:\r\nhttp://chunk.io/pmd/6b7d5dbc13504a828f3a8510dd62dfcf/diff/index.html\r\n\r\n**Running PMD through:** CLI\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1471", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-11-16 20:41:11", "closed": "2018-11-27 23:30:07", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[core] Stylesheet pmd-report.xslt fails to display filepath if 'java' in path", "body": "**Affects PMD Version:** 6.9.0\r\n\r\n**Description:** bug in xslt stylesheet that truncate file path if java in file path like src/main/java/... because forward slashes are being replaced with dots followed by substring function the matches on '.java'. It would simpler to keep the slashes which fixes the problem\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n    Line 56:  <H3><xsl:value-of disable-output-escaping=\"yes\" select=\"substring-before(translate(@name,'/','.'),'.java')\"/></H3>\r\n\r\n```\r\n\r\n**Proposed solution:**\r\n\r\n```\r\n    Line 56:  <H3><xsl:value-of disable-output-escaping=\"yes\" select=\"substring-before(@name,'.java')\"/></H3>\r\n\r\n```\r\n\r\n**Running PMD through:** *https://www.freeformatter.com/xsl-transformer.html, gradle, java*\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1465", "user": "dellgreen", "labels": ["a:bug", "good first issue", "has:pr"], "created": "2018-11-15 14:36:49", "closed": "2019-09-02 17:45:07", "commits": {}, "ttf": 291.0002777777778, "commitsDetails": []}, {"title": "[java] Intermittent PMD failure : PMD processing errors while no violations reported", "body": "PMD Version: 6.8.0\r\n\r\nDescription: This is an intermittent bug not happening all the time, see attached log\r\nRunning PMD through: Maven\r\n\r\n> [DEBUG] Executing PMD...\r\n> Nov 13, 2018 12:32:32 PM net.sourceforge.pmd.cache.AbstractAnalysisCache checkValidity\r\n> INFO: Analysis cache invalidated, rulesets changed.\r\n> Nov 13, 2018 12:32:32 PM net.sourceforge.pmd.cache.AbstractAnalysisCache checkValidity\r\n> INFO: Analysis cache invalidated, execution classpath changed.\r\n> Nov 13, 2018 12:32:36 PM net.sourceforge.pmd.cache.FileAnalysisCache persist\r\n> INFO: Analysis cache updated\r\n> [DEBUG] PMD finished. Found 0 violations.\r\n> [ERROR] PMD processing errors:\r\n> [ERROR] BlaBla.java: Error while processing \r\n>         at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:102)\r\n>         at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n>         at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n>         at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n>         at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n>         at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n>         at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n>         at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n>         at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n>         at java.lang.Thread.run(Thread.java:745)\r\n> Caused by: java.lang.ClassCastException: java.util.HashMap$Node cannot be cast to java.util.HashMap$TreeNode\r\n>         at java.util.HashMap$TreeNode.moveRootToFront(HashMap.java:1827)\r\n>         at java.util.HashMap$TreeNode.treeify(HashMap.java:1944)\r\n>         at java.util.HashMap.treeifyBin(HashMap.java:771)\r\n>         at java.util.HashMap.putVal(HashMap.java:643)\r\n>         at java.util.HashMap.put(HashMap.java:611)\r\n>         at net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinition.forClass(JavaTypeDefinition.java:79)\r\n>         at net.sourceforge.pmd.lang.java.ast.AbstractAnyTypeDeclaration.setQualifiedName(AbstractAnyTypeDeclaration.java:85)\r\n>         at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit(QualifiedNameResolver.java:212)\r\n>         at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:16)\r\n>         at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:55)\r\n>         at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n>         at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n>         at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:206)\r\n>         at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:37)\r\n>         at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:60)\r\n>         at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:11)\r\n>         at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:181)\r\n>         at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit(QualifiedNameResolver.java:134)\r\n>         at net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:41)\r\n>         at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.initializeWith(QualifiedNameResolver.java:118)\r\n>         at net.sourceforge.pmd.lang.java.AbstractJavaHandler$8.start(AbstractJavaHandler.java:140)\r\n>         at net.sourceforge.pmd.SourceCodeProcessor.resolveQualifiedNames(SourceCodeProcessor.java:125)\r\n> \r\n> ", "url": "https://github.com/pmd/pmd/issues/1460", "user": "avivmu", "labels": ["a:bug", "has:pr"], "created": "2018-11-13 13:34:40", "closed": "2018-11-14 20:27:08", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[plsql] ParseException for IF/CASE statement with >=, <=, !=", "body": "**Affects PMD Version:** \r\nPMD 6.9.0\r\n\r\n**Rule:**\r\nNA\r\n**Description:**\r\nThrows ParseException for Valid conditions for IF/CASE statements.\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\ncreate or replace procedure PMD_TEST_CASE( a IN NUMBER) AS\r\n  \r\n\r\nbegin\r\n\r\n\r\n    CASE WHEN a >= 100 then -- Test the same with <=,!=,<> all cases fail both with IF and CASe statements\r\n      dbms_output.put_line('Number is greater than equal to 100');\r\n    ELSE\r\n      dbms_output.put_line('Number is less than 100');  \r\n    END CASE;\r\n\r\nexception\r\n  when others then \r\n    dbms_output.put_line('ERROR: ' || sqlerrm);    \r\n\r\nend PMD_TEST_CASE;\r\n```\r\n\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nCLI\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\nJDK 10.0.1, MacIS.", "url": "https://github.com/pmd/pmd/issues/1454", "user": "ekkirala", "labels": ["a:bug", "has:pr"], "created": "2018-11-11 23:58:16", "closed": "2018-12-04 11:30:18", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "[java] CommentDefaultAccessModifierRule shows incorrect message", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** \r\n6.9.0\r\n\r\n**Rule:**\r\n`codestyle/CommentDefaultAccessmodifier`\r\n\r\n**Description:**\r\n\r\nWhen reporting on a constructor, the error message is:\r\n\r\n> To avoid mistakes add a comment at the beginning of the ***null*** constructor if you want a default access modifier\r\n\r\nIt shouldn't say *null*, but the name of the constructor:\r\n\r\n> To avoid mistakes add a comment at the beginning of the Foo constructor if you want a default access modifier\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic class Foo {\r\n    Foo() { }\r\n}\r\n```\r\n\r\n**Running PMD through:** Any\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1440", "user": "jsotuyod", "labels": ["a:bug", "good first issue", "has:pr"], "created": "2018-11-07 03:32:31", "closed": "2018-11-21 21:08:20", "commits": {"9b1b1351d5fafed9d1695e371565a6de9b535f4b": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "9b1b1351d5fafed9d1695e371565a6de9b535f4b", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["874b528da842b84c28077acff9b63f8130c4bdd2"], "nameRev": "9b1b1351d5fafed9d1695e371565a6de9b535f4b tags/pmd_releases/6.10.0~47^2", "commitMessage": "Update release notes, refs #1453, fixes #1440\n", "commitDateTime": "2018-11-21 21:56:39", "authoredDateTime": "2018-11-21 21:56:39", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[jsp] JspTokenManager has a problem about jsp scriptlet", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\nAffects PMD Version: 6.7.0 \r\n\r\nRule: None\r\n\r\nDescription:  I use pmd-jsp.jar to tokenize the jsp source file, and I want to extract jspscriptlet from the file, but the bound about \"%>\" has some problems. \r\n\r\nCode Sample demonstrating the issue:\r\n\r\n    //just get the token list\r\n    String filepath = \"C:\\\\test.jsp\";\r\n    File f = new File(filepath);\r\n    InputStreamReader isr = new InputStreamReader(new FileInputStream(f));\r\n    JspTokenManager jspTokenManager = new JspTokenManager(isr);\r\n    List<Token> tokenList = new ArrayList<Token>();\r\n    Token token = (Token)jspTokenManager.getNextToken();\r\n    tokenList.add(token);\r\n    while (!token.image.isEmpty()){\r\n        token = (Token)jspTokenManager.getNextToken();\r\n        tokenList.add(token);\r\n    }\r\n\r\nFollowing is a part of source code:\r\n\r\n    <%\r\n    String nodeContent = \"<% %>\";\r\n    %>\r\n    <%\r\n    <![cdata[\r\n    String nodeContent = \"<% %>\";\r\n    ]]>\r\n    %>\r\n\r\nAnd the token list is below:\r\n\r\n    \"<%\", \"\\nString nodeContent = \\\"<%lalal\" ,\"%>\", \"lalala\\\";%>\\n\"\r\n    \"<%\", \"\\n<![cdata[\\nString nodeContent = \\\"<%\", \"%>\", \"\\\";\\n]]>\\n%>\"\r\n\r\nSo  the bound about \"%>\" has some problems.\r\n\r\nRunning PMD through: pmd-jsp-6.7.0.jar & pmd-core-6.7.0.jar\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1402", "user": "duanyanan", "labels": ["a:bug", "has:pr"], "created": "2018-10-21 14:19:53", "closed": "2018-10-25 18:09:55", "commits": {"a5a189b2f3a88f719859e58538e6b8b25d3d0132": {"commitGHEventType": "referenced", "commitUser": "adangel"}, "8c7d4a4cb786ae618ba128455b4b46562c0b523a": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "a5a189b2f3a88f719859e58538e6b8b25d3d0132", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["7cf231bd01cdb37164b46135b3bcec335b8cb10c"], "nameRev": "a5a189b2f3a88f719859e58538e6b8b25d3d0132 tags/pmd_releases/6.9.0~8^2^2~7^2~1", "commitMessage": "[jsp] JspTokenManager has a problem about jsp scriptlet\nRefs #1402\n\nAdd unit test\n", "commitDateTime": "2018-10-25 20:02:22", "authoredDateTime": "2018-10-25 19:29:04", "commitGitStats": [{"filePath": "pmd-jsp/src/test/java/net/sourceforge/pmd/cpd/JSPTokenizerTest.java", "insertions": 53, "deletions": 0, "lines": 53}, {"filePath": "pmd-jsp/src/test/resources/net/sourceforge/pmd/cpd/scriptletWithString.jsp", "insertions": 12, "deletions": 0, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JSPTokenizerTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.JSPTokenizerTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8c7d4a4cb786ae618ba128455b4b46562c0b523a", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["a5a189b2f3a88f719859e58538e6b8b25d3d0132"], "nameRev": "8c7d4a4cb786ae618ba128455b4b46562c0b523a tags/pmd_releases/6.9.0~8^2^2~7^2", "commitMessage": "Update release notes, refs #1406, fixes #1402\n", "commitDateTime": "2018-10-25 20:02:27", "authoredDateTime": "2018-10-25 19:30:59", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a5a189b2f3a88f719859e58538e6b8b25d3d0132"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[apex] ClassCastException caused by Javadoc", "body": "**Affects PMD Version:** 6.8.0\r\n\r\n**Rules:**\r\nExcessiveParameterList\r\nExcessivePublicCount\r\nExcessiveClassLength\r\nNcssConstructorCount\r\nNcssMethodCount\r\nNcssTypeCount\r\n\r\nPossibly: ExcessiveClassLength\r\nPossible all the inherit from AbstractStatisticalApexRule\r\n\r\n**Description:** ClassCastException occurs when running `pmd.bat` against Apex files containing Javadoc comments.\r\n\r\n```\r\njava.lang.ClassCastException: net.sourceforge.pmd.lang.apex.ast.ASTFormalComment cannot be cast to net.sourceforge.pmd.lang.apex.ast.ApexNode\r\n\tat net.sourceforge.pmd.lang.apex.rule.design.ExcessiveNodeCountRule.visit(ExcessiveNodeCountRule.java:42)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:157)\r\n\tat net.sourceforge.pmd.lang.apex.ast.ASTMethod.jjtAccept(ASTMethod.java:22)\r\n\tat net.sourceforge.pmd.lang.apex.rule.design.ExcessiveNodeCountRule.visit(ExcessiveNodeCountRule.java:42)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:162)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visitAll(AbstractApexRule.java:134)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.apply(AbstractApexRule.java:128)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractStatisticalApexRule.apply(AbstractStatisticalApexRule.java:31)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:336)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:499)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:184)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:96)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class SomeClass {\r\n\r\n    /**\r\n     * Comment\r\n     */\r\n    public void doSomething() {\r\n    \tSystem.debug(\"hello world\");\r\n    }\r\n\r\n}\r\n```\r\n\r\n**Running PMD through:** *CLI*\r\n\r\nWindows 10\r\njava version \"1.8.0_181\"", "url": "https://github.com/pmd/pmd/issues/1396", "user": "danbrycefairsailcom", "labels": ["a:bug", "has:pr"], "created": "2018-10-17 10:12:32", "closed": "2018-10-28 01:21:37", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "[java] Processing error (ClassCastException) if a TYPE_USE annotation is used on a base class in the \"extends\" clause", "body": "**Affects PMD Version: 6.8.0** \r\n\r\n**Rule:** [SignatureDeclareThrowsException](https://pmd.github.io/pmd-6.8.0/pmd_rules_java_design.html#signaturedeclarethrowsexception) (maybe others, too)\r\n\r\n**Description:**\r\n\r\nAn annotation used on a base class in the `extends` clause causes PMD to fail with a `ClassCastException`.\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npackage com.example;\r\n\r\nimport java.lang.annotation.ElementType;\r\nimport java.lang.annotation.Target;\r\n\r\npublic final class Namespace {\r\n\r\n    @Target(ElementType.TYPE_USE)\r\n    public @interface Weird {\r\n    }\r\n\r\n    public class WeirdException extends @Weird Exception {\r\n    }\r\n\r\n}\r\n```\r\n\r\nOutput: \r\n\r\n```\r\n[INFO] --- maven-pmd-plugin:3.10.0:pmd (pmd) @ re-managers-impl ---\r\n[INFO] Analysis cache invalidated, rulesets changed.\r\n[INFO] Analysis cache invalidated, execution classpath changed.\r\n[WARNING] Exception applying rule SignatureDeclareThrowsException on file .../Namespace.java, continuing with next rule\r\njava.lang.ClassCastException: class net.sourceforge.pmd.lang.java.ast.ASTAnnotation cannot be cast to class net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceType (net.sourceforge.pmd.lang.java.ast.ASTAnnotation and net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceType are in unnamed module of loader org.codehaus.plexus.classworlds.realm.ClassRealm @c7e16b1)\r\n    at net.sourceforge.pmd.lang.java.rule.design.SignatureDeclareThrowsExceptionRule.visit (SignatureDeclareThrowsExceptionRule.java:80)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept (ASTClassOrInterfaceDeclaration.java:55)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:60)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:84)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:130)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept (ASTClassOrInterfaceBodyDeclaration.java:43)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:60)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:84)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:125)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept (ASTClassOrInterfaceBody.java:32)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:60)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:84)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:95)\r\n    at net.sourceforge.pmd.lang.java.rule.design.SignatureDeclareThrowsExceptionRule.visit (SignatureDeclareThrowsExceptionRule.java:87)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept (ASTClassOrInterfaceDeclaration.java:55)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:60)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:84)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:280)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept (ASTTypeDeclaration.java:37)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:60)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:84)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit (AbstractJavaRule.java:255)\r\n    at net.sourceforge.pmd.lang.java.rule.design.SignatureDeclareThrowsExceptionRule.visit (SignatureDeclareThrowsExceptionRule.java:54)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll (AbstractJavaRule.java:39)\r\n    at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply (AbstractJavaRule.java:27)\r\n    at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply (AbstractDelegateRule.java:336)\r\n    at net.sourceforge.pmd.RuleSet.apply (RuleSet.java:499)\r\n    at net.sourceforge.pmd.RuleSets.apply (RuleSets.java:143)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSource (SourceCodeProcessor.java:184)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode (SourceCodeProcessor.java:96)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode (SourceCodeProcessor.java:51)\r\n    at net.sourceforge.pmd.processor.PmdRunnable.call (PmdRunnable.java:78)\r\n    at net.sourceforge.pmd.processor.PmdRunnable.call (PmdRunnable.java:24)\r\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:515)\r\n    at java.util.concurrent.FutureTask.run (FutureTask.java:264)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1128)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:628)\r\n    at java.lang.Thread.run (Thread.java:834)\r\n[INFO] Analysis cache updated\r\n\r\n[ERROR] PMD processing errors:\r\n[ERROR] Namespace.java: class net.sourceforge.pmd.lang.java.ast.ASTAnnotation cannot be cast to class net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceType (net.sourceforge.pmd.lang.java.ast.ASTAnnotation and net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceType are in unnamed module of loader org.codehaus.plexus.classworlds.realm.ClassRealm @c7e16b1)\r\n```\r\n\r\n\r\n**Running PMD through:** *Maven*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1369", "user": "vovkss", "labels": ["a:bug", "has:pr"], "created": "2018-10-05 20:43:23", "closed": "2018-10-17 06:58:23", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[java] Parsing error on annotated inner class", "body": "**Affects PMD Version:**\r\n\r\n6.8.0\r\n\r\n**Rule:**\r\n\r\nrulesets/java/quickstart.xml\r\n\r\n**Description:**\r\n\r\nIf a sub-class / -type is referenced by using the parent class followed by a dot and then the sub-class and the sub-class is annotated it results into a parser error.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nimport java.lang.annotation.ElementType;\r\nimport java.lang.annotation.Target;\r\n\r\npublic class Demo {\r\n\r\n    @Target(ElementType.TYPE_USE)\r\n    public @interface AnnotationDemo {\r\n    }\r\n\r\n    public class ClassParent {\r\n\r\n        public class ClassChild {\r\n        }\r\n    }\r\n\r\n    public ClassParent.@AnnotationDemo ClassChild foo() {\r\n        return null;\r\n    }\r\n\r\n}\r\n```\r\n\r\n**Running PMD through:** *CLI*\r\n\r\nCommand line:\r\n\r\n```\r\n~/bin/pkgs/pmd/pmd-bin-6.8.0/bin/run.sh pmd -d Demo.java -f xml -l java -R rulesets/java/quickstart.xml\r\n```\r\n\r\nResult:\r\n\r\n```\r\nOct 04, 2018 1:55:35 PM net.sourceforge.pmd.PMD processFiles\r\nWARNING: This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/pmd-6.8.0/pmd_userdocs_incremental_analysis.html\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<pmd xmlns=\"http://pmd.sourceforge.net/report/2.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd\"\r\n    version=\"6.8.0\" timestamp=\"2018-10-04T13:55:35.310\">\r\n<error filename=\"/home/rathgeb/tmp/test/Demo.java\" msg=\"Error while parsing /home/rathgeb/tmp/test/Demo.java\">\r\n<![CDATA[net.sourceforge.pmd.PMDException: Error while parsing /home/rathgeb/tmp/test/Demo.java\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:99)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:51)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:24)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\nCaused by: net.sourceforge.pmd.lang.java.ast.ParseException: Encountered \" \".\" \". \"\" at line 17, column 23.\r\nWas expecting one of:\r\n    <IDENTIFIER> ...\r\n    \"@\" ...\r\n    \"@\" ...\r\n    \"@\" ...\r\n    \"@\" ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    <IDENTIFIER> ...\r\n    \r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.generateParseException(JavaParser.java:11936)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.jj_consume_token(JavaParser.java:11820)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.MethodDeclarator(JavaParser.java:1654)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.MethodDeclaration(JavaParser.java:1603)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBodyDeclaration(JavaParser.java:1239)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBody(JavaParser.java:1194)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceDeclaration(JavaParser.java:650)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.TypeDeclaration(JavaParser.java:539)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.CompilationUnit(JavaParser.java:276)\r\n        at net.sourceforge.pmd.lang.java.AbstractJavaParser.parse(AbstractJavaParser.java:59)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:111)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:175)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:96)\r\n        ... 9 more\r\n]]>\r\n</error>\r\n</pmd>\r\n```", "url": "https://github.com/pmd/pmd/issues/1367", "user": "maggu2810", "labels": ["a:bug", "has:pr", "in:ast"], "created": "2018-10-04 12:01:13", "closed": "2020-04-25 15:36:27", "commits": {}, "ttf": 569.0002777777778, "commitsDetails": []}, {"title": "[website] 404 error on getting started link", "body": "On the [website](https://pmd.github.io/), there is a *Getting Started* link, just under the *Quickstart* section, which redirect to [a 404 page](https://pmd.sourceforge.io/pmd-6.7.0/pmd_userdocs_getting_started.html).", "url": "https://github.com/pmd/pmd/issues/1347", "user": "roipoussiere", "labels": ["a:bug", "good first issue", "in:documentation"], "created": "2018-09-13 14:48:42", "closed": "2018-09-29 20:38:11", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "[java] PMD crashes with java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/xml/ws/Service", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** \r\nAt least 6.4.0 and 6.7.0\r\n**Rule:**\r\nAll\r\n**Description:**\r\nPMD crashes with java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/xml/ws/Service\r\n\r\n**Code Sample demonstrating the issue:**\r\nI cannot provide an example code base right now.\r\n\r\n**Running PMD through:** *Maven*\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n```\r\n    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:184)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:208)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:154)\r\n    at org.apache.maven.lifecycle.internal.MojoExecutor.execute (MojoExecutor.java:146)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:117)\r\n    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject (LifecycleModuleBuilder.java:81)\r\n    at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build (SingleThreadedBuilder.java:56)\r\n    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute (LifecycleStarter.java:128)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:305)\r\n    at org.apache.maven.DefaultMaven.doExecute (DefaultMaven.java:192)\r\n    at org.apache.maven.DefaultMaven.execute (DefaultMaven.java:105)\r\n    at org.apache.maven.cli.MavenCli.execute (MavenCli.java:954)\r\n    at org.apache.maven.cli.MavenCli.doMain (MavenCli.java:288)\r\n    at org.apache.maven.cli.MavenCli.main (MavenCli.java:192)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke0 (Native Method)\r\n    at sun.reflect.NativeMethodAccessorImpl.invoke (NativeMethodAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke (DelegatingMethodAccessorImpl.java:43)\r\n    at java.lang.reflect.Method.invoke (Method.java:498)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced (Launcher.java:289)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.launch (Launcher.java:229)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode (Launcher.java:415)\r\n    at org.codehaus.plexus.classworlds.launcher.Launcher.main (Launcher.java:356)\r\nCaused by: java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/xml/ws/Service\r\n    at java.lang.ClassLoader.defineClass1 (Native Method)\r\n    at java.lang.ClassLoader.defineClass (ClassLoader.java:763)\r\n    at java.security.SecureClassLoader.defineClass (SecureClassLoader.java:142)\r\n    at java.net.URLClassLoader.defineClass (URLClassLoader.java:467)\r\n    at java.net.URLClassLoader.access$100 (URLClassLoader.java:73)\r\n    at java.net.URLClassLoader$1.run (URLClassLoader.java:368)\r\n    at java.net.URLClassLoader$1.run (URLClassLoader.java:362)\r\n    at java.security.AccessController.doPrivileged (Native Method)\r\n    at java.net.URLClassLoader.findClass (URLClassLoader.java:361)\r\n    at net.sourceforge.pmd.util.ClasspathClassLoader.loadClass (ClasspathClassLoader.java:114)\r\n    at java.lang.ClassLoader.loadClass (ClassLoader.java:357)\r\n    at java.lang.ClassLoader.defineClass1 (Native Method)\r\n    at java.lang.ClassLoader.defineClass (ClassLoader.java:763)\r\n    at java.security.SecureClassLoader.defineClass (SecureClassLoader.java:142)\r\n    at java.net.URLClassLoader.defineClass (URLClassLoader.java:467)\r\n    at java.net.URLClassLoader.access$100 (URLClassLoader.java:73)\r\n    at java.net.URLClassLoader$1.run (URLClassLoader.java:368)\r\n    at java.net.URLClassLoader$1.run (URLClassLoader.java:362)\r\n    at java.security.AccessController.doPrivileged (Native Method)\r\n    at java.net.URLClassLoader.findClass (URLClassLoader.java:361)\r\n    at net.sourceforge.pmd.util.ClasspathClassLoader.loadClass (ClasspathClassLoader.java:114)\r\n    at java.lang.ClassLoader.loadClass (ClassLoader.java:411)\r\n    at java.lang.ClassLoader.loadClass (ClassLoader.java:357)\r\n    at net.sourceforge.pmd.lang.java.typeresolution.PMDASMClassLoader.loadClass (PMDASMClassLoader.java:75)\r\n    at net.sourceforge.pmd.lang.java.qname.JavaTypeQualifiedName.loadType (JavaTypeQualifiedName.java:195)\r\n    at net.sourceforge.pmd.lang.java.qname.JavaTypeQualifiedName.getType (JavaTypeQualifiedName.java:175)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractAnyTypeDeclaration.setQualifiedName (AbstractAnyTypeDeclaration.java:85)\r\n    at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit (QualifiedNameResolver.java:212)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit (JavaParserVisitorReducedAdapter.java:16)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept (ASTClassOrInterfaceDeclaration.java:55)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:60)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:11)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:206)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept (ASTTypeDeclaration.java:37)\r\n    at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept (AbstractJavaNode.java:60)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:11)\r\n    at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit (JavaParserVisitorAdapter.java:181)\r\n    at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit (QualifiedNameResolver.java:134)\r\n    at net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept (ASTCompilationUnit.java:41)\r\n    at net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.initializeWith (QualifiedNameResolver.java:118)\r\n    at net.sourceforge.pmd.lang.java.AbstractJavaHandler$8.start (AbstractJavaHandler.java:140)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.resolveQualifiedNames (SourceCodeProcessor.java:125)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSource (SourceCodeProcessor.java:176)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode (SourceCodeProcessor.java:96)\r\n    at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode (SourceCodeProcessor.java:51)\r\n    at net.sourceforge.pmd.processor.PmdRunnable.call (PmdRunnable.java:78)\r\n    at net.sourceforge.pmd.processor.PmdRunnable.call (PmdRunnable.java:24)\r\n    at java.util.concurrent.FutureTask.run (FutureTask.java:266)\r\n    at java.util.concurrent.Executors$RunnableAdapter.call (Executors.java:511)\r\n    at java.util.concurrent.FutureTask.run (FutureTask.java:266)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker (ThreadPoolExecutor.java:1149)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run (ThreadPoolExecutor.java:624)\r\n    at java.lang.Thread.run (Thread.java:748)\r\n```", "url": "https://github.com/pmd/pmd/issues/1330", "user": "lasselindqvist", "labels": ["a:bug", "has:pr"], "created": "2018-09-04 07:02:52", "closed": "2018-10-08 18:42:31", "commits": {}, "ttf": 34.000277777777775, "commitsDetails": []}, {"title": "[java] AvoidUsingHardCodedIP ignores match pattern", "body": "\r\n**Affects PMD Version:** \r\n6.5.0\r\n**Rule:**\r\nAvoidUsingHardCodedIP\r\n**Description:**\r\nAvoidUsingHardCodedIP reports that string \":bee\" is a hardcoded IP. It looks like support for IPv6 was added but documentation is outdated.\r\n\r\n**Code Sample demonstrating the issue:**\r\n```\r\ntaskViewSteps.printComment(\":bee\")\r\n```\r\nLeads to PMD reporting the following:\r\n```\r\nApplication with hard-coded IP addresses can become impossible to deploy in some cases.\r\nExternalizing IP adresses is preferable.AvoidUsingHardCodedIP\r\n```\r\n\r\n**Running PMD through:** *Junit test runs pmd*\r\n\r\nDocs say pattern is `^\"[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}.[0-9]{1,3}\"$`\r\n", "url": "https://github.com/pmd/pmd/issues/1323", "user": "KroArtem", "labels": ["a:bug", "has:pr", "in:documentation"], "created": "2018-08-30 11:18:33", "closed": "2018-09-01 19:32:29", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[core] PMD stops processing file completely, if one rule in a rule chain fails", "body": "**Affects PMD Version:** 6.7.0-SNAPSHOT (probably earlier)\r\n\r\n**Rule:** any rule, that uses rule chain\r\n\r\n**Description:** If during the rule chain execution an exception occurs (processing error of a specific rule), then all remaining rules in the rule chain for this file are skipped. This leads to not detecting violations, when one rule fails. This leads to false-negatives in the PMD report.\r\n\r\n\r\n**Running PMD through:** any\r\n\r\nThanks to @djydewang for finding this bug.\r\n", "url": "https://github.com/pmd/pmd/issues/1300", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-08-13 09:10:48", "closed": "2018-08-13 13:28:18", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] RedundantFieldInitializer - NumberFormatException with Long", "body": "**Affects PMD Version:** 6.7.0-SNAPSHOT (and earlier)\r\n\r\n**Rule:** java-performance/RedundantFieldInitializer\r\n\r\n**Description:** The rule fails to parse `0xffffffffffffffffL` with a NumberFormatException.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class RedundantFieldInitializerTest {\r\n    private long hexLongMinusOne = 0xffffffffffffffffL;\r\n}\r\n```\r\n\r\n**Running PMD through:** any\r\n\r\nThanks to @djydewang for finding this bug!", "url": "https://github.com/pmd/pmd/issues/1298", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-08-13 07:37:54", "closed": "2018-08-13 15:07:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[jsp] Support EL in tag attributes", "body": "\r\n\r\n**Affects PMD Version:** \r\n6.6.0-SNAPSHOT\r\n**Rule:**\r\n\r\n**Description:**\r\nBecause JSP doesn\u2019t draw any distinction between plain text and HTML tags, we can use <c:if> tags anywhere, for instance in the middle of an HTML tag. \r\nConsider this use of a <c:if> tag:\r\n\r\n```\r\n<font size=\"2\" <c:if test=\"${something}\"> color=\"red\" </c:if> >\r\n\t<c:out value=\"some value\" />\r\n</font>\r\n```\r\n\r\nOf course one can rewrite this to\r\n\r\n```\r\n<c:choose>\r\n <c:when test=\"${something}\">\r\n  <font size=\"2\" color=\"red\">\r\n </c:when>\r\n <c:otherwise>\r\n  <font size=\"2\">\r\n </c:otherwise>\r\n</c:choose>\r\n\t<c:out value=\"some value\" />\r\n</font>\r\n```\r\n\r\nThe former is currently not supported by pmd-jsp and the latter is difficult to maintain.\r\nHandling the former can be quite cumbersome but handling a ternary operator in tag attributes it's not. By now pmd-jsp supports EL in tag attribute values, something like\r\n\r\n```\r\n<font size=\"2\" class=\"${something ? 'red' : 'blue'}\">\r\n\t<c:out value=\"some value\" />\r\n</font>\r\n```\r\n\r\nBut does not support EL in tag attributes\r\n\r\n```\r\n<font size=\"2\" ${something ? 'class=\\\"red\\\"' : ''}>\r\n\t<c:out value=\"some value\" />\r\n</font>\r\n```\r\n\r\n**Running PMD through:** *[Maven]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1274", "user": "jordillachmrf", "labels": ["a:bug", "has:pr"], "created": "2018-08-01 14:25:11", "closed": "2018-08-06 07:52:02", "commits": {"dcb9d4ade1a71eb76880d74bb202352897a350de": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "dcb9d4ade1a71eb76880d74bb202352897a350de", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["543aadad208c012b9f1455b04e9b61c8abddcdfa"], "nameRev": "dcb9d4ade1a71eb76880d74bb202352897a350de tags/pmd_releases/6.7.0~46^2", "commitMessage": "Update release notes, closes #1274\n", "commitDateTime": "2018-08-06 09:40:04", "authoredDateTime": "2018-08-06 09:40:04", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dcb9d4ade1a71eb76880d74bb202352897a350de"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[core] Could not find or load main class when using symlinked run.sh", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:**  pmd-bin-6.6.0\r\n\r\n**Description:**\r\n\r\n```\r\nLANG=C run.sh cpd --files myfoo \r\nError: Could not find or load main class net.sourceforge.pmd.cpd.CPD\r\n\r\n```\r\n\r\n```\r\njava -version\r\nopenjdk version \"1.8.0_171\"\r\nOpenJDK Runtime Environment (build 1.8.0_171-8u171-b11-0ubuntu0.16.04.1-b11)\r\nOpenJDK 64-Bit Server VM (build 25.171-b11, mixed mode)\r\n\r\n```\r\n\r\nPlease let me know if you need further information.\r\n\r\nOS: Ubuntu 16.04.4 LTS", "url": "https://github.com/pmd/pmd/issues/1272", "user": "guettli", "labels": ["a:bug", "has:pr"], "created": "2018-08-01 10:42:35", "closed": "2018-10-17 17:42:47", "commits": {}, "ttf": 77.00027777777778, "commitsDetails": []}, {"title": "[javascript] Use of let results in an Empty Statement in the AST", "body": "I am attempting to write an xpath rule for JavaScript, but have noticed using let (https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Statements/let) in my JavaScript results in an Empty Statement in the AST. If let is used in the initializer of a for loop, the entire block shows as an Empty Statement in the AST, which can hide problematic code.", "url": "https://github.com/pmd/pmd/issues/1235", "user": "justgrumpy", "labels": ["a:bug", "has:pr"], "created": "2018-07-11 17:03:07", "closed": "2020-04-20 09:53:57", "commits": {"e2ee78dae3c4b311ca0e7e02fc369e749d27a177": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 648.0002777777778, "commitsDetails": [{"commitHash": "e2ee78dae3c4b311ca0e7e02fc369e749d27a177", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["954bfb28d4b0f19bca4fd41d5522d4a5beed391d"], "nameRev": "e2ee78dae3c4b311ca0e7e02fc369e749d27a177 tags/pmd_releases/6.23.0~14^2~1", "commitMessage": "[javascript] Add support for ES6 version and use that as default\n\nFixes #1235\nFixes #2379\n", "commitDateTime": "2020-04-16 16:42:16", "authoredDateTime": "2020-04-16 16:32:49", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/EcmascriptParserOptions.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTForInLoop.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/EcmascriptParserOptionsTest.java", "insertions": 2, "deletions": 6, "lines": 8}, {"filePath": "pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTForInLoopTest.java", "insertions": 33, "deletions": 0, "lines": 33}, {"filePath": "pmd-javascript/src/test/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTVariableDeclarationTest.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EcmascriptParserOptions.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.EcmascriptParserOptions", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.EcmascriptParserOptions.Version", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTForInLoop.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.ast.ASTForInLoop.isForOf()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EcmascriptParserOptionsTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.EcmascriptParserOptionsTest.testDefaults()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.EcmascriptParserOptionsTest.suite()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ASTForInLoopTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.ast.ASTForInLoopTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ASTVariableDeclarationTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.ecmascript.ast.ASTVariableDeclarationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] Error in sed expression on line 82 of run.sh while detecting installed version of Java", "body": "[core]\r\n\r\n**Affects PMD Version:** 6.5.0, 6.6.0\r\n\r\n**Description:** When invoking `run.sh` I receive the error `/usr/local/Cellar/pmd/6.5.0/libexec/bin/run.sh: line 82: [: : integer expression expected`\r\n\r\nI believe the direct cause is that the `$java_ver` variable is not properly set, on line 79 of `run.sh`\r\n\r\nReplacing line 79 with `java_var=100` fixes the error message.\r\n\r\nI encountered this with 6.5.0 installed via Homebrew, and also with 6.6.0 which I built using Maven.\r\n\r\nThis is the output produced by `java -version` on my machine. I am using the Java installed by Homebrew.\r\n\r\n```\r\njava version \"10\" 2018-03-20\r\nJava(TM) SE Runtime Environment 18.3 (build 10+46)\r\nJava HotSpot(TM) 64-Bit Server VM 18.3 (build 10+46, mixed mode)\r\n```", "url": "https://github.com/pmd/pmd/issues/1225", "user": "noahsussman", "labels": ["a:bug", "has:pr"], "created": "2018-07-03 17:36:58", "closed": "2018-07-29 09:33:37", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "[java] CyclomaticComplexityRule counts ?-operator twice", "body": "<!-- Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core]. -->\r\n\r\n**Affects PMD Version:** 6.5.0\r\n\r\n**Rule:** category/java/design.xml/CyclomaticComplexity\r\n\r\n**Description:** CyclomaticComplexityRule counts conditional ternary operator twice. I believe this is incorrect, as it just adds one code path and can be rewritten as an if-else statement which just has complexity 1.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n  public void get() {\r\n    final String a = b == null ? c : d;\r\n  }\r\n```\r\n\r\n**Running PMD through:** CLI\r\n\r\nExample of output:\r\n```\r\n15:07:55 E:\\dev\\pmd-cyclox>more TernaryOperator.java & echo --- & more ruleset-for-cyclox.xml & echo --- & pmd-bin-6.5.0\\bin\\pmd.bat -f xml -R ruleset-for-cyclo\r\nx.xml -d TernaryOperator.java\r\nclass MyClass {\r\n  public void run(String b, String c) {\r\n    final String a = b == null ? c : b;\r\n  }\r\n}\r\n---\r\n<?xml version=\"1.0\"?>\r\n\r\n<ruleset name=\"Custom Rules\"\r\n    xmlns=\"http://pmd.sourceforge.net/ruleset/3.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://pmd.sourceforge.net/ruleset/3.0.0 http://pmd.sourceforge.net/ruleset_3_0_0.xsd\">\r\n  <description>\r\nCustom rules\r\n  </description>\r\n\r\n  <rule\r\n   ref=\"category/java/design.xml/CyclomaticComplexity\"\r\n   >\r\n   <properties>\r\n        <property name=\"methodReportLevel\" value=\"1\"/>\r\n    </properties>\r\n  </rule>\r\n\r\n</ruleset>\r\n---\r\njun 28, 2018 3:07:56 PM net.sourceforge.pmd.PMD processFiles\r\nWARNING: This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/pmd-6.5.0/pmd_userdocs_incremental_analysis.html\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<pmd xmlns=\"http://pmd.sourceforge.net/report/2.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd\"\r\n    version=\"6.5.0\" timestamp=\"2018-06-28T15:07:56.983\">\r\n<file name=\"E:\\dev\\pmd-cyclox\\TernaryOperator.java\">\r\n<violation beginline=\"2\" endline=\"4\" begincolumn=\"10\" endcolumn=\"3\" rule=\"CyclomaticComplexity\" ruleset=\"Design\" class=\"MyClass\" method=\"run\" externalInfoUrl=\"h\r\nttps://pmd.github.io/pmd/pmd_rules_java_design.html#cyclomaticcomplexity\" priority=\"3\">\r\nThe method 'run(String, String)' has a cyclomatic complexity of 3.\r\n</violation>\r\n</file>\r\n</pmd>\r\n```\r\n\r\nPMD reports a complexity of 3, where I believe it should be 2: one for the method entry, and one for the ?-operator.\r\n\r\n<!-- If relevant, also include your JDK and OS information, e.g. for ClassNotFoundException, LinkageError, reflection failures, etc. -->\r\n", "url": "https://github.com/pmd/pmd/issues/1217", "user": "dreniers", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2018-06-28 13:09:01", "closed": "2018-07-08 08:47:33", "commits": {"809110a0929d72072fdc0cc0051462b9da9d6679": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "809110a0929d72072fdc0cc0051462b9da9d6679", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["b0bc21028daace1e4542a3a2e04fb83bc509ed61"], "nameRev": "809110a0929d72072fdc0cc0051462b9da9d6679 tags/pmd_releases/6.6.0~29^2", "commitMessage": "Update release notes, refs #1219, fixes #1217\n", "commitDateTime": "2018-07-08 10:10:55", "authoredDateTime": "2018-07-08 10:10:55", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] CommentUtil.multiLinesIn() could lead to StringIndexOutOfBoundsException", "body": " pmd/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/CommentUtil.java \r\n\r\nAffects PMD Version: latest version\r\n\r\nDescription: I'm working to develop my own comment rule to find all code in comment , then I use CommentUtils. I tried to multiline the comment ,but found StringIndexOutOfBoundsException when testing by a test project. actually, it happens in line 108,when it goes to charAt(0)\r\n```\r\nif (line.charAt(0) == '*') {\r\n                filteredLines.add(line.substring(1));\r\n                continue;\r\n}\r\n```\r\nbecause sometime we make a comment like this\r\n```\r\n/*\r\n    sometime we use ctrl+shift+/ to make a multiLineComment(not use by /** )\r\n     <--- here, thie line causes a string \"\"        \r\n */\r\n```\r\nIn line 3,when using  CommentUtil.multiLinesIn(),this variable string **line = \"\"**,cause there is nothing!\r\nso \"\".charAt(0) throws StringIndexOutOfBoundsException.\r\nIn my code,I add a StringUtil.isEmpty(line) to check it. In my comment rule, every empty string is also useful, because I use it to count beginLineNumber. I don't whether PMD provides a better way to multiLine the multiComment or JavaDocComment? I only find this CommentUtil useful, so I hope you guys to add a empty check beyond line 96 just like following code:\r\n ```\r\nString line = rawLine.trim();\r\n            \r\n            if(StringUtil.isEmpty(line)){\r\n            \tcontinue;\r\n            }\r\n            \r\n            if (line.startsWith(\"//\")) {\r\n                filteredLines.add(line.substring(2));\r\n                continue;\r\n            }\r\n     ...\r\n```\r\nor we can use if(\"\".equals(line)) to check it.\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1174", "user": "phinehasz", "labels": ["a:bug", "has:pr"], "created": "2018-06-06 11:31:22", "closed": "2018-06-24 22:09:41", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "[core] Some characters in CPD are not shown correctly. ", "body": "In commit https://github.com/pmd/pmd/commit/e1b954289a7386896edf17c44659cd7f92a52d90 one character strings have been changed to characters. \r\n\r\nHowever this breaks the string if for example a number will be added after as the number is added to the character instead of the string. \r\n\r\nFor example this happens in: \r\nhttps://github.com/pmd/pmd/blob/4e29b793d260570ccd71e36876833e4f6a67f2d4/pmd-core/src/main/java/net/sourceforge/pmd/cpd/GUI.java#L634\r\n\r\nWhich will result in \"42 seperate files)\" instead of \"(2 seperate files)\". ", "url": "https://github.com/pmd/pmd/issues/1173", "user": "theodoor", "labels": ["a:bug", "has:pr"], "created": "2018-06-05 11:30:58", "closed": "2018-06-16 17:59:00", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[core] xml renderer schema definitions (#538) break included xslt files", "body": "**Affects PMD Version:** \r\n6.4.0\r\n\r\n**Description:**\r\nIn 079fc1cc (for issue #538) an xml schema was added to the xml renderer reports.  Unfortunately, that means the xpaths in the xslt files (in `pmd-core/etc/xslt`) no longer match, resulting in just broken text output.  The fix is to either:\r\n\r\n- namespace the elements in every xpath to something (eg, `p`) and add `xmlns:p=\"http://pmd.sourceforge.net/report/2.0.0\"` to the `<stylesheet>` element; or\r\n- switch the stylesheet version to 2.0 and add `xpath-default-namespace=\"http://pmd.sourceforge.net/report/2.0.0\"`\r\n\r\n**Code Sample demonstrating the issue:**\r\nEg, using the saxon packaged with 6.4.0 and the current master xslt file on an xml report (the warning can be ignored):\r\n```\r\n$ java -jar ~/pmd-bin-6.4.0/lib/saxon-9.1.0.8.jar pmd.xml ~/src/pmd/pmd-core/etc/xslt/only-prio1.xslt > p1.html\r\nWarning: at xsl:stylesheet on line 3 column 80 of only-prio1.xslt:\r\n  Running an XSLT 1.0 stylesheet with an XSLT 2.0 processor\r\n$ more p1.html\r\n<!DOCTYPE html\r\n  PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n\r\n\r\n\r\nEach class should declare at least one constructor\r\n\r\n\r\nHeader comments are required\r\n\r\n\r\nComment is too large: Line too long\r\n\r\n...(etc)\r\n\r\n```\r\n\r\nIf we update the stylesheet to v2.0 and add `xpath-default-namespace`:\r\n```\r\n$ vi ~/src/pmd/pmd-core/etc/xslt/only-prio1.xslt\r\n$ java -jar ~/pmd-bin-6.4.0/lib/saxon-9.1.0.8.jar pmd.xml ~/src/pmd/pmd-core/etc/xslt/only-prio1.xslt > p1-fixed.html\r\n$ more p1-fixed.html\r\n<!DOCTYPE html\r\n  PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n<html>\r\n   <head>\r\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n      <title>PMD 6.4.0 Report</title><script type=\"text/javascript\" src=\"fcoltable.js\"></script><style type=\"text/css\">\r\n\t\t@import \"fcoltable.css\";\r\n(etc)\r\n```\r\n\r\n**Running PMD through:** *CLI or Ant* (probably anywhere though)", "url": "https://github.com/pmd/pmd/issues/1168", "user": "mduggan", "labels": ["a:bug", "has:pr"], "created": "2018-06-02 02:45:54", "closed": "2018-06-09 22:51:28", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "[java] java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/faces/application/FacesMessage$Severity", "body": "**Affects PMD Version:** 6.3.0, 6.4.0-SNAPSHOT\r\n\r\n**Rule:**: ---\r\n\r\n**Description:**\r\n\r\nMy attempt to add `maven-pmd-plugin` to the Primefaces project failed with Maven 3.5.2 (and 3.5.3) due to\r\n\r\n```\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-pmd-plugin:3.9.0:pmd (pmd) on project primefaces: Execution pmd of goal org.apache.maven.plugins:maven-pmd-plugin:3.9.0:pmd failed: An API incompatibility was encountered while executing org.apache.maven.plugins:maven-pmd-plugin:3.9.0:pmd: java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/faces/application/FacesMessage$Severity\r\n[ERROR] -----------------------------------------------------\r\n[ERROR] realm =    plugin>org.apache.maven.plugins:maven-pmd-plugin:3.9.0\r\n[ERROR] strategy = org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy\r\n[ERROR] urls[0] = file:/home/travis/.m2/repository/org/apache/maven/plugins/maven-pmd-plugin/3.9.0/maven-pmd-plugin-3.9.0.jar\r\n[ERROR] urls[1] = file:/home/travis/.m2/repository/net/sourceforge/pmd/pmd-core/6.4.0-SNAPSHOT/pmd-core-6.4.0-SNAPSHOT.jar\r\n[ERROR] urls[2] = file:/home/travis/.m2/repository/com/beust/jcommander/1.48/jcommander-1.48.jar\r\n[ERROR] urls[3] = file:/home/travis/.m2/repository/jaxen/jaxen/1.1.6/jaxen-1.1.6.jar\r\n[ERROR] urls[4] = file:/home/travis/.m2/repository/net/java/dev/javacc/javacc/5.0/javacc-5.0.jar\r\n[ERROR] urls[5] = file:/home/travis/.m2/repository/net/sourceforge/saxon/saxon/9.1.0.8/saxon-9.1.0.8.jar\r\n[ERROR] urls[6] = file:/home/travis/.m2/repository/org/apache/commons/commons-lang3/3.7/commons-lang3-3.7.jar\r\n[ERROR] urls[7] = file:/home/travis/.m2/repository/org/ow2/asm/asm/6.1.1/asm-6.1.1.jar\r\n[ERROR] urls[8] = file:/home/travis/.m2/repository/com/google/code/gson/gson/2.5/gson-2.5.jar\r\n[ERROR] urls[9] = file:/home/travis/.m2/repository/net/sourceforge/saxon/saxon/9.1.0.8/saxon-9.1.0.8-dom.jar\r\n[ERROR] urls[10] = file:/home/travis/.m2/repository/net/sourceforge/pmd/pmd-java/6.4.0-SNAPSHOT/pmd-java-6.4.0-SNAPSHOT.jar\r\n[ERROR] urls[11] = file:/home/travis/.m2/repository/net/sourceforge/pmd/pmd-javascript/6.4.0-SNAPSHOT/pmd-javascript-6.4.0-SNAPSHOT.jar\r\n[ERROR] urls[12] = file:/home/travis/.m2/repository/org/mozilla/rhino/1.7.7.2/rhino-1.7.7.2.jar\r\n[ERROR] urls[13] = file:/home/travis/.m2/repository/junit/junit/4.12/junit-4.12.jar\r\n[ERROR] urls[14] = file:/home/travis/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar\r\n[ERROR] urls[15] = file:/home/travis/.m2/repository/net/sourceforge/pmd/pmd-jsp/6.4.0-SNAPSHOT/pmd-jsp-6.4.0-SNAPSHOT.jar\r\n[ERROR] urls[16] = file:/home/travis/.m2/repository/org/sonatype/sisu/sisu-inject-bean/1.4.2/sisu-inject-bean-1.4.2.jar\r\n[ERROR] urls[17] = file:/home/travis/.m2/repository/org/sonatype/sisu/sisu-guice/2.1.7/sisu-guice-2.1.7-noaop.jar\r\n[ERROR] urls[18] = file:/home/travis/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar\r\n[ERROR] urls[19] = file:/home/travis/.m2/repository/org/apache/maven/doxia/doxia-sink-api/1.7/doxia-sink-api-1.7.jar\r\n[ERROR] urls[20] = file:/home/travis/.m2/repository/org/apache/maven/doxia/doxia-logging-api/1.7/doxia-logging-api-1.7.jar\r\n[ERROR] urls[21] = file:/home/travis/.m2/repository/org/apache/maven/doxia/doxia-decoration-model/1.7/doxia-decoration-model-1.7.jar\r\n[ERROR] urls[22] = file:/home/travis/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.6/plexus-component-annotations-1.6.jar\r\n[ERROR] urls[23] = file:/home/travis/.m2/repository/org/apache/maven/doxia/doxia-site-renderer/1.7/doxia-site-renderer-1.7.jar\r\n[ERROR] urls[24] = file:/home/travis/.m2/repository/org/apache/maven/doxia/doxia-core/1.7/doxia-core-1.7.jar\r\n[ERROR] urls[25] = file:/home/travis/.m2/repository/commons-lang/commons-lang/2.4/commons-lang-2.4.jar\r\n[ERROR] urls[26] = file:/home/travis/.m2/repository/xmlunit/xmlunit/1.5/xmlunit-1.5.jar\r\n[ERROR] urls[27] = file:/home/travis/.m2/repository/org/apache/maven/doxia/doxia-skin-model/1.7/doxia-skin-model-1.7.jar\r\n[ERROR] urls[28] = file:/home/travis/.m2/repository/org/apache/maven/doxia/doxia-module-xhtml/1.7/doxia-module-xhtml-1.7.jar\r\n[ERROR] urls[29] = file:/home/travis/.m2/repository/org/apache/maven/doxia/doxia-module-fml/1.7/doxia-module-fml-1.7.jar\r\n[ERROR] urls[30] = file:/home/travis/.m2/repository/org/codehaus/plexus/plexus-i18n/1.0-beta-7/plexus-i18n-1.0-beta-7.jar\r\n[ERROR] urls[31] = file:/home/travis/.m2/repository/org/codehaus/plexus/plexus-velocity/1.1.7/plexus-velocity-1.1.7.jar\r\n[ERROR] urls[32] = file:/home/travis/.m2/repository/org/apache/velocity/velocity/1.7/velocity-1.7.jar\r\n[ERROR] urls[33] = file:/home/travis/.m2/repository/org/apache/velocity/velocity-tools/2.0/velocity-tools-2.0.jar\r\n[ERROR] urls[34] = file:/home/travis/.m2/repository/commons-beanutils/commons-beanutils/1.7.0/commons-beanutils-1.7.0.jar\r\n[ERROR] urls[35] = file:/home/travis/.m2/repository/commons-digester/commons-digester/1.8/commons-digester-1.8.jar\r\n[ERROR] urls[36] = file:/home/travis/.m2/repository/commons-chain/commons-chain/1.1/commons-chain-1.1.jar\r\n[ERROR] urls[37] = file:/home/travis/.m2/repository/commons-validator/commons-validator/1.3.1/commons-validator-1.3.1.jar\r\n[ERROR] urls[38] = file:/home/travis/.m2/repository/dom4j/dom4j/1.1/dom4j-1.1.jar\r\n[ERROR] urls[39] = file:/home/travis/.m2/repository/oro/oro/2.0.8/oro-2.0.8.jar\r\n[ERROR] urls[40] = file:/home/travis/.m2/repository/sslext/sslext/1.2-0/sslext-1.2-0.jar\r\n[ERROR] urls[41] = file:/home/travis/.m2/repository/org/apache/struts/struts-core/1.3.8/struts-core-1.3.8.jar\r\n[ERROR] urls[42] = file:/home/travis/.m2/repository/antlr/antlr/2.7.2/antlr-2.7.2.jar\r\n[ERROR] urls[43] = file:/home/travis/.m2/repository/org/apache/struts/struts-taglib/1.3.8/struts-taglib-1.3.8.jar\r\n[ERROR] urls[44] = file:/home/travis/.m2/repository/org/apache/struts/struts-tiles/1.3.8/struts-tiles-1.3.8.jar\r\n[ERROR] urls[45] = file:/home/travis/.m2/repository/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar\r\n[ERROR] urls[46] = file:/home/travis/.m2/repository/org/apache/maven/reporting/maven-reporting-api/3.0/maven-reporting-api-3.0.jar\r\n[ERROR] urls[47] = file:/home/travis/.m2/repository/org/apache/maven/reporting/maven-reporting-impl/3.0.0/maven-reporting-impl-3.0.0.jar\r\n[ERROR] urls[48] = file:/home/travis/.m2/repository/org/sonatype/aether/aether-util/1.7/aether-util-1.7.jar\r\n[ERROR] urls[49] = file:/home/travis/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.14/plexus-interpolation-1.14.jar\r\n[ERROR] urls[50] = file:/home/travis/.m2/repository/org/sonatype/plexus/plexus-sec-dispatcher/1.3/plexus-sec-dispatcher-1.3.jar\r\n[ERROR] urls[51] = file:/home/travis/.m2/repository/org/sonatype/plexus/plexus-cipher/1.4/plexus-cipher-1.4.jar\r\n[ERROR] urls[52] = file:/home/travis/.m2/repository/org/apache/maven/shared/maven-shared-utils/3.2.0/maven-shared-utils-3.2.0.jar\r\n[ERROR] urls[53] = file:/home/travis/.m2/repository/org/codehaus/plexus/plexus-resources/1.0.1/plexus-resources-1.0.1.jar\r\n[ERROR] urls[54] = file:/home/travis/.m2/repository/org/codehaus/plexus/plexus-utils/3.0.24/plexus-utils-3.0.24.jar\r\n[ERROR] urls[55] = file:/home/travis/.m2/repository/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar\r\n[ERROR] urls[56] = file:/home/travis/.m2/repository/org/apache/httpcomponents/httpcore/4.4.6/httpcore-4.4.6.jar\r\n[ERROR] urls[57] = file:/home/travis/.m2/repository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar\r\n[ERROR] urls[58] = file:/home/travis/.m2/repository/commons-codec/commons-codec/1.9/commons-codec-1.9.jar\r\n[ERROR] urls[59] = file:/home/travis/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar\r\n[ERROR] Number of foreign imports: 1\r\n[ERROR] import: Entry[import  from realm ClassRealm[maven.api, parent: null]]\r\n```\r\n\r\nPlease refer to [this build with 6.3.0](https://travis-ci.org/krichter722/primefaces/jobs/381918245) and [this build with 6.4.0-SNAPSHOT](https://travis-ci.org/krichter722/primefaces/builds/381923127) for examples.\r\n\r\nThis issue does not occur with Maven 3.3.9! It is similar to #328, but this separate report has been created because it has been requested there.\r\n\r\n**Code Sample demonstrating the issue:** ---\r\n\r\n**Running PMD through:** Maven (Plugin version 3.9.0)\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1131", "user": "krichter722", "labels": ["a:bug", "has:pr", "in:type-resolution"], "created": "2018-05-22 00:55:35", "closed": "2018-05-27 07:08:43", "commits": {"932517bb7980ce3fa12b0d9bd32ac2cd78558107": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "932517bb7980ce3fa12b0d9bd32ac2cd78558107", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["15c2eb928b64cc92827c4b6be02a317bc4379d03", "61677e6ee9d6a44240986de4bb2672ae1bbfd3be"], "nameRev": "932517bb7980ce3fa12b0d9bd32ac2cd78558107 tags/pmd_releases/6.4.0~9", "commitMessage": "Merge branch 'pr-1133', fixes #1131\n", "commitDateTime": "2018-05-27 08:59:33", "authoredDateTime": "2018-05-27 08:59:33", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java", "insertions": 24, "deletions": 3, "lines": 27}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/TypeHelper.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassTypeResolver.java", "spoonMethods": [{"spoonMethodName": "java.lang.Exception", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.populateType(net.sourceforge.pmd.lang.java.ast.TypeNode,java.lang.String,int)", "TOT": 5, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.classNameExists(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.loadClass(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TypeHelper.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.typeresolution.TypeHelper.isA(net.sourceforge.pmd.lang.java.ast.TypeNode,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[doc] Multifile analysis doc is invalid", "body": "As part of our docs on rule writing, we have a section on multifile analysis: http://pmd.sourceforge.net/snapshot/pmd_userdocs_extending_writing_pmd_rules.html#i-want-to-implement-a-rule-that-analyze-more-than-the-class\r\n\r\nThe rule however, states things that are not quite true... The example, as it stands, will only work when running PMD single-threaded. If more than one thread is used, a separate `RuleContext` is used per-thread, and the counters are separate (this could be fixed by using a static field for the counter instead of a rule context attribute). Moreover, the rule adds a violation upon calls to `end`, which will be called once per analyzed-file, resetting the flag, which in turn means the counter didn't do what it was expected (counting all the expressions in all the source), but merely keeps counting per-file.\r\n\r\nThere is no way currently of actually knowing when analysis of all files finished to add such a violation. I'd strongly suggest getting rid of this section until we have a proper solution for multifile analysis.", "url": "https://github.com/pmd/pmd/issues/1082", "user": "jsotuyod", "labels": ["a:bug", "has:pr", "in:documentation"], "created": "2018-05-07 19:01:42", "closed": "2018-05-18 19:25:01", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[java] Analyzing enum with lambda passed in constructor fails with \"The enclosing scope must exist.\"", "body": "\r\n**Affects PMD Version:** \r\n6.3.0\r\n\r\n**Rule:**\r\n\r\n**Description:**\r\n\r\nInspection fails with exception\r\n\r\n```\r\nnet.sourceforge.pmd.PMDException: Error while processing ....../FallbackFieldValue.java\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:101)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.IllegalStateException: The enclosing scope must exist.\r\n\tat net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.findLambdaScopeNameSegment(QualifiedNameResolver.java:379)\r\n\tat net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit(QualifiedNameResolver.java:322)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTLambdaExpression.jjtAccept(ASTLambdaExpression.java:28)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:314)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryPrefix.jjtAccept(ASTPrimaryPrefix.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:310)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:230)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTExpression.jjtAccept(ASTExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:338)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTArgumentList.jjtAccept(ASTArgumentList.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:334)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTArguments.jjtAccept(ASTArguments.java:28)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:54)\r\n\tat net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit(QualifiedNameResolver.java:240)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTEnumConstant.jjtAccept(ASTEnumConstant.java:27)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:50)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTEnumBody.jjtAccept(ASTEnumBody.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:33)\r\n\tat net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit(QualifiedNameResolver.java:212)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:28)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTEnumDeclaration.jjtAccept(ASTEnumDeclaration.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:46)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:33)\r\n\tat net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit(QualifiedNameResolver.java:212)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:16)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:55)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:158)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:138)\r\n\tat net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.visit(QualifiedNameResolver.java:132)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:41)\r\n\tat net.sourceforge.pmd.lang.java.qname.QualifiedNameResolver.initializeWith(QualifiedNameResolver.java:117)\r\n\tat net.sourceforge.pmd.lang.java.AbstractJavaHandler$8.start(AbstractJavaHandler.java:130)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.resolveQualifiedNames(SourceCodeProcessor.java:126)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nThis enum is defined inside bigger class.\r\n\r\n```\r\n public enum FallbackType {\r\n        CONST(config -> config.get(\"value\")),\r\n        CURRENT_TIMESTAMP(config -> TimeUtils.zonedDateTime().format(DateTimeFormatter.ISO_OFFSET_DATE_TIME));\r\n\r\n        private final Function<Map<String, Object>, Object> resolver;\r\n\r\n        FallbackType(Function<Map<String, Object>, Object> resolver) {\r\n            this.resolver = resolver;\r\n        }\r\n        @Nullable\r\n        public Object resolve(Map<String, Object> configuration) {\r\n            return this.resolver.apply(configuration);\r\n        }\r\n    }\r\n\r\n\r\n```\r\n\r\n\r\n**Running PMD through:** *Maven*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1077", "user": "mhankus", "labels": ["a:bug", "has:pr"], "created": "2018-05-04 12:30:55", "closed": "2018-05-08 07:28:09", "commits": {"5b0ea25f0410ecd34dd9f49153bc85f985dc92df": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "5b0ea25f0410ecd34dd9f49153bc85f985dc92df", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["a8bd283545a81ee6bd8df6b1c067fc24f143d76d"], "nameRev": "5b0ea25f0410ecd34dd9f49153bc85f985dc92df tags/pmd_releases/6.4.0~59^2", "commitMessage": "Update release notes, fixes #1077, refs #1083\n", "commitDateTime": "2018-05-08 09:17:23", "authoredDateTime": "2018-05-08 09:17:23", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] MissingOverrideRule exception when analyzing PMD under Java 9", "body": "I'm only seeing this, and sporadically, when analyzing PMD with PMD 6.3.0 under Java 9 with a full classpath\r\n\r\n```\r\nException in thread \"main\" java.lang.LinkageError: loader constraint violation in interface itable initialization: when resolving method \"net.sourceforge.pmd.lang.xml.ast.AbstractDomNodeProxy.setUserData(Ljava/lang/String;Ljava/lang/Object;Lorg/w3c/dom/UserDataHandler;)Ljava/lang/Object;\" the class loader (instance of net/sourceforge/pmd/util/ClasspathClassLoader) of the current class, net/sourceforge/pmd/lang/xml/ast/AbstractDomNodeProxy, and the class loader (instance of <bootloader>) for interface org/w3c/dom/Node have different Class objects for the type org/w3c/dom/UserDataHandler used in the signature\r\n\tat java.base/java.lang.Class.getDeclaredMethods0(Native Method)\r\n\tat java.base/java.lang.Class.privateGetDeclaredMethods(Class.java:3139)\r\n\tat java.base/java.lang.Class.getDeclaredMethods(Class.java:2266)\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.MissingOverrideRule.overriddenMethods(MissingOverrideRule.java:140)\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.MissingOverrideRule.getMethodLookup(MissingOverrideRule.java:112)\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.MissingOverrideRule.visit(MissingOverrideRule.java:52)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:55)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.MissingOverrideRule.visit(MissingOverrideRule.java:46)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:501)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:183)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:78)\r\n\tat net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:110)\r\n\tat net.sourceforge.pmd.PMD.processFiles(PMD.java:326)\r\n\tat net.sourceforge.pmd.PMD.doPMD(PMD.java:237)\r\n\tat net.sourceforge.pmd.PMD.run(PMD.java:466)\r\n\tat net.sourceforge.pmd.cli.PMDCommandLineInterface.run(PMDCommandLineInterface.java:171)\r\n\tat net.sourceforge.pmd.PMD.main(PMD.java:436)\r\n```\r\n\r\n@oowekyala any ideas?", "url": "https://github.com/pmd/pmd/issues/1074", "user": "jsotuyod", "labels": ["a:bug", "has:pr"], "created": "2018-05-02 04:51:45", "closed": "2018-06-25 20:22:25", "commits": {"5a7bbe19a26cb4c54d87dcd8b1046ab943d62551": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 54.000277777777775, "commitsDetails": [{"commitHash": "5a7bbe19a26cb4c54d87dcd8b1046ab943d62551", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["2c987a268833dea012a2627648d6704ce5ae1315"], "nameRev": "5a7bbe19a26cb4c54d87dcd8b1046ab943d62551 tags/pmd_releases/6.5.0~32", "commitMessage": "dogfood: fix missing override\nNote: the rule is disabled for pmd-xml, refs #1074\n", "commitDateTime": "2018-06-16 17:48:36", "authoredDateTime": "2018-06-16 17:48:36", "commitGitStats": [{"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/cpd/ApexLanguage.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/cpd/ApexTokenizer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ApexHandler.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ApexParser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTAnnotation.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTAnnotationParameter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTAnonymousClass.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTArrayLoadExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTArrayStoreExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTAssignmentExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTBinaryExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTBindExpressions.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTBlockStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTBooleanExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTBreakStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTBridgeMethodCreator.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTCastExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTCatchBlockStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTClassRefExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTConstructorPreamble.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTConstructorPreambleStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTContinueStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTDmlDeleteStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTDmlInsertStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTDmlMergeStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTDmlUndeleteStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTDmlUpdateStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTDmlUpsertStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTDoLoopStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTExpressionStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTField.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTFieldDeclaration.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTFieldDeclarationStatements.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTForEachStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTForLoopStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTIfBlockStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTIfElseBlockStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTIllegalStoreExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTInstanceOfExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTJavaMethodCallExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTJavaVariableExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTLiteralExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTMapEntryNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTMethod.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTMethodBlockStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTMethodCallExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTModifier.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTModifierNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTModifierOrAnnotation.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTMultiStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNestedExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNestedStoreExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNewKeyValueObjectExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNewListInitExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNewListLiteralExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNewMapInitExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNewMapLiteralExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNewObjectExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNewSetInitExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTNewSetLiteralExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTPackageVersionExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTParameter.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTPostfixExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTPrefixExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTProperty.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTReferenceExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTReturnStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTRunAsBlockStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTSoqlExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTSoslExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTStandardCondition.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTStatementExecuted.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTSuperMethodCallExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTSuperVariableExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTTernaryExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTThisMethodCallExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTThisVariableExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTThrowStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTTriggerVariableExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTTryCatchFinallyBlockStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTUserClass.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTUserClassMethods.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTUserEnum.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTUserExceptionMethods.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTUserInterface.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTUserTrigger.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTVariableDeclaration.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTVariableDeclarationStatements.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTVariableExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ASTWhileLoopStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/AbstractApexNode.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/ApexParserVisitor.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast/CompilerService.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/AbstractApexRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/AbstractStatisticalApexRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/ApexRuleChainVisitor.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/ApexRuleViolationFactory.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/codestyle/ClassNamingConventionsRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/codestyle/MethodNamingConventionsRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/codestyle/VariableNamingConventionsRule.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/design/AvoidDeeplyNestedIfStmtsRule.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/design/ExcessiveParameterListRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/design/ExcessivePublicCountRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/security/ApexDangerousMethodsRule.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/xpath/SaxonXPathRuleQuery.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/properties/AbstractMultiValueProperty.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/properties/builders/PropertyDescriptorBuilderConversionWrapper.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-cpp/src/main/java/net/sourceforge/pmd/lang/cpp/CppTokenManager.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-cs/src/main/java/net/sourceforge/pmd/cpd/CsLanguage.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/cpd/JavaLanguage.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/AbstractJavaHandler.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/AbstractJavaParser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaDataFlowHandler.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/JavaTokenManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAdditiveExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAllocationExpression.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAndExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotationMethodDeclaration.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeBody.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAnnotationTypeMemberDeclaration.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTArgumentList.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTArguments.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTArrayDimsAndInits.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTArrayInitializer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTAssertStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTBlockStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTBreakStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTCastExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBody.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceBodyDeclaration.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTClassOrInterfaceType.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTConditionalAndExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTConditionalOrExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTContinueStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTDefaultValue.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTDoStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEmptyStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEnumBody.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEnumConstant.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEnumDeclaration.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTEqualityExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTExclusiveOrExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFinallyStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTForInit.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTForStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTForUpdate.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFormalParameters.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTImplementsList.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTInclusiveOrExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTInstanceOfExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLabeledStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLambdaExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLiteral.java", "insertions": 13, "deletions": 13, "lines": 26}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLocalVariableDeclaration.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMarkerAnnotation.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberSelector.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberValue.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberValueArrayInitializer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberValuePair.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMemberValuePairs.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMethodDeclarator.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMethodReference.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTModuleDeclaration.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTModuleDirective.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTModuleName.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTMultiplicativeExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTNameList.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTNormalAnnotation.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTNullLiteral.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPostfixExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPreDecrementExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPreIncrementExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPrimaryExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTPrimarySuffix.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTRSIGNEDSHIFT.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTRUNSIGNEDSHIFT.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTRelationalExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTResource.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTResourceSpecification.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTResources.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTResultType.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTReturnStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTShiftExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTSingleMemberAnnotation.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTStatementExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTStatementExpressionList.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTSwitchStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTSynchronizedStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTryStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTType.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeArgument.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeArguments.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeBound.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeDeclaration.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeParameter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTTypeParameters.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTUnaryExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTUnaryExpressionNotPlusMinus.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTVariableDeclarator.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTVariableInitializer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTWhileStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTWildcardBounds.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/AbstractJavaAccessNode.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/AbstractJavaNode.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/Comment.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/JavaNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/JavaParserControllessVisitorAdapter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/JavaParserVisitorAdapter.java", "insertions": 117, "deletions": 0, "lines": 117}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/JavaQualifiableNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa/DataFlowFacade.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa/JavaDFAGraphRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa/JavaDataFlowNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/AbstractJavaClassMetric.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/qname/ImmutableList.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/qname/JavaOperationQualifiedName.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/qname/JavaTypeQualifiedName.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/qname/QualifiedNameResolver.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/AbstractJavaRule.java", "insertions": 117, "deletions": 0, "lines": 117}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/AbstractStatisticalJavaRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/JavaRuleChainVisitor.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/StringConcatenationRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/UselessAssignment.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/AccessorMethodGenerationRule.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/JUnitAssertionsShouldIncludeMessageRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/UnusedFormalParameterRule.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/UnusedLocalVariableRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/UnusedPrivateMethodRule.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/UseCollectionIsEmptyRule.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codestyle/AvoidDollarSignsRule.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codestyle/ConfusingTernaryRule.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codestyle/DuplicateImportsRule.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codestyle/LocalVariableCouldBeFinalRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codestyle/UnnecessaryModifierRule.java", "insertions": 12, "deletions": 5, "lines": 17}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codestyle/UnnecessaryReturnRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/codestyle/VariableNamingConventionsRule.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/AvoidDeeplyNestedIfStmtsRule.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ExcessiveImportsRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ExcessiveParameterListRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ExcessivePublicCountRule.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/LawOfDemeterRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/NcssConstructorCountRule.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/PositionalIteratorRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/SimplifyBooleanReturnsRule.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/SwitchDensityRule.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/AssignmentToNonFinalStaticRule.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/AvoidCallingFinalizeRule.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/AvoidFieldNameMatchingTypeNameRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/AvoidUsingOctalValuesRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/CompareObjectsWithEqualsRule.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/DaaRuleViolation.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/DataflowAnomalyAnalysisRule.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/DontImportSunRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/ImportFromSamePackageRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/SingleMethodSingletonRule.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/SuspiciousHashcodeMethodNameRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/UnnecessaryCaseChangeRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/UnnecessaryConversionTemporaryRule.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/AbstractOptimizationRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/RedundantFieldInitializerRule.java", "insertions": 5, "deletions": 4, "lines": 9}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/StringToStringRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/UnnecessaryWrapperObjectCreationRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/UseIndexOfCharRule.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/ClassNameDeclaration.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/ClassScope.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/OccurrenceFinder.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/SourceFileScope.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/TypeSet.java", "insertions": 12, "deletions": 11, "lines": 23}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable/VariableNameDeclaration.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/typedefinition/JavaTypeDefinitionSimple.java", "insertions": 9, "deletions": 3, "lines": 12}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/xpath/GetCommentOnFunction.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/xpath/TypeOfFunction.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/ast/GitHubBug650.java", "insertions": 583, "deletions": 0, "lines": 583}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/Ecmascript3Handler.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/Ecmascript3Parser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTArrayComprehension.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTArrayComprehensionLoop.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTArrayLiteral.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTForInLoop.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTForLoop.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTFunctionCall.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTFunctionNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTIfStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTInfixExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTLabel.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTLabeledStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTLetNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTNewExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTNumberLiteral.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTObjectLiteral.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTObjectProperty.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTParenthesizedExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTPropertyGet.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTRegExpLiteral.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTReturnStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTScope.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTStringLiteral.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTSwitchCase.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTSwitchStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTThrowStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTTryStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTVariableDeclaration.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTVariableInitializer.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTWhileLoop.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTWithStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTXmlDotQuery.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTXmlExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTXmlMemberGet.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/ASTXmlString.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/AbstractEcmascriptNode.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast/EcmascriptParserVisitorAdapter.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule/AbstractEcmascriptRule.java", "insertions": 51, "deletions": 0, "lines": 51}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule/EcmascriptRuleChainVisitor.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule/EcmascriptRuleViolationFactory.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript5/Ecmascript5TokenManager.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/cpd/JSPTokenizer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/JspHandler.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/JspParser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/JspTokenManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTAttributeValue.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTCData.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTCommentTag.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTCompilationUnit.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTContent.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTElExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspComment.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspDeclaration.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspDeclarations.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspDocument.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspExpressionInAttribute.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTJspScriptlet.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTText.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTUnparsedText.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/ASTValueBinding.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/AbstractJspNode.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/JspParserVisitorAdapter.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/OpenTagRegister.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/StartAndEndTagMismatchException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast/SyntaxErrorException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/AbstractJspRule.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/JspRuleChainVisitor.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/JspRuleViolationFactory.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule/design/NoInlineStyleInformationRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-matlab/src/main/java/net/sourceforge/pmd/lang/matlab/MatlabTokenManager.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-objectivec/src/main/java/net/sourceforge/pmd/lang/objectivec/ObjectiveCTokenManager.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLDataFlowHandler.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLHandler.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLParser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/PLSQLTokenManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTArguments.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTDatatype.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTFormalParameter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTIfStatement.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTInput.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTMethodDeclaration.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTMethodDeclarator.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTName.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTPackageBody.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTPackageSpecification.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTPrimaryPrefix.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTPrimarySuffix.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTProgramUnit.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTTriggerTimingPointSection.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTTriggerUnit.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTTypeMethod.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTTypeSpecification.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/ASTVariableOrConstantDeclaratorId.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/AbstractPLSQLNode.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast/PLSQLNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/dfa/DFAPLSQLGraphRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/dfa/PLSQLDataFlowNode.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/AbstractStatisticalPLSQLRule.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/PLSQLRuleViolationFactory.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule/design/ExcessiveParameterListRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/LocalScope.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/MethodScope.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/SourceFileScope.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable/TypeSet.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "pmd-python/src/main/java/net/sourceforge/pmd/lang/python/PythonTokenManager.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-scala/src/main/java/org/sonar/plugins/scala/cpd/ScalaTokenizer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-test/src/main/java/net/sourceforge/pmd/test/lang/DummyLanguageModule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-test/src/main/java/net/sourceforge/pmd/testframework/RuleTestRunner.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-ui/src/main/java/net/sourceforge/pmd/util/fxdesigner/util/beans/BeanModelNodeSeq.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/cpd/VfTokenizer.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/VfHandler.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/VfParser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/VfTokenManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTArguments.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTAttributeValue.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTCData.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTCompilationUnit.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTContent.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTDotExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTElExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTIdentifier.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTLiteral.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTNegationExpression.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/ASTText.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/AbstractVFNode.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/OpenTagRegister.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/StartAndEndTagMismatchException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/SyntaxErrorException.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast/VfParserVisitorAdapter.java", "insertions": 16, "deletions": 4, "lines": 20}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/rule/AbstractVfRule.java", "insertions": 20, "deletions": 0, "lines": 20}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/rule/VfRuleChainVisitor.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/rule/VfRuleViolationFactory.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/VmHandler.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/VmParser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/VmTokenManager.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTAddNode.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTDirective.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTDivNode.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTEscape.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTMathNode.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTMethod.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTModNode.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTMulNode.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTReference.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTStringLiteral.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/ASTSubtractNode.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/AbstractVmNode.java", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/MacroParseException.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/NodeUtils.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/TemplateParseException.java", "insertions": 10, "deletions": 10, "lines": 20}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast/TokenMgrError.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Block.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/BlockMacro.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Break.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Define.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Directive.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Evaluate.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Foreach.java", "insertions": 5, "deletions": 3, "lines": 8}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Include.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/InputBase.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Literal.java", "insertions": 7, "deletions": 3, "lines": 10}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Macro.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Parse.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/RuntimeMacro.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/Stop.java", "insertions": 6, "deletions": 3, "lines": 9}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive/VelocimacroProxy.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule/design/AvoidDeeplyNestedIfStmtsRule.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "pmd-xml/pmd-xml-ruleset.xml", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "pmd-xml/pom.xml", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/XmlHandler.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/XmlParser.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/XmlParserOptions.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast/XmlNode.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast/XmlNodeWrapper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule/AbstractXmlRule.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule/XmlRuleChainVisitor.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule/XmlRuleViolationFactory.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["5a7bbe19a26cb4c54d87dcd8b1046ab943d62551"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1293, "deletions": 257, "lines": 1550, "gitFilesChange": 454}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/ast", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule", "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/ast", "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/ast", "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/ast", "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript", "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/directive", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution", "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/ast", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/qname", "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/rule", "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/dfa", "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/ast", "pmd-visualforce/src/main/java/net/sourceforge/pmd/cpd", "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/symboltable", "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule", "pmd-apex/src/main/java/net/sourceforge/pmd/cpd", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java", "pmd-jsp/src/main/java/net/sourceforge/pmd/cpd", "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf/rule", "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/symboltable", "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql/rule", "pmd-test/src/main/java/net/sourceforge/pmd/test/lang", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/xpath", "pmd-core/src/main/java/net/sourceforge/pmd/lang/rule/xpath", "pmd-core/src/main/java/net/sourceforge/pmd/properties", "pmd-cs/src/main/java/net/sourceforge/pmd/cpd", "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast", "pmd-plsql/src/main/java/net/sourceforge/pmd/lang/plsql", "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp/rule", "pmd-jsp/src/main/java/net/sourceforge/pmd/lang/jsp", "pmd-python/src/main/java/net/sourceforge/pmd/lang/python", "pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml", "pmd-ui/src/main/java/net/sourceforge/pmd/util/fxdesigner/util", "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript5", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/dfa", "pmd-java/src/main/java/net/sourceforge/pmd/cpd", "pmd-objectivec/src/main/java/net/sourceforge/pmd/lang/objectivec", "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics", "pmd-scala/src/main/java/org/sonar/plugins/scala/cpd", "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex", "pmd-cpp/src/main/java/net/sourceforge/pmd/lang/cpp", "pmd-visualforce/src/main/java/net/sourceforge/pmd/lang/vf", "pmd-javascript/src/main/java/net/sourceforge/pmd/lang/ecmascript/rule", "pmd-matlab/src/main/java/net/sourceforge/pmd/lang/matlab", "pmd-vm/src/main/java/net/sourceforge/pmd/lang/vm/rule", "pmd-core/src/main/java/net/sourceforge/pmd/properties/builders"]}, {"title": "[java] ClassNamingConventions suggests to add Util suffix for simple exception wrappers", "body": "**Affects PMD Version:** \r\n6.3.0\r\n\r\n**Rule:**\r\n`ClassNamingConventions`\r\n\r\n**Description:**\r\n`ClassNamingConventions` violation triggers for simple Exception\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class MyException extends RuntimeException {\r\n\tpublic MyException(Exception exception) {\r\n\t\tsuper(exception);\r\n\t}\r\n}\r\n```\r\n```\r\n[ClassNamingConventions] The utility class name 'MyException' doesn't match '[A-Z][a-zA-Z]+Util'\r\n```\r\n\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1064", "user": "mkordas", "labels": ["a:bug", "has:pr"], "created": "2018-04-30 09:53:32", "closed": "2018-05-09 22:14:20", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[java] Update ASM to handle Java 10 bytecode", "body": "**Affects PMD Version:** 6.2.0\r\n\r\n**Description:** ASM is out of date and is making PMD not work with Java 10.\r\n\r\nI recommend we update to the latest ASM version, 6.1.1.\r\n\r\n**Stack Trace**\r\n\r\n```\r\nnet.sourceforge.pmd.PMDException: Error while processing /Users/austinshalit/git/OutlineViewer/src/main/java/edu/wpi/first/outlineviewer/AutoUpdater.java\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:101)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:111)\r\n\tat net.sourceforge.pmd.PMD.processFiles(PMD.java:323)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:193)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:277)\r\n\tat net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:50)\r\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\r\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n\tat groovy.util.AntBuilder.performTask(AntBuilder.java:327)\r\n\tat groovy.util.AntBuilder.nodeCompleted(AntBuilder.java:272)\r\n\tat org.gradle.api.internal.project.ant.BasicAntBuilder.nodeCompleted(BasicAntBuilder.java:78)\r\n\tat jdk.internal.reflect.GeneratedMethodAccessor103.invoke(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:479)\r\n\tat org.gradle.internal.metaobject.BeanDynamicObject.tryInvokeMethod(BeanDynamicObject.java:191)\r\n\tat org.gradle.internal.metaobject.AbstractDynamicObject.invokeMethod(AbstractDynamicObject.java:160)\r\n\tat org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.nodeCompleted(AntBuilderDelegate.java:118)\r\n\tat groovy.util.BuilderSupport.doInvokeMethod(BuilderSupport.java:154)\r\n\tat groovy.util.BuilderSupport.invokeMethod(BuilderSupport.java:67)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\r\n\tat org.gradle.api.plugins.quality.internal.PmdInvoker$_invoke_closure2.doCall(PmdInvoker.groovy:62)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)\r\n\tat groovy.lang.Closure.call(Closure.java:414)\r\n\tat groovy.lang.Closure.call(Closure.java:430)\r\n\tat org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:71)\r\n\tat org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:53)\r\n\tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:152)\r\n\tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:134)\r\n\tat org.gradle.api.internal.project.antbuilder.ClassPathToClassLoaderCache.withCachedClassLoader(ClassPathToClassLoaderCache.java:134)\r\n\tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder.execute(DefaultIsolatedAntBuilder.java:128)\r\n\tat org.gradle.api.internal.project.IsolatedAntBuilder$execute$0.call(Unknown Source)\r\n\tat org.gradle.api.plugins.quality.internal.PmdInvoker.invoke(PmdInvoker.groovy:60)\r\n\tat org.gradle.api.plugins.quality.Pmd.run(Pmd.java:93)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:564)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:46)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)\r\n\tat org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:794)\r\n\tat org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:761)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:124)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:317)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:309)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:185)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:97)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:113)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:95)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:73)\r\n\tat org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101)\r\n\tat org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44)\r\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.run(DefaultTaskGraphExecuter.java:256)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:317)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:309)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:185)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:97)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:249)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:238)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:663)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:596)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1135)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n\tat java.base/java.lang.Thread.run(Thread.java:844)\r\nCaused by: java.lang.IllegalArgumentException\r\n\tat org.objectweb.asm.ClassReader.(ClassReader.java:160)\r\n\tat org.objectweb.asm.ClassReader.(ClassReader.java:143)\r\n\tat org.objectweb.asm.ClassReader.(ClassReader.java:418)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.PMDASMClassLoader.getImportedClasses(PMDASMClassLoader.java:107)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.populateClassName(ClassTypeResolver.java:1386)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:197)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:41)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.TypeResolutionFacade.initializeWith(TypeResolutionFacade.java:18)\r\n\tat net.sourceforge.pmd.lang.java.AbstractJavaHandler$5.start(AbstractJavaHandler.java:100)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.usesTypeResolution(SourceCodeProcessor.java:156)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:185)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\t... 100 more\r\n```\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1061", "user": "AustinShalit", "labels": ["a:bug", "has:pr"], "created": "2018-04-28 15:11:05", "closed": "2018-04-28 15:36:55", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] Property ignoredAnnotations does not work for SingularField and ImmutableField", "body": "**Affects PMD Version:** \r\n6.2.0\r\n\r\n**Rule:**\r\n`ImmutableField` and `SingularField`\r\n\r\n**Description:**\r\nNewly announced parameter `ignoredAnnotations` is present in these rules, but it doesn't ignore any violations. \r\nMethod `net.sourceforge.pmd.lang.java.rule.AbstractIgnoredAnnotationRule#hasIgnoredAnnotation` is used only in `UnusedPrivateField` and `UnusedPrivateMethod` rules and feature works well for them.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```xml\r\n    <rule ref=\"category/java/design.xml/SingularField\">\r\n        <properties>\r\n            <property name=\"ignoredAnnotations\" value=\"java.lang.Deprecated\"/>\r\n        </properties>\r\n    </rule>\r\n```\r\n```java\r\n            public class Source {\r\n                @Deprecated\r\n                private Object o; //violation!\r\n\r\n                Object m() {\r\n                    o = new Object();\r\n                    return o;\r\n                }\r\n            }\r\n```\r\n**Running PMD through:** Gradle\r\n", "url": "https://github.com/pmd/pmd/issues/1056", "user": "mkordas", "labels": ["a:bug", "has:pr"], "created": "2018-04-27 11:20:09", "closed": "2018-04-28 15:40:32", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "[plsql] ParseException when parsing EXECUTE IMMEDIATE", "body": "**Affects PMD Version:** 6.2 (from net.sourceforge.pmd.eclipse - 4.0.16.v20180412-0833)\r\n\r\n**Rule:** parsing a .sql file that has execute immediate with into and using in multiline\r\n\r\n**Description:** \r\n```\r\nThere were processing errors!\r\ntest.sql: Error while parsing test.sql net.sourceforge.pmd.PMDException: Error while parsing test.sql\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:98)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:111)\r\n\tat net.sourceforge.pmd.eclipse.runtime.cmd.BaseVisitor.reviewResource(BaseVisitor.java:366)\r\n\tat net.sourceforge.pmd.eclipse.runtime.cmd.ResourceVisitor.visit(ResourceVisitor.java:30)\r\n\tat org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:120)\r\n\tat org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:84)\r\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:82)\r\n\tat org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:129)\r\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:94)\r\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:52)\r\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:117)\r\n\tat org.eclipse.core.internal.resources.Resource.accept(Resource.java:105)\r\n\tat net.sourceforge.pmd.eclipse.runtime.cmd.ReviewCodeCmd.processResource(ReviewCodeCmd.java:481)\r\n\tat net.sourceforge.pmd.eclipse.runtime.cmd.ReviewCodeCmd.processResources(ReviewCodeCmd.java:431)\r\n\tat net.sourceforge.pmd.eclipse.runtime.cmd.ReviewCodeCmd.execute(ReviewCodeCmd.java:221)\r\n\tat net.sourceforge.pmd.eclipse.runtime.cmd.JobCommandProcessor$1.run(JobCommandProcessor.java:93)\r\n\tat org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\r\nCaused by: net.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \" <CHARACTER_LITERAL> \"\\'P\\' \"\" at line 8, column 15.\r\nWas expecting one of:\r\n    \"/\" ...\r\n    \";\" ...\r\n    \"=\" ...\r\n    \"!\" ...\r\n    \"<\" ...\r\n    \">\" ...\r\n    \"+\" ...\r\n    \"-\" ...\r\n    \"||\" ...\r\n    \"**\" ...\r\n    \"*\" ...\r\n    \"AND\" ...\r\n    \"BETWEEN\" ...\r\n    \"FROM\" ...\r\n    \"IN\" ...\r\n    \"IS\" ...\r\n    \"LIKE\" ...\r\n    \"MEMBER\" ...\r\n    \"MOD\" ...\r\n    \"NOT\" ...\r\n    \"OR\" ...\r\n    \"MULTISET\" ...\r\n    \"SUBMULTISET\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:40789)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:40643)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.UnlabelledStatement(PLSQLParser.java:9691)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Statement(PLSQLParser.java:9990)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.ProgramUnit(PLSQLParser.java:5948)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Global(PLSQLParser.java:496)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:194)\r\n\tat net.sourceforge.pmd.lang.plsql.PLSQLParser.parse(PLSQLParser.java:47)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:110)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:180)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\t... 19 more\r\n```\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\n```\r\nCREATE OR REPLACE PROCEDURE test ( p_num_reg OUT number )\r\n AS\r\n    v_query clob;\r\n BEGIN\r\n        v_query:='select count(1) from test_tbl where id =:param';\r\n\r\n        execute immediate v_query into p_num_reg\r\n        USING 'P';\r\n  END test;\r\n```\r\n\r\nRemoving the linebreak in the execute immediate bypass the bug:\r\n```\r\nCREATE OR REPLACE PROCEDURE test ( p_num_reg OUT number )\r\n AS\r\n    v_query clob;\r\n BEGIN\r\n        v_query:='select count(1) from test_tbl where id =:param';\r\n\r\n        execute immediate v_query into p_num_reg USING 'P';\r\nEND test;\r\n```\r\n\r\n\r\n**Running PMD through:** *[Other - Eclipse Plugin]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1047", "user": "asiercamara", "labels": ["a:bug", "has:pr"], "created": "2018-04-24 08:17:18", "closed": "2018-07-15 20:39:15", "commits": {}, "ttf": 82.00027777777778, "commitsDetails": []}, {"title": "[core] Non-XML output breaks XML-based CLI integrations", "body": "**Affects PMD Version:**\r\n6.2.0\r\n\r\n**Rule:**\r\nAll\r\n\r\n**Description:**\r\nIt looks like in recent builds when you specify `-f xml`, some non-XML information is written to stdout causing XML-based integrations such as my IDE (Illuminated Cloud) to break. For example, here's he result of an otherwise successful execution:\r\n\r\n```\r\nThis analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/pmd-6.2.0/pmd_userdocs_getting_started.html#incremental-analysis \u2026<?xml version=\"1.0\" encoding=\"UTF-8\"?><pmd ...>...</pmd>\r\n```\r\n\r\nWhen the CLI is run for structured output, nothing but the structured output should be emitted to stdout/stderr. Otherwise parsing of the contents of the streams will fail unless some form of scrubbing/pre-processing is performed by every integrating client.\r\n\r\n**Running PMD through:**\r\n\r\nWhile found through the integration with Illuminated Cloud, this is easily reproducible via the CLI.", "url": "https://github.com/pmd/pmd/issues/1036", "user": "SCWells72", "labels": ["a:bug", "has:pr"], "created": "2018-04-11 20:32:19", "closed": "2018-04-23 18:40:23", "commits": {"092ec8264a32815f3040b088c07793f3a2f8c3a9": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "092ec8264a32815f3040b088c07793f3a2f8c3a9", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["bf8855c1e5fe83c38f3b2c5489cf4b99001e1ddf", "391193c0443bdd75f4bc806841b0ac4a9c1e27cc"], "nameRev": "092ec8264a32815f3040b088c07793f3a2f8c3a9 tags/pmd_releases/6.3.0~18", "commitMessage": "Merge branch 'pr-1045', fixes #1036\n", "commitDateTime": "2018-04-23 20:29:40", "authoredDateTime": "2018-04-23 20:29:40", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/PMD.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDConfiguration.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/GUI.java", "insertions": 2, "deletions": 5, "lines": 7}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/util/designer/Designer.java", "insertions": 2, "deletions": 4, "lines": 6}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/util/log/ConsoleLogHandler.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/util/log/ScopedLogHandlersManager.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "PMD.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.PMD.run(java.lang.String[])", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "CPDConfiguration.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.filenameFilter()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "GUI.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.createTimer()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.tableModelFrom(java.util.List)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "Designer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.util.designer.Designer.ExceptionNode.children()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.util.designer.Designer.ASTTreeNode.children()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 2}]}, {"spoonFilePath": "ConsoleLogHandler.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.util.log.ConsoleLogHandler", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ScopedLogHandlersManager.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.util.log.ScopedLogHandlersManager", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.util.log.ScopedLogHandlersManager.close()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[java] ReturnFromFinallyBlock: False positive on lambda expression in finally block", "body": "**Affects PMD Version:** \r\n5.6.1\r\n\r\n**Rule:**\r\nReturnFromFinallyBlock Priority:3 Avoid returning from a finally block\r\n\r\n**Description:**\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\ntry {\r\n    ...\r\n} catch (Exception e) {\r\n    ...\r\n} finally {\r\n    Collection<ServiceExecutionEntry> untracked = serviceExecutionTracker.untrackMatchingEntries(e -> {\r\n        ServiceExecutionIdentifiers ids = e.getIdentifiers();\r\n        Long execBqiId = (ids == null) ? null : ids.getBqiId();\r\n        return Objects.equals(bqiId, execBqiId);\r\n    });\r\n    untracked.forEach(e -> logger.info(\"overwriteLastBqi(bqId={}, bqiId={}) untracked {}\", bqId, bqiId, e));\r\n}\r\n```\r\n\r\nObviously, the code in the _finally_ block does not return - PMD mistakes the `return` statement in the lambda expression as a return from the _finally_ block\r\n\r\n**Running PMD through:** *[Maven]*\r\n\r\n```text\r\nApache Maven 3.5.3 (3383c37e1f9e9b3bc3df5050c29c8aff9f295297; 2018-02-24T21:49:05+02:00)\r\nMaven home: /home/lyor/Software/apache-maven-3.5.3\r\nJava version: 1.8.0_162, vendor: Oracle Corporation\r\nJava home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.162-3.b12.fc27.x86_64/jre\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"linux\", version: \"4.15.14-300.fc27.x86_64\", arch: \"amd64\", family: \"unix\"\r\n```\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/1035", "user": "lgoldstein", "labels": ["a:bug", "a:false-positive", "good first issue", "has:pr", "in:xpath"], "created": "2018-04-11 08:54:09", "closed": "2018-12-13 07:45:10", "commits": {"89f23f73b3056b8425bdfb9a6edc1fdd9cc92935": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 245.00027777777777, "commitsDetails": [{"commitHash": "89f23f73b3056b8425bdfb9a6edc1fdd9cc92935", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["bb0cb91348bdc606450117d1e007c37deb0187ef"], "nameRev": "89f23f73b3056b8425bdfb9a6edc1fdd9cc92935 tags/pmd_releases/6.11.0~59^2", "commitMessage": "Update release notes, refs #1503, fixes #1035\n", "commitDateTime": "2018-12-13 08:36:37", "authoredDateTime": "2018-12-13 08:36:37", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] The CyclomaticComplexity rule runs forever in 6.2.0", "body": "**Affects PMD Version:** \r\n6.2.0\r\n\r\n**Rule:**\r\nCyclomaticComplexity\r\n\r\n**Description:**\r\nWhen running the Cyclomatic complexity rule on our large project it seems to be running forever sometime (not always though) with high cpu load. Looking at the stacktrace it seems like there's no blocked threads but all threads are running `BasicProjectMemoizer.getOperationMemoizer(...)`. See full stacktrace below. Anyone else experiencing this?\r\n\r\n```\r\nFull thread dump Java HotSpot(TM) 64-Bit Server VM (25.162-b12 mixed mode):\r\n\r\n\"PmdThread 16\" #45 prio=5 os_prio=0 tid=0x00007f52b8ce7800 nid=0xb14 runnable [0x00007f52768cc000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 15\" #44 prio=5 os_prio=0 tid=0x00007f52b8ce5800 nid=0xb13 runnable [0x00007f52769cd000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 14\" #43 prio=5 os_prio=0 tid=0x00007f52b8cad000 nid=0xb12 runnable [0x00007f5276ace000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:57)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration.jjtAccept(ASTConstructorDeclaration.java:32)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 13\" #42 prio=5 os_prio=0 tid=0x00007f52b8cab800 nid=0xb11 runnable [0x00007f5276bcf000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 12\" #41 prio=5 os_prio=0 tid=0x00007f52b8ca9800 nid=0xb10 runnable [0x00007f5276cd0000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:416)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTAllocationExpression.jjtAccept(ASTAllocationExpression.java:27)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:388)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTPrimaryPrefix.jjtAccept(ASTPrimaryPrefix.java:42)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:384)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:304)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTExpression.jjtAccept(ASTExpression.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:248)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTVariableInitializer.jjtAccept(ASTVariableInitializer.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:240)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTVariableDeclarator.jjtAccept(ASTVariableDeclarator.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:236)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.jjtAccept(ASTFieldDeclaration.java:29)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 11\" #40 prio=5 os_prio=0 tid=0x00007f52b8ca8000 nid=0xb0f runnable [0x00007f5276dd1000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 10\" #39 prio=5 os_prio=0 tid=0x00007f52b8ca6800 nid=0xb0e runnable [0x00007f5276ed2000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 9\" #38 prio=5 os_prio=0 tid=0x00007f52b8c8a800 nid=0xb0d runnable [0x00007f5276fd3000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 8\" #37 prio=5 os_prio=0 tid=0x00007f52b8c89000 nid=0xb0c runnable [0x00007f52770d4000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 7\" #36 prio=5 os_prio=0 tid=0x00007f52b8c87000 nid=0xb0b runnable [0x00007f52771d5000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 6\" #35 prio=5 os_prio=0 tid=0x00007f52b8c85800 nid=0xb09 runnable [0x00007f52772d6000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 5\" #34 prio=5 os_prio=0 tid=0x00007f52b8c84800 nid=0xb08 runnable [0x00007f5277bfb000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 4\" #33 prio=5 os_prio=0 tid=0x00007f52b8ce1000 nid=0xb07 runnable [0x00007f52779f9000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 3\" #32 prio=5 os_prio=0 tid=0x00007f52b8ce0800 nid=0xb06 runnable [0x00007f5277cfc000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 2\" #31 prio=5 os_prio=0 tid=0x00007f52b8cb2000 nid=0xb05 runnable [0x00007f5277afa000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:57)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration.jjtAccept(ASTConstructorDeclaration.java:32)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\"PmdThread 1\" #30 prio=5 os_prio=0 tid=0x00007f52b8cdc800 nid=0xb04 runnable [0x00007f5277dfd000]\r\n   java.lang.Thread.State: RUNNABLE\r\n        at java.util.WeakHashMap.getEntry(WeakHashMap.java:431)\r\n        at java.util.WeakHashMap.containsKey(WeakHashMap.java:417)\r\n        at net.sourceforge.pmd.lang.metrics.BasicProjectMemoizer.getOperationMemoizer(BasicProjectMemoizer.java:41)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:118)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:142)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:67)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:51)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:45)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:119)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:38)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:111)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:500)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:189)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n\r\n\r\n\"main\" #1 prio=5 os_prio=0 tid=0x00007f52b800a000 nid=0xad9 waiting on condition [0x00007f52be9af000]\r\n   java.lang.Thread.State: WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00000003d48ba9a0> (a java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject)\r\n        at java.util.concurrent.locks.LockSupport.park(LockSupport.java:175)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:2039)\r\n        at java.util.concurrent.LinkedBlockingQueue.take(LinkedBlockingQueue.java:442)\r\n        at java.util.concurrent.ExecutorCompletionService.take(ExecutorCompletionService.java:193)\r\n        at net.sourceforge.pmd.processor.MultiThreadProcessor.collectReports(MultiThreadProcessor.java:48)\r\n        at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:118)\r\n        at net.sourceforge.pmd.PMD.processFiles(PMD.java:321)\r\n        at org.apache.maven.plugins.pmd.PmdReport.processFilesWithPMD(PmdReport.java:503)\r\n        at org.apache.maven.plugins.pmd.PmdReport.executePmd(PmdReport.java:432)\r\n        at org.apache.maven.plugins.pmd.PmdReport.executePmdWithClassloader(PmdReport.java:331)\r\n        at org.apache.maven.plugins.pmd.PmdReport.canGenerateReport(PmdReport.java:305)\r\n        at org.apache.maven.reporting.AbstractMavenReport.execute(AbstractMavenReport.java:120)\r\n        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:137)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)\r\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)\r\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)\r\n        at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:56)\r\n        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\r\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:305)\r\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:192)\r\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:105)\r\n        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:956)\r\n        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:290)\r\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:194)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\n\r\n```\r\n\r\n**Running PMD through:**\r\nMaven\r\n", "url": "https://github.com/pmd/pmd/issues/1020", "user": "bergander", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2018-04-04 08:53:00", "closed": "2018-04-22 16:10:38", "commits": {"933235b1409beb5199327e25aea78c65cc5c38c0": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "933235b1409beb5199327e25aea78c65cc5c38c0", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["7c7a66d7503ea0c28fcb0b4b2dc060741c35e3ef"], "nameRev": "933235b1409beb5199327e25aea78c65cc5c38c0 tags/pmd_releases/6.3.0~22^2", "commitMessage": "Update release notes, refs #1041\n\nCloses #1020\n", "commitDateTime": "2018-04-22 18:05:30", "authoredDateTime": "2018-04-22 18:05:30", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] Java8 parsing corner case with annotated array types ", "body": "## Problems\r\nWith Java 8 type annotations, the dimensions of an array may each have different annotations, which our parser actually doesn't support... There are several instances of this problem:\r\n\r\n### Type node\r\n\r\n```java\r\n      // Doesn't parse\r\n      int @Foo[]@Bar[] i;\r\n``` \r\n\r\n[JLS](https://docs.oracle.com/javase/specs/jls/se8/html/jls-4.html#jls-Dims)\r\n\r\nOur grammar:\r\n\r\nhttps://github.com/pmd/pmd/blob/master/pmd-java/etc/grammar/Java.jjt#L1885-L1887\r\n\r\n### Array creation expression\r\n\r\n\r\n```java\r\n   // Doesn't parse\r\n    new int @Foo[2] @Bar[];\r\n```\r\n\r\n[JLS](https://docs.oracle.com/javase/specs/jls/se8/html/jls-15.html#jls-DimExpr)\r\n\r\nOur grammar:\r\n\r\nhttps://github.com/pmd/pmd/blob/master/pmd-java/etc/grammar/Java.jjt#L2261-L2269\r\n\r\n### VariableDeclaratorId\r\n\r\n```java\r\nclass Foo {\r\n  int i @Bar[]; // field declaration\r\n\r\n  void bar(int i@Bar[]) { // formal parameter \r\n    int i @Bar[]; // local variable declaration\r\n  }\r\n}\r\n```\r\n\r\n\r\n[JLS](https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-VariableDeclaratorId)\r\n\r\nOur grammar:\r\n\r\nhttps://github.com/pmd/pmd/blob/master/pmd-java/etc/grammar/Java.jjt#L1771-1787\r\n\r\n\r\n### Method declarations\r\n\r\nThe [JLS](https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-MethodDeclarator) allows array dimensions (including annotations) to be added after the formal parameter list, eg:\r\n```java\r\n  int method()@Foo[]@Bar[] {\r\n        return new int[2][];\r\n  }\r\n```\r\n\r\nBy the way, even without annotations, the parser currently discards the additionnal array dimensions, though it should be used in type resolution:\r\n\r\nhttps://github.com/pmd/pmd/blob/master/pmd-java/etc/grammar/Java.jjt#L1822\r\n\r\nThis is related to the broader #910 changeset\r\n\r\n## Solution\r\n\r\n* Add a node for the array dimensions, which resembles the JLS for the `Dims` production. This wouldn't be API breaking, provided we make the dimensions of eg ReferenceType delegate to that Dims node. \r\n* Dimensionable should probably be deprecated entirely, and we could use a new interface to replace it that exposes the annotations and the dimensions for type resolution, based on the Dims node\r\n* To make the method return type resolution work correctly, we could make ReturnType a Dimensionable (and a TypeNode), and add the dimensions of the Dims node found in the method declarator to the dimensions found in the type node. \r\n\r\nI imagine that could be 3 PRs\r\n", "url": "https://github.com/pmd/pmd/issues/997", "user": "oowekyala", "labels": ["a:bug", "has:pr", "in:ast"], "created": "2018-03-23 19:16:35", "closed": "2020-04-25 15:29:58", "commits": {}, "ttf": 763.0002777777778, "commitsDetails": []}, {"title": "[core] FileNotFoundException for missing classes directory with analysis cache enabled", "body": "**Affects PMD Version:** 6.1.0\r\n\r\n**Description:**\r\n\r\nOriginal issue: https://issues.apache.org/jira/browse/MPMD-255\r\n\r\nWhile trying to determine the checksum for the auxclasspath, we might encounter a `FileNotFoundException`, if one of the directories of the auxclasspath doesn't exist.\r\n\r\nI think, we need to take care of this in PMD itself, to make it more safe.\r\nBut the m-pmd-p provides the auxclasspath and it obviously provides a \"theoretical\" classpath, even if the directory doesn't exist.\r\nThis might happen if the project really has no  `src/main/java` (e.g. just tests) or m-pmd-p is executed directly without compiling the project first.\r\n\r\nStacktrace:\r\n\r\n```\r\nCaused by: java.io.FileNotFoundException: my-project\\target\\classes (The system cannot find the file specified)\r\n    at java.io.FileInputStream.open0 (Native Method)\r\n    at java.io.FileInputStream.open (FileInputStream.java:195)\r\n    at java.io.FileInputStream.<init> (FileInputStream.java:138)\r\n    at java.io.FileInputStream.<init> (FileInputStream.java:93)\r\n    at sun.net.www.protocol.file.FileURLConnection.connect (FileURLConnection.java:90)\r\n    at sun.net.www.protocol.file.FileURLConnection.getInputStream (FileURLConnection.java:188)\r\n    at java.net.URL.openStream (URL.java:1045)\r\n    at net.sourceforge.pmd.cache.AbstractAnalysisCache.computeClassPathHash (AbstractAnalysisCache.java:182)\r\n    at net.sourceforge.pmd.cache.AbstractAnalysisCache.checkValidity (AbstractAnalysisCache.java:113)\r\n    at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles (AbstractPMDProcessor.java:105)\r\n    at net.sourceforge.pmd.PMD.processFiles (PMD.java:311)\r\n    at org.apache.maven.plugins.pmd.PmdReport.processFilesWithPMD (PmdReport.java:503)\r\n    at org.apache.maven.plugins.pmd.PmdReport.executePmd (PmdReport.java:432)\r\n    at org.apache.maven.plugins.pmd.PmdReport.executePmdWithClassloader (PmdReport.java:331)\r\n    at org.apache.maven.plugins.pmd.PmdReport.canGenerateReport (PmdReport.java:305)\r\n```\r\n\r\n\r\n\r\n**Running PMD through:** Maven\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/988", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2018-03-19 21:01:30", "closed": "2018-04-03 20:07:14", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "[plsql] ParseException when parsing VIEW", "body": "Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core].\r\n\r\n**Affects PMD Version:** \r\n6.1.0\r\n**Rule:**\r\nIssue parsing a .sql file that has a CREATE OR REPLACE VIEW \r\n**Description:**\r\nnet.sourceforge.pmd.PMDException: Error while parsing D:\\flOraGithubRepo\\HR_WF\\Database\\HR\\Views\\EMP_DETAILS_VIEW.sql\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:98)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\nCaused by: net.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \"\" at line 8, column 2.\r\nWas expecting one of:\r\n    \"/\" ...\r\n    \";\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:40789)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:40643)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.View(PLSQLParser.java:22737)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:182)\r\n\tat net.sourceforge.pmd.lang.plsql.PLSQLParser.parse(PLSQLParser.java:48)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:110)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:173)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n**Code Sample demonstrating the issue:**\r\nNote that the SQL below was generated using Oracle SQL Developer so I'd have hoped that this is valid.\r\n\r\n  CREATE OR REPLACE FORCE VIEW \"HR_DEV1\".\"EMP_DETAILS_VIEW\" (\"EMPLOYEE_ID\") AS \r\n  SELECT\r\n  e.employee_id\r\nFROM\r\n  employees e\r\nWITH READ ONLY\r\n;\r\n\r\n\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nwindows command line: >call Tools\\pmd\\bin\\pmd -d \"Database\\HR\\Procedures,Database\\HR\\Functions,Database\\HR\\Packages,Database\\HR\\PackageBodies,Database\\HR\\Triggers,Database\\HR\\Views\" -l plsql -R pmd_ruleset.xml -f summaryhtml -r Artifacts\\static_analysis_report.html\r\n", "url": "https://github.com/pmd/pmd/issues/981", "user": "dvdtknsn", "labels": ["a:bug", "has:pr"], "created": "2018-03-16 14:31:00", "closed": "2018-07-15 20:31:00", "commits": {}, "ttf": 121.00027777777778, "commitsDetails": []}, {"title": "[plsql] ParseException for CREATE TABLE", "body": "Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core].\r\n\r\n**Affects PMD Version:** \r\n6.1.0\r\n**Rule:**\r\nIssue parsing a .sql file that has a CREATE TABLE definition\r\n**Description:**\r\nnet.sourceforge.pmd.PMDException: Error while parsing D:\\flOraGithubRepo\\HR_WF\\Database\\HR\\Tables\\CUSTOMERS.sql\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:98)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\nCaused by: net.sourceforge.pmd.lang.plsql.ast.ParseException: Encountered \"  \"PRIMARY \"\" at line 5, column 27.\r\nWas expecting one of:\r\n    \"@\" ...\r\n    \".\" ...\r\n    \",\" ...\r\n    \")\" ...\r\n    \"%\" ...\r\n    \"DEFAULT\" ...\r\n    \"NOT\" ...\r\n    \"NULL\" ...\r\n    \r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.generateParseException(PLSQLParser.java:40789)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.jj_consume_token(PLSQLParser.java:40643)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Table(PLSQLParser.java:22556)\r\n\tat net.sourceforge.pmd.lang.plsql.ast.PLSQLParser.Input(PLSQLParser.java:180)\r\n\tat net.sourceforge.pmd.lang.plsql.PLSQLParser.parse(PLSQLParser.java:48)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:110)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:173)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n**Code Sample demonstrating the issue:**\r\n-- this is the customers.sql file:\r\nCREATE TABLE customers\r\n( customer_id number(10) NOT NULL,\r\n  customer_name varchar2(50) NOT NULL,\r\n  city varchar2(50),\r\n  CONSTRAINT customers_pk PRIMARY KEY (customer_id)\r\n);\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nWindows command line:\r\ncall Tools\\pmd\\bin\\pmd -d \"Database\\HR\" -l plsql -R pmd_ruleset.xml -f summaryhtml -r Artifacts\\static_analysis_report.html\r\n", "url": "https://github.com/pmd/pmd/issues/980", "user": "dvdtknsn", "labels": ["a:bug", "has:pr"], "created": "2018-03-16 12:04:36", "closed": "2018-07-15 20:29:10", "commits": {}, "ttf": 121.00027777777778, "commitsDetails": []}, {"title": "[core] Broken link in CONTRIBUTING.md", "body": "\r\nIn the [Documentation Section of CONTRIBUTING.md](https://github.com/pmd/pmd/blob/master/CONTRIBUTING.md#documentation) there is a broken link \r\nhttps://github.com/pmd/pmd/tree/master/src/site", "url": "https://github.com/pmd/pmd/issues/978", "user": "refactormyself", "labels": ["a:bug", "good first issue", "in:documentation"], "created": "2018-03-15 18:12:49", "closed": "2018-03-22 13:41:27", "commits": {"d699c277ea2e537e3e50b1a50362f736119d6b4a": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "d699c277ea2e537e3e50b1a50362f736119d6b4a", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["b969974653590a997c2aae8fbcdac84c2fb80c60"], "nameRev": "d699c277ea2e537e3e50b1a50362f736119d6b4a tags/pmd_releases/6.2.0~10", "commitMessage": "Update release notes, refs #989\n\nCloses #978\n", "commitDateTime": "2018-03-22 14:41:13", "authoredDateTime": "2018-03-22 14:41:13", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 4, "deletions": 1, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Does the rule \"AbstractClassWithoutAbstractMethod\" works?", "body": "The rule \"AbstractClassWithoutAbstractMethod\" confuse me a lot. I create an abstract class with no abstract method, but get no violation (pmd-eclipse-plug 4.0.16 snapshot version with pmd 6.1.0). And the exampl of thr rule seems illegal  java code. \r\n`public abstract class Foo {\r\n  void int method1() { ... }\r\n  void int method2() { ... }\r\n  // consider using abstract methods or removing\r\n  // the abstract modifier and adding protected constructors\r\n}`\r\nCan method decleared both as `int` and `void`?\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/976", "user": "lonelyma1021", "labels": ["a:bug", "good first issue", "in:documentation"], "created": "2018-03-15 03:02:56", "closed": "2018-03-17 06:10:13", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[core] PMD 6.0.1 Docs - Broken link to XPath Rule Tutorial", "body": "Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core].\r\n\r\n**Affects PMD Version:** \r\n6.0.1\r\n\r\n**Description:**\r\nThe link to the XPath Rule tutorial on the following page is broken:\r\nhttps://pmd.github.io/pmd-6.0.1/pmd_userdocs_suppressing.html \r\n\r\nIt leads the user to:\r\nhttps://pmd.github.io/pmd_devdocs_writing_xpath_rules.html\r\n\r\nThis should probably go to:\r\nhttps://pmd.github.io/pmd-6.1.0/pmd_userdocs_extending_writing_xpath_rules.html\r\n", "url": "https://github.com/pmd/pmd/issues/959", "user": "GuyPaddock", "labels": ["a:bug", "good first issue", "in:documentation"], "created": "2018-03-06 15:42:28", "closed": "2018-03-10 12:54:43", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[java] UnusedImports false positive for static import", "body": "**Affects PMD Version:** \r\n\r\n6.0.1\r\n\r\n**Rule:**\r\n\r\nUnusedImports\r\n\r\n**Description:**\r\n\r\nA false positive is generated for the `UnusedImports` rule on static import of constants.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nThe file [`FileFormatType`](https://github.com/VocabHunter/VocabHunter/blob/dea49f975484a0483fa5d7ff8fb368dd7a2ce347/gui/src/main/java/io/github/vocabhunter/gui/dialogues/FileFormatType.java) on the project [VocabHunter](https://github.com/VocabHunter/VocabHunter) shows this problem.  To work around the problem, the following line has been added to [ruleset.xml](https://github.com/VocabHunter/VocabHunter/blob/d2f2e536ab0aec1a17063c8dde1365006d39706e/config/pmd/ruleset.xml):\r\n```\r\n<exclude-pattern>.*/*FileFormatType.java</exclude-pattern>\r\n```\r\n\r\nTo reproduce the problem, remove the above workaround line and then launch the following:\r\n```\r\n$ ./gradlew clean :gui:pmdMain\r\n```\r\n\r\n**Running PMD through:** *Gradle*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/925", "user": "AdamCarroll", "labels": ["a:bug", "a:false-positive", "has:pr"], "created": "2018-02-19 21:09:00", "closed": "2018-02-24 20:51:01", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[java] AST inconsistency between primitive and reference type arrays", "body": "Array types are represented by a ReferenceType with attributes IsArray and ArrayDepth set accordingly. ReferenceType nodes then either have a PrimitiveType or a ClassOrInterfaceType child, depending on whether the component type of the array is primitive or not. Both these node types have the attributes IsArray and ArrayDepth too.\r\n\r\nThe problem is that, with arrays of primitive types, these attributes are set only on the parent ReferenceType, and not on the PrimitiveType node. For arrays of reference type, the attributes are correctly set.\r\n\r\nThis causes ClassTypeResolver to resolve the type of the formal parameter `keys` as `int` and not `int[]` in the following snippet, since the type of the ReferenceType node is rolled up from its child. (try with the designer)\r\n\r\n```java\r\npublic abstract class AbstractClass {\r\n    public void arrayParams(int[] keys, String[] labels) {\r\n\tint[] foo = new int[5];\r\n   }\r\n}\r\n```\r\n\r\nI think the root problem is that *only* the parent ReferenceType should know about array dimensions, if the child node is to represent the component type. If removing those attributes is too inconvenient, we could also just patch the parser so that the attributes are correctly set on PrimitiveType. Either way, there's an inconsistency to rule out.", "url": "https://github.com/pmd/pmd/issues/910", "user": "oowekyala", "labels": ["a:bug", "has:pr", "in:ast", "in:type-resolution"], "created": "2018-02-13 18:27:18", "closed": "2020-04-25 15:29:38", "commits": {}, "ttf": 801.0002777777778, "commitsDetails": []}, {"title": "[core] Tree traversal revision", "body": "I was recently digging into #370, which is false reporting on lambdas when finding code such as:\r\n\r\n```java\r\nLOGGER.info(() -> \"Bla \" + \" bla\");\r\n```\r\n\r\n when I realized the problem laid on this line\r\n\r\nhttps://github.com/pmd/pmd/blob/cd9f4f2248f4358bfc6e1acf979102480ec816dd/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/GuardLogStatementRule.java#L97\r\n\r\n`hasDescendantOfType` completely ignores find boundaries. `getFirstDescendantOfType` also completely ignores find boundaries. Moreover, **all** tree transversal operations ignore find boundaries, except for `findDescendantsOfType` which doesn't (but has a convoluted overload which allows to).\r\n\r\nSo, `node.hasDescendantOfType(XXX.class)` may return true, `node.getFirstDescendantOfType(XXX.class)` won't return null, but `node.findDescendantsOfType(XXX.class)` may return empty. Rejoyce!\r\n\r\nMoreover, most often than not, we don't really want to transverse along find boundaries. Actually, pretty much all current rules are broken on this respect. Some brief examples I was able to find in under 15'\r\n\r\nApparently when finding\r\n\r\n```\r\npublic void foo() {\r\n  class Bar {\r\n    private Object o = new Object();\r\n  }\r\n}\r\n```\r\n\r\nThe whole `class Bar { \u2026\u00a0}` block is a single `ASTBlockStatement` which is convinced this is an allocation statement.\r\n\r\nhttps://github.com/pmd/pmd/blob/cd9f4f2248f4358bfc6e1acf979102480ec816dd/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTBlockStatement.java#L30-L32\r\n\r\nBut lambdas in particular are easier to find anywhere and completely break logic:\r\n\r\nThe complexity of the statement `return () -> { someValue && doStuff() };` is 1, even though we are simply creating a lambda and in doing so performing exactly 0 boolean operations.\r\n\r\nhttps://github.com/pmd/pmd/blob/cd9f4f2248f4358bfc6e1acf979102480ec816dd/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/metrics/impl/CycloMetric.java#L62-L68\r\n\r\nReturning a lambda can also wreck havoc on sun secure rules\r\n\r\nhttps://github.com/pmd/pmd/blob/cd9f4f2248f4358bfc6e1acf979102480ec816dd/pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/AbstractSunSecureRule.java#L82-L93\r\n\r\nI have so far been unable to find a single case where:\r\n - we don't intend to look **ONLY within** find boundaries\r\n - it's irrelevant due to the AST format (ie: looking for imports, which can only be direct children of the ACU)\r\n\r\nOn the first scenario, the current transversing is broken and may produce FPs / FNs. We may actually be reporting duplicate violations as lambdas / nested local classes statements may be analyzed more than once.\r\nOn the second scenario, we are simply inefficient by digging too deep\r\n\r\nI did a quick test, and changing `getFirstDescendantOfType` (and therefore `hasDescendantOfType`) to respect find boundaries resulted in 0 errors, except for for this one statement where on a test we are being lazy:\r\n\r\nhttps://github.com/pmd/pmd/blob/cd9f4f2248f4358bfc6e1acf979102480ec816dd/pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/ClassTypeResolverTest.java#L237-L239\r\n\r\nOn the other hand, I'm sure I can come up with tests for all these rules where lambdas an local classes produce FPs / FNs.\r\n\r\n@adangel @oowekyala what do you think? Shall we change the default behavior on PMD 6.1.0? Shall we deprecate those methods and add new ones allowing to cross boundaries on demand? Is there really a case for crossing boundaries?", "url": "https://github.com/pmd/pmd/issues/904", "user": "jsotuyod", "labels": ["a:bug", "has:pr"], "created": "2018-02-09 04:40:55", "closed": "2018-03-29 04:57:13", "commits": {}, "ttf": 48.000277777777775, "commitsDetails": []}, {"title": "[java] JavaTypeDefinitionSimple.toString can cause NPEs", "body": "**Affects PMD Version:**\r\n\r\n6.0.1\r\n\r\n**Rule:**\r\n\r\nNot applicable\r\n\r\n**Description:**\r\n\r\nThe current toString implementation of JavaTypeDefinitionSimple can cause NullPointerExceptions if one of the genericArgs is null (The call to shallowString will fail). I do not know why a null can be present in the genericArgs (Which if it is unexpected, would of course be the root cause), but preventing the NullPointerException is fairly trivial.\r\n\r\n**Running PMD through:** *Maven*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/899", "user": "sniperrifle2004", "labels": ["a:bug", "has:pr"], "created": "2018-02-01 13:53:23", "closed": "2018-04-09 17:40:53", "commits": {}, "ttf": 67.00027777777778, "commitsDetails": []}, {"title": "[doc] Apex @SuppressWarnings should use single quotes instead of double quotes", "body": "**Affects PMD Version:** 6.0.1\r\n\r\n**Rule:** errorprone.xml/EmptyStatementBlock, but maybe others as well\r\n\r\n**Description:**\r\nSupressing this violation with `@SuppressWarnings(\"PMD.EmptyStatementBlock\")` doesn't work.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class ConfigExtractor {\r\n    @SuppressWarnings(\"PMD.EmptyStatementBlock\")\r\n    public static void orgIdent () {\r\n    }\r\n}\r\n```\r\n\r\nas well as this:\r\n\r\n```\r\n@SuppressWarnings(\"PMD.EmptyStatementBlock\")\r\npublic class ConfigExtractor {\r\n    public static void orgIdent () {\r\n    }\r\n} \r\n```\r\n\r\n**Running PMD through:** *[CLI]*\r\n\r\nSee https://sourceforge.net/p/pmd/discussion/188193/thread/9ae8d154/\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/891", "user": "adangel", "labels": ["a:bug", "good first issue", "has:pr", "in:documentation"], "created": "2018-01-30 08:23:23", "closed": "2018-02-17 17:17:17", "commits": {}, "ttf": 18.00027777777778, "commitsDetails": []}, {"title": "[java] ParseException occurs with valid '<>' in Java 1.8 mode", "body": "**Affects PMD Version:** \r\n6.0.0\r\n\r\n**Rule:**\r\n\r\n**Description:**\r\nA valid '<>' (diamond operator) in java 1.8 is misrecognized as anonymous inner class  and a ParseException occurs.\r\n\r\n**Code Sample demonstrating the issue:**\r\n```\r\nimport java.awt.*;\r\nimport javax.swing.*;\r\nimport javax.swing.plaf.LayerUI;\r\nimport javax.swing.plaf.basic.BasicComboBoxEditor;\r\n\r\npublic class PMDExceptionTest {\r\n  private Component makeUI() {\r\n    String[] model = {\"123456\", \"7890\"};\r\n    JComboBox<String> comboBox = new JComboBox<>(model);\r\n    comboBox.setEditable(true);\r\n    comboBox.setEditor(new BasicComboBoxEditor() {\r\n      private Component editorComponent;\r\n      @Override public Component getEditorComponent() {\r\n        if (editorComponent == null) {\r\n          JTextField tc = (JTextField) super.getEditorComponent();\r\n          editorComponent = new JLayer<>(tc, new ValidationLayerUI<>());\r\n        }\r\n        return editorComponent;\r\n      }\r\n    });\r\n    JPanel p = new JPanel();\r\n    p.add(comboBox);\r\n    return p;\r\n  }\r\n  public static void main(String[] args) {\r\n    EventQueue.invokeLater(() -> {\r\n      JFrame f = new JFrame();\r\n      f.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);\r\n      f.getContentPane().add(new PMDExceptionTest().makeUI());\r\n      f.setSize(320, 240);\r\n      f.setLocationRelativeTo(null);\r\n      f.setVisible(true);\r\n    });\r\n  }\r\n}\r\nclass ValidationLayerUI<V extends JTextField> extends LayerUI<V> {\r\n  @Override public void paint(Graphics g, JComponent c) {\r\n    super.paint(g, c);\r\n    // paint an icon and so on but omit it\r\n  }\r\n}\r\n```\r\n\r\n```\r\n$ \"%JAVA_HOME%/bin/javac\" -version\r\njavac 1.8.0_162\r\n\r\n$ \"%JAVA_HOME%/bin/javac\" src/PMDExceptionTest.java\r\n\r\n$ dir src\r\n'PMDExceptionTest$1.class'   PMDExceptionTest.class   PMDExceptionTest.java   ValidationLayerUI.class\r\n\r\n$ \"%PMD_HOME%/bin/pmd.bat\" -debug -d ./src -R category/java/bestpractices.xml -language java -version 1.8\r\nLoaded rule ...\r\n...\r\nProcessing C:\\temp\\src\\PMDExceptionTest.java\r\nError while processing file: C:\\temp\\src\\PMDExceptionTest.java\r\nnet.sourceforge.pmd.PMDException: Error while parsing C:\\temp\\src\\PMDExceptionTest.java\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:98)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n        at java.base/java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n        at java.base/java.util.concurrent.FutureTask.run(Unknown Source)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n        at java.base/java.lang.Thread.run(Unknown Source)\r\nCaused by: net.sourceforge.pmd.lang.java.ast.ParseException: Line 21, Column 5: Cannot use '<>' with anonymous inner classes when running in JDK inferior to 9 mode!\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.throwParseException(JavaParser.java:23)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.checkForBadAnonymousDiamondUsage(JavaParser.java:139)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.AllocationExpression(JavaParser.java:4519)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.PrimaryPrefix(JavaParser.java:3922)\r\n```\r\n\r\n**Running PMD through:** *[CLI]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/888", "user": "aterai", "labels": ["a:bug", "has:pr"], "created": "2018-01-29 12:19:05", "closed": "2018-01-30 08:50:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] CommentRequired valid rule configuration causes PMD error", "body": "Please, prefix the report title with the language it applies to within brackets, such as [java] or [apex].\r\nIf not specific to a language, you can use [core].\r\n\r\n**Affects PMD Version:** \r\n6.0.1\r\n**Rule:**\r\ncategory/java/documentation.xml/CommentRequired\r\n**Description:**\r\nThe PMD config below causes PMD to fail with \"Removed misconfigured rule: CommentRequired  cause: All comment types are ignored\".\r\nIf I change the config so that any one other property is \"Required\" and the remaining four are \"Ignored\" then it works.\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n  <rule ref=\"category/java/documentation.xml/CommentRequired\">\r\n    <properties>\r\n      <property name=\"enumCommentRequirement\" value=\"Required\"/>\r\n      <property name=\"fieldCommentRequirement\" value=\"Ignored\"/>\r\n      <property name=\"headerCommentRequirement\" value=\"Ignored\"/>\r\n      <property name=\"publicMethodCommentRequirement\" value=\"Ignored\"/>\r\n      <property name=\"protectedMethodCommentRequirement\" value=\"Ignored\"/>\r\n    </properties>\r\n  </rule>\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nGradle (Android)\r\n", "url": "https://github.com/pmd/pmd/issues/877", "user": "NickButcher1", "labels": ["a:bug", "has:pr"], "created": "2018-01-23 20:16:30", "closed": "2018-01-26 09:21:16", "commits": {"9062b4f09ef73f2f383bb97f94d2b03174189b9e": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "9062b4f09ef73f2f383bb97f94d2b03174189b9e", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["ccb8bae42ddde2eac85fd0542c690b6fc702027b"], "nameRev": "9062b4f09ef73f2f383bb97f94d2b03174189b9e tags/pmd_releases/6.1.0~29^2", "commitMessage": "[java] CommentRequiredRule: Add unit test\n\nAdd a unit test to verify the dysfunctionalReason is detected\ncorrectly.\n\nRefs #877\n", "commitDateTime": "2018-01-26 09:58:50", "authoredDateTime": "2018-01-26 09:58:50", "commitGitStats": [{"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/documentation/CommentRequiredRuleTest.java", "insertions": 55, "deletions": 0, "lines": 55}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CommentRequiredRuleTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.documentation.CommentRequiredRuleTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9062b4f09ef73f2f383bb97f94d2b03174189b9e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] NullPointerException at FileDataSource.glomName()", "body": "**Affects PMD Version:** \r\n6.0.1\r\n**Rule:**\r\n\r\n**Description:**\r\nWhen supplying a file list and requesting display of short names, the parameter `inputFileName` to the function `FileDataSource.glomName` is unset, thus causing `NullPointerException` at line 40:\r\n```\r\nif (shortNames && inputFileName.indexOf(',') == -1) {\r\n```\r\n\r\nThe `inputFileName` parameter is passed with `configuration.getInputPaths()` (`AbstractPMDProcessor.java:57`). The `inputPaths` field of `configuration` is set to `null` because there is no `--directory` parameter passed on the command line. But passing this parameter will cause all source files under the directory to be included rather than just the files specified in file list.\r\n\r\n**Code Sample demonstrating the issue:**\r\nError message:\r\n```\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.util.datasource.FileDataSource.glomName(FileDataSource.java:40)\r\n\tat net.sourceforge.pmd.util.datasource.FileDataSource.getNiceFileName(FileDataSource.java:36)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.filenameFrom(AbstractPMDProcessor.java:57)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:109)\r\n\tat net.sourceforge.pmd.PMD.processFiles(PMD.java:311)\r\n\tat net.sourceforge.pmd.PMD.doPMD(PMD.java:232)\r\n\tat net.sourceforge.pmd.PMD.run(PMD.java:451)\r\n\tat net.sourceforge.pmd.cli.PMDCommandLineInterface.run(PMDCommandLineInterface.java:170)\r\n\tat net.sourceforge.pmd.PMD.main(PMD.java:424)\r\n```\r\nAnd `inputFileName` parameter is `null`.\r\n\r\n**Running PMD through:** *CLI*\r\n```\r\nbin/run.sh pmd -shortnames -filelist filelist -format text -rulesets braces.xml\r\n```", "url": "https://github.com/pmd/pmd/issues/872", "user": "john5f35", "labels": ["a:bug", "has:pr"], "created": "2018-01-22 03:12:23", "closed": "2018-01-26 00:26:50", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[java] InsufficientStringBufferDeclaration NumberFormatException", "body": "PMD version `6.0.0`.\r\n\r\n```\r\nException applying rule InsufficientStringBufferDeclaration on file ...SomeFile.java, continuing with next rule\r\njava.lang.NumberFormatException: For input string: \"10_000\"\r\n        at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)\r\n```\r\n\r\nI guess it is obvious what is wrong, please tell me if you need more information.", "url": "https://github.com/pmd/pmd/issues/841", "user": "boris-petrov", "labels": ["a:bug", "has:pr"], "created": "2018-01-11 11:53:34", "closed": "2018-01-15 19:52:02", "commits": {"96cc4f01f301d01e679cefc8473612162c41103e": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "96cc4f01f301d01e679cefc8473612162c41103e", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["23a673114c2513c1da49103ee271d701456aca33", "fe53f8bb91d669cee4ef38b90761d371e0df0f64"], "nameRev": "96cc4f01f301d01e679cefc8473612162c41103e tags/pmd_releases/6.0.1~8", "commitMessage": "Merge branch 'pr-849'\nCloses #841\n", "commitDateTime": "2018-01-15 20:45:34", "authoredDateTime": "2018-01-15 20:44:50", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTLiteral.java", "insertions": 63, "deletions": 0, "lines": 63}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/InsufficientStringBufferDeclarationRule.java", "insertions": 5, "deletions": 7, "lines": 12}, {"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/performance/RedundantFieldInitializerRule.java", "insertions": 4, "deletions": 37, "lines": 41}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTLiteralTest.java", "insertions": 40, "deletions": 0, "lines": 40}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/performance/xml/InsufficientStringBufferDeclaration.xml", "insertions": 16, "deletions": 3, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ASTLiteral.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteral.stripIntValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteral.stripFloatValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteral.getIntBase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteral.getValueAsInt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteral.getValueAsLong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteral.getValueAsFloat()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteral.getValueAsDouble()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "InsufficientStringBufferDeclarationRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.performance.InsufficientStringBufferDeclarationRule.getConstructorLength(net.sourceforge.pmd.lang.ast.Node,int)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.performance.InsufficientStringBufferDeclarationRule.processNode(net.sourceforge.pmd.lang.ast.Node)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}]}, {"spoonFilePath": "RedundantFieldInitializerRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.performance.RedundantFieldInitializerRule.visit(net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration,java.lang.Object)", "TOT": 15, "UPD": 4, "INS": 2, "MOV": 3, "DEL": 6}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.performance.RedundantFieldInitializerRule.parseInteger(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ASTLiteralTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteralTest.testIntValueParsing()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteralTest.testIntValueParsingBinary()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteralTest.testIntValueParsingNegativeHexa()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTLiteralTest.testFloatValueParsingNegative()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[java] SignatureDeclareThrowsException's IgnoreJUnitCompletely property not honored for constructors", "body": "**Affects PMD Version:** 6.0.0\r\n\r\n**Rule:**\r\nSignatureDeclareThrowsException\r\n\r\n**Description:**\r\nSignatureDeclareThrowsException has a \"IgnoreJUnitCompletely\" property, which is documented as \"Allow all methods in a JUnit testcase to throw Exceptions\". My expectation is that \"all methods\" would include constructors, but setting this property to true still results in the rule firing for constructors.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n`JUnitAnnotationTest.java`\r\n```java\r\nimport org.junit.Test;\r\nimport org.junit.Before;\r\nimport org.junit.Assert;\r\nimport junit.framework.TestCase;\r\n\r\npublic class JUnitAnnotationTest extends TestCase {\r\n    public JUnitAnnotationTest() throws Exception {\r\n    }\r\n}\r\n```\r\n\r\n`pmd-rules.xml`\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n  \r\n<ruleset name=\"Test PMD Rules\"\r\n         xmlns=\"http://pmd.sourceforge.net/ruleset/2.0.0\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xsi:schemaLocation=\"http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd\">\r\n    <description>Test PMD Rules</description>\r\n\r\n    <rule ref=\"category/java/design.xml/SignatureDeclareThrowsException\">\r\n        <properties>\r\n            <property name=\"IgnoreJUnitCompletely\" value=\"true\"/>\r\n        </properties>\r\n    </rule>\r\n</ruleset>\r\n```\r\n\r\n*Results*:\r\n```\r\n/Users/dadams/tmp/JUnitAnnotationTest.java:7:\tA method/constructor should not explicitly throw java.lang.Exception\r\n```\r\n\r\n*Expected*: No errors.\r\n\r\n**Running PMD through:** CLI & Gradle\r\n", "url": "https://github.com/pmd/pmd/issues/839", "user": "dkadams", "labels": ["a:bug", "a:false-positive", "good first issue", "has:pr"], "created": "2018-01-10 15:18:50", "closed": "2018-03-11 04:41:47", "commits": {}, "ttf": 59.000277777777775, "commitsDetails": []}, {"title": "[java] CFGs of declared but not called lambdas are treated as parts of an enclosing method's CFG", "body": "**Affects PMD Version:** \r\n6.0.0 (and older ones I suppose)\r\n\r\n**Rule:**\r\n`CyclomaticComplexity`\r\n\r\n**Description:**\r\nCurrently, PMD treats CFG's of lambdas that are declared but not called in a method as a part of the method's CFG which falsely increases a reported cyclomatic complexity values of such methods.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nHere is an example of a dummy method which is considered by PMD as having cyclomatic complexity = 12 while the expected value is below 10:\r\n```\r\npublic void notSoComplex(int intInput)\r\n{\r\n\tboolean binary;\r\n\r\n\tswitch (intInput)\r\n\t{\r\n\t\tcase 0:\r\n\t\t\tbinary = false;\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase 1:\r\n\t\t\tbinary = true;\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new RuntimeException();\r\n\t}\r\n\r\n\tBiConsumer<Object, Object> lambda1 = (message, nme) ->\r\n\t{\r\n\t\tif (binary)\r\n\t\t{\r\n\t\t\tSystem.out.println(message);\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tSystem.out.println(nme);\r\n\t\t}\r\n\t};\r\n\r\n\tBiConsumer<Integer, Integer> lambda2 = (nme, message) ->\r\n\t{\r\n\t\tif ((nme != 0) && (message != 0))\r\n\t\t{\r\n\t\t\ttry\r\n\t\t\t{\r\n\t\t\t\tSystem.out.println(nme);\r\n\t\t\t}\r\n\t\t\tcatch (IllegalArgumentException illegalArgumentException)\r\n\t\t\t{\r\n\t\t\t\tthrow new RuntimeException();\r\n\t\t\t}\r\n\r\n\t\t\tif (binary)\r\n\t\t\t{\r\n\t\t\t\tSystem.out.println(nme);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tSystem.out.println(nme);\r\n\r\n\t\t\t\tif (nme != 1)\r\n\t\t\t\t{\r\n\t\t\t\t\tSystem.out.println(nme);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (int i = 0; i < message; i++)\r\n\t\t\t\t{\r\n\t\t\t\t\tSystem.out.println(nme);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n```\r\n\r\n**Running PMD through:** *[Gradle]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/837", "user": "Myllyenko", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2018-01-10 09:27:38", "closed": "2018-03-19 04:33:20", "commits": {}, "ttf": 67.00027777777778, "commitsDetails": []}, {"title": "[java] DataClass throws NPE", "body": "**Affects PMD Version:** \r\nPMD 6.0.0\r\n\r\n**Rule:**\r\nDataClass\r\n\r\n**Description:**\r\nException applying rule DataClass on file [...]/JsonParser.java, continuing with next rule\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npackage xxx;\r\n\r\nimport java.io.IOException;\r\nimport java.io.StringReader;\r\nimport java.util.Map;\r\n\r\nimport com.google.gson.JsonArray;\r\nimport com.google.gson.JsonElement;\r\nimport com.google.gson.JsonIOException;\r\nimport com.google.gson.JsonObject;\r\nimport com.google.gson.JsonPrimitive;\r\nimport com.google.gson.JsonSyntaxException;\r\nimport com.google.gson.internal.Streams;\r\nimport com.google.gson.stream.JsonReader;\r\nimport com.google.gson.stream.JsonToken;\r\nimport yyy.Messages;\r\n\r\n/**\r\n * Parse JSON formatted strings using GSON\r\n *\r\n * The actual parsing is done by using GSON library. This class adds also a check for consistency of JSON\r\n * arrays after parsing, i.e. all elements of an array must have the same type (which the JSON standard\r\n * doesn't enforce).\r\n */\r\npublic final class JsonParser\r\n{\r\n    /**\r\n     * Different JSON types, for internal use only\r\n     */\r\n    private enum JsonType\r\n    {\r\n        ARRAY, BOOLEAN, NUMBER, NULL, OBJECT, STRING\r\n    };\r\n\r\n    /**\r\n     * Parse a JSON formatted string. Throw an exception on error\r\n     * <p>\r\n     * @param json JSON string to be parsed\r\n     * @return {@link JsonElement} containing parse result\r\n     * @throws ResponseException Syntax error in JSON or type inconsistency in array\r\n     * @throws FatalException Fatal internal processing error\r\n     */\r\n    public static JsonElement parse(final String json)\r\n        throws FatalException, ResponseException\r\n    {\r\n        try\r\n        {\r\n            final JsonReader jsonReader = new JsonReader(new StringReader(json));\r\n            final JsonElement element = Streams.parse(jsonReader);\r\n\r\n            if (!element.isJsonNull() && jsonReader.peek() != JsonToken.END_DOCUMENT)\r\n            {\r\n                throw new FatalException(\"Did not consume entire JSON.\");\r\n            }\r\n\r\n            if (getElementType(element) == JsonType.ARRAY)\r\n            {\r\n                checkForArrayConsistency(element.getAsJsonArray());\r\n            }\r\n            else\r\n            {\r\n                checkForArrayConsistency(element.getAsJsonObject());\r\n            }\r\n\r\n            return element;\r\n        }\r\n        catch (final StackOverflowError | OutOfMemoryError | IOException e)\r\n        {\r\n            throw new FatalException(\"Failed parsing JSON source: \" + json + \" to Json: \" + e.getMessage());\r\n        }\r\n        catch (final NumberFormatException | JsonSyntaxException | JsonIOException e)\r\n        {\r\n            throw new ResponseException(Messages.INVALID_JSON);\r\n        }\r\n    }\r\n\r\n    private static void checkForArrayConsistency(final JsonObject jsonObj)\r\n        throws ResponseException\r\n    {\r\n        for (final Map.Entry<String, JsonElement> entry : jsonObj.entrySet())\r\n        {\r\n            final JsonElement element = entry.getValue();\r\n            if (element.isJsonArray())\r\n            {\r\n                checkForArrayConsistency(entry.getValue().getAsJsonArray());\r\n            }\r\n            else if (element.isJsonObject())\r\n            {\r\n                checkForArrayConsistency(entry.getValue().getAsJsonObject());\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void checkForArrayConsistency(final JsonArray jsonArray)\r\n        throws ResponseException\r\n    {\r\n        JsonType firstElementType = JsonType.NULL;\r\n        for (final JsonElement element : jsonArray)\r\n        {\r\n            if (getElementType(element) == JsonType.NULL)\r\n            {\r\n                continue;\r\n            }\r\n            if (firstElementType == JsonType.NULL)\r\n            {\r\n                firstElementType = getElementType(element);\r\n            }\r\n            if (getElementType(element) != firstElementType)\r\n            {\r\n                throw new ResponseException(Messages.INVALID_JSON_ARRAY_NOT_UNIFORM_TYPE);\r\n            }\r\n            if (element.isJsonPrimitive())\r\n            {\r\n                continue;\r\n            }\r\n            if (element.isJsonArray())\r\n            {\r\n                checkForArrayConsistency(element.getAsJsonArray());\r\n            }\r\n            else\r\n            {\r\n                checkForArrayConsistency(element.getAsJsonObject());\r\n            }\r\n        }\r\n    }\r\n\r\n    private static JsonType getElementType(final JsonElement element)\r\n    {\r\n        if (element.isJsonArray())\r\n        {\r\n            return JsonType.ARRAY;\r\n        }\r\n\r\n        if (element.isJsonNull())\r\n        {\r\n            return JsonType.NULL;\r\n        }\r\n\r\n        if (element.isJsonPrimitive())\r\n        {\r\n            final JsonPrimitive primitive = element.getAsJsonPrimitive();\r\n            return primitive.isBoolean() ? JsonType.BOOLEAN : primitive.isNumber() ? JsonType.NUMBER : JsonType.STRING;\r\n        }\r\n\r\n        return JsonType.OBJECT;\r\n    }\r\n\r\n    private JsonParser()\r\n    {\r\n        // intentionally empty\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nGradle\r\n\r\n  ", "url": "https://github.com/pmd/pmd/issues/834", "user": "d1ss0nanz", "labels": ["a:bug", "was:duplicate"], "created": "2018-01-08 12:24:54", "closed": "2018-01-08 13:36:27", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] StackOverflow in JavaTypeDefinitionSimple.toString", "body": "**Affects PMD Version:** \r\n6.0.0\r\n\r\n**Rule:**\r\nDon't know if this is related to any particular rule, can check further.\r\n\r\n**Description:**\r\nWith 5.8.1 pmd everything works fine, with 6.0.0 I'm getting StackOverflowException from toString method when called from MethodTypeResolution(358):\r\n`LOG.log(Level.FINE, \"Method {0} couldn't be resolved\", String.valueOf(methodType));\r\n`\r\n```\r\nCause: java.lang.StackOverflowError\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.toString(JavaTypeDefinitionSimple.java:246)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinitionSimple.toString(JavaTypeDefinitionSimple.java:246)\r\n...\r\n\r\n```\r\n**Code Sample demonstrating the issue:**\r\n```\r\npublic abstract class MessageBuilder<T extends MessageBuilder, U extends PartBuilder<U>> implements IMessageBuilder {\r\n\tpublic T addComponent(U builder) {\r\n\t\tcomponents.add(builder);\r\n\t\treturn (T) this;\r\n\t}\r\n}\r\n\r\n```\r\n**Running PMD through:** *Gradle*\r\n", "url": "https://github.com/pmd/pmd/issues/831", "user": "lslonina", "labels": ["a:bug", "has:pr", "in:type-resolution"], "created": "2018-01-07 15:35:10", "closed": "2018-01-15 19:52:02", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "[java] GodClass crashes with java.lang.NullPointerException", "body": "**Affects PMD Version:** \r\n6.0.0\r\n**Rule:**\r\nGodClass\r\n**Description:**\r\nException applying rule GodClass on file [FILE], continuing with next rule\r\njava.lang.NullPointerException\r\n**Code Sample demonstrating the issue:**\r\nMinimal test case is below.\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nI can reproduce this with any way of running. For example \"pmd.bat -d c:\\pmd -R java-design -f text > output.txt\"\r\n\r\n```java\r\npackage com.pack;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\npublic class Pack implements IPack {\r\n\r\n\r\n\t@Override\r\n\tpublic Map<String, String> get() {\r\n\r\n\t\tclass Inner implements IInner {\r\n\r\n\t\t\tprivate Map<String, String> results;\r\n\r\n\t\t\tpublic Inner(Map<String, String> results) {\r\n\t\t\t\tthis.results = results;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n}\r\n```\r\n\r\n```\r\nException applying rule GodClass on file [FILE], continuing with next rule\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.visitors.TccMethodPairVisitor.visit(TccMethodPairVisitor.java:76)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:230)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTExpression.jjtAccept(ASTExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:374)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTStatementExpression.jjtAccept(ASTStatementExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:350)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:362)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:50)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:45)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTConstructorDeclaration.jjtAccept(ASTConstructorDeclaration.java:37)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:46)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:33)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.visitors.TccMethodPairVisitor.visit(TccMethodPairVisitor.java:43)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:16)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:362)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:358)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:50)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:39)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.visitors.TccMethodPairVisitor.visit(TccMethodPairVisitor.java:57)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:31)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:46)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:33)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.visitors.TccMethodPairVisitor.visit(TccMethodPairVisitor.java:43)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorReducedAdapter.visit(JavaParserVisitorReducedAdapter.java:16)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.TccMetric.computeFor(TccMetric.java:29)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.TccMetric.computeFor(TccMetric.java:23)\r\n\tat net.sourceforge.pmd.lang.metrics.AbstractMetricsComputer.computeForType(AbstractMetricsComputer.java:35)\r\n\tat net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForType(AbstractMetricsFacade.java:67)\r\n\tat net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:55)\r\n\tat net.sourceforge.pmd.lang.java.rule.design.GodClassRule.visit(GodClassRule.java:45)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:502)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n[FILE]:18:\tPrivate field 'results' could be made final; it is only initialized in the declaration or constructor.\r\n```\r\n\r\n\r\n\r\n\r\n\r\n  ", "url": "https://github.com/pmd/pmd/issues/827", "user": "lasselindqvist", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2018-01-03 08:52:58", "closed": "2018-01-20 17:03:23", "commits": {}, "ttf": 17.00027777777778, "commitsDetails": []}, {"title": "[java] UnnecessaryModifierRule crashes on valid code", "body": "**Affects PMD Version:** 6.0.0\r\n\r\n**Rule:** `UnnecessaryModifierRule`\r\n\r\n**Description:** when an annotation does not exist on the classpath `UnnecessaryModifierRule.isSafeVarargs` crashes with the following exception:\r\n```\r\nnet.sourceforge.pmd.PMDException: Error while processing P:\\projects\\contrib\\github-glide-v4\\library\\src\\main\\java\\com\\bumptech\\glide\\load\\model\\DataUrlLoader.java\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:101)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:111)\r\n\tat net.sourceforge.pmd.PMD.processFiles(PMD.java:315)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:192)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:276)\r\n\tat net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:49)\r\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n    ... (Gradle internals omitted for brevity)\r\nCaused by: java.lang.NullPointerException\r\n\tat java.lang.Class.isAssignableFrom(Native Method)\r\n\tat net.sourceforge.pmd.lang.java.rule.codestyle.UnnecessaryModifierRule.isSafeVarargs(UnnecessaryModifierRule.java:154)\r\n\tat net.sourceforge.pmd.lang.java.rule.codestyle.UnnecessaryModifierRule.visit(UnnecessaryModifierRule.java:109)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:31)\r\n\tat net.sourceforge.pmd.lang.java.rule.JavaRuleChainVisitor.visit(JavaRuleChainVisitor.java:41)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractRuleChainVisitor.visitAll(AbstractRuleChainVisitor.java:90)\r\n\tat net.sourceforge.pmd.RuleChain.apply(RuleChain.java:67)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:140)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\t... 98 more\r\n```\r\n\r\n**Investigation:**\r\nI downloaded the pmd-java sources and debugged the crash via JUnit tests:\r\n * `UnnecessaryModifierRule.isSafeVarargs` is crashing\r\n * `((ASTMarkerAnnotation) childAnnotation).getType())` is null\r\n * because `ClassTypeResolver.visit` retuns null (which sets `AbstractJavaTypeNode.typeDefinition`)\r\n * because `if (node.getType() != null) {` // is null\r\n * because `searchNodeNameForClass` -> `populateType` doesn't fill it in\r\n * because `pmdClassLoader.loadClass(qualifiedName)` cannot load the class\r\n\r\nBased on this information adding the following to my `build.gradle` solved the issue:\r\n```gradle\r\ntasks.create('pmd', Pmd) {\r\n\tclasspath = project.configurations.compile\r\n}\r\n```\r\n\r\nWhile this actually fixes the crash, I don't think PMD should crash with an incomplete classpath, especially that method could default to `false` when the annotation is not known.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nclass Foo {\r\n    @Bar\r\n    final void method() { }\r\n}\r\n```\r\n(original code https://github.com/bumptech/glide/blob/e35a73b4e78f2f05dc5c1163b8083ac1b662b02f/library/src/main/java/com/bumptech/glide/load/model/DataUrlLoader.java#L153-L157)\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*: Gradle, also JUnit tests via pmd-java sources\r\n\r\n**Sidenote:** I did a quick check whether other `isAssignableFrom` calls are ok, and they all seem to be protected against nulls, but while searching I noticed `UnusedImportsRule.check` has a weird `TypeNode.class.isAssignableFrom(node.getClass())` code in it, it could be `node instanceof TypeNode`. Same pattern in `ClassTypeResolverTest`.", "url": "https://github.com/pmd/pmd/issues/817", "user": "TWiStErRob", "labels": ["a:bug", "has:pr"], "created": "2017-12-30 17:23:16", "closed": "2018-01-11 16:41:25", "commits": {"b6fc30964ec1f78078a2e412d570eb5f873c00e2": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "b6fc30964ec1f78078a2e412d570eb5f873c00e2", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["c10a8c68446903000a41c9b8f4c8912a9807a8d5"], "nameRev": "b6fc30964ec1f78078a2e412d570eb5f873c00e2 tags/pmd_releases/6.0.1~13^2", "commitMessage": "Add unit test, refs #817\n", "commitDateTime": "2018-01-11 17:29:34", "authoredDateTime": "2018-01-11 17:29:34", "commitGitStats": [{"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/codestyle/xml/UnnecessaryModifier.xml", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b6fc30964ec1f78078a2e412d570eb5f873c00e2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] UnsupportedClassVersionError is failure instead of a warning", "body": "In 5.8.1, if a dependency was for a newer Java version then this produced a warning that did not fail the build. In 6.0.0 it fails the task.\r\n\r\nThis is useful when the project is built on one JVM version, but may allow additions when compiled with a newer version. In this case, a JDK9 library may be enabled to run in an comparative analysis but the project is still JDK8 otherwise. It should only fail at runtime if enabled and run on JDK8.\r\n\r\n```\r\nCaused by: java.lang.UnsupportedClassVersionError: systems/comodal/collision/cache/CollisionCache has been compiled by a more recent version of the Java Runtime (class file version 53.0), this version of the Java Runtime only recognizes class file versions up to 52.0\r\n        at java.lang.ClassLoader.defineClass1(Native Method)\r\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:763)\r\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\r\n        at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)\r\n        at java.net.URLClassLoader.access$100(URLClassLoader.java:73)\r\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:368)\r\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:362)\r\n        at java.security.AccessController.doPrivileged(Native Method)\r\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:361)\r\n        at net.sourceforge.pmd.util.ClasspathClassLoader.loadClass(ClasspathClassLoader.java:103)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n        at java.lang.Class.getDeclaredFields0(Native Method)\r\n        at java.lang.Class.privateGetDeclaredFields(Class.java:2583)\r\n        at java.lang.Class.getDeclaredField(Class.java:2068)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.getFieldType(ClassTypeResolver.java:569)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:918)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:230)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:712)\r\n```", "url": "https://github.com/pmd/pmd/issues/814", "user": "ben-manes", "labels": ["a:bug", "has:pr", "in:type-resolution"], "created": "2017-12-27 06:34:20", "closed": "2018-01-11 16:41:24", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "[doc] New rule doc is missing shared suppression properties", "body": "The new documentation on the rules is not documenting the usage of `violationSuppressXPath` and `violationSuppressRegex`. This is intentional as per:\r\n\r\nhttps://github.com/pmd/pmd/blob/cd58d15bc2722a146ef3fa258d1523e46b91e9ca/pmd-doc/src/main/java/net/sourceforge/pmd/docs/RuleDocGenerator.java#L405-L408\r\n\r\nHowever, there is no other place where such properties are properly documented for easy reference. I'd reconsider having this doc included on all rules.", "url": "https://github.com/pmd/pmd/issues/813", "user": "jsotuyod", "labels": ["a:bug", "in:documentation"], "created": "2017-12-26 22:42:20", "closed": "2018-01-07 19:51:46", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[java] Exception applying rule DataClass", "body": "**Affects PMD Version:** \r\n\r\n6.0.0\r\n\r\n**Rule:**\r\n\r\n`DataClass`\r\n\r\n**Description:**\r\n\r\n```java\r\nException applying rule DataClass on file /Users/nik/tmp/OnActivityResult/onactivityresult/src/main/java/onactivityresult/ActivityResult.java, continuing with next rule\r\njava.lang.NullPointerException\r\n        at net.sourceforge.pmd.lang.java.multifile.signature.JavaSigMask.covers(JavaSigMask.java:58)\r\n        at net.sourceforge.pmd.lang.java.multifile.signature.JavaOperationSigMask.covers(JavaOperationSigMask.java:75)\r\n        at net.sourceforge.pmd.lang.java.metrics.impl.AbstractJavaClassMetric.countMatchingOpSigs(AbstractJavaClassMetric.java:55)\r\n        at net.sourceforge.pmd.lang.java.metrics.impl.WocMetric.computeFor(WocMetric.java:35)\r\n        at net.sourceforge.pmd.lang.java.metrics.impl.WocMetric.computeFor(WocMetric.java:20)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsComputer.computeForType(AbstractMetricsComputer.java:35)\r\n        at net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForType(AbstractMetricsFacade.java:67)\r\n        at net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:55)\r\n        at net.sourceforge.pmd.lang.java.rule.design.DataClassRule.interfaceRevealsData(DataClassRule.java:48)\r\n        at net.sourceforge.pmd.lang.java.rule.design.DataClassRule.visit(DataClassRule.java:30)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:25)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n        at net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n        at net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n        at net.sourceforge.pmd.RuleSet.apply(RuleSet.java:502)\r\n        at net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n        at net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n        at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:111)\r\n        at net.sourceforge.pmd.PMD.processFiles(PMD.java:315)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:192)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:276)\r\n        at net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:49)\r\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n        at groovy.util.AntBuilder.performTask(AntBuilder.java:327)\r\n        at groovy.util.AntBuilder.nodeCompleted(AntBuilder.java:272)\r\n        at org.gradle.api.internal.project.ant.BasicAntBuilder.nodeCompleted(BasicAntBuilder.java:78)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n        at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n        at org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:479)\r\n        at org.gradle.internal.metaobject.BeanDynamicObject.tryInvokeMethod(BeanDynamicObject.java:191)\r\n        at org.gradle.internal.metaobject.AbstractDynamicObject.invokeMethod(AbstractDynamicObject.java:160)\r\n        at org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.nodeCompleted(AntBuilderDelegate.java:118)\r\n        at groovy.util.BuilderSupport.doInvokeMethod(BuilderSupport.java:154)\r\n        at groovy.util.BuilderSupport.invokeMethod(BuilderSupport.java:67)\r\n        at org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48)\r\n        at org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\r\n        at org.gradle.api.plugins.quality.internal.PmdInvoker$_invoke_closure2.doCall(PmdInvoker.groovy:62)\r\n        at sun.reflect.GeneratedMethodAccessor796.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n        at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n        at org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\r\n        at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1022)\r\n        at groovy.lang.Closure.call(Closure.java:414)\r\n        at groovy.lang.Closure.call(Closure.java:430)\r\n        at org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:71)\r\n        at org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:53)\r\n        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:152)\r\n        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:134)\r\n        at org.gradle.api.internal.project.antbuilder.ClassPathToClassLoaderCache.withCachedClassLoader(ClassPathToClassLoaderCache.java:134)\r\n        at org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder.execute(DefaultIsolatedAntBuilder.java:128)\r\n        at org.gradle.api.internal.project.IsolatedAntBuilder$execute$2.call(Unknown Source)\r\n        at org.gradle.api.plugins.quality.internal.PmdInvoker.invoke(PmdInvoker.groovy:60)\r\n        at org.gradle.api.plugins.quality.Pmd.run(Pmd.java:92)\r\n        at sun.reflect.GeneratedMethodAccessor785.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:46)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)\r\n        at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)\r\n        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:780)\r\n        at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:747)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:121)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:110)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:92)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:70)\r\n        at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)\r\n        at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62)\r\n        at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)\r\n        at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:60)\r\n        at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:97)\r\n        at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:87)\r\n        at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:52)\r\n        at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\r\n        at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n        at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n        at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.run(DefaultTaskGraphExecuter.java:248)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n        at org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:241)\r\n        at org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:230)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:626)\r\n        at org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:581)\r\n        at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98)\r\n        at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n        at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npackage onactivityresult;\r\n\r\nimport java.util.LinkedHashMap;\r\nimport java.util.Map;\r\n\r\nimport onactivityresult.internal.IOnActivityResult;\r\n\r\nimport android.content.Intent;\r\nimport android.support.annotation.NonNull;\r\nimport android.support.annotation.Nullable;\r\n\r\npublic final class ActivityResult {\r\n    private static final String ACTIVITY_RESULT_CLASS_SUFFIX = \"$$OnActivityResult\";\r\n\r\n    static final Map<Class<?>, IOnActivityResult<Object>> ON_ACTIVITY_RESULTS = new LinkedHashMap<>();\r\n\r\n    @NonNull\r\n    static IOnActivityResult<Object> createOnActivityResultClassFor(final Object object) throws InstantiationException, IllegalAccessException, ClassNotFoundException {\r\n        final IOnActivityResult<Object> activityResultForClass = findActivityResultForClass(object.getClass());\r\n\r\n        if (activityResultForClass == null) {\r\n            throw new ClassNotFoundException();\r\n        }\r\n\r\n        return activityResultForClass;\r\n    }\r\n\r\n    @Nullable\r\n    private static IOnActivityResult<Object> findActivityResultForClass(final Class<?> clazz) throws IllegalAccessException, InstantiationException {\r\n        final IOnActivityResult<Object> cachedOnActivityResult = ON_ACTIVITY_RESULTS.get(clazz);\r\n\r\n        if (cachedOnActivityResult != null) {\r\n            return cachedOnActivityResult;\r\n        }\r\n\r\n        final String className = clazz.getName();\r\n\r\n        if (className.startsWith(\"android.\") || className.startsWith(\"java.\")) {\r\n            return null;\r\n        }\r\n\r\n        IOnActivityResult<Object> onActivityResult;\r\n\r\n        try {\r\n            final Class<?> onActivityResultClass = clazz.getClassLoader().loadClass(className + ACTIVITY_RESULT_CLASS_SUFFIX);\r\n            // noinspection unchecked\r\n            onActivityResult = (IOnActivityResult<Object>) onActivityResultClass.newInstance();\r\n        } catch (final ClassNotFoundException ignore) {\r\n            onActivityResult = findActivityResultForClass(clazz.getSuperclass());\r\n        }\r\n\r\n        ON_ACTIVITY_RESULTS.put(clazz, onActivityResult);\r\n\r\n        return onActivityResult;\r\n    }\r\n\r\n    public static OnResult onResult(final int requestCode, final int resultCode, @Nullable final Intent intent) {\r\n        return new OnResult(requestCode, resultCode, intent);\r\n    }\r\n\r\n    private ActivityResult() {\r\n        throw new AssertionError(\"No instances.\");\r\n    }\r\n\r\n    public static final class OnResult {\r\n        private final int              mRequestCode;\r\n        private final int              mResultCode;\r\n        @Nullable private final Intent mIntent;\r\n\r\n        OnResult(final int requestCode, final int resultCode, @Nullable final Intent intent) {\r\n            mRequestCode = requestCode;\r\n            mResultCode = resultCode;\r\n            mIntent = intent;\r\n        }\r\n\r\n        /**\r\n         * @param object with annotated {@link OnActivityResult} methods which will be called depending on the given parameters\r\n         * @return whether or not a function was called for the given parameters\r\n         */\r\n        public <T> boolean into(@NonNull final T object) {\r\n            final IOnActivityResult<Object> onActivityResult;\r\n\r\n            try {\r\n                onActivityResult = ActivityResult.createOnActivityResultClassFor(object);\r\n            } catch (final ClassNotFoundException classNotFound) {\r\n                throw new ActivityResultRuntimeException(\"Could not find OnActivityResult class for \" + object.getClass().getName(), classNotFound);\r\n            } catch (final IllegalAccessException illegalAccessException) {\r\n                throw new ActivityResultRuntimeException(\"Can't create OnActivityResult class for \" + object.getClass().getName(), illegalAccessException);\r\n            } catch (final InstantiationException instantiationException) {\r\n                throw new ActivityResultRuntimeException(\"Exception when handling IOnActivityResult \" + instantiationException.getMessage(), instantiationException);\r\n            }\r\n\r\n            return onActivityResult.onResult(object, mRequestCode, mResultCode, mIntent);\r\n        }\r\n    }\r\n\r\n    public static class ActivityResultRuntimeException extends RuntimeException {\r\n        public ActivityResultRuntimeException(final String detailMessage, final Throwable throwable) {\r\n            super(detailMessage, throwable);\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *[Gradle]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/812", "user": "vanniktech", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2017-12-26 20:50:35", "closed": "2017-12-31 22:30:16", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[java] ForLoopCanBeForeach NPE when looping on `this` object", "body": "**Affects PMD Version:** 6.0.0\r\n\r\n**Rule:** ForLoopCanBeForeach\r\n\r\n**Description:** The rule should report loops that are iterated on `this` if possible. For now it considers neither `this.iterator()` nor just `iterator()`. Using `this.iterator()` like in the following code sample yields a NPE with the following stacktrace:\r\n```scala\r\nCaused by: java.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.ForLoopCanBeForeachRule.getIterableDeclOfIteratorLoop(ForLoopCanBeForeachRule.java:244)\r\n\tat net.sourceforge.pmd.lang.java.rule.bestpractices.ForLoopCanBeForeachRule.visit(ForLoopCanBeForeachRule.java:60)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTForStatement.jjtAccept(ASTForStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:424)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:436)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:432)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:256)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:31)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:92)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:502)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\t... 20 more\r\n```\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\nimport java.util.Iterator;\r\nclass Foo<T> implements Iterable<T> {\r\n\r\n  @Override\r\n  public Iterator<T> iterator() {\r\n    return null;\r\n  }\r\n\r\n  private void fofo() {\r\n    for (Iterator<T> it = iterator(); it.hasNext();) {\r\n      T item = it.next();\r\n    }\r\n    for (Iterator<T> it = this.iterator(); it.hasNext();) {\r\n      T item = it.next();\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n**Running PMD through:** CLI\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/800", "user": "oowekyala", "labels": ["a:bug", "a:false-negative"], "created": "2017-12-21 11:28:19", "closed": "2018-01-07 23:38:31", "commits": {"c64f6af1578cf759f22648345e0e1a88817e2dae": {"commitGHEventType": "closed", "commitUser": "oowekyala"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "c64f6af1578cf759f22648345e0e1a88817e2dae", "commitGHEventType": "closed", "commitUser": "oowekyala", "commitParents": ["cd58d15bc2722a146ef3fa258d1523e46b91e9ca"], "nameRev": "c64f6af1578cf759f22648345e0e1a88817e2dae tags/pmd_releases/6.0.1~15^2~2", "commitMessage": "[java] Avoid NPE in ForLoopCanBeForeachRule\n\n - Take the chance to make this rule use the rulechain\n - This partially fixes #800, but the FN is still unhandled\n", "commitDateTime": "2017-12-31 01:20:04", "authoredDateTime": "2017-12-31 01:20:04", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/bestpractices/ForLoopCanBeForeachRule.java", "insertions": 17, "deletions": 8, "lines": 25}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ForLoopCanBeForeachRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.bestpractices.ForLoopCanBeForeachRule.visit(net.sourceforge.pmd.lang.java.ast.ASTForStatement,java.lang.Object)", "TOT": 12, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 6}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.bestpractices.ForLoopCanBeForeachRule", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.bestpractices.ForLoopCanBeForeachRule.getIterableDeclOfIteratorLoop(net.sourceforge.pmd.lang.java.symboltable.VariableNameDeclaration,net.sourceforge.pmd.lang.symboltable.Scope)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c64f6af1578cf759f22648345e0e1a88817e2dae"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 8, "lines": 25, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 17, "UPD": 0, "INS": 10, "MOV": 1, "DEL": 6, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.rule.bestpractices.ForLoopCanBeForeachRule.getIterableDeclOfIteratorLoop(net.sourceforge.pmd.lang.java.symboltable.VariableNameDeclaration,net.sourceforge.pmd.lang.symboltable.Scope)", "net.sourceforge.pmd.lang.java.rule.bestpractices.ForLoopCanBeForeachRule", "net.sourceforge.pmd.lang.java.rule.bestpractices.ForLoopCanBeForeachRule.visit(net.sourceforge.pmd.lang.java.ast.ASTForStatement,java.lang.Object)"]}, {"title": "[cpd] java.lang.OutOfMemoryError", "body": "bin/run.sh cpd --minimum-tokens 120 --format csv_with_linecount_per_file --encoding utf-8 --ignore-literals --ignore-annotations --ignore-usings --skip-duplicate-files --skip-lexical-errors --failOnViolation false --files path/to/project --language cpp\r\n\r\n![image](https://user-images.githubusercontent.com/11549103/34208777-9dc8c54e-e5ca-11e7-848e-4aa60144892a.png)\r\n", "url": "https://github.com/pmd/pmd/issues/795", "user": "cyw3", "labels": ["a:bug", "has:pr", "in:cpd"], "created": "2017-12-20 13:14:32", "closed": "2018-02-18 17:48:02", "commits": {"9c007afb57ede823aa8b4d6d5aabd5ec1d9239e1": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 60.000277777777775, "commitsDetails": [{"commitHash": "9c007afb57ede823aa8b4d6d5aabd5ec1d9239e1", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["7997e16f1bac6cee2dd9d60aa970ec9430edadfa", "9fbaa835aba5469d1e3d9895438817be6feedd2d"], "nameRev": "9c007afb57ede823aa8b4d6d5aabd5ec1d9239e1 tags/pmd_releases/6.1.0~12", "commitMessage": "Fixes #795\n\nMerge branch 'pr-919'\n", "commitDateTime": "2018-02-18 18:40:33", "authoredDateTime": "2018-02-18 18:40:33", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDCommandLineInterface.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDConfiguration.java", "insertions": 74, "deletions": 18, "lines": 92}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/CPDTask.java", "insertions": 29, "deletions": 10, "lines": 39}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/CSVRenderer.java", "insertions": 28, "deletions": 14, "lines": 42}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/FileReporter.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/GUI.java", "insertions": 19, "deletions": 23, "lines": 42}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/Renderer.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/SimpleRenderer.java", "insertions": 25, "deletions": 15, "lines": 40}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/VSRenderer.java", "insertions": 19, "deletions": 7, "lines": 26}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/XMLRenderer.java", "insertions": 19, "deletions": 5, "lines": 24}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/renderer/CPDRenderer.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/CPDCommandLineInterfaceTest.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/CPDConfigurationTest.java", "insertions": 20, "deletions": 2, "lines": 22}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/CSVRendererTest.java", "insertions": 13, "deletions": 6, "lines": 19}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/XMLRendererTest.java", "insertions": 25, "deletions": 12, "lines": 37}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CPDCommandLineInterface.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CPDCommandLineInterface.main(java.lang.String[])", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CPDConfiguration.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.setRendererEncoding(net.sourceforge.pmd.cpd.Renderer,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.postContruct()", "TOT": 21, "UPD": 0, "INS": 8, "MOV": 7, "DEL": 6}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.getCPDRendererFromString(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.getCPDRenderer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.setCPDRenderer(net.sourceforge.pmd.cpd.renderer.CPDRenderer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.getRendererFromString(java.lang.String,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.getRenderer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfiguration.setRenderer(net.sourceforge.pmd.cpd.Renderer)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CPDTask.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CPDTask.createRenderer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CPDTask.report(net.sourceforge.pmd.cpd.CPD)", "TOT": 21, "UPD": 7, "INS": 2, "MOV": 8, "DEL": 4}]}, {"spoonFilePath": "CSVRenderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CSVRenderer.render(java.util.Iterator)", "TOT": 31, "UPD": 13, "INS": 1, "MOV": 16, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CSVRenderer.render(java.util.Iterator,java.io.Writer)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CSVRenderer", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FileReporter.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.FileReporter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GUI.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.SaveListener", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.addSaveOptionsTo(javax.swing.JMenu)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.1.render(java.util.Iterator)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.2.render(java.util.Iterator)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.3.render(java.util.Iterator)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.4.render(java.util.Iterator)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.SaveListener.actionPerformed(java.awt.event.ActionEvent)", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.1.render(java.util.Iterator,java.io.Writer)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.2.render(java.util.Iterator,java.io.Writer)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.3.render(java.util.Iterator,java.io.Writer)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.GUI.4.render(java.util.Iterator,java.io.Writer)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Renderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SimpleRenderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.SimpleRenderer.renderOn(java.lang.StringBuilder,net.sourceforge.pmd.cpd.Match)", "TOT": 10, "UPD": 7, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SimpleRenderer.render(java.util.Iterator)", "TOT": 18, "UPD": 7, "INS": 1, "MOV": 9, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SimpleRenderer.render(java.util.Iterator,java.io.Writer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SimpleRenderer.renderOn(java.io.Writer,net.sourceforge.pmd.cpd.Match)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "VSRenderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.VSRenderer.render(java.util.Iterator)", "TOT": 16, "UPD": 3, "INS": 1, "MOV": 7, "DEL": 5}, {"spoonMethodName": "net.sourceforge.pmd.cpd.VSRenderer.render(java.util.Iterator,java.io.Writer)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XMLRenderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRenderer.xmlDocToString(org.w3c.dom.Document)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRenderer.render(java.util.Iterator)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRenderer.render(java.util.Iterator,java.io.Writer)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CPDRenderer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.renderer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CPDCommandLineInterfaceTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CPDCommandLineInterfaceTest.testEmptyResultRendering()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CPDConfigurationTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CPDConfigurationTest.testCPDRenderers()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CSVRendererTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CSVRendererTest.testLineCountPerFile()", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.CSVRendererTest.testFilenameEscapes()", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "XMLRendererTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRendererTest.testWithNoDuplication()", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRendererTest.testWithOneDuplication()", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRendererTest.testRenderWithMultipleMatch()", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRendererTest.testRendererEncodedPath()", "TOT": 7, "UPD": 3, "INS": 3, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[doc] Broken documentation links for 6.0.0", "body": "When navigating to `https://pmd.github.io/pmd/pmd_userdocs_getting_started.html#incremental-analysis` there are supposedly links to [Maven](https://pmd.github.io/pmd_userdocs_tools_maven.html) and/or [Ant](https://pmd.github.io/pmd_userdocs_tools_ant.html) specific documentation - specifically the [Enabling Incremental Analysis](https://pmd.github.io/pmd/pmd_userdocs_getting_started.html#enabling-incremental-analysis) section. These links are broken - as can be easily ascertained by trying to click on their respective links in this issue.\r\n\r\nIn this context, I have not found any mention of the capability to activate the caching feature (as specified in the incremental analysis) in the [Maven PMD plugin documentation](https://maven.apache.org/plugins/maven-pmd-plugin/check-mojo.html)", "url": "https://github.com/pmd/pmd/issues/794", "user": "lgoldstein", "labels": ["a:bug", "has:pr", "in:documentation"], "created": "2017-12-20 11:03:54", "closed": "2017-12-23 08:54:30", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[java] Parser error with private method in nested classes in interfaces", "body": "**Affects Version:** 6.0.0\r\n\r\n**Rule Set:**\r\n```xml\r\n<?xml version=\"1.0\"?> \r\n<ruleset name=\"MINA SSHD PMD ruleset\" \r\n   xmlns=\"http://pmd.sourceforge.net/ruleset/2.0.0\" \r\n   xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" \r\n   xsi:schemaLocation=\"http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd\"> \r\n\r\n   <description> \r\n       This ruleset defines the PMD rules for MINA SSHD project \r\n   </description> \r\n\r\n       <!-- See https://pmd.github.io/pmd-5.6.1/pmd-java/rules/index.html --> \r\n   <rule ref=\"rulesets/java/basic.xml/AvoidMultipleUnaryOperators\" /> \r\n   <rule ref=\"rulesets/java/basic.xml/AvoidUsingOctalValues\" /> \r\n   <rule ref=\"rulesets/java/basic.xml/BooleanInstantiation\" /> \r\n   <rule ref=\"rulesets/java/basic.xml/BrokenNullCheck\" /> \r\n   <rule ref=\"rulesets/java/basic.xml/ExtendsObject\" /> \r\n   <rule ref=\"rulesets/java/basic.xml/MisplacedNullCheck\" /> \r\n   <rule ref=\"rulesets/java/basic.xml/OverrideBothEqualsAndHashcode\" /> \r\n   <rule ref=\"rulesets/java/basic.xml/ReturnFromFinallyBlock\" /> \r\n   <rule ref=\"rulesets/java/basic.xml/UnconditionalIfStatement\" /> \r\n\r\n   <rule ref=\"rulesets/java/braces.xml\" /> \r\n\r\n   <rule ref=\"rulesets/java/clone.xml/ProperCloneImplementation\" /> \r\n   <rule ref=\"rulesets/java/clone.xml/CloneMethodMustImplementCloneable\" /> \r\n\r\n   <rule ref=\"rulesets/java/controversial.xml/AssignmentInOperand\" /> \r\n   <rule ref=\"rulesets/java/controversial.xml/AtLeastOneConstructor\" /> \r\n\r\n   <rule ref=\"rulesets/java/design.xml/UseNotifyAllInsteadOfNotify\" /> \r\n\r\n   <rule ref=\"rulesets/java/empty.xml\"> \r\n       <exclude name=\"EmptyCatchBlock\" />  <!-- Enforced by checkstyle --> \r\n   </rule> \r\n\r\n   <rule ref=\"rulesets/java/finalizers.xml\" /> \r\n\r\n   <rule ref=\"rulesets/java/javabeans.xml/MissingSerialVersionUID\" /> \r\n\r\n   <rule ref=\"rulesets/java/logging-java.xml/AvoidPrintStackTrace\" />\r\n</ruleset>\r\n```\r\n**Description:**\r\nUpgraded from 5.6.1 to 6.0.0 and tried to verify the code\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements. See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership. The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied. See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\npackage org.apache.sshd.client.auth;\r\n\r\nimport java.security.KeyPair;\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Iterator;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\n\r\nimport org.apache.sshd.client.auth.password.PasswordIdentityProvider;\r\nimport org.apache.sshd.common.config.keys.KeyUtils;\r\nimport org.apache.sshd.common.keyprovider.KeyIdentityProvider;\r\nimport org.apache.sshd.common.util.GenericUtils;\r\n\r\n/**\r\n * @author <a href=\"mailto:dev@mina.apache.org\">Apache MINA SSHD Project</a>\r\n */\r\npublic interface AuthenticationIdentitiesProvider extends KeyIdentityProvider, PasswordIdentityProvider {\r\n\r\n    /**\r\n     * Compares 2 password identities - returns zero ONLY if <U>both</U> compared\r\n     * objects are {@link String}s and equal to each other\r\n     */\r\n    Comparator<Object> PASSWORD_IDENTITY_COMPARATOR = (o1, o2) -> {\r\n        if (!(o1 instanceof String) || !(o2 instanceof String)) {\r\n            return -1;\r\n        } else {\r\n            return ((String) o1).compareTo((String) o2);\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Compares 2 {@link KeyPair} identities - returns zero ONLY if <U>both</U> compared\r\n     * objects are {@link KeyPair}s and equal to each other\r\n     */\r\n    Comparator<Object> KEYPAIR_IDENTITY_COMPARATOR = (o1, o2) -> {\r\n        if ((!(o1 instanceof KeyPair)) || (!(o2 instanceof KeyPair))) {\r\n            return -1;\r\n        } else if (KeyUtils.compareKeyPairs((KeyPair) o1, (KeyPair) o2)) {\r\n            return 0;\r\n        } else {\r\n            return 1;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @return All the currently available identities - passwords, keys, etc...\r\n     */\r\n    Iterable<?> loadIdentities();\r\n\r\n    static int findIdentityIndex(List<?> identities, Comparator<? super Object> comp, Object target) {\r\n        for (int index = 0; index < identities.size(); index++) {\r\n            Object value = identities.get(index);\r\n            if (comp.compare(value, target) == 0) {\r\n                return index;\r\n            }\r\n        }\r\n\r\n        return -1;\r\n    }\r\n\r\n    /**\r\n     * @param identities The {@link Iterable} identities - OK if {@code null}/empty\r\n     * @return An {@link AuthenticationIdentitiesProvider} wrapping the identities\r\n     */\r\n    static AuthenticationIdentitiesProvider wrap(Iterable<?> identities) {\r\n        return new AuthenticationIdentitiesProvider() {\r\n            @Override\r\n            public Iterable<KeyPair> loadKeys() {\r\n                return selectIdentities(KeyPair.class);\r\n            }\r\n\r\n            @Override\r\n            public Iterable<String> loadPasswords() {\r\n                return selectIdentities(String.class);\r\n            }\r\n\r\n            @Override\r\n            public Iterable<?> loadIdentities() {\r\n                return selectIdentities(Object.class);\r\n            }\r\n\r\n            // NOTE: returns a NEW Collection on every call so that the original\r\n            //      identities remain unchanged\r\n            private <T> Collection<T> selectIdentities(Class<T> type) {\r\n                Collection<T> matches = null;\r\n                for (Iterator<?> iter = GenericUtils.iteratorOf(identities); iter.hasNext();) {\r\n                    Object o = iter.next();\r\n                    Class<?> t = o.getClass();\r\n                    if (!type.isAssignableFrom(t)) {\r\n                        continue;\r\n                    }\r\n\r\n                    if (matches == null) {\r\n                        matches = new LinkedList<>();\r\n                    }\r\n\r\n                    matches.add(type.cast(o));\r\n                }\r\n\r\n                return (matches == null) ? Collections.<T>emptyList() : matches;\r\n            }\r\n        };\r\n    }\r\n}\r\n```\r\nAlso\r\n```java\r\n/*\r\n * Licensed to the Apache Software Foundation (ASF) under one\r\n * or more contributor license agreements. See the NOTICE file\r\n * distributed with this work for additional information\r\n * regarding copyright ownership. The ASF licenses this file\r\n * to you under the Apache License, Version 2.0 (the\r\n * \"License\"); you may not use this file except in compliance\r\n * with the License. You may obtain a copy of the License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing,\r\n * software distributed under the License is distributed on an\r\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n * KIND, either express or implied. See the License for the\r\n * specific language governing permissions and limitations\r\n * under the License.\r\n */\r\n\r\npackage org.apache.sshd.client.config.keys;\r\n\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.nio.file.Files;\r\nimport java.nio.file.Path;\r\nimport java.nio.file.Paths;\r\nimport java.security.GeneralSecurityException;\r\nimport java.security.KeyPair;\r\n\r\nimport org.apache.sshd.common.config.keys.FilePasswordProvider;\r\nimport org.apache.sshd.common.util.ValidateUtils;\r\nimport org.apache.sshd.common.util.io.IoUtils;\r\nimport org.apache.sshd.common.util.security.SecurityUtils;\r\n\r\n/**\r\n * @author <a href=\"mailto:dev@mina.apache.org\">Apache MINA SSHD Project</a>\r\n */\r\npublic interface ClientIdentityLoader {\r\n    /**\r\n     * <P>A default implementation that assumes a file location that <U>must</U> exist.</P>\r\n     *\r\n     * <P>\r\n     * <B>Note:</B> It calls {@link SecurityUtils#loadKeyPairIdentity(String, InputStream, FilePasswordProvider)}\r\n     * </P>\r\n     */\r\n    ClientIdentityLoader DEFAULT = new ClientIdentityLoader() {\r\n        @Override\r\n        public boolean isValidLocation(String location) throws IOException {\r\n            Path path = toPath(location);\r\n            return Files.exists(path, IoUtils.EMPTY_LINK_OPTIONS);\r\n        }\r\n\r\n        @Override\r\n        public KeyPair loadClientIdentity(String location, FilePasswordProvider provider) throws IOException, GeneralSecurityException {\r\n            Path path = toPath(location);\r\n            try (InputStream inputStream = Files.newInputStream(path, IoUtils.EMPTY_OPEN_OPTIONS)) {\r\n                return SecurityUtils.loadKeyPairIdentity(path.toString(), inputStream, provider);\r\n            }\r\n        }\r\n\r\n        @Override\r\n        public String toString() {\r\n            return \"DEFAULT\";\r\n        }\r\n\r\n        private Path toPath(String location) {\r\n            Path path = Paths.get(ValidateUtils.checkNotNullAndNotEmpty(location, \"No location\"));\r\n            path = path.toAbsolutePath();\r\n            path = path.normalize();\r\n            return path;\r\n        }\r\n    };\r\n\r\n    /**\r\n     * @param location The identity key-pair location - the actual meaning (file, URL, etc.)\r\n     * depends on the implementation.\r\n     * @return {@code true} if it represents a valid location - the actual meaning of\r\n     * the validity depends on the implementation\r\n     * @throws IOException If failed to validate the location\r\n     */\r\n    boolean isValidLocation(String location) throws IOException;\r\n\r\n    /**\r\n     * @param location The identity key-pair location - the actual meaning (file, URL, etc.)\r\n     * depends on the implementation.\r\n     * @param provider The {@link FilePasswordProvider} to consult if the location contains\r\n     * an encrypted identity\r\n     * @return The loaded {@link KeyPair} - {@code null} if location is empty\r\n     * and it is OK that it does not exist\r\n     * @throws IOException If failed to access / process the remote location\r\n     * @throws GeneralSecurityException If failed to convert the contents into\r\n     * a valid identity\r\n     */\r\n    KeyPair loadClientIdentity(String location, FilePasswordProvider provider) throws IOException, GeneralSecurityException;\r\n}\r\n```\r\n**Running PMD through:** *[Maven]*\r\n```\r\nApache Maven 3.5.2 (138edd61fd100ec658bfa2d307c43b76940a5d7d; 2017-10-18T10:58:13+03:00)\r\nMaven home: /home/lyor/Software/apache-maven-3.5.2\r\nJava version: 1.8.0_151, vendor: Oracle Corporation\r\nJava home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.151-1.b12.fc25.x86_64/jre\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"linux\", version: \"4.13.16-100.fc25.x86_64\", arch: \"amd64\", family: \"unix\"\r\n\r\n[INFO] >>> maven-pmd-plugin:3.8:check (pmd-checker) > :pmd @ sshd-core >>>\r\n[INFO] \r\n[INFO] --- maven-pmd-plugin:3.8:pmd (pmd) @ sshd-core ---\r\nDec 20, 2017 12:48:24 PM net.sourceforge.pmd.cache.NoopAnalysisCache <init>\r\nWARNING: This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/pmd/pmd_userdocs_getting_started.html#incremental-analysis\r\nDec 20, 2017 12:48:24 PM net.sourceforge.pmd.RuleSetFactory parseRuleSetReferenceNode\r\nWARNING: The RuleSet rulesets/java/braces.xml has been deprecated.\r\nDec 20, 2017 12:48:25 PM net.sourceforge.pmd.RuleSetFactory parseRuleSetReferenceNode\r\nWARNING: The RuleSet rulesets/java/empty.xml has been deprecated.\r\nDec 20, 2017 12:48:25 PM net.sourceforge.pmd.RuleSetFactory parseRuleSetReferenceNode\r\nWARNING: The RuleSet rulesets/java/finalizers.xml has been deprecated.\r\n[ERROR] PMD processing errors:\r\n[ERROR] /home/lyor/workspace/mina-sshd/sshd-core/src/main/java/org/apache/sshd/client/auth/AuthenticationIdentitiesProvider.java: Error while parsing /home/lyor/workspace/mina-sshd/sshd-core/src/main/java/org/apache/sshd/client/auth/AuthenticationIdentitiesProvider.java\r\n/home/lyor/workspace/mina-sshd/sshd-core/src/main/java/org/apache/sshd/client/config/keys/ClientIdentityLoader.java: Error while parsing /home/lyor/workspace/mina-sshd/sshd-core/src/main/java/org/apache/sshd/client/config/keys/ClientIdentityLoader.java\r\n```\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/793", "user": "lgoldstein", "labels": ["a:bug", "has:pr"], "created": "2017-12-20 10:54:56", "closed": "2017-12-23 03:57:23", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[apex] Method chaining breaks ApexCRUDViolation ", "body": "**Affects Version:** 6.0.0\r\n**Rule Set:**\r\nhttps://github.com/pmd/pmd/blob/master/pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/security/ApexCRUDViolationRule.java\r\n\r\n**Description:**\r\n\r\n> WARNUNG: This analysis could be faster, please consider using Incremental Analysis: https://pmd.github.io/pmd/pmd_userdocs_getting_started.html#incremental-analysis\r\n> java.lang.RuntimeException: net.sourceforge.pmd.PMDException: Error while processing n/a\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTestFromString(RuleTst.java:275)\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTestFromString(RuleTst.java:280)\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.processUsingStringReader(RuleTst.java:247)\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTest(RuleTst.java:139)\r\n> \tat net.sourceforge.pmd.testframework.RuleTestRunner$2.evaluate(RuleTestRunner.java:116)\r\n> \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n> \tat net.sourceforge.pmd.testframework.RuleTestRunner.runChild(RuleTestRunner.java:101)\r\n> \tat net.sourceforge.pmd.testframework.RuleTestRunner.runChild(RuleTestRunner.java:36)\r\n> \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n> \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n> \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n> \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n> \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n> \tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n> \tat net.sourceforge.pmd.testframework.PMDTestRunner.run(PMDTestRunner.java:95)\r\n> \tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n> \tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n> \tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n> \tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n> \tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n> Caused by: net.sourceforge.pmd.PMDException: Error while processing n/a\r\n> \tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:101)\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTestFromString(RuleTst.java:273)\r\n> \t... 19 more\r\n> Caused by: java.lang.NullPointerException\r\n> \tat net.sourceforge.pmd.lang.apex.rule.security.ApexCRUDViolationRule.isLastMethodName(ApexCRUDViolationRule.java:325)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.security.ApexCRUDViolationRule.collectCRUDMethodLevelChecks(ApexCRUDViolationRule.java:311)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.security.ApexCRUDViolationRule.visit(ApexCRUDViolationRule.java:116)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTMethodCallExpression.jjtAccept(ASTMethodCallExpression.java:19)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:448)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTPrefixExpression.jjtAccept(ASTPrefixExpression.java:16)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:473)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTStandardCondition.jjtAccept(ASTStandardCondition.java:16)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:233)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTIfBlockStatement.jjtAccept(ASTIfBlockStatement.java:16)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:228)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTIfElseBlockStatement.jjtAccept(ASTIfElseBlockStatement.java:16)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:168)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:17)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:148)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTMethod.jjtAccept(ASTMethod.java:21)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:153)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.security.ApexCRUDViolationRule.visit(ApexCRUDViolationRule.java:111)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visitAll(AbstractApexRule.java:131)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.apply(AbstractApexRule.java:125)\r\n> \tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:502)\r\n> \tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n> \tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n> \tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n> \t... 20 more\r\n> \r\n> java.lang.RuntimeException: \"Reproduce Nullpointer\" failed\r\n> \r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTest(RuleTst.java:143)\r\n> \tat net.sourceforge.pmd.testframework.RuleTestRunner$2.evaluate(RuleTestRunner.java:116)\r\n> \tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n> \tat net.sourceforge.pmd.testframework.RuleTestRunner.runChild(RuleTestRunner.java:101)\r\n> \tat net.sourceforge.pmd.testframework.RuleTestRunner.runChild(RuleTestRunner.java:36)\r\n> \tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n> \tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n> \tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n> \tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n> \tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n> \tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n> \tat net.sourceforge.pmd.testframework.PMDTestRunner.run(PMDTestRunner.java:95)\r\n> \tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n> \tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n> \tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n> \tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n> \tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\n> Caused by: java.lang.RuntimeException: net.sourceforge.pmd.PMDException: Error while processing n/a\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTestFromString(RuleTst.java:275)\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTestFromString(RuleTst.java:280)\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.processUsingStringReader(RuleTst.java:247)\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTest(RuleTst.java:139)\r\n> \t... 16 more\r\n> Caused by: net.sourceforge.pmd.PMDException: Error while processing n/a\r\n> \tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:101)\r\n> \tat net.sourceforge.pmd.testframework.RuleTst.runTestFromString(RuleTst.java:273)\r\n> \t... 19 more\r\n> Caused by: java.lang.NullPointerException\r\n> \tat net.sourceforge.pmd.lang.apex.rule.security.ApexCRUDViolationRule.isLastMethodName(ApexCRUDViolationRule.java:325)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.security.ApexCRUDViolationRule.collectCRUDMethodLevelChecks(ApexCRUDViolationRule.java:311)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.security.ApexCRUDViolationRule.visit(ApexCRUDViolationRule.java:116)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTMethodCallExpression.jjtAccept(ASTMethodCallExpression.java:19)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:448)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTPrefixExpression.jjtAccept(ASTPrefixExpression.java:16)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:473)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTStandardCondition.jjtAccept(ASTStandardCondition.java:16)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:233)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTIfBlockStatement.jjtAccept(ASTIfBlockStatement.java:16)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:228)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTIfElseBlockStatement.jjtAccept(ASTIfElseBlockStatement.java:16)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:168)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:17)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:148)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.ASTMethod.jjtAccept(ASTMethod.java:21)\r\n> \tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:153)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.security.ApexCRUDViolationRule.visit(ApexCRUDViolationRule.java:111)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visitAll(AbstractApexRule.java:131)\r\n> \tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.apply(AbstractApexRule.java:125)\r\n> \tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:502)\r\n> \tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n> \tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n> \tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n> \t... 20 more\r\n> \r\n> \r\n> Process finished with exit code 255\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nhttps://github.com/financialforcedev/fflib-apex-common/blob/master/fflib/src/classes/fflib_SObjectDomain.cls\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\n\r\nAll tools\r\n\r\nReported by @SCWells72", "url": "https://github.com/pmd/pmd/issues/788", "user": "rsoesemann", "labels": ["a:bug", "has:pr"], "created": "2017-12-18 22:57:40", "closed": "2017-12-21 03:36:04", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[java] NPE in DataClass rule", "body": "**Affects Version:** 6.0.0\r\n**Rule:** DataClass\r\n\r\n**Description:**\r\nWe're upgrading to PMD 6.0.0 and found a bug in new rule `DataClass`\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\n// License: GPL. For details, see LICENSE file.\r\npackage org.openstreetmap.josm.gui.tagging.presets.items;\r\n\r\nimport static org.openstreetmap.josm.tools.I18n.tr;\r\n\r\nimport java.util.Collection;\r\nimport java.util.EnumSet;\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\nimport java.util.NoSuchElementException;\r\nimport java.util.SortedSet;\r\nimport java.util.TreeSet;\r\n\r\nimport org.openstreetmap.josm.data.osm.OsmPrimitive;\r\nimport org.openstreetmap.josm.data.osm.OsmUtils;\r\nimport org.openstreetmap.josm.data.preferences.BooleanProperty;\r\nimport org.openstreetmap.josm.gui.tagging.presets.TaggingPresetItem;\r\n\r\n/**\r\n * Preset item associated to an OSM key.\r\n */\r\npublic abstract class KeyedItem extends TaggingPresetItem {\r\n\r\n    /** Translatation of \"&lt;different&gt;\". Use in combo boxes to display an entry matching several different values. */\r\n    protected static final String DIFFERENT = tr(\"<different>\");\r\n\r\n    protected static final BooleanProperty PROP_FILL_DEFAULT = new BooleanProperty(\"taggingpreset.fill-default-for-tagged-primitives\", false);\r\n\r\n    /** Last value of each key used in presets, used for prefilling corresponding fields */\r\n    static final Map<String, String> LAST_VALUES = new HashMap<>();\r\n\r\n    /** This specifies the property key that will be modified by the item. */\r\n    public String key; // NOSONAR\r\n    /** The text to display */\r\n    public String text; // NOSONAR\r\n    /** The context used for translating {@link #text} */\r\n    public String text_context; // NOSONAR\r\n    /**\r\n     * Allows to change the matching process, i.e., determining whether the tags of an OSM object fit into this preset.\r\n     * If a preset fits then it is linked in the Tags/Membership dialog.<ul>\r\n     * <li>none: neutral, i.e., do not consider this item for matching</li>\r\n     * <li>key: positive if key matches, neutral otherwise</li>\r\n     * <li>key!: positive if key matches, negative otherwise</li>\r\n     * <li>keyvalue: positive if key and value matches, neutral otherwise</li>\r\n     * <li>keyvalue!: positive if key and value matches, negative otherwise</li></ul>\r\n     * Note that for a match, at least one positive and no negative is required.\r\n     * Default is \"keyvalue!\" for {@link Key} and \"none\" for {@link Text}, {@link Combo}, {@link MultiSelect} and {@link Check}.\r\n     */\r\n    public String match = getDefaultMatch().getValue(); // NOSONAR\r\n\r\n    /**\r\n     * Enum denoting how a match (see {@link TaggingPresetItem#matches}) is performed.\r\n     */\r\n    protected enum MatchType {\r\n\r\n        /** Neutral, i.e., do not consider this item for matching. */\r\n        NONE(\"none\"),\r\n        /** Positive if key matches, neutral otherwise. */\r\n        KEY(\"key\"),\r\n        /** Positive if key matches, negative otherwise. */\r\n        KEY_REQUIRED(\"key!\"),\r\n        /** Positive if key and value matches, neutral otherwise. */\r\n        KEY_VALUE(\"keyvalue\"),\r\n        /** Positive if key and value matches, negative otherwise. */\r\n        KEY_VALUE_REQUIRED(\"keyvalue!\");\r\n\r\n        private final String value;\r\n\r\n        MatchType(String value) {\r\n            this.value = value;\r\n        }\r\n\r\n        /**\r\n         * Replies the associated textual value.\r\n         * @return the associated textual value\r\n         */\r\n        public String getValue() {\r\n            return value;\r\n        }\r\n\r\n        /**\r\n         * Determines the {@code MatchType} for the given textual value.\r\n         * @param type the textual value\r\n         * @return the {@code MatchType} for the given textual value\r\n         */\r\n        public static MatchType ofString(String type) {\r\n            for (MatchType i : EnumSet.allOf(MatchType.class)) {\r\n                if (i.getValue().equals(type))\r\n                    return i;\r\n            }\r\n            throw new IllegalArgumentException(type + \" is not allowed\");\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Usage information on a key\r\n     */\r\n    protected static class Usage {\r\n        /**\r\n         * A set of values that were used for this key.\r\n         */\r\n        public final SortedSet<String> values = new TreeSet<>();; // NOSONAR\r\n        private boolean hadKeys;\r\n        private boolean hadEmpty;\r\n\r\n        /**\r\n         * Check if there is exactly one value for this key.\r\n         * @return <code>true</code> if there was exactly one value.\r\n         */\r\n        public boolean hasUniqueValue() {\r\n            return values.size() == 1 && !hadEmpty;\r\n        }\r\n\r\n        /**\r\n         * Check if this key was not used in any primitive\r\n         * @return <code>true</code> if it was unused.\r\n         */\r\n        public boolean unused() {\r\n            return values.isEmpty();\r\n        }\r\n\r\n        /**\r\n         * Get the first value available.\r\n         * @return The first value\r\n         * @throws NoSuchElementException if there is no such value.\r\n         */\r\n        public String getFirst() {\r\n            return values.first();\r\n        }\r\n\r\n        /**\r\n         * Check if we encountered any primitive that had any keys\r\n         * @return <code>true</code> if any of the primtives had any tags.\r\n         */\r\n        public boolean hadKeys() {\r\n            return hadKeys;\r\n        }\r\n    }\r\n\r\n    protected static Usage determineTextUsage(Collection<OsmPrimitive> sel, String key) {\r\n        Usage returnValue = new Usage();\r\n        for (OsmPrimitive s : sel) {\r\n            String v = s.get(key);\r\n            if (v != null) {\r\n                returnValue.values.add(v);\r\n            } else {\r\n                returnValue.hadEmpty = true;\r\n            }\r\n            if (s.hasKeys()) {\r\n                returnValue.hadKeys = true;\r\n            }\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    protected static Usage determineBooleanUsage(Collection<OsmPrimitive> sel, String key) {\r\n        Usage returnValue = new Usage();\r\n        for (OsmPrimitive s : sel) {\r\n            String booleanValue = OsmUtils.getNamedOsmBoolean(s.get(key));\r\n            if (booleanValue != null) {\r\n                returnValue.values.add(booleanValue);\r\n            }\r\n        }\r\n        return returnValue;\r\n    }\r\n\r\n    /**\r\n     * Returns the default match.\r\n     * @return the default match\r\n     */\r\n    public abstract MatchType getDefaultMatch();\r\n\r\n    /**\r\n     * Returns the list of values.\r\n     * @return the list of values\r\n     */\r\n    public abstract Collection<String> getValues();\r\n\r\n    protected String getKeyTooltipText() {\r\n        return tr(\"This corresponds to the key ''{0}''\", key);\r\n    }\r\n\r\n    @Override\r\n    protected Boolean matches(Map<String, String> tags) {\r\n        switch (MatchType.ofString(match)) {\r\n        case NONE:\r\n            return null;\r\n        case KEY:\r\n            return tags.containsKey(key) ? Boolean.TRUE : null;\r\n        case KEY_REQUIRED:\r\n            return tags.containsKey(key);\r\n        case KEY_VALUE:\r\n            return tags.containsKey(key) && getValues().contains(tags.get(key)) ? Boolean.TRUE : null;\r\n        case KEY_VALUE_REQUIRED:\r\n            return tags.containsKey(key) && getValues().contains(tags.get(key));\r\n        default:\r\n            throw new IllegalStateException();\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public String toString() {\r\n        return \"KeyedItem [key=\" + key + \", text=\" + text\r\n                + \", text_context=\" + text_context + \", match=\" + match\r\n                + ']';\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *Ant*\r\n\r\n**Error**\r\n\r\n```\r\nException applying rule DataClass on file org\\openstreetmap\\josm\\gui\\tagging\\presets\\items\\KeyedItem.java, continuing with next rule\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.ast.AbstractNode.jjtGetChild(AbstractNode.java:104)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.AbstractJavaClassMetric.getDeclarationsOfType(AbstractJavaClassMetric.java:116)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.AbstractJavaClassMetric.getMethodsAndConstructors(AbstractJavaClassMetric.java:94)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.AbstractJavaClassMetric.countMatchingOpSigs(AbstractJavaClassMetric.java:52)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.WocMetric.computeFor(WocMetric.java:35)\r\n\tat net.sourceforge.pmd.lang.java.metrics.impl.WocMetric.computeFor(WocMetric.java:20)\r\n\tat net.sourceforge.pmd.lang.metrics.AbstractMetricsComputer.computeForType(AbstractMetricsComputer.java:35)\r\n\tat net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForType(AbstractMetricsFacade.java:67)\r\n\tat net.sourceforge.pmd.lang.java.metrics.JavaMetrics.get(JavaMetrics.java:55)\r\n\tat net.sourceforge.pmd.lang.java.rule.design.DataClassRule.interfaceRevealsData(DataClassRule.java:48)\r\n\tat net.sourceforge.pmd.lang.java.rule.design.DataClassRule.visit(DataClassRule.java:30)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:120)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:116)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:42)\r\n\tat net.sourceforge.pmd.lang.java.rule.design.DataClassRule.visit(DataClassRule.java:43)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaMetricsRule.visit(AbstractJavaMetricsRule.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:33)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:232)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:212)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:39)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:27)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:321)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:502)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:111)\r\n\tat net.sourceforge.pmd.PMD.processFiles(PMD.java:315)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:192)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:276)\r\n\tat net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:49)\r\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\r\n\tat org.apache.tools.ant.Target.execute(Target.java:435)\r\n\tat org.apache.tools.ant.Target.performTasks(Target.java:456)\r\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1405)\r\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1376)\r\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\r\n\tat org.eclipse.ant.internal.launching.remote.EclipseDefaultExecutor.executeTargets(EclipseDefaultExecutor.java:36)\r\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1260)\r\n\tat org.eclipse.ant.internal.launching.remote.InternalAntRunner.run(InternalAntRunner.java:460)\r\n\tat org.eclipse.ant.internal.launching.remote.InternalAntRunner.main(InternalAntRunner.java:142)\r\n```", "url": "https://github.com/pmd/pmd/issues/785", "user": "don-vip", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2017-12-16 19:02:29", "closed": "2017-12-21 02:32:43", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "[doc] Wrong information in the Release Notes about the Security ruleset", "body": "**Affects Version:** 6.0.0\r\n\r\nIn the [Release Notes](https://pmd.github.io/pmd-6.0.0/pmd_release_notes.html#rule-categories) it is mentioned that one of the new categories is `Security`. However, using `<rule ref=\"category/java/security.xml\"/>` gives a `The RuleSet category/java/security.xml has been deprecated.` warning. I guess the release notes are wrong because I can't see `Security` in other places in the documentation also.", "url": "https://github.com/pmd/pmd/issues/782", "user": "boris-petrov", "labels": ["a:bug", "has:pr"], "created": "2017-12-16 13:13:12", "closed": "2018-01-07 21:17:46", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "[apex] java.lang.NullPointerException from PMD", "body": "Please, prefix the report title with the language it applies to within brackets, such as *[java]* or *[apex]*. If not specific to a language, you can use *[core]*\r\n\r\n**Rule Set:**\r\nNot sure\r\n**Description:**\r\njava.lang.NullPointerException when run PMD with below source\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\ntrigger CaseAssignLevel on CaseAssignLevel__c (after delete, after insert, after undelete, after update, before delete, before insert, before update) {\r\n\r\n\tif(Trigger.isBefore) {\r\n\t\tif(Trigger.isInsert || Trigger.isUpdate) {\r\n\t\t\tCaseAssignLevel_tr.doIsNotTrigger(Trigger.new);\r\n\t\t}\r\n\t}\r\n\t\r\n\t\r\n\t\r\n\tif(Trigger.isBefore && !CaseAssignLevel_tr.isNotTrigger) {\r\n\t\tif(Trigger.isInsert || Trigger.isUpdate) {\r\n\t\t\tCaseAssignLevel_tr.doCreateKeyValue(Trigger.new, Trigger.oldMap);\t\r\n\t\t}\r\n\t}\r\n\t\r\n\t/*\r\n\telse if(Trigger.isAfter && !CaseAssignLevel_tr.isNotTrigger) {\r\n\t\tif(Trigger.isInsert || Trigger.isUpdate) {\r\n\t\t\t\r\n\t\t}\r\n\t}\r\n\t*/\r\n\t\r\n}\r\n\r\n** Error detail \r\n\r\nINFO: Deduped array ApexLexer.DFA22_transition. Found 7861612 shorts which is 14MB not including array overhead. Removed 7139464 shorts which is 13MB not counting array overhead.Took 9ms.\r\nException applying rule CyclomaticComplexity on file C:\\eclipse-workspace\\.. Dev\\src\\triggers\\CaseAssignLevel.trigger, continuing with next rule\r\nNov 30, 2017 2:40:44 PM net.sourceforge.pmd.RuleSet apply\r\nWARNING: Exception applying rule CyclomaticComplexity on file C:\\eclipse-workspace\\Samsung Dev\\src\\triggers\\CaseAssignLevel.trigger, continuing with next rule\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.apex.ast.ApexQualifiedName.ofMethod(ApexQualifiedName.java:173)\r\n\tat net.sourceforge.pmd.lang.apex.ast.ASTMethod.getQualifiedName(ASTMethod.java:51)\r\n\tat net.sourceforge.pmd.lang.apex.ast.ASTMethod.getQualifiedName(ASTMethod.java:13)\r\n\tat net.sourceforge.pmd.lang.metrics.AbstractMetricsFacade.computeForOperation(AbstractMetricsFacade.java:92)\r\n\tat net.sourceforge.pmd.lang.apex.metrics.ApexMetrics.get(ApexMetrics.java:83)\r\n\tat net.sourceforge.pmd.lang.apex.rule.design.CyclomaticComplexityRule.visit(CyclomaticComplexityRule.java:70)\r\n\tat net.sourceforge.pmd.lang.apex.ast.ASTMethod.jjtAccept(ASTMethod.java:21)\r\n\tat net.sourceforge.pmd.lang.apex.ast.AbstractApexNode.childrenAccept(AbstractApexNode.java:108)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:142)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visit(AbstractApexRule.java:513)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.visitAll(AbstractApexRule.java:135)\r\n\tat net.sourceforge.pmd.lang.apex.rule.AbstractApexRule.apply(AbstractApexRule.java:125)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:279)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:502)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:95)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:50)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:75)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:23)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Unknown Source)\r\n\tat java.util.concurrent.FutureTask.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/768", "user": "parksungrin", "labels": ["a:bug", "has:pr", "in:metrics"], "created": "2017-11-30 09:09:14", "closed": "2017-12-03 18:38:55", "commits": {"83b2e91f3d643da2dcb6c402d5d254619de9a1df": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "83b2e91f3d643da2dcb6c402d5d254619de9a1df", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["2c94dd993d07ae1e0895e2f6c501721bde6e61a8"], "nameRev": "83b2e91f3d643da2dcb6c402d5d254619de9a1df tags/pmd_releases/6.0.0~25^2", "commitMessage": "Update release notes, closes #768\n", "commitDateTime": "2017-12-03 19:22:11", "authoredDateTime": "2017-12-03 19:22:11", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["83b2e91f3d643da2dcb6c402d5d254619de9a1df"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[apex] EmptyStatementBlock complains about missing rather than empty block", "body": "**Rule Set:**\r\n... /pmd/doc/pmd_rules_apex_errorprone.html#emptystatementblock\r\n\r\n**Description:**\r\nThe rule files when an if statement doesn't have an else block. I would expect it only fires if there is an else block without content\r\n\r\n**Code Sample demonstrating the issue:**\r\nThis should work, but gets flagged\r\n```\r\nif (someVariable.equals(someValue) {\r\n   System.debug(someValue);\r\n}\r\n```\r\nThis gets flagged as designed:\r\n\r\n```\r\nif (someVariable.equals(someValue) {\r\n   System.debug(someValue);\r\n} else {\r\n   // NoAction\r\n}\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nCLI triggered from Button in Eclipse Version 6.0.0-Snapshot downloaded 24Nov2017\r\n", "url": "https://github.com/pmd/pmd/issues/760", "user": "Stwissel", "labels": ["a:bug", "a:false-positive", "has:pr"], "created": "2017-11-27 05:44:31", "closed": "2017-11-27 20:04:11", "commits": {"a0de21003a8a62c5f0be51d00e79ce39bbc41837": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a0de21003a8a62c5f0be51d00e79ce39bbc41837", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["309b964441cede094aabe8e55e17202ad3412410"], "nameRev": "a0de21003a8a62c5f0be51d00e79ce39bbc41837 tags/pmd_releases/6.0.0~27^2", "commitMessage": "Update release notes, refs #760\n", "commitDateTime": "2017-11-27 20:57:23", "authoredDateTime": "2017-11-27 20:57:23", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a0de21003a8a62c5f0be51d00e79ce39bbc41837"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[xml] IllegalAccessException when accessing attribute using Saxon on JRE 9", "body": "Trying to use **Saxon and jre 9** to execute *any* xml xpath rule that accesses an attribute causes an IllegalAccessException. The attribute value is [defaulted to null](https://github.com/pmd/pmd/blob/ab80d18ff61d28bafdf8bece762d9385f0a6183b/pmd-core/src/main/java/net/sourceforge/pmd/lang/ast/xpath/Attribute.java#L49).\r\n\r\n```\r\njava.lang.IllegalAccessException: class net.sourceforge.pmd.lang.ast.xpath.Attribute cannot access class com.sun.proxy.jdk.proxy2.$Proxy10 (in module jdk.proxy2) because module jdk.proxy2 does not export com.sun.proxy.jdk.proxy2 to unnamed module @59e84876\r\n\tat java.base/jdk.internal.reflect.Reflection.newIllegalAccessException(Reflection.java:361)\r\n\tat java.base/java.lang.reflect.AccessibleObject.checkAccess(AccessibleObject.java:589)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:556)\r\n\tat net.sourceforge.pmd.lang.ast.xpath.Attribute.getValue(Attribute.java:43)\r\n\tat net.sourceforge.pmd.lang.ast.xpath.saxon.AttributeNode.atomize(AttributeNode.java:50)\r\n\tat net.sf.saxon.om.AxisIteratorImpl.atomize(AxisIteratorImpl.java:74)\r\n\tat net.sf.saxon.expr.AxisAtomizingIterator.next(AxisAtomizingIterator.java:43)\r\n\tat net.sf.saxon.expr.ItemMappingIterator.next(ItemMappingIterator.java:39)\r\n\tat net.sf.saxon.expr.ItemMappingIterator.next(ItemMappingIterator.java:39)\r\n\tat net.sf.saxon.expr.CardinalityChecker.evaluateItem(CardinalityChecker.java:262)\r\n\tat net.sf.saxon.functions.Contains.evaluateItem(Contains.java:42)\r\n\tat net.sf.saxon.expr.Expression.iterate(Expression.java:370)\r\n\tat net.sf.saxon.expr.Expression.effectiveBooleanValue(Expression.java:421)\r\n\tat net.sf.saxon.functions.BooleanFn.effectiveBooleanValue(BooleanFn.java:179)\r\n\tat net.sf.saxon.expr.FilterIterator$NonNumeric.matches(FilterIterator.java:182)\r\n\tat net.sf.saxon.expr.FilterIterator.getNextMatchingItem(FilterIterator.java:65)\r\n\tat net.sf.saxon.expr.FilterIterator.next(FilterIterator.java:44)\r\n\tat net.sf.saxon.value.SequenceExtent.<init>(SequenceExtent.java:98)\r\n\tat net.sf.saxon.sort.DocumentOrderIterator.<init>(DocumentOrderIterator.java:30)\r\n\tat net.sf.saxon.sort.DocumentSorter.iterate(DocumentSorter.java:85)\r\n\tat net.sf.saxon.sxpath.XPathExpression.evaluate(XPathExpression.java:98)\r\n\tat net.sourceforge.pmd.lang.rule.xpath.SaxonXPathRuleQuery.evaluate(SaxonXPathRuleQuery.java:116)\r\n\tat net.sourceforge.pmd.lang.rule.XPathRule.evaluate(XPathRule.java:93)\r\n\tat net.sourceforge.pmd.lang.rule.XPathRule.apply(XPathRule.java:78)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:473)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:143)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:181)\r\n```\r\n\r\nAfter some digging I found [this relevant resource](https://docs.oracle.com/javase/9/docs/api/java/lang/reflect/Proxy.html#membership). I think we may be in case 2.a : [the proxy](https://github.com/pmd/pmd/blob/ab80d18ff61d28bafdf8bece762d9385f0a6183b/pmd-xml/src/main/java/net/sourceforge/pmd/lang/xml/ast/XmlParser.java#L87) we use lives in a dynamic module, (here named jdk.proxy2) which makes it inaccessible to the unnamed package (in which the code of pmd currently lives I guess).", "url": "https://github.com/pmd/pmd/issues/739", "user": "oowekyala", "labels": ["a:bug", "has:pr"], "created": "2017-11-19 17:14:18", "closed": "2018-02-17 17:14:12", "commits": {}, "ttf": 89.00027777777778, "commitsDetails": []}, {"title": "[java] LinkageError with aux classpath", "body": "There is one integration test with the maven-pmd-plugin, that fails with PMD 6.0.0: It uses the aux classpath (maven dependency scope test) and should detect a subclass of JUnit's TestCase, which has no test methods.\r\n\r\nIt seems, we load some classes twice. Error Message:\r\n\r\nCould not find class it.TestSupport, due to: java.lang.LinkageError: loader (instance of  net/sourceforge/pmd/util/ClasspathClassLoader): attempted  duplicate class definition for name: \"org/custommonkey/xmlunit/XMLTestCase\"\r\n\r\nSince we couldn't determine the type of TestSupport, we didn't figure out that the class `NoTestsHere` is actually a TestCase, too, and do not report the violation.\r\n", "url": "https://github.com/pmd/pmd/issues/732", "user": "adangel", "labels": ["a:bug", "has:pr"], "created": "2017-11-11 13:36:39", "closed": "2017-11-24 10:57:50", "commits": {"3bad361e2fd9add761b5baa75ad3d3857d48b635": {"commitGHEventType": "referenced", "commitUser": "adangel"}, "4ad209c81f95dc755c4aeb81034dbc76024b7ad1": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "3bad361e2fd9add761b5baa75ad3d3857d48b635", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["3ca4b71f72226709266e7fbd89b58d8db44c4b8c"], "nameRev": "3bad361e2fd9add761b5baa75ad3d3857d48b635 tags/pmd_releases/6.0.0~37^2~1", "commitMessage": "[java] Change MoreThanOneLoggerRule to avoid classloader issues\nrefs #732\n", "commitDateTime": "2017-11-24 11:43:23", "authoredDateTime": "2017-11-24 11:43:23", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/errorprone/MoreThanOneLoggerRule.java", "insertions": 7, "deletions": 29, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MoreThanOneLoggerRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.errorprone.MoreThanOneLoggerRule", "TOT": 12, "UPD": 1, "INS": 3, "MOV": 4, "DEL": 4}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.errorprone.MoreThanOneLoggerRule.visit(net.sourceforge.pmd.lang.java.ast.ASTVariableDeclarator,java.lang.Object)", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "4ad209c81f95dc755c4aeb81034dbc76024b7ad1", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["3bad361e2fd9add761b5baa75ad3d3857d48b635"], "nameRev": "4ad209c81f95dc755c4aeb81034dbc76024b7ad1 tags/pmd_releases/6.0.0~37^2", "commitMessage": "Update release notes, refs #732\n", "commitDateTime": "2017-11-24 11:44:59", "authoredDateTime": "2017-11-24 11:44:59", "commitGitStats": [{"filePath": "docs/pages/release_notes.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3bad361e2fd9add761b5baa75ad3d3857d48b635", "4ad209c81f95dc755c4aeb81034dbc76024b7ad1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 29, "lines": 36, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 21.0, "UPD": 10.0, "INS": 3.0, "MOV": 4.0, "DEL": 4.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.rule.errorprone.MoreThanOneLoggerRule.visit(net.sourceforge.pmd.lang.java.ast.ASTVariableDeclarator,java.lang.Object)", "net.sourceforge.pmd.lang.java.rule.errorprone.MoreThanOneLoggerRule"]}, {"title": "[java] NPE in PMD 5.8.1 InvalidSlf4jMessageFormat", "body": "**Rule Set:**\r\n`<rule ref=\"rulesets/java/logging-java.xml/InvalidSlf4jMessageFormat\"/>`\r\n\r\n**Description:**\r\nThe following error is printed:\r\n```\r\nException applying rule InvalidSlf4jMessageFormat on file [...]/LoggerHelper.java, continuing with next rule\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.rule.logging.InvalidSlf4jMessageFormatRule.expectedArguments(InvalidSlf4jMessageFormatRule.java:161)\r\n\tat net.sourceforge.pmd.lang.java.rule.logging.InvalidSlf4jMessageFormatRule.visit(InvalidSlf4jMessageFormatRule.java:76)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTName.jjtAccept(ASTName.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:75)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:380)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryPrefix.jjtAccept(ASTPrimaryPrefix.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:75)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:376)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic class LoggerHelper {\r\n    public LoggerHelper(int entriesCount, long sleepingInterval, String loggerName, String message) {\r\n        Logger logger = LoggerFactory.getLogger(loggerName);\r\n\r\n        for (int i = 0; i < entriesCount; i++) {\r\n            logger.info(message);\r\n\r\n            try {\r\n                Thread.sleep(sleepingInterval);\r\n            }\r\n            catch(InterruptedException e) {\r\n                // nothing to do here!\r\n            }\r\n        }\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        if (args.length != 4) {\r\n            System.err.println(\"Invalid command line parameters ...\");\r\n            System.out.println(\"USAGE: LoggerHelper <count of log entries> <sleeping interval> <logger-name> <message>\");\r\n            System.exit(-1);\r\n        }\r\n\r\n        int entriesCount = Integer.parseInt(args[0]);\r\n        long sleepingInterval = Long.parseLong(args[1]);\r\n        String loggerName = args[2];\r\n        String logMessage = args[3];\r\n\r\n        new LoggerHelper(entriesCount, sleepingInterval, loggerName, logMessage);\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *Gradle*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/721", "user": "huxi", "labels": ["a:bug", "has:pr"], "created": "2017-11-08 15:43:24", "closed": "2017-11-11 22:14:58", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[java] Unused Code: Java 8 receiver parameter with an internal class", "body": "**Rule Set:**\r\n\r\nrule set: Unused Code\r\nrule: [UnusedFormalParameter](https://pmd.github.io/latest/pmd_rules_java_bestpractices.html#unusedformalparameter) + [UnusedPrivateMethod](https://pmd.github.io/latest/pmd_rules_java_bestpractices.html#unusedprivatemethod)\r\n\r\n**Description:**\r\n\r\nJava 8 introduced the receiver parameter.\r\nThe relevant part of the Java Language Specification is [here][JLS-RP].\r\n\r\n> Either way, the receiver parameter exists solely to allow the type of the represented object to be denoted in source code, so that the type may be annotated. The receiver parameter is not a formal parameter; more precisely, it is not a declaration of any kind of variable (\u00a74.12.3), it is never bound to any value passed as an argument in a method invocation expression or qualified class instance creation expression, and it has no effect whatsoever at run time.\r\n\r\nThe receiver parameter itself is (at least it seems so) recognized correctly by PMD.\r\n\r\nAlso a non-static member class that is using a private method that is not called by another code is correctly identified and so no \"unused private method\" are complained.\r\n\r\nBut if we combine the Java 8 receiver parameter and a call of an inner class to an outer class method, there seems to be something wrong.\r\n\r\nWRT the example below:\r\nNo error is detected if:\r\n* method `test` will be changed from `private` to `protected`\r\n* the receiver parameter is removed from the method\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```Java\r\nimport java.lang.annotation.ElementType;\r\nimport java.lang.annotation.Target;\r\n\r\npublic class ReceiverParameter {\r\n\r\n    @Target(ElementType.TYPE_USE)\r\n    public @interface AnnotatedUsage {\r\n    }\r\n\r\n    private class Intern {\r\n        public void foo() {\r\n            test(true, false);\r\n        }\r\n    }\r\n\r\n    private final Intern intern;\r\n\r\n    public ReceiverParameter() {\r\n        this.intern = new Intern();\r\n    }\r\n\r\n    public void foo() {\r\n        intern.foo();\r\n    }\r\n\r\n    private boolean test(@AnnotatedUsage ReceiverParameter this,final boolean foo, final boolean bar) {\r\n        return foo == bar;\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:**\r\n\r\nCLI\r\n\r\nThe error has been previously detected by a project using Maven build system. I created a small example and use the command line, so it could be tested easily.\r\n\r\nCommand line:\r\n\r\n```sh\r\npmd-bin-5.8.1/bin/run.sh pmd -d ReceiverParameter.java -f xml -l java -R rulesets/java/unusedcode.xml\r\n```\r\n\r\nOutput:\r\n\r\n```xml\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<pmd version=\"5.8.1\" timestamp=\"2017-11-07T15:28:09.630\">\r\n<file name=\"/home/rathgeb/tmp/pmd/ReceiverParameter.java\">\r\n<violation beginline=\"26\" endline=\"26\" begincolumn=\"60\" endcolumn=\"63\" rule=\"UnusedFormalParameter\" ruleset=\"Unused Code\" class=\"ReceiverParameter\" method=\"test\" variable=\"this\" externalInfoUrl=\"https://pmd.github.io/pmd-5.8.1/pmd-java/rules/java/unusedcode.html#UnusedFormalParameter\" priority=\"3\">\r\nAvoid unused method parameters such as 'this'.\r\n</violation>\r\n<violation beginline=\"26\" endline=\"26\" begincolumn=\"21\" endcolumn=\"101\" rule=\"UnusedPrivateMethod\" ruleset=\"Unused Code\" class=\"ReceiverParameter\" method=\"test\" externalInfoUrl=\"https://pmd.github.io/pmd-5.8.1/pmd-java/rules/java/unusedcode.html#UnusedPrivateMethod\" priority=\"3\">\r\nAvoid unused private methods such as 'test(ReceiverParameter,boolean,boolean)'.\r\n</violation>\r\n</file>\r\n</pmd>\r\n```\r\n\r\n[JLS-RP]: https://docs.oracle.com/javase/specs/jls/se8/html/jls-8.html#jls-8.4.1-220\r\n", "url": "https://github.com/pmd/pmd/issues/719", "user": "maggu2810", "labels": ["a:bug", "has:pr", "in:symbol-table"], "created": "2017-11-07 14:30:32", "closed": "2018-04-04 00:33:18", "commits": {}, "ttf": 147.00027777777777, "commitsDetails": []}, {"title": "[java] Badly formated UTF-8 report from Chinese text", "body": "when i run the pmd5.8.0 with the xml result output report and use this report, i occur a error below:\r\n![image](https://user-images.githubusercontent.com/11549103/32217360-b56020a6-be62-11e7-9c81-0f4a210bb67b.png)\r\n", "url": "https://github.com/pmd/pmd/issues/698", "user": "cyw3", "labels": ["a:bug"], "created": "2017-10-31 09:43:30", "closed": "2017-11-27 14:17:20", "commits": {}, "ttf": 27.00027777777778, "commitsDetails": []}, {"title": "[plsql] Parse error with Cursor For Loop", "body": "As per https://stackoverflow.com/questions/46883415/error-while-parsing-pkb-file\r\n\r\n**Description:**\r\n\r\n![image](https://user-images.githubusercontent.com/802626/31904162-d0e259ba-b800-11e7-88b7-e377f0ef001b.png)\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n        FOR sum_res IN (SELECT SUM(loss_reserve) loss_reserve,\r\n                               SUM(expense_reserve) exp_reserve\r\n                          FROM gicl_clm_reserve a, gicl_item_peril b\r\n                         WHERE a.claim_id = b.claim_id\r\n                           AND a.item_no  = b.item_no\r\n                           AND a.peril_cd = b.peril_cd\r\n                           AND a.claim_id = p_claim_id\r\n                           AND (NVL(b.close_flag, 'AP') IN ('AP','CC','CP') OR \r\n                                NVL(b.close_flag2, 'AP') IN ('AP','CC','CP')))\r\n        LOOP\r\n           v_loss_res_amt  := sum_res.loss_reserve;\r\n           v_exp_res_amt   := sum_res.exp_reserve;\r\n        END LOOP;\r\n```\r\n\r\n**Running PMD through:** Any\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/681", "user": "jsotuyod", "labels": ["a:bug", "has:pr"], "created": "2017-10-23 17:46:03", "closed": "2018-07-30 05:02:01", "commits": {}, "ttf": 279.0002777777778, "commitsDetails": []}, {"title": "[swift][cpd] Exception when running for Swift 4 code (KeyPath)", "body": "`cpd` stopped working after I migrated the source code to Swift 4.\r\n\r\n*The problem*: `pmd cpd` quits with an exception.\r\n\r\nA full command showcasing the problem:\r\n`pmd cpd --language swift --minimum-tokens 50 --files source.swift`\r\n\r\nResult of running the command above:\r\n```\r\nnet.sourceforge.pmd.lang.ast.TokenMgrError: Lexical error in file <path to file> at line 62, column 60.  Encountered: token recognition error at: '\\.'\r\n\tat net.sourceforge.pmd.cpd.SwiftTokenizer.tokenize(SwiftTokenizer.java:48)\r\n\tat net.sourceforge.pmd.cpd.CPD.addAndThrowLexicalError(CPD.java:142)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:137)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:107)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:69)\r\n\tat net.sourceforge.pmd.cpd.CPD.addDirectory(CPD.java:79)\r\n\tat net.sourceforge.pmd.cpd.CPD.addRecursively(CPD.java:64)\r\n\tat net.sourceforge.pmd.cpd.CPDCommandLineInterface.addSourcesFilesToCPD(CPDCommandLineInterface.java:125)\r\n\tat net.sourceforge.pmd.cpd.CPDCommandLineInterface.addSourceFilesToCPD(CPDCommandLineInterface.java:105)\r\n\tat net.sourceforge.pmd.cpd.CPDCommandLineInterface.main(CPDCommandLineInterface.java:83)\r\n\tat net.sourceforge.pmd.cpd.CPD.main(CPD.java:177)\r\n```\r\n\r\nThe line of code for which `cpd` throws an exception is:\r\n```\r\nlet observation = scrollView.observe(\\.contentOffset, options: .new) { [weak self] (scrollView, _) in\r\n```\r\nAparently `cpd` cannot handle the [new Swift 4 syntax](http://skyefreeman.io/programming/2017/06/28/kvo-in-ios11.html) for KeyPath, which is **\\\\.**", "url": "https://github.com/pmd/pmd/issues/678", "user": "nalexn", "labels": ["a:bug", "has:pr", "in:cpd"], "created": "2017-10-19 18:18:49", "closed": "2018-04-25 04:43:22", "commits": {}, "ttf": 187.00027777777777, "commitsDetails": []}, {"title": "[java] ProcesingError analyzing code under 5.8.1", "body": "**Rule Set:**\r\n\r\n```xml\r\n<?xml version=\"1.0\"?>\r\n<ruleset name=\"CB4 PMD ruleset\"\r\n    xmlns=\"http://pmd.sourceforge.net/ruleset/2.0.0\"\r\n    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n    xsi:schemaLocation=\"http://pmd.sourceforge.net/ruleset/2.0.0 http://pmd.sourceforge.net/ruleset_2_0_0.xsd\">\r\n\r\n    <description>\r\n        This ruleset defines the PMD rules for CB project\r\n    </description>\r\n\r\n        <!-- See https://pmd.github.io/pmd-5.6.1/pmd-java/rules/index.html -->\r\n    <rule ref=\"rulesets/java/basic.xml/AvoidMultipleUnaryOperators\" />\r\n    <rule ref=\"rulesets/java/basic.xml/AvoidUsingOctalValues\" />\r\n    <rule ref=\"rulesets/java/basic.xml/BooleanInstantiation\" />\r\n    <rule ref=\"rulesets/java/basic.xml/BrokenNullCheck\" />\r\n    <rule ref=\"rulesets/java/basic.xml/ExtendsObject\" />\r\n    <rule ref=\"rulesets/java/basic.xml/MisplacedNullCheck\" />\r\n    <rule ref=\"rulesets/java/basic.xml/OverrideBothEqualsAndHashcode\" />\r\n    <rule ref=\"rulesets/java/basic.xml/ReturnFromFinallyBlock\" />\r\n    <rule ref=\"rulesets/java/basic.xml/UnconditionalIfStatement\" />\r\n\r\n    <rule ref=\"rulesets/java/braces.xml\" />\r\n\r\n    <rule ref=\"rulesets/java/clone.xml/ProperCloneImplementation\" />\r\n    <rule ref=\"rulesets/java/clone.xml/CloneMethodMustImplementCloneable\" />\r\n\r\n    <rule ref=\"rulesets/java/controversial.xml/AssignmentInOperand\" />\r\n    <rule ref=\"rulesets/java/controversial.xml/AtLeastOneConstructor\" />\r\n\r\n    <rule ref=\"rulesets/java/design.xml/UseNotifyAllInsteadOfNotify\" />\r\n\r\n    <rule ref=\"rulesets/java/empty.xml\">\r\n        <exclude name=\"EmptyCatchBlock\" />  <!-- Enforced by checkstyle -->\r\n    </rule>\r\n\r\n    <rule ref=\"rulesets/java/finalizers.xml\" />\r\n\r\n    <rule ref=\"rulesets/java/javabeans.xml/MissingSerialVersionUID\" />\r\n\r\n    <rule ref=\"rulesets/java/logging-java.xml/AvoidPrintStackTrace\" />\r\n</ruleset>\r\n```\r\n\r\n**Description:**\r\nAfter upgrading used PMD version from 5.6.1 to 5.8.1, Maven PMD plugin fails with no specific reason except Failed to process.... Furthermore, there is no PMD report or other file that indicates what is wrong.\r\n\r\n```\r\n$  mvn -X -Dpmd.verbose=true clean install\r\nMaven home: /home/lyor/Software/apache-maven-3.5.0\r\nJava version: 1.8.0_91, vendor: Oracle Corporation\r\nJava home: /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.91-2.b14.fc22.x86_64/jre\r\nDefault locale: en_US, platform encoding: UTF-8\r\nOS name: \"linux\", version: \"4.4.14-200.fc22.x86_64\", arch: \"amd64\", family: \"unix\"\r\n.....\r\n......\r\n[INFO] --- maven-pmd-plugin:3.8:pmd (pmd) @ cb4-common-util ---\r\n[DEBUG] Dependency collection stats: {ConflictMarker.analyzeTime=1, ConflictMarker.markTime=0, ConflictMarker.nodeCount=280, ConflictIdSorter.graphTime=0, ConflictIdSorter.topsortTime=0, ConflictIdSorter.conflictIdCount=70, ConflictIdSorter.conflictIdCycleCount=0, ConflictResolver.totalTime=2, ConflictResolver.conflictItemCount=152, DefaultDependencyCollector.collectTime=38, DefaultDependencyCollector.transformTime=3}\r\n[DEBUG] org.apache.maven.plugins:maven-pmd-plugin:jar:3.8:\r\n[DEBUG]    net.sourceforge.pmd:pmd-core:jar:5.8.1:runtime\r\n[DEBUG]       com.beust:jcommander:jar:1.48:runtime\r\n[DEBUG]       jaxen:jaxen:jar:1.1.6:runtime\r\n[DEBUG]       net.java.dev.javacc:javacc:jar:5.0:runtime\r\n[DEBUG]       net.sourceforge.saxon:saxon:jar:9.1.0.8:runtime\r\n[DEBUG]       org.apache.commons:commons-lang3:jar:3.4:runtime\r\n[DEBUG]       org.ow2.asm:asm:jar:5.0.4:runtime\r\n[DEBUG]       com.google.code.gson:gson:jar:2.5:runtime\r\n[DEBUG]       net.sourceforge.saxon:saxon:jar:dom:9.1.0.8:runtime\r\n[DEBUG]    net.sourceforge.pmd:pmd-java:jar:5.8.1:runtime\r\n[DEBUG]    net.sourceforge.pmd:pmd-javascript:jar:5.8.1:runtime\r\n[DEBUG]       org.mozilla:rhino:jar:1.7.7:runtime\r\n[DEBUG]    net.sourceforge.pmd:pmd-jsp:jar:5.8.1:runtime\r\n[DEBUG]    org.apache.maven:maven-artifact:jar:2.2.1:compile\r\n[DEBUG]    org.apache.maven:maven-model:jar:2.2.1:compile\r\n[DEBUG]    org.apache.maven:maven-plugin-api:jar:2.2.1:compile\r\n[DEBUG]    org.apache.maven:maven-project:jar:2.2.1:compile\r\n[DEBUG]       org.apache.maven:maven-settings:jar:2.2.1:compile\r\n[DEBUG]       org.apache.maven:maven-profile:jar:2.2.1:compile\r\n[DEBUG]       org.apache.maven:maven-artifact-manager:jar:2.2.1:compile\r\n[DEBUG]          org.apache.maven:maven-repository-metadata:jar:2.2.1:compile\r\n[DEBUG]          backport-util-concurrent:backport-util-concurrent:jar:3.1:compile\r\n[DEBUG]       org.apache.maven:maven-plugin-registry:jar:2.2.1:compile\r\n[DEBUG]       org.codehaus.plexus:plexus-interpolation:jar:1.11:compile\r\n[DEBUG]       org.codehaus.plexus:plexus-container-default:jar:1.0-alpha-9-stable-1:compile\r\n[DEBUG]          junit:junit:jar:3.8.1:compile\r\n[DEBUG]          classworlds:classworlds:jar:1.1-alpha-2:compile\r\n[DEBUG]    org.apache.maven.doxia:doxia-sink-api:jar:1.4:compile\r\n[DEBUG]       org.apache.maven.doxia:doxia-logging-api:jar:1.4:compile\r\n[DEBUG]    org.apache.maven.doxia:doxia-decoration-model:jar:1.4:compile\r\n[DEBUG]       org.codehaus.plexus:plexus-component-annotations:jar:1.6:compile\r\n[DEBUG]    org.apache.maven.doxia:doxia-site-renderer:jar:1.4:compile\r\n[DEBUG]       org.apache.maven.doxia:doxia-core:jar:1.4:compile\r\n[DEBUG]          xerces:xercesImpl:jar:2.9.1:compile\r\n[DEBUG]          commons-lang:commons-lang:jar:2.4:compile\r\n[DEBUG]       org.apache.maven.doxia:doxia-module-xhtml:jar:1.4:compile\r\n[DEBUG]       org.apache.maven.doxia:doxia-module-fml:jar:1.4:compile\r\n[DEBUG]       org.codehaus.plexus:plexus-i18n:jar:1.0-beta-7:compile\r\n[DEBUG]       org.codehaus.plexus:plexus-velocity:jar:1.1.7:compile\r\n[DEBUG]       org.apache.velocity:velocity:jar:1.5:compile\r\n[DEBUG]          oro:oro:jar:2.0.8:compile\r\n[DEBUG]       org.apache.velocity:velocity-tools:jar:2.0:compile\r\n[DEBUG]          commons-beanutils:commons-beanutils:jar:1.7.0:compile\r\n[DEBUG]          commons-digester:commons-digester:jar:1.8:compile\r\n[DEBUG]          commons-chain:commons-chain:jar:1.1:compile\r\n[DEBUG]          sslext:sslext:jar:1.2-0:compile\r\n[DEBUG]          org.apache.struts:struts-core:jar:1.3.8:compile\r\n[DEBUG]             antlr:antlr:jar:2.7.2:compile\r\n[DEBUG]          org.apache.struts:struts-taglib:jar:1.3.8:compile\r\n[DEBUG]          org.apache.struts:struts-tiles:jar:1.3.8:compile\r\n[DEBUG]       commons-collections:commons-collections:jar:3.2.1:compile\r\n[DEBUG]    org.apache.maven.reporting:maven-reporting-api:jar:3.0:compile\r\n[DEBUG]    org.apache.maven.reporting:maven-reporting-impl:jar:2.3:compile\r\n[DEBUG]       org.apache.maven.shared:maven-shared-utils:jar:0.6:compile\r\n[DEBUG]          com.google.code.findbugs:jsr305:jar:2.0.1:compile\r\n[DEBUG]       commons-validator:commons-validator:jar:1.3.1:compile\r\n[DEBUG]    org.codehaus.plexus:plexus-resources:jar:1.0.1:compile\r\n[DEBUG]    org.codehaus.plexus:plexus-utils:jar:3.0.24:compile\r\n[DEBUG]    org.apache.httpcomponents:httpclient:jar:4.3.5:compile\r\n[DEBUG]       org.apache.httpcomponents:httpcore:jar:4.3.2:compile\r\n[DEBUG]       commons-logging:commons-logging:jar:1.1.3:compile\r\n[DEBUG]       commons-codec:commons-codec:jar:1.6:compile\r\n[DEBUG]    commons-io:commons-io:jar:2.5:compile\r\n[DEBUG] Created new class realm plugin>org.apache.maven.plugins:maven-pmd-plugin:3.8\r\n[DEBUG] Importing foreign packages into class realm plugin>org.apache.maven.plugins:maven-pmd-plugin:3.8\r\n[DEBUG]   Imported:  < maven.api\r\n[DEBUG] Populating class realm plugin>org.apache.maven.plugins:maven-pmd-plugin:3.8\r\n[DEBUG]   Included: org.apache.maven.plugins:maven-pmd-plugin:jar:3.8\r\n[DEBUG]   Included: net.sourceforge.pmd:pmd-core:jar:5.8.1\r\n[DEBUG]   Included: com.beust:jcommander:jar:1.48\r\n[DEBUG]   Included: jaxen:jaxen:jar:1.1.6\r\n[DEBUG]   Included: net.java.dev.javacc:javacc:jar:5.0\r\n[DEBUG]   Included: net.sourceforge.saxon:saxon:jar:9.1.0.8\r\n[DEBUG]   Included: org.apache.commons:commons-lang3:jar:3.4\r\n[DEBUG]   Included: org.ow2.asm:asm:jar:5.0.4\r\n[DEBUG]   Included: com.google.code.gson:gson:jar:2.5\r\n[DEBUG]   Included: net.sourceforge.saxon:saxon:jar:dom:9.1.0.8\r\n[DEBUG]   Included: net.sourceforge.pmd:pmd-java:jar:5.8.1\r\n[DEBUG]   Included: net.sourceforge.pmd:pmd-javascript:jar:5.8.1\r\n[DEBUG]   Included: org.mozilla:rhino:jar:1.7.7\r\n[DEBUG]   Included: net.sourceforge.pmd:pmd-jsp:jar:5.8.1\r\n[DEBUG]   Included: backport-util-concurrent:backport-util-concurrent:jar:3.1\r\n[DEBUG]   Included: org.codehaus.plexus:plexus-interpolation:jar:1.11\r\n[DEBUG]   Included: junit:junit:jar:3.8.1\r\n[DEBUG]   Included: org.apache.maven.doxia:doxia-sink-api:jar:1.4\r\n[DEBUG]   Included: org.apache.maven.doxia:doxia-logging-api:jar:1.4\r\n[DEBUG]   Included: org.apache.maven.doxia:doxia-decoration-model:jar:1.4\r\n[DEBUG]   Included: org.codehaus.plexus:plexus-component-annotations:jar:1.6\r\n[DEBUG]   Included: org.apache.maven.doxia:doxia-site-renderer:jar:1.4\r\n[DEBUG]   Included: org.apache.maven.doxia:doxia-core:jar:1.4\r\n[DEBUG]   Included: xerces:xercesImpl:jar:2.9.1\r\n[DEBUG]   Included: commons-lang:commons-lang:jar:2.4\r\n[DEBUG]   Included: org.apache.maven.doxia:doxia-module-xhtml:jar:1.4\r\n[DEBUG]   Included: org.apache.maven.doxia:doxia-module-fml:jar:1.4\r\n[DEBUG]   Included: org.codehaus.plexus:plexus-i18n:jar:1.0-beta-7\r\n[DEBUG]   Included: org.codehaus.plexus:plexus-velocity:jar:1.1.7\r\n[DEBUG]   Included: org.apache.velocity:velocity:jar:1.5\r\n[DEBUG]   Included: oro:oro:jar:2.0.8\r\n[DEBUG]   Included: org.apache.velocity:velocity-tools:jar:2.0\r\n[DEBUG]   Included: commons-beanutils:commons-beanutils:jar:1.7.0\r\n[DEBUG]   Included: commons-digester:commons-digester:jar:1.8\r\n[DEBUG]   Included: commons-chain:commons-chain:jar:1.1\r\n[DEBUG]   Included: sslext:sslext:jar:1.2-0\r\n[DEBUG]   Included: org.apache.struts:struts-core:jar:1.3.8\r\n[DEBUG]   Included: antlr:antlr:jar:2.7.2\r\n[DEBUG]   Included: org.apache.struts:struts-taglib:jar:1.3.8\r\n[DEBUG]   Included: org.apache.struts:struts-tiles:jar:1.3.8\r\n[DEBUG]   Included: commons-collections:commons-collections:jar:3.2.1\r\n[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-api:jar:3.0\r\n[DEBUG]   Included: org.apache.maven.reporting:maven-reporting-impl:jar:2.3\r\n[DEBUG]   Included: org.apache.maven.shared:maven-shared-utils:jar:0.6\r\n[DEBUG]   Included: com.google.code.findbugs:jsr305:jar:2.0.1\r\n[DEBUG]   Included: commons-validator:commons-validator:jar:1.3.1\r\n[DEBUG]   Included: org.codehaus.plexus:plexus-resources:jar:1.0.1\r\n[DEBUG]   Included: org.codehaus.plexus:plexus-utils:jar:3.0.24\r\n[DEBUG]   Included: org.apache.httpcomponents:httpclient:jar:4.3.5\r\n[DEBUG]   Included: org.apache.httpcomponents:httpcore:jar:4.3.2\r\n[DEBUG]   Included: commons-logging:commons-logging:jar:1.1.3\r\n[DEBUG]   Included: commons-codec:commons-codec:jar:1.6\r\n[DEBUG]   Included: commons-io:commons-io:jar:2.5\r\n[DEBUG] Configuring mojo org.apache.maven.plugins:maven-pmd-plugin:3.8:pmd from plugin realm ClassRealm[plugin>org.apache.maven.plugins:maven-pmd-plugin:3.8, parent: sun.misc.Launcher$AppClassLoader@70dea4e]\r\n[DEBUG] Setting property: classpath.resource.loader.class => 'org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader'.\r\n[DEBUG] Setting property: site.resource.loader.class => 'org.codehaus.plexus.velocity.SiteResourceLoader'.\r\n[DEBUG] Setting property: velocimacro.messages.on => 'false'.\r\n[DEBUG] Setting property: resource.loader => 'classpath,site'.\r\n[DEBUG] Setting property: runtime.log.invalid.references => 'false'.\r\n[DEBUG] Setting property: resource.manager.logwhenfound => 'false'.\r\n[DEBUG] Setting property: velocimacro.permissions.allow.inline.to.replace.global => 'true'.\r\n[DEBUG] *******************************************************************\r\n[DEBUG] Starting Apache Velocity v1.5 (compiled: 2007-02-22 08:52:29)\r\n[DEBUG] RuntimeInstance initializing.\r\n[DEBUG] Default Properties File: org/apache/velocity/runtime/defaults/velocity.properties\r\n[DEBUG] LogSystem has been deprecated. Please use a LogChute implementation.\r\n[DEBUG] Default ResourceManager initializing. (class org.apache.velocity.runtime.resource.ResourceManagerImpl)\r\n[DEBUG] ResourceLoader instantiated: org.codehaus.plexus.velocity.ContextClassLoaderResourceLoader\r\n[DEBUG] ResourceLoader instantiated: org.codehaus.plexus.velocity.SiteResourceLoader\r\n[DEBUG] ResourceCache: initialized (class org.apache.velocity.runtime.resource.ResourceCacheImpl)\r\n[DEBUG] Default ResourceManager initialization complete.\r\n[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Literal\r\n[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Macro\r\n[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Parse\r\n[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Include\r\n[DEBUG] Loaded System Directive: org.apache.velocity.runtime.directive.Foreach\r\n[DEBUG] Created '20' parsers.\r\n[DEBUG] Velocimacro : initialization starting.\r\n[DEBUG] Velocimacro : allowInline = true : VMs can be defined inline in templates\r\n[DEBUG] Velocimacro : allowInlineToOverride = true : VMs defined inline may replace previous VM definitions\r\n[DEBUG] Velocimacro : allowInlineLocal = false : VMs defined inline will be global in scope if allowed.\r\n[DEBUG] Velocimacro : autoload off : VM system will not automatically reload global library macros\r\n[DEBUG] Velocimacro : Velocimacro : initialization complete.\r\n[DEBUG] RuntimeInstance successfully initialized.\r\n[DEBUG] Configuring mojo 'org.apache.maven.plugins:maven-pmd-plugin:3.8:pmd' with basic configurator -->\r\n[DEBUG]   (f) aggregate = false\r\n[DEBUG]   (f) analysisCache = false\r\n[DEBUG]   (f) analysisCacheLocation = /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/pmd/pmd.cache\r\n[DEBUG]   (f) benchmark = false\r\n[DEBUG]   (f) benchmarkOutputFilename = /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/pmd-benchmark.txt\r\n[DEBUG]   (f) compileSourceRoots = [/home/lyor/workspace/C-B4-Server/commons/cb4-common-util/src/main/java, /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/generated-sources/annotations]\r\n[DEBUG]   (f) excludeRoots = [/home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/generated-sources/java]\r\n[DEBUG]   (f) format = xml\r\n[DEBUG]   (f) includeTests = true\r\n[DEBUG]   (f) includeXmlInSite = false\r\n[DEBUG]   (f) inputEncoding = UTF-8\r\n[DEBUG]   (f) language = java\r\n[DEBUG]   (f) linkXRef = true\r\n[DEBUG]   (f) minimumPriority = 5\r\n[DEBUG]   (f) outputDirectory = /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/site\r\n[DEBUG]   (f) outputEncoding = UTF-8\r\n[DEBUG]   (f) project = MavenProject: com.cb4.commons:cb4-common-util:3.2.19-SNAPSHOT @ /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/pom.xml\r\n[DEBUG]   (f) reactorProjects = [MavenProject: com.cb4.commons:cb4-common-util:3.2.19-SNAPSHOT @ /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/pom.xml]\r\n[DEBUG]   (s) rulesets = [file:/home/lyor/workspace/C-B4-Server/pmd-ruleset-cb4.xml]\r\n[DEBUG]   (f) skip = false\r\n[DEBUG]   (f) skipEmptyReport = true\r\n[DEBUG]   (f) skipPmdError = false\r\n[DEBUG]   (f) sourceEncoding = UTF-8\r\n[DEBUG]   (f) targetDirectory = /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target\r\n[DEBUG]   (f) targetJdk = 1.8\r\n[DEBUG]   (f) testSourceRoots = [/home/lyor/workspace/C-B4-Server/commons/cb4-common-util/src/test/java, /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/generated-test-sources/test-annotations]\r\n[DEBUG]   (f) typeResolution = true\r\n[DEBUG]   (f) xrefLocation = /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/site/xref\r\n[DEBUG]   (f) xrefTestLocation = /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/site/xref-test\r\n[DEBUG] -- end configuration --\r\n[DEBUG] Using language LanguageModule:Java(JavaLanguageModule)+version:1.8\r\n[DEBUG] Using aux classpath: [/home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/test-classes, /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/classes, /home/lyor/.m2/repository/org/apache/commons/commons-lang3/3.6/commons-lang3-3.6.jar, /home/lyor/.m2/repository/org/apache/commons/commons-text/1.1/commons-text-1.1.jar, /home/lyor/.m2/repository/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar, /home/lyor/.m2/repository/commons-io/commons-io/2.5/commons-io-2.5.jar, /home/lyor/.m2/repository/commons-cli/commons-cli/1.4/commons-cli-1.4.jar, /home/lyor/.m2/repository/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /home/lyor/.m2/repository/org/apache/commons/commons-collections4/4.1/commons-collections4-4.1.jar, /home/lyor/.m2/repository/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar, /home/lyor/.m2/repository/com/opencsv/opencsv/3.10/opencsv-3.10.jar, /home/lyor/.m2/repository/commons-beanutils/commons-beanutils/1.9.3/commons-beanutils-1.9.3.jar, /home/lyor/.m2/repository/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, /home/lyor/.m2/repository/com/univocity/univocity-parsers/2.5.6/univocity-parsers-2.5.6.jar, /home/lyor/.m2/repository/com/fasterxml/jackson/dataformat/jackson-dataformat-csv/2.9.1/jackson-dataformat-csv-2.9.1.jar, /home/lyor/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.9.1/jackson-annotations-2.9.1.jar, /home/lyor/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.9.1/jackson-core-2.9.1.jar, /home/lyor/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.9.1/jackson-databind-2.9.1.jar, /home/lyor/.m2/repository/com/google/guava/guava/19.0/guava-19.0.jar, /home/lyor/.m2/repository/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar, /home/lyor/.m2/repository/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar, /home/lyor/.m2/repository/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar, /home/lyor/.m2/repository/junit/junit/4.12/junit-4.12.jar, /home/lyor/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /home/lyor/.m2/repository/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar]\r\n[DEBUG] Preparing ruleset: file:/home/lyor/workspace/C-B4-Server/pmd-ruleset-cb4.xml\r\n[DEBUG] Before: file:/home/lyor/workspace/C-B4-Server/pmd-ruleset-cb4.xml After: pmd-ruleset-cb4.xml\r\n[DEBUG] URLResourceLoader: Found 'file:/home/lyor/workspace/C-B4-Server/pmd-ruleset-cb4.xml' at ''\r\n[DEBUG] The resource 'file:/home/lyor/workspace/C-B4-Server/pmd-ruleset-cb4.xml' was found as file:/home/lyor/workspace/C-B4-Server/pmd-ruleset-cb4.xml.\r\n[DEBUG] Exclusions: **/*~,**/#*#,**/.#*,**/%*%,**/._*,**/CVS,**/CVS/**,**/.cvsignore,**/RCS,**/RCS/**,**/SCCS,**/SCCS/**,**/vssver.scc,**/project.pj,**/.svn,**/.svn/**,**/.arch-ids,**/.arch-ids/**,**/.bzr,**/.bzr/**,**/.MySCMServerInfo,**/.DS_Store,**/.metadata,**/.metadata/**,**/.hg,**/.hgignore,**/.hg/**,**/.git,**/.gitignore,**/.gitattributes,**/.git/**,**/BitKeeper,**/BitKeeper/**,**/ChangeSet,**/ChangeSet/**,**/_darcs,**/_darcs/**,**/.darcsrepo,**/.darcsrepo/**,**/-darcs-backup*,**/.darcs-temp-mail\r\n[DEBUG] Inclusions: **/*.java\r\n[DEBUG] Searching for files in directory /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/src/main/java\r\n[DEBUG] Searching for files in directory /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/generated-sources/annotations\r\n[DEBUG] Searching for files in directory /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/src/test/java\r\n[DEBUG] Searching for files in directory /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/target/generated-test-sources/test-annotations\r\n[DEBUG] Executing PMD...\r\n[DEBUG] PMD finished. Found 0 violations.\r\n[ERROR] PMD processing errors:\r\n[ERROR] /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/src/test/java/com/cb4/common/utils/MapUtilsTest.java: Error while processing /home/lyor/workspace/C-B4-Server/commons/cb4-common-util/src/test/java/com/cb4/common/utils/MapUtilsTest.java\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] BUILD FAILURE\r\n[INFO] ------------------------------------------------------------------------\r\n[INFO] Total time: 37.248 s\r\n[INFO] Finished at: 2017-09-24T12:30:52+03:00\r\n[INFO] Final Memory: 64M/1305M\r\n[INFO] ------------------------------------------------------------------------\r\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-pmd-plugin:3.8:pmd (pmd) on project cb4-common-util: Execution pmd of goal org.apache.maven.plugins:maven-pmd-plugin:3.8:pmd failed: org.apache.maven.reporting.MavenReportException: Found 1 PMD processing errors -> [Help 1]\r\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-pmd-plugin:3.8:pmd (pmd) on project cb4-common-util: Execution pmd of goal org.apache.maven.plugins:maven-pmd-plugin:3.8:pmd failed: org.apache.maven.reporting.MavenReportException: Found 1 PMD processing errors\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:213)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.executeForkedExecutions(MojoExecutor.java:353)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:198)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:154)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:146)\r\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:117)\r\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:81)\r\n        at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\r\n        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)\r\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:309)\r\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:194)\r\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:107)\r\n        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:993)\r\n        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:345)\r\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:191)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\r\n        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\r\nCaused by: org.apache.maven.plugin.PluginExecutionException: Execution pmd of goal org.apache.maven.plugins:maven-pmd-plugin:3.8:pmd failed: org.apache.maven.reporting.MavenReportException: Found 1 PMD processing errors\r\n        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:145)\r\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\r\n        ... 24 more\r\nCaused by: java.lang.RuntimeException: org.apache.maven.reporting.MavenReportException: Found 1 PMD processing errors\r\n        at org.apache.maven.plugin.pmd.PmdReport.canGenerateReport(PmdReport.java:298)\r\n        at org.apache.maven.reporting.AbstractMavenReport.execute(AbstractMavenReport.java:119)\r\n        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)\r\n        ... 25 more\r\nCaused by: org.apache.maven.reporting.MavenReportException: Found 1 PMD processing errors\r\n        at org.apache.maven.plugin.pmd.PmdReport.executePmd(PmdReport.java:420)\r\n        at org.apache.maven.plugin.pmd.PmdReport.executePmdWithClassloader(PmdReport.java:311)\r\n        at org.apache.maven.plugin.pmd.PmdReport.canGenerateReport(PmdReport.java:285)\r\n        ... 27 more\r\n```\r\n\r\nP.S. The file that it complains about (see code sample below) passes without a problem for version 5.6.1.. I initially opened [MPMD-244 Maven issue](https://issues.apache.org/jira/browse/MPMD-244) but they advised me that it seems to be a PMD issue\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npackage com.cb4.common.utils;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Arrays;\r\nimport java.util.Collection;\r\nimport java.util.Collections;\r\nimport java.util.Comparator;\r\nimport java.util.Date;\r\nimport java.util.HashMap;\r\nimport java.util.LinkedHashMap;\r\nimport java.util.LinkedList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\nimport java.util.NavigableMap;\r\nimport java.util.Objects;\r\nimport java.util.Properties;\r\nimport java.util.Random;\r\nimport java.util.TreeMap;\r\nimport java.util.function.Predicate;\r\n\r\nimport org.apache.commons.collections4.Transformer;\r\nimport org.apache.commons.lang3.math.NumberUtils;\r\nimport org.apache.commons.lang3.tuple.Pair;\r\nimport org.junit.FixMethodOrder;\r\nimport org.junit.Test;\r\nimport org.junit.runners.MethodSorters;\r\nimport org.mockito.Mockito;\r\nimport org.mockito.invocation.InvocationOnMock;\r\nimport org.mockito.stubbing.Answer;\r\n\r\nimport com.cb4.common.test.JUnitTestSupport;\r\n\r\n@FixMethodOrder(MethodSorters.NAME_ASCENDING)\r\npublic class MapUtilsTest extends JUnitTestSupport {\r\n    public MapUtilsTest() {\r\n        super();\r\n    }\r\n\r\n    @Test\r\n    public void testPutUniqueValuesForNoSource() {\r\n        @SuppressWarnings(\"unchecked\")\r\n        Map<Object, Object>[] maps = new Map[] { null, Collections.emptyMap() };\r\n        for (Map<Object, Object> dst : maps) {\r\n            for (Map<?, ?> src : maps) {\r\n                assertSame(\"Mismatched result for src=\" + src + \", dst=\" + dst, dst, MapUtils.putUniqueValues(src, dst));\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test(expected = IllegalStateException.class)\r\n    public void testPutUniqueValuesWithDuplicates() {\r\n        Map<Object, Object> dst = new HashMap<>(Collections.singletonMap(\"test\", getCurrentTestName()));\r\n        assertSame(\"Mismatched result for self update\", dst, MapUtils.putUniqueValues(dst, dst));\r\n\r\n        for (Map.Entry<?, ?> de : dst.entrySet()) {\r\n            Map<?, ?> result = MapUtils.putUniqueValues(Collections.singletonMap(de.getKey(), de.getValue()), dst);\r\n            fail(\"Unexpected success for entry=\" + de + \": \" + result);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testPutUniqueValues() {\r\n        final Class<?> anchor = getClass();\r\n        Map<String, String> extra = new TreeMap<String, String>() {\r\n            // Not serializing it\r\n            private static final long serialVersionUID = 1L;\r\n\r\n            {\r\n                put(\"class\", anchor.getSimpleName());\r\n                put(\"package\", anchor.getPackage().getName());\r\n                put(\"test\", getCurrentTestName());\r\n            }\r\n        };\r\n\r\n        Map<String, String> original = Collections.singletonMap(\"now\", new Date().toString());\r\n        Map<String, String> dest = new HashMap<>(original);\r\n        // NOTE: we use a hash map on purpose so we get a map with different keys order than original\r\n        Map<String, String> merged = MapUtils.putUniqueValues(extra, dest);\r\n        assertSame(\"Not same destination result\", dest, merged);\r\n        assertEquals(\"Mismatched merged size\", extra.size() + original.size(), merged.size());\r\n\r\n        for (@SuppressWarnings(\"unchecked\")\r\n        Map<String, String> m : new Map[] { original, extra }) {\r\n            for (Map.Entry<String, String> me : m.entrySet()) {\r\n                String key = me.getKey();\r\n                String expected = me.getValue();\r\n                String actual = merged.get(key);\r\n                assertEquals(\"Mismatched merged result for key=\" + key, expected, actual);\r\n            }\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testSort() {\r\n        Map<Integer, String> map = new HashMap<>();\r\n        map.put(5, \"aa\");\r\n        map.put(1, \"ss\");\r\n        map.put(3, \"ww\");\r\n\r\n        Map<Integer, String> actualMap = MapUtils.sort(map);\r\n\r\n        Map<Integer, String> expectedMap = new LinkedHashMap<>();\r\n        expectedMap.put(1, \"ss\");\r\n        expectedMap.put(3, \"ww\");\r\n        expectedMap.put(5, \"aa\");\r\n\r\n        assertEquals(expectedMap, actualMap);\r\n    }\r\n\r\n    @Test\r\n    public void testAddValuesToMap() {\r\n        Map<Integer, ArrayList<String>> map = new HashMap<>();\r\n        MapUtils.addValueToMapList(map, 5, \"aa\");\r\n        assertTrue(\"Missing '5' key\", map.containsKey(5));\r\n        assertTrue(\"Missing 'aa' sub-key\", map.get(5).contains(\"aa\"));\r\n\r\n        MapUtils.addValueToMapList(map, 5, \"bb\");\r\n        assertTrue(\"Missing 2nd 'aa' sub-key\", map.get(5).contains(\"aa\"));\r\n        assertTrue(\"Missing 'bb' sub-key\", map.get(5).contains(\"bb\"));\r\n        MapUtils.addValueToMapList(map, 1, \"aa\");\r\n        assertTrue(\"Missing 'aa' sub-key of '1'\", map.get(1).contains(\"aa\"));\r\n    }\r\n\r\n    @Test\r\n    public void testSortKeys() {\r\n        Map<Integer, String> map = new HashMap<>();\r\n        map.put(5, \"aa\");\r\n        map.put(1, \"ss\");\r\n        map.put(3, \"ww\");\r\n\r\n        Map<Integer, String> actualMap = MapUtils.sort(map);\r\n        Map<Integer, String> expectedMap = new LinkedHashMap<>();\r\n        expectedMap.put(1, \"ss\");\r\n        expectedMap.put(3, \"ww\");\r\n        expectedMap.put(5, \"aa\");\r\n\r\n        assertEquals(expectedMap, actualMap);\r\n    }\r\n\r\n    @Test\r\n    public void testValuesSort() {\r\n        Map<Integer, String> map = new HashMap<>();\r\n        map.put(5, \"aa\");\r\n        map.put(1, \"ss\");\r\n        map.put(3, \"ww\");\r\n\r\n        Map<Integer, String> actualMap = MapUtils.sort(map);\r\n\r\n        Map<Integer, String> expectedMap = new LinkedHashMap<>();\r\n        expectedMap.put(5, \"aa\");\r\n        expectedMap.put(1, \"ss\");\r\n        expectedMap.put(3, \"ww\");\r\n\r\n        assertEquals(expectedMap, actualMap);\r\n    }\r\n\r\n    @Test\r\n    public void testRandomSortByValue() {\r\n        Random random = new Random(System.currentTimeMillis());\r\n        Map<String, Integer> testMap = new HashMap<>(1000);\r\n        for (int i = 0; i < 1000; ++i) {\r\n            testMap.put(\"SomeString\" + random.nextInt(), random.nextInt());\r\n        }\r\n\r\n        testMap = MapUtils.sortByValues(testMap);\r\n        assertEquals(1000, testMap.size());\r\n\r\n        Integer previous = null;\r\n        for (Map.Entry<String, Integer> entry : testMap.entrySet()) {\r\n            assertNotNull(entry.getValue());\r\n            if (previous != null) {\r\n                assertTrue(entry.getValue() >= previous);\r\n            }\r\n            previous = entry.getValue();\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testByKeyComparator() {\r\n        Map<String, Object> original = new TreeMap<String, Object>(String.CASE_INSENSITIVE_ORDER) {\r\n            // not serializing it\r\n            private static final long serialVersionUID = 1L;\r\n\r\n            {\r\n                Class<?> anchor = getCurrentTestClass();\r\n                put(\"class\", anchor);\r\n                put(\"package\", anchor.getPackage());\r\n                put(\"method\", getCurrentTestName());\r\n                put(\"now\", new Date());\r\n                put(\"nanos\", Long.valueOf(System.nanoTime()));\r\n                put(\"pi\", Math.PI);\r\n            }\r\n        };\r\n        List<Map.Entry<String, Object>> expected = new ArrayList<>(original.entrySet());\r\n\r\n        Map<String, Object> hashed = new HashMap<>(original);\r\n        List<Map.Entry<String, Object>> actual = new ArrayList<>(hashed.entrySet());\r\n        Comparator<Map.Entry<String, Object>> comp = MapUtils.byKeyComparator(String.CASE_INSENSITIVE_ORDER);\r\n        Collections.sort(actual, comp);\r\n\r\n        assertListEquals(getCurrentTestName(), expected, actual);\r\n    }\r\n\r\n    @Test\r\n    public void testFlip() {\r\n        Map<String, Long> src = new TreeMap<String, Long>() {\r\n            private static final long serialVersionUID = -3686693573082540693L;\r\n\r\n            {\r\n                put(\"sysTime\", Long.valueOf(7365L));\r\n                put(\"nanoTime\", Long.valueOf(3777347L));\r\n            }\r\n        };\r\n\r\n        Map<Number, CharSequence> dst = MapUtils.flip(false, src, new HashMap<Number, CharSequence>(src.size()));\r\n        assertEquals(\"Mismatched size\", src.size(), dst.size());\r\n        for (Map.Entry<String, Long> se : src.entrySet()) {\r\n            String expected = se.getKey();\r\n            Long value = se.getValue();\r\n            CharSequence actual = dst.remove(value);\r\n            assertSame(\"Mismatched key for value=\" + value, expected, actual);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testFlipNullOrEmpty() {\r\n        Map<Object, Object> dst = Collections.unmodifiableMap(new HashMap<>());\r\n        assertSame(\"Mismatached instance for null source\", dst, MapUtils.flip(false, null, dst));\r\n        assertSame(\"Mismatached instance for empty source\", dst, MapUtils.flip(false, Collections.emptyMap(), dst));\r\n    }\r\n\r\n    @Test(expected = IllegalStateException.class)\r\n    public void testFlipOnDuplicateKeys() {\r\n        Map<String, String> map = new HashMap<>();\r\n        map.put(\"testName1\", getCurrentTestName());\r\n        map.put(\"testName2\", getCurrentTestName());\r\n\r\n        Map<String, String> flipped = MapUtils.flip(false, map, new TreeMap<String, String>());\r\n        fail(\"Unexpected success: \" + flipped);\r\n    }\r\n\r\n    @Test\r\n    public void testGetMandatoryValue() {\r\n        Map<String, Object> map = new HashMap<>();\r\n        map.put(\"A\", 1);\r\n        map.put(\"B\", 2);\r\n\r\n        for (Map.Entry<String, ?> me : map.entrySet()) {\r\n            String key = me.getKey();\r\n            Object expected = me.getValue();\r\n            Object actual = MapUtils.getMandatoryValue(map, key);\r\n            assertSame(\"Mismatched mandatory value instance for key=\" + key, expected, actual);\r\n        }\r\n    }\r\n\r\n    @Test(expected = NullPointerException.class)\r\n    public void testGetMandatoryValueWithoutValue() {\r\n        Map<String, Object> map = new HashMap<>();\r\n        map.put(\"A\", 1);\r\n        map.put(\"B\", 2);\r\n\r\n        Object mandatoryValue = MapUtils.getMandatoryValue(map, getCurrentTestName());\r\n        fail(\"Unexpected success: \" + mandatoryValue);\r\n    }\r\n\r\n    @Test(expected = NullPointerException.class)\r\n    public void testGetMandatoryValueWithEmptyMap() {\r\n        Map<String, Object> map = new HashMap<>();\r\n\r\n        Object mandatoryValue = MapUtils.getMandatoryValue(map, getCurrentTestName());\r\n        fail(\"Unexpected success: \" + mandatoryValue);\r\n    }\r\n\r\n    @Test\r\n    public void testGetMandatoryIntValue() {\r\n        Map<String, Object> map = new HashMap<>();\r\n        map.put(\"A\", 1);\r\n        map.put(\"B\", \"2\");\r\n\r\n        int mandatoryIntValueA = MapUtils.getMandatoryIntValue(map, \"A\");\r\n        assertEquals(\"Mismatched value for the 'A' key\", 1, mandatoryIntValueA);\r\n        int mandatoryIntValueB = MapUtils.getMandatoryIntValue(map, \"B\");\r\n        assertEquals(\"Mismatched value for the 'B' key\", 2, mandatoryIntValueB);\r\n    }\r\n\r\n    @Test\r\n    public void testGetMandatoryDoubleValue() {\r\n        Map<String, Object> map = new HashMap<>();\r\n        map.put(\"A\", 1.2);\r\n        map.put(\"B\", \"2.2\");\r\n\r\n        double mandatoryIntValueA = MapUtils.getMandatoryDoubleValue(map, \"A\");\r\n        assertEquals(\"Mismatched value for the 'A' key\", 1.2, mandatoryIntValueA, 0);\r\n        double mandatoryIntValueB = MapUtils.getMandatoryDoubleValue(map, \"B\");\r\n        assertEquals(\"Mismatched value for the 'B' key\", 2.2, mandatoryIntValueB, 0);\r\n    }\r\n\r\n    @Test\r\n    public void testNestedLen() {\r\n        Map<String, Collection<Object>> mapOfColls = new HashMap<>();\r\n\r\n        Collection<Object> col1 = new ArrayList<>();\r\n        col1.add(1L);\r\n        col1.add(2L);\r\n\r\n        Collection<Object> col2 = new LinkedList<>();\r\n        col2.add(1L);\r\n        col2.add(2L);\r\n        col2.add(3L);\r\n\r\n        mapOfColls.put(\"a\", col1);\r\n        mapOfColls.put(\"b\", col2);\r\n        assertEquals(\"Mismatched nested entries count\", 5, MapUtils.nestedLen(mapOfColls));\r\n    }\r\n\r\n    @Test\r\n    public void testEmptyNestedLen() {\r\n        assertEquals(\"Mismatched empty nested entries count\", 0, MapUtils.nestedLen(new HashMap<String, Collection<Object>>()));\r\n    }\r\n\r\n    @Test\r\n    public void testNullNestedLen() {\r\n        assertEquals(\"Mismatched null 0 nested entries count\", 0, MapUtils.nestedLen((Map<String, Collection<Object>>) null));\r\n    }\r\n\r\n    @Test\r\n    public void testClearNullOrEmptyMap() {\r\n        assertNull(\"Unexpected null map clear result\", MapUtils.clear(null));\r\n\r\n        @SuppressWarnings(\"unchecked\")\r\n        Map<String, String> expected = Mockito.mock(Map.class);\r\n        Mockito.when(expected.size()).thenReturn(NumberUtils.INTEGER_ZERO);\r\n        Mockito.when(expected.isEmpty()).thenReturn(Boolean.TRUE);\r\n        Mockito.when(expected.toString()).thenReturn(getCurrentTestName());\r\n        Mockito.doAnswer(new Answer<Void>() {\r\n            @Override\r\n            public Void answer(InvocationOnMock invocation) throws Throwable {\r\n                fail(\"Unexpected clear method invocation\");\r\n                return null;\r\n            }\r\n        }).when(expected).clear();\r\n\r\n        Map<String, String> actual = MapUtils.clear(expected);\r\n        assertSame(\"Mismatched cleared result reference\", expected, actual);\r\n    }\r\n\r\n    @Test\r\n    public void testClearNonEmptyMap() {\r\n        Map<String, String> expected = new TreeMap<String, String>(String.CASE_INSENSITIVE_ORDER) {\r\n            // Not serializing it\r\n            private static final long serialVersionUID = 1L;\r\n\r\n            {\r\n                put(\"testName\", getCurrentTestName());\r\n                put(\"className\", SafeUtils.safeShortName(getCurrentTestClass()));\r\n            }\r\n        };\r\n        Map<String, String> actual = MapUtils.clear(expected);\r\n        assertSame(\"Mismatched cleared result reference\", expected, actual);\r\n        assertTrue(\"Map not cleared\", actual.isEmpty());\r\n        assertEquals(\"Size not zeroed\", 0, actual.size());\r\n    }\r\n\r\n    @Test\r\n    public void testClearAndReplace() {\r\n        for (@SuppressWarnings(\"unchecked\")\r\n            Map<String, String> expected : new Map[] { null, Collections.emptyMap(), new TreeMap<String, String>(String.CASE_INSENSITIVE_ORDER) {\r\n                // Not serializing it\r\n                private static final long serialVersionUID = 1L;\r\n\r\n                {\r\n                    put(\"testName\", getCurrentTestName());\r\n                    put(\"className\", SafeUtils.safeShortName(getCurrentTestClass()));\r\n                }\r\n            } }) {\r\n            Map<String, String> original = new HashMap<String, String>() {\r\n                // Not serializing it\r\n                private static final long serialVersionUID = 1L;\r\n\r\n                {\r\n                    put(\"expected\", Objects.toString(expected));\r\n                }\r\n            };\r\n\r\n            Map<String, String> actual = MapUtils.clearAndReplace(original, expected);\r\n            assertTrue(\"Original not cleared: \" + original, original.isEmpty());\r\n            assertSame(\"Mismatched replacement\", expected, actual);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testKeyExtractor() {\r\n        Map<String, Object> map = new TreeMap<String, Object>() {\r\n            // Not serializing it\r\n            private static final long serialVersionUID = 1L;\r\n\r\n            {\r\n                put(\"testName\", getCurrentTestName());\r\n                put(\"className\", getCurrentTestClass());\r\n            }\r\n        };\r\n\r\n        Transformer<Map.Entry<String, Object>, String> keyExtractor = MapUtils.keyExtractor();\r\n        for (Map.Entry<String, Object> entry : map.entrySet()) {\r\n            String expected = entry.getKey();\r\n            String actual = keyExtractor.transform(entry);\r\n            assertSame(expected, actual);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testValueExtractor() {\r\n        Map<String, Object> map = new TreeMap<String, Object>() {\r\n            // Not serializing it\r\n            private static final long serialVersionUID = 1L;\r\n\r\n            {\r\n                put(\"testName\", getCurrentTestName());\r\n                put(\"className\", getCurrentTestClass());\r\n            }\r\n        };\r\n\r\n        Transformer<Map.Entry<String, Object>, Object> valueExtractor = MapUtils.valueExtractor();\r\n        for (Map.Entry<String, Object> entry : map.entrySet()) {\r\n            String key = entry.getKey();\r\n            Object expected = entry.getValue();\r\n            Object actual = valueExtractor.transform(entry);\r\n            assertSame(key, expected, actual);\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testFilterByKey() {\r\n        String expectedKey = \"testName\";\r\n        Map<String, Object> map = new HashMap<String, Object>() {\r\n            // Not serializing it\r\n            private static final long serialVersionUID = 1L;\r\n\r\n            {\r\n                put(expectedKey, getCurrentTestName());\r\n                put(\"className\", getCurrentTestClass());\r\n            }\r\n        };\r\n\r\n        Map.Entry<String, Object> expEntry = Pair.of(expectedKey, map.get(expectedKey));\r\n        NavigableMap<String, Object> actual = MapUtils.filterByKey(map, k -> expectedKey.equals(k), TreeMap::new);\r\n        assertMapEquals(getCurrentTestName(), Collections.singletonMap(expEntry.getKey(), expEntry.getValue()), actual);\r\n\r\n        Map.Entry<String, Object> actEntry = SafeUtils.head(actual.entrySet());\r\n        assertSame(\"Mismatched key instance\", expEntry.getKey(), actEntry.getKey());\r\n        assertSame(\"Mismatched value instance\", expEntry.getValue(), actEntry.getValue());\r\n    }\r\n\r\n    @Test\r\n    public void testFilterByEntry() {\r\n        Map<Integer, Integer> map = new HashMap<>();\r\n        for (int index = 1; index <= Byte.SIZE; index++) {\r\n            map.put(index, index & 0x01);\r\n        }\r\n\r\n        Map<Integer, Integer> expected = new HashMap<>();\r\n        Predicate<Map.Entry<Integer, Integer>> selector = e -> (e.getKey() > 3) && (e.getKey() <= 7) && ((e.getValue() & 0x01) == 0);\r\n        map.forEach((key, value) -> {\r\n            if (selector.test(Pair.of(key, value))) {\r\n                expected.put(key, value);\r\n            }\r\n        });\r\n\r\n        Map<Integer, Integer> actual = MapUtils.filterByEntry(map, selector, TreeMap::new);\r\n        assertMapEquals(getCurrentTestName(), expected, actual);\r\n    }\r\n\r\n    @Test\r\n    public void testEqualPropertiesCaseSensitiveName() {\r\n        Properties p1 = new Properties() {\r\n            // Not serializing it\r\n            private static final long serialVersionUID = 1L;\r\n\r\n            {\r\n                setProperty(getCurrentTestName(), getCurrentTestName());\r\n\r\n                Class<?> c = getCurrentTestClass();\r\n                setProperty(c.getSimpleName(), c.getSimpleName());\r\n\r\n                Package pkg = c.getPackage();\r\n                setProperty(pkg.getName(), pkg.getName());\r\n            }\r\n        };\r\n\r\n        Properties p2 = new Properties();\r\n        for (String name : p1.stringPropertyNames()) {\r\n            String key = shuffleCase(name);\r\n            String value = p1.getProperty(name);\r\n            p2.setProperty(key, value);\r\n        }\r\n\r\n        assertFalse(\"Unexpected case sensitive equality\", MapUtils.equalProperties(p1, p2));\r\n        assertTrue(\"Non-equal case insensitive result\", MapUtils.equalProperties(p1, p2, String.CASE_INSENSITIVE_ORDER, Comparator.naturalOrder()));\r\n    }\r\n\r\n    @Test\r\n    public void testEqualPropertiesCaseSensitiveValue() {\r\n        Properties p1 = new Properties() {\r\n            // Not serializing it\r\n            private static final long serialVersionUID = 1L;\r\n\r\n            {\r\n                setProperty(getCurrentTestName(), getCurrentTestName());\r\n\r\n                Class<?> c = getCurrentTestClass();\r\n                setProperty(c.getSimpleName(), c.getSimpleName());\r\n\r\n                Package pkg = c.getPackage();\r\n                setProperty(pkg.getName(), pkg.getName());\r\n            }\r\n        };\r\n\r\n        Properties p2 = new Properties();\r\n        for (String key : p1.stringPropertyNames()) {\r\n            String value = p1.getProperty(key);\r\n            p2.setProperty(key, shuffleCase(value));\r\n        }\r\n\r\n        assertFalse(\"Unexpected case sensitive equality\", MapUtils.equalProperties(p1, p2));\r\n        assertTrue(\"Non-equal case insensitive result\", MapUtils.equalProperties(p1, p2, Comparator.naturalOrder(), String.CASE_INSENSITIVE_ORDER));\r\n    }\r\n\r\n    @Test\r\n    public void testSubMapWithEmptyMaps() {\r\n        Map<String, Integer> m1 = new HashMap<>();\r\n        m1.put(getCurrentTestName(), 1);\r\n        Collection<Map<String, Integer>> empties = Arrays.asList(null, Collections.emptyMap());\r\n        for (Map<String, Integer> empty : empties) {\r\n            assertTrue(\"empty is submap of any map\", MapUtils.isSubMap(m1, empty));\r\n            assertFalse(\"nothing is a submap of empty\", MapUtils.isSubMap(empty, m1));\r\n            assertTrue(\"empty is submap of empty\", MapUtils.isSubMap(empty, empty));\r\n        }\r\n    }\r\n\r\n    @Test\r\n    public void testSubMapWithSubs() {\r\n        Map<String, Integer> m1 = new HashMap<>();\r\n        m1.put(getCurrentTestName(), 1);\r\n        Map<String, Integer> m2 = new HashMap<>();\r\n        m2.put(getCurrentTestName(), 1);\r\n\r\n        assertTrue(\"equal maps are sub maps\", MapUtils.isSubMap(m1, m2));\r\n        assertTrue(\"equal maps are sub maps\", MapUtils.isSubMap(m2, m1));\r\n        m1.put(JAVA_SUFFIX, 2);\r\n        assertTrue(\"strictly sub\", MapUtils.isSubMap(m1, m2));\r\n        assertFalse(\"non sub\", MapUtils.isSubMap(m2, m1));\r\n\r\n        int differentValueForKey = m1.get(JAVA_SUFFIX) + 1;\r\n        m2.put(JAVA_SUFFIX, differentValueForKey);\r\n\r\n        assertFalse(\"non sub\", MapUtils.isSubMap(m1, m2));\r\n        assertFalse(\"non sub\", MapUtils.isSubMap(m2, m1));\r\n    }\r\n\r\n    @Test\r\n    public void testGetSubMap() {\r\n        Map<String, Integer> hashMap = new HashMap<>();\r\n        hashMap.put(getCurrentTestName(), 1);\r\n        hashMap.put(JAVA_SUFFIX, 2);\r\n        hashMap.put(JAVA_TYPE, 3);\r\n        NavigableMap<String, Integer> expectedSingletonMap = MapUtils.getSubMap(hashMap, e -> e.getValue() > 2, TreeMap::new);\r\n        assertEquals(Collections.singletonMap(JAVA_TYPE, 3), expectedSingletonMap);\r\n\r\n        Map<String, Integer> treeMap = new TreeMap<>(hashMap);\r\n\r\n        Map<String, Integer> expectedEmpty = MapUtils.getSubMap(treeMap, e -> e.getValue() > 3, HashMap::new);\r\n        assertEquals(Collections.emptyMap(), expectedEmpty);\r\n\r\n        Map<String, Integer> expectedAllEntries = MapUtils.getSubMap(treeMap, e -> e.getValue() < 10, HashMap::new);\r\n        assertEquals(treeMap, expectedAllEntries);\r\n    }\r\n\r\n    @Test\r\n    public void testGetSubMapEmpty() {\r\n        assertEquals(Collections.emptyMap(), MapUtils.getSubMap(Collections.emptyMap(), e -> true, TreeMap::new));\r\n        assertEquals(Collections.emptyMap(), MapUtils.getSubMap(null, e -> true, HashMap::new));\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *[Maven]* version 3.5.0 with *[OpenJDK]* version 1.8.0.91\r\n", "url": "https://github.com/pmd/pmd/issues/650", "user": "lgoldstein", "labels": ["a:bug", "in:type-resolution"], "created": "2017-09-28 04:05:00", "closed": "2017-10-28 18:27:06", "commits": {}, "ttf": 30.00027777777778, "commitsDetails": []}, {"title": "[core] PMD Properties (dev-properties) breaks markup on CodeClimateRenderer", "body": "**Rule Set:** java-bsic\r\n\r\n**Description:** Some rules generate an XPath snippet that looks weird in the **bottom** of the report\r\n\r\n**Code Sample demonstrating the issue:**\r\n```java\r\npublic class Library {\r\n\tpublic void foo() {\r\n\t\tfor (int i = 0; i < 10; i++) {\r\n\t\t\tfor (int k = 0; k < 20; i++) {\r\n\t\t\t\tSystem.out.println(\"Hello\");\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n**Running PMD through:** `./run.sh pmd -d . -f codeclimate -R java-basic`\r\n```js\r\n{\r\n  \"type\": \"issue\",\r\n  \"check_name\": \"JumbledIncrementer\",\r\n  \"description\": \"Avoid modifying an outer loop incrementer in an inner loop for update expression\",\r\n  \"content\": {\r\n    \"body\": \"## JumbledIncrementer\\n\\nSince: PMD 1.0\\n\\nPriority: Medium\\n\\n[Categories](https://github.com/codeclimate/spec/blob/master/SPEC.md#categories): Style\\n\\n[Remediation Points](https://github.com/codeclimate/spec/blob/master/SPEC.md#remediation-points): 50000\\n\\nAvoid jumbled loop incrementers - its usually a mistake, and is confusing even if intentional.\\n\\n### Example:\\n\\n```java\\n\\n \\npublic class JumbledIncrementerRule1 {\\n\\tpublic void foo() {\\n\\t\\tfor (int i = 0; i < 10; i++) {\\t\\t\\t// only references 'i'\\n\\t\\t\\tfor (int k = 0; k < 20; i++) {\\t\\t// references both 'i' and 'k'\\n\\t\\t\\t\\tSystem.out.println('Hello');\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n}\\n \\n \\n``` \\n\\n### [PMD properties](http://pmd.github.io/pmd-5.8.1/customizing/pmd-developer.html)\\n\\nName | Value | Description\\n--- | --- | ---\\nviolationSuppressRegex | | Suppress violations with messages matching a regular expression\\nviolationSuppressXPath | | Suppress violations on nodes which match a given relative XPath expression.\\nversion | 1.0 | XPath specification version\\nxpath | \\n \\n//ForStatement\\n [\\n ForUpdate/StatementExpressionList/StatementExpression/PostfixExpression/PrimaryExpression/PrimaryPrefix/Name/@Image\\n =\\n ancestor::ForStatement/ForInit//VariableDeclaratorId/@Image\\n ]\\n \\n | XPath expression\\n\"\r\n  },\r\n  \"categories\": [\r\n    \"Style\"\r\n  ],\r\n  \"location\": {\r\n    \"path\": \"/Users/filipe/codeclimate/tmp/java/simple_java/src/main/java/Library.java\",\r\n    \"lines\": {\r\n      \"begin\": 4,\r\n      \"end\": 6\r\n    }\r\n  },\r\n  \"severity\": \"normal\",\r\n  \"remediation_points\": 50000\r\n}\r\n```\r\n\r\n## Markup Generated from the report above\r\n\r\n## JumbledIncrementer\r\n\r\nSince: PMD 1.0\r\n\r\nPriority: Medium\r\n\r\n[Categories](https://github.com/codeclimate/spec/blob/master/SPEC.md#categories): Style\r\n\r\n[Remediation Points](https://github.com/codeclimate/spec/blob/master/SPEC.md#remediation-points): 50000\r\n\r\nAvoid jumbled loop incrementers - its usually a mistake, and is confusing even if intentional.\r\n\r\n### Example:\r\n\r\n```java\r\n\r\n \r\npublic class JumbledIncrementerRule1 {\r\n\\tpublic void foo() {\r\n\\t\\tfor (int i = 0; i < 10; i++) {\\t\\t\\t// only references 'i'\r\n\\t\\t\\tfor (int k = 0; k < 20; i++) {\\t\\t// references both 'i' and 'k'\r\n\\t\\t\\t\\tSystem.out.println('Hello');\r\n\\t\\t\\t}\r\n\\t\\t}\r\n\\t}\r\n}\r\n \r\n \r\n``` \r\n\r\n### [PMD properties](http://pmd.github.io/pmd-5.8.1/customizing/pmd-developer.html)\r\n\r\nName | Value | Description\r\n--- | --- | ---\r\nviolationSuppressRegex | | Suppress violations with messages matching a regular expression\r\nviolationSuppressXPath | | Suppress violations on nodes which match a given relative XPath expression.\r\nversion | 1.0 | XPath specification version\r\nxpath | \r\n \r\n//ForStatement\r\n [\r\n ForUpdate/StatementExpressionList/StatementExpression/PostfixExpression/PrimaryExpression/PrimaryPrefix/Name/@Image\r\n =\r\n ancestor::ForStatement/ForInit//VariableDeclaratorId/@Image\r\n ]\r\n \r\n | XPath expression\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/643", "user": "filipesperandio", "labels": ["a:bug"], "created": "2017-09-22 18:39:44", "closed": "2017-09-30 21:41:01", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "[swift][cpd]Running CPD throw StackOverflowError", "body": "My project is written by swift3. And i'm running CPD through cpd.bat on Windows7. And PMD version is 5.8.1.\r\n\r\ncmd:\r\n`cpd.bat --minimum-tokens 100 --files F:\\xxx --language swift`\r\n\r\nerror stack :\r\n`Exception in thread \"main\" java.lang.StackOverflowError\r\n        at org.antlr.v4.runtime.misc.MurmurHash.update(MurmurHash.java:95)\r\n        at org.antlr.v4.runtime.atn.LexerATNConfig.hashCode(LexerATNConfig.java:102)\r\n        at org.antlr.v4.runtime.misc.ObjectEqualityComparator.hashCode(ObjectEqualityComparator.java:53)\r\n        at org.antlr.v4.runtime.misc.Array2DHashSet.getBucket(Array2DHashSet.java:132)\r\n        at org.antlr.v4.runtime.misc.Array2DHashSet.getOrAddImpl(Array2DHashSet.java:87)\r\n        at org.antlr.v4.runtime.misc.Array2DHashSet.getOrAdd(Array2DHashSet.java:83)\r\n        at org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:170)\r\n        at org.antlr.v4.runtime.atn.ATNConfigSet.add(ATNConfigSet.java:146)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:473)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:462)\r\n        at org.antlr.v4.runtime.atn.LexerATNSimulator.closure(LexerATNSimulator.java:482)\r\n    ...\r\n`\r\n", "url": "https://github.com/pmd/pmd/issues/628", "user": "Andrwyw", "labels": ["a:bug", "in:cpd"], "created": "2017-09-19 05:52:07", "closed": "2020-03-20 12:58:27", "commits": {"56d5a6afa3516808ad47f48d56a005483e1e6d80": {"commitGHEventType": "closed", "commitUser": "adangel"}, "31bf08af547b6f2028d878114bbceeeacb113349": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 913.0002777777778, "commitsDetails": [{"commitHash": "56d5a6afa3516808ad47f48d56a005483e1e6d80", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["08f9a3956e3bb5543df4af77724707e033d32432"], "nameRev": "56d5a6afa3516808ad47f48d56a005483e1e6d80 tags/pmd_releases/6.23.0~49^2", "commitMessage": "[swift] Add unit test for #628\n\nCloses #628\n", "commitDateTime": "2020-03-20 13:55:04", "authoredDateTime": "2020-03-20 13:54:50", "commitGitStats": [{"filePath": "pmd-swift/src/test/java/net/sourceforge/pmd/cpd/Issue628Test.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "pmd-swift/src/test/resources/net/sourceforge/pmd/cpd/Issue628.swift", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Issue628Test.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.Issue628Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "31bf08af547b6f2028d878114bbceeeacb113349", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["08f9a3956e3bb5543df4af77724707e033d32432", "56d5a6afa3516808ad47f48d56a005483e1e6d80"], "nameRev": "31bf08af547b6f2028d878114bbceeeacb113349 tags/pmd_releases/6.23.0~49", "commitMessage": "Merge branch 'issue-628' #628\n\n[swift][cpd]Running CPD throw StackOverflowError\n", "commitDateTime": "2020-03-20 13:55:16", "authoredDateTime": "2020-03-20 13:55:16", "commitGitStats": [{"filePath": "pmd-swift/src/test/java/net/sourceforge/pmd/cpd/Issue628Test.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "pmd-swift/src/test/resources/net/sourceforge/pmd/cpd/Issue628.swift", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Issue628Test.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.Issue628Test", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["56d5a6afa3516808ad47f48d56a005483e1e6d80"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[core] Incremental Analysis doesn't close file correctly on Windows upon a cache hit", "body": "Hi I'm a developer of Gradle and recently I found there might be some issue in pmd plugin. If I turn on the incremental analysis, some files wouldn't be closed correctly on Windows .\r\n\r\nTo reproduce it, you should have a windows machine. Mine is Windows 7. Here're the steps:\r\n\r\n- checkout `blindpirate/pmd-issue` branch of https://github.com/gradle/gradle\r\n- run `./gradlew codeQuality:integTest --tests '*WithIA*'`, this will run the [`WithIA.groovy`](https://github.com/gradle/gradle/blob/ad6e6860093a998dc8e3eabad7e3fd9671af0b57/subprojects/code-quality/src/integTest/groovy/org/gradle/api/plugins/quality/WithIA.groovy), two simple tests with incremental analysis on. And it results in the error:\r\n\r\n```\r\njava.io.IOException: Unable to delete file: C:\\tcagent1\\work\\6031ced305d8bea4\\subprojects\\code-quality\\build\\tmp\\test files\\PmdPluginIncrementalAnalysisIntegrationTest\\incremental_analysi...e_enabled\\p9laj\\src\\main\\java\\org\\gradle\\GoodClass.java\r\n```\r\n\r\nLooks like some files are not closed correctly, so the cleanup failed. As a comparison, you can run `./gradlew codeQuality:integTest --tests '*WithoutIA*'`, this will run the [`WithoutIA.groovy`](https://github.com/gradle/gradle/blob/ad6e6860093a998dc8e3eabad7e3fd9671af0b57/subprojects/code-quality/src/integTest/groovy/org/gradle/api/plugins/quality/WithoutIA.groovy) and everything works well, the only difference is that this test turn off the incremental analysis.\r\n\r\nI'm not familiar with pmd, so I'm here for help, is there any possibility of not closing file correctly?\r\n\r\n@jsotuyod Could you help me?\r\n\r\n![image](https://user-images.githubusercontent.com/12689835/30382895-f6146b58-98d2-11e7-899f-d7b540359549.png)\r\n", "url": "https://github.com/pmd/pmd/issues/618", "user": "blindpirate", "labels": ["a:bug", "has:pr"], "created": "2017-09-13 14:26:52", "closed": "2017-09-30 09:40:39", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "[core] Ruleset's XML schema allows any element as root", "body": "The current XML Schema list all elements as possible root elements, but that's not actually supported. Only `ruleset` is valid.", "url": "https://github.com/pmd/pmd/issues/611", "user": "jsotuyod", "labels": ["a:bug", "has:pr"], "created": "2017-09-09 22:30:13", "closed": "2017-10-05 21:52:58", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "[java] NPE in TypeInferenceResolver ", "body": "**Rule Set:** Any\r\n\r\n**Description:** NPE in typeres when processing RuleSetReference.java. Stack trace:\r\n\r\n```\r\nError while processing file: /home/clifrr/Documents/Git/pmd/pmd-core/src/main/java/net/sourceforge/pmd/RuleSetReference.java\r\nnet.sourceforge.pmd.PMDException: Error while processing /home/clifrr/Documents/Git/pmd/pmd-core/src/main/java/net/sourceforge/pmd/RuleSetReference.java\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:103)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:52)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:93)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:27)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typeinference.TypeInferenceResolver.getMinimalErasedCandidateSet(TypeInferenceResolver.java:180)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typeinference.TypeInferenceResolver.lub(TypeInferenceResolver.java:77)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typeinference.TypeInferenceResolver.resolveVariables(TypeInferenceResolver.java:227)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typeinference.TypeInferenceResolver.inferTypes(TypeInferenceResolver.java:56)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.parameterizeInvocation(MethodTypeResolution.java:174)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.selectMethodsFirstPhase(MethodTypeResolution.java:138)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.getBestMethodReturnType(MethodTypeResolution.java:354)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:466)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTName.jjtAccept(ASTName.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:314)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:1017)\r\n```\r\n\r\n**Code Sample demonstrating the issue:** Seems to be the first constructor:\r\n\r\n```\r\npublic class RuleSetReference {\r\n    private final String ruleSetFileName;\r\n    private final boolean allRules;\r\n    private final Set<String> excludes;\r\n\r\n    public RuleSetReference(final String theFilename, final boolean allRules, final Set<String> excludes) {\r\n        ruleSetFileName = theFilename;\r\n        this.allRules = allRules;\r\n        this.excludes = Collections.unmodifiableSet(new LinkedHashSet<>(excludes));\r\n    }\r\n\r\n    /* ... */\r\n}\r\n\r\n```\r\n\r\n**Running PMD through:** CLI\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/609", "user": "oowekyala", "labels": ["a:bug", "in:type-resolution"], "created": "2017-09-09 10:13:28", "closed": "2017-10-08 23:22:10", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "[apex] java.lang.NoClassDefFoundError in the latest build", "body": "\r\n**Rule Set:**\r\napex-security, vf-security\r\n**Description:**\r\nApex parser broken in the latest build. Stack trace is below:\r\n```\r\n$ ./run.sh pmd -d ~/myApexPackage -f text -rulesets apex-security\r\nException in thread \"main\" java.lang.NoClassDefFoundError: shaded/org/objectweb/asm/Handle\r\n\tat apex.jorje.semantic.ast.context.Emitter.<clinit>(Emitter.java:42)\r\n\tat apex.jorje.semantic.compiler.CompilerContext.<init>(CompilerContext.java:50)\r\n\tat apex.jorje.semantic.compiler.ApexCompiler.<init>(ApexCompiler.java:57)\r\n\tat apex.jorje.semantic.compiler.ApexCompiler.<init>(ApexCompiler.java:37)\r\n\tat apex.jorje.semantic.compiler.ApexCompiler$Builder.build(ApexCompiler.java:224)\r\n\tat net.sourceforge.pmd.lang.apex.ast.CompilerService.compile(CompilerService.java:92)\r\n\tat net.sourceforge.pmd.lang.apex.ast.CompilerService.visitAstsFromStrings(CompilerService.java:87)\r\n\tat net.sourceforge.pmd.lang.apex.ast.CompilerService.visitAstFromString(CompilerService.java:75)\r\n\tat net.sourceforge.pmd.lang.apex.ast.ApexParser.parseApex(ApexParser.java:44)\r\n\tat net.sourceforge.pmd.lang.apex.ast.ApexParser.parse(ApexParser.java:53)\r\n\tat net.sourceforge.pmd.lang.apex.ApexParser.parse(ApexParser.java:37)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:113)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:175)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:97)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:52)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:93)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:27)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.ClassNotFoundException: shaded.org.objectweb.asm.Handle\r\n\tat java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n\tat sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:331)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n\t... 23 more\r\n```\r\n**Running PMD through:** *CLI*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/605", "user": "touzoku", "labels": ["a:bug", "has:pr"], "created": "2017-09-08 02:49:57", "closed": "2017-10-17 16:10:05", "commits": {}, "ttf": 39.000277777777775, "commitsDetails": []}, {"title": "[core] Nullpointer while creating cache File", "body": "PMD Version: 5.8.1\r\n\r\nI use ant to create a XML PMD Report and want to use cacheLocation.\r\nIf I use this the cache file is created but then terminates with following exception.\r\n\r\n```\r\n  [pmd:pmd] Sep 07, 2017 3:06:50 PM net.sourceforge.pmd.cache.FileAnalysisCache loadFromFile\r\n  [pmd:pmd] WARNUNG: Cache file <path>\\pmd\\cachefile is malformed, will not be used for current analysis\r\n  [pmd:pmd] java.lang.NullPointerException\r\n  [pmd:pmd] \tat java.io.DataOutputStream.writeUTF(DataOutputStream.java:347)\r\n  [pmd:pmd] \tat java.io.DataOutputStream.writeUTF(DataOutputStream.java:323)\r\n  [pmd:pmd] \tat net.sourceforge.pmd.cache.CachedRuleViolation.storeToStream(CachedRuleViolation.java:156)\r\n  [pmd:pmd] \tat net.sourceforge.pmd.cache.FileAnalysisCache.persist(FileAnalysisCache.java:111)\r\n  [pmd:pmd] \tat net.sourceforge.pmd.PMD.processFiles(PMD.java:414)\r\n  [pmd:pmd] \tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:188)\r\n  [pmd:pmd] \tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:269)\r\n  [pmd:pmd] \tat net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:49)\r\n  [pmd:pmd] \tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)\r\n  [pmd:pmd] \tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n  [pmd:pmd] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n  [pmd:pmd] \tat java.lang.reflect.Method.invoke(Method.java:606)\r\n  [pmd:pmd] \tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Task.perform(Task.java:348)\r\n  [pmd:pmd] \tat org.apache.tools.ant.taskdefs.Sequential.execute(Sequential.java:68)\r\n  [pmd:pmd] \tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)\r\n  [pmd:pmd] \tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n  [pmd:pmd] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n  [pmd:pmd] \tat java.lang.reflect.Method.invoke(Method.java:606)\r\n  [pmd:pmd] \tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Task.perform(Task.java:348)\r\n  [pmd:pmd] \tat org.apache.tools.ant.taskdefs.MacroInstance.execute(MacroInstance.java:396)\r\n  [pmd:pmd] \tat sun.reflect.GeneratedMethodAccessor68.invoke(Unknown Source)\r\n  [pmd:pmd] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n  [pmd:pmd] \tat java.lang.reflect.Method.invoke(Method.java:606)\r\n  [pmd:pmd] \tat net.sf.antcontrib.logic.For$Reflector.call(Unknown Source)\r\n  [pmd:pmd] \tat net.sf.antcontrib.logic.For.doSequentialIteration(Unknown Source)\r\n  [pmd:pmd] \tat net.sf.antcontrib.logic.For.doTheTasks(Unknown Source)\r\n  [pmd:pmd] \tat net.sf.antcontrib.logic.For.execute(Unknown Source)\r\n  [pmd:pmd] \tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)\r\n  [pmd:pmd] \tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n  [pmd:pmd] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n  [pmd:pmd] \tat java.lang.reflect.Method.invoke(Method.java:606)\r\n  [pmd:pmd] \tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Task.perform(Task.java:348)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Target.execute(Target.java:435)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Target.performTasks(Target.java:456)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1393)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Project.executeTarget(Project.java:1364)\r\n  [pmd:pmd] \tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Project.executeTargets(Project.java:1248)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Main.runBuild(Main.java:851)\r\n  [pmd:pmd] \tat org.apache.tools.ant.Main.startAnt(Main.java:235)\r\n  [pmd:pmd] \tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\r\n  [pmd:pmd] \tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\r\n\r\nBUILD FAILED\r\n<path>\\build.xml:2324: The following error occurred while executing this line:\r\n<path>\\build.xml:2334: java.lang.NullPointerException\r\n\tat net.sourceforge.pmd.util.StringUtil.appendXmlEscaped(StringUtil.java:257)\r\n\tat net.sourceforge.pmd.renderers.XMLRenderer.end(XMLRenderer.java:132)\r\n\tat net.sourceforge.pmd.ant.Formatter.end(Formatter.java:117)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:198)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:269)\r\n\tat net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:49)\r\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)\r\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\r\n\tat org.apache.tools.ant.taskdefs.Sequential.execute(Sequential.java:68)\r\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)\r\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\r\n\tat org.apache.tools.ant.taskdefs.MacroInstance.execute(MacroInstance.java:396)\r\n\tat sun.reflect.GeneratedMethodAccessor68.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat net.sf.antcontrib.logic.For$Reflector.call(Unknown Source)\r\n\tat net.sf.antcontrib.logic.For.doSequentialIteration(Unknown Source)\r\n\tat net.sf.antcontrib.logic.For.doTheTasks(Unknown Source)\r\n\tat net.sf.antcontrib.logic.For.execute(Unknown Source)\r\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)\r\n\tat sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n\tat org.apache.tools.ant.Task.perform(Task.java:348)\r\n\tat org.apache.tools.ant.Target.execute(Target.java:435)\r\n\tat org.apache.tools.ant.Target.performTasks(Target.java:456)\r\n\tat org.apache.tools.ant.Project.executeSortedTargets(Project.java:1393)\r\n\tat org.apache.tools.ant.Project.executeTarget(Project.java:1364)\r\n\tat org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\r\n\tat org.apache.tools.ant.Project.executeTargets(Project.java:1248)\r\n\tat org.apache.tools.ant.Main.runBuild(Main.java:851)\r\n\tat org.apache.tools.ant.Main.startAnt(Main.java:235)\r\n\tat org.apache.tools.ant.launch.Launcher.run(Launcher.java:280)\r\n\tat org.apache.tools.ant.launch.Launcher.main(Launcher.java:109)\r\n```\r\n\r\n\r\n**Running PMD through:** *Ant*\r\n**Ant call**\r\n```\r\n<pmd:pmd shortFilenames=\"true\">\r\n    <sourceLanguage name=\"java\" version=\"1.7\"/>\r\n    <classpath>\r\n        <pathelement location=\"src/main/java\" />\r\n    </classpath>\r\n    <auxclasspath>\r\n        <path refid=\"pmd.auxpath\" />\r\n     </auxclasspath>\r\n     <ruleset>pmd_ruleset.xml</ruleset>\r\n      <formatter type=\"xml\" toFile=\"pmd-report.xml\" />\r\n      <fileset dir=\"${module.src.cqm.path.entryc.dir}\" includes=\"**/*.java\" />\r\n</pmd:pmd>\r\n```\r\n", "url": "https://github.com/pmd/pmd/issues/600", "user": "MCMicS", "labels": ["a:bug", "has:pr", "in:pmd-internals"], "created": "2017-09-07 13:22:36", "closed": "2017-09-16 14:26:13", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[java] False positive in ConsecutiveLiteralAppends with lambda expression", "body": "**Rule Set:**\r\nPMD 5.8.1, rulesets/java/strings.xml/ConsecutiveLiteralAppends\r\n\r\n**Description:**\r\nPMD ignores the non-literal append in the lambda expression and reports `Rule:ConsecutiveLiteralAppends Priority:3 StringBuffer (or StringBuilder).append is called 2 consecutive times with literal Strings. Use a single append with a single combined String..` at the third line in the example below.\r\n\r\nPlus there is an unnecessary second full stop at the end of the error message.\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\n```\r\nfinal DoubleStream numbers = DoubleStream.generate(Math::random).limit(10);\r\nfinal StringBuilder builder = new StringBuilder();\r\nbuilder.append('[');\r\nnumbers.forEach(number -> builder.append(number));\r\nbuilder.append(']');\r\n```\r\n\r\n**Running PMD through:**\r\nmaven-pmd-plugin 3.8 with pmd-java 5.8.1\r\n", "url": "https://github.com/pmd/pmd/issues/561", "user": "acanda", "labels": ["a:bug", "was:wontfix"], "created": "2017-08-14 19:52:24", "closed": "2017-08-15 12:51:39", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[doc] ConsecutiveLiteralAppends with types other than string ", "body": "**Rule:** ConsecutiveLiteralAppends (category java-performance)\r\n\r\n**Description:**\r\n\r\nIf two basic objects are appended, (neither string) then a warning is issued, \r\nwhich should not be. \r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n   \t    evalStr.append('x');// pmd bug: warning: two consecutive times append literal\r\n    \t    evalStr.append(0);\r\n  \t    evalStr.append(\",x\");// pmd: no warning: ok \r\n   \t    evalStr.append(i);\r\n\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/541", "user": "Reissner", "labels": ["a:bug", "has:pr", "in:documentation"], "created": "2017-08-03 10:45:22", "closed": "2018-02-20 04:37:24", "commits": {}, "ttf": 200.00027777777777, "commitsDetails": []}, {"title": "[java] CommentDefaultAccessModifierRule ignores constructors", "body": "**Rule Set:**\r\njava-comments/CommentDefaultAccessModifierRule\r\n\r\n**Description:**\r\nThe rule detects uncommented package-private fields, methods and inner classes, but fails to detect constructors.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic class Foo {\r\n    Foo() {\u00a0} // warning expected here\r\n}\r\n\r\npublic enum Bar {\r\n    ONE, TWO;\r\n\r\n    Bar() {\u00a0} // but no warning expected here (implicitly private)\r\n}\r\n```\r\n\r\n**Running PMD through:** *Any*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/536", "user": "jsotuyod", "labels": ["a:bug", "has:pr"], "created": "2017-08-01 19:06:46", "closed": "2017-08-12 20:14:07", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "[java] NPE in MethodTypeResolution for static methods", "body": "There is an NPE in MethodTypeResolution in master branch that doesn't occur using latest release. Seems to happen for static methods.\r\n\r\n@WinterGrascph could you please take a look?\r\n\r\n**Description:**\r\n```\r\nCaused by: java.lang.NullPointerException\r\n        at net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.isSubtypeable(MethodTypeResolution.java:488)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.isSubtypeable(MethodTypeResolution.java:479)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.selectMethodsFirstPhase(MethodTypeResolution.java:111)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.getBestMethodReturnType(MethodTypeResolution.java:228)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:454)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTName.jjtAccept(ASTName.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:314)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:998)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTPrimaryPrefix.jjtAccept(ASTPrimaryPrefix.java:42)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:841)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nMaven\r\n", "url": "https://github.com/pmd/pmd/issues/534", "user": "deki", "labels": ["a:bug", "in:type-resolution"], "created": "2017-08-01 09:27:56", "closed": "2017-10-06 22:49:41", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "[java] Lombok getter annotation on enum is not recognized correctly", "body": "**Rule Set:**\r\n`<ruleref=\"rulesets/java/design.xml\"/>`\r\n\r\n**Description:**\r\nA `@Getter` annotation from Lombok on an enum is not recognized by PMD. The field for which the getter is generated is flagged with the SingularFieldRule.\r\nSetting the `@Getter` directly on the field works.\r\n\r\n**Code Sample demonstrating the issue:**\r\n```java\r\n@Getter\r\npublic enum Foo {\r\n    BAR(1);\r\n\r\n    private final int number;\r\n\r\n    Foo(final int number) {\r\n        this.number = number;\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *[Gradle]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/527", "user": "mmoehring", "labels": ["a:bug", "has:pr"], "created": "2017-07-29 00:17:44", "closed": "2017-07-29 21:55:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] UnusedPrivateMethod returns false positives with primitive data type in map argument", "body": "**Rule Set:**\r\nUnusedPrivateMethod\r\n\r\n**Description:**\r\nA private method with a signature containing a map as argument, and with that map having a list of doubles as values using a primitive type, e.g. `double[]`, PMD unexpectedly reports an unused private method.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic class Foo {\r\n    public Foo() {\r\n        Map<String, double[]> map = new LinkedHashMap<>();\r\n        addToMap(map);\r\n    }\r\n\r\n    private void addToMap(Map<String, double[]> map) {\r\n        map.put(\"foo\", new double[]{0., 1.});\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *Gradle* (Gradle 3.5, tried with default pmd plugin as well as `toolVersion = '5.8.0'`)\r\n\r\nPMD does not complain when using the boxed variant:\r\n```java\r\n// This is ok!\r\nprivate void addToMap(Map<String, Double[]> map) {\r\n    // ...\r\n}\r\n```\r\nIs this better/the preferred style anyway?\r\n\r\nSeemingly related: https://sourceforge.net/p/pmd/bugs/1228/\r\n", "url": "https://github.com/pmd/pmd/issues/521", "user": "carhartl", "labels": ["a:bug", "has:pr", "in:symbol-table"], "created": "2017-07-26 09:34:48", "closed": "2017-08-09 15:24:56", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "[java] Typeresolution fails on a simple primary when the source is loaded from a class literal", "body": "Hi, I'm working on a temporary solution to resolve method usages until we change the AST.\r\n\r\nWhile trying to test it, type resolution failed with an `IllegalStateException` on a very simple primary (`object.toString()`). Here's the full stack trace of the exception:\r\n```\r\njava.lang.IllegalStateException: None of the maximally specific methods are abstract.\r\nnet.sourceforge.pmd.lang.java.typeresolution.MethodType@16b3fc9e\r\nnet.sourceforge.pmd.lang.java.typeresolution.MethodType@e2d56bf\r\n\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.selectAmongMaximallySpecific(MethodTypeResolution.java:289)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.selectMostSpecificMethod(MethodTypeResolution.java:259)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.MethodTypeResolution.getBestMethodReturnType(MethodTypeResolution.java:230)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:452)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTName.jjtAccept(ASTName.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:314)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:967)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryPrefix.jjtAccept(ASTPrimaryPrefix.java:42)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:810)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:230)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:670)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTExpression.jjtAccept(ASTExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:174)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTVariableInitializer.jjtAccept(ASTVariableInitializer.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\t...\r\n```\r\n\r\nThe code samples that trigger the exception are [here](https://github.com/oowekyala/pmd/blob/62cedae0ca9204fc224f26bf9a154ecc46b19e59/pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/UsageResolverTest.java#L32). I think it's notable that the first test throws the exception but the second doesn't, the only difference being that in the first case, the source is loaded using a class literal and in the second it's provided as a string. The methods used to parse and visit the source are taken from `ClassTypeResolverTest`.\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/510", "user": "oowekyala", "labels": ["a:bug", "in:type-resolution"], "created": "2017-07-24 13:32:02", "closed": "2017-10-06 22:50:01", "commits": {}, "ttf": 74.00027777777778, "commitsDetails": []}, {"title": "[java] processing error on generics inherited from enclosing class", "body": "**Description:**\r\n\r\nI'm seeing a processing error when a reference to a generic is made from an inner class, but the generic was defined on the enclosing type. This is because the lookup is performed on the type itself.\r\n\r\nWe need each `JavaTypeDefinition` to have a reference to it's enclosing's class `JavaTypeDefinition` (or null if it's a top-level). That way, when `JavaTypeDefinition.getGenericType(String)` can't find a reference locally, before throwing we should delegate to the enclosing type if not null.\r\n\r\n```\r\njava.lang.IllegalArgumentException: No generic parameter by name K on class Segment\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinition.getGenericType(JavaTypeDefinition.java:116)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinition.resolveTypeDefinition(JavaTypeDefinition.java:169)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinition.resolveTypeDefinition(JavaTypeDefinition.java:163)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.getTypeDefOfMethod(ClassTypeResolver.java:510)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.getApplicableMethods(ClassTypeResolver.java:470)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:390)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTName.jjtAccept(ASTName.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:314)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:1044)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryPrefix.jjtAccept(ASTPrimaryPrefix.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:310)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:871)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:230)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:733)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTExpression.jjtAccept(ASTExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:422)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTReturnStatement.jjtAccept(ASTReturnStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:350)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:362)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:358)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:182)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:28)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:46)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:18)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:319)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:31)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:158)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:231)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n\tat net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:138)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:202)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:41)\r\n\tat net.sourceforge.pmd.lang.java.typeresolution.TypeResolutionFacade.initializeWith(TypeResolutionFacade.java:18)\r\n\tat net.sourceforge.pmd.lang.java.AbstractJavaHandler$5.start(AbstractJavaHandler.java:95)\r\n\tat net.sourceforge.pmd.typeresolution.ClassTypeResolverTest.parseAndTypeResolveForString(ClassTypeResolverTest.java:1262)\r\n\tat net.sourceforge.pmd.typeresolution.ClassTypeResolverTest.parseAndTypeResolveForClass(ClassTypeResolverTest.java:1253)\r\n\tat net.sourceforge.pmd.typeresolution.ClassTypeResolverTest.testGenericsInheritedFromContainerClass(ClassTypeResolverTest.java:202)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:606)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:86)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:459)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:678)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:382)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:192)\r\n```\r\n\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic abstract class GenericsInheritedFromEnclosingClass<K, V> {\r\n\tprivate Segment segment;\r\n\r\n\tprotected final Reference<K, V> getReference() {\r\n\t\treturn segment.getReference();\r\n\t}\r\n\r\n\tprotected final class Segment {\r\n\t\tpublic Reference<K, V> getReference() {\r\n\t\t\treturn findInChain(); // Exception thrown when analyzing this statement \r\n\t\t}\r\n\t    \r\n\t\tpublic Reference<K, V> findInChain() {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\r\n\tprotected interface Reference<K, V> {\r\n\t}\r\n}\r\n\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/496", "user": "jsotuyod", "labels": ["a:bug", "in:type-resolution"], "created": "2017-07-10 19:31:27", "closed": "2017-07-27 14:18:18", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "[Core] Homepage's \"existing rules\" hyperlink gives 404 not found", "body": "Hi!\r\nOn the homepage https://pmd.github.io/ the \"existing rules\" link tries to link to java's rulesets page.\r\nNow the hyperlink points to \"https://pmd.github.io/5.8.1/pmd-java/rules/index.html\". This gives 404.\r\nThe correct link appears to be \"https://pmd.github.io/pmd-5.8.1/pmd-java/rules/index.html\"", "url": "https://github.com/pmd/pmd/issues/493", "user": "crunsk", "labels": ["a:bug", "in:documentation"], "created": "2017-07-09 21:27:30", "closed": "2017-07-09 22:38:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] Rule InvalidSlf4jMessageFormat false positive with concatenated message String", "body": "**Rule Set:**\r\nInvalidSlf4jMessageFormat\r\n\r\n**Description:**\r\nRule InvalidSlf4jMessageFormat false positive with a concatenated message String split for formatting.  Removing the String concatenation makes it pass.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nfinal String msg = \"abcd efgh a={}, b={}, c={},\"\r\n        + \" d={}, e={}\";\r\nlog.debug(msg, a, b, c, d, e);\r\n```\r\nResults in this failure message:\r\n```\r\n[INFO] PMD Failure: com.example:49 Rule:InvalidSlf4jMessageFormat Priority:5 Too many arguments, expected 3 arguments but have 5.\r\n```\r\n**Running PMD through:**\r\nMaven\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/491", "user": "jeffjensen", "labels": ["a:bug", "was:duplicate"], "created": "2017-07-07 22:16:07", "closed": "2017-07-07 22:25:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] Project licence page is broken", "body": "There are old pages included.\r\nhttps://pmd.github.io/pmd-5.8.1/license.html", "url": "https://github.com/pmd/pmd/issues/481", "user": "megascus", "labels": ["a:bug", "in:documentation"], "created": "2017-07-03 09:17:47", "closed": "2017-07-08 18:17:33", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[core] Missing screenshot on \"How to write a rule\" doc", "body": "**Description:**\r\nI can not see the image on this page.\r\nhttps://pmd.github.io/pmd-5.8.1/customizing/howtowritearule.html\r\nhttps://pmd.github.io/pmd-5.8.1/customizing/images/designer_screenshot.png", "url": "https://github.com/pmd/pmd/issues/480", "user": "megascus", "labels": ["a:bug", "in:documentation"], "created": "2017-07-03 09:11:54", "closed": "2017-07-08 18:17:18", "commits": {"d669395bab33b6569ff4913edef9de9cf98a65c1": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "d669395bab33b6569ff4913edef9de9cf98a65c1", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["68046a006493ca2aa1d7cc4660ea436941a7b8a8"], "nameRev": "d669395bab33b6569ff4913edef9de9cf98a65c1 tags/pmd_releases/6.0.0~236", "commitMessage": "[core] Missing screenshot on \"How to write a rule\" doc\nFixes #480\n", "commitDateTime": "2017-07-08 20:00:43", "authoredDateTime": "2017-07-08 20:00:43", "commitGitStats": [{"filePath": "src/site/markdown/customizing/howtowritearule.md", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d669395bab33b6569ff4913edef9de9cf98a65c1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[core] Processing issues dealing with anonymous classes", "body": "When running PMD 5.8.1-SNAPSHOT on Spring Framework a number of processing errors subsists.\r\n\r\nI'm opening this issue as a holder for all of them to track progress.", "url": "https://github.com/pmd/pmd/issues/478", "user": "jsotuyod", "labels": ["a:bug", "in:type-resolution"], "created": "2017-06-30 00:26:31", "closed": "2017-06-30 21:59:00", "commits": {"8954bb037ded4c86f57fa76c75479c7912ee5640": {"commitGHEventType": "referenced", "commitUser": "jsotuyod"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8954bb037ded4c86f57fa76c75479c7912ee5640", "commitGHEventType": "referenced", "commitUser": "jsotuyod", "commitParents": ["f7f46dbe9316252764f0bdc81b3cede2a322a1f2"], "nameRev": "8954bb037ded4c86f57fa76c75479c7912ee5640 tags/pmd_releases/5.8.1~3", "commitMessage": "Update changelog, refs #478\n", "commitDateTime": "2017-06-30 18:59:49", "authoredDateTime": "2017-06-30 18:59:49", "commitGitStats": [{"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8954bb037ded4c86f57fa76c75479c7912ee5640"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[core] NoClassDefFoundError  under 5.8", "body": "**Description:** We have made no changes to our configuration other than upgrading to 5.8 but on running PMD through Ant we receive errors. This is true of the 5.8.1 snapshot as well.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n\r\n```\r\n<path id=\"pmd.classpath\">\r\n\t<fileset dir=\"${pmdLib.dir}\">\r\n\t\t<include name=\"*.jar\"/>\r\n\t</fileset>\r\n</path>\r\n\r\n<taskdef name=\"pmd\" classname=\"net.sourceforge.pmd.ant.PMDTask\" classpathref=\"pmd.classpath\"/>\r\n\r\n\r\n<target name=\"pmd\">\r\n// the below line is the line triggering the error\r\n\t<pmd rulesetfiles=\"${pmd.dir}\\ptsPmdConfig.xml\">\r\n\t\t<auxClasspath refid=\"codeQuality.auxClasspath\" />\r\n\r\n\t\t<formatter type=\"xml\" toFile=\"${pmd.dir}\\ptsPmdReport.xml\"/>\r\n\t\t<fileset dir=\"src\">\r\n\t\t\t<include name=\"**/*.java\"/>\r\n\t\t</fileset>\r\n\t</pmd>\r\n</target>\r\n```\r\n\r\n**Running PMD through:** *[Ant]*\r\n\r\n```\r\nBUILD FAILED\r\nC:\\9pts\\PTSDEV\\build.xml:488: java.lang.NoClassDefFoundError: org/jboss/logging/BasicLogger\r\n        at java.lang.ClassLoader.defineClass1(Native Method)\r\n        at java.lang.ClassLoader.defineClass(ClassLoader.java:763)\r\n        at java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)\r\n        at java.net.URLClassLoader.defineClass(URLClassLoader.java:467)\r\n        at java.net.URLClassLoader.access$100(URLClassLoader.java:73)\r\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:368)\r\n        at java.net.URLClassLoader$1.run(URLClassLoader.java:362)\r\n        at java.security.AccessController.doPrivileged(Native Method)\r\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:361)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n        at java.lang.Class.getDeclaredFields0(Native Method)\r\n        at java.lang.Class.privateGetDeclaredFields(Class.java:2583)\r\n        at java.lang.Class.getDeclaredField(Class.java:2068)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.getFieldType(ClassTypeResolver.java:346)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:320)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTName.jjtAccept(ASTName.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:314)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:894)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTPrimaryPrefix.jjtAccept(ASTPrimaryPrefix.java:42)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:310)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:763)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:374)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:1039)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTStatementExpression.jjtAccept(ASTStatementExpression.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:350)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:362)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:358)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:434)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTryStatement.jjtAccept(ASTTryStatement.java:22)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:350)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:362)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:358)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:350)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:386)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTIfStatement.jjtAccept(ASTIfStatement.java:33)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:350)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:362)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:358)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:430)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTSynchronizedStatement.jjtAccept(ASTSynchronizedStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:350)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:362)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:358)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:25)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:182)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:28)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:46)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:42)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:18)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:271)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:31)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:158)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:229)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:10)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:138)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.visit(ClassTypeResolver.java:200)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:41)\r\n        at net.sourceforge.pmd.lang.java.typeresolution.TypeResolutionFacade.initializeWith(TypeResolutionFacade.java:18)\r\n        at net.sourceforge.pmd.lang.java.AbstractJavaHandler$5.start(AbstractJavaHandler.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.usesTypeResolution(SourceCodeProcessor.java:151)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:179)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:97)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:52)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:88)\r\n        at net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:29)\r\n        at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:75)\r\n        at net.sourceforge.pmd.PMD.processFiles(PMD.java:410)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:188)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:269)\r\n        at net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:49)\r\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n        at sun.reflect.GeneratedMethodAccessor6.invoke(Unknown Source)\r\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n        at java.lang.reflect.Method.invoke(Method.java:498)\r\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n        at org.apache.tools.ant.Task.perform(Task.java:348)\r\n        at org.apache.tools.ant.Target.execute(Target.java:435)\r\n        at org.apache.tools.ant.Target.performTasks(Target.java:456)\r\n        at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1405)\r\n        at org.apache.tools.ant.Project.executeTarget(Project.java:1376)\r\n        at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\r\n        at org.apache.tools.ant.Project.executeTargets(Project.java:1260)\r\n        at org.apache.tools.ant.Main.runBuild(Main.java:853)\r\n        at org.apache.tools.ant.Main.startAnt(Main.java:235)\r\n        at org.apache.tools.ant.launch.Launcher.run(Launcher.java:285)\r\n        at org.apache.tools.ant.launch.Launcher.main(Launcher.java:112)\r\nCaused by: java.lang.ClassNotFoundException: org.jboss.logging.BasicLogger\r\n        at java.net.URLClassLoader.findClass(URLClassLoader.java:381)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:424)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)\r\n        ... 152 more\r\n```\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/477", "user": "JJengility", "labels": ["a:bug", "in:type-resolution"], "created": "2017-06-29 12:32:02", "closed": "2017-06-29 23:40:24", "commits": {"b6482bb33bf73cc91471ab9fb9aa099badd15bce": {"commitGHEventType": "referenced", "commitUser": "jsotuyod"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b6482bb33bf73cc91471ab9fb9aa099badd15bce", "commitGHEventType": "referenced", "commitUser": "jsotuyod", "commitParents": ["3bd69b15f1942922991fe85cb6723ddf715b5e10"], "nameRev": "b6482bb33bf73cc91471ab9fb9aa099badd15bce tags/pmd_releases/5.8.1~10", "commitMessage": "Fixes #477\n\n - Allow for references to classes not in the classpath\n", "commitDateTime": "2017-06-29 20:36:30", "authoredDateTime": "2017-06-29 20:35:20", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution/ClassTypeResolver.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/typeresolution/ClassTypeResolverTest.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClassTypeResolver.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.getFieldType(net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinition,java.lang.String,java.lang.Class)", "TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClassTypeResolverTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b6482bb33bf73cc91471ab9fb9aa099badd15bce"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 1, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/typeresolution"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.typeresolution.ClassTypeResolver.getFieldType(net.sourceforge.pmd.lang.java.typeresolution.typedefinition.JavaTypeDefinition,java.lang.String,java.lang.Class)"]}, {"title": "MacOS Quickstart curl command doesn't follow redirect", "body": "The curl command on the MacOS quickstart section doesn't follow redirects so it doesn't (currently) work.  Add the -L flag to fix it:\r\n\r\ncurl -OL https://github.com/pmd/pmd/releases/download/pmd_releases%2F5.8.0/pmd-bin-5.8.0.zip\r\n\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/475", "user": "colini", "labels": ["a:bug", "in:documentation"], "created": "2017-06-28 13:37:42", "closed": "2017-07-01 17:42:46", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[java] Error while processing in pmd 5.8.0", "body": "**Rule Set**: N/A\r\n\r\n**Description**: \r\n\r\nWhen I'm running pmd 5.8.0 on [checkstyle](https://github.com/checkstyle/checkstyle) project code, I'm getting following error:\r\n\r\n```\r\n[WARNING] There are 1 PMD processing errors:\r\n[WARNING] ...\\src\\test\\java\\com\\puppycrawl\\tools\\checkstyle\\internal\\XdocsPagesTest.java: Error while processing ...\\src\\test\\java\\com\\puppycrawl\\tools\\checkstyle\\internal\\XdocsPagesTest.java\r\n```\r\nLink to the [XdocsPagesTest.java](https://github.com/checkstyle/checkstyle/blob/master/src/test/java/com/puppycrawl/tools/checkstyle/internal/XdocsPagesTest.java)\r\n\r\n**Running PMD through**: Apache Maven 3.3.9\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/473", "user": "Nimfadora", "labels": ["a:bug", "in:type-resolution"], "created": "2017-06-27 14:48:43", "closed": "2017-06-29 23:59:57", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[java] Error while processing class when EnumMap is used in PMD 5.8.0", "body": "**Rule Set:** N/A\r\n\r\n**Description:** Error while processing class when EnumMap is used in 5.8.0\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n// MyEnum.java\r\npublic enum MyEnum {\r\n    ONE,\r\n    TWO\r\n}\r\n\r\n// Some other java class\r\nEnumMap enumMap = new EnumMap(MyEnum.class);\r\n```\r\n\r\n**Running PMD through:** *Gradle*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/471", "user": "Macarse", "labels": ["a:bug", "has:pr", "in:type-resolution"], "created": "2017-06-26 21:23:42", "closed": "2017-06-29 23:27:38", "commits": {"3692eb0400d9d56634d5cb101ce6e055a73c2da1": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "3692eb0400d9d56634d5cb101ce6e055a73c2da1", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["6657d741abdbfc3a4a2ab37903f4a1c090b64972"], "nameRev": "3692eb0400d9d56634d5cb101ce6e055a73c2da1 tags/pmd_releases/5.8.1~12^2", "commitMessage": "Update changelog, fixes #471\n", "commitDateTime": "2017-06-28 21:11:20", "authoredDateTime": "2017-06-28 21:11:20", "commitGitStats": [{"filePath": "src/site/markdown/overview/changelog.md", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3692eb0400d9d56634d5cb101ce6e055a73c2da1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] ArrayIsStoredDirectly false positive", "body": "**Rule Set:**\r\n`rulesets/java/sunsecure.xml/ArrayIsStoredDirectly`\r\n\r\n**Description:**\r\nFalse positive for `ArrayIsStoredDirectly` when defensively copying an array (manually) and using the `this` keyword to refer to the instance variable. \r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class Foo {\r\n    private final int[] a;\r\n\r\n    public Foo(int[] b) {\r\n        this.a = new int[b.length];\r\n        for (int i = 0; i < b.length; i++) {\r\n            this.a[i] = b[i];  // triggers ArrayIsStoredDirectly\r\n            a[i] = b[i];       // no warning\r\n            this.a[i] = b[i];  // triggers ArrayIsStoredDirectly\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *CLI*\r\n```\r\npmd-bin-5.7.0/bin/run.sh pmd -d . -rulesets java-sunsecure\r\nFoo.java:4:\tThe user-supplied array 'b' is stored directly.\r\nFoo.java:4:\tThe user-supplied array 'b' is stored directly.\r\n```", "url": "https://github.com/pmd/pmd/issues/468", "user": "kevin-wayne", "labels": ["a:bug", "has:pr"], "created": "2017-06-26 16:41:14", "closed": "2017-07-26 18:21:44", "commits": {}, "ttf": 30.00027777777778, "commitsDetails": []}, {"title": "[Java] NullPointerException in JUnitTestsShouldIncludeAssertRule", "body": "**Rule Set:** Java\r\n\r\n**Description:**\r\nThe `@SuppressWarnings(\"deprecation\")` line causes an unhandled NullPointerException in the new JUnitTestsShouldIncludeAssert rule.  The \"deprecation\" string doesn't matter; it could be anything.  Commenting out the line does not change the error either; I have to delete it entirely.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nimport org.junit.Test;\r\n\r\nimport static org.junit.Assert.assertEquals;\r\n\r\npublic class FooTest {\r\n\r\n  @SuppressWarnings(\"deprecation\")\r\n  private static Foo foo = new Foo();\r\n\r\n  @Test\r\n  public void testFoo() {\r\n    assertEquals(\"doesn't matter\", \"doesn't matter\");\r\n  }\r\n\r\n}\r\n```\r\n\r\n**Running PMD through:** *CLI*, pmd version 5.7.0\r\n\r\n**Exception**\r\n```\r\nException applying rule JUnitTestsShouldIncludeAssert on file badcode/BadCode.java, continuing with next rule\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.getRuleAnnotatedExpectedExceptions(JUnitTestsShouldIncludeAssertRule.java:86)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.visit(JUnitTestsShouldIncludeAssertRule.java:42)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:75)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:112)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:75)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:108)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:21)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:75)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:84)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.visit(JUnitTestsShouldIncludeAssertRule.java:34)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:30)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:75)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:224)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:35)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:56)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:75)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:204)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.AbstractJUnitRule.visit(AbstractJUnitRule.java:66)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:32)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:26)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:261)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:465)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:133)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:170)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:97)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:52)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:88)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:27)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```", "url": "https://github.com/pmd/pmd/issues/465", "user": "blerner", "labels": ["a:bug", "has:pr"], "created": "2017-06-23 15:41:49", "closed": "2017-06-24 09:17:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] EnumeratedProperty<T> does not return a T as its value", "body": "**Description:** To use a rule property that can take its value in an enumeration, I think the preferred approach is an EnumeratedProperty. I create an EnumeratedProperty like this:\r\n```java\r\nprivate static final String[] LABELS = { \"foo\", \"bar\" };\r\nenum Foo { FOO, BAR\u00a0}\r\nprivate static final Foo[] CHOICES = { Foo.FOO, Foo.BAR };\r\n\r\npublic static final EnumeratedProperty<Foo> FOO_DESCRIPTOR = new EnumeratedProperty<>(\r\n    \"fooChoice\", \"Choose a instance of Foo\", LABELS, CHOICES, 0, 3.0f);\r\n```\r\nwhere the parameter `0` indicates the default index. But the value returned by `getProperty` is really weird:\r\n* If the property was not explicitly given a value in the ruleset.xml, then `getProperty` returns `\"foo\"` (a String)\r\n* Otherwise, `getProperty` returns an instance of `Foo`, which corresponds to the label given in the XML.\r\n\r\nI would think it's abnormal that `getProperty` may return something other than a `Foo`, especially since it's an `EnumeratedProperty<Foo>`. Is that a bug or am I doing this wrong ?\r\n", "url": "https://github.com/pmd/pmd/issues/459", "user": "oowekyala", "labels": ["a:bug", "has:pr"], "created": "2017-06-22 11:36:06", "closed": "2017-07-17 18:44:34", "commits": {}, "ttf": 25.00027777777778, "commitsDetails": []}, {"title": "[java] Unused Code - UnusedPrivateMethod: false positive", "body": "**Rule Set:** Unused Code - UnusedPrivateMethod\r\n\r\n**Description:** It's reporting a false positive saying that method A is not used when method B, which is the only one calling A, has a parameter of a class which inherits from RuntimeException. (When using RuntimeException instead it works fine).\r\nI am getting: Avoid unused private methods such as 'trackCrash(String,Exception)'.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class Test {\r\n    public void trackRequestException(@NonNull final String method, @NonNull final TestException e) {\r\n        trackCrash(\"Error executing \" + method, e);\r\n    }\r\n\r\n    private void trackCrash(@NonNull final String message, @NonNull final Exception exception) {\r\n        Log.d(\"Test\", message + exception.getMessage());\r\n    }\r\n}\r\n\r\npublic class TestException extends RuntimeException {\r\n\r\n}\r\n```\r\n\r\n**Running PMD through:** * Gradle *\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/441", "user": "fciancio", "labels": ["a:bug", "was:invalid"], "created": "2017-06-13 19:25:36", "closed": "2017-06-19 17:18:50", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[java] EmptyTryBlock: false positive for empty try-with-resource", "body": "**Rule Set:**\r\n\r\nrulesets/java/empty.xml/EmptyTryBlock\r\n\r\n**Description:**\r\n\r\nThe rule says \"Avoid empty try blocks - what's the point?\". I believe an exception should be made for empty try-with-resource blocks, as this is a valid use case. \r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nclass X {\r\n\tvoid method() {\r\n\t\ttry {\r\n\t\t\t// true positive\r\n\t\t} catch (Exception e) {\r\n\t\t}\r\n\r\n\t\ttry (ClientResponse response = execute(() -> target.request(mediaTypes).delete(), DELETE, new ExpectedResponse(status, required))) {\r\n\t\t\t// false positive\r\n\t\t}\r\n\t}\r\n}\r\n```\r\n\r\n**Running PMD through:** *CLI*\r\n\r\n```\r\npmd.bat -d X.java -f xml -R rulesets/java/empty.xml/EmptyTryBlock\r\n```\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/432", "user": "dreniers", "labels": ["a:bug", "has:pr"], "created": "2017-06-09 09:06:31", "closed": "2017-06-23 13:15:45", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "[cpp] CPD gives wrong duplication blocks for CPP code", "body": "**Description:**\r\nI have ran cpdgui.bat(version 5.7.0) for two cpp files, but got wrong duplication blocks.\r\n\r\nPlease find the attached cpp source code. (pls remove .txt extension)\r\n\r\n[HttpSM.cc.txt](https://github.com/pmd/pmd/files/1059945/HttpSM.cc.txt)\r\n[HttpSM.h.txt](https://github.com/pmd/pmd/files/1059946/HttpSM.h.txt)\r\n\r\n**Result:**\r\n[Results.txt](https://github.com/pmd/pmd/files/1059973/Results.txt)\r\n\r\n\r\n\r\n\r\n\r\n\r\n```\r\n\r\n```\r\n\r\n**Running PMD through:** *[ext|gui]*\r\n\r\n\r\n\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/431", "user": "NileshVirkar", "labels": ["a:bug"], "created": "2017-06-08 05:10:17", "closed": "2017-06-17 18:14:56", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[core] Error when running PMD from folder with space", "body": "**Rule Set:**\r\nNONE\r\n\r\n**Description:**\r\nWhen running the PMD command from a root folder with a space in the folder title, eg: \"C:\\PMD folder\"\r\nPMD throws an error:\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nC:\\PMD Folder>pmd\r\n```\r\n```\r\nError: Could not find or load main class folder\\pmd-bin-5.7.0\\bin\\..\\lib\\*\r\n```\r\nWhere class: \"folder\", stands for the last word from the \"PMD folder\"\r\n\r\n\r\n**Running PMD through:** *[CLI ]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/429", "user": "OlafHaalstra", "labels": ["a:bug"], "created": "2017-06-07 13:23:10", "closed": "2017-06-09 13:54:10", "commits": {"777e1cfbd240b7918a6dac7323ca55874ac8b31c": {"commitGHEventType": "referenced", "commitUser": "jsotuyod"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "777e1cfbd240b7918a6dac7323ca55874ac8b31c", "commitGHEventType": "referenced", "commitUser": "jsotuyod", "commitParents": ["31ad6135525e0dddd0537d0a45aac4e5d49b7c06", "45b7e7615bceaf045e85599c27d1e44a1d9d27fc"], "nameRev": "777e1cfbd240b7918a6dac7323ca55874ac8b31c tags/pmd_releases/5.8.0~31", "commitMessage": "Merge pull request #433 from adangel/issue-429\n\nFixes #429 [core] Error when running PMD from folder with space", "commitDateTime": "2017-06-09 15:54:09", "authoredDateTime": "2017-06-09 15:54:09", "commitGitStats": [{"filePath": "pmd-dist/src/main/scripts/bgastviewer.bat", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-dist/src/main/scripts/cpd.bat", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-dist/src/main/scripts/cpdgui.bat", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-dist/src/main/scripts/designer.bat", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-dist/src/main/scripts/pmd.bat", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-dist/src/main/scripts/run.sh", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] PMD requires public modifier on JUnit 5 test", "body": "**Rule Set:**\r\nTestClassWithoutTestCases\r\n\r\n**Description:**\r\nIn Junit5 tests, tests do not require a public modifier any longer. However, PMD reports (without the modifier) that there are no test cases.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\nimport org.junit.jupiter.api.Test;\r\n\r\nclass JUnit5Test {\r\n  @Test\r\n  void myTest() {\r\n  }\r\n}\r\n```\r\nAdding `public` to the test removes the error.\r\n\r\n**Running PMD through:** *Maven*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/428", "user": "TimvdLippe", "labels": ["a:bug"], "created": "2017-06-07 11:31:44", "closed": "2017-06-12 22:21:14", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[apex] CPD error when parsing apex code from release 5.5.3", "body": "**Rule Set:**\r\nNONE\r\n\r\n**Description:**\r\nI'm enable to run CPD on a certain apex classes. I test many version of PMD, i notice the issue is appears from the version 5.5.3 and later (pmd-bin-5.5.2 works well).\r\nI notice that CPD parser is actually (in version 5.5.7) unable to parse some apex code with a big comment on the top of the apex class.\r\n\r\n**Code Sample demonstrating the issue:**\r\nI run a test with 2 files [from force-dot-com-esapi open source project](https://github.com/forcedotcom/force-dot-com-esapi):\r\n`classes/SFDCEncoderConstants.cls` and  `classes/SFDCEncoder.cls`\r\n\r\nI copy those 2 classes to my location: /private/tmp/_jobs/OrgId/classes and i create a build.xml\r\n\r\n```\r\n<?xml version=\"1.0\"?>\r\n<project xmlns='antlib:org.apache.tools.ant'>\r\n  <property name=\"pmd.dir\" value=\"/private/tmp/pmd-bin-5.5.3/\" />\r\n  <path id=\"pmd.classpath\">\r\n    <fileset dir=\"${pmd.dir}lib\"> \r\n      <include name=\"*.jar\" /> \r\n    </fileset>\r\n  </path>\r\n  <taskdef name=\"pmd\" classname=\"net.sourceforge.pmd.ant.PMDTask\" classpathref=\"pmd.classpath\" />\r\n  <taskdef name=\"cpd\" classname=\"net.sourceforge.pmd.cpd.CPDTask\" classpathref=\"pmd.classpath\" />\r\n\r\n  <target name=\"pmd\">\r\n    <pmd shortFilenames=\"true\" >\r\n      <formatter type=\"xml\" toFile=\"pmd.xml\" />\r\n      <ruleset>rulesets/apex/complexity.xml</ruleset>\r\n      <ruleset>rulesets/apex/performance.xml</ruleset>\r\n      <ruleset>rulesets/apex/style.xml</ruleset>\r\n      <ruleset>rulesets/apex/apexunit.xml</ruleset>\r\n      <fileset dir=\"/private/tmp/_jobs/OrgId\">\r\n        <include name=\"**/*.cls\"/>\r\n        <include name=\"**/*.trigger\"/>\r\n      </fileset>\r\n    </pmd>\r\n  </target>\r\n\r\n  <target name=\"cpd\">\r\n      <cpd minimumTokenCount=\"50\" language=\"apex\" format=\"xml\" outputFile=\"cpd.xml\" encoding=\"UTF-8\" ignoreLiterals=\"true\">\r\n          <fileset dir=\"/private/tmp/_jobs/OrgId\">\r\n              <include name=\"classes/*.cls\"/>\r\n          </fileset>\r\n      </cpd>\r\n  </target>\r\n\r\n</project>\r\n\r\n```\r\n\r\nWhen i run the command:\r\n`ant -file /private/tmp/_jobs/OrgId/build.xml cpd -v`\r\n\r\nI get the following issue\r\n\r\n```\r\nBUILD FAILED\r\n/private/tmp/_jobs/OrgId/build.xml:33: java.lang.IndexOutOfBoundsException: fromIndex = -1\r\n  at java.util.ArrayList.subListRangeCheck(ArrayList.java:1002)\r\n  at java.util.ArrayList.subList(ArrayList.java:996)\r\n  at net.sourceforge.pmd.cpd.SourceCode$CodeLoader.getCodeSlice(SourceCode.java:44)\r\n  at net.sourceforge.pmd.cpd.SourceCode.getSlice(SourceCode.java:198)\r\n  at net.sourceforge.pmd.cpd.Mark.getSourceCodeSlice(Mark.java:40)\r\n  at net.sourceforge.pmd.cpd.Match.getSourceCodeSlice(Match.java:72)\r\n  at net.sourceforge.pmd.cpd.XMLRenderer.addCodeSnippet(XMLRenderer.java:113)\r\n  at net.sourceforge.pmd.cpd.XMLRenderer.render(XMLRenderer.java:94)\r\n  at net.sourceforge.pmd.cpd.CPDTask.report(CPDTask.java:129)\r\n  at net.sourceforge.pmd.cpd.CPDTask.execute(CPDTask.java:84)\r\n  at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n  at java.lang.reflect.Method.invoke(Method.java:498)\r\n  at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n  at org.apache.tools.ant.Task.perform(Task.java:348)\r\n  at org.apache.tools.ant.Target.execute(Target.java:435)\r\n  at org.apache.tools.ant.Target.performTasks(Target.java:456)\r\n  at org.apache.tools.ant.Project.executeSortedTargets(Project.java:1405)\r\n  at org.apache.tools.ant.Project.executeTarget(Project.java:1376)\r\n  at org.apache.tools.ant.helper.DefaultExecutor.executeTargets(DefaultExecutor.java:41)\r\n  at org.apache.tools.ant.Project.executeTargets(Project.java:1260)\r\n  at org.apache.tools.ant.Main.runBuild(Main.java:854)\r\n  at org.apache.tools.ant.Main.startAnt(Main.java:236)\r\n  at org.apache.tools.ant.launch.Launcher.run(Launcher.java:285)\r\n  at org.apache.tools.ant.launch.Launcher.main(Launcher.java:112)\r\n\r\nTotal time: 0 seconds\r\nApache Ant(TM) version 1.9.7 compiled on April 9 2016\r\nBuildfile: /private/tmp/_jobs/OrgId/build.xml\r\nDetected Java version: 1.8 in: /Library/Java/JavaVirtualMachines/jdk1.8.0_77.jdk/Contents/Home/jre\r\nDetected OS: Mac OS X\r\nparsing buildfile /private/tmp/_jobs/OrgId/build.xml with URI = file:/private/tmp/_jobs/OrgId/build.xml\r\nProject base dir set to: /private/tmp/_jobs/OrgId\r\nparsing buildfile jar:file:/usr/local/Cellar/ant/1.9.7/libexec/lib/ant.jar!/org/apache/tools/ant/antlib.xml with URI = jar:file:/usr/local/Cellar/ant/1.9.7/libexec/lib/ant.jar!/org/apache/tools/ant/antlib.xml from a zip file\r\nBuild sequence for target(s) `cpd' is [cpd]\r\nComplete build sequence is [cpd, pmd, ]\r\n\r\ncpd:\r\n      [cpd] Starting run, minimumTokenCount is 50\r\n      [cpd] Tokenizing files\r\n      [cpd] Tokenizing /private/tmp/_jobs/OrgId/classes/SFDCEncoder.cls\r\n      [cpd] Tokenizing /private/tmp/_jobs/OrgId/classes/SFDCEncoderConstants.cls\r\n      [cpd] Starting to analyze code\r\n      [cpd] Done analyzing code; that took 7 milliseconds\r\n      [cpd] Generating report\r\n\r\n```\r\n\r\n1- `classes/SFDCEncoder.cls content:`\r\n\r\n```\r\n\r\n/**\r\n * OWASP Enterprise Security API (ESAPI)\r\n * \r\n * This file is part of the Open Web Application Security Project (OWASP)\r\n * Enterprise Security API (ESAPI) project. For details, please see\r\n * <a href=\"http://www.owasp.org/index.php/ESAPI\">http://www.owasp.org/index.php/ESAPI</a>.\r\n *\r\n * Copyright (c) 2010 - Salesforce.com\r\n * \r\n * The Apex ESAPI implementation is published by Salesforce.com under the New BSD license. You should read and accept the\r\n * LICENSE before you use, modify, and/or redistribute this software.\r\n * \r\n * @author Yoel Gluck (securecloud .at. salesforce.com) <a href=\"http://www.salesforce.com\">Salesforce.com</a>\r\n * @created 2010\r\n */\r\n\r\n/**\r\n * This class is a basic encoder/escaper to help prevent some XSS attacks etc.  \r\n */\r\nglobal with sharing class SFDCEncoder {\r\n\t\r\n\t/* TODO Yoel - all these functions should be converted into a white list aproach - I am using blacklist to be consistent with the VISUALFORCE functions */ \r\n\t/* TODO Yoel - Do we need to encode ASCII/Unicode white-space/new-line characters? These used to cause some security issues in some browsers not sure if this is still the case */\r\n\t \t\r\n\t/* Note - the order of these encoding strings is very important so we don't end up with double encoding. \r\n\t      Each string we search for, must not be found as a result of a previous encoded string replacement */\r\n\t/************ CLASS CODE HERE *************/\r\n}\r\n```\r\n\r\n\r\n2-  `classes/SFDCEncoderConstants.cls content:`\r\n\r\n```\r\n\r\n/**\r\n * OWASP Enterprise Security API (ESAPI)\r\n * \r\n * This file is part of the Open Web Application Security Project (OWASP)\r\n * Enterprise Security API (ESAPI) project. For details, please see\r\n * <a href=\"http://www.owasp.org/index.php/ESAPI\">http://www.owasp.org/index.php/ESAPI</a>.\r\n *\r\n * Copyright (c) 2010 - Salesforce.com\r\n * \r\n * The Apex ESAPI implementation is published by Salesforce.com under the New BSD license. You should read and accept the\r\n * LICENSE before you use, modify, and/or redistribute this software.\r\n * \r\n * @author Yoel Gluck (securecloud .at. salesforce.com) <a href=\"http://www.salesforce.com\">Salesforce.com</a>\r\n * @created 2010\r\n */\r\n\r\n/**\r\n * Common character classes used for input validation, output encoding, verifying password strength\r\n * CSRF token generation, generating salts, etc. I removed all the constatnts that are not used so we\r\n * don't burn governor limits.\r\n */\r\npublic with sharing class SFDCEncoderConstants {\r\n\r\n\t/************ CLASS CODE HERE *************/\r\n}\r\n\r\n```\r\n\r\n**Running PMD through:** *[Ant]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/427", "user": "RedaBenh", "labels": ["a:bug"], "created": "2017-06-07 09:48:37", "closed": "2017-06-17 18:22:10", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "[java] Parsing Problem with Annotation for Array Member Types", "body": "following java 8 method leads to parsing error\r\n\r\n\tpublic Object @Nullable [] testAnnotationsToArrayElements() {\r\n\t\treturn null;\r\n\t}\r\n\r\nPR will follow", "url": "https://github.com/pmd/pmd/issues/417", "user": "Snap252", "labels": ["a:bug"], "created": "2017-05-30 08:51:20", "closed": "2017-06-01 15:05:07", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[java] Parsing Error when having an Annotated Inner class", "body": "having a valid Java-Class:\r\n\r\n\tpublic class X {\r\n\t\tstatic class StaticInner {\r\n\t    \t\tstatic class StaticInnerInner {\r\n\t\r\n\t        }\r\n\t    }\r\n\t\r\n\t    public void testAnnotationOnInnerClass() {\r\n\t    \tfinal StaticInner.@Nullable StaticInnerInner x = null;\r\n\t    }\r\n\t}\r\n\r\nThen the `@Nullable` will not be parsable - even it is the only way to annotate the inner class here.\r\n\r\nI think the problem is somewhere in Java.jjt\r\n`void ClassOrInterfaceType():`", "url": "https://github.com/pmd/pmd/issues/415", "user": "Snap252", "labels": ["a:bug"], "created": "2017-05-29 16:46:36", "closed": "2017-06-01 15:05:07", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[java] Java 8 parsing problem with annotations for wildcards", "body": "pmd-java:\r\n- Annotations are also allowed for generic wildcards (like NonNull-annotations in Lists)\r\n\r\nrun test case:\r\n`net.sourceforge.pmd.lang.java.ast.ParserCornersTest.testParsersCases18()`\r\nwith\r\nclass ParserCornerCases18 modified:\r\n`public List<@AnnotatedUsage ?> testWildCardWithAnnotation() {\r\n    \treturn null;\r\n    }`\r\nresult: parsing error\r\nfix for java.jjt:\r\n\r\n\tvoid TypeArgument():\r\n\t{}\r\n\t{\r\n\t   (Annotation() {checkForBadTypeAnnotations();})* (ReferenceType() | \"?\" [ WildcardBounds() ])\r\n\t}\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/414", "user": "Snap252", "labels": ["a:bug"], "created": "2017-05-29 16:17:58", "closed": "2017-06-01 15:05:07", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[java] ImmutableField: False positive with lombok", "body": "See comment https://sourceforge.net/p/pmd/bugs/1494/#041f\r\n\r\n**Rule Set:**\r\nDesign / ImmutableField\r\n\r\n**Description:**\r\n\r\nwith PMD 5.7, I get following:\r\n\r\nPrivate field 'id' could be made final; it is only initialized in the declaration or constructor.\r\n\r\nThe id could be later set using Setter method.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\n\r\n@Getter\r\n@Setter\r\npublic class Foo {\r\n    private String id;\r\n    public Foo(String id) {\r\n        this.id = id;\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/410", "user": "adangel", "labels": ["a:bug"], "created": "2017-05-27 18:24:16", "closed": "2017-06-11 21:11:47", "commits": {"494040fe924bf6433646df7b005a0c9119669d15": {"commitGHEventType": "referenced", "commitUser": "jsotuyod"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "494040fe924bf6433646df7b005a0c9119669d15", "commitGHEventType": "referenced", "commitUser": "jsotuyod", "commitParents": ["cb5452fcbbd4278119593160193ddd5a935dec70", "8af4d719407ca6a985d4afbac07f60db10cfb12f"], "nameRev": "494040fe924bf6433646df7b005a0c9119669d15 tags/pmd_releases/5.8.0~25", "commitMessage": "Merge pull request #434 from adangel/issue-410\n\n[java] ImmutableField: False positive with lombok (fixes #410)", "commitDateTime": "2017-06-11 23:11:47", "authoredDateTime": "2017-06-11 23:11:47", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/ImmutableFieldRule.java", "insertions": 10, "deletions": 7, "lines": 17}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/design/xml/ImmutableField.xml", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ImmutableFieldRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.ImmutableFieldRule", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.ImmutableFieldRule.visit(net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration,java.lang.Object)", "TOT": 9, "UPD": 4, "INS": 3, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[java] DFA not analyzing asserts", "body": "I came across this StackOverflow post, I haven't checked if the issue remains, but since I was unable to find any related issue on our trackers it's highly probable that it's still an issue.\r\n\r\nhttps://stackoverflow.com/questions/1150633/pmd-rule-dataflowanomalyanalysis-oddness\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/408", "user": "jsotuyod", "labels": ["a:bug", "has:pr", "in:data-flow"], "created": "2017-05-26 14:39:02", "closed": "2017-06-26 16:05:12", "commits": {}, "ttf": 31.00027777777778, "commitsDetails": []}, {"title": "[java] ConstructorCallsOverridableMethodRule: false positive for method called from lambda expression", "body": "**Rule Set:**\r\n\r\n```\r\n<rule ref=\"rulesets/java/design.xml/ConstructorCallsOverridableMethod\"/>\r\n```\r\n\r\n**Description:**\r\n\r\nThe code below gives a false positive for the rule ConstructorCallsOverridableMethodRule for \"dangerous\" methods called from lambda expressions. I believe this is a false positive, because the method is not actually called during the constructor invocation. Also, replacing the lambda expressions by anonymous class does not give the violation.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class Foo {\r\n public Foo(String s) {\r\n  addActionListener(() -> bar());\r\n }\r\n public void bar() {}\r\n}\r\n```\r\n\r\n**Running PMD through:** *CLI*\r\n\r\n```\r\nC:\\pmd\\bin>pmd.bat -d FalsePositive.java -f xml -R rulesets/java/design.xml/ConstructorCallsOverridableMethod\r\n```\r\n\r\nOutputs:\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<pmd version=\"5.6.1\" timestamp=\"2017-05-23T02:44:45.868\">\r\n<file name=\"C:\\pmd\\bin\\FalsePositive.java\">\r\n<violation beginline=\"3\" endline=\"3\" begincolumn=\"27\" endcolumn=\"31\" rule=\"Const\r\nructorCallsOverridableMethod\" ruleset=\"Design\" class=\"Foo\" method=\"Foo\" external\r\nInfoUrl=\"https://pmd.github.io/pmd-5.6.1/pmd-java/rules/java/design.html#Constru\r\nctorCallsOverridableMethod\" priority=\"1\">\r\nOverridable method 'bar' called during object construction\r\n</violation>\r\n</file>\r\n</pmd>\r\n```\r\n", "url": "https://github.com/pmd/pmd/issues/397", "user": "dreniers", "labels": ["a:bug"], "created": "2017-05-23 09:47:59", "closed": "2017-05-26 17:28:29", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "[core] PMD exclude rules are failing with IllegalArgumentException with non-default minimumPriority", "body": "**Rule Set:**\r\nIn attached project.\r\n\r\n**Description:**\r\nUpgraded to using PMD 5.6.1, now the following rules in our custom ruleset are failing the build with\r\n```\r\njava.lang.IllegalArgumentException: Unable to exclude rules [RuleNameGoesHere]; perhaps the rule name is mispelled?\r\n```\r\n\r\nFailing rules:\r\nDataflowAnomalyAnalysis\r\nShortClassName\r\nUselessParentheses\r\n\r\nThe rule names match up with latest PMD doc so they are not misspelled (ironically, the error message misspells the word misspelled). Why are these failing?\r\nIn addition, PMD should provide a list of all available rules (perhaps in INFO mode) instead of a pretty useless error message that leaves the user in the dark.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n[demo (3).zip](https://github.com/pmd/pmd/files/1005249/demo.3.zip)\r\n\r\n**Running PMD through:** *Gradle*\r\n\r\nAlso see\r\n https://github.com/gradle/gradle/issues/1970", "url": "https://github.com/pmd/pmd/issues/394", "user": "asarkar", "labels": ["a:bug", "has:pr"], "created": "2017-05-16 17:00:24", "closed": "2017-11-22 21:04:10", "commits": {"ba3e2bc788438ab9828ad4d3cb5ebcf9f367dd14": {"commitGHEventType": "closed", "commitUser": "jsotuyod"}}, "ttf": 190.00027777777777, "commitsDetails": [{"commitHash": "ba3e2bc788438ab9828ad4d3cb5ebcf9f367dd14", "commitGHEventType": "closed", "commitUser": "jsotuyod", "commitParents": ["c647f738113a907e6594f8dc6e1168d758a6a38f"], "nameRev": "ba3e2bc788438ab9828ad4d3cb5ebcf9f367dd14 tags/pmd_releases/6.0.0~46^2~7", "commitMessage": "[core] RuleSetFactory: Filter by minimumPriority at the end\n\n-   Resolves #394\n", "commitDateTime": "2017-11-11 12:03:45", "authoredDateTime": "2017-11-11 11:37:45", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/RuleSet.java", "insertions": 24, "deletions": 4, "lines": 28}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/RuleSetFactory.java", "insertions": 14, "deletions": 14, "lines": 28}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/RuleSetFactoryTest.java", "insertions": 39, "deletions": 0, "lines": 39}, {"filePath": "pmd-core/src/test/resources/net/sourceforge/pmd/rulesets/ruleset-minimum-priority-exclusion.xml", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "pmd-core/src/test/resources/net/sourceforge/pmd/rulesets/ruleset-minimum-priority.xml", "insertions": 17, "deletions": 0, "lines": 17}, {"filePath": "pmd-core/src/test/resources/rulesets/dummy/basic.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RuleSet.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.RuleSet.RuleSetBuilder.addRule(net.sourceforge.pmd.Rule)", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.RuleSet.RuleSetBuilder.filterRulesByPriority(net.sourceforge.pmd.RulePriority)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RuleSetFactory.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.RuleSetFactory.parseRuleSetReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet.RuleSetBuilder,org.w3c.dom.Element,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.RuleSetFactory.parseRuleReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet.RuleSetBuilder,org.w3c.dom.Node,java.lang.String,boolean)", "TOT": 9, "UPD": 1, "INS": 1, "MOV": 5, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet.RuleSetBuilder,org.w3c.dom.Node)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(net.sourceforge.pmd.RuleSetReferenceId,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RuleSetFactoryTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.RuleSetFactoryTest.testOverridePriorityLoadWithMinimum()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.RuleSetFactoryTest.testExcludeWithMinimumPriority()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ba3e2bc788438ab9828ad4d3cb5ebcf9f367dd14"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 38, "deletions": 18, "lines": 56, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 21, "UPD": 5, "INS": 4, "MOV": 9, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd"], "changesInPackagesSPOON": ["net.sourceforge.pmd.RuleSet.RuleSetBuilder.filterRulesByPriority(net.sourceforge.pmd.RulePriority)", "net.sourceforge.pmd.RuleSet.RuleSetBuilder.addRule(net.sourceforge.pmd.Rule)", "net.sourceforge.pmd.RuleSetFactory.parseRuleSetReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet.RuleSetBuilder,org.w3c.dom.Element,java.lang.String)", "net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(net.sourceforge.pmd.RuleSetReferenceId,boolean)", "net.sourceforge.pmd.RuleSetFactory.parseSingleRuleNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet.RuleSetBuilder,org.w3c.dom.Node)", "net.sourceforge.pmd.RuleSetFactory.parseRuleReferenceNode(net.sourceforge.pmd.RuleSetReferenceId,net.sourceforge.pmd.RuleSet.RuleSetBuilder,org.w3c.dom.Node,java.lang.String,boolean)"]}, {"title": "[core] NPE in RuleSet.hashCode", "body": "Hello,\r\n\r\nI have recently installed PMD with a ruleset that can be loaded. When trying to use \"check code\" I receive an NPE: \r\n\r\n```\r\nava.lang.NullPointerException\r\n        at net.sourceforge.pmd.RuleSet.hashCode(RuleSet.java:542)\r\n        at java.util.HashMap.hash(HashMap.java:338)\r\n        at java.util.HashMap.containsKey(HashMap.java:595)\r\n        at net.sourceforge.pmd.lang.rule.AbstractRuleChainVisitor.add(AbstractRuleChainVisitor.java:46)\r\n        at net.sourceforge.pmd.RuleChain.add(RuleChain.java:49)\r\n        at net.sourceforge.pmd.RuleChain.add(RuleChain.java:34)\r\n        at net.sourceforge.pmd.RuleSets.addRuleSet(RuleSets.java:61)\r\n        at net.sourceforge.pmd.RuleSets.<init>(RuleSets.java:48)\r\n        at net.sourceforge.pmd.eclipse.runtime.cmd.BaseVisitor$1.createRuleSets(BaseVisitor.java:304)\r\n        at net.sourceforge.pmd.RulesetsFactoryUtils.getRuleSets(RulesetsFactoryUtils.java:36)\r\n        at net.sourceforge.pmd.processor.AbstractPMDProcessor.createRuleSets(AbstractPMDProcessor.java:63)\r\n        at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:68)\r\n        at net.sourceforge.pmd.eclipse.runtime.cmd.BaseVisitor.reviewResource(BaseVisitor.java:351)\r\n        at net.sourceforge.pmd.eclipse.runtime.cmd.ResourceVisitor.visit(ResourceVisitor.java:29)\r\n        at org.eclipse.core.internal.resources.Resource$2.visit(Resource.java:120)\r\n        at org.eclipse.core.internal.resources.Resource$1.visitElement(Resource.java:84)\r\n        at org.eclipse.core.internal.watson.ElementTreeIterator.doIteration(ElementTreeIterator.java:82)\r\n        at org.eclipse.core.internal.watson.ElementTreeIterator.iterate(ElementTreeIterator.java:129)\r\n        at org.eclipse.core.internal.resources.Resource.accept(Resource.java:94)\r\n        at org.eclipse.core.internal.resources.Resource.accept(Resource.java:52)\r\n        at org.eclipse.core.internal.resources.Resource.accept(Resource.java:117)\r\n        at org.eclipse.core.internal.resources.Resource.accept(Resource.java:105)\r\n        at net.sourceforge.pmd.eclipse.runtime.cmd.ReviewCodeCmd.processResource(ReviewCodeCmd.java:424)\r\n        at net.sourceforge.pmd.eclipse.runtime.cmd.ReviewCodeCmd.processResources(ReviewCodeCmd.java:373)\r\n        at net.sourceforge.pmd.eclipse.runtime.cmd.ReviewCodeCmd.execute(ReviewCodeCmd.java:191)\r\n        at net.sourceforge.pmd.eclipse.runtime.cmd.JobCommandProcessor$1.run(JobCommandProcessor.java:90)\r\n        at org.eclipse.core.internal.jobs.Worker.run(Worker.java:55)\r\n\r\n```\r\n\r\nI checked out the code and I suspect that somehow the name or the rules are null in the hashcode() implementation of the Rule. \r\n\r\nI am not sure if this is to do with my rules, the plugin or the core code. It appears to be an issue in the core code, and I thought I would post it simply because an NPE is likely not planned to happen on that call :) \r\n\r\nI am using: \r\n\r\nPMD: 5.6.1\r\nEclipse Neon.3 \r\nPlugin version: 4.0.13.v20170429-1921 \r\nUbuntu 16.04.2 LTS\r\n\r\nPlease let me know if there is more info I can provide ", "url": "https://github.com/pmd/pmd/issues/380", "user": "pandaadb", "labels": ["a:bug"], "created": "2017-05-05 13:06:10", "closed": "2017-06-16 23:40:21", "commits": {"b964698768106aea925421fa30d8055568eaa711": {"commitGHEventType": "closed", "commitUser": "jsotuyod"}}, "ttf": 42.000277777777775, "commitsDetails": [{"commitHash": "b964698768106aea925421fa30d8055568eaa711", "commitGHEventType": "closed", "commitUser": "jsotuyod", "commitParents": ["2b0769a1da171d8c872e09ae798aea6e579fb169"], "nameRev": "b964698768106aea925421fa30d8055568eaa711 tags/pmd_releases/5.8.0~15^2~1", "commitMessage": "Update changelog, fixes #380\n", "commitDateTime": "2017-06-09 12:10:14", "authoredDateTime": "2017-06-09 12:10:14", "commitGitStats": [{"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b964698768106aea925421fa30d8055568eaa711"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] Parser Error for empty statements", "body": "this code will cause the error\r\n`import java.util.Map;;\r\nimport java.util.Map;`", "url": "https://github.com/pmd/pmd/issues/378", "user": "mrlzh", "labels": ["a:bug"], "created": "2017-05-05 10:01:28", "closed": "2017-05-20 19:38:19", "commits": {"4e72eef49576c5b28e41049c6a9784a4a05eca56": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "4e72eef49576c5b28e41049c6a9784a4a05eca56", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["362fa0e19ebb1573e676d46bd4a56af9ca1ca108"], "nameRev": "4e72eef49576c5b28e41049c6a9784a4a05eca56 tags/pmd_releases/5.7.0~4^2", "commitMessage": "[java] Parser Error for empty statements\nFixes #378\n", "commitDateTime": "2017-05-20 21:28:39", "authoredDateTime": "2017-05-20 21:28:39", "commitGitStats": [{"filePath": "pmd-java/etc/grammar/Java.jjt", "insertions": 8, "deletions": 5, "lines": 13}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ParserCornersTest.java", "insertions": 23, "deletions": 0, "lines": 23}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ParserCornersTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ParserCornersTest.testParseEmptyStatements()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4e72eef49576c5b28e41049c6a9784a4a05eca56"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 8, "deletions": 5, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/etc/grammar/Java.jjt"], "changesInPackagesSPOON": []}, {"title": "[jsp] Wrong issue \"JSP file should use UTF-8 encoding\"", "body": "**Rule Set:**\r\nJspEncoding\r\n\r\n**Description:**\r\nMy jsp already contains headers:\r\n`<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>` \r\nand \r\n`<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>`\r\n\r\nBut codacy (they use PMD) shows issues \"JSP file should use UTF-8 encoding\" in my jsp and recommends to add this headers.\r\n\r\nCodacy support answered me:\r\n> We did some tests here and this seems to be an issue with PMD, so my suggestion is to report this directly with PMD.\r\n\r\n**Code Sample demonstrating the issue:**\r\nmy jsp file\r\n```\r\n<%@ page contentType=\"text/html;charset=UTF-8\" language=\"java\" %>\r\n<%@ taglib prefix=\"c\" uri=\"http://java.sun.com/jsp/jstl/core\" %>\r\n<%@ taglib prefix=\"fmt\" uri=\"http://java.sun.com/jsp/jstl/fmt\" %>\r\n<%@ taglib prefix=\"fn\" uri=\"http://topjava.javawebinar.ru/functions\" %>\r\n<html>\r\n<head>\r\n    <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>\r\n    <title>Meal list</title>\r\n    <link rel=\"stylesheet\" href=\"css/style.css\">\r\n</head>\r\n<body>\r\n...\r\n```\r\n\r\n**Running PMD through:** *[CLI | Ant | Maven | Gradle | Designer | Other]*\r\nCodacy (https://www.codacy.com)\r\n", "url": "https://github.com/pmd/pmd/issues/369", "user": "denisZhe", "labels": ["a:bug", "good first issue"], "created": "2017-04-27 19:39:17", "closed": "2017-05-20 19:38:17", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "[java] InvalidSlf4jMessageFormat does not handle inline incrementation of arguments", "body": "**Rule Set:**\r\nLogging-Java/`InvalidSlf4jMessageFormat`\r\n\r\n**Description:**\r\n\r\n`InvalidSlf4jMessageFormat` produces false-positives when inline  `++value`  notation is used in arguments of `Logger.info` method.\r\n\r\nThis seems to be somehow related to https://github.com/pmd/pmd/issues/253, where value is also \"calculated\".\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\nLogger LOG = LoggerFactory.getLogger(Test.class);\r\nint attempt = 0;\r\nLOG.info(\"test (attempt #{})\", ++attempt);\r\n```\r\n\r\nproduces bogus error:\r\n\r\n```\r\nRule:InvalidSlf4jMessageFormat Priority:5 Missing arguments, expected 1 argument but have 0.\r\n```\r\n\r\nHowever this:\r\n\r\n```java\r\nLogger LOG = LoggerFactory.getLogger(Test.class);\r\nint attempt = 0;\r\nattempt += 1;\r\nLOG.info(\"test (attempt #{})\", attempt);\r\n```\r\n\r\nworks fine.\r\n\r\n**PMD Version:** *5.5.6*\r\n**Running PMD through:** *Maven*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/365", "user": "lidel", "labels": ["a:bug", "has:pr"], "created": "2017-04-25 13:49:56", "closed": "2017-06-23 13:15:45", "commits": {}, "ttf": 58.000277777777775, "commitsDetails": []}, {"title": "[core] Stream closed exception when running through maven", "body": "Trying to get maven [pmd plugin updated to PMD 5.6.0](https://issues.apache.org/jira/browse/MPMD-233). We get couple of strange IOExceptions when running the unit tests.\r\n\r\nObservations:\r\n* Doesn't occur with PMD 5.5.6, only with 5.6.0. So, something, that's on master branch, but not on pmd/5.5.x branch.\r\n* If the thread count in the PMD configuration is set to 0 (so, no multi-threading), then the unit tests work.\r\n\r\nCurrent state of the work: https://github.com/adangel/maven-plugins/tree/pmd-upgrade / https://github.com/adangel/maven-plugins/commit/7f3a8372755b7d18065a3090a899b611280b418c\r\n\r\nBe aware - I'll rebase this branch, when pushing it to apache.\r\n\r\nExceptions:\r\n```\r\nRunning org.apache.maven.plugin.pmd.PmdReportTest\r\njava.io.IOException: Stream closed\r\n\tat java.util.zip.InflaterInputStream.ensureOpen(InflaterInputStream.java:67)\r\n\tat java.util.zip.InflaterInputStream.read(InflaterInputStream.java:121)\r\n\tat java.io.FilterInputStream.read(FilterInputStream.java:83)\r\n\tat net.sourceforge.pmd.util.ResourceLoader$1.read(ResourceLoader.java:109)\r\n\tat java.io.InputStream.read(InputStream.java:170)\r\n\tat java.util.zip.CheckedInputStream.read(CheckedInputStream.java:82)\r\n\tat java.io.FilterInputStream.read(FilterInputStream.java:107)\r\n\tat org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:2146)\r\n\tat org.apache.commons.io.IOUtils.copy(IOUtils.java:2102)\r\n\tat org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:2123)\r\n\tat org.apache.commons.io.IOUtils.copy(IOUtils.java:2078)\r\n\tat org.apache.commons.io.IOUtils.toByteArray(IOUtils.java:721)\r\n\tat net.sourceforge.pmd.RuleSetFactoryCompatibility.filterRuleSetFile(RuleSetFactoryCompatibility.java:94)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:283)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:211)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRule(RuleSetFactory.java:258)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleReferenceNode(RuleSetFactory.java:588)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleNode(RuleSetFactory.java:358)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:306)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:211)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:206)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:167)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:151)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:68)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:27)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\njava.io.IOException: Stream closed\r\n\tat java.util.zip.InflaterInputStream.ensureOpen(InflaterInputStream.java:67)\r\n\tat java.util.zip.InflaterInputStream.read(InflaterInputStream.java:121)\r\n\tat java.io.FilterInputStream.read(FilterInputStream.java:83)\r\n\tat net.sourceforge.pmd.util.ResourceLoader$1.read(ResourceLoader.java:109)\r\n\tat java.io.InputStream.read(InputStream.java:170)\r\n\tat java.util.zip.CheckedInputStream.read(CheckedInputStream.java:82)\r\n\tat java.io.FilterInputStream.read(FilterInputStream.java:107)\r\n\tat org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:2146)\r\n\tat org.apache.commons.io.IOUtils.copy(IOUtils.java:2102)\r\n\tat org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:2123)\r\n\tat org.apache.commons.io.IOUtils.copy(IOUtils.java:2078)\r\n\tat org.apache.commons.io.IOUtils.toByteArray(IOUtils.java:721)\r\n\tat net.sourceforge.pmd.RuleSetFactoryCompatibility.filterRuleSetFile(RuleSetFactoryCompatibility.java:94)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:283)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:211)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRule(RuleSetFactory.java:258)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleReferenceNode(RuleSetFactory.java:588)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleNode(RuleSetFactory.java:358)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:306)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:211)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:206)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:167)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:151)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:68)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:27)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n[ERROR] PMD processing errors:\r\n[ERROR] /home/andreas/projects/programming/apache.org/maven-plugins/maven-pmd-plugin/src/test/resources/unit/processing-error/src/BrokenFile.java: Error while parsing /home/andreas/projects/programming/apache.org/maven-plugins/maven-pmd-plugin/src/test/resources/unit/processing-error/src/BrokenFile.java\r\nTests run: 15, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 3.162 sec <<< FAILURE! - in org.apache.maven.plugin.pmd.PmdReportTest\r\ntestFileURL(org.apache.maven.plugin.pmd.PmdReportTest)  Time elapsed: 1.013 sec  <<< ERROR!\r\njava.lang.RuntimeException: org.apache.maven.reporting.MavenReportException: Failure executing PMD: Couldn't find the class Stream closed\r\n\tat org.apache.maven.plugin.pmd.PmdReport.canGenerateReport(PmdReport.java:277)\r\n\tat org.apache.maven.reporting.AbstractMavenReport.execute(AbstractMavenReport.java:119)\r\n\tat org.apache.maven.plugin.pmd.PmdReportTest.testFileURL(PmdReportTest.java:165)\r\nCaused by: org.apache.maven.reporting.MavenReportException: Failure executing PMD: Couldn't find the class Stream closed\r\n\tat org.apache.maven.plugin.pmd.PmdReport.processFilesWithPMD(PmdReport.java:469)\r\n\tat org.apache.maven.plugin.pmd.PmdReport.executePmd(PmdReport.java:386)\r\n\tat org.apache.maven.plugin.pmd.PmdReport.executePmdWithClassloader(PmdReport.java:290)\r\n\tat org.apache.maven.plugin.pmd.PmdReport.canGenerateReport(PmdReport.java:264)\r\n\t... 24 more\r\nCaused by: java.lang.RuntimeException: Couldn't find the class Stream closed\r\n\tat net.sourceforge.pmd.RuleSetFactory.classNotFoundProblem(RuleSetFactory.java:332)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:324)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:211)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRule(RuleSetFactory.java:258)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleReferenceNode(RuleSetFactory.java:588)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleNode(RuleSetFactory.java:358)\r\n\tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:306)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:211)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:206)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:167)\r\n\tat net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:151)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:68)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:27)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n\r\nResults :\r\n\r\nTests in error: \r\n  org.apache.maven.plugin.pmd.PmdReportTest#testFileURL RuntimeException org.apa...\r\n\r\nTests run: 34, Failures: 0, Errors: 1, Skipped: 0\r\n\r\n```\r\n\r\nI've also seen another test failing before, PmdReportTest#testCustomConfiguration\r\n", "url": "https://github.com/pmd/pmd/issues/364", "user": "adangel", "labels": ["a:bug"], "created": "2017-04-24 18:34:30", "closed": "2017-04-25 20:59:19", "commits": {"b2150bbeb6de91527155e5fee75a999ef0c82a46": {"commitGHEventType": "closed", "commitUser": "adangel"}, "9fae304b6f895d9d517842e720622fd1ca68188e": {"commitGHEventType": "closed", "commitUser": "adangel"}, "25e840cd68f9f1b5438fe92a700fdcc11d4cc21a": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "b2150bbeb6de91527155e5fee75a999ef0c82a46", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["95f33d8cbe3fcb4b8413878e4f015d3c2eb4d7c8"], "nameRev": "b2150bbeb6de91527155e5fee75a999ef0c82a46 tags/pmd_releases/5.6.1~5", "commitMessage": "Synchronize the loading/parsing of a ruleset\nFixes #364\n", "commitDateTime": "2017-04-24 21:59:51", "authoredDateTime": "2017-04-24 21:59:51", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/RuleSetFactory.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RuleSetFactory.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(net.sourceforge.pmd.RuleSetReferenceId,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "9fae304b6f895d9d517842e720622fd1ca68188e", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["9653ee802508f7b5a3d65065e1c5763f11b27c22"], "nameRev": "9fae304b6f895d9d517842e720622fd1ca68188e tags/pmd_releases/5.6.1~3", "commitMessage": "Disable caching for URLConnections\nFixes #364, refs #337\n", "commitDateTime": "2017-04-25 22:46:08", "authoredDateTime": "2017-04-25 22:46:08", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/util/ResourceLoader.java", "insertions": 5, "deletions": 21, "lines": 26}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResourceLoader.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.util.ResourceLoader.loadResourceAsStream(java.lang.String,java.lang.ClassLoader)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.util.ResourceLoader.loadResourceAsStream(java.lang.String,java.lang.ClassLoader).1.close()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "25e840cd68f9f1b5438fe92a700fdcc11d4cc21a", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["9c3bd5ef91fc3f6c3540567878f0494401d0e733"], "nameRev": "25e840cd68f9f1b5438fe92a700fdcc11d4cc21a tags/pmd_releases/5.5.7~2", "commitMessage": "Disable caching for URLConnections\nFixes #364, refs #337\n\n(cherry picked from commit 9fae304b6f895d9d517842e720622fd1ca68188e)\n", "commitDateTime": "2017-04-29 21:30:07", "authoredDateTime": "2017-04-29 21:30:07", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/util/ResourceLoader.java", "insertions": 5, "deletions": 21, "lines": 26}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResourceLoader.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.util.ResourceLoader.loadResourceAsStream(java.lang.String,java.lang.ClassLoader)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.util.ResourceLoader.loadResourceAsStream(java.lang.String,java.lang.ClassLoader).1.close()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b2150bbeb6de91527155e5fee75a999ef0c82a46"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd"], "changesInPackagesSPOON": ["net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(net.sourceforge.pmd.RuleSetReferenceId,boolean)"]}, {"title": "[java] AccessorClassGeneration throws ClassCastException when seeing array construction", "body": "The rule `java/design/AccessorClassGeneration` fails with the following exception trace:\r\n```\r\nCaused by: java.lang.ClassCastException: net.sourceforge.pmd.lang.java.ast.ASTArrayDimsAndInits cannot be cast to net.sourceforge.pmd.lang.java.ast.ASTArguments\r\n\tat net.sourceforge.pmd.lang.java.rule.design.AccessorClassGenerationRule.visit(AccessorClassGenerationRule.java:78)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTAllocationExpression.jjtAccept(ASTAllocationExpression.java:21)\r\n\tat net.sourceforge.pmd.lang.java.rule.JavaRuleChainVisitor.visit(JavaRuleChainVisitor.java:41)\r\n```\r\n\r\nUsing the following test case for `AccessorClassGeneration.xml`:\r\n```\r\n    <test-code>\r\n        <description><![CDATA[\r\nArray initializer is not a class body\r\n     ]]></description>\r\n        <expected-problems>0</expected-problems>\r\n        <code><![CDATA[\r\npublic class Foo {\r\n    private class Bar {\r\n        private int size;\r\n\r\n        private Bar() {\r\n        }\r\n\r\n        void bar() {\r\n            new Bar[size];\r\n        }\r\n    }\r\n}\r\n     ]]></code>\r\n    </test-code>\r\n```\r\n\r\nThis is related to issue https://github.com/pmd/pmd/issues/291 and pull request https://github.com/pmd/pmd/pull/293 in some fashion.", "url": "https://github.com/pmd/pmd/issues/352", "user": "ryan-gustafson", "labels": ["a:bug"], "created": "2017-04-15 10:57:01", "closed": "2017-04-21 16:16:13", "commits": {}, "ttf": 6.000277777777778, "commitsDetails": []}, {"title": "[java] Throwing Exception in method signature is fine if the method is overriding or implementing something", "body": "**Rule Set:** typeresolution.html#SignatureDeclareThrowsException\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\n@Override\r\npublic Team call() throws Exception {\r\n     // ...\r\n}\r\n```\r\n\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/350", "user": "SUPERCILEX", "labels": ["a:bug", "has:pr"], "created": "2017-04-14 16:39:09", "closed": "2017-06-23 13:15:46", "commits": {}, "ttf": 69.00027777777778, "commitsDetails": []}, {"title": "[java] imports/UnusedImport rule not considering static inner classes of imports", "body": "**Rule Set:** java-imports/UnusedImports\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\nimport com.supercilex.robotscouter.util.IoHelper;\r\n\r\npublic class Foo {\r\n    /** {@link SpreadsheetExporter#writeAndShareTeams(Fragment, IoHelper.RequestHandler, List)} */ This should be considered an import\r\n    public void foo() {}\r\n}\r\n```\r\n\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/348", "user": "SUPERCILEX", "labels": ["a:bug", "has:pr"], "created": "2017-04-14 04:05:28", "closed": "2017-06-19 20:05:22", "commits": {}, "ttf": 66.00027777777778, "commitsDetails": []}, {"title": "[java] False positive on DontImportJavaLang when importing Java 7's java.lang.invoke.MethodHandles", "body": "**Rule Set:** java-imports/DontImportJavaLang\r\n\r\n**Description:**\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nimport java.lang.invoke.MethodHandles;\r\n\r\npublic class Foo {\r\n  private MethodHandles mh;\r\n}\r\n```\r\n\r\n**Running PMD through:** *Any*", "url": "https://github.com/pmd/pmd/issues/339", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-04-11 15:31:53", "closed": "2017-04-11 15:44:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] False positive on DontImportJavaLang when importing java.lang.ProcessBuilder.", "body": "**Rule Set:** java-imports/DontImportJavaLang\r\n\r\n**Description:**\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nimport java.lang.ProcessBuilder.*;\r\n\r\npublic class Foo {\r\n  private Redirect r;\r\n}\r\n```\r\n\r\n**Running PMD through:** *Any*", "url": "https://github.com/pmd/pmd/issues/338", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-04-11 15:30:35", "closed": "2017-04-11 15:44:29", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[core] Version 5.5.4 seems to hold file lock on rules JAR (affects Windows only)", "body": "**Rule Set:**\r\n\r\nSee https://github.com/gradle/gradle/blob/master/subprojects/code-quality/src/integTest/groovy/org/gradle/api/plugins/quality/PmdPluginAuxclasspathIntegrationTest.groovy#L108\r\n\r\n**Description:**\r\n\r\nAfter running PMD via the Gradle plugin, the `pmd-rule.jar` cannot deleted anymore on Windows, apparently because some file lock is held. Works with version 5.5.3, does not work with version 5.5.4. Discovered when trying to upgrade the PDM version the Gradle plugin uses, see https://github.com/gradle/gradle/pull/1623#issuecomment-293234259.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n1. Clone https://github.com/sschuberth/gradle\r\n2. Checkout the *pmd-upgrade* branch\r\n3. Run `./gradlew codeQuality:integTest --tests org.gradle.api.plugins.quality.PmdPluginAuxclasspathIntegrationTest`\r\n\r\n**Running PMD through:** *Gradle*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/337", "user": "sschuberth", "labels": ["a:bug"], "created": "2017-04-11 15:23:32", "closed": "2017-04-14 09:56:28", "commits": {"25e840cd68f9f1b5438fe92a700fdcc11d4cc21a": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "25e840cd68f9f1b5438fe92a700fdcc11d4cc21a", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["9c3bd5ef91fc3f6c3540567878f0494401d0e733"], "nameRev": "25e840cd68f9f1b5438fe92a700fdcc11d4cc21a tags/pmd_releases/5.5.7~2", "commitMessage": "Disable caching for URLConnections\nFixes #364, refs #337\n\n(cherry picked from commit 9fae304b6f895d9d517842e720622fd1ca68188e)\n", "commitDateTime": "2017-04-29 21:30:07", "authoredDateTime": "2017-04-29 21:30:07", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/util/ResourceLoader.java", "insertions": 5, "deletions": 21, "lines": 26}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ResourceLoader.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.util.ResourceLoader.loadResourceAsStream(java.lang.String,java.lang.ClassLoader)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.util.ResourceLoader.loadResourceAsStream(java.lang.String,java.lang.ClassLoader).1.close()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "[java] NPE applying rule JUnitTestsShouldIncludeAssert", "body": "**Rule Set:**\r\nRule set file can be found on this [page](https://github.com/kasirgalabs/ETUmulator/blob/20051d02a854e5327de36a4f397778c1ab1d4d4e/config/pmd/kasirgalabs-pmd.xml).\r\n**Description:**\r\nEvery time when I run PMD on the given code NullPointerException is thrown when processing rule `JUnitTestsShouldIncludeAssert`.\r\n**Code Sample demonstrating the issue:**\r\nCode that PMD trying to process can be found on this [page](https://github.com/kasirgalabs/ETUmulator/blob/20051d02a854e5327de36a4f397778c1ab1d4d4e/src/test/java/com/kasirgalabs/etumulator/console/BaseConsoleTest.java).\r\nTravic CI build log can be found on this [page](https://travis-ci.org/kasirgalabs/ETUmulator/builds/219338890).\r\n**Running PMD through:**\r\nGradle\r\n\r\nTravis CI build log contains the thrown exception but I'll also write it here.\r\n```\r\nException applying rule JUnitTestsShouldIncludeAssert on file /home/travis/build/kasirgalabs/ETUmulator/src/test/java/com/kasirgalabs/etumulator/console/BaseConsoleTest.java, continuing with next rule\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.isExpectStatement(JUnitTestsShouldIncludeAssertRule.java:144)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.containsExpectOrAssert(JUnitTestsShouldIncludeAssertRule.java:54)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.containsExpectOrAssert(JUnitTestsShouldIncludeAssertRule.java:61)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.containsExpectOrAssert(JUnitTestsShouldIncludeAssertRule.java:61)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.containsExpectOrAssert(JUnitTestsShouldIncludeAssertRule.java:61)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.visit(JUnitTestsShouldIncludeAssertRule.java:44)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:25)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:74)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:111)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:74)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:107)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:22)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:74)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:83)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.JUnitTestsShouldIncludeAssertRule.visit(JUnitTestsShouldIncludeAssertRule.java:34)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:30)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:74)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:223)\r\n\tat net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:36)\r\n\tat net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:74)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visit(AbstractJavaRule.java:203)\r\n\tat net.sourceforge.pmd.lang.java.rule.junit.AbstractJUnitRule.visit(AbstractJUnitRule.java:64)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.visitAll(AbstractJavaRule.java:31)\r\n\tat net.sourceforge.pmd.lang.java.rule.AbstractJavaRule.apply(AbstractJavaRule.java:25)\r\n\tat net.sourceforge.pmd.lang.rule.AbstractDelegateRule.apply(AbstractDelegateRule.java:215)\r\n\tat net.sourceforge.pmd.RuleSet.apply(RuleSet.java:306)\r\n\tat net.sourceforge.pmd.RuleSets.apply(RuleSets.java:125)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:150)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:81)\r\n\tat net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:47)\r\n\tat net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:87)\r\n\tat net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:28)\r\n\tat net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:74)\r\n\tat net.sourceforge.pmd.PMD.processFiles(PMD.java:376)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:187)\r\n\tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:268)\r\n\tat net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:47)\r\n\tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:292)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n\tat groovy.util.AntBuilder.performTask(AntBuilder.java:327)\r\n\tat groovy.util.AntBuilder.nodeCompleted(AntBuilder.java:272)\r\n\tat org.gradle.api.internal.project.ant.BasicAntBuilder.nodeCompleted(BasicAntBuilder.java:78)\r\n\tat sun.reflect.GeneratedMethodAccessor43.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite$PojoCachedMethodSiteNoUnwrapNoCoerce.invoke(PojoMetaMethodSite.java:233)\r\n\tat org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:56)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.PojoMetaMethodSite.call(PojoMetaMethodSite.java:58)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\r\n\tat org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.nodeCompleted(AntBuilderDelegate.groovy:80)\r\n\tat groovy.util.BuilderSupport.doInvokeMethod(BuilderSupport.java:149)\r\n\tat groovy.util.BuilderSupport.invokeMethod(BuilderSupport.java:66)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\r\n\tat org.gradle.api.plugins.quality.Pmd$_run_closure2.doCall(Pmd.groovy:168)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n\tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n\tat org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\r\n\tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1019)\r\n\tat groovy.lang.Closure.call(Closure.java:426)\r\n\tat groovy.lang.Closure.call(Closure.java:442)\r\n\tat org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:67)\r\n\tat org.gradle.util.ConfigureUtil.configure(ConfigureUtil.java:130)\r\n\tat org.gradle.util.ConfigureUtil.configure(ConfigureUtil.java:91)\r\n\tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:140)\r\n\tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:122)\r\n\tat org.gradle.api.internal.project.antbuilder.ClassPathToClassLoaderCache.withCachedClassLoader(ClassPathToClassLoaderCache.java:134)\r\n\tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder.execute(DefaultIsolatedAntBuilder.java:116)\r\n\tat org.gradle.api.internal.project.IsolatedAntBuilder$execute$0.call(Unknown Source)\r\n\tat org.gradle.api.plugins.quality.Pmd.run(Pmd.groovy:166)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:75)\r\n\tat org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.doExecute(AnnotationProcessingTaskFactory.java:227)\r\n\tat org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:220)\r\n\tat org.gradle.api.internal.project.taskfactory.AnnotationProcessingTaskFactory$StandardTaskAction.execute(AnnotationProcessingTaskFactory.java:209)\r\n\tat org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:585)\r\n\tat org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:568)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:80)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:61)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:46)\r\n\tat org.gradle.api.internal.tasks.execution.PostExecutionAnalysisTaskExecuter.execute(PostExecutionAnalysisTaskExecuter.java:35)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:64)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:53)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:203)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:185)\r\n\tat org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:66)\r\n\tat org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:50)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor.process(DefaultTaskPlanExecutor.java:25)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter.execute(DefaultTaskGraphExecuter.java:110)\r\n\tat org.gradle.execution.SelectedTaskExecutionAction.execute(SelectedTaskExecutionAction.java:37)\r\n\tat org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\r\n\tat org.gradle.execution.DefaultBuildExecuter.access$000(DefaultBuildExecuter.java:23)\r\n\tat org.gradle.execution.DefaultBuildExecuter$1.proceed(DefaultBuildExecuter.java:43)\r\n\tat org.gradle.execution.DryRunBuildExecutionAction.execute(DryRunBuildExecutionAction.java:32)\r\n\tat org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:37)\r\n\tat org.gradle.execution.DefaultBuildExecuter.execute(DefaultBuildExecuter.java:30)\r\n\tat org.gradle.initialization.DefaultGradleLauncher$4.run(DefaultGradleLauncher.java:154)\r\n\tat org.gradle.internal.Factories$1.create(Factories.java:22)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:52)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:151)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.access$200(DefaultGradleLauncher.java:32)\r\n\tat org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:99)\r\n\tat org.gradle.initialization.DefaultGradleLauncher$1.create(DefaultGradleLauncher.java:93)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:62)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.doBuild(DefaultGradleLauncher.java:93)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.run(DefaultGradleLauncher.java:82)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter$DefaultBuildController.run(InProcessBuildActionExecuter.java:94)\r\n\tat org.gradle.tooling.internal.provider.ExecuteBuildActionRunner.run(ExecuteBuildActionRunner.java:28)\r\n\tat org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:43)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:28)\r\n\tat org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78)\r\n\tat org.gradle.launcher.exec.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:48)\r\n\tat org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:51)\r\n\tat org.gradle.launcher.exec.DaemonUsageSuggestingBuildActionExecuter.execute(DaemonUsageSuggestingBuildActionExecuter.java:28)\r\n\tat org.gradle.launcher.cli.RunBuildAction.run(RunBuildAction.java:43)\r\n\tat org.gradle.internal.Actions$RunnableActionAdapter.execute(Actions.java:170)\r\n\tat org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:237)\r\n\tat org.gradle.launcher.cli.CommandLineActionFactory$ParseAndBuildAction.execute(CommandLineActionFactory.java:210)\r\n\tat org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:35)\r\n\tat org.gradle.launcher.cli.JavaRuntimeValidationAction.execute(JavaRuntimeValidationAction.java:24)\r\n\tat org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:206)\r\n\tat org.gradle.launcher.cli.CommandLineActionFactory$WithLogging.execute(CommandLineActionFactory.java:169)\r\n\tat org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:33)\r\n\tat org.gradle.launcher.cli.ExceptionReportingAction.execute(ExceptionReportingAction.java:22)\r\n\tat org.gradle.launcher.Main.doAction(Main.java:33)\r\n\tat org.gradle.launcher.bootstrap.EntryPoint.run(EntryPoint.java:45)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.launcher.bootstrap.ProcessBootstrap.runNoExit(ProcessBootstrap.java:54)\r\n\tat org.gradle.launcher.bootstrap.ProcessBootstrap.run(ProcessBootstrap.java:35)\r\n\tat org.gradle.launcher.GradleMain.main(GradleMain.java:23)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.wrapper.BootstrapMainStarter.start(BootstrapMainStarter.java:30)\r\n\tat org.gradle.wrapper.WrapperExecutor.execute(WrapperExecutor.java:129)\r\n\tat org.gradle.wrapper.GradleWrapperMain.main(GradleWrapperMain.java:61)\r\n```", "url": "https://github.com/pmd/pmd/issues/330", "user": "RootG", "labels": ["a:bug"], "created": "2017-04-06 16:42:40", "closed": "2017-04-21 16:16:13", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "[java] java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/servlet/jsp/PageContext", "body": "**Description:**\r\n\r\nNot sure if this is an https://github.com/gradle/gradle issue or PMD issue, or a combination of the 2, but after upgrading to gradle-3.3 our build breaks due to having `javaee:javaee-api:5` on the path. Makes no difference if the artifact is declared as `compile` or `compileOnly`. Tried using one of the many other artifacts which bring in `javax.servlet.*` files and still the issue remains. I'm not sure which version gradle is using internally by default but it fails, I tried bumping to the latest pmd `5.5.5` and it fails as well. The full stacktrace is as follows:\r\n\r\n```\r\nCaused by: java.lang.ClassFormatError: Absent Code attribute in method that is not native or abstract in class file javax/servlet/jsp/PageContext\r\n        at net.sourceforge.pmd.lang.java.typeresolution.PMDASMClassLoader.loadClass(PMDASMClassLoader.java:71)\r\n        at net.sourceforge.pmd.lang.java.symboltable.TypeSet$AbstractResolver.resolveMaybeInner(TypeSet.java:126)\r\n        at net.sourceforge.pmd.lang.java.symboltable.TypeSet$ExplicitImportResolver.resolve(TypeSet.java:190)\r\n        at net.sourceforge.pmd.lang.java.symboltable.TypeSet.findClass(TypeSet.java:493)\r\n        at net.sourceforge.pmd.lang.java.symboltable.SourceFileScope.resolveType(SourceFileScope.java:75)\r\n        at net.sourceforge.pmd.lang.java.symboltable.ClassScope.determineParameterTypes(ClassScope.java:369)\r\n        at net.sourceforge.pmd.lang.java.symboltable.ClassScope.matchMethodDeclaration(ClassScope.java:238)\r\n        at net.sourceforge.pmd.lang.java.symboltable.ClassScope.findVariableHere(ClassScope.java:183)\r\n        at net.sourceforge.pmd.lang.java.symboltable.AbstractJavaScope.contains(AbstractJavaScope.java:33)\r\n        at net.sourceforge.pmd.lang.java.symboltable.Search.searchUpward(Search.java:51)\r\n        at net.sourceforge.pmd.lang.java.symboltable.Search.searchUpward(Search.java:56)\r\n        at net.sourceforge.pmd.lang.java.symboltable.Search.searchUpward(Search.java:56)\r\n        at net.sourceforge.pmd.lang.java.symboltable.Search.execute(Search.java:28)\r\n        at net.sourceforge.pmd.lang.java.symboltable.OccurrenceFinder.visit(OccurrenceFinder.java:34)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTPrimaryExpression.jjtAccept(ASTPrimaryExpression.java:22)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:372)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTStatementExpression.jjtAccept(ASTStatementExpression.java:22)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:348)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTStatement.jjtAccept(ASTStatement.java:22)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:360)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlockStatement.jjtAccept(ASTBlockStatement.java:22)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:356)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTBlock.jjtAccept(ASTBlock.java:26)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:180)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTMethodDeclaration.jjtAccept(ASTMethodDeclaration.java:25)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:45)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBodyDeclaration.jjtAccept(ASTClassOrInterfaceBodyDeclaration.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:41)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceBody.jjtAccept(ASTClassOrInterfaceBody.java:22)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:17)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTClassOrInterfaceDeclaration.jjtAccept(ASTClassOrInterfaceDeclaration.java:30)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:156)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTTypeDeclaration.jjtAccept(ASTTypeDeclaration.java:36)\r\n        at net.sourceforge.pmd.lang.java.ast.AbstractJavaNode.childrenAccept(AbstractJavaNode.java:55)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:9)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParserVisitorAdapter.visit(JavaParserVisitorAdapter.java:136)\r\n        at net.sourceforge.pmd.lang.java.ast.ASTCompilationUnit.jjtAccept(ASTCompilationUnit.java:41)\r\n        at net.sourceforge.pmd.lang.java.symboltable.SymbolFacade.initializeWith(SymbolFacade.java:16)\r\n        at net.sourceforge.pmd.lang.java.AbstractJavaHandler$4.start(AbstractJavaHandler.java:79)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.symbolFacade(SourceCodeProcessor.java:105)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:144)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:81)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:47)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:87)\r\n        at net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(MonoThreadProcessor.java:28)\r\n        at net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(AbstractPMDProcessor.java:74)\r\n        at net.sourceforge.pmd.PMD.processFiles(PMD.java:376)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:187)\r\n        at net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:268)\r\n        at net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:47)\r\n        at org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n        at org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n        ... 93 more\r\n```\r\n\r\n**Rule Set:**\r\n```\r\n<ruleset name=\"PMD-Rules\">\r\n    <description>\r\n        The rulesets we want to use in pmd. For a detailed description of pmd rulesets: http://pmd.sourceforge.net/rules/index.html\r\n    </description>\r\n  \r\n    <rule ref=\"rulesets/java/imports.xml/DuplicateImports\">                        <priority>1</priority></rule> \r\n    <rule ref=\"rulesets/java/imports.xml/DontImportJavaLang\">                      <priority>1</priority></rule> \r\n    <rule ref=\"rulesets/java/imports.xml/UnusedImports\">                           <priority>1</priority></rule> \r\n    <rule ref=\"rulesets/java/imports.xml/ImportFromSamePackage\">                   <priority>1</priority></rule> \r\n    <rule ref=\"rulesets/java/unusedcode.xml/UnusedLocalVariable\">                  <priority>1</priority></rule>\r\n    <exclude-pattern>.*/build/.*</exclude-pattern>\r\n</ruleset>\r\n```\r\n\r\n**Running PMD through:** *[Gradle]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/328", "user": "cdancy", "labels": ["a:bug", "has:pr", "in:symbol-table", "in:type-resolution"], "created": "2017-04-05 21:00:50", "closed": "2017-10-13 08:57:25", "commits": {}, "ttf": 190.00027777777777, "commitsDetails": []}, {"title": "[core] Automated release - github release notes missing", "body": "The last release went quite smooth, just one piece is still missing: automatically upload the release notes to github releases.\r\n\r\nE.g. if you look at the build for [pmd_releases/5.5.5](https://travis-ci.org/pmd/pmd/builds/215686711) and the log:\r\n\r\n```\r\n# Assumes, the release has already been created by travis github releases provider\r\nRELEASE_ID=$(curl -s -H \"Authorization: token ${GITHUB_OAUTH_TOKEN}\" https://api.github.com/repos/pmd/pmd/releases/tags/pmd_releases/${RELEASE_VERSION}|jq \".id\")\r\nRELEASE_NAME=\"PMD ${RELEASE_VERSION} ($(date -u +%d-%B-%Y))\"\r\nRELEASE_BODY=$(tail -n +3 src/site/markdown/overview/changelog.md) # skips the first 2 lines - the heading 'PMD Release Notes'\r\nRELEASE_BODY=\"${RELEASE_BODY//$'\\\\'/\\\\\\\\}\"\r\nRELEASE_BODY=\"${RELEASE_BODY//$'\\r'/}\"\r\nRELEASE_BODY=\"${RELEASE_BODY//$'\\n'/\\\\r\\\\n}\"\r\nRELEASE_BODY=\"${RELEASE_BODY//$'\"'/\\\\$'\"'}\"\r\ncat > release-edit-request.json <<EOF\r\n{\r\n  \"name\": \"$RELEASE_NAME\",\r\n  \"body\": \"$RELEASE_BODY\"\r\n}\r\nEOF\r\necho \"Updating release at https://api.github.com/repos/pmd/pmd/releases/${RELEASE_ID}...\"\r\nUpdating release at https://api.github.com/repos/pmd/pmd/releases/5886200...\r\n```\r\n\r\nSo far, so good. We correctly figured out the release id for this release is 5886200...\r\n\r\nNow, we execute the PATCH request:\r\n\r\n```\r\nRESPONSE=$(curl -i -s -H \"Authorization: token ${GITHUB_OAUTH_TOKEN}\" -H \"Content-Type: application/json\" --data \"@release-edit-request.json\" -X PATCH https://api.github.com/repos/pmd/pmd/releases/${RELEASE_ID})\r\n```\r\n\r\nAnd check the response, which is not \"200\", but a \"100\" followed by \"400\" (Bad Data):\r\n\r\n```\r\nif [[ \"$RESPONSE\" != *\"HTTP/1.1 200\"* ]]; then\r\n    echo \"Request:\"\r\n    cat release-edit-request.json\r\n    echo\r\n    echo \"Response:\"\r\n    echo \"$RESPONSE\"\r\nelse\r\n    echo \"Update OK\"\r\nfi\r\n\r\nRequest:\r\n{\r\n  \"name\": \"PMD 5.5.5 (27-March-2017)\",\r\n  \"body\": \"## 27-March-2017 - 5.5.5\\r\\n\\r\\nThe PMD team is pleased to announce PMD 5.5.5.\\r\\n\\r\\n\\r\\n### Table Of Contents\\r\\n\\r\\n* [Fixed Issues](#Fixed_Issues)\\r\\n* [External Contributions](#External_Contributions)\\r\\n\\r\\n### Fixed Issues\\r\\n\\r\\n*   general:\\r\\n    *   [#305](https://github.com/pmd/pmd/issues/305): \\[core] PMD not executing under git bash\\r\\n*   java:\\r\\n    *   [#309](https://github.com/pmd/pmd/issues/309): \\[java] Parse error on method reference\\r\\n*   java-design\\r\\n    *   [#274](https://github.com/pmd/pmd/issues/274): \\[java] AccessorMethodGeneration: Method inside static inner class incorrectly reported\\r\\n    *   [#275](https://github.com/pmd/pmd/issues/275): \\[java] FinalFieldCouldBeStatic: Constant in @interface incorrectly reported as \"could be made static\"\\r\\n    *   [#282](https://github.com/pmd/pmd/issues/282): \\[java] UnnecessaryLocalBeforeReturn false positive when cloning Maps\\r\\n    *   [#291](https://github.com/pmd/pmd/issues/291): \\[java] Improve quality of AccessorClassGeneration\\r\\n*   java-junit:\\r\\n    *   [#285](https://github.com/pmd/pmd/issues/285): \\[java] JUnitTestsShouldIncludeAssertRule should support @Rule as well as @Test(expected = ...)\\r\\n*   java-optimizations:\\r\\n    *   [#222](https://github.com/pmd/pmd/issues/222): \\[java] UseStringBufferForStringAppends: False Positive with ternary operator\\r\\n*   java-strings:\\r\\n    *   [#290](https://github.com/pmd/pmd/issues/290): \\[java] InefficientEmptyStringCheck misses String.trim().isEmpty()\\r\\n\\r\\n### External Contributions\\r\\n\\r\\n*   [#280](https://github.com/pmd/pmd/pull/280): \\[apex] Support for Aggregate Result in CRUD rules\\r\\n*   [#289](https://github.com/pmd/pmd/pull/289): \\[apex] Complex SOQL Crud check bug fixes\\r\\n*   [#296](https://github.com/pmd/pmd/pull/296): \\[apex] Adding String.IsNotBlank to the whitelist to prevent False positives\\r\\n*   [#303](https://github.com/pmd/pmd/pull/303): \\[java] InefficientEmptyStringCheckRule now reports String.trim().isEmpty() \\r\\n*   [#307](https://github.com/pmd/pmd/pull/307): \\[java] Fix false positive with UseStringBufferForStringAppendsRule\\r\\n*   [#308](https://github.com/pmd/pmd/pull/308): \\[java] JUnitTestsShouldIncludeAssertRule supports @Rule annotated ExpectedExceptions\"\r\n}\r\n\r\nResponse:\r\nHTTP/1.1 100 Continue\r\n\r\n\r\nHTTP/1.1 400 Bad Request\r\nServer: GitHub.com\r\nDate: Mon, 27 Mar 2017 20:59:16 GMT\r\nContent-Type: application/json; charset=utf-8\r\nContent-Length: 99\r\nStatus: 400 Bad Request\r\nX-RateLimit-Limit: 5000\r\nX-RateLimit-Remaining: 4956\r\nX-RateLimit-Reset: 1490650168\r\nX-OAuth-Scopes: public_repo\r\nX-Accepted-OAuth-Scopes: \r\nX-GitHub-Media-Type: github.v3; format=json\r\nAccess-Control-Expose-Headers: ETag, Link, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval\r\nAccess-Control-Allow-Origin: *\r\nContent-Security-Policy: default-src 'none'\r\nStrict-Transport-Security: max-age=31536000; includeSubdomains; preload\r\nX-Content-Type-Options: nosniff\r\nX-Frame-Options: deny\r\nX-XSS-Protection: 1; mode=block\r\nX-GitHub-Request-Id: EA68:2B0D:7A0E3:9ABB4:58D97D23\r\n\r\n{\r\n  \"message\": \"Problems parsing JSON\",\r\n  \"documentation_url\": \"https://developer.github.com/v3\"\r\n}\r\n```\r\n\r\n\r\nI don't see a problem with the JSON. Seeing, now, that we first get a \"100 Continue\" back, sounds like, that the server doesn't read the data on the first request and expects more data, which we don't send - and an empty string is not a valid JSON document.\r\n\r\nIt looks now, like it's an issue with the curl command....\r\n", "url": "https://github.com/pmd/pmd/issues/324", "user": "adangel", "labels": ["a:bug"], "created": "2017-04-03 20:51:39", "closed": "2017-04-14 09:54:41", "commits": {"536280bb9810166651cfd2dc3e6a24b0bc0e2161": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "536280bb9810166651cfd2dc3e6a24b0bc0e2161", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["aab2ff60e72a480cad20768e13c80ffc6be9f036"], "nameRev": "536280bb9810166651cfd2dc3e6a24b0bc0e2161 tags/pmd_releases/5.6.0~16^2", "commitMessage": "travis build: fix escaping of double quotes\ncloses #324\n", "commitDateTime": "2017-04-14 11:50:37", "authoredDateTime": "2017-04-14 11:50:37", "commitGitStats": [{"filePath": ".travis/release.sh", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["536280bb9810166651cfd2dc3e6a24b0bc0e2161"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": [".travis/release.sh"]}, {"title": "[jsp] Parse error on HTML boolean attribute", "body": "**Description:**\r\nWhen parsing a Jsp containing HTML which contains [boolean attributes](http://w3c.github.io/html/infrastructure.html#sec-boolean-attributes), the following error message is produced:\r\n```java\r\nCaused by: net.sourceforge.pmd.lang.jsp.ast.ParseException: Encountered \" <ATTR_NAME> \"name \"\" at line 8, column 39.\r\nWas expecting:\r\n    \"=\" ...\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\nIn the below, the attribute `checked` causes a parse error\r\n```html\r\n<label><input type='checkbox' checked name=cheese disabled=\"\"> Cheese</label>\r\n```\r\n\r\n**Running PMD through:** *Ant*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/311", "user": "andypattenden", "labels": ["a:bug", "good first issue", "has:pr"], "created": "2017-03-27 15:03:47", "closed": "2017-06-23 13:15:44", "commits": {}, "ttf": 87.00027777777778, "commitsDetails": []}, {"title": "[java] UnnecessaryLocalBeforeReturn enhancement is overly restrictive -- method order matters", "body": "**Rule Set:**\r\nUnnecessaryLocalBeforeReturn\r\n\r\n**Description:**\r\nThe enhancement in https://github.com/pmd/pmd/issues/240 was ill-advised. The change in behavior should have been formulated as a new rule or an option on the existing rule, not added to an existing rule in a \"bug-fix\" release.\r\n\r\nThere are many cases where order does matter even for variables that are declared and then only referenced a single time.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nint i = compute(); // might throw\r\nmarkComputationDone();\r\nreturn i;\r\n```\r\n\r\n```\r\nMutable m = ...;\r\nint i = compute(m);\r\nsideEffect(m);\r\nreturn i;\r\n```\r\n\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/310", "user": "epkugelmass", "labels": ["a:bug"], "created": "2017-03-24 21:16:17", "closed": "2017-04-22 09:09:32", "commits": {"05308ef7308b7f345592a0d2375c644f608d26ea": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 28.00027777777778, "commitsDetails": [{"commitHash": "05308ef7308b7f345592a0d2375c644f608d26ea", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["c3aaf60132476ebe1c1fce9e7c38a504c0df28ea"], "nameRev": "05308ef7308b7f345592a0d2375c644f608d26ea tags/pmd_releases/5.6.0~5^2~2", "commitMessage": "java UnnecessaryLocalBeforeReturn: add property \"statementOrderMatters\"\nFixes #310\n", "commitDateTime": "2017-04-22 10:53:08", "authoredDateTime": "2017-04-22 10:53:08", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/UnnecessaryLocalBeforeReturnRule.java", "insertions": 28, "deletions": 1, "lines": 29}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/design/xml/UnnecessaryLocalBeforeReturn.xml", "insertions": 64, "deletions": 2, "lines": 66}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UnnecessaryLocalBeforeReturnRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule.statementsBeforeReturn(net.sourceforge.pmd.lang.java.symboltable.VariableNameDeclaration,net.sourceforge.pmd.lang.java.ast.ASTReturnStatement)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule.visit(net.sourceforge.pmd.lang.java.ast.ASTReturnStatement,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["05308ef7308b7f345592a0d2375c644f608d26ea"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 28, "deletions": 1, "lines": 29, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule.visit(net.sourceforge.pmd.lang.java.ast.ASTReturnStatement,java.lang.Object)", "net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule", "net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule.statementsBeforeReturn(net.sourceforge.pmd.lang.java.symboltable.VariableNameDeclaration,net.sourceforge.pmd.lang.java.ast.ASTReturnStatement)"]}, {"title": "[java] Parse error on method reference", "body": "**Description:**\r\nPmd determines the code to be syntactically incorrect (the code compiles just fine), produces to following error message:\r\n```\r\nnet.sourceforge.pmd.lang.java.ast.ParseException: Encountered \" \"new\" \"new \"\" at line 6, column 38.\r\nWas expecting:\r\n    <IDENTIFIER> ...\r\n```\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nimport java.util.*;\r\n\r\npublic class Main {\r\n    public static void main(String[] args) {\r\n        Runnable r11 = Main::<String>new;\r\n        // IntFunction<int[]> r13 = int[]::<String>new; // produces the same results\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** *Designer*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/309", "user": "PaperTsar", "labels": ["a:bug"], "created": "2017-03-24 01:31:50", "closed": "2017-03-27 19:34:26", "commits": {"abe2e8561c770e00e13e63d3f7f799b89cf53ee4": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "abe2e8561c770e00e13e63d3f7f799b89cf53ee4", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["88763bf58d3ef446781505eb1d21968a04b0c477"], "nameRev": "abe2e8561c770e00e13e63d3f7f799b89cf53ee4 tags/pmd_releases/5.4.6~3^2", "commitMessage": "Fixes #309: [java] Parse error on method reference\n", "commitDateTime": "2017-03-27 21:07:28", "authoredDateTime": "2017-03-27 21:06:09", "commitGitStats": [{"filePath": "pmd-java/etc/grammar/Java.jjt", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ParserCornersTest.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/ast/GitHubBug309.java", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ParserCornersTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ParserCornersTest.testGitHubBug309()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GitHubBug309.java", "spoonMethods": [{"spoonMethodName": "GitHubBug309", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["abe2e8561c770e00e13e63d3f7f799b89cf53ee4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/etc/grammar/Java.jjt"], "changesInPackagesSPOON": ["GitHubBug309"]}, {"title": "[core] PMD not executing under git bash", "body": "If PMD is executed via `run.sh pmd` under a git bash environment, it fails with the following error:\r\n\r\n> Could not find or load main class net.sourceforge.pmd.PMD\r\n\r\nExecuting `pmd.bat` works - so all files are in place.\r\n\r\nSee http://stackoverflow.com/questions/42919788/how-to-run-pmd-in-bash", "url": "https://github.com/pmd/pmd/issues/305", "user": "adangel", "labels": ["a:bug"], "created": "2017-03-22 21:14:44", "closed": "2017-03-22 23:37:46", "commits": {"8f1901f12833410083b85fc275ce74069b06b78f": {"commitGHEventType": "referenced", "commitUser": "jsotuyod"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8f1901f12833410083b85fc275ce74069b06b78f", "commitGHEventType": "referenced", "commitUser": "jsotuyod", "commitParents": ["133f3d99dfbba2c3f42cae4f48dc9d84c7e9da30"], "nameRev": "8f1901f12833410083b85fc275ce74069b06b78f tags/pmd_releases/5.4.6~6^2~1", "commitMessage": "PMD run script:\n*   fixes #305\n*   consider also \"MINGW*\" as cygwin\n*   do not convert empty paths to avoid warnings\n", "commitDateTime": "2017-03-22 20:27:23", "authoredDateTime": "2017-03-22 22:35:07", "commitGitStats": [{"filePath": "pmd-dist/src/main/scripts/run.sh", "insertions": 11, "deletions": 9, "lines": 20}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8f1901f12833410083b85fc275ce74069b06b78f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 9, "lines": 20, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-dist/src/main/scripts/run.sh"]}, {"title": "[java] Improve quality of AccessorClassGeneration", "body": "**Rule Set:**\r\nAccessorClassGeneration (java-design)\r\n\r\n**Description:**\r\nI've found a way of not triggering the AccessorClassGeneration even though it should as the synthetic methods and classes are generated.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic class Example extends View {\r\n  private Example(final Context context) {\r\n    super(context);\r\n  }\r\n\r\n  public static void create() {\r\n    new Handler().post(new Runnable() {\r\n      @Override public void run() {\r\n        Example example = new Example(null); // Should be marked since the constructor is private.\r\n      }\r\n    });\r\n  }\r\n}\r\n```\r\n\r\n**Running PMD 5.5.4 through:** *[Gradle]*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/291", "user": "vanniktech", "labels": ["a:bug"], "created": "2017-03-10 16:33:59", "closed": "2017-03-18 11:06:12", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "[java] UnnecessaryLocalBeforeReturn false positive when cloning Maps", "body": "**Rule Set:**\r\n```\r\n    <rule ref=\"rulesets/java/basic.xml\"/>\r\n    <rule ref=\"rulesets/java/braces.xml\"/>\r\n    <rule ref=\"rulesets/java/codesize.xml\"/>\r\n\r\n    <rule ref=\"rulesets/java/coupling.xml\">\r\n        <exclude name=\"LawOfDemeter\"/>\r\n        <exclude name=\"LoosePackageCoupling\"/>\r\n    </rule>\r\n\r\n    <rule ref=\"rulesets/java/design.xml\">\r\n        <exclude name=\"UseVarargs\"/>\r\n        <exclude name=\"UseUtilityClass\"/>\r\n        <exclude name=\"SingularField\"/>\r\n        <exclude name=\"CloseResource\"/>\r\n    </rule>\r\n\r\n    <rule ref=\"rulesets/java/empty.xml\"/>\r\n    <rule ref=\"rulesets/java/imports.xml\"/>\r\n\r\n    <rule ref=\"rulesets/java/naming.xml/LongVariable\" />\r\n    <rule ref=\"rulesets/java/naming.xml/ClassNamingConventions\" />\r\n    <rule ref=\"rulesets/java/naming.xml/MethodWithSameNameAsEnclosingClass\" />\r\n    <rule ref=\"rulesets/java/naming.xml/SuspiciousHashcodeMethodName\" />\r\n    <rule ref=\"rulesets/java/naming.xml/SuspiciousConstantFieldName\" />\r\n    <rule ref=\"rulesets/java/naming.xml/SuspiciousEqualsMethodName\" />\r\n    <rule ref=\"rulesets/java/naming.xml/AvoidFieldNameMatchingTypeName\" />\r\n    <rule ref=\"rulesets/java/naming.xml/PackageCase\" />\r\n    <rule ref=\"rulesets/java/naming.xml/BooleanGetMethodName\" />\r\n\r\n    <rule ref=\"rulesets/java/optimizations.xml/UseArrayListInsteadOfVector\" />\r\n    <rule ref=\"rulesets/java/optimizations.xml/UseArraysAsList\" />\r\n    <rule ref=\"rulesets/java/optimizations.xml/AvoidArrayLoops\" />\r\n    <rule ref=\"rulesets/java/optimizations.xml/UnnecessaryWrapperObjectCreation\" />\r\n\r\n    <rule ref=\"rulesets/java/typeresolution.xml/LooseCoupling\"/>\r\n    <rule ref=\"rulesets/java/typeresolution.xml/UnusedImports\"/>\r\n\r\n    <rule ref=\"rulesets/java/unnecessary.xml\"/>\r\n```\r\n\r\n**Description:**\r\nFalse positive when making a clone of a hashmap\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class CustomerErrorCollector {\r\n\r\n    private final ConcurrentHashMap<String, String> customerErrors = new ConcurrentHashMap<>();\r\n\r\n    public void error(String customerNr, String errorMsg) {\r\n        customerErrors.put(customerNr, errorMsg);\r\n    }\r\n\r\n    public Map<String, String> getAndReset() {\r\n        final Map<String, String> copy = new HashMap<>(customerErrors);\r\n        customerErrors.clear();\r\n        return copy; // PMD complains that variable could be avoided\r\n    }\r\n\r\n\r\n}\r\n```\r\n\r\n**Running PMD through:** *Gradle*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/282", "user": "posto", "labels": ["a:bug"], "created": "2017-03-02 13:08:44", "closed": "2017-03-18 11:06:12", "commits": {}, "ttf": 15.000277777777777, "commitsDetails": []}, {"title": "[java] FinalFieldCouldBeStatic: Constant in @interface incorrectly reported as \"could be made static\"", "body": "**Rule Set:** design.html#FinalFieldCouldBeStatic\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic @interface MetricType {\r\n    int CHECKBOX = 0, COUNTER = 1, SPINNER = 2, NOTE = 3, STOPWATCH = 4, HEADER = 5;\r\n}\r\n```\r\n\r\n-->  but all fields in interfaces/@interfaces are static and final by default\r\n\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/275", "user": "SUPERCILEX", "labels": ["a:bug"], "created": "2017-02-26 04:03:51", "closed": "2017-03-03 18:27:45", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[java] AccessorMethodGeneration: Method inside static inner class incorrectly reported", "body": "**Rule Set:** design.html#AccessorMethodGeneration\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic static final Creator<Team> CREATOR = new Creator<Team>() {\r\n    @Override\r\n    public Team createFromParcel(Parcel source) {\r\n        return new Team(source.readString(),\r\n                        source.readString(),\r\n                        source.readString(),\r\n                        source.readString(),\r\n                        source.readString(),\r\n                        source.readString(),\r\n                        getBooleanForInt(source.readInt()), // These are the offending lines\r\n                        getBooleanForInt(source.readInt()), // same\r\n                        getBooleanForInt(source.readInt()), // same\r\n                        source.readLong());\r\n    }\r\n\r\n    @Override\r\n    public Team[] newArray(int size) {\r\n        return new Team[size];\r\n    }\r\n\r\n    private boolean getBooleanForInt(int value) {\r\n        return value == 1;\r\n    }\r\n};\r\n```\r\n\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/274", "user": "SUPERCILEX", "labels": ["a:bug"], "created": "2017-02-26 04:00:06", "closed": "2017-03-03 18:27:44", "commits": {}, "ttf": 5.000277777777778, "commitsDetails": []}, {"title": "[java] LoD false positive", "body": "Please, prefix the report title with the language it applies to within brackets, such as *[java]* or *[apex]*. If not specific to a language, you can use *[core]*\r\n\r\n**Rule Set:** java-coupling/LawOfDemeter\r\n\r\n**Description:**\r\n\r\nLoD reports a false positive when method calls are placed between the var declaration and assignment.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic class Foo {\r\n    public void example() {\r\n        String something;\r\n        C c = new C();\r\n        c.doIt();\r\n        something = \"no worries\";\r\n    }\r\n}\r\n\r\n```\r\n\r\n**Running PMD through:** *Any*\r\n\r\nPlaceholder report for PR #266 ", "url": "https://github.com/pmd/pmd/issues/270", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-02-22 02:15:36", "closed": "2017-02-22 02:35:02", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[apex] ApexXSSFromURLParamRule shouldn't enforce ESAPI usage. String.escapeHtml4 is sufficient.", "body": "@sergeygorbaty the is the issue we discussed over Slack. Please make rule less restrictive. Not everbody wants and needs the ESAPI library to prevent XSS from URLs.", "url": "https://github.com/pmd/pmd/issues/264", "user": "rsoesemann", "labels": ["a:bug"], "created": "2017-02-19 20:56:23", "closed": "2017-02-22 01:15:47", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "[java] UnusedLocalVariable false positive", "body": "**Rule Set:**\r\nUnusedLocalVariable\r\n\r\n**Description:**\r\nWhen one of the variables is enclosed in (unnecessary) parentheses, it triggers a false positive. In the example below, the variable a gets flagged as an UnusedLocalVariable (but the variable b does not).\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class Test {\r\n\u00a0 \u00a0 public static void main(String[] args) {\r\n\u00a0 \u00a0 \u00a0 \u00a0 double a = 4.0;\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 double b = 2.0;\u00a0\r\n\u00a0 \u00a0 \u00a0 \u00a0 double result = Math.sqrt((a) - b);\r\n\u00a0 \u00a0 \u00a0 \u00a0 System.out.println(result);\r\n\u00a0 \u00a0 }\r\n}\r\n```\r\n\r\n**Running PMD 5.5.2 through: CLI\r\n", "url": "https://github.com/pmd/pmd/issues/257", "user": "kevin-wayne", "labels": ["a:bug"], "created": "2017-02-13 01:50:06", "closed": "2017-02-20 15:20:35", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "[core] shortnames option is broken with relative paths", "body": "**Description:**\r\n\r\nWhen using the shortnames option with a relative file path, the report is broken.\r\n\r\nFor instance, using *\"../\"* as target dir, the report will produce paths such as:\r\n\r\n```\r\nome/jmsotuyo/monits/pmd/./pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/complexity/StdCyclomaticComplexityRule.java\r\n```\r\n\r\n`RuleContext.getSourceCodeFilename()` and `RuleContext.getSourceCodeFile()` both return invalid paths, and in the case of the later, point to a non-existing file, making all features depending on it flaky.\r\n\r\nWithout the shortnames option, the path is properly generated:\r\n\r\n```\r\n/home/jmsotuyo/monits/pmd/pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/complexity/StdCyclomaticComplexityRule.java\r\n```\r\n\r\n**Running PMD through:** *Any*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/256", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-02-12 22:22:22", "closed": "2017-02-21 18:58:15", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "[apex] NCSS Type length is incorrect when using method chaining", "body": "**Rule Set:** apex-complexity\r\n\r\n**Description:**\r\n\r\nFollow up on #183. Line count for types is incorrectly computed.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nhttps://dl.dropboxusercontent.com/u/240888/WrongNcssCount.cls\r\n\r\nPMD says The type has an NCSS line count of 704 although there are only 486 lines.\r\n\r\n**Running PMD through:** Any\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/251", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-02-09 20:00:42", "closed": "2017-02-19 09:35:30", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[java] UnusedModifier doesn't check static keyword on nested enum declaration", "body": "**Rule Set:** [unused/UnusedModifier](https://pmd.github.io/pmd-5.5.3/pmd-java/rules/java/unusedcode.html#UnusedModifier)\r\n\r\n**Description:**\r\nEnums are `static` by default. Explicitly setting them matches this rule's criteria:\r\n\r\n> For historical reasons, modifiers which are implied by the context are accepted by the compiler, but are superfluous.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic @interface Test {\r\n  public static enum EnumSample {\r\n    TEST;\r\n  }\r\n}\r\n```\r\n\r\nPMD will find no violations on this annotation, 1 violation is expected.\r\n\r\nThe behavior is consistent when nested in classes, annotations and interfaces.\r\n\r\n**Running PMD through:** Any\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/248", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-02-08 16:28:41", "closed": "2017-02-15 19:21:12", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "[java] UnusedModifier doesn't check annotations inner classes", "body": "**Rule Set:** [unused/UnusedModifier](https://pmd.github.io/pmd-5.5.3/pmd-java/rules/java/unusedcode.html#UnusedModifier)\r\n\r\n**Description:**\r\nNested classes in annotations are `public static` by default, no other modifiers are allowed. Explicitly setting them matches this rule's criteria:\r\n\r\n> For historical reasons, modifiers which are implied by the context are accepted by the compiler, but are superfluous.\r\n\r\nThe same applies to inner interfaces and annotations on annotations, which are `public` by default.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic @interface Test {\r\n  public static Inner { }\r\n  public interface Interface { }\r\n  public @interface InnerAnnotation { }\r\n}\r\n```\r\n\r\nPMD will find no violations on this annotation, 4 violations are expected.\r\n\r\n**Running PMD through:** Any\r\n\r\nRelate to #246", "url": "https://github.com/pmd/pmd/issues/247", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-02-08 16:03:33", "closed": "2017-02-15 19:21:12", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "[java] UnusedModifier doesn't check annotations", "body": "**Rule Set:** [unused/UnusedModifier](https://pmd.github.io/pmd-5.5.3/pmd-java/rules/java/unusedcode.html#UnusedModifier)\r\n\r\n**Description:**\r\nAnnotation elements are `public abstract` by default, no other modifiers are allowed. Explicitly setting them matches this rule's criteria:\r\n\r\n> For historical reasons, modifiers which are implied by the context are accepted by the compiler, but are superfluous.\r\n\r\nThe same applies to fields on annotations, which are `public static final` by default.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\npublic @interface Test {\r\n  public static final String DEFAULT_MESSAGE = \"message\";\r\n  public abstract String message() default DEFAULT_MESSAGE;\r\n}\r\n```\r\n\r\nPMD will find no violations on this annotation, 5 violations are expected.\r\n\r\n**Running PMD through:** Any\r\n\r\nP.S. This class should probably go to the `unnecessary` ruleset rather the `unused` one... even the unit tests' description usually start with *\"Unnecessary ...\"*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/246", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-02-08 15:22:14", "closed": "2017-02-15 19:21:12", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "[core] Zip file stream closes spuriously when loading rulesets", "body": "**Description:**\r\n\r\nWe get spurious IOExceptions when running pmd in our CI servers. This happens on PMD 5.5.1 and 5.5.2, but not on 5.5.0. We cannot use 5.5.3 right now because of a different issue, so status there is unknown. More information can be provided on request, because I don't know what more to provide.\r\n\r\n```\r\n[10:43:07][Running build...] java.io.IOException: Stream closed\r\n[10:43:07][Running build...] \tat java.util.zip.InflaterInputStream.ensureOpen(InflaterInputStream.java:67)\r\n[10:43:07][Running build...] \tat java.util.zip.InflaterInputStream.read(InflaterInputStream.java:142)\r\n[10:43:07][Running build...] \tat java.io.FilterInputStream.read(FilterInputStream.java:133)\r\n[10:43:07][Running build...] \tat java.io.FilterInputStream.read(FilterInputStream.java:107)\r\n[10:43:07][Running build...] \tat org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:1792)\r\n[10:43:07][Running build...] \tat org.apache.commons.io.IOUtils.copyLarge(IOUtils.java:1769)\r\n[10:43:07][Running build...] \tat org.apache.commons.io.IOUtils.copy(IOUtils.java:1744)\r\n[10:43:07][Running build...] \tat org.apache.commons.io.IOUtils.toByteArray(IOUtils.java:462)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactoryCompatibility.filterRuleSetFile(RuleSetFactoryCompatibility.java:84)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:249)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:202)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:197)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetReferenceNode(RuleSetFactory.java:359)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.parseRuleNode(RuleSetFactory.java:317)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.parseRuleSetNode(RuleSetFactory.java:272)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:202)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.createRuleSet(RuleSetFactory.java:197)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:161)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.RuleSetFactory.createRuleSets(RuleSetFactory.java:145)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.doTask(PMDTaskImpl.java:119)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.ant.internal.PMDTaskImpl.execute(PMDTaskImpl.java:269)\r\n[10:43:07][Running build...] \tat net.sourceforge.pmd.ant.PMDTask.execute(PMDTask.java:47)\r\n[10:43:07][Running build...] \tat org.apache.tools.ant.UnknownElement.execute(UnknownElement.java:293)\r\n[10:43:07][Running build...] \tat sun.reflect.GeneratedMethodAccessor1039.invoke(Unknown Source)\r\n[10:43:07][Running build...] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n[10:43:07][Running build...] \tat java.lang.reflect.Method.invoke(Method.java:498)\r\n[10:43:07][Running build...] \tat org.apache.tools.ant.dispatch.DispatchUtils.execute(DispatchUtils.java:106)\r\n[10:43:07][Running build...] \tat groovy.util.AntBuilder.performTask(AntBuilder.java:327)\r\n[10:43:07][Running build...] \tat groovy.util.AntBuilder.nodeCompleted(AntBuilder.java:272)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.ant.BasicAntBuilder.nodeCompleted(BasicAntBuilder.java:78)\r\n[10:43:07][Running build...] \tat sun.reflect.GeneratedMethodAccessor927.invoke(Unknown Source)\r\n[10:43:07][Running build...] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n[10:43:07][Running build...] \tat java.lang.reflect.Method.invoke(Method.java:498)\r\n[10:43:07][Running build...] \tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n[10:43:07][Running build...] \tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n[10:43:07][Running build...] \tat org.gradle.internal.metaobject.BeanDynamicObject$MetaClassAdapter.invokeMethod(BeanDynamicObject.java:382)\r\n[10:43:07][Running build...] \tat org.gradle.internal.metaobject.BeanDynamicObject.invokeMethod(BeanDynamicObject.java:170)\r\n[10:43:07][Running build...] \tat org.gradle.internal.metaobject.AbstractDynamicObject.invokeMethod(AbstractDynamicObject.java:163)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.antbuilder.AntBuilderDelegate.nodeCompleted(AntBuilderDelegate.java:118)\r\n[10:43:07][Running build...] \tat groovy.util.BuilderSupport.doInvokeMethod(BuilderSupport.java:154)\r\n[10:43:07][Running build...] \tat groovy.util.BuilderSupport.invokeMethod(BuilderSupport.java:67)\r\n[10:43:07][Running build...] \tat org.codehaus.groovy.runtime.callsite.PogoMetaClassSite.call(PogoMetaClassSite.java:48)\r\n[10:43:07][Running build...] \tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.call(AbstractCallSite.java:133)\r\n[10:43:07][Running build...] \tat org.gradle.api.plugins.quality.internal.PmdInvoker$_invoke_closure2.doCall(PmdInvoker.groovy:62)\r\n[10:43:07][Running build...] \tat sun.reflect.GeneratedMethodAccessor1103.invoke(Unknown Source)\r\n[10:43:07][Running build...] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n[10:43:07][Running build...] \tat java.lang.reflect.Method.invoke(Method.java:498)\r\n[10:43:07][Running build...] \tat org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:93)\r\n[10:43:07][Running build...] \tat groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:325)\r\n[10:43:07][Running build...] \tat org.codehaus.groovy.runtime.metaclass.ClosureMetaClass.invokeMethod(ClosureMetaClass.java:294)\r\n[10:43:07][Running build...] \tat groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1024)\r\n[10:43:07][Running build...] \tat groovy.lang.Closure.call(Closure.java:414)\r\n[10:43:07][Running build...] \tat groovy.lang.Closure.call(Closure.java:430)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:70)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.ClosureBackedAction.execute(ClosureBackedAction.java:52)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:151)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder$2.execute(DefaultIsolatedAntBuilder.java:133)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.antbuilder.ClassPathToClassLoaderCache.withCachedClassLoader(ClassPathToClassLoaderCache.java:134)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.antbuilder.DefaultIsolatedAntBuilder.execute(DefaultIsolatedAntBuilder.java:127)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.IsolatedAntBuilder$execute$0.call(Unknown Source)\r\n[10:43:07][Running build...] \tat org.gradle.api.plugins.quality.internal.PmdInvoker.invoke(PmdInvoker.groovy:60)\r\n[10:43:07][Running build...] :libs:assertion:pmd FAILED\r\n[10:43:07][Running build...] \tat org.gradle.api.plugins.quality.Pmd.run(Pmd.java:98)\r\n[10:43:07][Running build...] \tat sun.reflect.GeneratedMethodAccessor1101.invoke(Unknown Source)\r\n[10:43:07][Running build...] \tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n[10:43:07][Running build...] \tat java.lang.reflect.Method.invoke(Method.java:498)\r\n[10:43:07][Running build...] \tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$StandardTaskAction.doExecute(DefaultTaskClassInfoStore.java:141)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$StandardTaskAction.execute(DefaultTaskClassInfoStore.java:134)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.project.taskfactory.DefaultTaskClassInfoStore$StandardTaskAction.execute(DefaultTaskClassInfoStore.java:123)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:632)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:615)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:95)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:76)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:55)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:58)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:88)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:46)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:51)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n[10:43:07][Running build...] \tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n[10:43:07][Running build...] \tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.execute(DefaultTaskGraphExecuter.java:236)\r\n[10:43:07][Running build...] \tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.execute(DefaultTaskGraphExecuter.java:228)\r\n[10:43:07][Running build...] \tat org.gradle.internal.Transformers$4.transform(Transformers.java:169)\r\n[10:43:07][Running build...] \tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:106)\r\n[10:43:07][Running build...] \tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:61)\r\n[10:43:07][Running build...] \tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:228)\r\n[10:43:07][Running build...] \tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:215)\r\n[10:43:07][Running build...] \tat org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.processTask(AbstractTaskPlanExecutor.java:77)\r\n[10:43:07][Running build...] :libs:assertion:pmdPublish\r\n[10:43:07][Running build...] \tat org.gradle.execution.taskgraph.AbstractTaskPlanExecutor$TaskExecutorWorker.run(AbstractTaskPlanExecutor.java:58)\r\n[10:43:07][Running build...] \tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\r\n[10:43:07][Running build...] \tat org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\r\n[10:43:07][Running build...] \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n[10:43:07][Running build...] \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n[10:43:07][Running build...] \tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\n**Running PMD through:** *Gradle*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/234", "user": "davidburstromspotify", "labels": ["a:bug"], "created": "2017-02-02 15:34:44", "closed": "2017-02-12 10:12:21", "commits": {}, "ttf": 9.000277777777777, "commitsDetails": []}, {"title": "[java] SimplifiedTernary: Incorrect ternary operation can be simplified.", "body": "**Rule Set:** basic.html#SimplifiedTernary\r\n\r\n**Description:** I have a special case where to save money in my database, I return null if a boolean value is false in a method of return type `Boolean`.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\n@Nullable\r\npublic Boolean getHasCustomName() {\r\n    return mHasCustomName ? true : null; // From my understanding of Java, this cannot be simplified.\r\n}\r\n```\r\n\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/232", "user": "SUPERCILEX", "labels": ["a:bug"], "created": "2017-02-02 05:51:55", "closed": "2017-02-12 10:12:21", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "[java] UseStringBufferForStringAppends: False Positive with ternary operator", "body": "**Rule Set:** java-optimizations/UseStringBufferForStringAppends\r\n\r\n**Description:**\r\nFalse Positive, similar to https://sourceforge.net/p/pmd/bugs/1340/, but with flipped condition and arguments.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic class UseStringBuffer {\r\n    public void foo() {\r\n        String country = request.getParameter(\"country\");\r\n        country = (country != null) ? country : \"USA\";\r\n    }\r\n}\r\n```\r\n\r\n**Running PMD through:** CLI\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/222", "user": "adangel", "labels": ["a:bug"], "created": "2017-01-30 18:35:46", "closed": "2017-03-23 16:28:40", "commits": {}, "ttf": 51.000277777777775, "commitsDetails": []}, {"title": "[java] UnnecessaryLocalBeforeReturn: ClassCastException in switch case with local variable returned", "body": "Please, prefix the report title with the language it applies to within brackets, such as *[java]* or *[apex]*. If not specific to a language, you can use *[core]*\r\n\r\n**Rule Set:**\r\nUnnecessaryLocalBeforeReturn\r\n\r\n**Description:**\r\n\r\n```\r\njava.lang.ClassCastException: net.sourceforge.pmd.lang.java.ast.ASTSwitchStatement cannot be cast to net.sourceforge.pmd.lang.java.ast.ASTBlock\r\n        at net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule.hasAssertStatement(UnnecessaryLocalBeforeReturnRule.java:101)\r\n        at net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule.visit(UnnecessaryLocalBeforeReturnRule.java:52)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n    public static int m() {\r\n        switch (0) {\r\n            default:\r\n                int i = 0;\r\n                return i;\r\n        }\r\n    }\r\n```\r\n\r\n**Running PMD through:** *Gradle*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/219", "user": "davidburstromspotify", "labels": ["a:bug"], "created": "2017-01-30 13:38:50", "closed": "2017-02-06 19:26:37", "commits": {"1950aeb00155cc0163b4e42174a83139f409ca86": {"commitGHEventType": "referenced", "commitUser": "adangel"}, "6c75c9160df79c652213f873b9622a4e93434743": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "1950aeb00155cc0163b4e42174a83139f409ca86", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["37cf7d345af46a64eae6c43fadca3387a4b5ea92"], "nameRev": "1950aeb00155cc0163b4e42174a83139f409ca86 tags/pmd_releases/5.4.5~35^2~1", "commitMessage": "[java] Fix ClassCastException in UnnecessaryLocalBeforeReturn\n\n - This fixes #219\n", "commitDateTime": "2017-02-06 19:52:41", "authoredDateTime": "2017-01-30 15:18:37", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/UnnecessaryLocalBeforeReturnRule.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/design/xml/UnnecessaryLocalBeforeReturn.xml", "insertions": 16, "deletions": 0, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UnnecessaryLocalBeforeReturnRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule.hasAssertStatement(net.sourceforge.pmd.lang.java.symboltable.VariableNameDeclaration,net.sourceforge.pmd.lang.java.ast.ASTReturnStatement)", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 3}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6c75c9160df79c652213f873b9622a4e93434743", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["1950aeb00155cc0163b4e42174a83139f409ca86"], "nameRev": "6c75c9160df79c652213f873b9622a4e93434743 tags/pmd_releases/5.4.5~35^2", "commitMessage": "Update changelog, fixes #219\n", "commitDateTime": "2017-02-06 19:54:36", "authoredDateTime": "2017-02-06 19:54:36", "commitGitStats": [{"filePath": "src/site/markdown/overview/changelog.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1950aeb00155cc0163b4e42174a83139f409ca86", "6c75c9160df79c652213f873b9622a4e93434743"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 1.0, "INS": 2.0, "MOV": 0.0, "DEL": 3.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.rule.design.UnnecessaryLocalBeforeReturnRule.hasAssertStatement(net.sourceforge.pmd.lang.java.symboltable.VariableNameDeclaration,net.sourceforge.pmd.lang.java.ast.ASTReturnStatement)"]}, {"title": "[java] RedundantFieldInitializer report for annotation field not explicitly marked as final", "body": "**Rule Set:** `optimizations.html#RedundantFieldInitializer`\r\n\r\n**Description:** PMD incorrectly reports a redundant field initializer for final fields in an interface.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```java\r\n@IntDef({MetricType.CHECKBOX, MetricType.COUNTER, MetricType.SPINNER, MetricType.NOTE})\r\n@Retention(RetentionPolicy.SOURCE)\r\npublic @interface MetricType {\r\n    int CHECKBOX = 0; // <<<<<<<< incorrectly reported as a redundant field initializer\r\n    int COUNTER = 1;\r\n    int SPINNER = 2;\r\n    int NOTE = 3;\r\n}\r\n```\r\n\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/215", "user": "SUPERCILEX", "labels": ["a:bug"], "created": "2017-01-29 03:07:10", "closed": "2017-02-05 17:11:53", "commits": {"630b92b64e73c2bd0d9af76f9b8d387dd4ab01b6": {"commitGHEventType": "referenced", "commitUser": "adangel"}, "898dbf0fe331d9eb80f4a4db2322ec287dd6b3a7": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "630b92b64e73c2bd0d9af76f9b8d387dd4ab01b6", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["4b6196a8f5c2793433b19f6d30aa5b0abd73ad8d"], "nameRev": "630b92b64e73c2bd0d9af76f9b8d387dd4ab01b6 tags/pmd_releases/5.4.5~36^2~1", "commitMessage": "[java] Treat annotation members as public static final\n\n - This fixes #215\n - I created a new method so we didn't change public APIs\n", "commitDateTime": "2017-02-05 17:44:55", "authoredDateTime": "2017-01-30 12:59:07", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast/ASTFieldDeclaration.java", "insertions": 11, "deletions": 4, "lines": 15}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ASTFieldDeclarationTest.java", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/optimizations/xml/RedundantFieldInitializer.xml", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ASTFieldDeclaration.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isAnnotationMember()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isFinal()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isPrivate()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isPackagePrivate()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isProtected()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ASTFieldDeclarationTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclarationTest.testWithAnnotation()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclarationTest", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "898dbf0fe331d9eb80f4a4db2322ec287dd6b3a7", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["630b92b64e73c2bd0d9af76f9b8d387dd4ab01b6"], "nameRev": "898dbf0fe331d9eb80f4a4db2322ec287dd6b3a7 tags/pmd_releases/5.4.5~36^2", "commitMessage": "Update changelog, fixes #215\n", "commitDateTime": "2017-02-05 17:46:22", "authoredDateTime": "2017-02-05 17:46:22", "commitGitStats": [{"filePath": "src/site/markdown/overview/changelog.md", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["630b92b64e73c2bd0d9af76f9b8d387dd4ab01b6", "898dbf0fe331d9eb80f4a4db2322ec287dd6b3a7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 4, "lines": 15, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11.0, "UPD": 0.0, "INS": 5.0, "MOV": 6.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/lang/java/ast"], "changesInPackagesSPOON": ["net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isPrivate()", "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isProtected()", "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isFinal()", "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isPackagePrivate()", "net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration.isAnnotationMember()"]}, {"title": "[java] Parse error with local class with 2 or more annotations", "body": "Hello guys,\r\n\r\n   I found another issue when analyzing open-source project 'spring' (https://github.com/spring-projects/spring-framework). Can you please take a look?\r\n\r\nNOTE: The problems seems to be the custom annotation `@Configuration`, after its removal the analyzer does not complain. \r\n\r\n**PMD version:**\r\n5.5.2\r\n\r\n**Rule Set:**\r\njava-basic\r\n\r\n**Description:**\r\n```\r\nError while processing file: spring-framework\\spring-context\\src\\test\\java\\org\\springframework\\context\\annotation\\configuration\\BeanAnnotationAttributePropagationTests.java\r\nnet.sourceforge.pmd.lang.java.ast.ParseException: Encountered \"\" at line 121, column 17.\r\nWas expecting one of:\r\n\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.generateParseException(JavaParser.java:10875)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.jj_consume_token(JavaParser.java:10759)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.BlockStatement(JavaParser.java:4629)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.Block(JavaParser.java:4575)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.MethodDeclaration(JavaParser.java:1554)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBodyDeclaration(JavaParser.java:1246)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBody(JavaParser.java:1162)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceDeclaration(JavaParser.java:586)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.TypeDeclaration(JavaParser.java:476)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.CompilationUnit(JavaParser.java:222)\r\n        at net.sourceforge.pmd.lang.java.AbstractJavaParser.parse(AbstractJavaParser.java:56)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:142)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:80)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:47)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:79)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:25)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n\t@Test\r\n\tpublic void defaultLazyConfigurationPropagatesToIndividualBeans() {\r\n\t\t@Lazy @Configuration class Config {\r\n\t\t\t@Bean Object foo() { return null; }\r\n\t\t}\r\n\r\n\t\tassertTrue(\"@Bean methods declared in a @Lazy @Configuration should be lazily instantiated\",\r\n\t\t\t\tbeanDef(Config.class).isLazyInit());\r\n\t}\r\n```\r\n**Running PMD through:** *[CLI]*\r\n```\r\njava -cp * net.sourceforge.pmd.PMD -d \"spring-framework\\spring-web-reactive\\src\\main\\java\\org\\springframewor\r\nk\\web\\reactive\\function\" -f text -R java-basic -verbose\r\n```\r\n", "url": "https://github.com/pmd/pmd/issues/208", "user": "scais", "labels": ["a:bug"], "created": "2017-01-25 15:27:38", "closed": "2017-01-27 19:58:24", "commits": {"c53e1790e19cc1952ccb985b7e399bbb90dbc072": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "c53e1790e19cc1952ccb985b7e399bbb90dbc072", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["926d1c3fbc05a53a0d01961f6b470534c151a138"], "nameRev": "c53e1790e19cc1952ccb985b7e399bbb90dbc072 tags/pmd_releases/5.4.4~7^2~1", "commitMessage": "[java] Allow more than 1 annotation in local classes\n\n - This fixes #208\n", "commitDateTime": "2017-01-27 20:00:08", "authoredDateTime": "2017-01-25 14:42:25", "commitGitStats": [{"filePath": "pmd-java/etc/grammar/Java.jjt", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ParserCornersTest.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/ast/GitHubBug208.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ParserCornersTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ParserCornersTest.testGitHubBug208ParseError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GitHubBug208.java", "spoonMethods": [{"spoonMethodName": "GitHubBug208", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c53e1790e19cc1952ccb985b7e399bbb90dbc072"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/etc/grammar/Java.jjt"], "changesInPackagesSPOON": ["GitHubBug208"]}, {"title": "[java] Parse error on method reference with generics", "body": "Hello guys,\r\n\r\n   I found an issue when analyzing open-source project 'spring' (https://github.com/spring-projects/spring-framework). Can you please take a look?\r\n\r\n**PMD version:**\r\n5.5.2\r\n\r\n**Rule Set:**\r\njava-basic\r\n\r\n**Description:**\r\n```\r\nError while processing file: spring-framework\\spring-web-reactive\\src\\main\\java\\org\\springframework\\web\\reactive\\function\\BodyExtractors.java\r\nnet.sourceforge.pmd.lang.java.ast.ParseException: Encountered \" \"::\" \":: \"\" at line 121, column 52.\r\nWas expecting one of:\r\n    \")\" ...\r\n    \",\" ...\r\n    \"++\" ...\r\n    \"--\" ...\r\n\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.generateParseException(JavaParser.java:10875)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.jj_consume_token(JavaParser.java:10759)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.Arguments(JavaParser.java:4187)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.PrimarySuffix(JavaParser.java:4016)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.PrimaryExpression(JavaParser.java:3668)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.PostfixExpression(JavaParser.java:3502)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.UnaryExpressionNotPlusMinus(JavaParser.java:3464)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.UnaryExpression(JavaParser.java:3316)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.MultiplicativeExpression(JavaParser.java:3231)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.AdditiveExpression(JavaParser.java:3178)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ShiftExpression(JavaParser.java:3123)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.RelationalExpression(JavaParser.java:3062)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.InstanceOfExpression(JavaParser.java:3026)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.EqualityExpression(JavaParser.java:2973)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.AndExpression(JavaParser.java:2933)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ExclusiveOrExpression(JavaParser.java:2893)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.InclusiveOrExpression(JavaParser.java:2853)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalAndExpression(JavaParser.java:2813)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalOrExpression(JavaParser.java:2773)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ConditionalExpression(JavaParser.java:2734)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.Expression(JavaParser.java:2593)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ReturnStatement(JavaParser.java:5396)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.Statement(JavaParser.java:4488)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.BlockStatement(JavaParser.java:4617)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.Block(JavaParser.java:4575)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.MethodDeclaration(JavaParser.java:1554)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBodyDeclaration(JavaParser.java:1246)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceBody(JavaParser.java:1162)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.ClassOrInterfaceDeclaration(JavaParser.java:586)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.TypeDeclaration(JavaParser.java:476)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.CompilationUnit(JavaParser.java:222)\r\n        at net.sourceforge.pmd.lang.java.AbstractJavaParser.parse(AbstractJavaParser.java:56)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:142)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:80)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:47)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:79)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:25)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\n\tprivate static <T, S extends Publisher<T>> S readWithMessageReaders(\r\n\t\t\tReactiveHttpInputMessage inputMessage,\r\n\t\t\tBodyExtractor.Context context,\r\n\t\t\tResolvableType elementType,\r\n\t\t\tFunction<HttpMessageReader<T>, S> readerFunction,\r\n\t\t\tFunction<Throwable, S> unsupportedError) {\r\n\r\n\t\tMediaType contentType = contentType(inputMessage);\r\n\t\tSupplier<Stream<HttpMessageReader<?>>> messageReaders = context.messageReaders();\r\n\t\treturn messageReaders.get()\r\n\t\t\t\t.filter(r -> r.canRead(elementType, contentType))\r\n\t\t\t\t.findFirst()\r\n\t\t\t\t.map(BodyExtractors::<T>cast)\r\n\t\t\t\t.map(readerFunction)\r\n\t\t\t\t.orElseGet(() -> {\r\n\t\t\t\t\tList<MediaType> supportedMediaTypes = messageReaders.get()\r\n\t\t\t\t\t\t\t.flatMap(reader -> reader.getReadableMediaTypes().stream())\r\n\t\t\t\t\t\t\t.collect(Collectors.toList());\r\n\t\t\t\t\tUnsupportedMediaTypeException error =\r\n\t\t\t\t\t\t\tnew UnsupportedMediaTypeException(contentType, supportedMediaTypes);\r\n\t\t\t\t\treturn unsupportedError.apply(error);\r\n\t\t\t\t});\r\n\t}\r\n```\r\n\r\nalso happens for another file (BodyInserters.java):\r\n\r\n```\r\n\tprivate static HttpMessageWriter<Resource> resourceHttpMessageWriter(BodyInserter.Context context) {\r\n\t\treturn context.messageWriters().get()\r\n\t\t\t\t.filter(messageWriter -> messageWriter.canWrite(RESOURCE_TYPE, null))\r\n\t\t\t\t.findFirst()\r\n\t\t\t\t.map(BodyInserters::<Resource>cast)\r\n\t\t\t\t.orElseThrow(() -> new IllegalStateException(\r\n\t\t\t\t\t\t\"Could not find HttpMessageWriter that supports Resources.\"));\r\n\t}\r\n```\r\n\r\nand another file (RouterFunctionsTests.java):\r\n\r\n```\r\n\t@Test\r\n\tpublic void toHttpHandler() throws Exception {\r\n\t\tHandlerStrategies strategies = mock(HandlerStrategies.class);\r\n\t\twhen(strategies.messageReaders()).thenReturn(\r\n\t\t\t\tStream::<HttpMessageReader<?>>empty);\r\n\t\twhen(strategies.messageWriters()).thenReturn(\r\n\t\t\t\tStream::<HttpMessageWriter<?>>empty);\r\n\t\twhen(strategies.viewResolvers()).thenReturn(\r\n\t\t\t\tStream::<ViewResolver>empty);\r\n\r\n\t\tServerRequest request = mock(ServerRequest.class);\r\n\t\tServerResponse response = mock(ServerResponse.class);\r\n\t\twhen(response.writeTo(any(ServerWebExchange.class), eq(strategies))).thenReturn(Mono.empty());\r\n\r\n\t\tHandlerFunction<ServerResponse> handlerFunction = mock(HandlerFunction.class);\r\n\t\twhen(handlerFunction.handle(any(ServerRequest.class))).thenReturn(Mono.just(response));\r\n\r\n\t\tRouterFunction<ServerResponse> routerFunction = mock(RouterFunction.class);\r\n\t\twhen(routerFunction.route(any(ServerRequest.class))).thenReturn(Mono.just(handlerFunction));\r\n\r\n\t\tRequestPredicate requestPredicate = mock(RequestPredicate.class);\r\n\t\twhen(requestPredicate.test(request)).thenReturn(false);\r\n\r\n\r\n\t\tHttpHandler result = RouterFunctions.toHttpHandler(routerFunction, strategies);\r\n\t\tassertNotNull(result);\r\n\r\n\t\tMockServerHttpRequest httpRequest =\r\n\t\t\t\tnew MockServerHttpRequest(HttpMethod.GET, \"http://localhost\");\r\n\t\tMockServerHttpResponse serverHttpResponse = new MockServerHttpResponse();\r\n\t\tresult.handle(httpRequest, serverHttpResponse);\r\n\t}\r\n```\r\n\r\n**Running PMD through:** *[CLI]*\r\n```\r\njava -cp * net.sourceforge.pmd.PMD -d \"spring-framework\\spring-web-reactive\\src\\main\\java\\org\\springframewor\r\nk\\web\\reactive\\function\" -f text -R java-basic -verbose\r\n```\r\n", "url": "https://github.com/pmd/pmd/issues/207", "user": "scais", "labels": ["a:bug"], "created": "2017-01-25 15:01:02", "closed": "2017-01-27 19:58:19", "commits": {"33fd84d521517d91fbc020cadecc84f7e21329f4": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "33fd84d521517d91fbc020cadecc84f7e21329f4", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["c63347508eb91a7b1ae82d33e5fc9965216f912a"], "nameRev": "33fd84d521517d91fbc020cadecc84f7e21329f4 tags/pmd_releases/5.4.4~9^2~1", "commitMessage": "[java] Support generics in method references\n\n - Fixes #207\n - Extend the Java grammar to support generics in\n    method references: `Type::<Generic>method`\n", "commitDateTime": "2017-01-27 19:10:42", "authoredDateTime": "2017-01-25 12:44:40", "commitGitStats": [{"filePath": "pmd-java/etc/grammar/Java.jjt", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ParserCornersTest.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/ast/GitHubBug207.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ParserCornersTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ParserCornersTest.testGitHubBug207()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GitHubBug207.java", "spoonMethods": [{"spoonMethodName": "GitHubBug207", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["33fd84d521517d91fbc020cadecc84f7e21329f4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/etc/grammar/Java.jjt"], "changesInPackagesSPOON": ["GitHubBug207"]}, {"title": "[java] Parse error on annotation fields with generics", "body": "Hello guys,\r\n\r\n   I found an issue when analyzing open-source project 'caffeine' (https://github.com/ben-manes/caffeine). Can you please take a look?\r\n\r\n**PMD version:**\r\n5.5.2\r\n\r\n**Rule Set:**\r\njava-basic\r\n\r\n**Description:**\r\n```\r\nError while processing file: caffeine\\src\\test\\java\\com\\github\\benmanes\\caffeine\\cache\\testing\\CacheSpec.java\r\nnet.sourceforge.pmd.lang.java.ast.ParseException: Encountered \" \"=\" \"= \"\" at line 360, column 56.\r\nWas expecting:\r\n    \"(\" ...\r\n\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.generateParseException(JavaParser.java:10875)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.jj_consume_token(JavaParser.java:10759)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.AnnotationMethodDeclaration(JavaParser.java:6396)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.AnnotationTypeMemberDeclaration(JavaParser.java:6318)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.AnnotationTypeBody(JavaParser.java:6259)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.AnnotationTypeDeclaration(JavaParser.java:6194)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.TypeDeclaration(JavaParser.java:482)\r\n        at net.sourceforge.pmd.lang.java.ast.JavaParser.CompilationUnit(JavaParser.java:222)\r\n        at net.sourceforge.pmd.lang.java.AbstractJavaParser.parse(AbstractJavaParser.java:56)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.parse(SourceCodeProcessor.java:95)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSource(SourceCodeProcessor.java:142)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:80)\r\n        at net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(SourceCodeProcessor.java:47)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:79)\r\n        at net.sourceforge.pmd.processor.PmdRunnable.call(PmdRunnable.java:25)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n        at java.lang.Thread.run(Thread.java:745)\r\n```\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\npublic @interface CacheSpec {\r\n  // FIXME: A hack to allow the NEGATIVE loader's return value to be retained on refresh\r\n  static final ThreadLocal<Interner<Integer>> interner =\r\n      ThreadLocal.withInitial(Interners::newStrongInterner);\r\n}\r\n```\r\n\r\n**Running PMD through:** *[CLI]*\r\n```\r\njava -cp * net.sourceforge.pmd.PMD -d \"...caffeine\\caffeine\\src\\test\\java\\com\\github\\benmanes\\caffeine\\cache\\testing\" -f text -R java-basic -verbose\r\n```\r\n", "url": "https://github.com/pmd/pmd/issues/206", "user": "scais", "labels": ["a:bug"], "created": "2017-01-25 14:41:44", "closed": "2017-01-27 19:58:23", "commits": {"455b1c4dedc53230396a05a69b53b55a5a88334e": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "455b1c4dedc53230396a05a69b53b55a5a88334e", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["aff9fc90ef64f095303af8277caf7db6e1e262a9"], "nameRev": "455b1c4dedc53230396a05a69b53b55a5a88334e tags/pmd_releases/5.4.4~8^2~1", "commitMessage": "Fix grammar for annotation members\n\n - The lookahead (3 tokens) was too small, and without reaching the opening\n    parenthesis assumed it was parsing a method and not a field.\n - Using a larger lookahead solves the issue.\n - Fixes #206\n", "commitDateTime": "2017-01-27 19:38:48", "authoredDateTime": "2017-01-25 13:11:07", "commitGitStats": [{"filePath": "pmd-java/etc/grammar/Java.jjt", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/ast/ParserCornersTest.java", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ParserCornersTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.ast.ParserCornersTest.testBug206()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["455b1c4dedc53230396a05a69b53b55a5a88334e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/etc/grammar/Java.jjt"], "changesInPackagesSPOON": []}, {"title": "[javascript] template strings are not correctly parsed", "body": "**Rule Set:** N/A\r\n\r\n**Description:** ECMAScript 2015 (ES6) added support for template strings, delimited by backsticks (`` ` ``). The current grammar does not support this properly, meaning template strings throw lexical errors.\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\n```\r\nvar markup = `<p>${content}</p>`;\r\n```\r\n\r\n**Running PMD through:** *Any*\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/201", "user": "jsotuyod", "labels": ["a:bug"], "created": "2017-01-20 12:51:27", "closed": "2017-01-20 12:55:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "[java] UselessParentheses: Parentheses in return statement are incorrectly reported as useless", "body": "**Rule Set:**\r\n`unnecessary.html#UselessParentheses`\r\n\r\n**Code Sample demonstrating the issue:**\r\n\r\nThese are incorrectly reported as useless parentheses:\r\n```java\r\nreturn (mNumber != null ? mNumber.equals(team.mNumber) : team.mNumber == null)\r\n        && (mKey != null ? mKey.equals(team.mKey) : team.mKey == null)\r\n        && (mTemplateKey != null ? mTemplateKey.equals(team.mTemplateKey) : team.mTemplateKey == null)\r\n        && (mName != null ? mName.equals(team.mName) : team.mName == null);\r\n```\r\n\r\nRemoving them would result in nested ternary operations returning an incorrect boolean.\r\n\r\n**Running PMD through:** Gradle\r\n\r\n", "url": "https://github.com/pmd/pmd/issues/199", "user": "SUPERCILEX", "labels": ["a:bug"], "created": "2017-01-20 05:20:05", "closed": "2017-01-27 16:59:15", "commits": {"420c6d45a3c4250aba4c0817eb3a5bb3a99300b4": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "420c6d45a3c4250aba4c0817eb3a5bb3a99300b4", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["470bbb3c65d26e1774bbed2be931998fc0a51aec"], "nameRev": "420c6d45a3c4250aba4c0817eb3a5bb3a99300b4 tags/pmd_releases/5.4.4~11^2~1", "commitMessage": "Fixes #199 - False positives with ternary operator\n\n - I deected a couple of extra related issues with ternary operators which are now fixed.\n", "commitDateTime": "2017-01-27 16:42:24", "authoredDateTime": "2017-01-23 01:43:40", "commitGitStats": [{"filePath": "pmd-java/src/main/resources/rulesets/java/unnecessary.xml", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/lang/java/rule/unnecessary/UnnecessaryRulesTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/unnecessary/xml/UselessParentheses.xml", "insertions": 40, "deletions": 0, "lines": 40}], "commitSpoonAstDiffStats": [{"spoonFilePath": "UnnecessaryRulesTest.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["420c6d45a3c4250aba4c0817eb3a5bb3a99300b4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "[java] CPD runs into NPE when analyzing Lucene", "body": "I use pmd-4.2.6.jar to detect clones with \"net.sourceforge.pmd.cpd.GUI\" (java -Xmx4g -XX:-UseGCOverheadLimit  -cp pmd-4.2.6.jar net.sourceforge.pmd.cpd.GUI). To this version, I run with parameters -Xmx4g -XX:-UseGCOverheadLimit (I use Linux 64bits with 28GB of RAM). To detect clones I use \"Ignore Literals and Identifiers=true\" and \"Scan subdiretories=true\". This version is OK.\r\n\r\nToday, I updated to latest version PMD-5.5.2 (5th November 2016). I runned this version with script \"run.sh\" (./run.sh cpdgui) in folder \"bind\". However  this version show some erros:\r\n\r\nError 1: When the flag \"Ignore identifiers\" is true, the tool show the follow message:\r\njava.lang.NullPointerException\r\n\tat net.sourceforge.pmd.cpd.JavaTokenizer$ConstructorDetector.processToken(JavaTokenizer.java:235)\r\n\tat net.sourceforge.pmd.cpd.JavaTokenizer.processToken(JavaTokenizer.java:76)\r\n\tat net.sourceforge.pmd.cpd.JavaTokenizer.tokenize(JavaTokenizer.java:54)\r\n\tat net.sourceforge.pmd.cpd.CPD.addAndThrowLexicalError(CPD.java:143)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:138)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:103)\r\n\tat net.sourceforge.pmd.cpd.CPD.add(CPD.java:67)\r\n\tat net.sourceforge.pmd.cpd.CPD.addDirectory(CPD.java:77)\r\n\tat net.sourceforge.pmd.cpd.CPD.addRecursively(CPD.java:62)\r\n\tat net.sourceforge.pmd.cpd.GUI.go(GUI.java:624)\r\n\tat net.sourceforge.pmd.cpd.GUI.access$500(GUI.java:70)\r\n\tat net.sourceforge.pmd.cpd.GUI$GoListener$1.run(GUI.java:198)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\nError 2: Quando o sinalizador \"Ignorar identificadores\" for FALSE, \"Ignorar literais\" \u00e9 VERDADEIRO e \"Ignorar Anota\u00e7\u00f5es\" \u00e9 VERDADEIRO, a ferramenta mostrar a seguinte mensagem:\r\nException in thread \"Thread-1\" java.lang.OutOfMemoryError: Java heap space\r\n\tat java.util.Arrays.copyOf(Unknown Source)\r\n\tat java.lang.AbstractStringBuilder.ensureCapacityInternal(Unknown Source)\r\n\tat java.lang.AbstractStringBuilder.append(Unknown Source)\r\n\tat java.lang.StringBuilder.append(Unknown Source)\r\n\tat net.sourceforge.pmd.cpd.SourceCode.getSlice(SourceCode.java:173)\r\n\tat net.sourceforge.pmd.cpd.MatchAlgorithm.findMatches(MatchAlgorithm.java:83)\r\n\tat net.sourceforge.pmd.cpd.CPD.go(CPD.java:50)\r\n\tat net.sourceforge.pmd.cpd.GUI.go(GUI.java:631)\r\n\tat net.sourceforge.pmd.cpd.GUI.access$500(GUI.java:70)\r\n\tat net.sourceforge.pmd.cpd.GUI$GoListener$1.run(GUI.java:198)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n\r\n\r\n\r\nTo try fix this last error, I also runned the version 5.5.2 with this parameters: \"-Xmx4g -XX:-UseGCOverheadLimit\", \"-Xmx6g -XX:-UseGCOverheadLimit\". But this not works.\r\n\r\n\r\nIn all executions, I used \"Scan Subdirectories=TRUE\" and \"Duplicate chunks=75\" and \"File Encoding=UTF-8\".\r\n\r\nMy Java version: \r\njava version \"1.8.0_111\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_111-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode)\r\n\r\nThe source code that I analysed is Lucene (http://lucene.apache.org/solr/)", "url": "https://github.com/pmd/pmd/issues/185", "user": "eldereng", "labels": ["a:bug"], "created": "2017-01-11 12:04:43", "closed": "2017-01-27 10:51:47", "commits": {"36fcdd252cbd87777abc93a1488e5f0ed4f31514": {"commitGHEventType": "referenced", "commitUser": "adangel"}, "c2d22a1bdfed3311864e1232f2ef418bc583e15b": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 15.000277777777777, "commitsDetails": [{"commitHash": "36fcdd252cbd87777abc93a1488e5f0ed4f31514", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["6267822b6afeb931d007abf210b0f4eb3b4f92a8"], "nameRev": "36fcdd252cbd87777abc93a1488e5f0ed4f31514 tags/pmd_releases/5.5.3~14^2~1", "commitMessage": "Fix NPE error in CPD reported under #185\n", "commitDateTime": "2017-01-27 11:26:51", "authoredDateTime": "2017-01-17 18:03:12", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/cpd/JavaTokenizer.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "pmd-java/src/test/java/net/sourceforge/pmd/cpd/JavaTokensTokenizerTest.java", "insertions": 22, "deletions": 4, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JavaTokenizer.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.JavaTokenizer.ConstructorDetector.processToken(net.sourceforge.pmd.lang.java.ast.Token)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JavaTokensTokenizerTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.JavaTokensTokenizerTest.suite()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c2d22a1bdfed3311864e1232f2ef418bc583e15b", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["9d0a6b7f4b7458cc748d199061b5cbf0d728893f"], "nameRev": "c2d22a1bdfed3311864e1232f2ef418bc583e15b tags/pmd_releases/5.4.4~12^2~1", "commitMessage": "Make Mark's code snippet lazy\n\n - This greatly reduces the memory footprint during analysis,\n    addressing part of the issues raised ay #185\n - Rendering is still done to a single String which is then either printed\n    to STDOUT or a file, this stiill needs refactoring.\n", "commitDateTime": "2017-01-27 12:01:46", "authoredDateTime": "2017-01-18 17:01:28", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/Mark.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/Match.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/MatchAlgorithm.java", "insertions": 4, "deletions": 5, "lines": 9}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/cpd/SourceCode.java", "insertions": 43, "deletions": 11, "lines": 54}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/CSVRendererTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/MarkTest.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/MatchTest.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "pmd-core/src/test/java/net/sourceforge/pmd/cpd/XMLRendererTest.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Mark.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.Mark.setSoureCodeSlice(java.lang.String)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.Mark", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.Mark.getSourceCodeSlice()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "Match.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.Match.iterator()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MatchAlgorithm.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.MatchAlgorithm.findMatches()", "TOT": 13, "UPD": 1, "INS": 2, "MOV": 9, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.MatchAlgorithm.hash()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SourceCode.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.load()", "TOT": 18, "UPD": 6, "INS": 0, "MOV": 12, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SourceCode.getSlice(int,int)", "TOT": 21, "UPD": 2, "INS": 1, "MOV": 16, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SourceCode.CodeLoader", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.load(int,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.getCode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.getFileName()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.getReader()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CSVRendererTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.CSVRendererTest.createMark(java.lang.String,java.lang.String,int,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MarkTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.MarkTest.testSimple()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MatchTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.MatchTest.createMark(java.lang.String,java.lang.String,int,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "XMLRendererTest.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRendererTest.createMark(java.lang.String,java.lang.String,int,int,java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.cpd.XMLRendererTest.testWithOneDuplication()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["36fcdd252cbd87777abc93a1488e5f0ed4f31514", "c2d22a1bdfed3311864e1232f2ef418bc583e15b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 65, "deletions": 20, "lines": 85, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 68, "UPD": 12, "INS": 9, "MOV": 43, "DEL": 4, "spoonFilesChanged": 5, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-java/src/main/java/net/sourceforge/pmd/cpd", "pmd-core/src/main/java/net/sourceforge/pmd/cpd"], "changesInPackagesSPOON": ["net.sourceforge.pmd.cpd.SourceCode.CodeLoader.load()", "net.sourceforge.pmd.cpd.Mark.getSourceCodeSlice()", "net.sourceforge.pmd.cpd.MatchAlgorithm.findMatches()", "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.getCode()", "net.sourceforge.pmd.cpd.SourceCode.CodeLoader", "net.sourceforge.pmd.cpd.JavaTokenizer.ConstructorDetector.processToken(net.sourceforge.pmd.lang.java.ast.Token)", "net.sourceforge.pmd.cpd.Match.iterator()", "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.load(int,int)", "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.getFileName()", "net.sourceforge.pmd.cpd.Mark.setSoureCodeSlice(java.lang.String)", "net.sourceforge.pmd.cpd.SourceCode.getSlice(int,int)", "net.sourceforge.pmd.cpd.SourceCode.CodeLoader.getReader()", "net.sourceforge.pmd.cpd.MatchAlgorithm.hash()", "net.sourceforge.pmd.cpd.Mark"]}, {"title": "[apex]\u00a0NCSS Method length is incorrect when using method chaining", "body": "If you analyze the following source code with the `NcssMethodCountRule`\r\n\r\nhttps://github.com/pmd/pmd/blob/master/pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/complexity/NcssMethodCountRule.java\r\n\r\n```\r\n@isTest\r\nprivate class AcceptanceTests_Test {\r\n    \r\n    @isTest\r\n    private static void test() {  \r\n\r\n        // Setup\r\n        Opportunity o1 = new Opportunity()\r\n                                    .add(new Contact().foo(1)  .bar(1).year(2012)  .bar(1).price(5)  .vol(100))\r\n                                    .add(new Contact().foo(1)  .bar(2).year(2013)  .bar(1).price(5)  .vol(110))\r\n                                    .add(new Contact().foo(1)  .bar(3).year(2014)  .bar(1).price(5)  .vol(120))\r\n                                    .add(new Contact().foo(1)  .bar(4).year(2015)  .bar(1).price(5)  .vol(130))\r\n                                    .persist();\r\n\r\n        Opportunity o2 = new Opportunity()\r\n                                    .add(new Contact().foo(1)  .PRS(1).year(2012)  .bar(1).price(5)  .vol(110))\r\n                                    .add(new Contact().foo(1)  .PRS(2).year(2013)  .bar(1).price(5)  .vol(120))\r\n                                    .add(new Contact().foo(1)  .PRS(3).year(2014)  .bar(1).price(5)  .vol(130))\r\n                                    .add(new Contact().foo(1)  .PRS(4).year(2015)  .bar(1).price(5)  .vol(140))\r\n                                    .persist();\r\n\r\n        Opportunity o3 = new Opportunity()\r\n                                    .add(new Contact().foo(1)  .PRS(1).year(2012)  .bar(1).price(5)  .vol(110))\r\n                                    .add(new Contact().foo(1)  .PRS(2).year(2013)  .bar(1).price(5)  .vol(120))\r\n                                    .add(new Contact().foo(1)  .PRS(3).year(2014)  .bar(1).price(5)  .vol(130))\r\n                                    .add(new Contact().foo(1)  .PRS(4).year(2015)  .bar(1).price(5)  .vol(140))\r\n                                    .persist();\r\n        \r\n\r\n        // Exercise     \r\n        callMethod();\r\n       \r\n\r\n        // Verify\r\n        System.assert(attribute());\r\n    }\r\n}\r\n```\r\n\r\nthe test method marked as issue with over 80 NCSS. Actually it is less than 30. The method chaining in // Setup seems to confuse the PMD line detection.\r\n<img width=\"925\" alt=\"cursor_und_adm_acceptancetests_test_cls_at_master_ _up2go_adm\" src=\"https://cloud.githubusercontent.com/assets/8180281/21811356/b7401fb6-d74f-11e6-879c-f2aeaad4a8f1.png\">\r\n", "url": "https://github.com/pmd/pmd/issues/183", "user": "rsoesemann", "labels": ["a:bug"], "created": "2017-01-10 15:13:30", "closed": "2017-01-15 18:57:14", "commits": {"80b2792db5eb3962d356a691f55602d71e42d5a8": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "80b2792db5eb3962d356a691f55602d71e42d5a8", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["4055a79e4c36fdd68f567810407b5780db0e991f"], "nameRev": "80b2792db5eb3962d356a691f55602d71e42d5a8 tags/pmd_releases/5.5.3~15^2~11", "commitMessage": "Fix #183 - Count whole expressions as 1 line\n\n - This is consistent with how we count \"lines\" in other languages.\n - Notice we are not actually counting lines, so multiline expressions are\n    counted as 1.\n - Having multiple variable declarations together is still counting 1 per variable.\n", "commitDateTime": "2017-01-15 18:33:06", "authoredDateTime": "2017-01-12 17:41:29", "commitGitStats": [{"filePath": "pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule/complexity/AbstractNcssCountRule.java", "insertions": 131, "deletions": 136, "lines": 267}, {"filePath": "pmd-apex/src/test/resources/net/sourceforge/pmd/lang/apex/rule/complexity/xml/NcssMethodCount.xml", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}], "filteredCommits": ["80b2792db5eb3962d356a691f55602d71e42d5a8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 131, "deletions": 136, "lines": 267, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-apex/src/main/java/net/sourceforge/pmd/lang/apex/rule"]}, {"title": "[core] Remove duplicate code between PMD Processors and PMDRunnable", "body": "Currently `MonoThreadProcessor` and `MultiThreadProcessor` + `PmdRunnable` do pretty much the same, and in doing so, they are repeating a lot of code with even some slight inconsistencies.\r\n\r\nFor instance, `MonoThreadProcessor` calls `rs.start(ctx);` for the rulesets once per file. `MultiThreadProcessor` on the other hand, does so only once, and not even on the `RuleSets` instance being used (this means both `GenericClassCounterRule` and `CommentContentRule` are broken unless run with `-threads 0`).\r\n\r\nWe can't kill `MonoThreadProcessor` (it's used from ant by default, and not launching threads has advantages for tasks such as profiling / benchmarking), but those classes could certainly share more code to provide a more concise implementation. For instance, ee could probably pull all logic up to `AbstractPMDProcessor` and just let as extension point the strategy for running a given `PmdRunnable` (with the `MonoThreadProcessor` simply doing `call()`). This would require creating a new `PmdRunnable` per file even on mono thread AND we would probably have to get rid of `PmdThread` (or at least make sure `PmdRunnable` doesn't depend on it), but is the cleanest alternative I've come up with so far.", "url": "https://github.com/pmd/pmd/issues/180", "user": "jsotuyod", "labels": ["a:bug", "in:pmd-internals"], "created": "2017-01-08 05:14:09", "closed": "2017-01-22 18:56:41", "commits": {"3caa71b94b016902ee1a41f0390d04dc3153a1ad": {"commitGHEventType": "closed", "commitUser": "adangel"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "3caa71b94b016902ee1a41f0390d04dc3153a1ad", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["c4ce057709917f0f77e5bb352db831aeb726bee3"], "nameRev": "3caa71b94b016902ee1a41f0390d04dc3153a1ad tags/pmd_releases/5.4.4~13^2~1", "commitMessage": "Resolve #180 - refactor pmd processors\n\n - SourceCodeProcessor now consistently calls rule sets start / end\n    if cache is not up to date\n - Both Mono and MultiThread Processors rely on PmdRunnable, just using\n    different execution strategies\n - This also fixes https://sourceforge.net/p/pmd/bugs/1511/\n", "commitDateTime": "2017-01-22 19:19:21", "authoredDateTime": "2017-01-13 20:24:20", "commitGitStats": [{"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/SourceCodeProcessor.java", "insertions": 27, "deletions": 22, "lines": 49}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/processor/AbstractPMDProcessor.java", "insertions": 26, "deletions": 8, "lines": 34}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/processor/MonoThreadProcessor.java", "insertions": 22, "deletions": 70, "lines": 92}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/processor/MultiThreadProcessor.java", "insertions": 43, "deletions": 64, "lines": 107}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/processor/PmdRunnable.java", "insertions": 85, "deletions": 110, "lines": 195}, {"filePath": "pmd-core/src/main/java/net/sourceforge/pmd/processor/PmdThreadFactory.java", "insertions": 6, "deletions": 24, "lines": 30}, {"filePath": "pmd-test/src/main/java/net/sourceforge/pmd/testframework/RuleTst.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "src/site/markdown/customizing/howtowritearule.md", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SourceCodeProcessor.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.SourceCodeProcessor.parse(net.sourceforge.pmd.RuleContext,java.io.Reader,net.sourceforge.pmd.Parser)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.SourceCodeProcessor.symbolFacade(net.sourceforge.pmd.lang.ast.Node,net.sourceforge.pmd.LanguageVersionHandler)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.SourceCodeProcessor.usesDFA(net.sourceforge.pmd.LanguageVersion,net.sourceforge.pmd.lang.ast.Node,net.sourceforge.pmd.RuleSets,net.sourceforge.pmd.Language)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.SourceCodeProcessor.usesTypeResolution(net.sourceforge.pmd.LanguageVersion,net.sourceforge.pmd.lang.ast.Node,net.sourceforge.pmd.RuleSets,net.sourceforge.pmd.Language)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.SourceCodeProcessor.processSource(java.io.Reader,net.sourceforge.pmd.RuleSets,net.sourceforge.pmd.RuleContext)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.SourceCodeProcessor.determineLanguage(net.sourceforge.pmd.RuleContext)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(java.io.Reader,net.sourceforge.pmd.RuleSets,net.sourceforge.pmd.RuleContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractPMDProcessor.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.processor.AbstractPMDProcessor.runAnalysis(net.sourceforge.pmd.processor.PmdRunnable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.processor.AbstractPMDProcessor.collectReports(java.util.List)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MonoThreadProcessor.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.processor.MonoThreadProcessor", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.processor.MonoThreadProcessor.processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)", "TOT": 26, "UPD": 7, "INS": 0, "MOV": 8, "DEL": 11}, {"spoonMethodName": "net.sourceforge.pmd.processor.MonoThreadProcessor.addError(net.sourceforge.pmd.Report,java.lang.String,java.lang.Exception,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(net.sourceforge.pmd.processor.PmdRunnable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.processor.MonoThreadProcessor.collectReports(java.util.List)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MultiThreadProcessor.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.processor.MultiThreadProcessor.processReports(java.util.List,java.util.List)", "TOT": 10, "UPD": 3, "INS": 0, "MOV": 5, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.processor.MultiThreadProcessor.processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.processor.MultiThreadProcessor", "TOT": 10, "UPD": 0, "INS": 6, "MOV": 3, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.processor.MultiThreadProcessor.runAnalysis(net.sourceforge.pmd.processor.PmdRunnable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PmdRunnable.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.processor.PmdRunnable", "TOT": 18, "UPD": 4, "INS": 3, "MOV": 9, "DEL": 2}, {"spoonMethodName": "net.sourceforge.pmd.processor.PmdRunnable.PmdThread", "TOT": 18, "UPD": 12, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.processor.PmdRunnable.addErrorAndShutdown(net.sourceforge.pmd.Report,java.lang.Exception,java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "net.sourceforge.pmd.processor.PmdRunnable.call()", "TOT": 33, "UPD": 6, "INS": 11, "MOV": 4, "DEL": 12}, {"spoonMethodName": "net.sourceforge.pmd.processor.PmdRunnable.addError(net.sourceforge.pmd.Report,java.lang.Exception,java.lang.String)", "TOT": 6, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.processor.PmdRunnable.createThread(int,java.lang.Runnable,net.sourceforge.pmd.RuleSetFactory,net.sourceforge.pmd.RuleContext)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "net.sourceforge.pmd.processor.PmdRunnable.reset()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "PmdThreadFactory.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.processor.PmdThreadFactory", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 4}, {"spoonMethodName": "net.sourceforge.pmd.processor.PmdThreadFactory.newThread(java.lang.Runnable)", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 3}]}, {"spoonFilePath": "RuleTst.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.testframework.RuleTst.runTestFromString(java.lang.String,net.sourceforge.pmd.Rule,net.sourceforge.pmd.Report,net.sourceforge.pmd.lang.LanguageVersion,boolean)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3caa71b94b016902ee1a41f0390d04dc3153a1ad"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 209, "deletions": 300, "lines": 509, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 176, "UPD": 52, "INS": 33, "MOV": 48, "DEL": 43, "spoonFilesChanged": 7, "spoonMethodsChanged": 29}, "statsSkippedReason": "", "changesInPackagesGIT": ["pmd-core/src/main/java/net/sourceforge/pmd", "pmd-core/src/main/java/net/sourceforge/pmd/processor", "pmd-test/src/main/java/net/sourceforge/pmd/testframework"], "changesInPackagesSPOON": ["net.sourceforge.pmd.SourceCodeProcessor.parse(net.sourceforge.pmd.RuleContext,java.io.Reader,net.sourceforge.pmd.Parser)", "net.sourceforge.pmd.testframework.RuleTst.runTestFromString(java.lang.String,net.sourceforge.pmd.Rule,net.sourceforge.pmd.Report,net.sourceforge.pmd.lang.LanguageVersion,boolean)", "net.sourceforge.pmd.SourceCodeProcessor.determineLanguage(net.sourceforge.pmd.RuleContext)", "net.sourceforge.pmd.processor.MultiThreadProcessor", "net.sourceforge.pmd.processor.MonoThreadProcessor.runAnalysis(net.sourceforge.pmd.processor.PmdRunnable)", "net.sourceforge.pmd.processor.AbstractPMDProcessor.collectReports(java.util.List)", "net.sourceforge.pmd.processor.PmdRunnable.call()", "net.sourceforge.pmd.processor.PmdRunnable.addError(net.sourceforge.pmd.Report,java.lang.Exception,java.lang.String)", "net.sourceforge.pmd.processor.PmdRunnable.reset()", "net.sourceforge.pmd.processor.AbstractPMDProcessor.processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)", "net.sourceforge.pmd.processor.PmdThreadFactory", "net.sourceforge.pmd.processor.PmdRunnable.PmdThread", "net.sourceforge.pmd.processor.MonoThreadProcessor.addError(net.sourceforge.pmd.Report,java.lang.String,java.lang.Exception,java.lang.String)", "net.sourceforge.pmd.SourceCodeProcessor.usesDFA(net.sourceforge.pmd.LanguageVersion,net.sourceforge.pmd.lang.ast.Node,net.sourceforge.pmd.RuleSets,net.sourceforge.pmd.Language)", "net.sourceforge.pmd.SourceCodeProcessor.processSourceCode(java.io.Reader,net.sourceforge.pmd.RuleSets,net.sourceforge.pmd.RuleContext)", "net.sourceforge.pmd.SourceCodeProcessor.usesTypeResolution(net.sourceforge.pmd.LanguageVersion,net.sourceforge.pmd.lang.ast.Node,net.sourceforge.pmd.RuleSets,net.sourceforge.pmd.Language)", "net.sourceforge.pmd.processor.MonoThreadProcessor", "net.sourceforge.pmd.SourceCodeProcessor.symbolFacade(net.sourceforge.pmd.lang.ast.Node,net.sourceforge.pmd.LanguageVersionHandler)", "net.sourceforge.pmd.processor.MonoThreadProcessor.processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)", "net.sourceforge.pmd.processor.MultiThreadProcessor.processReports(java.util.List,java.util.List)", "net.sourceforge.pmd.processor.MonoThreadProcessor.collectReports(java.util.List)", "net.sourceforge.pmd.SourceCodeProcessor.processSource(java.io.Reader,net.sourceforge.pmd.RuleSets,net.sourceforge.pmd.RuleContext)", "net.sourceforge.pmd.processor.PmdThreadFactory.newThread(java.lang.Runnable)", "net.sourceforge.pmd.processor.MultiThreadProcessor.processFiles(net.sourceforge.pmd.RuleSetFactory,java.util.List,net.sourceforge.pmd.RuleContext,java.util.List)", "net.sourceforge.pmd.processor.AbstractPMDProcessor.runAnalysis(net.sourceforge.pmd.processor.PmdRunnable)", "net.sourceforge.pmd.processor.PmdRunnable", "net.sourceforge.pmd.processor.MultiThreadProcessor.runAnalysis(net.sourceforge.pmd.processor.PmdRunnable)", "net.sourceforge.pmd.processor.PmdRunnable.createThread(int,java.lang.Runnable,net.sourceforge.pmd.RuleSetFactory,net.sourceforge.pmd.RuleContext)", "net.sourceforge.pmd.processor.PmdRunnable.addErrorAndShutdown(net.sourceforge.pmd.Report,java.lang.Exception,java.lang.String)"]}, {"title": "[java] SingularField with lambdas as final fields", "body": "Students of mine are using PMD to check their code for style errors, and are getting a false positive on the SingularField checker when the field is used inside a lambda expression. I\u2019ve found https://sourceforge.net/p/pmd/bugs/1307/ online, which appears to be closed and resolved a year ago, but the code below is still problematic.\r\n\r\nI\u2019ve narrowed the problem down to a tiny reproduction. I am using PMD 5.5.1 in class, though I\u2019ve tested the example below with PMD 5.5.2 as well. The code below triggers a SingularField error for `timer1`, but not for `timer2`:\r\n\r\n```java\r\n/** Dummy class. */\r\npublic final class Test {\r\n  private Timer timer1;\r\n  private Timer timer2;\r\n\r\n  /** Dummy constructor. */\r\n  public Timer() {\r\n    this.timer1 = new Timer(0, e -> {\r\n      // do nothing for now\r\n    });\r\n    this.timer2 = new Timer(0, e -> {\r\n      // do nothing for now\r\n    });\r\n  }\r\n\r\n  /** Use a lambda expression to reference timer1 -- triggers SingularField error. */\r\n  private final Runnable play1 = () -> {\r\n    this.timer1.start();\r\n  };\r\n\r\n  /** Use an anonymous class to reference timer2 -- no error. */\r\n  private final Runnable play2 = new Runnable() {\r\n    @Override\r\n    public void run() {\r\n      this.timer2.start();\r\n    }\r\n  };\r\n}\r\n```\r\n\r\nIt seems that PMD isn\u2019t recognizing the lambda syntax properly. I tried being more explicit and saying `Test.this.timer1` to make it really clear that I\u2019m accessing a field, I\u2019ve tried eliminating the `this`. before `timer1`, and I\u2019ve tried changing the finality and visibility of the `play1` lambda; none of them affected the error.", "url": "https://github.com/pmd/pmd/issues/177", "user": "blerner", "labels": ["a:bug"], "created": "2017-01-05 17:53:03", "closed": "2017-01-06 09:50:06", "commits": {"62e33b8e034da74ba3931cac3dbb40c268a5f878": {"commitGHEventType": "closed", "commitUser": "adangel"}, "c9514e563a3ff22e3303f3396e1ff7d857deb8bd": {"commitGHEventType": "referenced", "commitUser": "adangel"}, "f825cdb1db4b50bf86b9274ef794104164638b1e": {"commitGHEventType": "referenced", "commitUser": "adangel"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "62e33b8e034da74ba3931cac3dbb40c268a5f878", "commitGHEventType": "closed", "commitUser": "adangel", "commitParents": ["f21ef8199802775469e1c8fd3647fbc435365217", "af9d78c01a0c910fcb5e1a2e49c4bfd8275c46f2"], "nameRev": "62e33b8e034da74ba3931cac3dbb40c268a5f878 tags/pmd_releases/5.6.0~258", "commitMessage": "Merge branch 'bug-177'\nFixes #177\n", "commitDateTime": "2017-01-06 10:42:21", "authoredDateTime": "2017-01-06 10:42:21", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/SingularFieldRule.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/design/xml/SingularField.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SingularFieldRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.SingularFieldRule.visit(net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "c9514e563a3ff22e3303f3396e1ff7d857deb8bd", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["c794d952b1378080a1f2588db43c42066e7e85a4", "af9d78c01a0c910fcb5e1a2e49c4bfd8275c46f2"], "nameRev": "c9514e563a3ff22e3303f3396e1ff7d857deb8bd tags/pmd_releases/5.5.3~38", "commitMessage": "Merge branch 'bug-177' into pmd/5.5.x\nFixes #177\n", "commitDateTime": "2017-01-06 10:35:45", "authoredDateTime": "2017-01-06 10:35:45", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/SingularFieldRule.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/design/xml/SingularField.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SingularFieldRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.SingularFieldRule.visit(net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f825cdb1db4b50bf86b9274ef794104164638b1e", "commitGHEventType": "referenced", "commitUser": "adangel", "commitParents": ["ba7a7a2f8d1bfde103e6fe0388a1575a4e4d4391", "af9d78c01a0c910fcb5e1a2e49c4bfd8275c46f2"], "nameRev": "f825cdb1db4b50bf86b9274ef794104164638b1e tags/pmd_releases/5.4.4~20", "commitMessage": "Merge branch 'bug-177' into pmd/5.4.x\nFixes #177\n", "commitDateTime": "2017-01-06 10:17:34", "authoredDateTime": "2017-01-06 10:17:34", "commitGitStats": [{"filePath": "pmd-java/src/main/java/net/sourceforge/pmd/lang/java/rule/design/SingularFieldRule.java", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "pmd-java/src/test/resources/net/sourceforge/pmd/lang/java/rule/design/xml/SingularField.xml", "insertions": 36, "deletions": 0, "lines": 36}, {"filePath": "src/site/markdown/overview/changelog.md", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SingularFieldRule.java", "spoonMethods": [{"spoonMethodName": "net.sourceforge.pmd.lang.java.rule.design.SingularFieldRule.visit(net.sourceforge.pmd.lang.java.ast.ASTFieldDeclaration,java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 3, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}]}