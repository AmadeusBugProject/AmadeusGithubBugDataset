{"projectName": "square/leakcanary", "bugLabels": ["type: bug"], "captureTime": "Sat Jul  4 15:47:55 2020", "issues": [{"title": "leak_canary_watcher_auto_install is marked as private", "body": "I started using `leak_canary_watcher_auto_install` so I can manually install LeakCanary, but lint is warning me that it is a private resource.", "url": "https://github.com/square/leakcanary/issues/1863", "user": "eygraber", "labels": ["type: bug"], "created": "2020-06-17 15:41:40", "closed": "2020-06-19 05:59:58", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "NPE: AndroidResourceIdNames.holderField missing", "body": "```\r\nkotlin.KotlinNullPointerException\r\n at e.de.invoke(AndroidResourceIdNames.kt:80)\r\n at e.de.invoke(AndroidResourceIdNames.kt:19)\r\n at e.di.a(GraphContext.kt:23)\r\n at e.dd$a.e(AndroidResourceIdNames.kt:76)\r\n at e.ag.invoke(AndroidObjectInspectors.kt:110)\r\n at e.ag.invoke(AndroidObjectInspectors.kt:39)\r\n at e.fw.a(ObjectReporter.kt:61)\r\n at e.d$q.inspect(AndroidObjectInspectors.kt:52)\r\n at e.do.d(HeapAnalyzer.kt:430)\r\n at e.do.b(HeapAnalyzer.kt:382)\r\n at e.do.a(HeapAnalyzer.kt:163)\r\n at e.do.a(HeapAnalyzer.kt:144)\r\n at e.do.a(HeapAnalyzer.kt:96)\r\n at leakcanary.internal.HeapAnalyzerService.a(HeapAnalyzerService.kt:77)\r\n at leakcanary.internal.HeapAnalyzerService.q(HeapAnalyzerService.kt:58)\r\n at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:68)\r\n at android.os.Handler.dispatchMessage(Handler.java:105)\r\n at android.os.Looper.loop(Looper.java:176)\r\n at android.os.HandlerThread.run(HandlerThread.java:65)\r\n\r\nBuild.VERSION.SDK_INT: 26\r\nBuild.MANUFACTURER: Xiaomi\r\nLeakCanary version: 2.3\r\nAnalysis duration: 61221 ms\r\nHeap dump file path: /data/user/0/com.**/files/leakcanary/2020-05-22_12-39-41_565.hprof\r\nHeap dump timestamp: 1590122448396\r\n```", "url": "https://github.com/square/leakcanary/issues/1841", "user": "ZhangQixiangChina", "labels": ["type: bug"], "created": "2020-05-22 05:08:26", "closed": "2020-06-07 21:11:37", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "LeakScreen has spinner when only one leak", "body": "When there's only one instance of a leak, the top entry on the LeakScreen is clickable and the time shift around with nothing else happening. We should probably just make that not clickable.\r\n\r\nThanks @jrodbx for asking what this button was about :D", "url": "https://github.com/square/leakcanary/issues/1831", "user": "pyricau", "labels": ["good first issue", "status: help wanted", "type: bug"], "created": "2020-05-18 18:39:33", "closed": "2020-05-29 21:01:06", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "PackageManager.getLaunchIntentForPackage() returns intent for LeakLauncherActivity", "body": "### Description\r\n\r\nPackageManager.getLaunchIntentForPackage() returns an intent for LeakLauncherActivity\r\n\r\n### Steps to Reproduce\r\n\r\ncall PackageManager.getLaunchIntentForPackage()\r\n\r\nActivity declaration in AndroidManifest:\r\n\r\n```\r\n<activity\r\n    android:name=\".LauncherActivity\"\r\n    android:label=\"@string/app_name\"\r\n    >\r\n    <intent-filter>\r\n        <action android:name=\"android.intent.action.MAIN\"/>\r\n        <category android:name=\"android.intent.category.LAUNCHER\"/>\r\n    </intent-filter>\r\n</activity>\r\n```\r\n\r\n**Expected behavior:**\r\n\r\nShould return an Intent for the same Activity as if LeakCanary was not included\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.2\r\n* Android OS version: 10\r\n* Gradle version: 6.2.2\r\n\r\n### Additional Information\r\n\r\nN/A", "url": "https://github.com/square/leakcanary/issues/1824", "user": "marcardar", "labels": ["status: help wanted", "type: bug"], "created": "2020-05-07 05:10:37", "closed": "2020-05-19 21:11:27", "commits": {"00caf4fcf56bee05e1d4c7e1d7cf73aa29fbdd5e": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "00caf4fcf56bee05e1d4c7e1d7cf73aa29fbdd5e", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["cd353f015f1d2338ddea912a8656b0cf7f35a82d"], "nameRev": "00caf4fcf56bee05e1d4c7e1d7cf73aa29fbdd5e tags/v2.4~16^2", "commitMessage": "Recipe for PackageManager.getLaunchIntentForPackage()\n\nFixes #1824\n", "commitDateTime": "2020-05-19 12:03:18", "authoredDateTime": "2020-05-19 12:03:18", "commitGitStats": [{"filePath": "docs/recipes.md", "insertions": 6, "deletions": 0, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00caf4fcf56bee05e1d4c7e1d7cf73aa29fbdd5e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Heap analysis failed for Obfuscated App", "body": "### Description\r\n\r\nI ran the app from android studio setting up [LeakCanary for obfuscated apps](https://square.github.io/leakcanary/recipes/#using-leakcanary-with-obfuscated-apps) and it failed during heap analysis. I turned off obfuscation in `progaurd-rules.pro` and it worked.\r\n```\r\nm.d\r\nat shark.c$o$a.a()\r\nat shark.c$o$a.a()\r\nat shark.q0.a()\r\nat shark.c$o.a()\r\nat shark.o.a()\r\nat shark.o.a()\r\nat shark.o.a()\r\nat shark.o.a()\r\nat shark.o.a()\r\nat leakcanary.internal.HeapAnalyzerService.a()\r\nat leakcanary.internal.HeapAnalyzerService.a()\r\nat leakcanary.internal.i.onHandleIntent()\r\nat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\nat android.os.Handler.dispatchMessage(Handler.java:102)\r\nat android.os.Looper.loop(Looper.java:148)\r\nat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\nBuild.VERSION.SDK_INT: 23\r\nBuild.MANUFACTURER: LGE\r\nLeakCanary version: 2.2\r\nAnalysis duration: 75543 ms\r\nHeap dump file path: /storage/emulated/0/Download/leakcanary-com.colevit.furmate/2020-04-25_23-53-20_181.hprof\r\nHeap dump timestamp: 1587839082676\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\nhprof:\r\n[2020-04-25_23-53-20_181.hprof.zip](https://github.com/square/leakcanary/files/4533821/2020-04-25_23-53-20_181.hprof.zip)\r\n\r\n**Expected behavior:** It should analyse the heap and show leak trace with de-obfuscated names.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.2\r\n* Android OS version: 23\r\n* Gradle version: 5.6.4\r\n* Android Gradle plugin version: 3.5.3\r\n\r\n### Additional Information\r\n\r\nThis is tested on a release build though I also tested on debug build as well with code obfuscation and it failed.", "url": "https://github.com/square/leakcanary/issues/1807", "user": "Guneetgstar", "labels": ["type: bug"], "created": "2020-04-25 20:22:00", "closed": "2020-05-05 21:34:11", "commits": {}, "ttf": 10.000277777777777, "commitsDetails": []}, {"title": "i debugCompile 2.2 successful,but i can\u201ct see anythings on the leaks app", "body": "### Description\r\n\r\ni am so sorry, i use this function first time . maybe i do not right. i use dbugCompile 2.2, build tools is 25.0.2 and support.appcompat.v7 25.3.1,i run my app successful and i can use leaks app, but i can\u2018t see any message, i  am sure my app have leak, I don't know how to work out this. i can't find any answer on line.\r\n\r\n[Description of the issue]\r\n\r\nminify if false , jdk 1.8\r\n\r\n### Version Information\r\n\r\n* LeakCanary version:\r\nLeakCanary 2.2\r\n* Android OS version:\r\n andorid 6.0\r\n* Gradle version:\r\ngradle 2.3.3\r\nbuild tools version25.0.2\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1803", "user": "KidAndroid", "labels": ["type: bug"], "created": "2020-04-23 10:33:27", "closed": "2020-04-30 23:20:25", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "LeakCanary can't dump heap on Android R devices when targetSdkVersion <= 28", "body": "### Description\r\n\r\nWhen running an app which targets SDK 28 (or probably anything lower), LeakCanary fails to dump the heap when executing on Android R device (currently tested against most recently available DP2 version)\r\n\r\n### Steps to Reproduce\r\n\r\n1. install app from https://github.com/CDRussell/LeakCanaryHeapDumpProblem\r\n1. run app on Android R device, and rotate the screen a few times to deliberately trigger a leak detection\r\n1. note in `logcat` that `LeakCanary` fails due to write permissions issues \r\n\r\n**Expected behavior:** [What you expect to happen]\r\n`LeakCanary` shouldn't have permissions issues.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.2\r\n* Android OS version: Android R (dp2)\r\n* Gradle version: `gradle-6.1.1` / `com.android.tools.build:gradle:4.0.0-beta04`\r\n\r\n### Additional Information\r\n\r\n- Note, only happens if targetSdk is 28 or lower. targetSdk 29 works fine\r\n- If i manually grant the `WRITE_EXTERNAL_STORAGE` permission at runtime, it works again\r\n\r\n\r\n### Stack Trace\r\n```2020-04-22 21:16:26.648 6894-6936/com.duckduckgo.myapplication D/LeakCanary: Check for retained objects found 2 objects, dumping the heap\r\n2020-04-22 21:16:27.722 6894-6936/com.duckduckgo.myapplication D/LeakCanary: Could not dump heap\r\n    java.lang.RuntimeException: Couldn't dump heap; open(\"/storage/emulated/0/Download/leakcanary-com.duckduckgo.myapplication/2020-04-22_21-16-26_695.hprof\") failed: Operation not permitted\r\n        at dalvik.system.VMDebug.dumpHprofData(Native Method)\r\n        at dalvik.system.VMDebug.dumpHprofData(VMDebug.java:384)\r\n        at dalvik.system.VMDebug.dumpHprofData(VMDebug.java:361)\r\n        at android.os.Debug.dumpHprofData(Debug.java:2016)\r\n        at leakcanary.internal.AndroidHeapDumper.dumpHeap(AndroidHeapDumper.kt:68)\r\n        at leakcanary.internal.HeapDumpTrigger.dumpHeap(HeapDumpTrigger.kt:156)\r\n        at leakcanary.internal.HeapDumpTrigger.checkRetainedObjects(HeapDumpTrigger.kt:146)\r\n        at leakcanary.internal.HeapDumpTrigger.access$checkRetainedObjects(HeapDumpTrigger.kt:28)\r\n        at leakcanary.internal.HeapDumpTrigger$scheduleRetainedObjectCheck$3.run(HeapDumpTrigger.kt:293)\r\n        at android.os.Handler.handleCallback(Handler.java:907)\r\n        at android.os.Handler.dispatchMessage(Handler.java:99)\r\n        at android.os.Looper.loop(Looper.java:216)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n2020-04-22 21:16:27.723 6894-6936/com.duckduckgo.myapplication D/LeakCanary: Failed to dump heap, will retry in 5000 ms```\r\n", "url": "https://github.com/square/leakcanary/issues/1801", "user": "CDRussell", "labels": ["status: help wanted", "type: bug"], "created": "2020-04-22 20:20:00", "closed": "2020-06-04 22:14:54", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "Heap analysis failed: OutOfMemoryError", "body": "### Description\r\n\r\n```\r\n====================================\r\n    STACKTRACE\r\n    \r\n    java.lang.OutOfMemoryError: Failed to allocate a 62822108 byte allocation with 16777216 free bytes and 27MB until OOM\r\n        at okio.Buffer.readByteArray(Buffer.kt:1443)\r\n        at okio.RealBufferedSource.readByteArray(RealBufferedSource.kt:242)\r\n        at shark.HprofReader.readByteArray(HprofReader.kt:861)\r\n        at shark.HprofReader.readPrimitiveArrayDumpRecord(HprofReader.kt:699)\r\n        at shark.HprofHeapGraph$readPrimitiveArrayDumpRecord$1.invoke(HprofHeapGraph.kt:158)\r\n        at shark.HprofHeapGraph$readPrimitiveArrayDumpRecord$1.invoke(HprofHeapGraph.kt:38)\r\n        at shark.HprofHeapGraph.readObjectRecord(HprofHeapGraph.kt:191)\r\n        at shark.HprofHeapGraph.readPrimitiveArrayDumpRecord$shark_graph(HprofHeapGraph.kt:157)\r\n        at shark.HeapObject$HeapPrimitiveArray.readRecord(HeapObject.kt:575)\r\n        at shark.HeapObject$HeapPrimitiveArray.readByteSize(HeapObject.kt:539)\r\n        at shark.HeapAnalyzer$computeRetainedSizes$4.invoke(HeapAnalyzer.kt:314)\r\n        at shark.HeapAnalyzer$computeRetainedSizes$4.invoke(HeapAnalyzer.kt:55)\r\n        at shark.internal.hppc.LongLongScatterMap.forEach(LongLongScatterMap.kt:189)\r\n        at shark.HeapAnalyzer.computeRetainedSizes(HeapAnalyzer.kt:306)\r\n        at shark.HeapAnalyzer.buildLeakTraces(HeapAnalyzer.kt:350)\r\n        at shark.HeapAnalyzer.findLeaks(HeapAnalyzer.kt:163)\r\n        at shark.HeapAnalyzer.analyzeGraph(HeapAnalyzer.kt:144)\r\n        at shark.HeapAnalyzer.analyze(HeapAnalyzer.kt:96)\r\n        at leakcanary.internal.HeapAnalyzerService.analyzeHeap(HeapAnalyzerService.kt:77)\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:58)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:67)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:154)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n    ====================================\r\n```\r\n\r\n### Version Information\r\n\r\n```\r\n    Build.VERSION.SDK_INT: 24\r\n    Build.MANUFACTURER: motorola\r\n    LeakCanary version: 2.2\r\n    Analysis duration: 16243 ms\r\n    Gradle Version: 5.6.4\r\n    Android OS version: 7.0\r\n```\r\n", "url": "https://github.com/square/leakcanary/issues/1798", "user": "antoniomerlin", "labels": ["status: help wanted", "type: bug"], "created": "2020-04-17 08:55:50", "closed": "2020-06-09 19:34:26", "commits": {}, "ttf": 53.000277777777775, "commitsDetails": []}, {"title": "Crash on upgrade 2.0 \u2192 2.2", "body": "### Description\r\nGot crash when open LeakCanary activity after upgrade from 2.0 to 2.2.\r\n\r\n```\r\n    java.lang.IllegalArgumentException: fromIndex(0) > toIndex(-1)\r\n        at java.util.ArrayList.subListRangeCheck(ArrayList.java:1018)\r\n        at java.util.ArrayList.subList(ArrayList.java:1008)\r\n        at shark.LeakTrace.fromV20$shark(LeakTrace.kt:160)\r\n        at shark.ApplicationLeak.leakTraceFromV20$shark(HeapAnalysis.kt:278)\r\n        at shark.HeapAnalysisSuccess$Companion.upgradeFrom20Deserialized(HeapAnalysis.kt:134)\r\n        at leakcanary.internal.activity.db.LeaksDbHelper$onUpgrade$allAnalysis$1$2.invoke(LeaksDbHelper.kt:42)\r\n        at leakcanary.internal.activity.db.LeaksDbHelper$onUpgrade$allAnalysis$1$2.invoke(LeaksDbHelper.kt:11)\r\n        at kotlin.sequences.TransformingSequence$iterator$1.next(Sequences.kt:172)\r\n        at kotlin.sequences.SequencesKt___SequencesKt.toCollection(_Sequences.kt:716)\r\n        at kotlin.sequences.SequencesKt___SequencesKt.toMutableList(_Sequences.kt:746)\r\n        at kotlin.sequences.SequencesKt___SequencesKt.toList(_Sequences.kt:737)\r\n        at leakcanary.internal.activity.db.LeaksDbHelper.onUpgrade(LeaksDbHelper.kt:45)\r\n        at android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked(SQLiteOpenHelper.java:417)\r\n        at android.database.sqlite.SQLiteOpenHelper.getWritableDatabase(SQLiteOpenHelper.java:317)\r\n        at leakcanary.internal.activity.db.Db$execute$1.invoke(Db.kt:31)\r\n        at leakcanary.internal.activity.db.Db$execute$1.invoke(Db.kt:9)\r\n        at leakcanary.internal.activity.db.Io$execute$2.invoke(Io.kt:50)\r\n        at leakcanary.internal.activity.db.Io$execute$2.run(Io.kt:10)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)\r\n        at java.lang.Thread.run(Thread.java:919)\r\n```\r\n\r\n### Steps to Reproduce\r\n1. Get dump with 0 leaks. E.g. when refs was collected\r\n2. Upgrade to app with LeakCanary 2.2\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.2\r\n* Android OS version: Android 10\r\n* Gradle version: 6.3\r\n\r\n### Additional Information\r\nI verified in debugger that elements have zero elements in bad report. \r\nI also checked that db have 0 in `heap_analysis` \u2192 `leak_group_count`\r\n", "url": "https://github.com/square/leakcanary/issues/1797", "user": "ckesc", "labels": ["status: help wanted", "type: bug"], "created": "2020-04-16 16:02:55", "closed": "2020-04-23 22:32:50", "commits": {}, "ttf": 7.000277777777778, "commitsDetails": []}, {"title": "LeakCanary not install and crash if i try to enable it", "body": "### Description\r\n\r\nI added LeakCanary to my project through `debugImplementation 'com.squareup.leakcanary: leakcanary-android: 2.2'`, however I do not have a LeakCanary application and the Logcat also empty. If I try to execute `LeakCanary.showLeakDisplayActivityLauncherIcon(true)` then I get a crash `lateinit property application has not been initialized`\r\n\r\n### Steps to Reproduce\r\n\r\nI don\u2019t know exactly how to repeat this because my other project that used same LeakCanary version is works great\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\nLeaks detect\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.2\r\n* Android OS version: It doesn\u2019t matter, i think, I tested on 7 and 9\r\n* Gradle version: 3.6.2\r\n\r\n### Additional Information\r\n\r\nmy manifest and SubApplication\r\n\r\n```\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    package=\"com.app.android\">\r\n\r\n    <uses-permission android:name=\"android.permission.INTERNET\" />\r\n\r\n    <application\r\n        android:name=\".stuff.SubApplication\"\r\n        android:allowBackup=\"true\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/MaterialAppTheme.NoActionBar\"\r\n        tools:node=\"replace\"\r\n        >\r\n\r\n        <activity\r\n            android:name=\"com.app.android.ui.activities.MainActivity\"\r\n            android:label=\"@string/app_name\"\r\n            android:theme=\"@style/MaterialAppTheme.NoActionBar\" >\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n        </activity>\r\n\r\n        <meta-data\r\n            android:name=\"preloaded_fonts\"\r\n            android:resource=\"@array/preloaded_fonts\" />\r\n    </application>\r\n\r\n</manifest>\r\n```\r\n\r\n```\r\nclass SubApplication: Application() {\r\n\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n    }\r\n}\r\n```\r\n", "url": "https://github.com/square/leakcanary/issues/1796", "user": "P1NG2WIN", "labels": ["type: bug"], "created": "2020-04-15 20:40:03", "closed": "2020-04-15 21:10:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to get analysis: LeakCanary.Config.dumpHeap is false", "body": "### Description\r\n\r\nI am unable to get an analysis after installing Leak Canary in my app.\r\nI get these two lines in my Log Cat:\r\n\r\n\"Scheduling check for retained objects because found new object retained\"\r\n\"Ignoring check for retained objects scheduled because found new object retained: LeakCanary.Config.dumpHeap is false\"\r\n\r\nSo no dump is performed and no analysis carried out.\r\n\r\nUsing debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2' in Gradle\r\nGradle 3.5.0\r\ncompileSdkVersion 28\r\ntargetSdkVersion 28\r\nI am testing on a real device running Android 9\r\n\r\nJUnit is not on the build path as this was noted to be a problem in previous releases of Canary Leak.", "url": "https://github.com/square/leakcanary/issues/1788", "user": "jordantrain", "labels": ["type: bug"], "created": "2020-03-27 17:51:41", "closed": "2020-06-04 22:16:58", "commits": {}, "ttf": 69.00027777777778, "commitsDetails": []}, {"title": "lateinit property closeable has not been initialized", "body": "### Description\r\n\r\nJust got this crash with leakcanary when running the monkey runner:\r\n```\r\n02-29 02:33:48.014  5957  5957 D LeakCanary: Watching instance of androidx.lifecycle.ReportFragment (androidx.lifecycle.ReportFragment received Fragment#onDestroy() callback) with key 56130f06-4d14-49e8-98ce-44f1980746df\r\n02-29 02:33:48.019  5957  5957 D LeakCanary: Watching instance of leakcanary.internal.activity.LeakActivity (leakcanary.internal.activity.LeakActivity received Activity#onDestroy() callback) with key 01432aa7-5d6e-4f89-b511-2c30d656aa07\r\n02-29 02:33:48.027  5957  5985 D OpenGLRenderer: endAllActiveAnimators on 0x9785ed80 (StateListDrawable) with handle 0x85d1c580\r\n02-29 02:33:48.027  5957  5985 D OpenGLRenderer: endAllActiveAnimators on 0x9785d880 (StateListDrawable) with handle 0x853095f0\r\n02-29 02:33:48.027  5957  5985 D OpenGLRenderer: endAllActiveAnimators on 0x86e74a00 (LinearLayout) with handle 0x853628b0\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: FATAL EXCEPTION: pool-2-thread-1\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: Process: org.ligi.passandroid, PID: 5957\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: kotlin.UninitializedPropertyAccessException: lateinit property closeable has not been initialized\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: \tat leakcanary.internal.activity.screen.HprofExplorerScreen$createView$1$1$onViewDetachedFromWindow$1.invoke(HprofExplorerScreen.kt:62)\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: \tat leakcanary.internal.activity.screen.HprofExplorerScreen$createView$1$1$onViewDetachedFromWindow$1.invoke(HprofExplorerScreen.kt:56)\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: \tat leakcanary.internal.activity.db.IoKt$sam$java_lang_Runnable$0.run(Unknown Source:2)\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n02-29 02:33:48.064  5957  6013 E AndroidRuntime: \tat java.lang.Thread.run(Thread.java:764)\r\n```\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.2\r\n* Android OS version: 26", "url": "https://github.com/square/leakcanary/issues/1769", "user": "ligi", "labels": ["type: bug"], "created": "2020-02-29 01:38:48", "closed": "2020-03-19 14:44:28", "commits": {"4c5a91cca8010e5b8ac46d5a795c9d931e0faff7": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "118186ceb7327a751ffe9a1f68d59c337386c55e": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "4c5a91cca8010e5b8ac46d5a795c9d931e0faff7", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "118186ceb7327a751ffe9a1f68d59c337386c55e", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["dddba06db081300aa2ccd952d16b71f44e3e9a56"], "nameRev": "118186ceb7327a751ffe9a1f68d59c337386c55e tags/v2.3~28", "commitMessage": "Fix lateinit crash (#1779)\n\nApp would crash if the screen was closed before the content of the screen was loaded, due to a lateinit variable not being init yet. Kotlin does not support references to local variable (e.g. to check if it's init) so I'm changing to a nullable ref instead.\r\n\r\nFixes #1769", "commitDateTime": "2020-03-19 07:44:27", "authoredDateTime": "2020-03-19 07:44:27", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/HprofExplorerScreen.kt", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "java.lang.ArrayIndexOutOfBoundsException", "body": "### Description\r\n\r\nwas just letting the monkey runner running on my app and got this leakcanary crash;\r\n\r\n```\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: Process: org.ligi.passandroid, PID: 3103\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: java.lang.ArrayIndexOutOfBoundsException: length=5; index=-1\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat java.util.ArrayList.remove(ArrayList.java:506)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat leakcanary.internal.navigation.NavigatingActivity.goBack(NavigatingActivity.kt:128)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat leakcanary.internal.navigation.ViewsKt.goBack(Views.kt:30)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1$1$1$1.invoke(HeapDumpScreen.kt:68)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1$1$1$1.invoke(HeapDumpScreen.kt:30)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat leakcanary.internal.activity.db.Db$execute$1$1.invoke(Db.kt:36)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat leakcanary.internal.activity.db.Db$execute$1$1.invoke(Db.kt:9)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat leakcanary.internal.activity.db.Io$execute$2$1.invoke(Io.kt:55)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat leakcanary.internal.activity.db.Io$execute$2$1.run(Io.kt:10)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat android.os.Handler.handleCallback(Handler.java:789)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat android.os.Handler.dispatchMessage(Handler.java:98)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat android.os.Looper.loop(Looper.java:164)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat android.app.ActivityThread.main(ActivityThread.java:6541)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat java.lang.reflect.Method.invoke(Native Method)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:240)\r\n02-29 02:19:14.858  3103  3103 E AndroidRuntime: \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:767)\r\n\r\n```\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.2\r\n* Android OS version: 26\r\n", "url": "https://github.com/square/leakcanary/issues/1768", "user": "ligi", "labels": ["type: bug"], "created": "2020-02-29 01:24:21", "closed": "2020-03-19 20:52:09", "commits": {"30b1ba1c70fb0333b85a1ef8a8aec577435c3d49": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "f9efcb1be96cdef55768bc40b020d23f8921c0e4": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "30b1ba1c70fb0333b85a1ef8a8aec577435c3d49", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["118186ceb7327a751ffe9a1f68d59c337386c55e"], "nameRev": "30b1ba1c70fb0333b85a1ef8a8aec577435c3d49 remotes/origin/py/fix_race", "commitMessage": "Fix crash when going back while already going back\n\nThe navigation utilities we have in place normally take care of canceling scheduled work (IO and back on main thread as well) when we leave a screen. Unfortunately we were previously waiting for the view animation to be done (view detached). Instead we now cancel the work as soon as we decide to move.\n\nFixes #1768\n", "commitDateTime": "2020-03-19 11:16:28", "authoredDateTime": "2020-03-19 11:16:28", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/Db.kt", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/Io.kt", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/navigation/NavigatingActivity.kt", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/navigation/Views.kt", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_ids.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f9efcb1be96cdef55768bc40b020d23f8921c0e4", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["def1c0a718caaa6021c442e258ebbdf42264bd93"], "nameRev": "f9efcb1be96cdef55768bc40b020d23f8921c0e4 tags/v2.3~26", "commitMessage": "Fix crash when going back while already going back (#1780)\n\nThe navigation utilities we have in place normally take care of canceling scheduled work (IO and back on main thread as well) when we leave a screen. Unfortunately we were previously waiting for the view animation to be done (view detached). Instead we now cancel the work as soon as we decide to move.\r\n\r\nFixes #1768", "commitDateTime": "2020-03-19 13:52:08", "authoredDateTime": "2020-03-19 13:52:08", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/Db.kt", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/Io.kt", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/navigation/NavigatingActivity.kt", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/navigation/Views.kt", "insertions": 18, "deletions": 0, "lines": 18}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_ids.xml", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["30b1ba1c70fb0333b85a1ef8a8aec577435c3d49"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 27, "deletions": 11, "lines": 38, "gitFilesChange": 4}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/internal/navigation/Views.kt", "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/Io.kt", "leakcanary-android-core/src/main/java/leakcanary/internal/navigation/NavigatingActivity.kt", "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/Db.kt"]}, {"title": "To solve Unable to get provider leakcanary.internal.LeakCanaryFileProvider ", "body": "this Issue https://github.com/square/leakcanary/issues/1597\r\nbecause the project include  `apply plugin: 'android-aspectjx'`\r\nremove it \uff0cit's work ok\r\nor use\r\n`apply plugin: 'android-aspectjx`\r\n`aspectjx {\r\n    exclude 'com.squareup'\r\n    exclude 'leakcanary'\r\n}`", "url": "https://github.com/square/leakcanary/issues/1767", "user": "smallgirl", "labels": ["type: bug"], "created": "2020-02-28 10:40:45", "closed": "2020-03-19 19:36:03", "commits": {}, "ttf": 20.00027777777778, "commitsDetails": []}, {"title": "Deobfuscation plugin fails to create tasks on Android Gradle Plugin 3.6", "body": "### Description\r\n\r\n```\r\nCould not create task ':app:leakCanaryCopyObfuscationMappingForAlpha'.\r\n> \r\n          LeakCanary deobfuscation plugin couldn't find any variant with minification enabled.\r\n          Please make sure that there is at least 1 minified variant in your project. \r\n```\r\n\r\nhttps://github.com/square/leakcanary/blob/25a10fcd9f405235de63bd791ea4ae4eb5453924/leakcanary-deobfuscation-gradle-plugin/src/main/java/com/squareup/leakcanary/deobfuscation/LeakCanaryLeakDeobfuscationPlugin.kt#L76\r\n\r\n\r\nIt looks like the R8 and Proguard tasks got renamed on AGP 3.6 to `minify{variant}WithR8`\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n1. Update to the latest stable version of Android Gradle Plugin 3.6\r\n2. Observe the `leakCanaryCopyObfuscationMappingFor{variant}` task fails to get created. \r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.1\r\n* Android OS version: 11\r\n* Gradle version: 6.2", "url": "https://github.com/square/leakcanary/issues/1761", "user": "tevjef", "labels": ["type: bug"], "created": "2020-02-24 19:41:46", "closed": "2020-03-18 21:16:01", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "Crash \" java.lang.RuntimeException: Parcelable encountered ClassNotFoundException reading a Serializable object (name = leakcanary.internal.activity.screen.GroupListScreen)\"", "body": "Can't say why it's happening or when because I got this crash via automatic crash report system.\r\n\r\n```\r\njava.lang.RuntimeException: Unable to start activity ComponentInfo{com.github.adamantcheese.chan.dev/leakcanary.internal.activity.LeakActivity}: java.lang.RuntimeException: Parcelable encountered ClassNotFoundException reading a Serializable object (name = leakcanary.internal.activity.screen.GroupListScreen)\r\n\tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3270)\r\n\tat android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3409)\r\n\tat android.app.servertransaction.LaunchActivityItem.execute(LaunchActivityItem.java:83)\r\n\tat android.app.servertransaction.TransactionExecutor.executeCallbacks(TransactionExecutor.java:135)\r\n\tat android.app.servertransaction.TransactionExecutor.execute(TransactionExecutor.java:95)\r\n\tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:2016)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:107)\r\n\tat android.os.Looper.loop(Looper.java:214)\r\n\tat android.app.ActivityThread.main(ActivityThread.java:7356)\r\n\tat java.lang.reflect.Method.invoke(Native Method)\r\n\tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:494)\r\n\tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)\r\nCaused by: java.lang.RuntimeException: Parcelable encountered ClassNotFoundException reading a Serializable object (name = leakcanary.internal.activity.screen.GroupListScreen)\r\n\tat android.os.Parcel.readSerializable(Parcel.java:3140)\r\n\tat android.os.Parcel.readValue(Parcel.java:2917)\r\n\tat android.os.Parcel.readListInternal(Parcel.java:3307)\r\n\tat android.os.Parcel.readArrayList(Parcel.java:2450)\r\n\tat android.os.Parcel.readValue(Parcel.java:2887)\r\n\tat android.os.Parcel.readArrayMapInternal(Parcel.java:3244)\r\n\tat android.os.BaseBundle.initializeFromParcelLocked(BaseBundle.java:292)\r\n\tat android.os.BaseBundle.unparcel(BaseBundle.java:236)\r\n\tat android.os.BaseBundle.containsKey(BaseBundle.java:516)\r\n\tat android.content.Intent.hasExtra(Intent.java:7710)\r\n\tat leakcanary.internal.navigation.NavigatingActivity.installNavigation(NavigatingActivity.kt:36)\r\n\tat leakcanary.internal.activity.LeakActivity.onCreate(LeakActivity.kt:57)\r\n\tat android.app.Activity.performCreate(Activity.java:7824)\r\n\tat android.app.Activity.performCreate(Activity.java:7813)\r\n\tat android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1306)\r\n\tat android.app.ActivityThread.performLaunchActivity(ActivityThread.java:3245)\r\n\t... 11 more\r\nCaused by: java.lang.ClassNotFoundException: leakcanary.internal.activity.screen.GroupListScreen\r\n\tat java.lang.Class.classForName(Native Method)\r\n\tat java.lang.Class.forName(Class.java:454)\r\n\tat android.os.Parcel$2.resolveClass(Parcel.java:3126)\r\n\tat java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:1703)\r\n\tat java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:1594)\r\n\tat java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:1872)\r\n\tat java.io.ObjectInputStream.readObject0(ObjectInputStream.java:1412)\r\n\tat java.io.ObjectInputStream.readObject(ObjectInputStream.java:427)\r\n\tat android.os.Parcel.readSerializable(Parcel.java:3134)\r\n\t... 26 more\r\nCaused by: java.lang.ClassNotFoundException: Didn't find class \"leakcanary.internal.activity.screen.GroupListScreen\" on path: DexPathList[[zip file \"/data/app/com.github.adamantcheese.chan.dev-7xTun2z9ZpPWQB7QpGoX_A==/base.apk\"],nativeLibraryDirectories=[/data/app/com.github.adamantcheese.chan.dev-7xTun2z9ZpPWQB7QpGoX_A==/lib/arm64, /data/app/com.github.adamantcheese.chan.dev-7xTun2z9ZpPWQB7QpGoX_A==/base.apk!/lib/arm64-v8a, /system/lib64, /vendor/lib64, /system/product/lib64]]\r\n\tat dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:196)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:379)\r\n\tat java.lang.ClassLoader.loadClass(ClassLoader.java:312)\r\n\t... 35 more\r\n```\r\n\r\nOS info: Android 10, sdk version: 29\r\nGradle version: com.android.tools.build:gradle:3.5.3\r\nLeakCanary version: com.squareup.leakcanary:leakcanary-android:2.2", "url": "https://github.com/square/leakcanary/issues/1755", "user": "K1rakishou", "labels": ["type: bug"], "created": "2020-02-19 17:44:59", "closed": "2020-03-19 20:24:32", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "Heap Dumps screen: \"Dump now\" and \"delete all\" not refreshing UI", "body": "### Description\r\n\r\nWe need to refresh the UI after heap dumps have been deleted or a new analysis is done.", "url": "https://github.com/square/leakcanary/issues/1742", "user": "pyricau", "labels": ["good first issue", "status: help wanted", "type: bug"], "created": "2020-02-05 18:49:20", "closed": "2020-03-19 22:36:14", "commits": {"279d4a062547b7553e70d4ad2399a4e08c291650": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "40c8d5cc33e81309a95ed05812c5cd605442b459": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "279d4a062547b7553e70d4ad2399a4e08c291650", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "40c8d5cc33e81309a95ed05812c5cd605442b459", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["f9efcb1be96cdef55768bc40b020d23f8921c0e4"], "nameRev": "40c8d5cc33e81309a95ed05812c5cd605442b459 tags/v2.3~25", "commitMessage": "Propagate heap analysis updates to the UI (#1781)\n\nThe list of leaks and the list of heap dumps were previously not updating when a heap dump analysis was added or remove. This makes them update immediately by reloading those screens.\r\n\r\nFixes #1742", "commitDateTime": "2020-03-19 15:36:13", "authoredDateTime": "2020-03-19 15:36:13", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/HeapAnalysisTable.kt", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/LeakTraceTable.kt", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/HeapDumpsScreen.kt", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/LeaksScreen.kt", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/navigation/NavigatingActivity.kt", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "App crash because of hprof file is 0 bytes", "body": "### Description\r\n\r\nWe have an app that implement your sdk. in some cases the app crash with a message that the prof file is 0 bytes.\r\n\r\n### Steps to Reproduce\r\n\r\nWe don't have steps to reproduce\r\n\r\n**Expected behavior:** [What you expect to happen]\r\nThe app not to crash in this case\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.1\r\n* Android OS version: 6\r\n* Gradle version: \r\n\r\n### Additional Information\r\n\r\nThis is the stack trace:\r\n// CRASH: com.taboola.testingsample (pid 4030)\r\n// Short Msg: java.lang.IllegalArgumentException\r\n// Long Msg: java.lang.IllegalArgumentException: Hprof file is 0 byte length\r\n// Build Label: Android/sdk_google_phone_x86/generic_x86:6.0/MASTER/5525988:userdebug/test-keys\r\n// Build Changelist: 5525988\r\n// Build Time: 1556821263000\r\n// java.lang.IllegalArgumentException: Hprof file is 0 byte length\r\n// \tat shark.Hprof$Companion.open(Hprof.kt:70)\r\n// \tat leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1.invoke(HprofExplorerScreen.kt:68)\r\n// \tat leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1.invoke(HprofExplorerScreen.kt:47)\r\n// \tat leakcanary.internal.activity.db.Io$execute$2.invoke(Io.kt:50)\r\n// \tat leakcanary.internal.activity.db.Io$execute$2.run(Io.kt:10)\r\n// \tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\r\n// \tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\r\n// \tat java.lang.Thread.run(Thread.java:818)", "url": "https://github.com/square/leakcanary/issues/1738", "user": "orenktaboola", "labels": ["type: bug"], "created": "2020-02-04 06:55:36", "closed": "2020-02-05 18:50:44", "commits": {"4962dca44e0d01f015854c2431bce0d19898f305": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "775fa3fad0cd235b682adde6cb6d99d2861e9110": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "1fdc316af09017db69261cae3e995268da339ce0": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "7859ca0a7bd42bdd4d6fbc7aa8a1de81b42230eb": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4962dca44e0d01f015854c2431bce0d19898f305", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "775fa3fad0cd235b682adde6cb6d99d2861e9110", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1fdc316af09017db69261cae3e995268da339ce0", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7859ca0a7bd42bdd4d6fbc7aa8a1de81b42230eb", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["7ee940f0f4eb1dbbee383351cad6637044b46006"], "nameRev": "7859ca0a7bd42bdd4d6fbc7aa8a1de81b42230eb tags/v2.2~1", "commitMessage": "Fix crash when heap dump file deleted (#1740)\n\nFixes #1738", "commitDateTime": "2020-02-05 10:50:43", "authoredDateTime": "2020-02-05 10:50:43", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/HeapDumpScreen.kt", "insertions": 10, "deletions": 6, "lines": 16}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "EOFException: Leak analysis failed", "body": "\r\n[2020-01-31_15-24-10_199.zip](https://github.com/square/leakcanary/files/4140175/2020-01-31_15-24-10_199.zip)\r\n\r\n### Description\r\n\r\nLeak analysis fails with an EOFException.\r\nStacktrace : \r\n\r\n```\r\njava.io.EOFException\r\n\tat okio.RealBufferedSource.skip(RealBufferedSource.kt:325)\r\n\tat shark.HprofReader.skip(HprofReader.kt:906)\r\n\tat shark.HprofReader.readPrimitiveArraySkipContentRecord(HprofReader.kt:723)\r\n\tat shark.HprofReader.readHprofRecords(HprofReader.kt:475)\r\n\tat shark.internal.HprofInMemoryIndex$Companion.createReadingHprof(HprofInMemoryIndex.kt:370)\r\n\tat shark.HprofHeapGraph$Companion.indexHprof(HprofHeapGraph.kt:245)\r\n\tat shark.HprofHeapGraph$Companion.indexHprof$default(HprofHeapGraph.kt:217)\r\n\tat shark.HeapAnalyzer.analyze(HeapAnalyzer.kt:93)\r\n\tat leakcanary.internal.HeapAnalyzerService.analyzeHeap(HeapAnalyzerService.kt:77)\r\n\tat leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:58)\r\n\tat leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:145)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\nBuild.VERSION.SDK_INT: 21\r\nBuild.MANUFACTURER: samsung\r\nLeakCanary version: 2.1\r\nAnalysis duration: 3984 ms\r\nHeap dump file path: /data/data/com.finder/files/leakcanary/2020-01-31_15-24-10_199.hprof\r\nHeap dump timestamp: 1580480660151\r\n```\r\n## Steps to Reproduce \r\n\r\n.hprof file attached \r\n\r\n\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.1\r\n* Android OS version: 21 i think \r\n* Gradle version: 5.4.1 \r\n", "url": "https://github.com/square/leakcanary/issues/1736", "user": "iWillBeUnderYourBed", "labels": ["type: bug"], "created": "2020-01-31 15:34:52", "closed": "2020-01-31 18:50:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "java.lang.NoSuchMethodError on obfuscated instrumentation tests", "body": "### Description\r\n\r\nFailTestOnLeakRunListener does not appear to function at all in instrumentation tests when obfuscation is enabled.\r\n\r\n### Steps to Reproduce\r\n\r\nRun the following command on master (revision 2aacb8b46) of this project:\r\n~`./gradlew leakcanary-android-example:connectedCheck -Pminify`~\r\n\r\n**Expected behavior:**\r\n\r\nTests pass\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.1\r\n* Android OS version: 10.0\r\n* Gradle version: 5.6.2\r\n\r\n### Additional Information\r\n\r\nTests fail with this:\r\n```\r\nStarting 0 tests on Nexus_5_API_Q(AVD) - 10\r\nTests on Nexus_5_API_Q(AVD) - 10 failed: There was 1 failure:\r\n1) Fatal exception when running tests\r\njava.lang.NoSuchMethodError: No static method copy$default(Lc/a$a;ZZZZJILjava/lang/Object;)Lc/a$a; in class Lc/a$a; or its super classes (declaration of 'c.a$a' appears in /data/app/com.example.leakcanary-QAdW6_QGYEoCz4zbR2QTkg==/base.apk)\r\nat leakcanary.InstrumentationLeakDetector$Companion.updateConfig(InstrumentationLeakDetector.kt:195)\r\nat leakcanary.FailTestOnLeakRunListener.testRunStarted(FailTestOnLeakRunListener.kt:92)\r\nat org.junit.runner.notification.SynchronizedRunListener.testRunStarted(SynchronizedRunListener.java:35)\r\nat org.junit.runner.notification.RunNotifier$1.notifyListener(RunNotifier.java:91)\r\nat org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)\r\nat org.junit.runner.notification.RunNotifier.fireTestRunStarted(RunNotifier.java:88)\r\nat org.junit.runner.JUnitCore.run(JUnitCore.java:136)\r\nat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\nat androidx.test.internal.runner.TestExecutor.execute(TestExecutor.java:56)\r\nat androidx.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:388)\r\nat android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2189)\r\n\r\nFAILURES!!!\r\nTests run: 0,  Failures: 1\r\n```\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1735", "user": "adamfit", "labels": ["type: bug"], "created": "2020-01-30 18:30:26", "closed": "2020-03-19 23:01:29", "commits": {"63b11d168e25a58e6d08dfeefa59063dc4e5eff9": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "5c084187fdeab5a37d8050d7ebb5c3e2b0b719db": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "e86744eeb1525db30121f4adbe411145d0cdf910": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 49.000277777777775, "commitsDetails": [{"commitHash": "63b11d168e25a58e6d08dfeefa59063dc4e5eff9", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5c084187fdeab5a37d8050d7ebb5c3e2b0b719db", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e86744eeb1525db30121f4adbe411145d0cdf910", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["40c8d5cc33e81309a95ed05812c5cd605442b459"], "nameRev": "e86744eeb1525db30121f4adbe411145d0cdf910 tags/v2.3~24", "commitMessage": "Document Keeper plugin (#1782)\n\nFixes #1735", "commitDateTime": "2020-03-19 16:01:29", "authoredDateTime": "2020-03-19 16:01:29", "commitGitStats": [{"filePath": "docs/recipes.md", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Bugsnag implementation causes build error in Release mode", "body": "### Description\r\nUsing Bugsnag with LeakCanary in the documented fashion causes a build error in release mode. \r\n\r\n**Expected behavior:** Release build ignores leakcanary artefacts and dependents.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.1\r\n* Android OS version: N/A\r\n* Gradle version: 3.5.3\r\n\r\n### Additional Information\r\n\r\nThis seems to be due to the removal of the `releaseImplementation` plugin in the leakcanary 2 upgrade. The BugsnagLeakUploader and Application configuration need leakcanary, which is not part of the release compilation. Using Bugsnag with leakcanary seems to contradict the documentation, which says you don't need the release dependency because you don't need to configure anything in your `Application` class.", "url": "https://github.com/square/leakcanary/issues/1727", "user": "lordplagus02", "labels": ["type: bug"], "created": "2020-01-20 17:44:08", "closed": "2020-02-05 18:19:41", "commits": {}, "ttf": 16.00027777777778, "commitsDetails": []}, {"title": "pixel Android 10 can get memoryinfo", "body": "In com.android.zone:1.0:1.\r\n* FAILURE in 1.5 00f37f5:\r\n```\r\njava.lang.UnsupportedOperationException: Could not find char array in java.lang.String@321778048 (0x132df180)\r\n at com.squareup.leakcanary.HahaHelper.asString(HahaHelper.java:108)\r\n at com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:161)\r\n at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:115)\r\n at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:78)\r\n at android.os.Handler.dispatchMessage(Handler.java:107)\r\n at android.os.Looper.loop(Looper.java:214)\r\n at android.os.HandlerThread.run(HandlerThread.java:67)\r\n```\r\n\r\n* Reference Key: c0bf1bc9-692d-478d-b2b5-9f4f6a5f5e2f\r\n* Device: Google google Pixel sailfish\r\n* Android Version: 10 API: 29 LeakCanary: 1.5 00f37f5\r\n* Durations: watch=5025ms, gc=149ms, heap dump=5175ms, analysis=86051ms\r\n* Excluded Refs:\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n", "url": "https://github.com/square/leakcanary/issues/1722", "user": "devzhan", "labels": ["type: bug"], "created": "2020-01-14 06:44:57", "closed": "2020-01-15 08:25:04", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Crash when running monkey tests with leak canary", "body": "### Description\r\n\r\nWe have an automation tests that run monkey tests on our debuggable app. The app crashed with this stack trace:\r\n\r\n```\r\nShort Msg: java.lang.IllegalStateException\r\nLong Msg: java.lang.IllegalStateException: Hprof file missing due to: [Hprof directory cleared] /.....[_our app path_]/files/leakcanary/2020-01-11_17-08-58_093.hprof\r\nBuild Label: Android/sdk_google_phone_x86/generic_x86:6.0/MASTER/5525988:userdebug/test-keys\r\nBuild Changelist: 5525988\r\nBuild Time: 1556821263000\r\njava.lang.IllegalStateException: Hprof file missing due to: [Hprof directory cleared] /.....[_our app path_]/files/leakcanary/2020-01-11_17-08-58_093.hprof\r\n\tat leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:50)\r\n\tat leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:148)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\nit's not reproducible since monkey tests are random.\r\n\r\n**Expected behavior:** app not to crash even if there is a memory leak\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: com.squareup.leakcanary:leakcanary-android:2.0\r\n* Android OS version: Android 6\r\n* Gradle version: 3.2.1\r\n\r\n### Additional Information\r\n\r\nAny additional information, configuration or data that might be necessary to reproduce the issue.\r\n", "url": "https://github.com/square/leakcanary/issues/1719", "user": "orenktaboola", "labels": ["type: bug"], "created": "2020-01-12 12:51:46", "closed": "2020-02-05 18:50:03", "commits": {"9a70a6ebd8ae97414beb6594f66b5b30929b19b4": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "7ee940f0f4eb1dbbee383351cad6637044b46006": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 24.00027777777778, "commitsDetails": [{"commitHash": "9a70a6ebd8ae97414beb6594f66b5b30929b19b4", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7ee940f0f4eb1dbbee383351cad6637044b46006", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["135de7e3811530f1f13242b9636fb64c45feb2a4"], "nameRev": "7ee940f0f4eb1dbbee383351cad6637044b46006 tags/v2.2~2", "commitMessage": "\"Delete All\" only deletes heap dumps from known analysis (#1741)\n\nFixes #1719", "commitDateTime": "2020-02-05 10:50:02", "authoredDateTime": "2020-02-05 10:50:02", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/LeakDirectoryProvider.kt", "insertions": 0, "deletions": 19, "lines": 19}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/HeapAnalysisTable.kt", "insertions": 27, "deletions": 5, "lines": 32}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/LeakTable.kt", "insertions": 0, "deletions": 5, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "IndexOutOfBoundsException  leak_canary_list", "body": "```\r\n java.lang.IndexOutOfBoundsException: Index: 1, Size: 0\r\n        at java.util.ArrayList.get(ArrayList.java:437)\r\n        at leakcanary.internal.DisplayLeakAdapter.getConnectorType(DisplayLeakAdapter.kt:198)\r\n        at leakcanary.internal.DisplayLeakAdapter.bindConnectorRow(DisplayLeakAdapter.kt:108)\r\n        at leakcanary.internal.DisplayLeakAdapter.getView(DisplayLeakAdapter.kt:82)\r\n        at android.widget.AbsListView.obtainView(AbsListView.java:3189)\r\n        at android.widget.ListView.makeAndAddView(ListView.java:2197)\r\n        at android.widget.ListView.fillDown(ListView.java:824)\r\n        at android.widget.ListView.fillFromTop(ListView.java:885)\r\n        at android.widget.ListView.layoutChildren(ListView.java:1952)\r\n        at android.widget.AbsListView.onLayout(AbsListView.java:2961)\r\n        at android.view.View.layout(View.java:20856)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:6401)\r\n        at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1791)\r\n        at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1635)\r\n        at android.widget.LinearLayout.onLayout(LinearLayout.java:1544)\r\n        at android.view.View.layout(View.java:20856)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:6401)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)\r\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:261)\r\n        at android.view.View.layout(View.java:20856)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:6401)\r\n        at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1791)\r\n        at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1635)\r\n        at android.widget.LinearLayout.onLayout(LinearLayout.java:1544)\r\n        at android.view.View.layout(View.java:20856)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:6401)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)\r\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:261)\r\n        at android.view.View.layout(View.java:20856)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:6401)\r\n        at com.android.internal.widget.ActionBarOverlayLayout.onLayout(ActionBarOverlayLayout.java:498)\r\n        at android.view.View.layout(View.java:20856)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:6401)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:323)\r\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:261)\r\n        at com.android.internal.policy.DecorView.onLayout(DecorView.java:939)\r\n        at android.view.View.layout(View.java:20856)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:6401)\r\n        at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:2961)\r\n        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2648)\r\n        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1785)\r\n        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:7833)\r\n        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:911)\r\n        at android.view.Choreographer.doCallbacks(Choreographer.java:723)\r\n        at android.view.Choreographer.doFrame(Choreographer.java:658)\r\n        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:897)\r\n        at android.os.Handler.handleCallback(Handler.java:789)\r\n        at android.os.Handler.dispatchMessage(Handler.java:98)\r\n        at android.os.Looper.loop(Looper.java:164)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6942)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:327)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1374)\r\n```\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.1\r\n* Android OS version: 9.0\r\n* Gradle version: 5.4.1", "url": "https://github.com/square/leakcanary/issues/1713", "user": "lic2050", "labels": ["type: bug"], "created": "2020-01-08 10:42:41", "closed": "2020-01-10 22:15:34", "commits": {"46cca2eacceb3b5125ab145b5ad8f53e224bf813": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "acbceaa22f031447e533513169a8e22cdfd2ffec": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "83d9b9b7dfaa18ba5ce39de97e8778b4ba5302a6": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "b8dc9b9d2999346c084b79c13e06193e02817068": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "46cca2eacceb3b5125ab145b5ad8f53e224bf813", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "acbceaa22f031447e533513169a8e22cdfd2ffec", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "83d9b9b7dfaa18ba5ce39de97e8778b4ba5302a6", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b8dc9b9d2999346c084b79c13e06193e02817068", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["a125fa2580856bbbbcdf6a9078f2fce2cf150fa5"], "nameRev": "b8dc9b9d2999346c084b79c13e06193e02817068 tags/v2.2~14", "commitMessage": "Fix crash on empty reference path (#1716)\n\n* Add tests for LeakActivity\r\n\r\n* Fix crash on empty reference path\r\n\r\nFixes #1713\r\n", "commitDateTime": "2020-01-10 14:15:33", "authoredDateTime": "2020-01-10 14:15:33", "commitGitStats": [{"filePath": "leakcanary-android-core/build.gradle", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "leakcanary-android-core/src/androidTest/java/leakcanary/DatabaseRule.kt", "insertions": 26, "deletions": 0, "lines": 26}, {"filePath": "leakcanary-android-core/src/androidTest/java/leakcanary/LeakActivityTest.kt", "insertions": 143, "deletions": 0, "lines": 143}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/DisplayLeakAdapter.kt", "insertions": 14, "deletions": 10, "lines": 24}, {"filePath": "settings.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shark-hprof-test/build.gradle", "insertions": 11, "deletions": 0, "lines": 11}, {"filePath": "{shark/src/test/java => shark-hprof-test/src/main/kotlin}/shark/HprofWriterHelper.kt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shark/build.gradle", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": " No static field leak_canary_toast_icon of type I in class Lcom/squareup/leakcanary/core/R$id; or its superclasses (declaration of 'com.squareup.leakcanary.core.R$id' appears in base.apk!classes6.dex)", "body": "### Description\r\n\r\nNot working in my project, for resource not found in dex?\r\n\r\n### Steps to Reproduce\r\n\r\n\r\n1. open some actitivity\r\n2.  dump the heap\r\n3. crash\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0, 2.1\r\n* Android OS version: Android 10\r\n* Gradle version: gradle-5.6.2,  android build plugin 3.4.2\r\n\r\n\r\n### leakcannery log \r\nD/LeakCanary: Already scheduled retained check, ignoring (found new object retained)\r\nD/LeakCanary: Already scheduled retained check, ignoring (found new object retained)\r\nD/LeakCanary: Checking retained object because app became invisible\r\nD/LeakCanary: Found 5 retained references, dumping the heap\r\nD/LeakCanary: Analysis in progress, working on: PARSING_HEAP_DUMP\r\nD/LeakCanary: Analysis in progress, working on: EXTRACTING_METADATA\r\nD/LeakCanary: Analysis in progress, working on: FINDING_RETAINED_OBJECTS\r\nD/LeakCanary: Analysis in progress, working on: FINDING_PATHS_TO_RETAINED_OBJECTS\r\n\r\n\r\nit seems to be work but do not have  R field in dex?", "url": "https://github.com/square/leakcanary/issues/1712", "user": "qianlvable", "labels": ["type: bug"], "created": "2020-01-07 02:05:17", "closed": "2020-02-05 18:20:55", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "Shark-CLI 2.0 does not work on Windows 8.1", "body": "### Description\r\n\r\nShark-CLI 2.0 does not work on Windows 8.1\r\n\r\n### Steps to Reproduce\r\n\r\nDownload Shark-CLI zip file and run shark-cli.bat \r\n\r\nRun command: shark-cli.bat analyze-process <package_name>\r\n\r\nException error:\r\nException in thread \"main\" java.lang.IllegalThreadStateException: process has not exited\r\n        at java.lang.ProcessImpl.exitValue(Unknown Source)\r\n        at shark.MainKt.runCommand(Main.kt:221)\r\n        at shark.MainKt.dumpHeap(Main.kt:153)\r\n        at shark.MainKt.main(Main.kt:32)\r\n\r\n**Expected behavior:** I would like run shark-cli on Windows systems.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0\r\n* Android OS version: Android 10\r\n* Gradle version:\r\n\r\n### Additional Information\r\nNA", "url": "https://github.com/square/leakcanary/issues/1711", "user": "fbenbassat", "labels": ["type: bug"], "created": "2020-01-06 18:23:48", "closed": "2020-02-05 18:21:23", "commits": {}, "ttf": 29.00027777777778, "commitsDetails": []}, {"title": "NPE in shark.ApplicationLeak$createGroupHash", "body": "```\r\n kotlin.KotlinNullPointerException\r\n        at shark.ApplicationLeak$createGroupHash$1.invoke(HeapAnalysis.kt:205)\r\n        at shark.ApplicationLeak$createGroupHash$1.invoke(HeapAnalysis.kt:197)\r\n        at kotlin.text.StringsKt__StringBuilderKt.appendElement(StringBuilder.kt:58)\r\n        at kotlin.collections.CollectionsKt___CollectionsKt.joinTo(_Collections.kt:2313)\r\n        at kotlin.collections.CollectionsKt___CollectionsKt.joinToString(_Collections.kt:2330)\r\n        at kotlin.collections.CollectionsKt___CollectionsKt.joinToString$default(_Collections.kt:2329)\r\n        at shark.ApplicationLeak.createGroupHash(HeapAnalysis.kt:204)\r\n        at shark.Leak.getGroupHash(HeapAnalysis.kt:146)\r\n        at leakcanary.internal.activity.db.HeapAnalysisTable.insert(HeapAnalysisTable.kt:41)\r\n        at leakcanary.DefaultOnHeapAnalyzedListener.onHeapAnalyzed(DefaultOnHeapAnalyzedListener.kt:31)\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:73)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:76)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:201)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\n```", "url": "https://github.com/square/leakcanary/issues/1706", "user": "ditclear", "labels": ["type: bug"], "created": "2019-12-27 03:28:16", "closed": "2019-12-31 00:31:36", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "Heap analysis fails if minification is turned on", "body": "### Description\r\n\r\nI ran LeakCanary sample app with minification enabled by  executing this command:\r\n`./gradlew leakcanary-android-sample:installDebug -Pminify`\r\n\r\nand LeakCanary fails during heap analysis. It worked in the past. It seems like this commit:\r\nhttps://github.com/square/leakcanary/commit/9518ccc75b377e4950c11892f407c55bce01e3fc\r\nintroduced the regression.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Run LeakCanary sample app with minification enabled\r\n2. Rotate the device\r\n3. Tap on a notification to analyze the heap\r\n\r\n**Expected behavior:** It should analyze the heap and show leak trace with obfuscated names.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: latest commit on master branch\r\n* Android OS version: 10\r\nI ran the test on Pixel 3.\r\n\r\n### Additional Information\r\n\r\nStack trace is unfortunately obfuscated:\r\n```\r\nb.c\r\n\tat e.f$a$a.a(:80)\r\n\tat e.f$a$a.a(:19)\r\n\tat e.i.a(:23)\r\n\tat e.f$a.a(:76)\r\n\tat e.c$q$a.a(:99)\r\n\tat e.c$q$a.a(:37)\r\n\tat e.m0.a(:58)\r\n\tat e.c$q.a(:41)\r\n\tat e.o.a(:400)\r\n\tat e.o.a(:361)\r\n\tat e.o.a(:140)\r\n\tat e.o.a(:112)\r\n\tat e.o.a(:87)\r\n\tat leakcanary.internal.HeapAnalyzerService.a(:62)\r\n\tat c.i.h.onHandleIntent(:55)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:78)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:107)\r\n\tat android.os.Looper.loop(Looper.java:214)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:67)\r\n\r\nBuild.VERSION.SDK_INT: 29\r\nBuild.MANUFACTURER: Google\r\nLeakCanary version: 2.1-SNAPSHOT\r\nAnalysis duration: 5246 ms\r\nHeap dump file path: /data/user/0/com.example.leakcanary/files/leakcanary/2019-12-20_10-43-49_608.hprof\r\nHeap dump timestamp: 1576835036222\r\n```\r\n\r\nHeap dump file:\r\n[2019-12-20_10-43-49_608.hprof.zip](https://github.com/square/leakcanary/files/3987713/2019-12-20_10-43-49_608.hprof.zip)\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1696", "user": "mzgreen", "labels": ["type: bug"], "created": "2019-12-20 09:53:36", "closed": "2019-12-20 12:15:33", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": " java.lang.IllegalStateException: Hprof file missing", "body": "### Description\r\n\r\nLeak canary appears to crash intermittently if automation tests are run with dumpHeap forced on\r\n\r\n### Steps to Reproduce\r\n\r\nNot sure, it takes a number of unrelated instrumentation tests running for it to occur. Looking at the trace, might be related to how fast a test can close and reopen the app?\r\n\r\n**Expected behavior:**\r\nDon't crash\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-b5\r\n* Android OS version: 28\r\n* Gradle version: 5.6.2\r\n\r\n### Additional information\r\n<!-- language: none -->\r\n\t12-04 08:59:30.651  8365 11564 E AndroidRuntime: FATAL EXCEPTION: IntentService[HeapAnalyzerService]\r\n\t12-04 08:59:30.651  8365 11564 E AndroidRuntime: java.lang.IllegalStateException: Hprof file missing due to: [Older than all other hprof files] /storage/emulated/0/Download/leakcanary-mypackagename/2019-12-04_08-55-13_155.hprof\r\n\t12-04 08:59:30.651  8365 11564 E AndroidRuntime: \tat leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:50)\r\n\t12-04 08:59:30.651  8365 11564 E AndroidRuntime: \tat leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n\t12-04 08:59:30.651  8365 11564 E AndroidRuntime: \tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:76)\r\n\t12-04 08:59:30.651  8365 11564 E AndroidRuntime: \tat android.os.Handler.dispatchMessage(Handler.java:106)\r\n\t12-04 08:59:30.651  8365 11564 E AndroidRuntime: \tat android.os.Looper.loop(Looper.java:214)\r\n\t12-04 08:59:30.651  8365 11564 E AndroidRuntime: \tat android.os.HandlerThread.run(HandlerThread.java:65)\r\n\r\nNot sure how to attach hprof files with a 10mb limit (they're huge even compressed), but I suspect it's not that useful anyhow.\r\n\r\n![Leaks_SamsungS9_1](https://user-images.githubusercontent.com/41120437/70750841-10e84480-1ce4-11ea-8210-8b61fbfe0097.png)\r\n\r\n\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1670", "user": "adamfit", "labels": ["type: bug"], "created": "2019-12-12 21:38:34", "closed": "2019-12-18 17:04:28", "commits": {"3cf9c8d9dbec80c4f500e91a68b4dfdbf854299b": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "f69b1970ceed24f9a922254adc2d84ff0c15dd11": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "fa9808e5b851523cf93341b2c6f5e1a6325b1af9": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "c297ee8d5d05cffcdd9b05ce57c8d5786bb21e04": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "3cf9c8d9dbec80c4f500e91a68b4dfdbf854299b", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f69b1970ceed24f9a922254adc2d84ff0c15dd11", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["a42f078465aa2fedfff4c2317ed339fa436ae1e1"], "nameRev": "f69b1970ceed24f9a922254adc2d84ff0c15dd11 tags/v2.1~19", "commitMessage": "At most 1 heap dump a minute (#1683)\n\n* Automatic heap dumps are now rate limited to one per minute. Heap dumps can still be triggered manually by tapping the retained object notification. This should alleviate #1670 (though it won't fully make it go away)\r\n* Also updated various pieces of the logging to provide more details about what's going on, while also logging less.", "commitDateTime": "2019-12-18 14:25:36", "authoredDateTime": "2019-12-18 14:25:36", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "insertions": 79, "deletions": 62, "lines": 141}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_strings.xml", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shark/src/main/java/shark/HeapAnalysis.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shark/src/test/java/shark/HeapAnalysisStringRenderingTest.kt", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fa9808e5b851523cf93341b2c6f5e1a6325b1af9", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c297ee8d5d05cffcdd9b05ce57c8d5786bb21e04", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["35f8680b3a7e3ceeaca48be2eb194a4dfeda5e38"], "nameRev": "c297ee8d5d05cffcdd9b05ce57c8d5786bb21e04 tags/v2.1~17", "commitMessage": "Don't crash on missing hprof file during analysis (#1685)\n\nIf the hprof file is missing, return a HeapAnalysisFailure result instead of crashing.\r\n\r\nWith #1670 we saw this could happen when a lot of leaks are detected and more than 7 heap dumps are enqueued to be processed. 3cf9c8d9dbec80c4f500e91a68b4dfdbf854299b introduced a max of 1 heap dumps per minute, so this edge case should happen less often now.\r\n\r\nFixes #1670", "commitDateTime": "2019-12-18 18:04:27", "authoredDateTime": "2019-12-18 18:04:27", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapAnalyzerService.kt", "insertions": 46, "deletions": 25, "lines": 71}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/LeakDirectoryProvider.kt", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "shark/src/main/java/shark/HeapAnalyzer.kt", "insertions": 0, "deletions": 4, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "shark.AndroidObjectInspectors$SUPPORT_FRAGMENT$inspect$1.invoke(SourceFile:221)", "body": " createdAtTimeMillis=1576122857598, analysisDurationMillis=18675, exception=\r\n    e.e\r\n        at shark.AndroidObjectInspectors$SUPPORT_FRAGMENT$inspect$1.invoke(SourceFile:221)\r\n        at shark.AndroidObjectInspectors$SUPPORT_FRAGMENT$inspect$1.invoke(SourceFile:216)\r\n        at shark.ObjectReporter.whenInstanceOf(SourceFile:58)\r\n        at shark.AndroidObjectInspectors$SUPPORT_FRAGMENT.inspect(SourceFile:220)\r\n        at shark.HeapAnalyzer.buildLeakTrace(SourceFile:384)\r\n        at shark.HeapAnalyzer.buildLeakTraces(SourceFile:348)\r\n        at shark.HeapAnalyzer.findLeaks(SourceFile:128)\r\n        at shark.HeapAnalyzer.analyze(SourceFile:105)\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(SourceFile:61)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(SourceFile:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:76)\r\n        at android.os.Handler.dispatchMessage(Handler.java:112)\r\n        at android.os.Looper.loop(Looper.java:216)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\n \r\n### \r\n\r\n* LeakCanary version: 2.0-beta-3\r\n* Android OS version:9.0\r\n* Gradle version:3.4.1/androidx\r\n\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1669", "user": "tangtang-feng", "labels": ["type: bug"], "created": "2019-12-12 03:55:15", "closed": "2019-12-12 04:40:19", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to get provider leakcanary.internal.AppWatcherInstaller$MainProcess:", "body": "### Description\r\n\r\n\r\nFailure on building debug apk. Unable to get provider leakCanary when it tries to install  AppWatcher\r\n\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0\r\n* Android OS version: 6.0.1\r\n* Gradle version: 4.1\r\n\r\n### Additional Information\r\n\r\nsample project that reproduces issue: https://drive.google.com/file/d/1DSTrQOqsiYNZ71zJUK_DjbihFCxNSR6Z/view?usp=sharing\r\n\r\nLogcat:\r\n\r\n```\r\n12-06 15:42:23.987 15540-15540/? I/art: Late-enabling -Xcheck:jni\r\n    Late-enabling JIT\r\n12-06 15:42:24.009 15540-15540/? I/art: JIT created with code_cache_capacity=2MB compile_threshold=1000\r\n12-06 15:42:24.070 15540-15540/com.app.tablesign W/ActivityThread: Application com.app.tablesign is waiting for the debugger on port 8100...\r\n12-06 15:42:24.074 15540-15540/com.app.tablesign I/System.out: Sending WAIT chunk\r\n12-06 15:42:24.245 15540-15550/com.app.tablesign I/art: Debugger is active\r\n12-06 15:42:24.275 15540-15540/com.app.tablesign I/System.out: Debugger has connected\r\n    waiting for debugger to settle...\r\n12-06 15:42:24.475 15540-15540/com.app.tablesign I/System.out: waiting for debugger to settle...\r\n12-06 15:42:24.675 15540-15540/com.app.tablesign I/System.out: waiting for debugger to settle...\r\n12-06 15:42:24.876 15540-15540/com.app.tablesign I/System.out: waiting for debugger to settle...\r\n12-06 15:42:25.076 15540-15540/com.app.tablesign I/System.out: waiting for debugger to settle...\r\n12-06 15:42:25.277 15540-15540/com.app.tablesign I/System.out: waiting for debugger to settle...\r\n12-06 15:42:25.477 15540-15540/com.app.tablesign I/System.out: waiting for debugger to settle...\r\n12-06 15:42:25.677 15540-15540/com.app.tablesign I/System.out: waiting for debugger to settle...\r\n12-06 15:42:25.878 15540-15540/com.app.tablesign I/System.out: debugger has settled (1497)\r\n12-06 15:42:25.899 15540-15540/com.app.tablesign W/System: ClassLoader referenced unknown path: /data/app/com.app.tablesign-1/lib/arm\r\n12-06 15:42:25.972 15540-15540/com.app.tablesign D/LeakCanary: Installing AppWatcher\r\n12-06 15:42:25.984 15540-15540/com.app.tablesign I/art: Rejecting re-init on previously-failed class java.lang.Class<leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1>\r\n12-06 15:42:25.985 15540-15540/com.app.tablesign I/art: Rejecting re-init on previously-failed class java.lang.Class<leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1>\r\n12-06 15:42:25.989 15540-15540/com.app.tablesign I/art: Rejecting re-init on previously-failed class java.lang.Class<leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1>\r\n    Rejecting re-init on previously-failed class java.lang.Class<leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1>\r\n12-06 15:42:25.991 15540-15540/com.app.tablesign I/art: Rejecting re-init on previously-failed class java.lang.Class<leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1>\r\n12-06 15:42:25.991 15540-15540/com.app.tablesign D/AndroidRuntime: Shutting down VM\r\n    \r\n    \r\n    --------- beginning of crash\r\n12-06 15:42:25.993 15540-15540/com.app.tablesign E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.app.tablesign, PID: 15540\r\n    java.lang.RuntimeException: Unable to get provider leakcanary.internal.AppWatcherInstaller$MainProcess: java.lang.reflect.InvocationTargetException\r\n        at android.app.ActivityThread.installProvider(ActivityThread.java:5156)\r\n        at android.app.ActivityThread.installContentProviders(ActivityThread.java:4748)\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4688)\r\n        at android.app.ActivityThread.-wrap1(ActivityThread.java)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1405)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:148)\r\n        at android.app.ActivityThread.main(ActivityThread.java:5417)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:742)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:632)\r\n     Caused by: java.lang.reflect.InvocationTargetException\r\n        at java.lang.reflect.Constructor.newInstance(Native Method)\r\n        at leakcanary.internal.FragmentDestroyWatcher.getWatcherIfAvailable(FragmentDestroyWatcher.kt:99)\r\n        at leakcanary.internal.FragmentDestroyWatcher.install(FragmentDestroyWatcher.kt:62)\r\n        at leakcanary.internal.InternalAppWatcher.install(InternalAppWatcher.kt:70)\r\n        at leakcanary.internal.AppWatcherInstaller.onCreate(AppWatcherInstaller.kt:35)\r\n        at android.content.ContentProvider.attachInfo(ContentProvider.java:1748)\r\n        at android.content.ContentProvider.attachInfo(ContentProvider.java:1723)\r\n        at android.app.ActivityThread.installProvider(ActivityThread.java:5153)\r\n        at android.app.ActivityThread.installContentProviders(ActivityThread.java:4748)\u00a0\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4688)\u00a0\r\n        at android.app.ActivityThread.-wrap1(ActivityThread.java)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1405)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\u00a0\r\n        at android.os.Looper.loop(Looper.java:148)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:5417)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:742)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:632)\u00a0\r\n     Caused by: java.lang.NoClassDefFoundError: leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1\r\n        at leakcanary.internal.AndroidSupportFragmentDestroyWatcher.<init>(AndroidSupportFragmentDestroyWatcher.kt:30)\r\n        at java.lang.reflect.Constructor.newInstance(Native Method)\u00a0\r\n        at leakcanary.internal.FragmentDestroyWatcher.getWatcherIfAvailable(FragmentDestroyWatcher.kt:99)\u00a0\r\n        at leakcanary.internal.FragmentDestroyWatcher.install(FragmentDestroyWatcher.kt:62)\u00a0\r\n        at leakcanary.internal.InternalAppWatcher.install(InternalAppWatcher.kt:70)\u00a0\r\n        at leakcanary.internal.AppWatcherInstaller.onCreate(AppWatcherInstaller.kt:35)\u00a0\r\n        at android.content.ContentProvider.attachInfo(ContentProvider.java:1748)\u00a0\r\n        at android.content.ContentProvider.attachInfo(ContentProvider.java:1723)\u00a0\r\n        at android.app.ActivityThread.installProvider(ActivityThread.java:5153)\u00a0\r\n        at android.app.ActivityThread.installContentProviders(ActivityThread.java:4748)\u00a0\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4688)\u00a0\r\n        at android.app.ActivityThread.-wrap1(ActivityThread.java)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1405)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\u00a0\r\n        at android.os.Looper.loop(Looper.java:148)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:5417)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:742)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:632)\u00a0\r\n\r\n```", "url": "https://github.com/square/leakcanary/issues/1662", "user": "devism", "labels": ["type: bug"], "created": "2019-12-06 20:47:23", "closed": "2019-12-10 12:30:27", "commits": {"a8410905da570c7f0a981d051fda07d42b81541e": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "f4492b68d89637c32f30fb47ffcf58be6e1553ad": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "a414f993ba3c2d92a99dee768388979abeb1d051": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "433f0b1d1d8f1eb7eeaa41982814dae4791b7a8a": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "a8410905da570c7f0a981d051fda07d42b81541e", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f4492b68d89637c32f30fb47ffcf58be6e1553ad", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a414f993ba3c2d92a99dee768388979abeb1d051", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "433f0b1d1d8f1eb7eeaa41982814dae4791b7a8a", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["25a10fcd9f405235de63bd791ea4ae4eb5453924"], "nameRev": "433f0b1d1d8f1eb7eeaa41982814dae4791b7a8a tags/v2.1~28", "commitMessage": "Fix crash with Android Support library < 25.0.2 (#1666)\n\nFixes #1662", "commitDateTime": "2019-12-10 04:30:26", "authoredDateTime": "2019-12-10 04:30:26", "commitGitStats": [{"filePath": "leakcanary-object-watcher-android/src/main/java/leakcanary/internal/FragmentDestroyWatcher.kt", "insertions": 11, "deletions": 3, "lines": 14}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Surface Library leaks in UI", "body": "### Description\r\n\r\nOften got a leak from leakCanary on emulator:\r\n\r\n```\r\nKnown leak pattern: instance field android.app.Activity$1#this$0\r\nDescription: Android Q added a new android.app.IRequestFinishCallback$Stub class. android.app.Activity creates an implementation of that interface as an anonymous subclass. That anonymous subclass has a reference to the activity. Another process is keeping the android.app.IRequestFinishCallback$Stub reference alive long after Activity.onDestroyed() has been called, causing the activity to leak.\r\n152062 bytes retained\r\n\u252c\r\n\u251c\u2500 android.app.Activity$1\r\n\u2502    Leaking: UNKNOWN\r\n\u2502    Anonymous subclass of android.app.IRequestFinishCallback$Stub\r\n\u2502    GC Root: Global variable in native code\r\n\u2502    \u2193 Activity$1.this$0\r\n\u2502                 ~~~~~~\r\n\u2570\u2192 leakcanary.internal.activity.LeakActivity\r\n\u200b     Leaking: YES (Activity#mDestroyed is true and ObjectWatcher was watching this)\r\n\u200b     key = b0d3903c-fdcc-4c3a-a9d7-dd64057c44b1\r\n\u200b     watchDurationMillis = 9526\r\n\u200b     retainedDurationMillis = 4483\r\n\r\n\r\nMETADATA\r\n\r\nBuild.VERSION.SDK_INT: 29\r\nBuild.MANUFACTURER: Google\r\nLeakCanary version: 2.0\r\nApp process name: xxxxxx\r\nAnalysis duration: 29014 ms\r\n```\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0\r\n* Android OS version: Q emulator\r\n\r\n### Additional Information\r\nShould probably be fixed or automatically ignored :)\r\n\r\nThe additional question is that when sharing the leak trace as text there's some added information that I can't see inside LeakCanary like:\r\n\r\n```\r\nKnown leak pattern: instance field android.app.Activity$1#this$0\r\nDescription: Android Q added a new android.app.IRequestFinishCallback$Stub class. android.app.Activity creates an implementation of that interface as an anonymous subclass. That anonymous subclass has a reference to the activity. Another process is keeping the android.app.IRequestFinishCallback$Stub reference alive long after Activity.onDestroyed() has been called, causing the activity to leak.\r\n```\r\n\r\nIs there a way to directly see this information from LeakCanary on the device to gain time?", "url": "https://github.com/square/leakcanary/issues/1661", "user": "Tolriq", "labels": ["type: bug"], "created": "2019-12-05 14:02:30", "closed": "2019-12-17 21:28:03", "commits": {"7529184c72ee9880e04e8de12c1d01cd83f09f91": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "47324fc24ca8bf629b2d4d8f60599bc33af182b1": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "7529184c72ee9880e04e8de12c1d01cd83f09f91", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "47324fc24ca8bf629b2d4d8f60599bc33af182b1", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["268b707391eebb3c7a6d9bfde386b82e854477da"], "nameRev": "47324fc24ca8bf629b2d4d8f60599bc33af182b1 tags/v2.1~22", "commitMessage": "Surface library leaks in UI (#1679)\n\n* Added chips for \"New\" and \"Library Leak\" leaks\r\n* Added description and details in leak info\r\n\r\nFixes #1661", "commitDateTime": "2019-12-17 22:28:03", "authoredDateTime": "2019-12-17 22:28:03", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/LeakTable.kt", "insertions": 19, "deletions": 11, "lines": 30}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/LeaksDbHelper.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/HeapDumpScreen.kt", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/LeakScreen.kt", "insertions": 11, "deletions": 1, "lines": 12}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/LeaksScreen.kt", "insertions": 7, "deletions": 0, "lines": 7}, {"filePath": "leakcanary-android-core/src/main/res/layout/leak_canary_leak_chips.xml", "insertions": 41, "deletions": 0, "lines": 41}, {"filePath": "leakcanary-android-core/src/main/res/layout/leak_canary_leak_row.xml", "insertions": 17, "deletions": 8, "lines": 25}, {"filePath": "leakcanary-android-core/src/main/res/layout/leak_canary_leak_screen.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "shark/src/main/java/shark/HeapAnalysis.kt", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "crash", "body": "My Phone is OPPO K1\r\n\r\n```\r\n2019-12-04 11:25:35.554 19890-19890/? D/StrictMode: StrictMode policy violation; ~duration=184 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=327743 violation=2\r\n        at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1440)\r\n        at libcore.io.BlockGuardOs.open(BlockGuardOs.java:203)\r\n        at libcore.io.IoUtils.canOpenReadOnly(IoUtils.java:163)\r\n        at java.lang.Runtime.loadLibrary0(Runtime.java:1028)\r\n        at java.lang.System.loadLibrary(System.java:1657)\r\n        at com.qualcomm.qti.Performance.<clinit>(Performance.java:19)\r\n        at java.lang.Class.classForName(Native Method)\r\n        at java.lang.Class.forName(Class.java:453)\r\n        at java.lang.Class.forName(Class.java:378)\r\n        at android.util.BoostFramework.<init>(BoostFramework.java:98)\r\n        at android.widget.OverScroller$SplineOverScroller.<init>(OverScroller.java:722)\r\n        at android.widget.OverScroller.<init>(OverScroller.java:79)\r\n        at android.widget.OverScroller.<init>(OverScroller.java:61)\r\n        at android.widget.OverScroller.<init>(OverScroller.java:51)\r\n        at com.android.internal.widget.ActionBarOverlayLayout.init(ActionBarOverlayLayout.java:190)\r\n        at com.android.internal.widget.ActionBarOverlayLayout.<init>(ActionBarOverlayLayout.java:177)\r\n        at java.lang.reflect.Constructor.newInstance0(Native Method)\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:334)\r\n        at android.view.LayoutInflater.createView(LayoutInflater.java:650)\r\n        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:797)\r\n        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:737)\r\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:492)\r\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:423)\r\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:374)\r\n        at com.android.internal.policy.DecorView.onResourcesLoaded(DecorView.java:2102)\r\n        at com.android.internal.policy.PhoneWindow.generateLayout(PhoneWindow.java:2737)\r\n        at com.android.internal.policy.PhoneWindow.installDecor(PhoneWindow.java:2843)\r\n        at com.android.internal.policy.PhoneWindow.setContentView(PhoneWindow.java:455)\r\n        at android.app.Activity.setContentView(Activity.java:2774)\r\n        at leakcanary.internal.activity.LeakActivity.onCreate(LeakActivity.kt:55)\r\n        at android.app.Activity.performCreate(Activity.java:7259)\r\n        at android.app.Activity.performCreate(Activity.java:7250)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1215)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2928)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3053)\r\n        at android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1772)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:197)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7022)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:515)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:837)\r\n2019-12-04 11:25:35.554 19890-19890/? D/AndroidRuntime: Shutting down VM\r\n2019-12-04 11:25:35.557 19910-19910/? D/AndroidRuntime: >>>>>> START com.android.internal.os.RuntimeInit uid 2000 <<<<<<\r\n    \r\n    \r\n    --------- beginning of crash\r\n2019-12-04 11:25:35.557 19890-19890/? E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.example.leakcanary, PID: 19890\r\n    android.os.StrictMode$StrictModeViolation: policy=327743 violation=2\r\n        at android.os.StrictMode.executeDeathPenalty(StrictMode.java:1686)\r\n        at android.os.StrictMode.-wrap3(Unknown Source:0)\r\n        at android.os.StrictMode$AndroidBlockGuardPolicy.handleViolation(StrictMode.java:1679)\r\n        at android.os.StrictMode$AndroidBlockGuardPolicy$1.run(StrictMode.java:1557)\r\n        at android.os.Handler.handleCallback(Handler.java:790)\r\n        at android.os.Handler.dispatchMessage(Handler.java:99)\r\n        at android.os.Looper.loop(Looper.java:197)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7022)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:515)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:837)\r\n2019-12-04 11:25:35.557 19890-19897/? I/zygote64: Do partial code cache collection, code=29KB, data=20KB\r\n2019-12-04 11:25:35.557 19890-19897/? I/zygote64: After code cache collection, code=29KB, data=20KB\r\n2019-12-04 11:25:35.557 19890-19897/? I/zygote64: Increasing code cache capacity to 128KB\r\n2019-12-04 11:25:35.561 1790-4535/? W/ActivityManager:   Force finishing activity com.example.leakcanary/leakcanary.internal.activity.LeakLauncherActivity\r\n2019-12-04 11:25:35.569 19890-19890/? I/Process: Sending signal. PID: 19890 SIG: 9\r\n2019-12-04 11:25:35.588 778-778/? E/lowmemorykiller: Error writing /proc/19890/oom_score_adj; errno=22\r\n2019-12-04 11:25:35.589 1790-4535/? D/ActivityManager: zjm TOP_APP is ProcessRecord{506bb02 4007:com.oppo.launcher/u0a23} uid is 10023\r\n2019-12-04 11:25:35.590 1790-2430/? W/InputDispatcher: channel '60cddb5 com.example.leakcanary/leakcanary.internal.activity.LeakLauncherActivity (server)' ~ Consumer closed input channel or an error occurred.  events=0x9\r\n2019-12-04 11:25:35.590 1790-2430/? E/InputDispatcher: channel '60cddb5 com.example.leakcanary/leakcanary.internal.activity.LeakLauncherActivity (server)' ~ Channel is unrecoverably broken and will be disposed!\r\n2019-12-04 11:25:35.595 1790-1842/? W/zygote64: kill(-19890, 9) failed: No such process\r\n```", "url": "https://github.com/square/leakcanary/issues/1660", "user": "tianshaokai", "labels": ["type: bug"], "created": "2019-12-04 03:31:13", "closed": "2019-12-04 19:40:00", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unit tests: Could not initialize class leakcanary.AppWatcher", "body": "### Description\r\n\r\nUnit tests fail with \r\n\r\n```\r\njava.lang.ExceptionInInitializerError\r\n\tat leakcanary.AppWatcher.isInstalled(AppWatcher.kt:97)\r\n\tat leakcanary.AppWatcher.<clinit>(AppWatcher.kt:63)\r\n\tat com.kolibree.android.sdk.core.LeakCanaryExtensionsKt.detectLeaks(LeakCanaryExtensions.kt:16)\r\n\tat com.kolibree.android.sdk.BluetoothStateReceiver$Companion.onAllConnectionObserversUnsubscribed(BluetoothStateReceiver.kt:53)\r\n\tat com.kolibree.android.sdk.BluetoothStateReceiver$Companion.access$onAllConnectionObserversUnsubscribed(BluetoothStateReceiver.kt:31)\r\n\tat com.kolibree.android.sdk.BluetoothStateReceiver$Companion$bluetoothStatusObservable$1$1.run(BluetoothStateReceiver.kt:43)\r\n\tat io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.runFinally(ObservableDoFinally.java:142)\r\n\tat io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.dispose(ObservableDoFinally.java:98)\r\n\tat io.reactivex.internal.operators.observable.ObservableDoOnEach$DoOnEachObserver.dispose(ObservableDoOnEach.java:79)\r\n\tat io.reactivex.internal.disposables.DisposableHelper.dispose(DisposableHelper.java:124)\r\n\tat io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection.dispose(ObservablePublishAlt.java:161)\r\n\tat io.reactivex.internal.disposables.DisposableHelper.dispose(DisposableHelper.java:124)\r\n\tat io.reactivex.internal.operators.observable.ObservableRefCount.timeout(ObservableRefCount.java:156)\r\n\tat io.reactivex.internal.operators.observable.ObservableRefCount.cancel(ObservableRefCount.java:103)\r\n\tat io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver.dispose(ObservableRefCount.java:252)\r\n\tat io.reactivex.internal.observers.DisposableLambdaObserver.dispose(DisposableLambdaObserver.java:90)\r\n\tat io.reactivex.internal.operators.observable.ObservableDoFinally$DoFinallyObserver.dispose(ObservableDoFinally.java:97)\r\n\tat io.reactivex.internal.disposables.DisposableHelper.dispose(DisposableHelper.java:124)\r\n\tat io.reactivex.internal.operators.observable.ObservablePublishAlt$PublishConnection.dispose(ObservablePublishAlt.java:161)\r\n\tat io.reactivex.internal.disposables.DisposableHelper.dispose(DisposableHelper.java:124)\r\n\tat io.reactivex.internal.operators.observable.ObservableRefCount.timeout(ObservableRefCount.java:156)\r\n\tat io.reactivex.internal.operators.observable.ObservableRefCount.cancel(ObservableRefCount.java:103)\r\n\tat io.reactivex.internal.operators.observable.ObservableRefCount$RefCountObserver.dispose(ObservableRefCount.java:252)\r\n\tat io.reactivex.internal.disposables.DisposableHelper.dispose(DisposableHelper.java:124)\r\n\tat io.reactivex.internal.observers.LambdaObserver.dispose(LambdaObserver.java:102)\r\n\tat com.kolibree.android.sdk.util.BluetoothUtilsImplTest.bluetoothStateObservable_disposeObserver_invokesonAllBluetoothStateObserversUnsubscribed(BluetoothUtilsImplTest.java:75)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.mockito.internal.junit.JUnitRule$1.evaluateSafely(JUnitRule.java:57)\r\n\tat org.mockito.internal.junit.JUnitRule$1.evaluate(JUnitRule.java:48)\r\n\tat com.kolibree.android.test.rules.ImmediateRxSchedulersOverrideRule$1.evaluate(ImmediateRxSchedulersOverrideRule.java:56)\r\n\tat org.junit.rules.TestWatcher$1.evaluate(TestWatcher.java:55)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: java.lang.RuntimeException: Method getMainLooper in android.os.Looper not mocked. See http://g.co/androidstudio/not-mocked for details.\r\n\tat android.os.Looper.getMainLooper(Looper.java)\r\n\tat leakcanary.internal.InternalAppWatcher.<clinit>(InternalAppWatcher.kt:36)\r\n\t... 55 more\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\nI have this dependency in my build.gradle (it's a library, so I think I need to use implementation and not debugImplementation)\r\n\r\n```implementation \"com.squareup.leakcanary:leakcanary-object-watcher-android:2.0\"```\r\n\r\nI've tried to use `testImplementation libraries.leakCanaryWatcher` without success\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\nUnit tests pass\r\n\r\nI guess it fails when creating the `InternalAppWatcher` singleton instance\r\n\r\n```kotlin\r\nprivate val mainHandler = Handler(Looper.getMainLooper())\r\n```\r\n\r\nWould this work?\r\n\r\n```kotlin\r\nprivate val mainHandler by lazy {\r\n    Handler(Looper.getMainLooper())\r\n}\r\n```\r\n\r\n`isInstalled` will then be able to check that `::application.isInitialized` is false\r\n", "url": "https://github.com/square/leakcanary/issues/1651", "user": "Maragues", "labels": ["type: bug"], "created": "2019-11-29 12:21:34", "closed": "2019-12-03 02:35:34", "commits": {"84c0897740e28cdac57fdc325f189154769c893b": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "4b63ab0818358a649fd017e9ec0cdd72125daaf7": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "fe695582229b4e801be05df39e3213fcfeb73c97": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "020824f9882ce48cf407c9441597a29a750fc1f5": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "84c0897740e28cdac57fdc325f189154769c893b", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "4b63ab0818358a649fd017e9ec0cdd72125daaf7", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "fe695582229b4e801be05df39e3213fcfeb73c97", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "020824f9882ce48cf407c9441597a29a750fc1f5", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["dbbb969d59b066c3f9197ebc3863cc4f54dae5d2"], "nameRev": "020824f9882ce48cf407c9441597a29a750fc1f5 tags/v2.1~37", "commitMessage": "Load in Junit tests (#1653)\n\nFixes #1651", "commitDateTime": "2019-12-02 18:35:33", "authoredDateTime": "2019-12-02 18:35:33", "commitGitStats": [{"filePath": "leakcanary-object-watcher-android/build.gradle", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "leakcanary-object-watcher-android/src/main/java/leakcanary/internal/InternalAppWatcher.kt", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "leakcanary-object-watcher-android/src/test/java/leakcanary/AppWatcherTest.kt", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "TransactionTooLargeException", "body": "### TransactionTooLargeException\r\n\r\n[com.squareup.leakcanary.internal.DisplayLeakActivity.shareLeak(DisplayLeakActivity.java:199)]\r\n\r\n### Steps to Reproduce\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\n\r\n1. [First Step]\r\n2. [Second Step]\r\n3. [and so on...]\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\n### Version Information\r\n\r\n* LeakCanary version:1.6.3\r\n* Android OS version:9.0\r\n* Gradle version:3.1.8\r\n\r\n### Additional Information\r\n\r\nAny additional information, configuration or data that might be necessary to reproduce the issue.\r\n", "url": "https://github.com/square/leakcanary/issues/1646", "user": "SmallLee", "labels": ["type: bug"], "created": "2019-11-27 04:37:26", "closed": "2019-11-27 17:24:09", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Sources missing in Maven Central", "body": "https://repo1.maven.org/maven2/com/squareup/leakcanary/leakcanary-android-core/2.0-beta-5/leakcanary-android-core-2.0-beta-5-sources.jar\r\n\r\nThe sources jar is uploaded but it's empty.  I suspect this happened with the Kotlin conversion.", "url": "https://github.com/square/leakcanary/issues/1643", "user": "pyricau", "labels": ["type: bug"], "created": "2019-11-26 19:51:54", "closed": "2019-11-27 02:29:46", "commits": {"9cd9704366144e052570b74ffd89efaa6eff5a4c": {"commitGHEventType": "referenced", "commitUser": "jrodbx"}, "65bc57e48c9740542859131bae40918ffcd66ca2": {"commitGHEventType": "referenced", "commitUser": "jrodbx"}, "819d3ebedaa8abfde9c27986beea80c04420144a": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9cd9704366144e052570b74ffd89efaa6eff5a4c", "commitGHEventType": "referenced", "commitUser": "jrodbx", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "65bc57e48c9740542859131bae40918ffcd66ca2", "commitGHEventType": "referenced", "commitUser": "jrodbx", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "819d3ebedaa8abfde9c27986beea80c04420144a", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["7c339c07a72938ff8962f6412442fe0f509fa3cc"], "nameRev": "819d3ebedaa8abfde9c27986beea80c04420144a tags/v2.0~3", "commitMessage": "Publish sources to Maven Central (#1644)\n\nPart of #1643", "commitDateTime": "2019-11-26 15:21:05", "authoredDateTime": "2019-11-26 18:21:05", "commitGitStats": [{"filePath": "gradle/gradle-mvn-push.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "LeakCanary beta 4 fails to find leak that beta 3 does", "body": "### Description\r\n\r\nLeakCanary beta 3 correctly sees [BiometricPrompt](https://developer.android.com/reference/android/hardware/biometrics/BiometricPrompt.html) holding on to the `mAuthenticationCallback` field. Logcat snippets showing both versions processing the leaking event are [here](https://gist.github.com/msfjarvis/c955835b7074722c8d61f8d553c01319).\r\n\r\n### Steps to Reproduce\r\n\r\nSample project: https://github.com/msfjarvis/leakcanary-test-project\r\n\r\n1. Checkout the sample project to [`d3f9bbfedf78fc3bdb2ecc889e7bfc4637835fa3`](https://github.com/msfjarvis/leakcanary-test-project/commit/d3f9bbfedf78fc3bdb2ecc889e7bfc4637835fa3), so you can be on LeakCanary beta 3. \r\n2. Install and launch the app, authenticate with fingerprint, and then use home to go back. LeakCanary will automatically analyze and find the leak.\r\n3. Now switch to `master` and repeat step 2, LeakCanary will dump heap and analyze it again, but will fail to find any leaks.\r\n\r\n**Expected behavior:** LeakCanary beta 4 should also see the leak\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-beta-4\r\n* Android OS version: 10\r\n* Gradle version: 6.0.1\r\n\r\n### Additional Information\r\n\r\nThis exact leak also [seems to exist](https://stackoverflow.com/questions/53481621/memory-leak-but-how-can-i-pass-a-different-context-than-the-one-of-the-activity/53825372#53825372) in [FingerprintManager](https://developer.android.com/reference/android/hardware/fingerprint/FingerprintManager.html) as well and was never fixed. I haven't found any fixes or workarounds yet so an update to framework leaks might be in order.", "url": "https://github.com/square/leakcanary/issues/1634", "user": "msfjarvis", "labels": ["type: bug"], "created": "2019-11-23 10:54:51", "closed": "2019-11-25 19:00:24", "commits": {"2860a3cf323a3cf2bea457c4ecead80432ba43c5": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "aff338544b5eebbb0b3c792c628cca11fa888373": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "2860a3cf323a3cf2bea457c4ecead80432ba43c5", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "aff338544b5eebbb0b3c792c628cca11fa888373", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["d650eff2252db6f518d26814d2abdf523b5bd58c"], "nameRev": "aff338544b5eebbb0b3c792c628cca11fa888373 tags/v2.0-beta-5~1", "commitMessage": "Fix bug in handling JNI roots (#1636)\n\n* When adding support for native reference leaks (879ab7c) there was a missing bracket in an if/else branch that led to all native gc roots being ignored.\r\n\r\nFixes #1634", "commitDateTime": "2019-11-25 11:00:23", "authoredDateTime": "2019-11-25 11:00:23", "commitGitStats": [{"filePath": "shark/src/main/java/shark/internal/PathFinder.kt", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "shark/src/test/java/shark/HeapAnalyzerTest.kt", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Warning: Multiple substutions in leak_canary_about_message missing proper multiple substution markup", "body": "### Description\r\n\r\n[Description of the issue]\r\nWhen using latest Leak Canary within Android Studio 3.5.2 we get the following warning generated from the `leak_canary_about_message`:\r\n```\r\nwarn: multiple substitutions specified in non-positional format; did you mean to add the formatted=\"false\" attribute?.\r\n```\r\n\r\nI think the fix is as simple as changing the string to include the positional markers:\r\n```xml\r\n<string name=\"leak_canary_about_message\"><![CDATA[This is a dev extension for\r\n  <b>%1$s</b> (<i>%2$s</i>), automatically added by the LeakCanary library.<br><br>\r\n  <a href=\"https://github.com/square/leakcanary\">LeakCanary</a> is a memory leak detection library for Android, created\r\n  and open source by <a href=\"https://twitter.com/Piwai\">Pierre-Yves Ricau</a> at <a href=\"https://square.github.io\">Square</a>.<br><br>\r\n  You can learn more about memory leaks at <a href=\"https://squ.re/leaks\">https://squ.re/leaks</a>.<br><br>\r\n  We welcome contributions from the community, please do not hesitate to\r\n  <a href=\"https://github.com/square/leakcanary/issues\">report an issue</a> or open a pull request!<br>\r\n]]></string>\r\n```\r\n\r\n### Steps to Reproduce\r\nJust include latest Leak Canary, build, and watch your build warnings.\r\n\r\n\r\n**Expected behavior:**\r\nNo warning and for the string to follow multiple substitution and formatting guidelines for Android Studio 3.5.2\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 1.6.3\r\n* Android OS version: N/A\r\n* Android Studio version: 3.5.2 ", "url": "https://github.com/square/leakcanary/issues/1630", "user": "DanEdgarTarget", "labels": ["type: bug"], "created": "2019-11-20 13:11:33", "closed": "2019-11-23 00:09:56", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "NullPointerException", "body": "### Description\r\n\r\n\u8fd0\u884c\u65f6\u5d29\u6e83\r\ndebugImplementation 'com.squareup.leakcanary:leakcanary-android:1.3'\r\n### Steps to Reproduce\r\n\r\n![image](https://user-images.githubusercontent.com/23046221/69112452-36a27500-0abb-11ea-92c1-fbd18585b88b.png)\r\n![image](https://user-images.githubusercontent.com/23046221/69113626-7f0f6200-0abe-11ea-8665-5158b766d519.png)\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\n### Version Information\r\n\r\n* leakcanary-android:1.3:\r\n* Android OS  28:\r\n* Gradle gradle-4.6:\r\n", "url": "https://github.com/square/leakcanary/issues/1626", "user": "hfyqsy", "labels": ["type: bug"], "created": "2019-11-19 03:19:52", "closed": "2019-11-19 03:44:03", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "ava.lang.NoSuchMethodError: No interface method getBuffer()Lokio/Buffer", "body": "### Description\r\n\r\njava.lang.NoSuchMethodError: No interface method getBuffer()Lokio/Buffer\r\n\r\n![viber_image_2019-11-18_13-30-09](https://user-images.githubusercontent.com/13106194/69051771-f933de00-0a0d-11ea-914b-f28f4584f3cf.jpg)\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-beta-3\r\n* Android OS version: all\r\n* Gradle version: 4.10.2\r\n\r\n### Additional Information\r\n\r\n```\r\njava.lang.NoSuchMethodError: No interface method getBuffer()Lokio/Buffer; in class Lokio/BufferedSource; or its super classes (declaration of 'okio.BufferedSource' appears in /data/app/com.viber.voip-6ojoFjZTeEeqwsTlqLMPvA==/base.apk!classes5.dex)\r\nat shark.Hprof.moveReaderTo(Hprof.kt:43)\r\nat shark.internal.HprofInMemoryIndex$Companion.createReadingHprof(HprofInMemoryIndex.kt:404)\r\nat shark.internal.HprofInMemoryIndex$Companion.createReadingHprof$default(HprofInMemoryIndex.kt:346)\r\nat shark.HprofHeapGraph$Companion.indexHprof(HprofHeapGraph.kt:187)\r\nat shark.HeapAnalyzer.analyze(HeapAnalyzer.kt:100)\r\nat leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:61) \r\nat leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\nat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:78)\r\nat android.os.Handler.dispatchMessage(Handler.java:107) at android.os.Looper.loop(Looper.java:214)\r\nat android.os.HandlerThread.run(HandlerThread.java:67)\r\n```\r\n", "url": "https://github.com/square/leakcanary/issues/1624", "user": "alexander-smityuk", "labels": ["type: bug"], "created": "2019-11-18 12:30:27", "closed": "2019-12-18 11:01:44", "commits": {"ac8710cc7403308f62f806a86374df5990fba48c": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "f18c8fc61feb9fbbcad91896345adb80ad0333dd": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "de4e0616c763906b7f4665285def6794b087bc08": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "a42f078465aa2fedfff4c2317ed339fa436ae1e1": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 29.00027777777778, "commitsDetails": [{"commitHash": "ac8710cc7403308f62f806a86374df5990fba48c", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f18c8fc61feb9fbbcad91896345adb80ad0333dd", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "de4e0616c763906b7f4665285def6794b087bc08", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "a42f078465aa2fedfff4c2317ed339fa436ae1e1", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["73d68945120a66a1b6ce798516eec67e39591fab"], "nameRev": "a42f078465aa2fedfff4c2317ed339fa436ae1e1 tags/v2.1~20", "commitMessage": "Backward compatibility with Okio 1.x (#1677)\n\nLeakCanary was using APIs introduced in Okio 2.x (extension functions), which breaks any consumers that forces Okio to 1.x . This change reverts to using the 1.x APIs. Unfortunately we cannot directly compile against 2.x because the deprecated APIs have an Error deprecation level. So here the module that depends on Okio compiles against 1.x, and then its consumer module depends on 2.x so that the resolution defaults to the higher version. This has the advantage of enforcing that we write code that compiles against two versions of Okio\r\n\r\nFixes #1624", "commitDateTime": "2019-12-18 12:01:43", "authoredDateTime": "2019-12-18 12:01:43", "commitGitStats": [{"filePath": "build.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "shark-hprof/build.gradle", "insertions": 8, "deletions": 1, "lines": 9}, {"filePath": "shark-hprof/src/main/java/shark/Hprof.kt", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "shark-hprof/src/main/java/shark/HprofWriter.kt", "insertions": 5, "deletions": 8, "lines": 13}, {"filePath": "shark/build.gradle", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "crash", "body": "2019-11-18 10:19:20.047 2147-4873/? W/ContentService: Observer android.database.IContentObserver$Stub$Proxy@8002e8a is already registered.\r\n2019-11-18 10:19:20.057 15306-15306/com.example.leakcanary D/StrictMode: StrictMode policy violation; ~duration=138 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=327743 violation=2\r\n        at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1440)\r\n        at libcore.io.BlockGuardOs.open(BlockGuardOs.java:203)\r\n        at libcore.io.IoUtils.canOpenReadOnly(IoUtils.java:163)\r\n        at java.lang.Runtime.loadLibrary0(Runtime.java:1028)\r\n        at java.lang.System.loadLibrary(System.java:1657)\r\n        at com.qualcomm.qti.Performance.<clinit>(Performance.java:19)\r\n        at java.lang.Class.classForName(Native Method)\r\n        at java.lang.Class.forName(Class.java:453)\r\n        at java.lang.Class.forName(Class.java:378)\r\n        at android.util.BoostFramework.<init>(BoostFramework.java:98)\r\n        at android.widget.OverScroller$SplineOverScroller.<init>(OverScroller.java:722)\r\n        at android.widget.OverScroller.<init>(OverScroller.java:79)\r\n        at android.widget.OverScroller.<init>(OverScroller.java:61)\r\n        at android.widget.OverScroller.<init>(OverScroller.java:51)\r\n        at com.android.internal.widget.ActionBarOverlayLayout.init(ActionBarOverlayLayout.java:190)\r\n        at com.android.internal.widget.ActionBarOverlayLayout.<init>(ActionBarOverlayLayout.java:177)\r\n        at java.lang.reflect.Constructor.newInstance0(Native Method)\r\n        at java.lang.reflect.Constructor.newInstance(Constructor.java:334)\r\n        at android.view.LayoutInflater.createView(LayoutInflater.java:650)\r\n        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:797)\r\n        at android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:737)\r\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:492)\r\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:423)\r\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:374)\r\n        at com.android.internal.policy.DecorView.onResourcesLoaded(DecorView.java:2102)\r\n        at com.android.internal.policy.PhoneWindow.generateLayout(PhoneWindow.java:2737)\r\n        at com.android.internal.policy.PhoneWindow.installDecor(PhoneWindow.java:2843)\r\n        at com.android.internal.policy.PhoneWindow.setContentView(PhoneWindow.java:455)\r\n        at android.app.Activity.setContentView(Activity.java:2774)\r\n        at com.example.leakcanary.MainActivity.onCreate(MainActivity.kt:29)\r\n        at android.app.Activity.performCreate(Activity.java:7259)\r\n        at android.app.Activity.performCreate(Activity.java:7250)\r\n        at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1215)\r\n        at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2928)\r\n        at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:3053)\r\n        at android.app.ActivityThread.-wrap11(Unknown Source:0)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1772)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:197)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7022)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:515)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:837)\r\n2019-11-18 10:19:20.058 15306-15306/com.example.leakcanary D/AndroidRuntime: Shutting down VM\r\n2019-11-18 10:19:20.061 15306-15306/com.example.leakcanary E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.example.leakcanary, PID: 15306\r\n    android.os.StrictMode$StrictModeViolation: policy=327743 violation=2\r\n        at android.os.StrictMode.executeDeathPenalty(StrictMode.java:1686)\r\n        at android.os.StrictMode.-wrap3(Unknown Source:0)\r\n        at android.os.StrictMode$AndroidBlockGuardPolicy.handleViolation(StrictMode.java:1679)\r\n        at android.os.StrictMode$AndroidBlockGuardPolicy$1.run(StrictMode.java:1557)\r\n        at android.os.Handler.handleCallback(Handler.java:790)\r\n        at android.os.Handler.dispatchMessage(Handler.java:99)\r\n        at android.os.Looper.loop(Looper.java:197)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7022)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:515)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:837)\r\n2019-11-18 10:19:20.064 2147-4873/? W/ActivityManager:   Force finishing activity com.example.leakcanary/.MainActivity", "url": "https://github.com/square/leakcanary/issues/1623", "user": "tianshaokai", "labels": ["type: bug"], "created": "2019-11-18 02:20:07", "closed": "2019-11-18 05:59:11", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Unable to get provider leakcanary.internal.AppWatcherInstaller", "body": "### Description\r\n\r\nHi!\r\n\r\n**Scenario:**\r\nI'm building an instant app through app bundle. At the time of launching the instant app I get a runtime exception.\r\nThere is a way to disable leak canary when is instant app?\r\n\r\n**StackTrace:**\r\n```\r\njava.lang.RuntimeException: Unable to get provider leakcanary.internal.AppWatcherInstaller: kotlin.KotlinNullPointerException\r\n        at android.app.ActivityThread.installProvider(ActivityThread.java:6988)\r\n        at android.app.ActivityThread.installContentProviders(ActivityThread.java:6528)\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6445)\r\n        at android.app.ActivityThread.access$1300(ActivityThread.java:219)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1859)\r\n        at android.os.Handler.dispatchMessage(Handler.java:107)\r\n        at android.os.Looper.loop(Looper.java:214)\r\n        at android.app.ActivityThread.main(ActivityThread.java:7356)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)\r\n     Caused by: kotlin.KotlinNullPointerException\r\n        at leakcanary.internal.InternalLeakCanary.addDynamicShortcut(InternalLeakCanary.kt:124)\r\n        at leakcanary.internal.InternalLeakCanary.invoke(InternalLeakCanary.kt:83)\r\n        at leakcanary.internal.InternalLeakCanary.invoke(InternalLeakCanary.kt:30)\r\n        at leakcanary.internal.InternalAppWatcher.install(InternalAppWatcher.kt:70)\r\n        at leakcanary.internal.AppWatcherInstaller.onCreate(AppWatcherInstaller.kt:19)\r\n        at android.content.ContentProvider.attachInfo(ContentProvider.java:2092)\r\n        at android.content.ContentProvider.attachInfo(ContentProvider.java:2066)\r\n        at android.app.ActivityThread.installProvider(ActivityThread.java:6983)\r\n        at android.app.ActivityThread.installContentProviders(ActivityThread.java:6528)\u00a0\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6445)\u00a0\r\n        at android.app.ActivityThread.access$1300(ActivityThread.java:219)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1859)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:107)\u00a0\r\n        at android.os.Looper.loop(Looper.java:214)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:7356)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:492)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:930)\u00a0\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\nFrom an instant enabled dynamic feature:\r\n\r\n1. Add leak canary dependency to gradle\r\n2. Run instant app feature\r\n\r\n**Expected behavior:**\r\nInstant app should run normally without crashing at launch time.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-beta-3\r\n* Android OS version: 10\r\n* Gradle version: 5.6.4\r\n\r\n### Additional Information\r\n\r\nAs I could investigate, the problem is here https://github.com/square/leakcanary/blob/53fa1902d3eb3aec9d99257a517dc6ad198acc39/leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt#L124\r\nLooks like in instant app the `ShortcutManager` service is not available.", "url": "https://github.com/square/leakcanary/issues/1612", "user": "SmasSive", "labels": ["type: bug"], "created": "2019-11-08 10:03:06", "closed": "2019-11-08 22:09:47", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "FATAL EXCEPTION: IntentService[HeapAnalyzerService]", "body": "### Description\r\n\r\nMy App runs well before 'debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3', but it crash after that.\r\nThe application using kotlin and androidx, enable multiple-dex.\r\n\r\n```\r\n    --------- beginning of crash\r\n10723-10859/com.wizarpos.nigeriapay E/AndroidRuntime: FATAL EXCEPTION: IntentService[HeapAnalyzerService]\r\n    kotlin.TypeCastException: null cannot be cast to non-null type java.io.File\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:46)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n        at android.os.Handler.dispatchMessage(Handler.java:102)\r\n        at android.os.Looper.loop(Looper.java:148)\r\n        at android.os.HandlerThread.run(HandlerThread.java:61)\r\n```\r\n", "url": "https://github.com/square/leakcanary/issues/1607", "user": "shelpy", "labels": ["type: bug"], "created": "2019-10-25 04:52:48", "closed": "2019-11-13 19:06:51", "commits": {"553641edcc02d62009ec8bf7a4c5abb40a71cd04": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "c9f2e66977fa1133237b922920ef5c68f436f665": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 19.00027777777778, "commitsDetails": [{"commitHash": "553641edcc02d62009ec8bf7a4c5abb40a71cd04", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["646ab620f810aefbfc8eeda3d09c43bfe1c41232"], "nameRev": "553641edcc02d62009ec8bf7a4c5abb40a71cd04 remotes/origin/py/missing_extra", "commitMessage": "Don't crash on missing extra\n\nFixes #1607\n", "commitDateTime": "2019-11-13 10:24:56", "authoredDateTime": "2019-11-13 10:24:56", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapAnalyzerService.kt", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c9f2e66977fa1133237b922920ef5c68f436f665", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["b31c6c3b04f5da7ae4cfa403dd4778c3d854f503"], "nameRev": "c9f2e66977fa1133237b922920ef5c68f436f665 tags/v2.0-beta-4~14", "commitMessage": "Don't crash on missing extra (#1615)\n\nFixes #1607", "commitDateTime": "2019-11-13 11:06:50", "authoredDateTime": "2019-11-13 11:06:50", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapAnalyzerService.kt", "insertions": 4, "deletions": 3, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["553641edcc02d62009ec8bf7a4c5abb40a71cd04"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 3, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/internal/HeapAnalyzerService.kt"]}, {"title": "BuildError(HeapAnalysisFailureScreen$createView$1$1$1  NPE)", "body": "### Description\r\n\r\n[Description of the issue]\r\nBuild Error\r\nException in thread \"main\" java.lang.NullPointerException: Couldn't find outer class leakcanary/internal/activity/screen/HeapAnalysisFailureScreen$createView$1$1 of leakcanary/internal/activity/screen/HeapAnalysisFailureScreen$createView$1$1$1\r\n\tat com.google.common.base.Preconditions.checkNotNull(Preconditions.java:1079)\r\n\tat com.google.devtools.build.android.desugar.ClassVsInterface.isOuterInterface(ClassVsInterface.java:56)\r\n\tat com.google.devtools.build.android.desugar.InterfaceDesugaring.visitOuterClass(InterfaceDesugaring.java:246)\r\n\tat org.objectweb.asm.ClassReader.accept(ClassReader.java:638)\r\n\tat org.objectweb.asm.ClassReader.accept(ClassReader.java:500)\r\n\tat com.google.devtools.build.android.desugar.Desugar.desugarClassesInInput(Desugar.java:477)\r\n\tat com.google.devtools.build.android.desugar.Desugar.desugarOneInput(Desugar.java:361)\r\n\tat com.google.devtools.build.android.desugar.Desugar.desugar(Desugar.java:314)\r\n\tat com.google.devtools.build.android.desugar.Desugar.main(Desugar.java:711)\r\n\r\n\r\n### Steps to Reproduce\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\n\r\n1. [First Step] Add LeakCanary to build.gradle \r\n2. [Second Step] gradle sync\r\n3. [and so on...] assembleDebug\r\n\r\n**Expected behavior:** [What you expect to happen]\r\nbuild success \r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-beta-3\r\n* Android OS version:  all\r\n* Gradle version: 4.10.1\r\n\r\n### Additional Information\r\nBuild tools: 26.0.2\r\ncompile sdk: 27\r\n\r\nAny additional information, configuration or data that might be necessary to reproduce the issue.\r\n", "url": "https://github.com/square/leakcanary/issues/1605", "user": "nariyoon", "labels": ["type: bug"], "created": "2019-10-16 05:59:15", "closed": "2019-10-17 01:52:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": " Unable to get provider leakcanary.internal.LeakCanaryFileProvider", "body": "Error message\uff1a\r\n\r\n```\r\nE/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.xincaidong.truemerger, PID: 29219\r\n    java.lang.RuntimeException: Unable to get provider leakcanary.internal.LeakCanaryFileProvider: java.lang.ClassNotFoundException: Didn't find class \"leakcanary.internal.LeakCanaryFileProvider\" on path: DexPathList[[zip file \"/data/app/com.xincaidong.truemerger-dH6uDnSLWeCztjnKidrcTA==/base.apk\"],nativeLibraryDirectories=[/data/app/com.xincaidong.truemerger-dH6uDnSLWeCztjnKidrcTA==/lib/arm64, /data/app/com.xincaidong.truemerger-dH6uDnSLWeCztjnKidrcTA==/base.apk!/lib/arm64-v8a, /system/lib64, /vendor/lib64]]\r\n        at android.app.ActivityThread.installProvider(ActivityThread.java:6542)\r\n        at android.app.ActivityThread.installContentProviders(ActivityThread.java:6030)\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5936)\r\n        at android.app.ActivityThread.access$1200(ActivityThread.java:200)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1673)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:201)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6815)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:547)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:873)\r\n     Caused by: java.lang.ClassNotFoundException: Didn't find class \"leakcanary.internal.LeakCanaryFileProvider\" on path: DexPathList[[zip file \"/data/app/com.xincaidong.truemerger-dH6uDnSLWeCztjnKidrcTA==/base.apk\"],nativeLibraryDirectories=[/data/app/com.xincaidong.truemerger-dH6uDnSLWeCztjnKidrcTA==/lib/arm64, /data/app/com.xincaidong.truemerger-dH6uDnSLWeCztjnKidrcTA==/base.apk!/lib/arm64-v8a, /system/lib64, /vendor/lib64]]\r\n        at dalvik.system.BaseDexClassLoader.findClass(BaseDexClassLoader.java:171)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:379)\r\n        at java.lang.ClassLoader.loadClass(ClassLoader.java:312)\r\n        at android.app.AppComponentFactory.instantiateProvider(AppComponentFactory.java:121)\r\n        at androidx.core.app.CoreComponentFactory.instantiateProvider(CoreComponentFactory.java:60)\r\n        at android.app.ActivityThread.installProvider(ActivityThread.java:6526)\r\n        at android.app.ActivityThread.installContentProviders(ActivityThread.java:6030)\u00a0\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5936)\u00a0\r\n        at android.app.ActivityThread.access$1200(ActivityThread.java:200)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1673)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\u00a0\r\n        at android.os.Looper.loop(Looper.java:201)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:6815)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:547)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:873)\u00a0\r\n```\r\n\r\nDependency\uff1a\r\n```\r\ndebugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-3'\r\n```\r\n\r\n\u4e0d\u96c6\u6210\u7684\u65f6\u5019\uff0c\u90fd\u662f\u53ef\u4ee5\u8fd0\u884c\u7684\uff0c\u4e00\u96c6\u6210\u4e4b\u540e\u5c31\u8dd1\u4e0d\u4e86\u3002\u9879\u76ee\u662f\u4f7f\u7528\u4e86AndroidX\u7684\uff0c\u8bed\u8a00\u662fjava\r\n\r\nEdit with translation from Google translate:\r\n\r\n> When it is not integrated, it can be run, and it cannot run after integration. The project uses AndroidX and the language is java", "url": "https://github.com/square/leakcanary/issues/1597", "user": "CaiJinFu", "labels": ["type: bug"], "created": "2019-09-26 08:01:54", "closed": "2020-02-05 18:23:50", "commits": {}, "ttf": 132.00027777777777, "commitsDetails": []}, {"title": "LeakActivity leaks on Android 10", "body": "### Description\r\n\r\nLeakActivity leaks on Android 10 due to known `IRequestFinishCallback` issue.\r\n\r\n```\r\nApplicationLeak(className=leakcanary.internal.activity.LeakActivity, leakTrace=\r\n\u252c\r\n\u251c\u2500 android.app.Activity$1\r\n\u2502    Leaking: UNKNOWN\r\n\u2502    Anonymous subclass of android.app.IRequestFinishCallback$Stub\r\n\u2502    GC Root: Global variable in native code\r\n\u2502    \u2193 Activity$1.this$0\r\n\u2502                 ~~~~~~\r\n\u2570\u2192 leakcanary.internal.activity.LeakActivity\r\n\u200b     Leaking: YES (Activity#mDestroyed is true and ObjectWatcher was watching this)\r\n\u200b     key = c5a0cfcc-d1ed-4aba-9037-9340c66a6ef3\r\n\u200b     watchDurationMillis = 5226\r\n\u200b     retainedDurationMillis = 210\r\n, retainedHeapByteSize=126160)\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n1. Build app with LeakCanary dependencies, open 'Leaks' app and use back button to exit\r\n\r\n**Expected behavior:** Activity does not leak\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-beta-3\r\n* Android OS version: 10\r\n* Gradle version: 5.6.2\r\n\r\n### Additional Information\r\n\r\nA Googler marked the leak as fixed on the [issue tracker](https://issuetracker.google.com/issues/139738913) saying the fix will be included in the next system update so maybe this is not worth adding workarounds for.", "url": "https://github.com/square/leakcanary/issues/1594", "user": "msfjarvis", "labels": ["type: bug"], "created": "2019-09-21 07:33:25", "closed": "2019-10-29 04:57:48", "commits": {}, "ttf": 37.000277777777775, "commitsDetails": []}, {"title": "Caused by: java.lang.IllegalArgumentException: Hprof file is 0 byte length", "body": "### Description\r\n\r\nWe are seeing instrumentation tests failing due to the following stack trace:\r\n```\r\n:\r\n    at shark.Hprof$Companion.open(Hprof.kt:70)\r\n    at shark.HeapAnalyzer.analyze(HeapAnalyzer.kt:98)\r\n    at leakcanary.InstrumentationLeakDetector.detectLeaks(InstrumentationLeakDetector.kt:169)\r\n    at leakcanary.FailTestOnLeakRunListener.detectLeaks(FailTestOnLeakRunListener.kt:105)\r\n    at leakcanary.FailTestOnLeakRunListener.testFinished(FailTestOnLeakRunListener.kt:87)\r\n    at org.junit.runner.notification.SynchronizedRunListener.testFinished(SynchronizedRunListener.java:56)\r\n    at org.junit.runner.notification.RunNotifier$7.notifyListener(RunNotifier.java:190)\r\n    at org.junit.runner.notification.RunNotifier$SafeNotifier.run(RunNotifier.java:72)\r\n    at org.junit.runner.notification.RunNotifier.fireTestFinished(RunNotifier.java:187)\r\n    at org.junit.internal.runners.model.EachTestNotifier.fireTestFinished(EachTestNotifier.java:38)\r\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:331)\r\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\r\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\r\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n    at androidx.test.runner.AndroidJUnit4.run(AndroidJUnit4.java:104)\r\n    at org.junit.runners.Suite.runChild(Suite.java:128)\r\n    at org.junit.runners.Suite.runChild(Suite.java:27)\r\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n    at androidx.test.internal.runner.TestExecutor.execute(TestExecutor.java:56)\r\n    at androidx.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:392)\r\n    at com.XXX.test.instrumentation.runner.XXXAndroidJUnitRunner.onStart(XXXAndroidJUnitRunner.java:54)\r\n    at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:2022)\r\nCaused by: :\r\nCaused by: java.lang.IllegalArgumentException: Hprof file is 0 byte length\r\n```\r\nLeakcanary is enabled on Instrumentation tests with the appraoch suggested in:\r\nhttps://github.com/square/leakcanary/blob/133a8f1febf4156ab139c9b4a436f669e501b077/docs/api/leakcanary-android-instrumentation/leakcanary/-instrumentation-leak-detector/-init-.md#add-an-instrumentation-test-listener\r\n\r\nThe issue happens ONLY on Moto G4 - athene with Android 7.\r\nIt appears that in slow devices, there might be a race condition between when heap is dumped and when heap is parsed.\r\n\r\n**Update**: We ran the tests on several devices running Android 7, however we noticed the issue only on Moto G4 - athene.\r\n### Steps to Reproduce\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\n\r\n1. [First Step]\r\n2. [Second Step]\r\n3. [and so on...]\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: `2.0-beta-3`\r\n* Android OS version: 7\r\n* Gradle version:\r\n\r\n### Additional Information\r\n\r\nAny additional information, configuration or data that might be necessary to reproduce the issue.\r\n", "url": "https://github.com/square/leakcanary/issues/1592", "user": "sahil2441", "labels": ["type: bug"], "created": "2019-09-19 21:56:03", "closed": "2019-11-13 18:37:00", "commits": {"b31c6c3b04f5da7ae4cfa403dd4778c3d854f503": {"commitGHEventType": "closed", "commitUser": "pyricau"}}, "ttf": 54.000277777777775, "commitsDetails": [{"commitHash": "b31c6c3b04f5da7ae4cfa403dd4778c3d854f503", "commitGHEventType": "closed", "commitUser": "pyricau", "commitParents": ["60e7777b44b0336f0e25997ec2eb4b4c04ff9ef8"], "nameRev": "b31c6c3b04f5da7ae4cfa403dd4778c3d854f503 tags/v2.0-beta-4~15", "commitMessage": "Wait before analysis in CI\n\nFixes #1592\n", "commitDateTime": "2019-11-13 10:36:26", "authoredDateTime": "2019-11-13 10:36:26", "commitGitStats": [{"filePath": "leakcanary-android-instrumentation/src/main/java/leakcanary/InstrumentationLeakDetector.kt", "insertions": 4, "deletions": 0, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b31c6c3b04f5da7ae4cfa403dd4778c3d854f503"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-instrumentation/src/main/java/leakcanary/InstrumentationLeakDetector.kt"]}, {"title": "Beta3 crashes during analysis with leakcanary-android-process", "body": "### Description\r\nWhen run in a separate process, Leakcanary crashes during heap analysis with:\r\n\r\n```\r\n Process: com.airbnb.android.development:leakcanary, PID: 1125\r\n java.lang.ExceptionInInitializerError\r\n \tat leakcanary.internal.ForegroundService.showForegroundNotification(ForegroundService.kt:50)\r\n \tat leakcanary.internal.ForegroundService.onCreate(ForegroundService.kt:33)\r\n \tat android.app.ActivityThread.handleCreateService(ActivityThread.java:3532)\r\n \tat android.app.ActivityThread.access$1300(ActivityThread.java:199)\r\n \tat android.app.ActivityThread$H.handleMessage(ActivityThread.java:1666)\r\n \tat android.os.Handler.dispatchMessage(Handler.java:106)\r\n \tat android.os.Looper.loop(Looper.java:193)\r\n \tat android.app.ActivityThread.main(ActivityThread.java:6669)\r\n \tat java.lang.reflect.Method.invoke(Native Method)\r\n \tat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\n \tat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)\r\n Caused by: kotlin.UninitializedPropertyAccessException: lateinit property application has not been initialized\r\n \tat leakcanary.internal.InternalLeakCanary.getApplication(InternalLeakCanary.kt:36)\r\n \tat leakcanary.internal.Notifications.<clinit>(Notifications.kt:36)\r\n \t... 11 more\r\n```\r\n\r\nI can get it to work if I manually add the app watcher during application creation with\r\n```\r\nif (LeakCanaryProcess.isInAnalyzerProcess(application)) {\r\n      AppWatcher.manualInstall(application)\r\n }\r\n```\r\n\r\n### Steps to Reproduce\r\nFollow the documentation to run heap analysis in a separate process by replacing the normal `leakcanary-android` dependency with `leakcanary-android-process`. \r\n\r\n1. Open Leaks activity\r\n2. Import any hprof file for analysis\r\n3. Note crash\r\n\r\nThe same crash also happens if the analysis happens because of routine usage of the app.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: v2-beta3\r\n* Android OS version: 28\r\n* Gradle version: 5.1\r\n\r\n### Additional Information\r\n\r\nN/A - Don't do any custom configuration, this is using the defaults and automatic setup that leak canary applies.\r\n", "url": "https://github.com/square/leakcanary/issues/1584", "user": "elihart", "labels": ["type: bug"], "created": "2019-09-12 15:11:35", "closed": "2019-09-14 14:10:22", "commits": {"4ba0f4d5d9837e2c22e96b18b9305bf644f35a35": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "696d320ede682261f9f417b3984935cf3c2dc011": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "e827fecc34570cbfff9aada7016dbd8c2025020b": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "9810e66d9fd59eb70d1d060066307f7bbef2907f": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "4ba0f4d5d9837e2c22e96b18b9305bf644f35a35", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "696d320ede682261f9f417b3984935cf3c2dc011", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "e827fecc34570cbfff9aada7016dbd8c2025020b", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["eb635f62c460c74c873bc00df51d6f2b3bce61dc"], "nameRev": "e827fecc34570cbfff9aada7016dbd8c2025020b remotes/origin/py/process_clean", "commitMessage": "Automatic setup when using separate LeakCanary process\n\nFixes #1584\n", "commitDateTime": "2019-09-13 19:38:24", "authoredDateTime": "2019-09-13 17:43:42", "commitGitStats": [{"filePath": "docs/fundamentals.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "docs/recipes.md", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/LeakCanary.kt", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "leakcanary-android-process/src/main/AndroidManifest.xml", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "leakcanary-android/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 7, "lines": 8}, {"filePath": "leakcanary-object-watcher-android/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-object-watcher-android/src/main/java/leakcanary/AppWatcher.kt", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "leakcanary-object-watcher-android/src/main/java/leakcanary/internal/AppWatcherInstaller.kt", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "leakcanary-object-watcher-android/src/main/java/leakcanary/internal/InternalAppWatcher.kt", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9810e66d9fd59eb70d1d060066307f7bbef2907f", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["63322df0b0c937b1702b493aaed06db2500d85e5"], "nameRev": "9810e66d9fd59eb70d1d060066307f7bbef2907f tags/v2.0-beta-4~29", "commitMessage": "Automatic setup when using separate LeakCanary process (#1585)\n\nFixes #1584", "commitDateTime": "2019-09-14 07:10:21", "authoredDateTime": "2019-09-14 07:10:21", "commitGitStats": [{"filePath": "docs/fundamentals.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "docs/recipes.md", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/LeakCanary.kt", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "leakcanary-android-process/src/main/AndroidManifest.xml", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "leakcanary-android/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 7, "lines": 8}, {"filePath": "leakcanary-object-watcher-android/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-object-watcher-android/src/main/java/leakcanary/AppWatcher.kt", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "leakcanary-object-watcher-android/src/main/java/leakcanary/internal/AppWatcherInstaller.kt", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "leakcanary-object-watcher-android/src/main/java/leakcanary/internal/InternalAppWatcher.kt", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e827fecc34570cbfff9aada7016dbd8c2025020b"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 30.0, "deletions": 4.0, "lines": 34.0, "gitFilesChange": 4}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-object-watcher-android/src/main/java/leakcanary/internal/AppWatcherInstaller.kt", "leakcanary-android-core/src/main/java/leakcanary/LeakCanary.kt", "leakcanary-object-watcher-android/src/main/java/leakcanary/AppWatcher.kt", "leakcanary-object-watcher-android/src/main/java/leakcanary/internal/InternalAppWatcher.kt"]}, {"title": "Invalid Hprof? Found unknown object id", "body": "I'm getting these messages when LeakCanary analyze the heap dump.\r\n\r\n```\r\nInvalid Hprof? Found unknown object id 348267312\r\nInvalid Hprof? Found unknown object id 348783744\r\n```\r\n\r\nIt doesn't appear all the times, but it's kind of easy to reproduce it.\r\n\r\nIt seems that it's not a major problem because Leak Canary shows me all the leaks and it's paths but it's kind of strange to get that messages in a reproducible way, for this reason I'm reporting it.\r\n\r\nI attach the hprof: [2019-09-11_15-17-22_658.hprof.zip](https://github.com/square/leakcanary/files/3601087/2019-09-11_15-17-22_658.hprof.zip)\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0.0-beta-3\r\n* Android OS version: Android 9 (Emulator)\r\n* Gradle version: 5.5", "url": "https://github.com/square/leakcanary/issues/1582", "user": "BraisGabin", "labels": ["type: bug"], "created": "2019-09-11 13:54:11", "closed": "2019-09-14 14:10:59", "commits": {"6dd64c905ed3fae02e3c33510b7a240c49309447": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "3e4d0de1a420a0b0b28db3cb3309f01180055875": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "6dd64c905ed3fae02e3c33510b7a240c49309447", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["63322df0b0c937b1702b493aaed06db2500d85e5"], "nameRev": "6dd64c905ed3fae02e3c33510b7a240c49309447 remotes/origin/py/no_log_missing_objects", "commitMessage": "Remove logs for missing objects\n\nSeems like it's the nature of (Android?) hprof files to have GC roots and object arrays pointing to missing objects. This removes logs that might make devs think something is wrong.\n\nFixes #1582\n", "commitDateTime": "2019-09-13 19:55:19", "authoredDateTime": "2019-09-13 19:53:34", "commitGitStats": [{"filePath": "shark/src/main/java/shark/internal/PathFinder.kt", "insertions": 2, "deletions": 14, "lines": 16}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3e4d0de1a420a0b0b28db3cb3309f01180055875", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["9810e66d9fd59eb70d1d060066307f7bbef2907f"], "nameRev": "3e4d0de1a420a0b0b28db3cb3309f01180055875 tags/v2.0-beta-4~28", "commitMessage": "Remove logs for missing objects (#1586)\n\nSeems like it's the nature of (Android?) hprof files to have GC roots and object arrays pointing to missing objects. This removes logs that might make devs think something is wrong.\r\n\r\nFixes #1582", "commitDateTime": "2019-09-14 07:10:58", "authoredDateTime": "2019-09-14 07:10:58", "commitGitStats": [{"filePath": "shark/src/main/java/shark/internal/PathFinder.kt", "insertions": 2, "deletions": 14, "lines": 16}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6dd64c905ed3fae02e3c33510b7a240c49309447"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 14, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["shark/src/main/java/shark/internal/PathFinder.kt"]}, {"title": "LeakCanary RuntimeException when there is no label set in AndroidManifest", "body": "### Description\r\n\r\nWhen there is no label attribute set in AndroidManifest <application> tag, LeakCanary crashes on application startup.\r\n\r\n### Steps to Reproduce\r\n\r\nAny project without label attribute in <application> AndroidManifest\r\n\r\n1. Make sure you don't have label attribute set\r\n2. First install of the app without the label attribute\r\n3. start the app \r\n4. RuntimeException \r\n\r\n**Expected behavior:** Expect LeakCanary to not crash\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: issue first happened on beta-1, issue not happening on alpha-3 version\r\n* Android OS version: 8.0.0\r\n* Gradle version: gradle-5.4.1\r\n", "url": "https://github.com/square/leakcanary/issues/1572", "user": "gabrysgab", "labels": ["type: bug"], "created": "2019-09-10 10:45:29", "closed": "2019-09-11 00:32:57", "commits": {"0d0b086a789920a6c3c3ae05d7cbba278ed842ef": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "9e2b2c27f1fdd59629377c40a718f6955faaf263": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0d0b086a789920a6c3c3ae05d7cbba278ed842ef", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["879ab7ce807c3d6a3c3a7674cd559df772276d8b"], "nameRev": "0d0b086a789920a6c3c3ae05d7cbba278ed842ef remotes/origin/py/crash_no_label", "commitMessage": "Fix crash when application label is not set\n\nFixes #1572\n", "commitDateTime": "2019-09-10 16:41:22", "authoredDateTime": "2019-09-10 16:41:22", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt", "insertions": 1, "deletions": 7, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9e2b2c27f1fdd59629377c40a718f6955faaf263", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["879ab7ce807c3d6a3c3a7674cd559df772276d8b"], "nameRev": "9e2b2c27f1fdd59629377c40a718f6955faaf263 tags/v2.0-beta-4~39", "commitMessage": "Fix crash when application label is not set (#1575)\n\nFixes #1572", "commitDateTime": "2019-09-10 17:32:57", "authoredDateTime": "2019-09-10 17:32:57", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt", "insertions": 1, "deletions": 7, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0d0b086a789920a6c3c3ae05d7cbba278ed842ef"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 7, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt"]}, {"title": "Leak analysis failed", "body": "### Description\r\n\r\nGot error while debugging leaked Activity instance from VideoView.\r\n\r\n### Steps to Reproduce\r\n\r\nCan't reproduce it.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 1.6.3\r\n* Android OS version: 7.1.1\r\n* Gradle version: 5.4.1\r\n\r\n### Additional Information\r\n\r\n![image](https://user-images.githubusercontent.com/11635114/64439206-81c30380-d0da-11e9-8ce6-f4497707449d.png)", "url": "https://github.com/square/leakcanary/issues/1565", "user": "Ircover", "labels": ["type: bug"], "created": "2019-09-06 15:14:22", "closed": "2019-09-06 23:54:06", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Beta 3 has much slower heap analysis", "body": "### Description\r\n\r\nUpdating to beta 3 from beta 2 I noticed that heap analysis became much slower (I'm assuming because of changes in https://github.com/square/leakcanary/pull/1543)\r\n\r\nWe mainly use LeakCanary in instrumentation tests on CI via Firebase test lab, and with beta 3 a heap analysis takes 14 minutes. This is really problematic because Firebase test matrices time out at 30 minutes, so if multiple tests have the same leak then the test matrix can't complete.\r\n\r\nLeak canary v1, as well as v2-beta1, also had similarly slow performance that made it infeasible for us to use in instrumentation tests. Thankfully, beta 2 brought the analysis time down to about 5 minutes so we could actually use it.\r\n\r\nI'm following the standard instructions for using leak canary with instrumentation tests. We also run our Firebase tests on a Pixel 3 physical device, which is the fastest one available. Running analysis locally on an emulator is a bit faster, but still around 10 minutes.\r\n\r\n### Steps to Reproduce\r\n\r\nhprof file at:\r\nhttps://drive.google.com/file/d/1xJYE7YogS1Ae2sHyjbk5ZXlu6U0mjGBN/view?usp=sharing\r\n\r\n1. Run heap analysis on hprof file with LeakCanary v2.0-beta-3\r\n2. Takes ~14 minutes to complete on Pixel 3 Firebase device\r\n3. Heap analysis with beta 2 seemed to be about half as long.\r\n\r\n**Expected behavior:** [What you expect to happen]\r\nFor a ~70MB heap dump I'm not sure what the expected analysis time is, but this big of a regression across versions forces us to stay on beta 2 for now.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: v2.0-beta-3\r\n* Android OS version: API 28\r\n* Gradle version: 4.10.2\r\n\r\n### Additional Information\r\n\r\nAs a side note, I am using a subclass of `FailTestOnLeakRunListener` that blocks heap analysis after one leak is found (in following tests). This helps to prevent the test matrix from taking too long and timing out if several of the tests have a leak. I am not sure if our heap analysis is much slower than others, or how other people are using instrumentation tests with leak canary, but a change like this was necessary for us to even be able to use it.", "url": "https://github.com/square/leakcanary/issues/1558", "user": "elihart", "labels": ["type: bug"], "created": "2019-09-04 15:01:45", "closed": "2019-11-13 18:39:08", "commits": {}, "ttf": 70.00027777777778, "commitsDetails": []}, {"title": "Crash when clicking the \"n Leak Groups\" button in ActionBar, after loading first report", "body": "### Description\r\n\r\nLeakCanary 2.0-beta-3 crashes when the \"n Leak Groups\" button is pressed, after loading the first report.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Use an Android 4.2 device\r\n1. Run the library on an app that has a memory leak\r\n2. Click the \"Leaks\" icon in the home screen, to view the Leak report\r\n3. Click on \"Latest: xxx\" to view the first report\r\n4. Press the Back button, to go back to the previous screen\r\n5. Press the \"n Leak Groups\" button at the top left (or top right)\r\n6. Observe the crash:\r\n\r\n```java\r\nE/AndroidRuntime: FATAL EXCEPTION: main\r\n    java.lang.ArrayIndexOutOfBoundsException: length=12; index=-1\r\n        at java.util.ArrayList.remove(ArrayList.java:401)\r\n        at leakcanary.internal.navigation.NavigatingActivity.goBack(NavigatingActivity.kt:111)\r\n        at leakcanary.internal.navigation.NavigatingActivity.onOptionsItemSelected(NavigatingActivity.kt:137)\r\n        at android.app.Activity.onMenuItemSelected(Activity.java:2612)\r\n        at com.android.internal.widget.ActionBarView$4.onClick(ActionBarView.java:285)\r\n        at android.view.View.performClick(View.java:4452)\r\n        at android.view.View$PerformClick.run(View.java:18428)\r\n        at android.os.Handler.handleCallback(Handler.java:725)\r\n        at android.os.Handler.dispatchMessage(Handler.java:92)\r\n        at android.os.Looper.loop(Looper.java:176)\r\n        at android.app.ActivityThread.main(ActivityThread.java:5365)\r\n        at java.lang.reflect.Method.invokeNative(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:511)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1102)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:869)\r\n        at dalvik.system.NativeStart.main(Native Method)\r\n```\r\n\r\n**Expected behavior:**\r\n\r\n* No crash.\r\n* Either exit out of the app\r\n* Or disable the \"n Leak Groups\" button, like on other Android versions.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: LeakCanary 2.0-beta-3\r\n* Android OS version: Android 4.2\r\n* Gradle version: 5.1.1\r\n\r\n### Additional Information\r\n\r\nI believe the problem is in [this function](https://github.com/square/leakcanary/blob/724ed6fdf5d1bced571afce09e7c9202263b60a8/leakcanary-android-core/src/main/java/leakcanary/internal/navigation/NavigatingActivity.kt#L105):\r\n\r\n```kotlin\r\nfun goBack() {\r\n    onCreateOptionsMenu = NO_MENU\r\n\r\n    currentView.startAnimation(loadAnimation(this, R.anim.leak_canary_exit_backward))\r\n    container.removeView(currentView)\r\n\r\n    val latest = backstack.removeAt(backstack.size - 1)\r\n    currentScreen = latest.screen\r\n    currentView = currentScreen.createView(container)\r\n    currentView.startAnimation(loadAnimation(this, R.anim.leak_canary_enter_backward))\r\n    container.addView(currentView, 0)\r\n    latest.restore(currentView)\r\n\r\n    updateActionBar()\r\n}\r\n\r\n```\r\n\r\nPerhaps try something like this:\r\n\r\n```kotlin\r\nfun goBack() {\r\n    onCreateOptionsMenu = NO_MENU\r\n\r\n    currentView.startAnimation(loadAnimation(this, R.anim.leak_canary_exit_backward))\r\n    container.removeView(currentView)\r\n\r\n    if (backstack.size > 0) {\r\n        val latest = backstack.removeAt(backstack.size - 1)\r\n        currentScreen = latest.screen\r\n        currentView = currentScreen.createView(container)\r\n        currentView.startAnimation(loadAnimation(this, R.anim.leak_canary_enter_backward))\r\n        container.addView(currentView, 0)\r\n        latest.restore(currentView)\r\n        updateActionBar()\r\n    }\r\n}\r\n\r\n```", "url": "https://github.com/square/leakcanary/issues/1555", "user": "ozmium", "labels": ["status: help wanted", "type: bug"], "created": "2019-08-29 17:18:06", "closed": "2019-09-11 01:51:07", "commits": {"fbd4287097ecbd7eb46395772ff88f5c0f23688a": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "108c3ecea8eb0923f9f046fbe5634a3967705279": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "274f58f96e8de7dcd3000c06ba3e2b50e427747d": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "fbd4287097ecbd7eb46395772ff88f5c0f23688a", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "108c3ecea8eb0923f9f046fbe5634a3967705279", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["d0b883cd42e6493020edd418873ae3d2f60d8f05"], "nameRev": "108c3ecea8eb0923f9f046fbe5634a3967705279 remotes/origin/py/back_crash", "commitMessage": "Fix crash when pressing home from root screen\n\nThis bug only happens on older Android devices.\n\nFixes #1555\n", "commitDateTime": "2019-09-10 17:53:16", "authoredDateTime": "2019-09-10 17:52:13", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/navigation/NavigatingActivity.kt", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "274f58f96e8de7dcd3000c06ba3e2b50e427747d", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["5391fcd0ec8c28137b655c520aada411a56d064d"], "nameRev": "274f58f96e8de7dcd3000c06ba3e2b50e427747d tags/v2.0-beta-4~35", "commitMessage": "Fix crash when pressing home from root screen (#1578)\n\nThis bug only happens on older Android devices.\r\n\r\nFixes #1555", "commitDateTime": "2019-09-10 18:51:06", "authoredDateTime": "2019-09-10 18:51:06", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/navigation/NavigatingActivity.kt", "insertions": 3, "deletions": 1, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["108c3ecea8eb0923f9f046fbe5634a3967705279"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3.0, "deletions": 1.0, "lines": 4.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/internal/navigation/NavigatingActivity.kt"]}, {"title": "Flakiness in leak detection in instrumentation tests ", "body": "### Description\r\n\r\nIn our App we integrated leakcanary with instrumentation tests so that tests would fail if leaks are detected.\r\n\r\nThe issue is that memory leaks wouldn't be detected 100% of the time, which results into flakiness.\r\nHas this been observed before ? Is there anything that we can do to improve ?\r\n\r\nThe leak tracker is initialized with:\r\n\r\n```\r\nLeakCanary.config = LeakCanary.config.copy(\r\n                computeRetainedHeapSize = true,\r\n                dumpHeap = true,\r\n                dumpHeapWhenDebugging = true,\r\n                retainedVisibleThreshold = 0,\r\n                referenceMatchers = getWhitelistLeaks())\r\n\r\n        AppWatcher.config = AppWatcher.config.copy(\r\n                enabled = true,\r\n                watchActivities = true,\r\n                watchFragmentViews = true,\r\n                watchDurationMillis = TimeUnit.SECONDS.toMillis(10))\r\n    }\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\n\r\n1. [First Step]\r\n2. [Second Step]\r\n3. [and so on...]\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\nLeak should be detected 100% of the time, or should not be detected at all.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: `2.0-beta-3`\r\n* Android OS version: `Android 7.0 (API 24)`\r\n* Gradle version:\r\n\r\n### Additional Information\r\n\r\nAny additional information, configuration or data that might be necessary to reproduce the issue.\r\n", "url": "https://github.com/square/leakcanary/issues/1550", "user": "sahil2441", "labels": ["type: bug"], "created": "2019-08-24 04:31:24", "closed": "2019-09-11 01:50:55", "commits": {"9d742d466bd7a544295466a67df50aad8c15b8af": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "5391fcd0ec8c28137b655c520aada411a56d064d": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "9d742d466bd7a544295466a67df50aad8c15b8af", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["d0b883cd42e6493020edd418873ae3d2f60d8f05"], "nameRev": "9d742d466bd7a544295466a67df50aad8c15b8af remotes/origin/py/ui_test_details", "commitMessage": "Improve UI test documentation\n\nFixes #1550\n", "commitDateTime": "2019-09-10 18:04:35", "authoredDateTime": "2019-09-10 18:04:35", "commitGitStats": [{"filePath": "docs/recipes.md", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5391fcd0ec8c28137b655c520aada411a56d064d", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["d0b883cd42e6493020edd418873ae3d2f60d8f05"], "nameRev": "5391fcd0ec8c28137b655c520aada411a56d064d tags/v2.0-beta-4~36", "commitMessage": "Improve UI test documentation (#1579)\n\nFixes #1550", "commitDateTime": "2019-09-10 18:50:54", "authoredDateTime": "2019-09-10 18:50:54", "commitGitStats": [{"filePath": "docs/recipes.md", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9d742d466bd7a544295466a67df50aad8c15b8af"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "java.lang.RuntimeException: Using WebView from more than one process at once with the same data directory", "body": "\r\nthe app does not have more than one process. It gets crash and shows relate to process name of `leakcanary`\r\n\r\n2019-08-21 12:46:49.866 21742-21742/com.app.demo:leakcanary E/AndroidRuntime: FATAL EXCEPTION: main\r\nProcess: com.app.demo:leakcanary, PID: 21742\r\njava.lang.RuntimeException: Using WebView from more than one process at once with the same data directory is not supported. https://crbug.com/558377\r\nat xf.b(PG:99)\r\nat xh.run(PG:3)\r\nat android.os.Handler.handleCallback(Handler.java:873)\r\nat android.os.Handler.dispatchMessage(Handler.java:99)\r\nat android.os.Looper.loop(Looper.java:193)\r\nat android.app.ActivityThread.main(ActivityThread.java:6669)\r\nat java.lang.reflect.Method.invoke(Native Method)\r\nat com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:493)\r\nat com.android.internal.os.ZygoteInit.main(ZygoteInit.java:858)", "url": "https://github.com/square/leakcanary/issues/1540", "user": "lannyf77", "labels": ["type: bug"], "created": "2019-08-21 18:29:09", "closed": "2019-08-21 19:56:20", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Leak analysis failed: OOM", "body": "### Description\r\n\r\nLeak analysis failed - error suggested I report this failure to LeakCanary. Including a link to .hprof and the logcat below.\r\n\r\n### Steps to Reproduce\r\n\r\nhttps://drive.google.com/open?id=1Eez5QchPJ9zjQqK-noO-qzh95tplHz82\r\n\r\n```2019-08-12 14:53:02.159 16258-16289/com.radiocom.staging D/LeakCanary: Found 2 retained references, dumping the heap\r\n2019-08-12 14:53:02.176 16258-16289/com.radiocom.staging I/adiocom.stagin: hprof: heap dump \"/storage/emulated/0/Download/leakcanary-com.radiocom.staging/2019-08-12_14-53-02_168.hprof\" starting...\r\n2019-08-12 14:53:08.147 16258-16289/com.radiocom.staging D/LeakCanary: Checking retained object because found new object retained\r\n2019-08-12 14:53:08.147 16258-16289/com.radiocom.staging D/LeakCanary: No retained objects\r\n2019-08-12 14:53:08.253 16258-23141/com.radiocom.staging D/LeakCanary: Analysis in progress, working on: PARSING_HEAP_DUMP\r\n2019-08-12 14:53:21.928 16258-23141/com.radiocom.staging D/LeakCanary: Analysis in progress, working on: REPORTING_HEAP_ANALYSIS\r\n2019-08-12 14:53:21.931 16258-23141/com.radiocom.staging D/LeakCanary: HeapAnalysisFailure(heapDumpFile=/storage/emulated/0/Download/leakcanary-com.radiocom.staging/2019-08-12_14-53-02_168.hprof, createdAtTimeMillis=1565643201930, analysisDurationMillis=13678, exception=\r\n    java.lang.RuntimeException: Not enough memory to allocate buffers for rehashing: 2097152 -> 4194304\r\n        at shark.internal.hppc.LongObjectScatterMap.allocateBuffers(LongObjectScatterMap.kt:275)\r\n        at shark.internal.hppc.LongObjectScatterMap.allocateThenInsertThenRehash(LongObjectScatterMap.kt:307)\r\n        at shark.internal.hppc.LongObjectScatterMap.set(LongObjectScatterMap.kt:99)\r\n        at shark.internal.HprofInMemoryIndex$Builder.onHprofRecord(HprofInMemoryIndex.kt:170)\r\n        at shark.HprofReader.readHprofRecords(HprofReader.kt:424)\r\n        at shark.internal.HprofInMemoryIndex$Companion.createReadingHprof(HprofInMemoryIndex.kt:249)\r\n        at shark.internal.HprofInMemoryIndex$Companion.createReadingHprof$default(HprofInMemoryIndex.kt:211)\r\n        at shark.HprofHeapGraph$Companion.indexHprof(HprofHeapGraph.kt:187)\r\n        at shark.HeapAnalyzer.analyze(HeapAnalyzer.kt:100)\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:61)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:76)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:193)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\n     Caused by: java.lang.OutOfMemoryError: Failed to allocate a 33554456 byte allocation with 10849984 free bytes and 10MB until OOM, max allowed footprint 201326592, growth limit 201326592\r\n        at shark.internal.hppc.LongObjectScatterMap.allocateBuffers(LongObjectScatterMap.kt:269)\r\n        at shark.internal.hppc.LongObjectScatterMap.allocateThenInsertThenRehash(LongObjectScatterMap.kt:307) \r\n        at shark.internal.hppc.LongObjectScatterMap.set(LongObjectScatterMap.kt:99) \r\n        at shark.internal.HprofInMemoryIndex$Builder.onHprofRecord(HprofInMemoryIndex.kt:170) \r\n        at shark.HprofReader.readHprofRecords(HprofReader.kt:424) \r\n        at shark.internal.HprofInMemoryIndex$Companion.createReadingHprof(HprofInMemoryIndex.kt:249) \r\n        at shark.internal.HprofInMemoryIndex$Companion.createReadingHprof$default(HprofInMemoryIndex.kt:211) \r\n        at shark.HprofHeapGraph$Companion.indexHprof(HprofHeapGraph.kt:187) \r\n        at shark.HeapAnalyzer.analyze(HeapAnalyzer.kt:100) \r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:61) \r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55) \r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:76) \r\n        at android.os.Handler.dispatchMessage(Handler.java:106) \r\n        at android.os.Looper.loop(Looper.java:193) \r\n        at android.os.HandlerThread.run(HandlerThread.java:65) \r\n    \r\n    )\r\n```\r\n\r\nTrying to trigger memory leaks within app with LeakCanary monitoring, LeakCanary had a HeapAnalysisFailure\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: LeakCanary 2.0-beta-2 cc5b133\r\n* Phone: Pixel 2 XL\r\n* Android OS version: 9\r\n* Gradle version: gradle-4.10.1\r\n", "url": "https://github.com/square/leakcanary/issues/1532", "user": "nowele-rechka-entercom", "labels": ["type: bug"], "created": "2019-08-12 21:13:17", "closed": "2019-08-22 20:13:46", "commits": {"5bb3bf377732ef5c689f69068ce507a801a2310d": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "abc2d512183718db16fd2d8374117c9214bb42c8": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "93748c8c5ed41fecf3d7ecc99bc004041042ad15": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "2f5e1fa80ef40f111551c868c32a6a4c717b04a4": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 9.000277777777777, "commitsDetails": [{"commitHash": "5bb3bf377732ef5c689f69068ce507a801a2310d", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "abc2d512183718db16fd2d8374117c9214bb42c8", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "93748c8c5ed41fecf3d7ecc99bc004041042ad15", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2f5e1fa80ef40f111551c868c32a6a4c717b04a4", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["80da4cdfa4b0dc1c7c83383864fdfbc6f2b64515"], "nameRev": "2f5e1fa80ef40f111551c868c32a6a4c717b04a4 tags/v2.0-beta-3~5", "commitMessage": "Optimize memory usage (#1543)\n\nOptimizing for a new provided 160Mb [hprof](https://drive.google.com/open?id=1INEgGwHugZ98VyOpaNexGGvzPznmxi5U) with 2M objects\r\n\r\nHprofHeapGraph went from 136Mb to 40Mb. IndexingTest#indexHprof is now about twice as fast. Parsing of smaller heap dumps slowed down a bit, but it's not noticeable (impacts LeakCanary jvm unit tests by a few seconds).\r\n\r\nChanges:\r\n\r\n* HprofInMemoryIndex.objectIndex split into one index per object type\r\n* Replaced LongObjectScatterMap with SortedByMap for storing the index\r\n  * This is just one giant byte array, split into entries of N bytes where N is split between bytes for keys and bytes for values.\r\n  * Relying on raw bytes means we get rid of object overhead, plus it makes it easy to use the minimal number of bytes necessary (e.g. 32 bits heap dumps only need 4 bytes per object id. Heap dumps size influences the number of bytes needed to store the position of an object in the heap dump file)\r\n  * Using a distinct SortedByMap for each of the 4 object types means N is exactly the number of bytes needed to index that type of object.\r\n  * Using a single byte array for keys and values means we can append keys and values in place as we parse them (in UnsortedBytesMap), and then sort in place, minimizing allocations.\r\n  * To avoid having to reallocate arrays as we parse the heap dump, we run in two passes. The first pass runs fast and computes the exact object counts so that the second pass can allocate arrays at the right size.\r\n  * We don't store the objects contents in the index, so we were unecessarily allocating stack memory for those as we were parsing them. Added new *SkipContentRecord types that skip over the content.\r\n  * Unfortunately the JVM does not provide any API for sorting a byte array in chunks of N bytes. Implementing quicksort is not a good option as heapdumps are often mostly sorted by object id. Copied over [TimSort](https://android.googlesource.com/platform/libcore/+/jb-mr2-release/luni/src/main/java/java/util/TimSort.java) from AOSP (Apache 2), converted it to Kotlin and adapted it (ByteArrayTimSort.kt)\r\n* Added caching of thread names when going through GC roots\r\n\r\nFixes #1532", "commitDateTime": "2019-08-22 13:13:46", "authoredDateTime": "2019-08-22 13:13:46", "commitGitStats": [{"filePath": "leakcanary-android-instrumentation/src/androidTest/java/leakcanary/{AnalysisDurationTest.kt => IndexingTest.kt}", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "shark-graph/src/main/java/shark/HprofHeapGraph.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "shark-graph/src/main/java/shark/internal/ByteSubArray.kt", "insertions": 95, "deletions": 0, "lines": 95}, {"filePath": "shark-graph/src/main/java/shark/internal/HprofInMemoryIndex.kt", "insertions": 222, "deletions": 59, "lines": 281}, {"filePath": "shark-graph/src/main/java/shark/internal/SortedBytesMap.kt", "insertions": 73, "deletions": 0, "lines": 73}, {"filePath": "shark-graph/src/main/java/shark/internal/UnsortedByteEntries.kt", "insertions": 192, "deletions": 0, "lines": 192}, {"filePath": "shark-graph/src/main/java/shark/internal/aosp/ByteArrayComparator.kt", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "shark-graph/src/main/java/shark/internal/aosp/ByteArrayTimSort.kt", "insertions": 1072, "deletions": 0, "lines": 1072}, {"filePath": "shark-graph/src/test/java/shark/ByteArrayTimSortTest.kt", "insertions": 110, "deletions": 0, "lines": 110}, {"filePath": "shark-graph/src/test/java/shark/SortedBytesMapTest.kt", "insertions": 204, "deletions": 0, "lines": 204}, {"filePath": "shark-hprof/src/main/java/shark/Hprof.kt", "insertions": 14, "deletions": 11, "lines": 25}, {"filePath": "shark-hprof/src/main/java/shark/HprofReader.kt", "insertions": 204, "deletions": 68, "lines": 272}, {"filePath": "shark-hprof/src/main/java/shark/HprofRecord.kt", "insertions": 46, "deletions": 4, "lines": 50}, {"filePath": "shark-hprof/src/main/java/shark/PrimitiveType.kt", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "shark/src/main/java/shark/internal/PathFinder.kt", "insertions": 6, "deletions": 1, "lines": 7}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "LeakActivity cannot be cast to androidx.appcompat.app.AppCompatActivity", "body": "### Description\r\n\r\n```\r\njava.lang.RuntimeException: Unable to start activity ComponentInfo{cn.itsite.glomax/leakcanary.internal.activity.LeakActivity}: java.lang.ClassCastException: leakcanary.internal.activity.LeakActivity cannot be cast to androidx.appcompat.app.AppCompatActivity\r\n```\r\n\r\n### dependencies\r\n\r\n```\r\n    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-beta-2'\r\n\r\n```\r\n\r\nThank you for your wonderful lib.\r\nCould you tell me how to solve this problem?My Activity extends AppCompatActivity.", "url": "https://github.com/square/leakcanary/issues/1526", "user": "leguang", "labels": ["type: bug"], "created": "2019-08-04 02:29:29", "closed": "2019-08-05 15:31:07", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "Leak analysis failed: Object id not found in heap dump.", "body": "### Leak Analysis failed\r\nTried to analyze the files after the dump\r\n\r\n[2019-07-31_15-23-33_731.zip](https://github.com/square/leakcanary/files/3452097/2019-07-31_15-23-33_731.zip)\r\n\r\n### Steps to Reproduce\r\nWas doing some tests in our QA application, the application reported to freeze and dump files. When checking the files, \"Analysis failed\" screen was shown.\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\nHprof file attached to this issue\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-beta-1\r\n* Android OS version: Android 8.0.0 (Samsung Galaxy S8+)\r\n* Gradle version: 5.1.1\r\n", "url": "https://github.com/square/leakcanary/issues/1516", "user": "kolphi", "labels": ["type: bug"], "created": "2019-07-31 13:42:10", "closed": "2019-07-31 19:35:00", "commits": {"4b93650abb7874623555ce358809b38d6303749f": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "3f83eda1b5a70c9cab97340458b3930c5ad1b958": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4b93650abb7874623555ce358809b38d6303749f", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "3f83eda1b5a70c9cab97340458b3930c5ad1b958", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["525873ae76edc15331ecc20c6892c996a2638316"], "nameRev": "3f83eda1b5a70c9cab97340458b3930c5ad1b958 tags/v2.0-beta-2~5", "commitMessage": "Fix root object id not found in heap dump (#1518)\n\nFixes #1516", "commitDateTime": "2019-07-31 12:34:59", "authoredDateTime": "2019-07-31 12:34:59", "commitGitStats": [{"filePath": "shark-android/src/test/java/shark/LegacyHprofTest.kt", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "shark-android/src/test/resources/gcroot_unknown_object.hprof", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "shark-graph/src/main/java/shark/HeapGraph.kt", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "shark/src/main/java/shark/internal/PathFinder.kt", "insertions": 9, "deletions": 0, "lines": 9}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Rename AppWatcherInstaller authorities", "body": "Forgot to update it, currently it's:\r\n\r\n```\r\nandroid:authorities=\"${applicationId}.leak-sentry-installer\"\r\n```", "url": "https://github.com/square/leakcanary/issues/1514", "user": "pyricau", "labels": ["type: bug"], "created": "2019-07-30 17:52:39", "closed": "2019-08-22 22:03:41", "commits": {"9f0c1b0b011aaf8eafe00bf2d5abbe56921a5c93": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "c98c25a8f18bbee1f8e3697e29cb78e3f144b921": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 23.00027777777778, "commitsDetails": [{"commitHash": "9f0c1b0b011aaf8eafe00bf2d5abbe56921a5c93", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["7500364f6ec34494ef9c4c1a0740a2cadf6dcff3"], "nameRev": "9f0c1b0b011aaf8eafe00bf2d5abbe56921a5c93 remotes/origin/py/AppWatcherInstaller_authorities", "commitMessage": "Update AppWatcherInstaller authorities\n\nFixes #1514\n", "commitDateTime": "2019-08-22 14:34:18", "authoredDateTime": "2019-08-22 14:34:18", "commitGitStats": [{"filePath": "leakcanary-object-watcher-android/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "c98c25a8f18bbee1f8e3697e29cb78e3f144b921", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["94daac36e65da068108a25d5b0178c35cad59a5f"], "nameRev": "c98c25a8f18bbee1f8e3697e29cb78e3f144b921 tags/v2.0-beta-3~2", "commitMessage": "Update AppWatcherInstaller authorities (#1545)\n\nFixes #1514", "commitDateTime": "2019-08-22 15:03:40", "authoredDateTime": "2019-08-22 15:03:40", "commitGitStats": [{"filePath": "leakcanary-object-watcher-android/src/main/AndroidManifest.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9f0c1b0b011aaf8eafe00bf2d5abbe56921a5c93"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Leakcanary build error", "body": "### Description\r\n\r\n[Description of the issue]\r\n\r\n### Steps to Reproduce\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\n\r\n1. Update leckcanary to 2.0-alpha-3\r\n2. Got build error:\r\nManifest merger failed : Attribute application@appComponentFactory value=(android.support.v4.app.CoreComponentFactory) from [com.android.support:support-compat:28.0.0] AndroidManifest.xml:22:18-91\r\n\tis also present at [androidx.core:core:1.0.1] AndroidManifest.xml:22:18-86 value=(androidx.core.app.CoreComponentFactory).\r\n\tSuggestion: add 'tools:replace=\"android:appComponentFactory\"' to <application> element at AndroidManifest.xml:19:5-100:19\r\n3. Add tools:replace=\"android:appComponentFactory\" to AndroidManifest\r\n\r\n4. Got build error:\r\norg.gradle.execution.MultipleBuildFailures: Build completed with 1 failures.\r\n\tat org.gradle.initialization.DefaultGradleLauncher$ExecuteTasks.run(DefaultGradleLauncher.java:358)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:300)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:292)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:174)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.runTasks(DefaultGradleLauncher.java:219)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:149)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.executeTasks(DefaultGradleLauncher.java:124)\r\n\tat org.gradle.internal.invocation.GradleBuildController$1.call(GradleBuildController.java:77)\r\n\tat org.gradle.internal.invocation.GradleBuildController$1.call(GradleBuildController.java:74)\r\n\tat org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:154)\r\n\tat org.gradle.internal.work.StopShieldingWorkerLeaseService.withLocks(StopShieldingWorkerLeaseService.java:38)\r\n\tat org.gradle.internal.invocation.GradleBuildController.doBuild(GradleBuildController.java:96)\r\n\tat org.gradle.internal.invocation.GradleBuildController.run(GradleBuildController.java:74)\r\n\tat org.gradle.tooling.internal.provider.runner.ClientProvidedBuildActionRunner.run(ClientProvidedBuildActionRunner.java:68)\r\n\tat org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\r\n\tat org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\r\n\tat org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)\r\n\tat org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.run(RunAsBuildOperationBuildActionRunner.java:50)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:300)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:292)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:174)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:45)\r\n\tat org.gradle.tooling.internal.provider.SubscribableBuildActionRunner.run(SubscribableBuildActionRunner.java:51)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:47)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:44)\r\n\tat org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:79)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:44)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:30)\r\n\tat org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:39)\r\n\tat org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:25)\r\n\tat org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:80)\r\n\tat org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:53)\r\n\tat org.gradle.tooling.internal.provider.ServicesSetupBuildActionExecuter.execute(ServicesSetupBuildActionExecuter.java:62)\r\n\tat org.gradle.tooling.internal.provider.ServicesSetupBuildActionExecuter.execute(ServicesSetupBuildActionExecuter.java:34)\r\n\tat org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:36)\r\n\tat org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:25)\r\n\tat org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:43)\r\n\tat org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:29)\r\n\tat org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:59)\r\n\tat org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:31)\r\n\tat org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:59)\r\n\tat org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:44)\r\n\tat org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:46)\r\n\tat org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:30)\r\n\tat org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:67)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)\r\n\tat org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)\r\n\tat org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)\r\n\tat org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\r\n\tat org.gradle.util.Swapper.swap(Swapper.java:38)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)\r\n\tat org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)\r\n\tat org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:62)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)\r\n\tat org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:81)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:122)\r\n\tat org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\r\n\tat org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:295)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:processDebugManifest'.\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:110)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:77)\r\n\tat org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101)\r\n\tat org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44)\r\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.run(EventFiringTaskExecuter.java:51)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:300)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:292)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:174)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:46)\r\n\tat org.gradle.execution.taskgraph.LocalTaskInfoExecutor.execute(LocalTaskInfoExecutor.java:42)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareWorkItemExecutor.execute(DefaultTaskExecutionGraph.java:277)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareWorkItemExecutor.execute(DefaultTaskExecutionGraph.java:262)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:135)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:130)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.execute(DefaultTaskPlanExecutor.java:200)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.executeWithWork(DefaultTaskPlanExecutor.java:191)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.run(DefaultTaskPlanExecutor.java:130)\r\n\t... 6 more\r\nCaused by: java.lang.RuntimeException: Manifest merger failed with multiple errors, see logs\r\n\tat com.android.builder.core.AndroidBuilder.mergeManifestsForApplication(AndroidBuilder.java:556)\r\n\tat com.android.build.gradle.tasks.ProcessApplicationManifest.doFullTaskAction(ProcessApplicationManifest.java:198)\r\n\tat com.android.build.gradle.internal.tasks.IncrementalTask.taskAction(IncrementalTask.java:106)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:50)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:131)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:300)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:292)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:174)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:120)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:99)\r\n\t... 34 more\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-alpha-3\r\n* Android OS version: 8.0\r\n* Gradle version: 4.10.1-all\r\n\r\n### Additional Information\r\n\r\nAny additional information, configuration or data that might be necessary to reproduce the issue.\r\n", "url": "https://github.com/square/leakcanary/issues/1513", "user": "finchatticus", "labels": ["type: bug"], "created": "2019-07-30 08:49:06", "closed": "2019-07-30 13:35:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Build error when the app extends Theme.MaterialComponents.NoActionBar theme", "body": "### Description\r\n\r\nCan't build the app with LeakCanary when using material theme (Theme.MaterialComponents.NoActionBar).\r\n\r\nCaused by: java.lang.IllegalStateException: You need to use a Theme.AppCompat theme (or descendant) with this activity.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-alpha-3\r\n* Android OS version: API28\r\n* Gradle version: 3.4.2", "url": "https://github.com/square/leakcanary/issues/1512", "user": "kirillo", "labels": ["type: bug"], "created": "2019-07-30 07:54:09", "closed": "2019-08-22 21:35:59", "commits": {}, "ttf": 23.00027777777778, "commitsDetails": []}, {"title": "error: resource android:attr/ttcIndex not found.", "body": "### Description\r\n\r\n[Description of the issue]\r\n\r\n### Steps to Reproduce\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\n\r\n1. [First Step]\r\n2. [Second Step]\r\n3. [and so on...]\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\n### Version Information\r\n\r\n* LeakCanary version:\r\n* Android OS version:\r\n* Gradle version:\r\n\r\n### Additional Information\r\n\r\nAny additional information, configuration or data that might be necessary to reproduce the issue.\r\n", "url": "https://github.com/square/leakcanary/issues/1503", "user": "lumia1999", "labels": ["type: bug"], "created": "2019-07-27 02:54:33", "closed": "2019-07-27 03:03:07", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "AAPT2 error ", "body": "### Description\r\n\r\n[Description of the issue]\r\nAAPT2 error with 2.0-alpha-3.\r\nWorks fine while using releaseImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-3' instead of debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-3'\r\n\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\n\r\n```\r\nAGPBI: {\"kind\":\"error\",\"text\":\"error: resource android:attr/ttcIndex not found.\",\"sources\":[{\"file\":\"/Users/kumaku4/Developer/Android/PTP/android-prj-thebex/thebe/src/main/res/values/dimen.xml\"}],\"original\":\"\",\"tool\":\"AAPT\"}\r\n/Users/kumaku4/Developer/Android/PTP/android-prj-thebex/thebe/build/intermediates/incremental/mergeSitDebugResources/merged.dir/values/values.xml:972: error: resource android:attr/fontVariationSettings not found.\r\n/Users/kumaku4/Developer/Android/PTP/android-prj-thebex/thebe/build/intermediates/incremental/mergeSitDebugResources/merged.dir/values/values.xml:972: error: resource android:attr/ttcIndex not found.\r\nFailed to execute aapt\r\ncom.android.ide.common.process.ProcessException: Failed to execute aapt\r\n\tat com.android.builder.core.AndroidBuilder.processResources(AndroidBuilder.java:796)\r\n\tat com.android.build.gradle.tasks.ProcessAndroidResources.invokeAaptForSplit(ProcessAndroidResources.java:551)\r\n\tat com.android.build.gradle.tasks.ProcessAndroidResources.doFullTaskAction(ProcessAndroidResources.java:285)\r\n\tat com.android.build.gradle.internal.tasks.IncrementalTask.taskAction(IncrementalTask.java:109)\r\n\tat sun.reflect.GeneratedMethodAccessor872.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:46)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:121)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:110)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:92)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:70)\r\n\tat org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:60)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:97)\r\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:87)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.run(DefaultTaskGraphExecuter.java:248)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:241)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:230)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:626)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:581)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\tat com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:503)\r\n\tat com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:482)\r\n\tat com.google.common.util.concurrent.AbstractFuture$TrustedFuture.get(AbstractFuture.java:79)\r\n\tat com.android.builder.core.AndroidBuilder.processResources(AndroidBuilder.java:794)\r\n\t... 49 more\r\n\tat com.google.common.util.concurrent.AbstractFuture.getDoneValue(AbstractFuture.java:503)\r\n\tat com.google.common.util.concurrent.AbstractFuture.get(AbstractFuture.java:462)\r\n\tat com.google.common.util.concurrent.AbstractFuture$TrustedFuture.get(AbstractFuture.java:79)\r\n\tat com.android.builder.internal.aapt.v2.QueueableAapt2.lambda$makeValidatedPackage$1(QueueableAapt2.java:179)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\t... 1 more\r\n\tat com.android.builder.png.AaptProcess$NotifierProcessOutput.handleOutput(AaptProcess.java:463)\r\n\tat com.android.builder.png.AaptProcess$NotifierProcessOutput.err(AaptProcess.java:415)\r\n\tat com.android.builder.png.AaptProcess$ProcessOutputFacade.err(AaptProcess.java:332)\r\n\tat com.android.utils.GrabProcessOutput$1.run(GrabProcessOutput.java:104)\r\n:thebe:processSitDebugResources FAILED\r\nFAILURE: Build failed with an exception.\r\n* What went wrong:\r\nExecution failed for task ':thebe:processSitDebugResources'.\r\n> Failed to execute aapt\r\n```\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-alpha-3\r\n* Android OS version: 8\r\n* Gradle version: 3.0.1\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1485", "user": "kushagrakumar27", "labels": ["type: bug"], "created": "2019-07-24 15:38:45", "closed": "2019-07-24 17:39:16", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Remove all non internal classes in internal package.", "body": "There are a few classes left in the internal package that cannot be internal, we need to find workarounds for those.", "url": "https://github.com/square/leakcanary/issues/1473", "user": "pyricau", "labels": ["type: bug"], "created": "2019-07-18 16:54:50", "closed": "2019-07-18 21:15:47", "commits": {"e56fdc08778caeb63f368400d81c019df77f8085": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "9c03546aa99db8143b8d7fa6275657e429c6a66f": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "2a8e7fb267732fae8930e613251136e1d593e63b": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "e56fdc08778caeb63f368400d81c019df77f8085", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "9c03546aa99db8143b8d7fa6275657e429c6a66f", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["0381f8a88042e5406d9d59113f0397cc0e2d123d"], "nameRev": "9c03546aa99db8143b8d7fa6275657e429c6a66f remotes/origin/py/no_public_internal", "commitMessage": "Remove all public internal classes\n\n* Removed the filter on \"leakcanary.internal\" in mkdocs (nothing left, will make it easier to spot future mistakes)\n* Removed the link to \"edit\" the page on API pages\n\nFixes #1473\n", "commitDateTime": "2019-07-18 13:49:53", "authoredDateTime": "2019-07-18 11:36:43", "commitGitStats": [{"filePath": "build.gradle", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "docs/theme/main.html", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/VisibilityTracker.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-android-instrumentation/src/androidTest/java/leakcanary/FragmentLeakTest.kt", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "leakcanary-fragments-androidx/src/main/java/leakcanary/internal/AndroidXFragmentDestroyWatcher.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/ActivityDestroyWatcher.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/AndroidOFragmentDestroyWatcher.kt", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/FragmentDestroyWatcher.kt", "insertions": 43, "deletions": 47, "lines": 90}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/InternalHelper.kt", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/InternalLeakSentry.kt", "insertions": 34, "deletions": 12, "lines": 46}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/LeakSentryListener.kt", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "leakcanary-watcher/src/main/java/leakcanary/OnInstanceRetainedListener.kt", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "leakcanary-watcher/src/main/java/leakcanary/RefWatcher.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "leakcanary-watcher/src/test/java/leakcanary/RefWatcherTest.kt", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2a8e7fb267732fae8930e613251136e1d593e63b", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["0381f8a88042e5406d9d59113f0397cc0e2d123d"], "nameRev": "2a8e7fb267732fae8930e613251136e1d593e63b tags/v2.0-beta-1~26", "commitMessage": "Remove all public internal classes (#1475)\n\n* Removed the filter on \"leakcanary.internal\" in mkdocs (nothing left, will make it easier to spot future mistakes)\r\n* Removed the link to \"edit\" the page on API pages\r\n\r\nFixes #1473", "commitDateTime": "2019-07-18 14:15:46", "authoredDateTime": "2019-07-18 14:15:46", "commitGitStats": [{"filePath": "build.gradle", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "docs/theme/main.html", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/VisibilityTracker.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-android-instrumentation/src/androidTest/java/leakcanary/FragmentLeakTest.kt", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "leakcanary-fragments-androidx/src/main/java/leakcanary/internal/AndroidXFragmentDestroyWatcher.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/ActivityDestroyWatcher.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/AndroidOFragmentDestroyWatcher.kt", "insertions": 2, "deletions": 3, "lines": 5}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/FragmentDestroyWatcher.kt", "insertions": 43, "deletions": 47, "lines": 90}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/InternalHelper.kt", "insertions": 0, "deletions": 18, "lines": 18}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/InternalLeakSentry.kt", "insertions": 34, "deletions": 12, "lines": 46}, {"filePath": "leakcanary-leaksentry/src/main/java/leakcanary/internal/LeakSentryListener.kt", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "leakcanary-watcher/src/main/java/leakcanary/OnInstanceRetainedListener.kt", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "leakcanary-watcher/src/main/java/leakcanary/RefWatcher.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "leakcanary-watcher/src/test/java/leakcanary/RefWatcherTest.kt", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9c03546aa99db8143b8d7fa6275657e429c6a66f"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 113.0, "deletions": 111.0, "lines": 224.0, "gitFilesChange": 14}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-watcher/src/main/java/leakcanary/RefWatcher.kt", "leakcanary-fragments-androidx/src/main/java/leakcanary/internal/AndroidXFragmentDestroyWatcher.kt", "leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt", "docs/theme/main.html", "leakcanary-android-core/src/main/java/leakcanary/internal/VisibilityTracker.kt", "leakcanary-leaksentry/src/main/java/leakcanary/internal/ActivityDestroyWatcher.kt", "leakcanary-leaksentry/src/main/java/leakcanary/internal/InternalHelper.kt", "leakcanary-leaksentry/src/main/java/leakcanary/internal/LeakSentryListener.kt", "leakcanary-leaksentry/src/main/java/leakcanary/internal/InternalLeakSentry.kt", "leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt", "", "leakcanary-leaksentry/src/main/java/leakcanary/internal/FragmentDestroyWatcher.kt", "leakcanary-watcher/src/main/java/leakcanary/OnInstanceRetainedListener.kt", "leakcanary-leaksentry/src/main/java/leakcanary/internal/AndroidOFragmentDestroyWatcher.kt"]}, {"title": "Unknown Object in heap dump", "body": "This looks like more of an Android heap dump issue in P than a bug in leakcanary: \r\n\r\ndalvik.system.PathClassLoader.runtimeInternalObjects is an object array. One of the PathClassLoader instances in the provided heap dump have a large size. The item at entry 8313 references an unknown object id, that can be found nowhere else in the heap (checked that by logged `in Reader.readId()` ).\r\n\r\nWhen opening it with YourKit, the entry from the array is skipped, as if there was nothing in 8313.\r\n\r\nWhen opening with Android Studio (perflib), it says this is not a hprof file (clearly it's silently crashing)\r\n\r\nPrivate link: https://drive.google.com/file/d/17DC8bzLE278P5e7XPhtYQWqscnRtg9fa/view?usp=sharing", "url": "https://github.com/square/leakcanary/issues/1461", "user": "pyricau", "labels": ["type: bug"], "created": "2019-07-13 01:43:34", "closed": "2019-08-22 21:36:44", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "Some GC roots can be leak causes", "body": "Specifically thinking about gc roots which are natively held refs, those are currently marked as \"not leaking\" which is incorrect.", "url": "https://github.com/square/leakcanary/issues/1447", "user": "pyricau", "labels": ["type: bug"], "created": "2019-07-08 22:29:48", "closed": "2019-07-11 22:14:28", "commits": {"00ccad668bc46e8dd4645130c881721ed0b818c5": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "bbb2109add7308930e69e5085399d073155a519d": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "00ccad668bc46e8dd4645130c881721ed0b818c5", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["eded1c96e84f37393857ba4de2580aec784b2391"], "nameRev": "00ccad668bc46e8dd4645130c881721ed0b818c5 remotes/origin/py/report_roots", "commitMessage": "Correctly report gc root leak status\n\nWe were incorrectly deciding that all GC Roots are \"not leaking\". That's only true for system classes.\n\nAlso, the GC root type wasn't reported, which made it hard to pin point why the reference was held.\n\nFixes #1447\n", "commitDateTime": "2019-07-11 14:50:00", "authoredDateTime": "2019-07-11 14:50:00", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalyzer.kt", "insertions": 34, "deletions": 25, "lines": 59}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/LeakNode.kt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/LeakTrace.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/internal/ShortestPathFinder.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/LeakStatusTest.kt", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/LeakTraceRendererTest.kt", "insertions": 13, "deletions": 7, "lines": 20}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bbb2109add7308930e69e5085399d073155a519d", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["1f02e3cc22da4ee0a72ad8b9e819364545f50e9f"], "nameRev": "bbb2109add7308930e69e5085399d073155a519d tags/v2.0-beta-1~36", "commitMessage": "Correctly report gc root leak status (#1458)\n\nWe were incorrectly deciding that all GC Roots are \"not leaking\". That's only true for system classes.\r\n\r\nAlso, the GC root type wasn't reported, which made it hard to pin point why the reference was held.\r\n\r\nFixes #1447", "commitDateTime": "2019-07-11 15:14:27", "authoredDateTime": "2019-07-11 15:14:27", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalyzer.kt", "insertions": 34, "deletions": 25, "lines": 59}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/LeakNode.kt", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/LeakTrace.kt", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/internal/ShortestPathFinder.kt", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/LeakStatusTest.kt", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/LeakTraceRendererTest.kt", "insertions": 13, "deletions": 7, "lines": 20}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00ccad668bc46e8dd4645130c881721ed0b818c5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 39, "deletions": 29, "lines": 68, "gitFilesChange": 4}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-analyzer/src/main/java/leakcanary/LeakNode.kt", "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalyzer.kt", "leakcanary-analyzer/src/main/java/leakcanary/LeakTrace.kt", "leakcanary-analyzer/src/main/java/leakcanary/internal/ShortestPathFinder.kt"]}, {"title": "Unexpected behavior with retained instance notification", "body": "* Notification shows up with 2/5 leaks\r\n* Then it disappears after 10 seconds\r\n* If tapping it in time, it goes away and nothing happens. Logcat says \"No retained instances after GC\"\r\n\r\nCombination of issues there:\r\n\r\n* Hiding the notification when the count goes to 0 isn't great because people wonder where it went.\r\n* If it consistently gets \"No retained instances after GC\" when tapping it, then we're either not refreshing often enough, or we should run the GC more often.\r\n* Tapping it should show another notification that says there was no retained instances. Sounds like that's not happening, which would be a bug.", "url": "https://github.com/square/leakcanary/issues/1427", "user": "pyricau", "labels": ["type: bug"], "created": "2019-07-02 21:23:03", "closed": "2019-07-03 20:55:47", "commits": {"4c3a394957d1dee94c4ce8082d24fa20fd3ec642": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "095a3dd0c95c9091b0545b4701fc2c8b7b88d4a2": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "ff131ba81f1afe55ab6ab54609858112490ee3c4": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "968083a915343d881bd63e40587c070fde543732": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4c3a394957d1dee94c4ce8082d24fa20fd3ec642", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "095a3dd0c95c9091b0545b4701fc2c8b7b88d4a2", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ff131ba81f1afe55ab6ab54609858112490ee3c4", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["7bbb771117fcfc470137cb0d7e2e800eb2f38c94"], "nameRev": "ff131ba81f1afe55ab6ab54609858112490ee3c4 remotes/origin/py/improve_count_notification", "commitMessage": "Behavior change & bugfixes for retained count notification\n\n* Bugfix: when tapping the \"dump heap\" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.\n* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold\n* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0\n* Change: the \"no retained instance\" notification that shows on tap is identical and also auto dismisses after 30 seconds.\n* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.\n\nFixes #1427\n", "commitDateTime": "2019-07-03 13:30:15", "authoredDateTime": "2019-07-03 12:57:30", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "insertions": 68, "deletions": 13, "lines": 81}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_ids.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_strings.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "968083a915343d881bd63e40587c070fde543732", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["626cde5d918c59a6e8ae16762238b205f8c99704"], "nameRev": "968083a915343d881bd63e40587c070fde543732 tags/v2.0-alpha-3~9", "commitMessage": "Behavior change & bugfixes for retained count notification (#1433)\n\n* Bugfix: when tapping the \"dump heap\" notification, if the GC found no retained instance we didn't use a distinct notification id to communicate that, and then soon after we'd dismiss the notification that let's the user know there is no retained instances on tap.\r\n* Bugfix: we weren't running the GC when checking for retained instances and the count was under the threshold\r\n* Change: we now update the notification and keep it around for 30 seconds when the count goes to 0\r\n* Change: the \"no retained instance\" notification that shows on tap is identical and also auto dismisses after 30 seconds.\r\n* Change: we're checking for retained references (and running the GC) every 2 seconds instead of 5.\r\n\r\nFixes #1427", "commitDateTime": "2019-07-03 13:55:47", "authoredDateTime": "2019-07-03 13:55:47", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "insertions": 68, "deletions": 13, "lines": 81}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_ids.xml", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_strings.xml", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ff131ba81f1afe55ab6ab54609858112490ee3c4"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 68.0, "deletions": 13.0, "lines": 81.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt"]}, {"title": "Crash, heap dump  missing", "body": "HeapAnalyzer crashes because the heap dump file passed to the service didn't exist\r\n\r\n```\r\nleakcanary.HeapAnalysisException: java.lang.IllegalArgumentException: File does not exist: /storage/emulated/0/Download/leakcanary-com.squareup.development/f871e570-be04-4368-9621-c964c27671e8_pending.hprof\r\n        at leakcanary.HeapAnalyzer.checkForLeaks(HeapAnalyzer.kt:93)\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:49)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:78)\r\n        at android.os.Handler.dispatchMessage(Handler.java:107)\r\n        at android.os.Looper.loop(Looper.java:214)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\nCaused by: java.lang.IllegalArgumentException: File does not exist: /storage/emulated/0/Download/leakcanary-com.squareup.development/f871e570-be04-4368-9621-c964c27671e8_pending.hprof\r\n        at leakcanary.HeapAnalyzer.checkForLeaks(HeapAnalyzer.kt:90)\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:49)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:78)\r\n        at android.os.Handler.dispatchMessage(Handler.java:107)\r\n        at android.os.Looper.loop(Looper.java:214)\r\n        at android.os.HandlerThread.run(HandlerThread.java:67)\r\n```\r\n\r\nNot sure how this can happen. Worth noticing that 2 seconds before we were successfully parsing and handling a hprof (same? another one?)\r\n\r\nThe latest release of leakcanary does not block if an analysis is in progress, so there might be concurrency issue or old cleanup code that's too aggressive.", "url": "https://github.com/square/leakcanary/issues/1417", "user": "pyricau", "labels": ["type: bug"], "created": "2019-06-28 05:37:01", "closed": "2019-06-28 12:27:28", "commits": {"9e905721096bae497a27dfca0d0480b18e3202d3": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "bee046879961e45b323126e439f5645caeda8c5f": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "668f1cd95d82c78d6ecb3f2fd60277d95f0aacf8": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "1b14b44907ad4d40270c2e2cf999408c383e32a5": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9e905721096bae497a27dfca0d0480b18e3202d3", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["fdd413ab74a718d142a7675469c14425b912c9db"], "nameRev": "9e905721096bae497a27dfca0d0480b18e3202d3 remotes/origin/py/last_modified", "commitMessage": "Ensure last modified doesn't change\n\nFixes #1417\n", "commitDateTime": "2019-06-28 05:01:26", "authoredDateTime": "2019-06-28 05:01:26", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/DefaultAnalysisResultListener.kt", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "bee046879961e45b323126e439f5645caeda8c5f", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["dd0204fb052dd0abbf971c7a6dcba6bae6295244"], "nameRev": "bee046879961e45b323126e439f5645caeda8c5f tags/v2.0-alpha-3~22", "commitMessage": "Ensure last modified doesn't change (#1418)\n\nFixes #1417", "commitDateTime": "2019-06-28 05:27:27", "authoredDateTime": "2019-06-28 05:27:27", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/DefaultAnalysisResultListener.kt", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "668f1cd95d82c78d6ecb3f2fd60277d95f0aacf8", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1b14b44907ad4d40270c2e2cf999408c383e32a5", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["bee046879961e45b323126e439f5645caeda8c5f"], "nameRev": "1b14b44907ad4d40270c2e2cf999408c383e32a5 tags/v2.0-alpha-3~21", "commitMessage": "Improve hprof storage (#1419)\n\n* Added LeakCanary.Config.maxStoredHeapDumps (default 7) to enabling configuring how many hprof files are retained.\r\n* Added LeakCanary.Config.requestWriteExternalStoragePermission (default false) to stop having those pesky double LeakCanary notifications on first leak for most users.\r\n* Added tracking of why files were removed in case #1417 happens again.", "commitDateTime": "2019-06-28 08:59:25", "authoredDateTime": "2019-06-28 08:59:25", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/DefaultAnalysisResultListener.kt", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/LeakCanary.kt", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapAnalyzerService.kt", "insertions": 15, "deletions": 1, "lines": 16}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt", "insertions": 5, "deletions": 1, "lines": 6}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/LeakDirectoryProvider.kt", "insertions": 41, "deletions": 15, "lines": 56}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/HeapAnalysisTable.kt", "insertions": 5, "deletions": 1, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9e905721096bae497a27dfca0d0480b18e3202d3"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 2, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2.0, "deletions": 0.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/DefaultAnalysisResultListener.kt"]}, {"title": "java.lang.NullPointerException", "body": "* FAILURE in 1.5.4 74837f0:java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.List com.squareup.haha.perflib.ClassObj.getInstancesList()' on a null object reference\r\n\tat com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:161)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:117)\r\n\tat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:67)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n* Reference Key: 6e135f89-d8e4-4b76-bc8b-78e47e8bae00\r\n* Device: samsung samsung SM-N9200 nobleltezc\r\n* Android Version: 7.0 API: 24 LeakCanary: 1.5.4 74837f0\r\n* Durations: watch=5063ms, gc=161ms, heap dump=5767ms, analysis=252ms\r\n* Excluded Refs:\r\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n| Field: android.view.textservice.SpellCheckerSession$1.this$0\r\n| Field: com.samsung.android.content.clipboard.SemClipboardManager.mContext\r\n| Field: com.samsung.android.emergencymode.SemEmergencyManager.mContext\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1413", "user": "sws1011", "labels": ["type: bug"], "created": "2019-06-26 02:58:10", "closed": "2019-06-26 17:43:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "leakcanary v2.0-alpha-2 bug kotlin stdlib ", "body": "### Description\r\n\r\nApp crashes due to HeapAnalyzerService\r\n\r\n### Steps to Reproduce\r\n\r\n```stacktrace:\r\n2019-06-25 09:33:10.296 21102-24672/? E/AndroidRuntime: FATAL EXCEPTION: IntentService[HeapAnalyzerService]\r\n    Process: com.airgoat.goat.staging, PID: 21102\r\n    java.util.NoSuchElementException: List is empty.\r\n        at kotlin.collections.CollectionsKt___CollectionsKt.first(_Collections.kt:194)\r\n        at leakcanary.internal.activity.db.LeakingInstanceTable.createGroupDescription(LeakingInstanceTable.kt:277)\r\n        at leakcanary.internal.activity.db.LeakingInstanceTable.insert(LeakingInstanceTable.kt:49)\r\n        at leakcanary.internal.activity.db.HeapAnalysisTable.insert(HeapAnalysisTable.kt:55)\r\n        at leakcanary.DefaultAnalysisResultListener.invoke(DefaultAnalysisResultListener.kt:40)\r\n        at leakcanary.DefaultAnalysisResultListener.invoke(DefaultAnalysisResultListener.kt:22)\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:55)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:76)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:193)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\n```\r\n", "url": "https://github.com/square/leakcanary/issues/1407", "user": "wugeorgeq", "labels": ["type: bug"], "created": "2019-06-25 16:39:30", "closed": "2019-06-28 19:47:15", "commits": {"7f37d07811dde571f2639c86c50ec589ed1853e2": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "1ce654efd23507fc55fe7f0c2c9f66f910662eb8": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "7f37d07811dde571f2639c86c50ec589ed1853e2", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1ce654efd23507fc55fe7f0c2c9f66f910662eb8", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["d9b336e270b10e70c32fba92075e4b44e8387ed9"], "nameRev": "1ce654efd23507fc55fe7f0c2c9f66f910662eb8 tags/v2.0-alpha-3~15", "commitMessage": "Fix crash when no leak cause could be found (#1423)\n\nFixes #1407", "commitDateTime": "2019-06-28 12:47:14", "authoredDateTime": "2019-06-28 12:47:14", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/LeakingInstanceTable.kt", "insertions": 10, "deletions": 4, "lines": 14}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "leakcanary v2.0-alpha-2 bug with desugar", "body": "### enable desugar build error\r\n\r\n[in tag v2.0-alpha-2 code enable desugar will build error ]\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\ngit checkout v2.0-alpha-2\r\n```\r\nadd two line in gradle.properties\r\n\r\n```\r\nandroid.enableD8.desugaring=false\r\nandroid.enableDesugar=true\r\n```\r\n\r\nbuild will with an error\r\n\r\nerror log:\r\n```\r\norg.gradle.execution.MultipleBuildFailures: Build completed with 1 failures.\r\n\tat org.gradle.initialization.DefaultGradleLauncher$ExecuteTasks.run(DefaultGradleLauncher.java:386)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:301)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:293)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:175)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.runTasks(DefaultGradleLauncher.java:247)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.doBuildStages(DefaultGradleLauncher.java:159)\r\n\tat org.gradle.initialization.DefaultGradleLauncher.executeTasks(DefaultGradleLauncher.java:134)\r\n\tat org.gradle.internal.invocation.GradleBuildController$1.execute(GradleBuildController.java:58)\r\n\tat org.gradle.internal.invocation.GradleBuildController$1.execute(GradleBuildController.java:55)\r\n\tat org.gradle.internal.invocation.GradleBuildController$3.create(GradleBuildController.java:82)\r\n\tat org.gradle.internal.invocation.GradleBuildController$3.create(GradleBuildController.java:75)\r\n\tat org.gradle.internal.work.DefaultWorkerLeaseService.withLocks(DefaultWorkerLeaseService.java:183)\r\n\tat org.gradle.internal.work.StopShieldingWorkerLeaseService.withLocks(StopShieldingWorkerLeaseService.java:40)\r\n\tat org.gradle.internal.invocation.GradleBuildController.doBuild(GradleBuildController.java:75)\r\n\tat org.gradle.internal.invocation.GradleBuildController.run(GradleBuildController.java:55)\r\n\tat org.gradle.tooling.internal.provider.runner.ClientProvidedBuildActionRunner.run(ClientProvidedBuildActionRunner.java:55)\r\n\tat org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\r\n\tat org.gradle.launcher.exec.ChainingBuildActionRunner.run(ChainingBuildActionRunner.java:35)\r\n\tat org.gradle.launcher.exec.BuildOutcomeReportingBuildActionRunner.run(BuildOutcomeReportingBuildActionRunner.java:58)\r\n\tat org.gradle.tooling.internal.provider.ValidatingBuildActionRunner.run(ValidatingBuildActionRunner.java:32)\r\n\tat org.gradle.launcher.exec.BuildCompletionNotifyingBuildActionRunner.run(BuildCompletionNotifyingBuildActionRunner.java:39)\r\n\tat org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:49)\r\n\tat org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner$3.call(RunAsBuildOperationBuildActionRunner.java:44)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:315)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:305)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:175)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:101)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)\r\n\tat org.gradle.launcher.exec.RunAsBuildOperationBuildActionRunner.run(RunAsBuildOperationBuildActionRunner.java:44)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:49)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter$1.transform(InProcessBuildActionExecuter.java:46)\r\n\tat org.gradle.composite.internal.DefaultRootBuildState.run(DefaultRootBuildState.java:78)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:46)\r\n\tat org.gradle.launcher.exec.InProcessBuildActionExecuter.execute(InProcessBuildActionExecuter.java:31)\r\n\tat org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:42)\r\n\tat org.gradle.launcher.exec.BuildTreeScopeBuildActionExecuter.execute(BuildTreeScopeBuildActionExecuter.java:28)\r\n\tat org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:78)\r\n\tat org.gradle.tooling.internal.provider.ContinuousBuildActionExecuter.execute(ContinuousBuildActionExecuter.java:52)\r\n\tat org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:59)\r\n\tat org.gradle.tooling.internal.provider.SubscribableBuildActionExecuter.execute(SubscribableBuildActionExecuter.java:36)\r\n\tat org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:68)\r\n\tat org.gradle.tooling.internal.provider.SessionScopeBuildActionExecuter.execute(SessionScopeBuildActionExecuter.java:38)\r\n\tat org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:37)\r\n\tat org.gradle.tooling.internal.provider.GradleThreadBuildActionExecuter.execute(GradleThreadBuildActionExecuter.java:26)\r\n\tat org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:43)\r\n\tat org.gradle.tooling.internal.provider.ParallelismConfigurationBuildActionExecuter.execute(ParallelismConfigurationBuildActionExecuter.java:29)\r\n\tat org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:60)\r\n\tat org.gradle.tooling.internal.provider.StartParamsValidatingActionExecuter.execute(StartParamsValidatingActionExecuter.java:32)\r\n\tat org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:55)\r\n\tat org.gradle.tooling.internal.provider.SessionFailureReportingActionExecuter.execute(SessionFailureReportingActionExecuter.java:41)\r\n\tat org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:48)\r\n\tat org.gradle.tooling.internal.provider.SetupLoggingActionExecuter.execute(SetupLoggingActionExecuter.java:32)\r\n\tat org.gradle.launcher.daemon.server.exec.ExecuteBuild.doBuild(ExecuteBuild.java:67)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)\r\n\tat org.gradle.launcher.daemon.server.exec.WatchForDisconnection.execute(WatchForDisconnection.java:37)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)\r\n\tat org.gradle.launcher.daemon.server.exec.ResetDeprecationLogger.execute(ResetDeprecationLogger.java:26)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)\r\n\tat org.gradle.launcher.daemon.server.exec.RequestStopIfSingleUsedDaemon.execute(RequestStopIfSingleUsedDaemon.java:34)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:74)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput$2.call(ForwardClientInput.java:72)\r\n\tat org.gradle.util.Swapper.swap(Swapper.java:38)\r\n\tat org.gradle.launcher.daemon.server.exec.ForwardClientInput.execute(ForwardClientInput.java:72)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)\r\n\tat org.gradle.launcher.daemon.server.exec.LogAndCheckHealth.execute(LogAndCheckHealth.java:55)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)\r\n\tat org.gradle.launcher.daemon.server.exec.LogToClient.doBuild(LogToClient.java:62)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)\r\n\tat org.gradle.launcher.daemon.server.exec.EstablishBuildEnvironment.doBuild(EstablishBuildEnvironment.java:81)\r\n\tat org.gradle.launcher.daemon.server.exec.BuildCommandOnly.execute(BuildCommandOnly.java:36)\r\n\tat org.gradle.launcher.daemon.server.api.DaemonCommandExecution.proceed(DaemonCommandExecution.java:104)\r\n\tat org.gradle.launcher.daemon.server.exec.StartBuildOrRespondWithBusy$1.run(StartBuildOrRespondWithBusy.java:50)\r\n\tat org.gradle.launcher.daemon.server.DaemonStateCoordinator$1.run(DaemonStateCoordinator.java:295)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':leakcanary-sample:transformClassesWithDesugarForDebug'.\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:95)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:91)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:57)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:119)\r\n\tat org.gradle.api.internal.tasks.execution.ResolvePreviousStateExecuter.execute(ResolvePreviousStateExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:93)\r\n\tat org.gradle.api.internal.tasks.execution.FinalizePropertiesTaskExecuter.execute(FinalizePropertiesTaskExecuter.java:45)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:94)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:56)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:55)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:36)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.executeTask(EventFiringTaskExecuter.java:67)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.call(EventFiringTaskExecuter.java:49)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:315)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$CallableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:305)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:175)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.call(DefaultBuildOperationExecutor.java:101)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.call(DelegatingBuildOperationExecutor.java:36)\r\n\tat org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:49)\r\n\tat org.gradle.execution.plan.LocalTaskNodeExecutor.execute(LocalTaskNodeExecutor.java:43)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:355)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$InvokeNodeExecutorsAction.execute(DefaultTaskExecutionGraph.java:343)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:336)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareExecutionAction.execute(DefaultTaskExecutionGraph.java:322)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker$1.execute(DefaultPlanExecutor.java:134)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker$1.execute(DefaultPlanExecutor.java:129)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.execute(DefaultPlanExecutor.java:202)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.executeNextNode(DefaultPlanExecutor.java:193)\r\n\tat org.gradle.execution.plan.DefaultPlanExecutor$ExecutorWorker.run(DefaultPlanExecutor.java:129)\r\n\t... 6 more\r\nCaused by: java.lang.RuntimeException: com.android.build.api.transform.TransformException: java.lang.RuntimeException: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/1.jar --input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/18.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-analyzer/build/libs/leakcanary-analyzer-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-leaksentry/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-watcher/build/libs/leakcanary-watcher-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-haha/build/libs/leakcanary-haha-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-log/build/libs/leakcanary-log-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/tmp/kotlin-classes/debug --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/42582547e115bdc1396d856455b874a1dd5cd90c6c908d229678325304b1643f.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/11f6bdd4e815e4b64fae437ac4068ef62a39e10a4a08c6c8247d8a20e8c45c38.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/52df658a22d7e1ebd1222b3ae0ed3d59a57d5f53d60ebb0fd229c53d3115a3d8.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/32f3023577a3259af2540a00e9c851b37d8e73cdbbbcb6da1a1d95671387d47d.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0ce180eca808eca3928b09dd955d84c77cb4806333d5b750daaa07043e657403.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0f0e8bdba266b146dda89a3603b1c08b3ea452f647cca4b143ca5cfcafb1ed34.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/cffeb7e941e3762087633cb8cf70bb8d21e1b542563d732b0eeba06778c49d0e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/e1891b3c8464fe68ddea08a4d59013f1b080323896bb81628df016b078c160b7.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/c1f11d7ea0a21c349a817ed60cbec6f87011e8f2af6000cfec63645d9702294e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/898c88b7244c22a1990e479866c71e155075e4a880ca06e353a0857f20ab4e4d.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/platforms/android-28/android.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/build-tools/28.0.3/core-lambda-stubs.jar --min_sdk_version 14 --desugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --copy_bridges_from_classpath}\r\n\tat com.android.builder.profile.Recorder$Block.handleException(Recorder.java:55)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:104)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:230)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:47)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:41)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:28)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$2.run(ExecuteActionsTaskExecuter.java:284)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:301)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:293)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:175)\r\n\tat org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:91)\r\n\tat org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:273)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:258)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.access$200(ExecuteActionsTaskExecuter.java:67)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$TaskExecution.execute(ExecuteActionsTaskExecuter.java:145)\r\n\tat org.gradle.internal.execution.impl.steps.ExecuteStep.execute(ExecuteStep.java:49)\r\n\tat org.gradle.internal.execution.impl.steps.CancelExecutionStep.execute(CancelExecutionStep.java:34)\r\n\tat org.gradle.internal.execution.impl.steps.TimeoutStep.executeWithoutTimeout(TimeoutStep.java:69)\r\n\tat org.gradle.internal.execution.impl.steps.TimeoutStep.execute(TimeoutStep.java:49)\r\n\tat org.gradle.internal.execution.impl.steps.CatchExceptionStep.execute(CatchExceptionStep.java:33)\r\n\tat org.gradle.internal.execution.impl.steps.CreateOutputsStep.execute(CreateOutputsStep.java:50)\r\n\tat org.gradle.internal.execution.impl.steps.SnapshotOutputStep.execute(SnapshotOutputStep.java:43)\r\n\tat org.gradle.internal.execution.impl.steps.SnapshotOutputStep.execute(SnapshotOutputStep.java:29)\r\n\tat org.gradle.internal.execution.impl.steps.CacheStep.executeWithoutCache(CacheStep.java:134)\r\n\tat org.gradle.internal.execution.impl.steps.CacheStep.lambda$execute$3(CacheStep.java:83)\r\n\tat java.util.Optional.orElseGet(Optional.java:267)\r\n\tat org.gradle.internal.execution.impl.steps.CacheStep.execute(CacheStep.java:82)\r\n\tat org.gradle.internal.execution.impl.steps.CacheStep.execute(CacheStep.java:36)\r\n\tat org.gradle.internal.execution.impl.steps.PrepareCachingStep.execute(PrepareCachingStep.java:33)\r\n\tat org.gradle.internal.execution.impl.steps.StoreSnapshotsStep.execute(StoreSnapshotsStep.java:38)\r\n\tat org.gradle.internal.execution.impl.steps.StoreSnapshotsStep.execute(StoreSnapshotsStep.java:23)\r\n\tat org.gradle.internal.execution.impl.steps.SkipUpToDateStep.executeBecause(SkipUpToDateStep.java:96)\r\n\tat org.gradle.internal.execution.impl.steps.SkipUpToDateStep.lambda$execute$0(SkipUpToDateStep.java:89)\r\n\tat java.util.Optional.map(Optional.java:215)\r\n\tat org.gradle.internal.execution.impl.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:52)\r\n\tat org.gradle.internal.execution.impl.steps.SkipUpToDateStep.execute(SkipUpToDateStep.java:36)\r\n\tat org.gradle.internal.execution.impl.DefaultWorkExecutor.execute(DefaultWorkExecutor.java:34)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:91)\r\n\t... 35 more\r\nCaused by: com.android.build.api.transform.TransformException: java.lang.RuntimeException: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/1.jar --input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/18.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-analyzer/build/libs/leakcanary-analyzer-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-leaksentry/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-watcher/build/libs/leakcanary-watcher-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-haha/build/libs/leakcanary-haha-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-log/build/libs/leakcanary-log-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/tmp/kotlin-classes/debug --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/42582547e115bdc1396d856455b874a1dd5cd90c6c908d229678325304b1643f.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/11f6bdd4e815e4b64fae437ac4068ef62a39e10a4a08c6c8247d8a20e8c45c38.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/52df658a22d7e1ebd1222b3ae0ed3d59a57d5f53d60ebb0fd229c53d3115a3d8.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/32f3023577a3259af2540a00e9c851b37d8e73cdbbbcb6da1a1d95671387d47d.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0ce180eca808eca3928b09dd955d84c77cb4806333d5b750daaa07043e657403.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0f0e8bdba266b146dda89a3603b1c08b3ea452f647cca4b143ca5cfcafb1ed34.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/cffeb7e941e3762087633cb8cf70bb8d21e1b542563d732b0eeba06778c49d0e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/e1891b3c8464fe68ddea08a4d59013f1b080323896bb81628df016b078c160b7.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/c1f11d7ea0a21c349a817ed60cbec6f87011e8f2af6000cfec63645d9702294e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/898c88b7244c22a1990e479866c71e155075e4a880ca06e353a0857f20ab4e4d.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/platforms/android-28/android.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/build-tools/28.0.3/core-lambda-stubs.jar --min_sdk_version 14 --desugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --copy_bridges_from_classpath}\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.transform(DesugarTransform.java:286)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:239)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:235)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n\t... 77 more\r\nCaused by: java.lang.RuntimeException: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/1.jar --input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/18.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-analyzer/build/libs/leakcanary-analyzer-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-leaksentry/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-watcher/build/libs/leakcanary-watcher-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-haha/build/libs/leakcanary-haha-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-log/build/libs/leakcanary-log-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/tmp/kotlin-classes/debug --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/42582547e115bdc1396d856455b874a1dd5cd90c6c908d229678325304b1643f.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/11f6bdd4e815e4b64fae437ac4068ef62a39e10a4a08c6c8247d8a20e8c45c38.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/52df658a22d7e1ebd1222b3ae0ed3d59a57d5f53d60ebb0fd229c53d3115a3d8.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/32f3023577a3259af2540a00e9c851b37d8e73cdbbbcb6da1a1d95671387d47d.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0ce180eca808eca3928b09dd955d84c77cb4806333d5b750daaa07043e657403.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0f0e8bdba266b146dda89a3603b1c08b3ea452f647cca4b143ca5cfcafb1ed34.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/cffeb7e941e3762087633cb8cf70bb8d21e1b542563d732b0eeba06778c49d0e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/e1891b3c8464fe68ddea08a4d59013f1b080323896bb81628df016b078c160b7.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/c1f11d7ea0a21c349a817ed60cbec6f87011e8f2af6000cfec63645d9702294e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/898c88b7244c22a1990e479866c71e155075e4a880ca06e353a0857f20ab4e4d.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/platforms/android-28/android.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/build-tools/28.0.3/core-lambda-stubs.jar --min_sdk_version 14 --desugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --copy_bridges_from_classpath}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n\tat java.util.concurrent.ForkJoinTask.reportException(ForkJoinTask.java:677)\r\n\tat java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:720)\r\n\tat com.android.ide.common.internal.WaitableExecutor.waitForTasksWithQuickFail(WaitableExecutor.java:149)\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.processNonCachedOnes(DesugarTransform.java:456)\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.transform(DesugarTransform.java:271)\r\n\t... 80 more\r\nCaused by: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/1.jar --input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/18.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-analyzer/build/libs/leakcanary-analyzer-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-leaksentry/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-watcher/build/libs/leakcanary-watcher-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-haha/build/libs/leakcanary-haha-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-log/build/libs/leakcanary-log-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/tmp/kotlin-classes/debug --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/42582547e115bdc1396d856455b874a1dd5cd90c6c908d229678325304b1643f.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/11f6bdd4e815e4b64fae437ac4068ef62a39e10a4a08c6c8247d8a20e8c45c38.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/52df658a22d7e1ebd1222b3ae0ed3d59a57d5f53d60ebb0fd229c53d3115a3d8.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/32f3023577a3259af2540a00e9c851b37d8e73cdbbbcb6da1a1d95671387d47d.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0ce180eca808eca3928b09dd955d84c77cb4806333d5b750daaa07043e657403.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0f0e8bdba266b146dda89a3603b1c08b3ea452f647cca4b143ca5cfcafb1ed34.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/cffeb7e941e3762087633cb8cf70bb8d21e1b542563d732b0eeba06778c49d0e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/e1891b3c8464fe68ddea08a4d59013f1b080323896bb81628df016b078c160b7.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/c1f11d7ea0a21c349a817ed60cbec6f87011e8f2af6000cfec63645d9702294e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/898c88b7244c22a1990e479866c71e155075e4a880ca06e353a0857f20ab4e4d.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/platforms/android-28/android.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/build-tools/28.0.3/core-lambda-stubs.jar --min_sdk_version 14 --desugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --copy_bridges_from_classpath}\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1431)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/1.jar --input /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --output /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/transforms/desugar/debug/18.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-android-core/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-analyzer/build/libs/leakcanary-analyzer-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-leaksentry/build/intermediates/runtime_library_classes/debug/classes.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-watcher/build/libs/leakcanary-watcher-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-haha/build/libs/leakcanary-haha-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-log/build/libs/leakcanary-log-2.0-alpha-2.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/javac/debug/compileDebugJavaWithJavac/classes --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/tmp/kotlin-classes/debug --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/42582547e115bdc1396d856455b874a1dd5cd90c6c908d229678325304b1643f.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/11f6bdd4e815e4b64fae437ac4068ef62a39e10a4a08c6c8247d8a20e8c45c38.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/52df658a22d7e1ebd1222b3ae0ed3d59a57d5f53d60ebb0fd229c53d3115a3d8.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/32f3023577a3259af2540a00e9c851b37d8e73cdbbbcb6da1a1d95671387d47d.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0ce180eca808eca3928b09dd955d84c77cb4806333d5b750daaa07043e657403.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/0f0e8bdba266b146dda89a3603b1c08b3ea452f647cca4b143ca5cfcafb1ed34.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/cffeb7e941e3762087633cb8cf70bb8d21e1b542563d732b0eeba06778c49d0e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/e1891b3c8464fe68ddea08a4d59013f1b080323896bb81628df016b078c160b7.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/c1f11d7ea0a21c349a817ed60cbec6f87011e8f2af6000cfec63645d9702294e.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/5de30bbc59babd16ec460e308bd312e0731b3ee5744092ab2b6b30e132d19ffd.jar --classpath_entry /Users/linsir/AndroidStudioProjects/leakcanary/leakcanary-sample/build/intermediates/fixed_stack_frames/debug/out/898c88b7244c22a1990e479866c71e155075e4a880ca06e353a0857f20ab4e4d.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/platforms/android-28/android.jar --bootclasspath_entry /Users/linsir/Library/Android/sdk/build-tools/28.0.3/core-lambda-stubs.jar --min_sdk_version 14 --desugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --copy_bridges_from_classpath}\r\n\tat com.android.build.gradle.internal.process.GradleProcessResult.buildProcessException(GradleProcessResult.java:73)\r\n\tat com.android.build.gradle.internal.process.GradleProcessResult.assertNormalExitValue(GradleProcessResult.java:48)\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.lambda$processNonCachedOnes$1(DesugarTransform.java:452)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1424)\r\n\t... 4 more\r\nCaused by: org.gradle.process.internal.ExecException: Process 'command '/Library/Java/JavaVirtualMachines/jdk1.8.0_101.jdk/Contents/Home/bin/java'' finished with non-zero exit value 1\r\n\tat org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:396)\r\n\tat com.android.build.gradle.internal.process.GradleProcessResult.assertNormalExitValue(GradleProcessResult.java:46)\r\n\t... 6 more\r\n\r\n\r\n```\r\n\r\n\r\n\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\nfix it , build success\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: v2.0-alpha-2\r\n* Android OS version: all\r\n* Gradle version: 3.4.0\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1406", "user": "linsir6", "labels": ["type: bug"], "created": "2019-06-25 11:00:31", "closed": "2019-07-03 18:58:48", "commits": {}, "ttf": 8.000277777777777, "commitsDetails": []}, {"title": "after add \"debugImplementation 'com.squar... \" project not build ", "body": "after add \"debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.0-alpha-2'\" project not build.\r\n\r\nError:\r\norg.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:transformClassesWithDesugarForDebug'.\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:100)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:70)\r\n\tat org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)\r\n\tat org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:62)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:60)\r\n\tat org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:97)\r\n\tat org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:87)\r\n\tat org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:52)\r\n\tat org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)\r\n\tat org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker$1.run(DefaultTaskGraphExecuter.java:248)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:241)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskGraphExecuter$EventFiringTaskWorker.execute(DefaultTaskGraphExecuter.java:230)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.processTask(DefaultTaskPlanExecutor.java:123)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.access$200(DefaultTaskPlanExecutor.java:79)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:104)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:98)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.execute(DefaultTaskExecutionPlan.java:626)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskExecutionPlan.executeWithTask(DefaultTaskExecutionPlan.java:581)\r\n\tat org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$TaskExecutorWorker.run(DefaultTaskPlanExecutor.java:98)\r\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\r\n\tat org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: java.lang.RuntimeException: com.android.build.api.transform.TransformException: java.lang.RuntimeException: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/71.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/68.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/classes/debug --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/59.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/61.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/70.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/66.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/69.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/62.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/63.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/68.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/64.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/0.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/21.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/56.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/30.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/48.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/39.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/13.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/22.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/20.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/38.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/46.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/29.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/55.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/8.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/47.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/12.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/40.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/41.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/7.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/54.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/11.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/24.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/37.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/49.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/19.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/6.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/36.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/53.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/23.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/10.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/26.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/51.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/5.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/43.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/18.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/34.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/35.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/17.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/50.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/33.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/4.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/16.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/42.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/25.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/15.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/45.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/32.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/3.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/58.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/28.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/2.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/9.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/14.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/31.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/44.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/1.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/27.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/android.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/org.apache.http.legacy.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.mock.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.base.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.runner.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/resources.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jce.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar --min_sdk_version 19 --nodesugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --legacy_jacoco_fix}\r\n\tat com.android.builder.profile.Recorder$Block.handleException(Recorder.java:55)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:104)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask.transform(TransformTask.java:212)\r\n\tat sun.reflect.GeneratedMethodAccessor296.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)\r\n\tat org.gradle.api.internal.project.taskfactory.IncrementalTaskAction.doExecute(IncrementalTaskAction.java:46)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)\r\n\tat org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:121)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:336)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:328)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:199)\r\n\tat org.gradle.internal.progress.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:110)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:110)\r\n\tat org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:92)\r\n\t... 32 more\r\nCaused by: com.android.build.api.transform.TransformException: java.lang.RuntimeException: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/71.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/68.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/classes/debug --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/59.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/61.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/70.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/66.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/69.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/62.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/63.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/68.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/64.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/0.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/21.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/56.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/30.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/48.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/39.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/13.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/22.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/20.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/38.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/46.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/29.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/55.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/8.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/47.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/12.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/40.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/41.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/7.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/54.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/11.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/24.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/37.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/49.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/19.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/6.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/36.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/53.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/23.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/10.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/26.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/51.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/5.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/43.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/18.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/34.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/35.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/17.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/50.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/33.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/4.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/16.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/42.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/25.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/15.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/45.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/32.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/3.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/58.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/28.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/2.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/9.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/14.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/31.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/44.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/1.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/27.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/android.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/org.apache.http.legacy.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.mock.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.base.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.runner.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/resources.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jce.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar --min_sdk_version 19 --nodesugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --legacy_jacoco_fix}\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.transform(DesugarTransform.java:292)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:221)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:217)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n\t... 47 more\r\nCaused by: java.lang.RuntimeException: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/71.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/68.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/classes/debug --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/59.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/61.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/70.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/66.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/69.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/62.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/63.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/68.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/64.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/0.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/21.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/56.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/30.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/48.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/39.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/13.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/22.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/20.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/38.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/46.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/29.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/55.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/8.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/47.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/12.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/40.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/41.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/7.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/54.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/11.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/24.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/37.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/49.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/19.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/6.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/36.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/53.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/23.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/10.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/26.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/51.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/5.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/43.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/18.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/34.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/35.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/17.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/50.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/33.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/4.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/16.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/42.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/25.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/15.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/45.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/32.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/3.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/58.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/28.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/2.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/9.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/14.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/31.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/44.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/1.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/27.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/android.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/org.apache.http.legacy.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.mock.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.base.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.runner.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/resources.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jce.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar --min_sdk_version 19 --nodesugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --legacy_jacoco_fix}\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat java.util.concurrent.ForkJoinTask.getThrowableException(ForkJoinTask.java:593)\r\n\tat java.util.concurrent.ForkJoinTask.reportException(ForkJoinTask.java:677)\r\n\tat java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:720)\r\n\tat com.android.ide.common.internal.WaitableExecutor.waitForTasksWithQuickFail(WaitableExecutor.java:146)\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.processNonCachedOnes(DesugarTransform.java:466)\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.transform(DesugarTransform.java:277)\r\n\t... 50 more\r\nCaused by: java.lang.RuntimeException: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/71.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/68.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/classes/debug --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/59.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/61.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/70.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/66.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/69.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/62.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/63.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/68.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/64.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/0.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/21.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/56.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/30.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/48.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/39.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/13.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/22.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/20.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/38.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/46.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/29.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/55.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/8.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/47.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/12.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/40.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/41.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/7.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/54.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/11.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/24.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/37.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/49.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/19.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/6.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/36.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/53.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/23.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/10.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/26.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/51.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/5.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/43.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/18.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/34.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/35.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/17.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/50.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/33.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/4.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/16.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/42.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/25.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/15.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/45.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/32.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/3.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/58.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/28.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/2.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/9.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/14.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/31.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/44.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/1.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/27.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/android.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/org.apache.http.legacy.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.mock.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.base.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.runner.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/resources.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jce.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar --min_sdk_version 19 --nodesugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --legacy_jacoco_fix}\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1431)\r\n\tat java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)\r\n\tat java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)\r\n\tat java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)\r\n\tat java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)\r\nCaused by: com.android.ide.common.process.ProcessException: Error while executing java process with main class com.google.devtools.build.android.desugar.Desugar with arguments {--input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/71.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/68.jar --input /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --output /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/desugar/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/classes/debug --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/65.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/59.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/61.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/70.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/66.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/69.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/62.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/63.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/67.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/68.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/64.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/60.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/0.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/21.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/56.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/30.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/48.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/39.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/13.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/22.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/20.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/38.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/46.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/29.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/55.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/8.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/47.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/12.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/40.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/41.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/7.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/54.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/11.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/24.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/37.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/49.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/19.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/6.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/36.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/53.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/23.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/10.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/26.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/51.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/5.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/43.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/18.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/34.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/35.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/17.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/50.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/33.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/4.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/16.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/42.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/25.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/15.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/45.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/32.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/3.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/58.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/28.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/2.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/9.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/14.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/31.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/44.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/1.jar --classpath_entry /home/deni5n/project/WordTrainer/app/build/intermediates/transforms/stackFramesFixer/debug/27.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/android.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/org.apache.http.legacy.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.mock.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.base.jar --bootclasspath_entry /home/deni5n/android-sdk/platforms/android-28/optional/android.test.runner.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/resources.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/rt.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jce.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar --bootclasspath_entry /usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar --min_sdk_version 19 --nodesugar_try_with_resources_if_needed --desugar_try_with_resources_omit_runtime_classes --legacy_jacoco_fix}\r\n\tat com.android.build.gradle.internal.process.GradleProcessResult.buildProcessException(GradleProcessResult.java:73)\r\n\tat com.android.build.gradle.internal.process.GradleProcessResult.assertNormalExitValue(GradleProcessResult.java:48)\r\n\tat com.android.build.gradle.internal.transforms.DesugarTransform.lambda$processNonCachedOnes$3(DesugarTransform.java:462)\r\n\tat java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1424)\r\n\t... 4 more\r\nCaused by: org.gradle.process.internal.ExecException: Process 'command '/usr/lib/jvm/java-8-oracle/bin/java'' finished with non-zero exit value 1\r\n\tat org.gradle.process.internal.DefaultExecHandle$ExecResultImpl.assertNormalExitValue(DefaultExecHandle.java:382)\r\n\tat com.android.build.gradle.internal.process.GradleProcessResult.assertNormalExitValue(GradleProcessResult.java:46)\r\n\t... 6 more\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-alpha-2\r\n* Android OS version: 25\r\n* Gradle version: 4.4\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1391", "user": "deni5n", "labels": ["type: bug"], "created": "2019-06-14 17:16:22", "closed": "2019-06-15 13:39:38", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "com.android.tools.r8.utils.AbortException: Error: Program type already present: android.support.v4.app.INotificationSideChannel$Stub$Proxy", "body": "### Description\r\n\r\n[Description of the issue]\r\n\r\nWhen upgrading LeakCanary2, we have to include the dependencies from ``androidx.core:core`` because of the ``FileProvider``.\r\n\r\nBut for a large project that hasn't done the migration to androidx yet, we have to depend on ``support-compat`` as well.\r\n\r\nThis will cause duplicate class errors when compiling since ``android.support.v4.app.INotificationSideChannel`` exist in both androidx and support libraries.\r\n\r\nIs there a way to bypass this problem without androidx migration? In our case the migration cannot be done in a short term.\r\n\r\n```\r\nCaused by: com.android.build.api.transform.TransformException: Error while generating the main dex list:\r\nError while merging dex archives: \r\nLearn how to resolve the issue at https://developer.android.com/studio/build/dependencies#duplicate_classes.\r\nProgram type already present: android.support.v4.app.INotificationSideChannel$Stub$Proxy\r\n\tat com.android.build.gradle.internal.transforms.D8MainDexListTransform.transform(D8MainDexListTransform.kt:147)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:239)\r\n\tat com.android.build.gradle.internal.pipeline.TransformTask$2.call(TransformTask.java:235)\r\n\tat com.android.builder.profile.ThreadRecorder.record(ThreadRecorder.java:102)\r\n\t... 96 more\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n* Using LeakCanary2 with a project which also depends on support-compat\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/1390", "user": "Sayary", "labels": ["type: bug"], "created": "2019-06-13 18:06:25", "closed": "2019-07-08 13:37:14", "commits": {}, "ttf": 24.00027777777778, "commitsDetails": []}, {"title": "Dynamic Shortcut should not add when release ", "body": "### Description\r\ni think Dynamic Shortcut should not add when release;\r\ni saw the code and add R.bool.leak_canary_add_dynamic_shortcut to override the value to false,\r\nbut it not work.\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-alpha-2\r\n* Android OS version: android P\r\n* Gradle version: 5.1.1\r\n", "url": "https://github.com/square/leakcanary/issues/1386", "user": "BrightVan", "labels": ["type: bug"], "created": "2019-06-10 07:35:26", "closed": "2019-06-13 06:35:06", "commits": {}, "ttf": 2.000277777777778, "commitsDetails": []}, {"title": "Resource$NotFoundException in plug-in project", "body": "* plug-in project(see [DroidPlugin](https://github.com/DroidPluginTeam/DroidPlugin) or [atlas](https://github.com/alibaba/atlas) if never used plug-in project before)\r\n* LeakCanary version >= 1.6.2\r\n\r\nMeet the conditions above, LeakCanary crashed while a memory leak was detected. \r\n\r\nHere is  the log(LeakCanary v1.6.3):\r\n```\r\n    --------- beginning of crash\r\n2019-05-23 20:44:24.511 2544-2544/? E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.xxx, PID: 2544\r\n    android.content.res.Resources$NotFoundException: Resource ID #0x7f0b0183\r\n        at android.content.res.ResourcesImpl.getValue(ResourcesImpl.java:211)\r\n        at android.content.res.MiuiResourcesImpl.getValue(MiuiResourcesImpl.java:94)\r\n        at android.content.res.Resources.loadXmlResourceParser(Resources.java:2158)\r\n        at android.content.res.Resources.getLayout(Resources.java:1156)\r\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:425)\r\n        at android.view.LayoutInflater.inflate(LayoutInflater.java:374)\r\n        at com.squareup.leakcanary.AndroidHeapDumper$2.run(AndroidHeapDumper.java:117)\r\n        at android.os.Handler.handleCallback(Handler.java:793)\r\n        at android.os.Handler.dispatchMessage(Handler.java:98)\r\n        at android.os.Looper.loop(Looper.java:176)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6701)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:249)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:783)\r\n```\r\n\r\nThis happened due to [#1116](https://github.com/square/leakcanary/pull/1116/files/4e547c1e0a4c36fc7b1d5b429b25646ddcaf935c).\r\nIn fixed commit patch, LeakCanary listen lifecycle to get a resumed activity, then inflate toast contentView with this resumed activity. \r\n\r\nA plug-in project include multiple apks: one is host apk, others are plugin apk. We started App with host apk, the plugin apk was loaded dynamically. When listen lifecycle, we might get a resumed activity belongs to plugin apk, but the toast layout resource exists in the host apk. Find the host apk resource with current plugin apk inflater, App crashed.\r\n\r\nThis crash was noticed once by @Mrnoknow in [#196](https://github.com/square/leakcanary/issues/196#issuecomment-450808666), still exists in version 2.0.", "url": "https://github.com/square/leakcanary/issues/1385", "user": "1step2hell", "labels": ["type: bug"], "created": "2019-06-06 02:45:27", "closed": "2019-07-03 22:28:32", "commits": {"2c0e5975f1c681fd48c2e7629e96571a8d7874f1": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "529b7b1c088e70b1b4c271f8f6892a7bf69a0e47": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "20352f1a1ddd4cbfd4c751654b135c4cfea846f2": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "b16376fa6895a708945e85e54f28a5521bededa1": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "2c0e5975f1c681fd48c2e7629e96571a8d7874f1", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "529b7b1c088e70b1b4c271f8f6892a7bf69a0e47", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["968083a915343d881bd63e40587c070fde543732"], "nameRev": "529b7b1c088e70b1b4c271f8f6892a7bf69a0e47 tags/v2.0-alpha-3~8", "commitMessage": "Inflate leak toast from application context (#1435)\n\nAccording to #1385 some apps load within other host apps, and the layout inflater won't find the toast resource in the Resources class of a hosted activity.\r\n\r\nSo instead we're using the application context. I have no idea if this will work, but it doesn't hurt.", "commitDateTime": "2019-07-03 15:20:51", "authoredDateTime": "2019-07-03 15:20:51", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "20352f1a1ddd4cbfd4c751654b135c4cfea846f2", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b16376fa6895a708945e85e54f28a5521bededa1", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["4e206660f95bc662fa3db2ee7b1156f5c0d8ec7a"], "nameRev": "b16376fa6895a708945e85e54f28a5521bededa1 tags/v2.0-alpha-3~1", "commitMessage": "Use application context for toast inflate (#1442)\n\nSee https://github.com/square/leakcanary/issues/1385#issuecomment-508431469", "commitDateTime": "2019-07-04 04:36:45", "authoredDateTime": "2019-07-04 04:36:45", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b16376fa6895a708945e85e54f28a5521bededa1"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1.0, "deletions": 1.0, "lines": 2.0, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt"]}, {"title": "LeakCanary runs in UI tests by default", "body": "Not quite sure what we should do here, but out of the box LeakCanary runs in any debug environment. While we do support [running LeakCanary in instrumentation tests](https://github.com/square/leakcanary#running-leakcanary-in-instrumentation-tests), this is an intentional step that requires an extra dependency and config. It's not clear that the right default behavior is for LeakCanary to run in UI tests.\r\n\r\nIs there a way to detect that we're running in UI tests?\r\n\r\nIn the mean time, we can recommend the following code in UI Tests:\r\n\r\n```\r\nLeakSentry.config = LeakSentry.config.copy(enabled = false)\r\n```", "url": "https://github.com/square/leakcanary/issues/1382", "user": "pyricau", "labels": ["type: bug"], "created": "2019-06-05 03:41:10", "closed": "2019-07-03 22:56:42", "commits": {"af30291268def89814472db3365b1c994aabec42": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "1aeae952409cb6a6813876c7dbc0de0d90cee4a9": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "5774068671443701a33896f7a200169a51ba1cf0": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 28.00027777777778, "commitsDetails": [{"commitHash": "af30291268def89814472db3365b1c994aabec42", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1aeae952409cb6a6813876c7dbc0de0d90cee4a9", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "5774068671443701a33896f7a200169a51ba1cf0", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["a4fd52606533f89150247f6bc751d5aceb0ea213"], "nameRev": "5774068671443701a33896f7a200169a51ba1cf0 tags/v2.0-alpha-3~5", "commitMessage": "Disable heap dumping during UI tests (#1436)\n\nThis makes the assumption that most apps use Android X for UI tests.\r\n\r\nFixes #1382", "commitDateTime": "2019-07-03 15:56:42", "authoredDateTime": "2019-07-03 15:56:42", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/InternalLeakCanary.kt", "insertions": 32, "deletions": 0, "lines": 32}, {"filePath": "leakcanary-android-instrumentation/src/main/java/leakcanary/InstrumentationLeakDetector.kt", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Errors when using Newpipe.", "body": "### Description\r\nhttps://github.com/TeamNewPipe/NewPipe\r\nI builded with Gradle and found some errors when I turned the LeakCanary option.\r\n\r\nHere are 5 Errors(all are OutofMemoryError)\r\n### Steps to Reproduce\r\n\r\n[Provide a sample project, a .hprof file or a failing test]\r\n\r\n##################################################################\r\n1st One\r\nIn org.schabi.newpipe.debug:0.16.0:720.\r\n* FAILURE in 1.5.4 74837f0:java.lang.OutOfMemoryError: OutOfMemoryError thrown while trying to throw OutOfMemoryError; no stack trace available\r\n\r\n* Reference Key: 04b6672f-b795-4241-812e-4a9af61ad638\r\n* Device: samsung samsung SM-G955F EXTREME UX 9.0 LITE 1.0 By HPM8294\r\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.5.4 74837f0\r\n* Durations: watch=156567ms, gc=203ms, heap dump=5522ms, analysis=180754ms\r\n* Excluded Refs:\r\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\r\n| Field: android.os.UserManager.mContext\r\n| Field: android.net.ConnectivityManager.sInstance\r\n| Field: com.samsung.android.content.clipboard.SemClipboardManager.mContext\r\n| Field: com.samsung.android.emergencymode.SemEmergencyManager.mContext\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n\r\n[2019-05-27_23-25-21_981.hprof.zip](https://github.com/square/leakcanary/files/3251391/2019-05-27_23-25-21_981.hprof.zip)\r\n##################################################################\r\n\r\n##################################################################\r\n2nd One\r\nIn org.schabi.newpipe.debug:0.16.0:720.\r\n* FAILURE in 1.5.4 74837f0:java.lang.OutOfMemoryError: Failed to allocate a 167144 byte allocation with 2884416 free bytes and 2MB until OOM; failed due to fragmentation (required continguous free 167936 bytes where largest contiguous free 53248 bytes)\r\n\tat com.squareup.haha.perflib.ArrayInstance.getValues(ArrayInstance.java:43)\r\n\tat com.squareup.haha.perflib.ArrayInstance.accept(ArrayInstance.java:82)\r\n\tat com.squareup.haha.perflib.analysis.TopologicalSort$TopologicalSortVisitor.doVisit(TopologicalSort.java:88)\r\n\tat com.squareup.haha.perflib.analysis.TopologicalSort.compute(TopologicalSort.java:36)\r\n\tat com.squareup.haha.perflib.Snapshot.computeDominators(Snapshot.java:311)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(HeapAnalyzer.java:189)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:124)\r\n\tat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:148)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n* Reference Key: e8900ea0-a5fe-4f20-b730-69b39dd209dc\r\n* Device: samsung samsung SM-G955F EXTREME UX 9.0 LITE 1.0 By HPM8294\r\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.5.4 74837f0\r\n* Durations: watch=648782ms, gc=208ms, heap dump=5109ms, analysis=92364ms\r\n* Excluded Refs:\r\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\r\n| Field: android.os.UserManager.mContext\r\n| Field: android.net.ConnectivityManager.sInstance\r\n| Field: com.samsung.android.content.clipboard.SemClipboardManager.mContext\r\n| Field: com.samsung.android.emergencymode.SemEmergencyManager.mContext\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n\r\n[2019-05-27_23-35-30_732.hprof.zip](https://github.com/square/leakcanary/files/3251419/2019-05-27_23-35-30_732.hprof.zip)\r\n##################################################################\r\n##################################################################\r\n3rd One\r\nIn org.schabi.newpipe.debug:0.16.0:720.\r\n* FAILURE in 1.5.4 74837f0:java.lang.OutOfMemoryError: Failed to allocate a 1491136 byte allocation with 494016 free bytes and 482KB until OOM\r\n\tat java.util.ArrayList.<init>(ArrayList.java:75)\r\n\tat com.squareup.haha.perflib.Snapshot.getReachableInstances(Snapshot.java:322)\r\n\tat com.squareup.haha.perflib.analysis.Dominators.computeRetainedSizes(Dominators.java:116)\r\n\tat com.squareup.haha.perflib.Snapshot.computeDominators(Snapshot.java:313)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(HeapAnalyzer.java:189)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:124)\r\n\tat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:148)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n* Reference Key: 009d46a3-578d-425a-b090-ca2ea6e599b6\r\n* Device: samsung samsung SM-G955F EXTREME UX 9.0 LITE 1.0 By HPM8294\r\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.5.4 74837f0\r\n* Durations: watch=322150ms, gc=202ms, heap dump=4975ms, analysis=113705ms\r\n* Excluded Refs:\r\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\r\n| Field: android.os.UserManager.mContext\r\n| Field: android.net.ConnectivityManager.sInstance\r\n| Field: com.samsung.android.content.clipboard.SemClipboardManager.mContext\r\n| Field: com.samsung.android.emergencymode.SemEmergencyManager.mContext\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n\r\n[2019-05-31_20-27-53_237.hprof.zip](https://github.com/square/leakcanary/files/3251424/2019-05-31_20-27-53_237.hprof.zip)\r\n##################################################################\r\n\r\n##################################################################\r\n4th One\r\nIn org.schabi.newpipe.debug:0.16.0:720.\r\n* FAILURE in 1.5.4 74837f0:java.lang.OutOfMemoryError: Failed to allocate a 48 byte allocation with 8388608 free bytes and 14MB until OOM; failed due to fragmentation (required continguous free 4096 bytes for a new buffer where largest contiguous free 0 bytes)\r\n\tat com.squareup.haha.perflib.Instance.resetRetainedSize(Instance.java:155)\r\n\tat com.squareup.haha.perflib.analysis.Dominators.computeRetainedSizes(Dominators.java:111)\r\n\tat com.squareup.haha.perflib.Snapshot.computeDominators(Snapshot.java:313)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(HeapAnalyzer.java:189)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:124)\r\n\tat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:148)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n* Reference Key: b8d27ca4-8e9f-4866-ad98-3be2ea87567c\r\n* Device: samsung samsung SM-G955F EXTREME UX 9.0 LITE 1.0 By HPM8294\r\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.5.4 74837f0\r\n* Durations: watch=10248ms, gc=180ms, heap dump=4515ms, analysis=63534ms\r\n* Excluded Refs:\r\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\r\n| Field: android.os.UserManager.mContext\r\n| Field: android.net.ConnectivityManager.sInstance\r\n| Field: com.samsung.android.content.clipboard.SemClipboardManager.mContext\r\n| Field: com.samsung.android.emergencymode.SemEmergencyManager.mContext\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n\r\n[2019-06-03_23-52-53_342.hprof.zip](https://github.com/square/leakcanary/files/3251428/2019-06-03_23-52-53_342.hprof.zip)\r\n##################################################################\r\n\r\n##################################################################\r\n5th One\r\nIn org.schabi.newpipe.debug:0.16.0:720.\r\n* FAILURE in 1.5.4 74837f0:java.lang.OutOfMemoryError: Failed to allocate a 1416880 byte allocation with 6398808 free bytes and 6MB until OOM; failed due to fragmentation (required continguous free 1417216 bytes where largest contiguous free 303104 bytes)\r\n\tat java.util.ArrayList.<init>(ArrayList.java:75)\r\n\tat java.util.AbstractCollection.toArrayList(AbstractCollection.java:348)\r\n\tat java.util.AbstractCollection.toArray(AbstractCollection.java:339)\r\n\tat com.squareup.haha.guava.collect.ImmutableList.copyOf(ImmutableList.java:258)\r\n\tat com.squareup.haha.perflib.analysis.TopologicalSort$TopologicalSortVisitor.getOrderedInstances(TopologicalSort.java:99)\r\n\tat com.squareup.haha.perflib.analysis.TopologicalSort.compute(TopologicalSort.java:37)\r\n\tat com.squareup.haha.perflib.Snapshot.computeDominators(Snapshot.java:311)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(HeapAnalyzer.java:189)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:124)\r\n\tat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:148)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n* Reference Key: d05e9d8e-d56f-4f57-836b-374314506474\r\n* Device: samsung samsung SM-G955F EXTREME UX 9.0 LITE 1.0 By HPM8294\r\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.5.4 74837f0\r\n* Durations: watch=646228ms, gc=211ms, heap dump=4644ms, analysis=61814ms\r\n* Excluded Refs:\r\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\r\n| Field: android.os.UserManager.mContext\r\n| Field: android.net.ConnectivityManager.sInstance\r\n| Field: com.samsung.android.content.clipboard.SemClipboardManager.mContext\r\n| Field: com.samsung.android.emergencymode.SemEmergencyManager.mContext\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n\r\n[2019-06-04_00-11-58_071.hprof.zip](https://github.com/square/leakcanary/files/3251430/2019-06-04_00-11-58_071.hprof.zip)\r\n\r\nMost of this bugs happened when I turned the phone(Not power off)\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 1.5.4 (Not certainly)\r\n* Android OS version: 6.0\r\n* Gradle version: 4.6\r\n\r\n\r\n### Additional Information\r\n1. ##################################################################\r\nLeakcanary didn't loaded the 5th Log at the first time(when it collected)\r\n\r\n![Screenshot_20190604-001250](https://user-images.githubusercontent.com/31562186/58866108-d8432f00-86f2-11e9-8c9e-7cf32e956fe9.png)\r\n![Screenshot_20190604-001408](https://user-images.githubusercontent.com/31562186/58866117-dc6f4c80-86f2-11e9-9c24-72d5da9dc096.png)\r\n\r\nI waited 2 minites but this this did not load the log.\r\nEven if I waited for 60 minutes, I think that the result was the same.\r\n\r\nbut when I go out and open the app again, I could see the log.\r\n\r\n2. ##################################################################\r\n![Screenshot_20190604-081304](https://user-images.githubusercontent.com/31562186/58866508-b5fde100-86f3-11e9-9537-47b0b4f3b65f.png)\r\n\r\nThere is no scroll on this page, so I can't see the full log.\r\n3. ##################################################################\r\nIn the log, there is no warning when deleting logs.\r\n\r\nAll Logs delete has a warning, but in the each logs, I can delete log without warning.\r\nI think you need to fix it.\r\n\r\n\r\nAnd can you detach or fort logs of leakcanary app and Modified apps?\r\nIncluding log-saving folders?(Apps logs and Leakcanary logs are not sorted)\r\n\r\n![Screenshot_20190604-181320](https://user-images.githubusercontent.com/31562186/58866978-9915dd80-86f4-11e9-8cc9-64329ebd9c4f.png)\r\nSo I think it is promiscuous\r\n\r\n![Scst](https://user-images.githubusercontent.com/31562186/58867519-923b9a80-86f5-11e9-910f-2d267c6026e6.png)\r\nAnd hard to find what file is the app log or leakcanary log.\r\n", "url": "https://github.com/square/leakcanary/issues/1380", "user": "takid2848", "labels": ["type: bug"], "created": "2019-06-04 09:22:13", "closed": "2019-06-04 09:32:54", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Labelers don't apply to the leaking instance", "body": "### Description\r\n\r\nLabelers currently run on all leak nodes but the last one. They should\r\n", "url": "https://github.com/square/leakcanary/issues/1375", "user": "pyricau", "labels": ["type: bug"], "created": "2019-06-01 05:04:17", "closed": "2019-06-04 09:32:12", "commits": {"e5799db7cd150f758bcc660c8ab9585dda67f91c": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "949616ef1a22d1075100c0379ac1d6de00f95c07": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "1926cb1db73f9583e11c557dbf2e5d46e3896a6e": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "e5799db7cd150f758bcc660c8ab9585dda67f91c", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "949616ef1a22d1075100c0379ac1d6de00f95c07", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1926cb1db73f9583e11c557dbf2e5d46e3896a6e", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["1dac522124ba8a7ee73090dcdb946e9dd5b56a97"], "nameRev": "1926cb1db73f9583e11c557dbf2e5d46e3896a6e tags/v2.0-alpha-3~43", "commitMessage": "Text rendering tests (#1378)\n\n* Added test coverage for text rendering\r\n* Fixed bug: labels were not rendered on the last node (leaking instance)\r\n* Matched exclusions are now rendered on their own line\r\n\r\nFixes #1375\r\nFixes #1350", "commitDateTime": "2019-06-04 02:32:11", "authoredDateTime": "2019-06-04 02:32:11", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/leakcanary/internal/LeakTraceRenderer.kt", "insertions": 34, "deletions": 21, "lines": 55}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/HprofWriterHelper.kt", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/LeakTraceRendererTest.kt", "insertions": 191, "deletions": 0, "lines": 191}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "CI Failing", "body": "This fails:\r\n```\r\n./gradlew leakcanary-android-instrumentation:connectedCheck\r\n```\r\n\r\nOn API 16. \r\n\r\n> java.lang.AssertionError: Expected exactly one leak in HeapAnalysisSuccess(heapDumpFile=/data/data/com.squareup.leakcanary.instrumentation.test/files/instrumentation_tests_heapdump.hprof, createdAtTimeMillis=1559320564745, analysisDurationMillis=40357, retainedInstances=[NoPathToInstance(referenceKey=7d46428f-e866-4471-8510-cc0e1b2e1192, referenceName=, instanceClassName=android.view.View, watchDurationMillis=5193)])\r\n\r\n\r\nFragmentLeakTest\r\n\r\n\r\nfragmentShouldLeak | passed (25.483s)\r\nfragmentViewShouldLeak | failed (52.035s)\r\n", "url": "https://github.com/square/leakcanary/issues/1374", "user": "pyricau", "labels": ["type: bug"], "created": "2019-06-01 04:10:33", "closed": "2019-06-01 07:15:39", "commits": {"a0cf8ddeb40c21fdfcabaefb21fdc75979696def": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "2de049a9e0a5fde55a28e2c88c4d6195b750f855": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a0cf8ddeb40c21fdfcabaefb21fdc75979696def", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2de049a9e0a5fde55a28e2c88c4d6195b750f855", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["f4afb8f8169e4feb2d06e3c6dd3f3d7de6e220c8"], "nameRev": "2de049a9e0a5fde55a28e2c88c4d6195b750f855 tags/v2.0-alpha-3~48", "commitMessage": "Fix missed leaks on API 16 (#1376)\n\nThis was detected by CI.\r\n\r\nFixes #1374", "commitDateTime": "2019-06-01 09:15:39", "authoredDateTime": "2019-06-01 09:15:39", "commitGitStats": [{"filePath": "leakcanary-haha/src/main/java/leakcanary/HprofParser.kt", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Logcat is spammed with 2.0 alpha2", "body": "### Description\r\nI get several log messages per second when I use 2.0 alpha2\r\n\r\nExample:\r\n```\r\n2019-05-31 11:16:39.848 7408-7451/com.example D/LeakCanary: Checking retained instances because found new instance retained\r\n2019-05-31 11:16:39.849 7408-7451/com.example D/LeakCanary: Found 4 retained instances, which is less than the visible threshold of 5\r\n2019-05-31 11:16:39.860 7408-7451/com.example D/LeakCanary: Checking retained instances because found new instance retained\r\n2019-05-31 11:16:39.861 7408-7451/com.example D/LeakCanary: Found 4 retained instances, which is less than the visible threshold of 5\r\n2019-05-31 11:16:39.865 7408-7451/com.example D/LeakCanary: Checking retained instances because found new instance retained\r\n2019-05-31 11:16:39.866 7408-7451/com.example D/LeakCanary: Found 4 retained instances, which is less than the visible threshold of 5\r\n2019-05-31 11:16:39.871 7408-7451/com.example D/LeakCanary: Checking retained instances because found new instance retained\r\n2019-05-31 11:16:39.871 7408-7451/com.example D/LeakCanary: Found 4 retained instances, which is less than the visible threshold of 5\r\n2019-05-31 11:16:44.872 7408-7451/com.example D/LeakCanary: Checking retained instances because Showing retained instance notification\r\n2019-05-31 11:16:44.873 7408-7451/com.example D/LeakCanary: Found 4 retained instances, which is less than the visible threshold of 5\r\n2019-05-31 11:16:44.884 7408-7451/com.example D/LeakCanary: Checking retained instances because Showing retained instance notification\r\n2019-05-31 11:16:44.884 7408-7451/com.example D/LeakCanary: Found 4 retained instances, which is less than the visible threshold of 5\r\n2019-05-31 11:16:44.889 7408-7451/com.example D/LeakCanary: Checking retained instances because Showing retained instance notification\r\n...\r\n```\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-alpha2\r\n* Android OS version: API 28\r\n* Gradle version: 5.4.1", "url": "https://github.com/square/leakcanary/issues/1372", "user": "ansman", "labels": ["type: bug"], "created": "2019-05-31 15:35:16", "closed": "2019-06-04 08:20:53", "commits": {"743558495ea85b92bf312eb340d223a99f169cd0": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "1dac522124ba8a7ee73090dcdb946e9dd5b56a97": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "743558495ea85b92bf312eb340d223a99f169cd0", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["37b535d1fee01c4507bc4dce4c1d4561a8dff587"], "nameRev": "743558495ea85b92bf312eb340d223a99f169cd0 remotes/origin/py/limit_checks", "commitMessage": "Don't schedule more than one instance check\n\nPrior to this every foreground change and new retained instance would lead to a new scheduled instance check that would go forever until all instances are refs (or analyzed), which would lead to several checks per second (and spammy logs)\n\nFixes #1372\n", "commitDateTime": "2019-06-04 00:25:42", "authoredDateTime": "2019-06-04 00:25:42", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "insertions": 16, "deletions": 6, "lines": 22}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1dac522124ba8a7ee73090dcdb946e9dd5b56a97", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["37b535d1fee01c4507bc4dce4c1d4561a8dff587"], "nameRev": "1dac522124ba8a7ee73090dcdb946e9dd5b56a97 tags/v2.0-alpha-3~44", "commitMessage": "Don't schedule more than one instance check (#1379)\n\nPrior to this every foreground change and new retained instance would lead to a new scheduled instance check that would go forever until all instances are refs (or analyzed), which would lead to several checks per second (and spammy logs)\r\n\r\nFixes #1372", "commitDateTime": "2019-06-04 01:20:52", "authoredDateTime": "2019-06-04 01:20:52", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "insertions": 16, "deletions": 6, "lines": 22}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["743558495ea85b92bf312eb340d223a99f169cd0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 6, "lines": 22, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt"]}, {"title": "leak_canary_group_list_title_information build warning", "body": "### Description\r\nGetting build warning in android studio\r\n```\r\n> Task :<my_app>:generateDebugRFile\r\nwarn: removing resource <my_package>:string/leak_canary_group_list_title_information without required default value.\r\n```\r\n(Trying to keep gradle build as clean as possible to spot meaningful warnings)\r\n\r\nLeak canary `2.0-alpha-2`\r\nAndroid Studio 3.5 Beta 3\r\nGradle `4.10.1`\r\nAndroid gradle plugin `3.3.0`", "url": "https://github.com/square/leakcanary/issues/1370", "user": "tellypresence", "labels": ["type: bug"], "created": "2019-05-31 09:37:44", "closed": "2019-06-03 21:00:03", "commits": {"cf95f39979dd96ae04b4a7e2334e9b27ab050bb9": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "18cb8e17b8ca1106cf665f25e259f8f7663bba76": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "126b354f470055c9e648de76cf192b6359dd54a3": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "cf95f39979dd96ae04b4a7e2334e9b27ab050bb9", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "18cb8e17b8ca1106cf665f25e259f8f7663bba76", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["2de049a9e0a5fde55a28e2c88c4d6195b750f855"], "nameRev": "18cb8e17b8ca1106cf665f25e259f8f7663bba76 remotes/origin/py/unused_string", "commitMessage": "Remove unused translated string\n\nFixes #1370\n", "commitDateTime": "2019-06-01 17:25:38", "authoredDateTime": "2019-05-31 18:17:07", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/res/values-de/leak_canary_strings.xml", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "126b354f470055c9e648de76cf192b6359dd54a3", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["69df43ff429504d82de912023d0748a218394a48"], "nameRev": "126b354f470055c9e648de76cf192b6359dd54a3 tags/v2.0-alpha-3~46", "commitMessage": "Remove unused translated string (#1373)\n\nFixes #1370", "commitDateTime": "2019-06-03 23:00:02", "authoredDateTime": "2019-06-03 23:00:02", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/res/values-de/leak_canary_strings.xml", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["18cb8e17b8ca1106cf665f25e259f8f7663bba76"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Block app crashed when share stack dump", "body": "### Description\r\nBlock app crashed when share stack dump\r\n\r\n### Steps to Reproduce\r\n1. Open blocks app\r\n2. Choose a block item\r\n3. Share stack dump by menu\r\n4. App crashed\r\n\r\n### Version Information\r\n\r\n* LeakCanary version:com.squareup.leakcanary:leakcanary-android:2.0-alpha-2\r\n* Android OS version:Android 8.0.0\r\n* Gradle version:gradle-4.10.2-all\r\n\r\n### Additional Information\r\nandroid.os.FileUriExposedException: file:///storage/emulated/0/test_blockcanary_com.xxx/looper-2019-05-31_10-37-17.778.log exposed beyond app through ClipData.Item.getUri()\r\n at android.os.StrictMode.onFileUriExposed(StrictMode.java:1958)\r\n at android.net.Uri.checkFileUriExposed(Uri.java:2356)\r\n at android.content.ClipData.prepareToLeaveProcess(ClipData.java:941)\r\n at android.content.Intent.prepareToLeaveProcess(Intent.java:9757)\r\n at android.content.Intent.prepareToLeaveProcess(Intent.java:9763)\r\n at android.content.Intent.prepareToLeaveProcess(Intent.java:9742)\r\n at android.app.Instrumentation.execStartActivity(Instrumentation.java:1611)\r\n at android.app.Activity.startActivityForResult(Activity.java:4536)\r\n at android.app.Activity.startActivityForResult(Activity.java:4494)\r\n at android.app.Activity.startActivity(Activity.java:4855)\r\n at android.app.Activity.startActivity(Activity.java:4823)\r\n at com.github.moduth.blockcanary.ui.DisplayActivity.shareHeapDump(DisplayActivity.java:209)\r\n at com.github.moduth.blockcanary.ui.DisplayActivity.access$100(DisplayActivity.java:67)\r\n at com.github.moduth.blockcanary.ui.DisplayActivity$2.onMenuItemClick(DisplayActivity.java:164)\r\n at com.android.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:163)\r\n at com.android.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:908)\r\n at com.android.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:898)\r\n at com.android.internal.view.menu.MenuPopup.onItemClick(MenuPopup.java:128)\r\n at android.widget.AdapterView.performItemClick(AdapterView.java:318)\r\n at android.widget.AbsListView.performItemClick(AbsListView.java:1188)\r\n at android.widget.AbsListView$PerformClick.run(AbsListView.java:3172)\r\n at android.widget.AbsListView$3.run(AbsListView.java:4154)\r\n at android.os.Handler.handleCallback(Handler.java:792)\r\n at android.os.Handler.dispatchMessage(Handler.java:98)\r\n at android.os.Looper.loop(Looper.java:176)\r\n at android.app.ActivityThread.main(ActivityThread.java:6701)\r\n at java.lang.reflect.Method.invoke(Native Method)\r\n at com.android.internal.os.Zygote$MethodAndArgsCaller.run(Zygote.java:246)\r\n at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:783)\r\n", "url": "https://github.com/square/leakcanary/issues/1367", "user": "leimenghao1991", "labels": ["type: bug"], "created": "2019-05-31 03:31:27", "closed": "2019-06-04 07:35:04", "commits": {}, "ttf": 4.000277777777778, "commitsDetails": []}, {"title": "KotlinNullPointerException", "body": "### Description\r\n\r\nThere is a NPE\r\n\r\n### Steps to Reproduce\r\n\r\nApp crashed when I switched the app from the background to the foreground \r\n\r\n### Version Information\r\n\r\n* LeakCanary version: com.squareup.leakcanary:leakcanary-android:2.0-alpha-2\r\n* Android OS version: Android 8.0.0\r\n* Gradle version: gradle-4.10.2-all\r\n\r\n### Additional Information\r\n\r\nkotlin.KotlinNullPointerException\r\n at leakcanary.HeapAnalyzer.readHeapDumpMemoryStore(HeapAnalyzer.kt:207)\r\n at leakcanary.HeapAnalyzer.checkForLeaks(HeapAnalyzer.kt:108)\r\n at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:49)\r\n at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:68)\r\n at android.os.Handler.dispatchMessage(Handler.java:105)\r\n at android.os.Looper.loop(Looper.java:176)\r\n at android.os.HandlerThread.run(HandlerThread.java:65)\r\n", "url": "https://github.com/square/leakcanary/issues/1366", "user": "leimenghao1991", "labels": ["type: bug"], "created": "2019-05-31 03:07:24", "closed": "2019-06-26 23:04:15", "commits": {"4139289c522781c69f38dedb506e2e61a4c6fac2": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "86bf8a415b0b594c9715bd0659ff4906167ccf67": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 26.00027777777778, "commitsDetails": [{"commitHash": "4139289c522781c69f38dedb506e2e61a4c6fac2", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["78b173646ed33678b5195fd8c564dba96ea288e1"], "nameRev": "4139289c522781c69f38dedb506e2e61a4c6fac2 remotes/origin/py/no_store", "commitMessage": "Simplify how we track retained instances.\n\n* Removed HeapDumpMemoryStore\n* Simplified the \"retained\" concept by introducing a retained time for each weak ref. Then for all hprof old and new we just look at KeyedWeakReference instances which became retained before the heap dump time. If the field is missing (older hprofs) we assume all instances are retained.\n* This simplified a bunch of edge cases and removed the need to reporting cleared and missing references.\n* Also removed AnalysisBenchmarkTest which was ignored and didn't work.\n* Added RefWatcher.retainedInstances that can be used for logging purposes.\n\nFixes #1366\n", "commitDateTime": "2019-06-26 15:24:19", "authoredDateTime": "2019-06-26 15:24:19", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalysis.kt", "insertions": 13, "deletions": 16, "lines": 29}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalyzer.kt", "insertions": 39, "deletions": 93, "lines": 132}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/HeapDumpMemoryStore.kt", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/internal/KeyedWeakReferenceMirror.kt", "insertions": 44, "deletions": 17, "lines": 61}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/HeapAnalyzerTest.kt", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/HprofWriterHelper.kt", "insertions": 4, "deletions": 15, "lines": 19}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "insertions": 22, "deletions": 23, "lines": 45}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/LeaksDbHelper.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/HeapAnalysisSuccessScreen.kt", "insertions": 0, "deletions": 30, "lines": 30}, {"filePath": "leakcanary-android-core/src/main/res/values-de/leak_canary_strings.xml", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_strings.xml", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "leakcanary-android-instrumentation/src/androidTest/java/leakcanary/AnalysisBenchmarkTest.kt", "insertions": 0, "deletions": 61, "lines": 61}, {"filePath": "leakcanary-android-instrumentation/src/main/java/leakcanary/InstrumentationLeakDetector.kt", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "leakcanary-watcher/src/main/java/leakcanary/KeyedWeakReference.kt", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "leakcanary-watcher/src/main/java/leakcanary/RefWatcher.kt", "insertions": 42, "deletions": 20, "lines": 62}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "86bf8a415b0b594c9715bd0659ff4906167ccf67", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["78b173646ed33678b5195fd8c564dba96ea288e1"], "nameRev": "86bf8a415b0b594c9715bd0659ff4906167ccf67 tags/v2.0-alpha-3~25", "commitMessage": "Simplify how we track retained instances. (#1414)\n\n* Removed HeapDumpMemoryStore\r\n* Simplified the \"retained\" concept by introducing a retained time for each weak ref. Then for all hprof old and new we just look at KeyedWeakReference instances which became retained before the heap dump time. If the field is missing (older hprofs) we assume all instances are retained.\r\n* This simplified a bunch of edge cases and removed the need to reporting cleared and missing references.\r\n* Also removed AnalysisBenchmarkTest which was ignored and didn't work.\r\n* Added RefWatcher.retainedInstances that can be used for logging purposes.\r\n\r\nFixes #1366", "commitDateTime": "2019-06-26 16:04:14", "authoredDateTime": "2019-06-26 16:04:14", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalysis.kt", "insertions": 13, "deletions": 16, "lines": 29}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalyzer.kt", "insertions": 39, "deletions": 93, "lines": 132}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/HeapDumpMemoryStore.kt", "insertions": 0, "deletions": 16, "lines": 16}, {"filePath": "leakcanary-analyzer/src/main/java/leakcanary/internal/KeyedWeakReferenceMirror.kt", "insertions": 44, "deletions": 17, "lines": 61}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/HeapAnalyzerTest.kt", "insertions": 3, "deletions": 4, "lines": 7}, {"filePath": "leakcanary-analyzer/src/test/java/leakcanary/internal/HprofWriterHelper.kt", "insertions": 4, "deletions": 15, "lines": 19}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "insertions": 22, "deletions": 23, "lines": 45}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/LeaksDbHelper.kt", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/HeapAnalysisSuccessScreen.kt", "insertions": 0, "deletions": 30, "lines": 30}, {"filePath": "leakcanary-android-core/src/main/res/values-de/leak_canary_strings.xml", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "leakcanary-android-core/src/main/res/values/leak_canary_strings.xml", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "leakcanary-android-instrumentation/src/androidTest/java/leakcanary/AnalysisBenchmarkTest.kt", "insertions": 0, "deletions": 61, "lines": 61}, {"filePath": "leakcanary-android-instrumentation/src/main/java/leakcanary/InstrumentationLeakDetector.kt", "insertions": 3, "deletions": 5, "lines": 8}, {"filePath": "leakcanary-watcher/src/main/java/leakcanary/KeyedWeakReference.kt", "insertions": 13, "deletions": 3, "lines": 16}, {"filePath": "leakcanary-watcher/src/main/java/leakcanary/RefWatcher.kt", "insertions": 42, "deletions": 20, "lines": 62}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4139289c522781c69f38dedb506e2e61a4c6fac2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 178, "deletions": 225, "lines": 403, "gitFilesChange": 10}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-instrumentation/src/main/java/leakcanary/InstrumentationLeakDetector.kt", "leakcanary-android-core/src/main/java/leakcanary/internal/activity/screen/HeapAnalysisSuccessScreen.kt", "leakcanary-analyzer/src/main/java/leakcanary/internal/KeyedWeakReferenceMirror.kt", "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalysis.kt", "leakcanary-watcher/src/main/java/leakcanary/RefWatcher.kt", "leakcanary-watcher/src/main/java/leakcanary/KeyedWeakReference.kt", "leakcanary-analyzer/src/main/java/leakcanary/HeapDumpMemoryStore.kt", "leakcanary-android-core/src/main/java/leakcanary/internal/HeapDumpTrigger.kt", "leakcanary-analyzer/src/main/java/leakcanary/HeapAnalyzer.kt", "leakcanary-android-core/src/main/java/leakcanary/internal/activity/db/LeaksDbHelper.kt"]}, {"title": "Leak analysis failed", "body": "### Description\r\n\r\n\"Leak analysis failed\" happened when I try the LeakCanary plugin 2.0-alpha-2 1f151c4\r\n\r\n```\r\n[...]\r\nD/LeakCanary: Found 1 retained instances, which is less than the visible threshold of 5\r\nD/LeakCanary: Checking retained instances because Showing retained instance notification\r\nD/LeakCanary: Found 1 retained instances, which is less than the visible threshold of 5\r\n[...]\r\nD/LeakCanary: Dumping the heap because user tapped notification\r\nD/LeakCanary: Checking retained instances because Showing retained instance notification\r\nD/LeakCanary: No retained instances\r\nD/LeakCanary: Analysis in progress, working on: READING_HEAP_DUMP_FILE\r\nD/LeakCanary: HeapAnalysisFailure(heapDumpFile=/storage/emulated/0/Download/leakcanary-com.epicbutterfly.vince.wfootball4.dev/df5f4fa5-d4d6-4694-9947-c8ff5fb750c7_pending.hprof, createdAtTimeMillis=1559142821323, analysisDurationMillis=146, exception=\r\n    java.io.EOFException\r\n        at okio.RealBufferedSource.require(RealBufferedSource.kt:55)\r\n        at okio.RealBufferedSource.readInt(RealBufferedSource.kt:259)\r\n        at leakcanary.HprofParser$Companion.open(HprofParser.kt:954)\r\n        at leakcanary.HeapAnalyzer.checkForLeaks(HeapAnalyzer.kt:100)\r\n        at leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.kt:49)\r\n        at leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.kt:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:76)\r\n        at android.os.Handler.dispatchMessage(Handler.java:106)\r\n        at android.os.Looper.loop(Looper.java:193)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\n    \r\n    )\r\n```\r\n\r\n### Steps to Reproduce\r\n\r\n[Here is the hpref file](https://github.com/square/leakcanary/files/3233175/hprof.file.zip)\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0-alpha-2 1f151c4\r\n* Android OS version: API 28\r\n* Gradle version: 5.4.1-all\r\n", "url": "https://github.com/square/leakcanary/issues/1364", "user": "EBfVince", "labels": ["type: bug"], "created": "2019-05-29 15:27:58", "closed": "2019-06-26 22:37:23", "commits": {"d0f48c31eb11f0bb1172dd34b8c9fac8f6bf0b89": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "1cd79e34e80cee6fa600dca61f04cec08ccdaf1b": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "69df43ff429504d82de912023d0748a218394a48": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 28.00027777777778, "commitsDetails": [{"commitHash": "d0f48c31eb11f0bb1172dd34b8c9fac8f6bf0b89", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1cd79e34e80cee6fa600dca61f04cec08ccdaf1b", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["2de049a9e0a5fde55a28e2c88c4d6195b750f855"], "nameRev": "1cd79e34e80cee6fa600dca61f04cec08ccdaf1b remotes/origin/py/0_length", "commitMessage": "Fail early on 0 byte length\n\n* Fail heap dumping (and notify) when the file size is 0, and don't move forward with analysis.\n* Improved error when file size is 0 (useful for hprof import)\n\nSee #1364\n", "commitDateTime": "2019-06-01 09:17:28", "authoredDateTime": "2019-05-30 11:21:29", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "leakcanary-haha/src/main/java/leakcanary/HprofParser.kt", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "69df43ff429504d82de912023d0748a218394a48", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["2de049a9e0a5fde55a28e2c88c4d6195b750f855"], "nameRev": "69df43ff429504d82de912023d0748a218394a48 tags/v2.0-alpha-3~47", "commitMessage": "Fail early on 0 byte length (#1365)\n\n* Fail heap dumping (and notify) when the file size is 0, and don't move forward with analysis.\r\n* Improved error when file size is 0 (useful for hprof import)\r\n\r\nSee #1364", "commitDateTime": "2019-06-01 17:25:04", "authoredDateTime": "2019-06-01 17:25:04", "commitGitStats": [{"filePath": "leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "leakcanary-haha/src/main/java/leakcanary/HprofParser.kt", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1cd79e34e80cee6fa600dca61f04cec08ccdaf1b"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12.0, "deletions": 3.0, "lines": 15.0, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android-core/src/main/java/leakcanary/internal/AndroidHeapDumper.kt", "leakcanary-haha/src/main/java/leakcanary/HprofParser.kt"]}, {"title": "Docs and code package mismatch for FailTestOnLeakRunListener", "body": "### Description\r\n\r\nThe docs for the instrumentation runner ask you to have in your config\r\n```\r\ntestInstrumentationRunnerArgument(\"listener\", \"com.squareup.leakcanary.FailTestOnLeakRunListener\")\r\n```\r\n\r\nHowever, the class has only `leakcanary` as a package. \r\n\r\nOne possible fix would be to change the docs to\r\n\r\n```\r\ntestInstrumentationRunnerArgument(\"listener\", \"leakcanary.FailTestOnLeakRunListener\")\r\n```\r\n\r\nNot sure which package you want to use going forward, so I'm opening this issue instead of submitting a fix.\r\n\r\n### Steps to Reproduce\r\n\r\n1. Try to run an instrumentation test with the config in the docs\r\n\r\n**Expected behavior:** [What you expect to happen]\r\n\r\nIt runs with the config in the docs\r\n\r\n### Version Information\r\n\r\n* LeakCanary version: 2.0 alpha 2\r\n* Android OS version: Pie\r\n* Gradle version: 5.4\r\n\r\n### Additional Information\r\n\r\nAny additional information, configuration or data that might be necessary to reproduce the issue.\r\n", "url": "https://github.com/square/leakcanary/issues/1361", "user": "wiyarmir", "labels": ["type: bug"], "created": "2019-05-23 10:22:47", "closed": "2019-05-26 17:29:36", "commits": {}, "ttf": 3.000277777777778, "commitsDetails": []}, {"title": "LeakCanary breaks instant app -- NullPointerException", "body": "App deployed as instant app (debug variant) can not be ran when LeakCanary isenabled.\r\n\r\nUsing 1.6.3, tested with two devices. Works with an One Plus 5 with Android 9 (9.0.4 OxygenOS). Broken with a Huawei P9 lite with Android 7.0. Not really sure if this can be solved, but perhaps it can. As I obviously don't include LeakCanary in release builds, this bug is not too bad.\r\n\r\n```kotlin\r\npackage de.chagemann.regexcrossword\r\n\r\nimport android.app.Application\r\nimport com.facebook.stetho.Stetho\r\nimport com.squareup.leakcanary.LeakCanary\r\n\r\nclass RegexApplication : Application() {\r\n\r\n    override fun onCreate() {\r\n        super.onCreate()\r\n        \r\n        if (LeakCanary.isInAnalyzerProcess(this)) {\r\n            // This process is dedicated to LeakCanary for heap analysis.\r\n            // You should not init your app in this process.\r\n            return\r\n        }\r\n        LeakCanary.install(this)\r\n\r\n        Stetho.initializeWithDefaults(this)\r\n    }\r\n}\r\n```\r\n\r\n```\r\n2019-03-10 16:57:14.145 13588-13588/? E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: de.chagemann.regexcrossword, PID: 13588\r\n    java.lang.RuntimeException: Unable to create application de.chagemann.regexcrossword.RegexApplication: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5677)\r\n        at android.app.ActivityThread.-wrap2(ActivityThread.java)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1637)\r\n        at android.os.Handler.dispatchMessage(Handler.java:105)\r\n        at android.os.Looper.loop(Looper.java:156)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6523)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:942)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:832)\r\n     Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference\r\n        at com.squareup.leakcanary.internal.LeakCanaryInternals.isInServiceProcess(LeakCanaryInternals.java:114)\r\n        at com.squareup.leakcanary.LeakCanary.isInAnalyzerProcess(LeakCanary.java:182)\r\n        at de.chagemann.regexcrossword.RegexApplication.onCreate(RegexApplication.kt:13)\r\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1028)\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5658)\r\n        at android.app.ActivityThread.-wrap2(ActivityThread.java)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1637)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:105)\u00a0\r\n        at android.os.Looper.loop(Looper.java:156)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:6523)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:942)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:832)\u00a0\r\n2019-03-10 16:57:14.148 13538-13617/? E/Isotope: UID: [10053]  PID: [13538] IActivityManagerProxy : Instant app: de.chagemann.regexcrossword crashed: java.lang.RuntimeException: Unable to create application de.chagemann.regexcrossword.RegexApplication: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5677)\r\n        at android.app.ActivityThread.-wrap2(ActivityThread.java)\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1637)\r\n        at android.os.Handler.dispatchMessage(Handler.java:105)\r\n        at android.os.Looper.loop(Looper.java:156)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6523)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:942)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:832)\r\n     Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference\r\n        at com.squareup.leakcanary.internal.LeakCanaryInternals.isInServiceProcess(LeakCanaryInternals.java:114)\r\n        at com.squareup.leakcanary.LeakCanary.isInAnalyzerProcess(LeakCanary.java:182)\r\n        at de.chagemann.regexcrossword.RegexApplication.onCreate(RegexApplication.kt:13)\r\n        at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1028)\r\n        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5658)\r\n        at android.app.ActivityThread.-wrap2(ActivityThread.java)\u00a0\r\n        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1637)\u00a0\r\n        at android.os.Handler.dispatchMessage(Handler.java:105)\u00a0\r\n        at android.os.Looper.loop(Looper.java:156)\u00a0\r\n        at android.app.ActivityThread.main(ActivityThread.java:6523)\u00a0\r\n        at java.lang.reflect.Method.invoke(Native Method)\u00a0\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:942)\u00a0\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:832)\u00a0\r\n```\r\n", "url": "https://github.com/square/leakcanary/issues/1196", "user": "carstenhag", "labels": ["status: help wanted", "type: bug"], "created": "2019-03-10 16:14:06", "closed": "2019-04-01 19:21:14", "commits": {}, "ttf": 22.00027777777778, "commitsDetails": []}, {"title": "Service/analyzer process detection is wrong", "body": "Methods `LeakCanary.isInAnalyzerProcess` and `LeakCanaryInternals.isInServiceProcess` don't recognize when they are called in the \":leakcanary\" process, if no memory leak has happened yet (or when all memory leaks are fixed).\r\n\r\nSteps to reproduce:\r\n1. Create new android app from \"Empty Activity\" template.\r\n2. Add `LeakCanary` dependency following the **Getting Started** section.\r\n3. Add `ExampleApplication` class with installing `LeakCanary` following the **Getting Started** section.\r\n4. Launch the main app on a device or emulator.\r\n5. Launch the **Leaks** app.\r\n\r\nActual result:\r\n- On step 4, `LeakCanary.isInAnalyzerProcess` returns `false`,\r\n- On step 5, `LeakCanary.isInAnalyzerProcess` returns `false`.\r\n\r\nExpected result:\r\n- On step 4, `LeakCanary.isInAnalyzerProcess` returns `false`,\r\n- On step 5, `LeakCanary.isInAnalyzerProcess` returns `true`.\r\n\r\nThe reason of the issue is that the `HeapAnalyzerService` as well as `DisplayLeakService` are disabled until any first leak happens, and the method `LeakCanaryInternals.isInServiceProcess` does not fetch \"disabled\" components and swallows `PackageManager.NameNotFoundException` by returning `false` in this case.\r\n\r\nIn a simple app, this issue is not critical, but in my case I get `java.lang.IllegalStateException: Default FirebaseApp is not initialized in this process *:leakcanary. Make sure to call FirebaseApp.initializeApp(Context) first.`, which is annoying.\r\n\r\nHere is the sample project to reproduce: [LeakCanaryCheckProcessIssue.zip](https://github.com/square/leakcanary/files/2695123/LeakCanaryCheckProcessIssue.zip)\r\n", "url": "https://github.com/square/leakcanary/issues/1153", "user": "andrii-borysov-me", "labels": ["type: bug"], "created": "2018-12-19 14:08:58", "closed": "2019-01-10 01:21:29", "commits": {"ad8122ef860b2341ce01e28325f44e564992b2d3": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "cefc33d0d8ee136e7ea3b1faeb57a710ef300078": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 21.00027777777778, "commitsDetails": [{"commitHash": "ad8122ef860b2341ce01e28325f44e564992b2d3", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "cefc33d0d8ee136e7ea3b1faeb57a710ef300078", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["85adeded95485d8ee6ecc94903ef47046f5c8498"], "nameRev": "cefc33d0d8ee136e7ea3b1faeb57a710ef300078 tags/v1.6.3~6", "commitMessage": "`LeakCanary.isInAnalyzerProcess` correctly returns true in the analyzer process (#1161)\n\nThe leak result activity runs in the analyzer process. When starting it prior to any leak having been detected, `LeakCanary.isInAnalyzerProcess` would return false because the component we look for is initially disabled.\r\n\r\nFixes #1153", "commitDateTime": "2019-01-09 17:21:28", "authoredDateTime": "2019-01-09 17:21:28", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LeakCanaryInternals.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.LeakCanaryInternals.isInServiceProcess(android.content.Context,java.lang.Class)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "IndexOutOfBoundsException", "body": "I'm using the latest version of LeakCanary which is 1.6.2.\r\n\r\nI was testing my app for memory leaks and found some when changing activities. I can see the leaks when the dump has been completed. Then, when I return to my MainActivity, I get another bug. After the dump has been compeleted, I tap top the notification and LeakCanary crashed. The error log is below.\r\n\r\n```\r\n10-23 16:53:37.479 23282-23974/com.app.net:leakcanary E/GED: Failed to get GED Log Buf, err(0)\r\n10-23 16:53:38.054 23282-23282/com.app.net:leakcanary E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.app.net:leakcanary, PID: 23282\r\n    java.lang.IndexOutOfBoundsException: Invalid index 1, size is 1\r\n        at java.util.ArrayList.throwIndexOutOfBoundsException(ArrayList.java:255)\r\n        at java.util.ArrayList.get(ArrayList.java:308)\r\n        at com.squareup.leakcanary.internal.DisplayLeakAdapter.getConnectorType(DisplayLeakAdapter.java:219)\r\n        at com.squareup.leakcanary.internal.DisplayLeakAdapter.getView(DisplayLeakAdapter.java:87)\r\n        at android.widget.AbsListView.obtainView(AbsListView.java:2467)\r\n        at android.widget.ListView.makeAndAddView(ListView.java:1894)\r\n        at android.widget.ListView.fillDown(ListView.java:710)\r\n        at android.widget.ListView.fillFromTop(ListView.java:771)\r\n        at android.widget.ListView.layoutChildren(ListView.java:1681)\r\n        at android.widget.AbsListView.onLayout(AbsListView.java:2230)\r\n        at android.view.View.layout(View.java:16001)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:5181)\r\n        at android.widget.LinearLayout.setChildFrame(LinearLayout.java:1959)\r\n        at android.widget.LinearLayout.layoutVertical(LinearLayout.java:1813)\r\n        at android.widget.LinearLayout.onLayout(LinearLayout.java:1722)\r\n        at android.view.View.layout(View.java:16001)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:5181)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:639)\r\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:574)\r\n        at android.view.View.layout(View.java:16001)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:5181)\r\n        at com.android.internal.widget.ActionBarOverlayLayout.onLayout(ActionBarOverlayLayout.java:494)\r\n        at android.view.View.layout(View.java:16001)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:5181)\r\n        at android.widget.FrameLayout.layoutChildren(FrameLayout.java:639)\r\n        at android.widget.FrameLayout.onLayout(FrameLayout.java:574)\r\n        at android.view.View.layout(View.java:16001)\r\n        at android.view.ViewGroup.layout(ViewGroup.java:5181)\r\n        at android.view.ViewRootImpl.performLayout(ViewRootImpl.java:2483)\r\n        at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2180)\r\n        at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1292)\r\n        at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6598)\r\n        at android.view.Choreographer$CallbackRecord.run(Choreographer.java:800)\r\n        at android.view.Choreographer.doCallbacks(Choreographer.java:603)\r\n        at android.view.Choreographer.doFrame(Choreographer.java:572)\r\n        at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:786)\r\n        at android.os.Handler.handleCallback(Handler.java:815)\r\n        at android.os.Handler.dispatchMessage(Handler.java:104)\r\n        at android.os.Looper.loop(Looper.java:194)\r\n        at android.app.ActivityThread.main(ActivityThread.java:5631)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at java.lang.reflect.Method.invoke(Method.java:372)\r\n        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:959)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:754)\r\n```", "url": "https://github.com/square/leakcanary/issues/1135", "user": "rickyManalo", "labels": ["type: bug"], "created": "2018-10-23 09:08:38", "closed": "2019-01-10 17:14:33", "commits": {"4ccfa3c8b92ffca6479a4c948671af1c606eebf1": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "f044c1d3eafe02c8f548223b68ccd7798744b881": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 79.00027777777778, "commitsDetails": [{"commitHash": "4ccfa3c8b92ffca6479a4c948671af1c606eebf1", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "f044c1d3eafe02c8f548223b68ccd7798744b881", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["a7ae33c84655e0dad86e59661474910cd082ec53"], "nameRev": "f044c1d3eafe02c8f548223b68ccd7798744b881 tags/v1.6.3~4", "commitMessage": "Fixed IndexOutOfBoundsException for leak traces of size 1 (#1164)\n\nFixes #1135", "commitDateTime": "2019-01-10 09:14:32", "authoredDateTime": "2019-01-10 09:14:32", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakAdapter.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DisplayLeakAdapter.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakAdapter.getConnectorType(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Could not find KeyedWeakReference class in the heap dump", "body": "```\r\n* FAILURE in 1.6.1 26145bf:java.lang.IllegalStateException: Could not find the com.squareup.leakcanary.KeyedWeakReference class in the heap dump.\r\nat com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:216)\r\nat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:172)\r\nat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntentInForeground(HeapAnalyzerService.java:67)\r\nat com.squareup.leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.java:55)\r\nat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\r\nat android.os.Handler.dispatchMessage(Handler.java:111)\r\nat android.os.Looper.loop(Looper.java:224)\r\nat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n* Reference Key: d469243b-dcc5-4fc8-874f-88865002c276\r\n* Device: OPPO OPPO OPPO R9m R9m\r\n* Android Version: 5.1 API: 22 LeakCanary: 1.6.1 26145bf\r\n* Durations: watch=685299ms, gc=281ms, heap dump=7374ms, analysis=4502ms\r\n* Excluded Refs:\r\n| Field: android.os.Message.obj\r\n| Field: android.os.Message.next\r\n| Field: android.os.Message.target\r\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\r\n| Field: android.animation.LayoutTransition$1.val$parent\r\n| Field: android.view.textservice.SpellCheckerSession$1.this$0\r\n| Field: android.widget.SpellChecker$1.this$0\r\n| Field: android.support.v7.internal.widget.ActivityChooserModel.mActivityChoserModelPolicy\r\n| Field: android.widget.ActivityChooserModel.mActivityChoserModelPolicy\r\n| Field: android.accounts.AccountManager$AmsTask$Response.this$1\r\n| Field: android.media.MediaScannerConnection.mContext\r\n| Field: android.os.UserManager.mContext\r\n| Field: android.media.AudioManager$1.this$0\r\n| Field: android.widget.Editor$Blink.this$0\r\n| Field: android.net.ConnectivityManager.sInstance\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Static field: android.text.TextLine.sCached\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n```", "url": "https://github.com/square/leakcanary/issues/1124", "user": "ladingwu", "labels": ["type: bug"], "created": "2018-10-17 07:56:38", "closed": "2019-03-19 18:18:42", "commits": {"6744c04afe7b86bc49b6bfe81dfaf8ffdef8c7f5": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "26c3dcf1745745b010edfc97ff08da3711026fb0": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "1a76cadc14a0de88a68de2a52a2c455e913ddf47": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 153.00027777777777, "commitsDetails": [{"commitHash": "6744c04afe7b86bc49b6bfe81dfaf8ffdef8c7f5", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["e54fcd8f856289d535a8a0fd2e0f99b31238c266"], "nameRev": "6744c04afe7b86bc49b6bfe81dfaf8ffdef8c7f5 remotes/origin/py/missing_thread_object", "commitMessage": "Test that reproduces #1124\n", "commitDateTime": "2019-01-11 13:15:12", "authoredDateTime": "2019-01-11 13:15:12", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/HeapAnalyzerHeapDumpTest.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/TestUtil.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "leakcanary-analyzer/src/test/resources/not_found.hprof", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HeapAnalyzerHeapDumpTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzerHeapDumpTest.heapdump_with_missing_thread_object()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestUtil.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.TestUtil.HeapDumpFile", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "26c3dcf1745745b010edfc97ff08da3711026fb0", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "1a76cadc14a0de88a68de2a52a2c455e913ddf47", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["732f7887d5d3ea5326705bbddce4fb63e66b5471"], "nameRev": "1a76cadc14a0de88a68de2a52a2c455e913ddf47 tags/v2.0-alpha-1~82", "commitMessage": "Update to HAHA 2.1 (#1169)\n\n* Removed \"computeIgnoredBitmapRetainedSize\": we added this hack because some bitmaps were not added to the total retained sized because they had a native gc root dominator. This only worked pre M because we looked at mBuffer which went away. The updated perflib looks up in native land and updates the Bitmap objects to the correct native size. This change means we now get the exact same retained size in Android Studio & LeakCanary. Unless we build our own heap dump parser, it's probably better to just rely on perflib for retained size.\r\n* HAHA now ignores missing native threads instead of creating an empty snapshot.\r\n* HAHA 2.1 has Java 8 bytecode, which means LeakCanary consumers are now expected to support Java 8 bytecode. This is a breaking change that will go in a 2.0 release.\r\n\r\nFixes #1133 (update to latest perflib)\r\nFixes #1124 (crash)", "commitDateTime": "2019-03-19 11:18:41", "authoredDateTime": "2019-03-19 11:18:41", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "leakcanary-analyzer/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-analyzer/src/main/java/com/squareup/haha/perflib/HahaSpy.java", "insertions": 0, "deletions": 14, "lines": 14}, {"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/AnalyzerProgressListener.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HeapAnalyzer.java", "insertions": 7, "deletions": 73, "lines": 80}, {"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/ShortestPathFinder.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/{FakeHprofBuffer.java => FakeDataBuffer.java}", "insertions": 7, "deletions": 5, "lines": 12}, {"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/HahaHelperTest.java", "insertions": 5, "deletions": 5, "lines": 10}, {"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/HeapAnalyzerHeapDumpTest.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/RetainedSizeTest.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/TestUtil.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "leakcanary-analyzer/src/test/resources/missing_thread.hprof", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "leakcanary-sample/build.gradle", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HahaSpy.java", "spoonMethods": [{"spoonMethodName": "com.squareup.haha.perflib.HahaSpy.allGcRoots(com.squareup.haha.perflib.Snapshot)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AnalyzerProgressListener.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.Step", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HeapAnalyzer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzer.findTrackedReferences(java.io.File)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzer.checkForLeak(java.io.File,java.lang.String,boolean)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(long,com.squareup.haha.perflib.Snapshot,com.squareup.haha.perflib.Instance,boolean)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzer.computeIgnoredBitmapRetainedSize(com.squareup.haha.perflib.Snapshot,com.squareup.haha.perflib.Instance)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzer.isIgnoredDominator(com.squareup.haha.perflib.Instance,com.squareup.haha.perflib.Instance)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ShortestPathFinder.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.ShortestPathFinder.enqueueGcRoots(com.squareup.haha.perflib.Snapshot)", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "FakeDataBuffer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.FakeHprofBuffer", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.FakeHprofBuffer.setIntsToRead(int[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.FakeHprofBuffer.setStringsToRead(java.lang.String[])", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.FakeHprofBuffer.readSubSequence(byte[],int,int)", "TOT": 7, "UPD": 7, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.FakeHprofBuffer.readInt()", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HahaHelperTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HahaHelperTest", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.HahaHelperTest.setUp()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.HahaHelperTest.initSnapshot(com.squareup.haha.perflib.io.HprofBuffer)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.HahaHelperTest.readStringAsByteArrayFromHeapDumpInstance_O()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HeapAnalyzerHeapDumpTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzerHeapDumpTest.heapDumpWithMissingNativeThread()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RetainedSizeTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.RetainedSizeTest.data()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestUtil.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.TestUtil.HeapDumpFile", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6744c04afe7b86bc49b6bfe81dfaf8ffdef8c7f5"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0.0, "deletions": 0.0, "lines": 0.0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0.0, "UPD": 0.0, "INS": 0.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "IndexOutOfBoundsException with 1.6.1 leakcanary", "body": "This was happening while I was moving between leaked activities / fragments. \r\n\r\n```\r\n\r\n07-31 13:48:44.141 31999-32219/app:leakcanary D/LeakCanary: Analysis in progress, working on: BUILDING_LEAK_TRACE\r\n07-31 13:48:44.150 31999-32219/app:leakcanary D/Notification: allPendingIntents\r\n07-31 13:48:44.169 31766-31766/app D/ViewRootImpl@2991102[VideoActivity]: Relayout returned: old=[0,0][1080,1920] new=[0,0][1080,1920] result=0x1 surface={valid=true 543254048768} changed=false\r\n07-31 13:48:44.226 31766-31825/app D/OpenGLRenderer: eglDestroySurface = 0x7e7cb33e00\r\n07-31 13:48:44.237 31766-31766/app D/ViewRootImpl@7837228[OverviewActivity]: Relayout returned: old=[0,0][1080,1920] new=[0,0][1080,1920] result=0x5 surface={valid=false 0} changed=true\r\n07-31 13:48:44.268 31999-31999/app:leakcanary D/Notification: allPendingIntents\r\n07-31 13:48:44.341 31999-32276/app:leakcanary E/AndroidRuntime: FATAL EXCEPTION: IntentService[com.squareup.leakcanary.AbstractAnalysisResultService]\r\n    Process: app:leakcanary, PID: 31999\r\n    java.lang.IndexOutOfBoundsException: Index: 1, Size: 1\r\n        at java.util.ArrayList.get(ArrayList.java:437)\r\n        at com.squareup.leakcanary.LeakTrace.toString(LeakTrace.java:48)\r\n        at com.squareup.leakcanary.LeakCanary.leakInfo(LeakCanary.java:115)\r\n        at com.squareup.leakcanary.DisplayLeakService.onHeapAnalyzed(DisplayLeakService.java:44)\r\n        at com.squareup.leakcanary.AbstractAnalysisResultService.onHandleIntentInForeground(AbstractAnalysisResultService.java:51)\r\n        at com.squareup.leakcanary.internal.ForegroundService.onHandleIntent(ForegroundService.java:55)\r\n        at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:68)\r\n        at android.os.Handler.dispatchMessage(Handler.java:105)\r\n        at android.os.Looper.loop(Looper.java:164)\r\n        at android.os.HandlerThread.run(HandlerThread.java:65)\r\n\r\n```\r\n\r\nHope it helps!", "url": "https://github.com/square/leakcanary/issues/1075", "user": "sanat51289", "labels": ["type: bug"], "created": "2018-07-31 17:52:30", "closed": "2018-10-17 00:09:35", "commits": {"f38a94dfdf4dece98f43e86d831d5f50d3606fc4": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "a7f04409e7d71a31246792c42ab6bd5f8417c9b1": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 77.00027777777778, "commitsDetails": [{"commitHash": "f38a94dfdf4dece98f43e86d831d5f50d3606fc4", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["fd7f43434cd63d98ff1761682b99c1e562cf9156"], "nameRev": "f38a94dfdf4dece98f43e86d831d5f50d3606fc4 remotes/origin/py/indexes_are_hard", "commitMessage": "Fix crash when leaktrace size is 1\n\nFixes #1075\n", "commitDateTime": "2018-10-16 16:51:10", "authoredDateTime": "2018-10-16 16:51:10", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/LeakTrace.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LeakTrace.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.LeakTrace.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a7f04409e7d71a31246792c42ab6bd5f8417c9b1", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["7870f6061611523d2a4ccb7b7799772366fadea4"], "nameRev": "a7f04409e7d71a31246792c42ab6bd5f8417c9b1 tags/v1.6.2~2", "commitMessage": "Fix crash when leaktrace size is 1 (#1122)\n\nFixes #1075", "commitDateTime": "2018-10-16 17:09:34", "authoredDateTime": "2018-10-16 17:09:34", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/LeakTrace.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LeakTrace.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.LeakTrace.toString()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f38a94dfdf4dece98f43e86d831d5f50d3606fc4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-analyzer/src/main/java/com/squareup/leakcanary"], "changesInPackagesSPOON": ["com.squareup.leakcanary.LeakTrace.toString()"]}, {"title": "Crash when sharing a Heap Dump stored in app data", "body": "This happens on master (post 1.5.4), Android O\r\n\r\nRepro steps:\r\n\r\n* Install LeakCanary sample\r\n* Trigger a leak (prior to having granted sd card permission)\r\n* Once the leak is correctly detected and analysed, grant permissions\r\n* Go into the list of leaks and attempt to share the heap dump for that leak\r\n=> crash\r\n\r\nThis likely happens because that first leak was created prior to having the sdcard permission, so it was created in the app directly.\r\n\r\n```\r\n06-16 14:43:38.862 8720-9167/com.example.leakcanary:leakcanary E/AndroidRuntime: FATAL EXCEPTION: AsyncTask #4\r\n    Process: com.example.leakcanary:leakcanary, PID: 8720\r\n    java.lang.IllegalArgumentException: Failed to find configured root that contains /data/data/com.example.leakcanary/files/leakcanary/2018-06-16_14-25-06_558.hprof\r\n        at android.support.v4.content.FileProvider$SimplePathStrategy.getUriForFile(FileProvider.java:738)\r\n        at android.support.v4.content.FileProvider.getUriForFile(FileProvider.java:417)\r\n        at com.squareup.leakcanary.internal.DisplayLeakActivity$3.run(DisplayLeakActivity.java:214)\r\n        at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:245)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)\r\n        at java.lang.Thread.run(Thread.java:764)\r\n```", "url": "https://github.com/square/leakcanary/issues/1006", "user": "pyricau", "labels": ["type: bug"], "created": "2018-06-16 21:47:32", "closed": "2018-07-20 21:30:02", "commits": {"4fc081e0fb2deb5d934ccd087041d0cea8326979": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 33.000277777777775, "commitsDetails": [{"commitHash": "4fc081e0fb2deb5d934ccd087041d0cea8326979", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["4ad85aad5466b3cbc236b6596d49488755cff25a"], "nameRev": "4fc081e0fb2deb5d934ccd087041d0cea8326979 tags/v1.6~3^2", "commitMessage": "Fix crash when sharing files in app storage\n\nFixes #1006\n", "commitDateTime": "2018-07-20 13:50:07", "authoredDateTime": "2018-07-20 13:50:07", "commitGitStats": [{"filePath": "leakcanary-android/src/main/res/xml/leak_canary_file_paths.xml", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4fc081e0fb2deb5d934ccd087041d0cea8326979"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": []}, {"title": "Sharing leak info fails due to TransactionTooLargeException", "body": "leakcanary version: 1.5.4\r\n\r\n\r\nClick the \"Share info\"\r\n\r\n```\r\n04-17 17:48:14.556 576-979/? E/QC-QMI: linux_qmi_qmux_io_wake_lock: Err in writing wakelock=qmuxd_port_wl_0, error [1:Operation not permitted]\r\n    linux_qmi_qmux_io_wake_unlock: Err in writing wakelock=qmuxd_port_wl_0, error [1:Operation not permitted]\r\n04-17 17:48:19.472 20886-20886/com.opera.android:leakcanary E/JavaBinder: !!! FAILED BINDER TRANSACTION !!!  (parcel size = 1493668)\r\n04-17 17:48:19.476 20886-20886/com.opera.android:leakcanary E/InputEventReceiver: Exception dispatching input event.\r\n04-17 17:48:19.476 20886-20886/com.opera.android:leakcanary E/MessageQueue-JNI: Exception in MessageQueue callback: handleReceiveCallback\r\n04-17 17:48:19.489 20886-20886/com.opera.android:leakcanary E/MessageQueue-JNI: java.lang.RuntimeException: Failure from system\r\n        at android.app.Instrumentation.execStartActivity(Instrumentation.java:1618)\r\n        at android.app.Activity.startActivityForResult(Activity.java:4487)\r\n        at android.app.Activity.startActivityForResult(Activity.java:4445)\r\n        at android.app.Activity.startActivity(Activity.java:4806)\r\n        at android.app.Activity.startActivity(Activity.java:4774)\r\n        at com.squareup.leakcanary.internal.DisplayLeakActivity.shareLeak(DisplayLeakActivity.java:207)\r\n        at com.squareup.leakcanary.internal.DisplayLeakActivity$1.onMenuItemClick(DisplayLeakActivity.java:166)\r\n        at com.android.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:163)\r\n        at com.android.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:908)\r\n        at com.android.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:898)\r\n        at com.android.internal.view.menu.MenuPopup.onItemClick(MenuPopup.java:128)\r\n        at android.widget.AdapterView.performItemClick(AdapterView.java:318)\r\n        at android.widget.AbsListView.performItemClick(AbsListView.java:1158)\r\n        at android.widget.AbsListView$PerformClick.run(AbsListView.java:3127)\r\n        at android.widget.AbsListView.onTouchUp(AbsListView.java:4054)\r\n        at android.widget.AbsListView.onTouchEvent(AbsListView.java:3813)\r\n        at android.widget.DropDownListView.onTouchEvent(DropDownListView.java:116)\r\n        at android.view.View.dispatchTouchEvent(View.java:11776)\r\n        at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2962)\r\n        at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2643)\r\n        at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2968)\r\n        at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2657)\r\n        at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2968)\r\n        at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2657)\r\n        at android.widget.PopupWindow$PopupDecorView.dispatchTouchEvent(PopupWindow.java:2406)\r\n        at android.view.View.dispatchPointerEvent(View.java:12015)\r\n        at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:4795)\r\n        at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:4609)\r\n        at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4147)\r\n        at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4200)\r\n        at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4166)\r\n        at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:4293)\r\n        at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4174)\r\n        at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:4350)\r\n        at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4147)\r\n        at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4200)\r\n        at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4166)\r\n        at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4174)\r\n        at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4147)\r\n        at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:6661)\r\n        at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:6635)\r\n        at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:6596)\r\n        at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:6764)\r\n        at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:186)\r\n        at android.os.MessageQueue.nativePollOnce(Native Method)\r\n        at android.os.MessageQueue.next(MessageQueue.java:325)\r\n        at android.os.Looper.loop(Looper.java:142)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6494)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n     Caused by: android.os.TransactionTooLargeException: data parcel size 1493668 bytes\r\n        at android.os.BinderProxy.transactNative(Native Method)\r\n        at android.os.BinderProxy.transact(Binder.java:764)\r\n    \tat android.app.IActivityManager$Stub$Proxy.startActivity(IActiv\r\n04-17 17:48:19.499 20886-20886/com.opera.android:leakcanary E/AndroidRuntime: FATAL EXCEPTION: main\r\n    Process: com.opera.android:leakcanary, PID: 20886\r\n    java.lang.RuntimeException: Failure from system\r\n        at android.app.Instrumentation.execStartActivity(Instrumentation.java:1618)\r\n        at android.app.Activity.startActivityForResult(Activity.java:4487)\r\n        at android.app.Activity.startActivityForResult(Activity.java:4445)\r\n        at android.app.Activity.startActivity(Activity.java:4806)\r\n        at android.app.Activity.startActivity(Activity.java:4774)\r\n        at com.squareup.leakcanary.internal.DisplayLeakActivity.shareLeak(DisplayLeakActivity.java:207)\r\n        at com.squareup.leakcanary.internal.DisplayLeakActivity$1.onMenuItemClick(DisplayLeakActivity.java:166)\r\n        at com.android.internal.view.menu.MenuItemImpl.invoke(MenuItemImpl.java:163)\r\n        at com.android.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:908)\r\n        at com.android.internal.view.menu.MenuBuilder.performItemAction(MenuBuilder.java:898)\r\n        at com.android.internal.view.menu.MenuPopup.onItemClick(MenuPopup.java:128)\r\n        at android.widget.AdapterView.performItemClick(AdapterView.java:318)\r\n        at android.widget.AbsListView.performItemClick(AbsListView.java:1158)\r\n        at android.widget.AbsListView$PerformClick.run(AbsListView.java:3127)\r\n        at android.widget.AbsListView.onTouchUp(AbsListView.java:4054)\r\n        at android.widget.AbsListView.onTouchEvent(AbsListView.java:3813)\r\n        at android.widget.DropDownListView.onTouchEvent(DropDownListView.java:116)\r\n        at android.view.View.dispatchTouchEvent(View.java:11776)\r\n        at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2962)\r\n        at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2643)\r\n        at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2968)\r\n        at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2657)\r\n        at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2968)\r\n        at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2657)\r\n        at android.widget.PopupWindow$PopupDecorView.dispatchTouchEvent(PopupWindow.java:2406)\r\n        at android.view.View.dispatchPointerEvent(View.java:12015)\r\n        at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:4795)\r\n        at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:4609)\r\n        at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4147)\r\n        at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4200)\r\n        at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4166)\r\n        at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:4293)\r\n        at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4174)\r\n        at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:4350)\r\n        at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4147)\r\n        at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4200)\r\n        at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4166)\r\n        at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4174)\r\n        at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4147)\r\n        at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:6661)\r\n        at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:6635)\r\n        at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:6596)\r\n        at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:6764)\r\n        at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:186)\r\n        at android.os.MessageQueue.nativePollOnce(Native Method)\r\n        at android.os.MessageQueue.next(MessageQueue.java:325)\r\n        at android.os.Looper.loop(Looper.java:142)\r\n        at android.app.ActivityThread.main(ActivityThread.java:6494)\r\n        at java.lang.reflect.Method.invoke(Native Method)\r\n        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)\r\n        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:807)\r\n     Caused by: android.os.TransactionTooLargeException: data parcel size 1493668 bytes\r\n        at android.os.BinderProxy.transactNative(Native Method)\r\n04-17 17:48:19.500 20886-20886/com.opera.android:leakcanary E/AndroidRuntime:     at android.os.BinderProxy.transact(Binder.java:764)\r\n        at android.app.IActivityManager$Stub$Proxy.startActivity(IActivityManager.java:4351)\r\n        at android.app.Instrumentation.execStartActivity(Instrumentation.java:1611)\r\n        \t... 50 more\r\n    \r\n    \r\n    --------- beginning of system\r\n04-17 17:48:20.553 3720-3720/? E/BeaconBle: Scan couldn't start for Places\r\n```", "url": "https://github.com/square/leakcanary/issues/968", "user": "gongzelong0718", "labels": ["type: bug"], "created": "2018-04-17 09:49:53", "closed": "2018-10-16 23:32:03", "commits": {"6cc1453f8c275d32348c84fd84d352fbc26e248c": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 182.00027777777777, "commitsDetails": [{"commitHash": "6cc1453f8c275d32348c84fd84d352fbc26e248c", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["55a5e2060bdd8a0f70d24b807581c0ef534115dc"], "nameRev": "6cc1453f8c275d32348c84fd84d352fbc26e248c remotes/origin/py/transaction_too_large", "commitMessage": "If sharing leak info fails, try with a shorter string\n\nFixes #968\n", "commitDateTime": "2018-04-20 18:07:45", "authoredDateTime": "2018-04-20 18:07:45", "commitGitStats": [{"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakActivity.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DisplayLeakActivity.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.shareLeak()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6cc1453f8c275d32348c84fd84d352fbc26e248c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 1, "lines": 11, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android/src/main/java/com/squareup/leakcanary/internal"], "changesInPackagesSPOON": ["com.squareup.leakcanary.internal.DisplayLeakActivity.shareLeak()"]}, {"title": "UnsupportedOperationException in HahaHelper.asString", "body": "my device\uff1a huawei honor v9  with Android 8.0\r\nleakcanary version \uff1a1.5.4\r\n```\r\nFAILURE in 1.5.4 74837f0:java.lang.UnsupportedOperationException: Could not find char array in java.lang.String@336329680 (0x140bfbd0)\r\n at com.squareup.leakcanary.HahaHelper.asString(HahaHelper.java:108)\r\n at com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:161)\r\n at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:115)\r\n at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:68)\r\n at android.os.Handler.dispatchMessage(Handler.java:108)\r\n at android.os.Looper.loop(Looper.java:166)\r\n at android.os.HandlerThread.run(HandlerThread.java:65)\r\n\r\n* Reference Key: ce0cd240-78a7-4dd4-a368-c43e04daee02\r\n* Device: HUAWEI HONOR DUK-AL20 DUK-AL20\r\n* Android Version: 8.0.0 API: 26 LeakCanary: 1.5.4 74837f0\r\n* Durations: watch=5012ms, gc=228ms, heap dump=1383ms, analysis=2719ms\r\n* Excluded Refs:\r\n| Field: android.view.textservice.SpellCheckerSession$1.this$0\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n```", "url": "https://github.com/square/leakcanary/issues/946", "user": "Joe-Blake", "labels": ["status: needs heap dump", "type: bug"], "created": "2018-03-21 03:57:55", "closed": "2018-08-25 06:40:41", "commits": {}, "ttf": 157.00027777777777, "commitsDetails": []}, {"title": "NullPointerException: Attempt to invoke virtual method 'java.util.List com.squareup.haha.perflib.ClassInstance.getValues()' on a null object reference", "body": "In com.basestonedata.instalment.debug:3.4.0:45.\r\n```\r\n* FAILURE in 1.5.4 74837f0:java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.List com.squareup.haha.perflib.ClassInstance.getValues()' on a null object reference\r\n\tat com.squareup.leakcanary.HahaHelper.classInstanceValues(HahaHelper.java:159)\r\n\tat com.squareup.leakcanary.HahaHelper.asString(HahaHelper.java:80)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:163)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:117)\r\n\tat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:154)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n* Reference Key: 20d157b2-a710-4abe-a200-6d23e38ff2a2\r\n* Device: Xiaomi Xiaomi Redmi Note 3 kenzo\r\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.5.4 74837f0\r\n* Durations: watch=25183ms, gc=157ms, heap dump=6269ms, analysis=74890ms\r\n* Excluded Refs:\r\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedView\r\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\r\n| Field: android.os.UserManager.mContext\r\n| Field: android.net.ConnectivityManager.sInstance\r\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n| Thread:FinalizerWatchdogDaemon (always)\r\n| Thread:main (always)\r\n| Thread:LeakCanary-Heap-Dump (always)\r\n| Class:java.lang.ref.WeakReference (always)\r\n| Class:java.lang.ref.SoftReference (always)\r\n| Class:java.lang.ref.PhantomReference (always)\r\n| Class:java.lang.ref.Finalizer (always)\r\n| Class:java.lang.ref.FinalizerReference (always)\r\n``\r\n", "url": "https://github.com/square/leakcanary/issues/874", "user": "plmmanwu", "labels": ["type: bug"], "created": "2017-09-27 11:30:31", "closed": "2018-07-20 22:20:48", "commits": {"fd7bbc4adbf7202f70361eac0c154995ca62c26b": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "17b4447d857753deb76b0287f092b44e57a8ffa3": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "b17215191193ca87aa940efc973f1ea657f4e709": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 296.0002777777778, "commitsDetails": [{"commitHash": "fd7bbc4adbf7202f70361eac0c154995ca62c26b", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "17b4447d857753deb76b0287f092b44e57a8ffa3", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "b17215191193ca87aa940efc973f1ea657f4e709", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["5073a1beb156eb3b806019292f7e0da4e238eb7c"], "nameRev": "b17215191193ca87aa940efc973f1ea657f4e709 tags/v1.6~2^2", "commitMessage": "Work around null KeyedWeakReference.key\n\n- Make HahaHelper.asString() explicitly non nullable instead of crashing later with NPE\n- If KeyedWeakReference.key is null (which should never happen at runtime), then we skip and keep looking for keys, but report all the null keys if we couldn't find any.\n\nIf this was caused by some malformed object then we have a chance of actually finding the right KeyedWeakReference instance. However, if this was caused by a heap dump parsing issue then we'll\nstill crash but at least we'll have an exception closer to the source.\n\nFixes #874\n", "commitDateTime": "2018-07-20 14:28:06", "authoredDateTime": "2018-07-20 14:03:20", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HahaHelper.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HeapAnalyzer.java", "insertions": 10, "deletions": 1, "lines": 11}, {"filePath": "leakcanary-android/src/main/res/values/leak_canary_strings.xml", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HahaHelper.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HahaHelper.asString(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HeapAnalyzer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(java.lang.String,com.squareup.haha.perflib.Snapshot)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b17215191193ca87aa940efc973f1ea657f4e709"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11.0, "deletions": 1.0, "lines": 12.0, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6.0, "UPD": 0.0, "INS": 5.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-analyzer/src/main/java/com/squareup/leakcanary"], "changesInPackagesSPOON": ["com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(java.lang.String,com.squareup.haha.perflib.Snapshot)", "com.squareup.leakcanary.HahaHelper.asString(java.lang.Object)"]}, {"title": "NullPointerException: TLongObjectHashMap.isFree attempt to read from null array", "body": "SVC-Calling onStartCommand: com.squareup.leakcanary.DisplayLeakService@1e01bf51, flags=0, startId=1\r\n* FAILURE in :java.lang.NullPointerException: Attempt to read from null array\r\n                                                              at com.squareup.haha.trove.TLongObjectHashMap.isFree(TLongObjectHashMap.java:391)\r\n                                                              at com.squareup.haha.trove.TLongObjectHashMap.index(TLongObjectHashMap.java:302)\r\n                                                              at com.squareup.haha.trove.TLongObjectHashMap.get(TLongObjectHashMap.java:246)\r\n                                                              at com.squareup.haha.perflib.Heap.getInstance(Heap.java:123)\r\n                                                              at com.squareup.haha.perflib.Snapshot.findInstance(Snapshot.java:199)\r\n                                                              at com.squareup.haha.perflib.Instance.readValue(Instance.java:225)\r\n                                                              at com.squareup.haha.perflib.ArrayInstance.getValues(ArrayInstance.java:47)\r\n                                                              at com.squareup.haha.perflib.ArrayInstance.accept(ArrayInstance.java:82)\r\n                                                              at com.squareup.haha.perflib.analysis.TopologicalSort$TopologicalSortVisitor.doVisit(TopologicalSort.java:88)\r\n                                                              at com.squareup.haha.perflib.analysis.TopologicalSort.compute(TopologicalSort.java:36)\r\n                                                              at com.squareup.haha.perflib.Snapshot.computeDominators(Snapshot.java:311)\r\n                                                              at com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(HeapAnalyzer.java:188)\r\n                                                              at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:123)\r\n                                                              at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\r\n                                                              at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\r\n                                                              at android.os.Handler.dispatchMessage(Handler.java:111)\r\n                                                              at android.os.Looper.loop(Looper.java:194)\r\n                                                              at android.os.HandlerThread.run(HandlerThread.java:61)\r\n                                                          \r\n                                                          * Reference Key: 4c6c08c3-f6d3-4fbd-91d6-3399e13c0e4f\r\n                                                          * Device: Xiaomi Xiaomi Redmi Note 3 hennessy\r\n                                                          * Android Version: 5.0.2 API: 21 LeakCanary: \r\n                                                          * Durations: watch=5011ms, gc=238ms, heap dump=3444ms, analysis=43051ms\r\n                                                          * Excluded Refs:\r\n                                                          | Field: android.app.ActivityThread$ActivityClientRecord.nextIdle\r\n                                                          | Field: android.view.inputmethod.InputMethodManager.mNextServedView\r\n                                                          | Field: android.view.inputmethod.InputMethodManager.mServedView\r\n                                                          | Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\r\n                                                          | Field: android.view.inputmethod.InputMethodManager.mCurRootView\r\n                                                          | Field: android.animation.LayoutTransition$1.val$parent\r\n                                                          | Field: android.view.textservice.SpellCheckerSession$1.this$0\r\n                                                          | Field: android.support.v7.internal.widget.ActivityChooserModel.mActivityChoserModelPolicy\r\n                                                          | Field: android.widget.ActivityChooserModel.mActivityChoserModelPolicy\r\n                                                          | Field: android.accounts.AccountManager$AmsTask$Response.this$1\r\n                                                          | Field: android.media.MediaScannerConnection.mContext\r\n                                                          | Field: android.os.UserManager.mContext\r\n                                                          | Field: android.appwidget.AppWidgetHost$Callbacks.this$0\r\n                                                          | Field: android.media.AudioManager$1.this$0\r\n                                                          | Field: android.widget.Editor$Blink.this$0\r\n                                                          | Field: android.net.ConnectivityManager.sInstance\r\n                                                          | Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\r\n                                                          | Static field: android.media.session.MediaSessionLegacyHelper.sInstance\r\n                                                          | Static field: android.text.TextLine.sCached\r\n                                                          | Thread:FinalizerWatchdogDaemon (always)\r\n                                                          | Thread:main (always)\r\n                                                          | Thread:LeakCanary-Heap-Dump (always)\r\n                                                          | Class:java.lang.ref.WeakReference (always)\r\n                                                          | Class:java.lang.ref.SoftReference (always)\r\n                                                          | Class:java.lang.ref.PhantomReference (always)\r\n                                                          | Class:java.lang.ref.Finalizer (always)\r\n                                                          | Class:java.lang.ref.FinalizerReference (always)", "url": "https://github.com/square/leakcanary/issues/700", "user": "xiaoxuetu", "labels": ["type: bug"], "created": "2017-02-13 10:46:09", "closed": "2017-05-30 16:14:15", "commits": {}, "ttf": 106.00027777777778, "commitsDetails": []}, {"title": "NullPointerException: HeapAnalyzer.findLeakingReference invoking 'boolean String.equals(Object)' on null reference.", "body": "java.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference\r\n\tat com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:160)\r\n\tat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:95)\r\n\tat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:57)\r\n\tat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n\tat android.os.Handler.dispatchMessage(Handler.java:102)\r\n\tat android.os.Looper.loop(Looper.java:148)\r\n\tat android.os.HandlerThread.run(HandlerThread.java:61)\r\n\r\n* Reference Key: 4820cb39-aac3-41e3-a795-30d054c657c7\r\n* Device: motorola motorola XT1562 lux_retasia_ds\r\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.3.1\r\n* Durations: watch=5364ms, gc=177ms, heap dump=7551ms, analysis=19029ms", "url": "https://github.com/square/leakcanary/issues/698", "user": "adunayak", "labels": ["type: bug"], "created": "2017-02-10 11:06:41", "closed": "2017-03-28 19:37:02", "commits": {}, "ttf": 46.000277777777775, "commitsDetails": []}, {"title": "NullPointerException: HeapAnalyzer.findLeakingReference invoking 'List ClassObj.getInstancesList()' on null reference", "body": "Please take a look at the crash, the log is uploaded.\r\nhttps://cloud.githubusercontent.com/assets/25277468/22181000/c670ac5a-e0bc-11e6-921e-c70a192438fe.png\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/687", "user": "zhangganjun", "labels": ["type: bug"], "created": "2017-01-22 08:07:33", "closed": "2017-03-03 22:53:44", "commits": {}, "ttf": 40.000277777777775, "commitsDetails": []}, {"title": "Perform IO on background threads", "body": "```\r\n                                                                       --------- beginning of crash\r\n01-18 09:40:17.369 19238-19238/com.example.leakcanary E/AndroidRuntime: FATAL EXCEPTION: main\r\n                                                                        Process: com.example.leakcanary, PID: 19238\r\n                                                                        android.os.StrictMode$StrictModeViolation: policy=327711 violation=2\r\n                                                                            at android.os.StrictMode.executeDeathPenalty(StrictMode.java:1556)\r\n                                                                            at android.os.StrictMode.-wrap3(StrictMode.java)\r\n                                                                            at android.os.StrictMode$AndroidBlockGuardPolicy.handleViolation(StrictMode.java:1549)\r\n                                                                            at android.os.StrictMode$AndroidBlockGuardPolicy$1.run(StrictMode.java:1427)\r\n                                                                            at android.os.Handler.handleCallback(Handler.java:755)\r\n                                                                            at android.os.Handler.dispatchMessage(Handler.java:95)\r\n                                                                            at android.os.Looper.loop(Looper.java:156)\r\n                                                                            at android.app.ActivityThread.main(ActivityThread.java:6524)\r\n                                                                            at java.lang.reflect.Method.invoke(Native Method)\r\n                                                                            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:941)\r\n                                                                            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:831)\r\n```", "url": "https://github.com/square/leakcanary/issues/685", "user": "hschenzhimin", "labels": ["status: help wanted", "type: bug"], "created": "2017-01-18 01:40:59", "closed": "2018-06-17 21:48:08", "commits": {"66fecf52234c3e12f319fe2f7362553e9ea19ec4": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 515.0002777777778, "commitsDetails": [{"commitHash": "66fecf52234c3e12f319fe2f7362553e9ea19ec4", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["d6defd853ddd3fb18cabea2320512edcf6e44b42"], "nameRev": "66fecf52234c3e12f319fe2f7362553e9ea19ec4 tags/v1.6~36^2", "commitMessage": "Perform DisplayLeakActivity IO in background\n\n- Moved enabledStrictMode() so that we also have strict mode in the analyzer process (since DisplayLeakActivity lives in that process)\n- Updated all code sites triggering strict mode disk read checks\n\nFixes #685\n", "commitDateTime": "2018-06-16 14:49:59", "authoredDateTime": "2018-06-16 14:49:59", "commitGitStats": [{"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakActivity.java", "insertions": 46, "deletions": 19, "lines": 65}, {"filePath": "leakcanary-sample/src/main/java/com/example/leakcanary/ExampleApplication.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DisplayLeakActivity.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.LeakListAdapter.getView(int,android.view.View,android.view.ViewGroup)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().3", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().6", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.shareHeapDump()", "TOT": 11, "UPD": 2, "INS": 2, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().5", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().3.onClick(android.view.View)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().6.onItemClick(android.widget.AdapterView,android.view.View,int,long)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().5.onClick(android.view.View)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().7.onClick(android.view.View).1.onClick(android.content.DialogInterface,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.onCreateOptionsMenu(android.view.Menu)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.startShareIntentChooser(android.net.Uri)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteVisibleLeak()", "TOT": 8, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteAllLeaks()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.Leak", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.shareHeapDump().3.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteAllLeaks().5.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().6.onClick(android.view.View)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ExampleApplication.java", "spoonMethods": [{"spoonMethodName": "com.example.leakcanary.ExampleApplication.setupLeakCanary()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["66fecf52234c3e12f319fe2f7362553e9ea19ec4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 47, "deletions": 20, "lines": 67, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 54, "UPD": 12, "INS": 15, "MOV": 24, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-sample/src/main/java/com/example/leakcanary", "leakcanary-android/src/main/java/com/squareup/leakcanary/internal"], "changesInPackagesSPOON": ["com.squareup.leakcanary.internal.DisplayLeakActivity.Leak", "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteVisibleLeak()", "com.squareup.leakcanary.internal.DisplayLeakActivity.LeakListAdapter.getView(int,android.view.View,android.view.ViewGroup)", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().6", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().6.onItemClick(android.widget.AdapterView,android.view.View,int,long)", "com.squareup.leakcanary.internal.DisplayLeakActivity.startShareIntentChooser(android.net.Uri)", "com.example.leakcanary.ExampleApplication.setupLeakCanary()", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().5.onClick(android.view.View)", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().3", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().3.onClick(android.view.View)", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi()", "com.squareup.leakcanary.internal.DisplayLeakActivity.onCreateOptionsMenu(android.view.Menu)", "com.squareup.leakcanary.internal.DisplayLeakActivity.shareHeapDump()", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().5", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().4", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().7", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().7.onClick(android.view.View).1.onClick(android.content.DialogInterface,int)", "com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi().6.onClick(android.view.View)", "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteAllLeaks()", "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteAllLeaks().5.run()", "com.squareup.leakcanary.internal.DisplayLeakActivity.shareHeapDump().3.run()"]}, {"title": "NullPointerException: HeapAnalyzer.findLeakingReference invoking 'boolean java.lang.String.equals(java.lang.Object)' on null reference", "body": "* FAILURE:\r\n```\r\njava.lang.NullPointerException: Attempt to invoke virtual method 'boolean java.lang.String.equals(java.lang.Object)' on a null object reference\r\n  at com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:160)\r\n  at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:95)\r\n  at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:57)\r\n  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\r\n  at android.os.Handler.dispatchMessage(Handler.java:102)\r\n  at android.os.Looper.loop(Looper.java:148)\r\n  at android.os.HandlerThread.run(HandlerThread.java:61)\r\n```\r\n\r\n* Reference Key: c1231eae-d560-4a40-8b80-bb15f397b181\r\n* Device: LGE google Nexus 5 hammerhead\r\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.3.1\r\n* Durations: watch=5010ms, gc=124ms, heap dump=4460ms, analysis=14234ms\r\n\r\nHere's the **ScreenShot**:\r\n![screenshot_20161202-125337](https://cloud.githubusercontent.com/assets/18696978/20826757/080fbc42-b88f-11e6-88f3-7fb3a23db532.png)\r\n\r\n", "url": "https://github.com/square/leakcanary/issues/667", "user": "DanishAmjad12", "labels": ["type: bug"], "created": "2016-12-02 07:58:44", "closed": "2017-05-30 16:06:43", "commits": {}, "ttf": 179.00027777777777, "commitsDetails": []}, {"title": "NullPointerException: HeapAnalyzer.findLeakingReference invoking 'List ClassObj.getInstancesList()' on null reference", "body": "I am getting NPE error  also kindly find a attached images.\n\n```\n* FAILURE in 1.5 00f37f5:java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.List com.squareup.haha.perflib.ClassObj.getInstancesList()' on a null object reference\n    at com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:159)\n    at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:115)\n    at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\n    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:135)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n\n* Reference Key: 2ccd0295-748a-432a-b27d-b2135bcdd319\n* Device: motorola google Nexus 6 shamu\n* Android Version: 5.0.1 API: 21 LeakCanary: 1.5 00f37f5\n* Durations: watch=75890ms, gc=181ms, heap dump=6648ms, analysis=3732ms\n* Excluded Refs:\n| Field: android.app.ActivityThread$ActivityClientRecord.nextIdle\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\n| Field: android.animation.LayoutTransition$1.val$parent\n| Field: android.view.textservice.SpellCheckerSession$1.this$0\n| Field: android.support.v7.internal.widget.ActivityChooserModel.mActivityChoserModelPolicy\n| Field: android.widget.ActivityChooserModel.mActivityChoserModelPolicy\n| Field: android.accounts.AccountManager$AmsTask$Response.this$1\n| Field: android.media.MediaScannerConnection.mContext\n| Field: android.os.UserManager.mContext\n| Field: android.appwidget.AppWidgetHost$Callbacks.this$0\n| Field: android.media.AudioManager$1.this$0\n| Field: android.widget.Editor$Blink.this$0\n| Field: android.net.ConnectivityManager.sInstance\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\n| Static field: android.media.session.MediaSessionLegacyHelper.sInstance\n| Static field: android.text.TextLine.sCached\n| Thread:FinalizerWatchdogDaemon (always)\n| Thread:main (always)\n| Thread:LeakCanary-Heap-Dump (always)\n| Class:java.lang.ref.WeakReference (always)\n| Class:java.lang.ref.SoftReference (always)\n| Class:java.lang.ref.PhantomReference (always)\n| Class:java.lang.ref.Finalizer (always)\n| Class:java.lang.ref.FinalizerReference (always)\n```\n\n[![MemoryLeakNull.png](https://s18.postimg.org/n7dlky8qx/Memory_Leak_Null.png)](https://postimg.org/image/mhut8l879/)\n", "url": "https://github.com/square/leakcanary/issues/639", "user": "altaf933", "labels": ["status: help wanted", "type: bug"], "created": "2016-10-18 06:07:58", "closed": "2017-03-03 23:05:28", "commits": {}, "ttf": 136.00027777777777, "commitsDetails": []}, {"title": "Freeze when not enough space to write dump", "body": "Hello!\n\nI stumbled on a bug that if there is not enough space on SD card to write the dump, floating message about dumping will not go away. Unfortunately, I am not sure if it disappears after clearing some space and I have no idea how to write the test for that\n", "url": "https://github.com/square/leakcanary/issues/620", "user": "loredan", "labels": ["status: help wanted", "type: bug"], "created": "2016-09-19 22:36:56", "closed": "2018-06-16 21:14:43", "commits": {}, "ttf": 634.0002777777778, "commitsDetails": []}, {"title": "Analysis failed, file does not exist", "body": "LeakCanary Version: \nleakcanary-android:1.4-beta2\n\n```\nIn com.glip.mobile:3.0.1.1.000-dev:300011000.\n* FAILURE:\njava.lang.IllegalArgumentException: File does not exist: /storage/emulated/0/Download/leakcanary-com.glip.mobile/suspected_leak_heapdump.hprof\n    at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:74)\n    at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\n    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:158)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n\n* Reference Key: d1927f00-808d-4af4-ab11-75e2688b11fa\n* Device: samsung samsung SM-N9200 nobleltezh\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.4-beta2 3799172\n* Durations: watch=5022ms, gc=128ms, heap dump=2154ms, analysis=0ms\n* Excluded Refs:\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\n| Field: android.widget.Editor$Blink.this$0\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\n| Thread:FinalizerWatchdogDaemon (always)\n| Thread:main (always)\n| Thread:LeakCanary-Heap-Dump (always)\n| Class:java.lang.ref.WeakReference (always)\n| Class:java.lang.ref.SoftReference (always)\n| Class:java.lang.ref.PhantomReference (always)\n| Class:java.lang.ref.Finalizer (always)\n| Class:java.lang.ref.FinalizerReference (always)\n| Root Class:android.os.Binder (always)\n\n\n\nIn com.glip.mobile:3.0.1.1.000-dev:300011000.\n* FAILURE:\njava.lang.IllegalStateException: Could not find weak reference with key 267bacb4-45e1-455d-a53b-209861845013 in [a6800834-8b3c-4993-b993-5ec74f952a1c, d1927f00-808d-4af4-ab11-75e2688b11fa, be0c0e79-5aa0-4fcf-ac9d-96a52f09f584, e0f83975-d6cb-45f9-962c-f4e1c6348e00, a700d458-5165-41ec-8bb3-2c0ddfc36af8]\n    at com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:137)\n    at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:84)\n    at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\n    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:66)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:158)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n\n* Reference Key: 267bacb4-45e1-455d-a53b-209861845013\n* Device: samsung samsung SM-N9200 nobleltezh\n* Android Version: 6.0.1 API: 23 LeakCanary: 1.4-beta2 3799172\n* Durations: watch=5268ms, gc=131ms, heap dump=2376ms, analysis=7388ms\n* Excluded Refs:\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\n| Field: android.widget.Editor$Blink.this$0\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\n| Thread:FinalizerWatchdogDaemon (always)\n| Thread:main (always)\n| Thread:LeakCanary-Heap-Dump (always)\n| Class:java.lang.ref.WeakReference (always)\n| Class:java.lang.ref.SoftReference (always)\n| Class:java.lang.ref.PhantomReference (always)\n| Class:java.lang.ref.Finalizer (always)\n| Class:java.lang.ref.FinalizerReference (always)\n| Root Class:android.os.Binder (always)\n```\n", "url": "https://github.com/square/leakcanary/issues/595", "user": "Kaifeng-Dennis", "labels": ["status: researching", "type: bug"], "created": "2016-09-08 09:07:28", "closed": "2016-09-26 19:49:24", "commits": {"3286a1acfbd7162a8e29e88a164eed83bbd6e209": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 18.00027777777778, "commitsDetails": [{"commitHash": "3286a1acfbd7162a8e29e88a164eed83bbd6e209", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["d34a1d5875d72964877b94857c03498380ed7ed5"], "nameRev": "3286a1acfbd7162a8e29e88a164eed83bbd6e209 tags/v1.5~3^2", "commitMessage": "Improvements to heap dumping\n\n* No more cleanup on startup, and no hanging heap dump if the analysis crashes. We create a distinct \"pending\" hprof for each heap dump, and those are cleaned up as part of the hprof file rotation.\n* If a pending hprof hasn't been removed in 10 minutes, LeakCanary now assumes no analysis is in progress, and starts dumping the heap again.\n* We now use the app directory as a fallback if the external storage directory isn't available. This is transparent to the user.\n* If the external storage permission isn't granted, we show the notification as before but we also immediately fallback to the app directory, so that leak isn't lost.\n* Leak notifications now each use a distinct notification instead of erasing each other.\n* If LeakCanary can't perform a heap dump for any reason (e.g. analysis in progress, debugger attached ), it retries later with an exponential backoff.\n\nFixes #595.\nFixes #612.\n", "commitDateTime": "2016-09-26 10:31:38", "authoredDateTime": "2016-09-26 05:46:43", "commitGitStats": [{"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java", "insertions": 8, "deletions": 57, "lines": 65}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidWatchExecutor.java", "insertions": 36, "deletions": 20, "lines": 56}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/DefaultLeakDirectoryProvider.java", "insertions": 142, "deletions": 45, "lines": 187}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java", "insertions": 7, "deletions": 31, "lines": 38}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/LeakCanary.java", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/LeakDirectoryProvider.java", "insertions": 16, "deletions": 11, "lines": 27}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakActivity.java", "insertions": 39, "deletions": 57, "lines": 96}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "leakcanary-watcher/src/main/java/com/squareup/leakcanary/HeapDumper.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "leakcanary-watcher/src/main/java/com/squareup/leakcanary/RefWatcher.java", "insertions": 32, "deletions": 22, "lines": 54}, {"filePath": "leakcanary-watcher/src/main/java/com/squareup/leakcanary/Retryable.java", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "leakcanary-watcher/src/main/java/com/squareup/leakcanary/WatchExecutor.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "leakcanary-watcher/src/test/java/com/squareup/leakcanary/RefWatcherTest.java", "insertions": 6, "deletions": 7, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidHeapDumper.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.dumpHeap()", "TOT": 14, "UPD": 5, "INS": 1, "MOV": 1, "DEL": 7}, {"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.showToast(com.squareup.leakcanary.internal.FutureResult)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.cancelToast(android.widget.Toast)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.showToast(com.squareup.leakcanary.internal.FutureResult).2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.cancelToast(android.widget.Toast).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.cleanup()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.getHeapDumpFile()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "AndroidWatchExecutor.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor", "TOT": 8, "UPD": 4, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor.executeDelayedAfterIdleUnsafe(java.lang.Runnable)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor.execute(java.lang.Runnable)", "TOT": 14, "UPD": 3, "INS": 0, "MOV": 10, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor.execute(java.lang.Runnable).1.run()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor.executeDelayedAfterIdleUnsafe(java.lang.Runnable).2.queueIdle()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor.isOnMainThread()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor.execute(com.squareup.leakcanary.Retryable)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor.postWaitForIdle(com.squareup.leakcanary.Retryable,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidWatchExecutor.postToBackgroundWithDelay(com.squareup.leakcanary.Retryable,int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultLeakDirectoryProvider.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.leakDirectory()", "TOT": 12, "UPD": 5, "INS": 0, "MOV": 5, "DEL": 2}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.directoryExistsAfterMkdirs(java.io.File)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.leakDirectoryUnsafe()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.requestPermission(android.app.Activity)", "TOT": 11, "UPD": 4, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.isLeakStorageWritable()", "TOT": 21, "UPD": 3, "INS": 0, "MOV": 13, "DEL": 5}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.requestWritePermissionNotification()", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.hasStoragePermission()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.listFiles(java.io.FilenameFilter)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.appStorageDirectory()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.directoryWritableAfterMkdirs(java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.cleanupOldHeapDumps()", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.newHeapDumpFile()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DisplayLeakService.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.DisplayLeakService.renameHeapdump(com.squareup.leakcanary.HeapDump).1.accept(java.io.File,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.DisplayLeakService.renameHeapdump(com.squareup.leakcanary.HeapDump)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 6}, {"spoonMethodName": "com.squareup.leakcanary.DisplayLeakService.onHeapAnalyzed(com.squareup.leakcanary.HeapDump,com.squareup.leakcanary.AnalysisResult)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LeakCanary.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.LeakCanary.androidWatcher(android.content.Context,com.squareup.leakcanary.HeapDump$Listener,com.squareup.leakcanary.ExcludedRefs)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "LeakDirectoryProvider.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.requestPermission(android.app.Activity)", "TOT": 5, "UPD": 4, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.requestWritePermissionNotification()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.isLeakStorageWritable()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.leakDirectory()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "DisplayLeakActivity.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteAllLeaks()", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks.load(com.squareup.leakcanary.internal.DisplayLeakActivity,java.io.File)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks.run()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.onResume()", "TOT": 6, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 2}]}, {"spoonFilePath": "LeakCanaryInternals.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.LeakCanaryInternals.showNotification(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.internal.LeakCanaryInternals.showNotification(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HeapDumper.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RefWatcher.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.RefWatcher.watch(java.lang.Object,java.lang.String)", "TOT": 13, "UPD": 2, "INS": 1, "MOV": 10, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcher", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcher.ensureGone(com.squareup.leakcanary.KeyedWeakReference,long)", "TOT": 10, "UPD": 2, "INS": 6, "MOV": 1, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcher.1.execute(java.lang.Runnable)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcher.watch(java.lang.Object,java.lang.String).5.run()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcher.3.dumpHeap()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcher.1", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcher.ensureGoneAsync(long,com.squareup.leakcanary.KeyedWeakReference).5", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcher.ensureGoneAsync(long,com.squareup.leakcanary.KeyedWeakReference).5.run()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "Retryable.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WatchExecutor.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RefWatcherTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.RefWatcherTest.TestExecutor", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcherTest.TestExecutor.execute(java.lang.Runnable)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcherTest.unreachableObject_noDump()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.RefWatcherTest.retainedObject_triggersDump()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "ArrayIndexOutOfBoundsException in ClassObj.getStaticFieldValues", "body": "```\njava.lang.ArrayIndexOutOfBoundsException: length=0; index=0\n    at com.squareup.haha.perflib.ClassObj.getStaticFieldValues(ClassObj.java:156)\n    at com.squareup.haha.perflib.ClassObj.accept(ClassObj.java:194)\n    at com.squareup.haha.perflib.analysis.TopologicalSort$TopologicalSortVisitor.doVisit(TopologicalSort.java:88)\n    at com.squareup.haha.perflib.analysis.TopologicalSort.compute(TopologicalSort.java:36)\n    at com.squareup.haha.perflib.Snapshot.computeDominators(Snapshot.java:311)\n    at com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(HeapAnalyzer.java:157)\n    at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:91)\n    at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\n    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\n    at android.os.Handler.dispatchMessage(Handler.java:111)\n    at android.os.Looper.loop(Looper.java:194)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n\n* Reference Key: 54ee5059-f355-4813-85bc-b7da0e1f9267\n* Device: vivo vivo vivo X5Pro D bbk6752_lwt_l\n* Android Version: 5.0 API: 21 LeakCanary: 1.4-beta2 3799172\n* Durations: watch=5067ms, gc=167ms, heap dump=3136ms, analysis=37396ms\n* Excluded Refs:\n| Field: android.app.ActivityThread$ActivityClientRecord.nextIdle\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\n| Field: android.animation.LayoutTransition$1.val$parent\n| Field: android.view.textservice.SpellCheckerSession$1.this$0\n| Field: android.support.v7.internal.widget.ActivityChooserModel.mActivityChoserModelPolicy\n| Field: android.widget.ActivityChooserModel.mActivityChoserModelPolicy\n| Field: android.accounts.AccountManager$AmsTask$Response.this$1\n| Field: android.media.MediaScannerConnection.mContext\n| Field: android.os.UserManager.mContext\n| Field: android.appwidget.AppWidgetHost$Callbacks.this$0\n| Field: android.media.AudioManager$1.this$0\n| Field: android.widget.Editor$Blink.this$0\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\n| Static field: android.media.session.MediaSessionLegacyHelper.sInstance\n| Static field: android.text.TextLine.sCached\n| Thread:FinalizerWatchdogDaemon (always)\n| Thread:main (always)\n| Thread:LeakCanary-Heap-Dump (always)\n| Class:java.lang.ref.WeakReference (always)\n| Class:java.lang.ref.SoftReference (always)\n| Class:java.lang.ref.PhantomReference (always)\n| Class:java.lang.ref.Finalizer (always)\n| Class:java.lang.ref.FinalizerReference (always)\n| Root Class:android.os.Binder (always)\n```\n", "url": "https://github.com/square/leakcanary/issues/570", "user": "tmexcept", "labels": ["status: help wanted", "status: needs more info", "type: bug"], "created": "2016-07-25 10:49:05", "closed": "2017-05-28 13:46:09", "commits": {}, "ttf": 307.0002777777778, "commitsDetails": []}, {"title": "No such file: suspected_leak_heapdump.hprof", "body": "```\n* FAILURE:\njava.io.FileNotFoundException: /storage/emulated/0/Download/leakcanary-com.yf.qinkeshi/suspected_leak_heapdump.hprof: open failed: ENOENT (No such file or directory)\n    at libcore.io.IoBridge.open(IoBridge.java:456)\n    at java.io.FileInputStream.<init>(FileInputStream.java:76)\n    at com.squareup.haha.perflib.io.MemoryMappedFileBuffer.<init>(MemoryMappedFileBuffer.java:57)\n    at com.squareup.haha.perflib.io.MemoryMappedFileBuffer.<init>(MemoryMappedFileBuffer.java:82)\n    at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:79)\n    at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\n    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:135)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\nCaused by: android.system.ErrnoException: open failed: ENOENT (No such file or directory)\n    at libcore.io.Posix.open(Native Method)\n    at libcore.io.BlockGuardOs.open(BlockGuardOs.java:186)\n    at libcore.io.IoBridge.open(IoBridge.java:442)\n    ... 9 more\n\n* Reference Key: eb9e8ad4-bc36-4e54-be4e-42141b249c04\n* Device: LGE google Nexus 4 occam\n* Android Version: 5.1.1 API: 22 LeakCanary: 1.4-beta2 3799172\n* Durations: watch=10266ms, gc=262ms, heap dump=4412ms, analysis=0ms\n* Excluded Refs:\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\n| Field: android.animation.LayoutTransition$1.val$parent\n| Field: android.view.textservice.SpellCheckerSession$1.this$0\n| Field: android.support.v7.internal.widget.ActivityChooserModel.mActivityChoserModelPolicy\n| Field: android.widget.ActivityChooserModel.mActivityChoserModelPolicy\n| Field: android.accounts.AccountManager$AmsTask$Response.this$1\n| Field: android.media.MediaScannerConnection.mContext\n| Field: android.os.UserManager.mContext\n| Field: android.media.AudioManager$1.this$0\n| Field: android.widget.Editor$Blink.this$0\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\n| Static field: android.text.TextLine.sCached\n| Thread:FinalizerWatchdogDaemon (always)\n| Thread:main (always)\n| Thread:LeakCanary-Heap-Dump (always)\n| Class:java.lang.ref.WeakReference (always)\n| Class:java.lang.ref.SoftReference (always)\n| Class:java.lang.ref.PhantomReference (always)\n| Class:java.lang.ref.Finalizer (always)\n| Class:java.lang.ref.FinalizerReference (always)\n| Root Class:android.os.Binder (always)\n```\n", "url": "https://github.com/square/leakcanary/issues/535", "user": "idmaoning", "labels": ["type: bug"], "created": "2016-06-01 08:01:15", "closed": "2016-09-19 03:04:17", "commits": {}, "ttf": 109.00027777777778, "commitsDetails": []}, {"title": "NullPointerException: HeapAnalyzer.findLeakingReference invoking 'List ClassObj.getInstancesList()' on null reference", "body": "In easy.reader.free:3.2.4:113.\n\n```\n* FAILURE:\njava.lang.NullPointerException: Attempt to invoke virtual method 'java.util.List com.squareup.haha.perflib.ClassObj.getInstancesList()' on a null object reference\n    at com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:129)\n    at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:84)\n    at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\n    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:135)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n\n* Reference Key: 1bfbe623-9fee-4c50-8c58-82e3301e65cb\n* Device: smartisan SMARTISAN SM801 icesky_msm8992\n* Android Version: 5.1.1 API: 22 LeakCanary: 1.4-beta2 3799172\n* Durations: watch=6181ms, gc=922ms, heap dump=6686ms, analysis=2740ms\n* Excluded Refs:\n| Field: android.view.inputmethod.InputMethodManager.mNextServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedView\n| Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\n| Field: android.view.inputmethod.InputMethodManager.mCurRootView\n| Field: android.animation.LayoutTransition$1.val$parent\n| Field: android.view.textservice.SpellCheckerSession$1.this$0\n| Field: android.support.v7.internal.widget.ActivityChooserModel.mActivityChoserModelPolicy\n| Field: android.widget.ActivityChooserModel.mActivityChoserModelPolicy\n| Field: android.accounts.AccountManager$AmsTask$Response.this$1\n| Field: android.media.MediaScannerConnection.mContext\n| Field: android.os.UserManager.mContext\n| Field: android.media.AudioManager$1.this$0\n| Field: android.widget.Editor$Blink.this$0\n| Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\n| Static field: android.text.TextLine.sCached\n| Thread:FinalizerWatchdogDaemon (always)\n| Thread:main (always)\n| Thread:LeakCanary-Heap-Dump (always)\n| Class:java.lang.ref.WeakReference (always)\n| Class:java.lang.ref.SoftReference (always)\n| Class:java.lang.ref.PhantomReference (always)\n| Class:java.lang.ref.Finalizer (always)\n| Class:java.lang.ref.FinalizerReference (always)\n| Root Class:android.os.Binder (always)\n```\n", "url": "https://github.com/square/leakcanary/issues/515", "user": "jtbuaa", "labels": ["status: needs heap dump", "type: bug"], "created": "2016-05-04 23:25:16", "closed": "2018-10-16 23:44:29", "commits": {}, "ttf": 895.0002777777778, "commitsDetails": []}, {"title": "Leaked activity not detected as a leak by LeakCanary", "body": "LeakCanary Version: 1.4-beta2\n\nSo I have an activity being leaked on configuration change. I think it's a MapView-related issue, but haven't been able to fix it yet. In any case, LeakCanary takes a heap dump and says it's analyzing it, and then comes back and says that no leak was found. However, the activity is clearly leaked as the memory usage keeps increasing until the app crashes with OOM if you keep rotating the screen.\n\nI couldn't attach the heap dump file here as it is too large, but I uploaded it [here](https://drive.google.com/file/d/0B34-8b4aMop7R2k3VWJKM3JxV0E/view?usp=sharing)\n\nNotice there are 6 instances of the main activity (TaxiStockholmActivity) present in the heap.\n\nThis is what LeakCanary says in the LogCat:\n\n```\n03-31 09:44:48.469 12169-12215/se.taxistockholm.debug I/art: hprof: heap dump \"/storage/emulated/0/Download/leakcanary-se.taxistockholm.debug/suspected_leak_heapdump.hprof\" starting...\n...\n03-31 09:45:18.355 12169-14813/se.taxistockholm.debug D/LeakCanary: In se.taxistockholm.debug:4.1:112.\n                                                                    * NO LEAK FOUND.\n```\n\nTested on 5.1 (emulator) and 6.0 (device), same result. This is just a wild guess, but could it be that LeakCanary is unable to find a path to a GC root, maybe because it's somehow outside of the process (e.g. in Google Play services)?\n", "url": "https://github.com/square/leakcanary/issues/482", "user": "ajarl", "labels": ["type: bug"], "created": "2016-03-31 08:25:22", "closed": "2016-09-10 19:28:25", "commits": {"d3b78c59a5d8b54f382ed8395c08da390a452b04": {"commitGHEventType": "referenced", "commitUser": "jrodbx"}}, "ttf": 163.00027777777777, "commitsDetails": [{"commitHash": "d3b78c59a5d8b54f382ed8395c08da390a452b04", "commitGHEventType": "referenced", "commitUser": "jrodbx", "commitParents": ["33973bf76697da0e9ee7f7a3de740d53f017edaa"], "nameRev": "d3b78c59a5d8b54f382ed8395c08da390a452b04 remotes/origin/jrod/revert-binder-ignore-demo", "commitMessage": "Test that issue #482 is resolved\n", "commitDateTime": "2016-09-09 15:43:02", "authoredDateTime": "2016-09-09 15:43:02", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/HeapAnalyzerTest.java", "insertions": 17, "deletions": 4, "lines": 21}, {"filePath": "leakcanary-analyzer/src/test/java/com/squareup/leakcanary/TestUtil.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "leakcanary-analyzer/src/test/resources/LC_issue_482.hprof", "insertions": 0, "deletions": 0, "lines": 0}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HeapAnalyzerTest.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzerTest.binderLeak()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "TestUtil.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.TestUtil.HeapDumpFile", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d3b78c59a5d8b54f382ed8395c08da390a452b04"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "java.lang.NullPointerException", "body": "LeakCanary Version: \ncom.squareup.leakcanary:leakcanary-android:1.4-beta2\n\n```\n* FAILURE:\n    java.lang.NullPointerException: Attempt to invoke virtual method 'java.util.List com.squareup.haha.perflib.ClassObj.getInstancesList()' on a null object reference\n    at com.squareup.leakcanary.HeapAnalyzer.findLeakingReference(HeapAnalyzer.java:129)\n    at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:84)\n    at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\n    at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:135)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n\n```\n", "url": "https://github.com/square/leakcanary/issues/471", "user": "luxiaoyu", "labels": ["status: researching", "type: bug"], "created": "2016-03-29 12:02:18", "closed": "2016-05-13 08:59:39", "commits": {}, "ttf": 44.000277777777775, "commitsDetails": []}, {"title": "NullPointerException in LeakCanaryInternals.isInServiceProcess()", "body": "It looks like ActivityManager.getRunningAppProcesses can return null: http://developer.android.com/reference/android/app/ActivityManager.html#getRunningAppProcesses()\n\nLeakCanaryInternals.isInServiceProcess() doesn't seem to check for this case.\n\nStack trace excerpt:\n\njava.lang.RuntimeException: Unable to create application [...]: java.lang.NullPointerException: Attempt to invoke interface method 'java.util.Iterator java.util.List.iterator()' on a null object reference\n    at android.app.ActivityThread.handleBindApplication(ActivityThread.java:4710)\n    at android.app.ActivityThread.-wrap1(ActivityThread.java)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1405)\n    at android.os.Handler.dispatchMessage(Handler.java:102)\n    at android.os.Looper.loop(Looper.java:148)\n    at android.app.ActivityThread.main(ActivityThread.java:5417)\n    at java.lang.reflect.Method.invoke(Native Method)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:726)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:616)\nCaused by: java.lang.NullPointerException: Attempt to invoke interface method 'java.util.Iterator java.util.List.iterator()' on a null object reference\n    at com.squareup.leakcanary.internal.LeakCanaryInternals.isInServiceProcess(LeakCanaryInternals.java:117)\n    at com.squareup.leakcanary.LeakCanary.isInAnalyzerProcess(LeakCanary.java:237)\n    at com.squareup.leakcanary.LeakCanary.install(LeakCanary.java:77)\n    at com.squareup.leakcanary.LeakCanary.install(LeakCanary.java:42)\n[...]\n", "url": "https://github.com/square/leakcanary/issues/449", "user": "elcelista", "labels": ["type: bug"], "created": "2016-03-11 19:55:57", "closed": "2016-03-20 08:17:22", "commits": {"efa41ac38b4fa4d48df06d011730a7ffdc8eb0d0": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 8.000277777777777, "commitsDetails": [{"commitHash": "efa41ac38b4fa4d48df06d011730a7ffdc8eb0d0", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["462561d249bddf5a28439bc588a7cb026a8425bf"], "nameRev": "efa41ac38b4fa4d48df06d011730a7ffdc8eb0d0 tags/release_1.4-beta2~3^2", "commitMessage": "Fix NPE\n\nFixes #449\n", "commitDateTime": "2016-03-19 17:28:44", "authoredDateTime": "2016-03-19 17:28:44", "commitGitStats": [{"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java", "insertions": 9, "deletions": 4, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "LeakCanaryInternals.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.LeakCanaryInternals.isInServiceProcess(android.content.Context,java.lang.Class)", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["efa41ac38b4fa4d48df06d011730a7ffdc8eb0d0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 4, "lines": 13, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android/src/main/java/com/squareup/leakcanary/internal"], "changesInPackagesSPOON": ["com.squareup.leakcanary.internal.LeakCanaryInternals.isInServiceProcess(android.content.Context,java.lang.Class)"]}, {"title": "java.lang.NullPointerException alyunOS", "body": "In com.sumxiang.noteapp:1.0:2.\n- FAILURE:\n  java.lang.NullPointerException: java.lang.NullPointerException\n  at com.squareup.leakcanary.HahaHelper.classInstanceValues(HahaHelper.java:143)\n  at com.squareup.leakcanary.HahaHelper.asString(HahaHelper.java:73)\n  at com.squareup.leakcanary.HahaHelper.threadName(HahaHelper.java:55)\n  at com.squareup.leakcanary.ShortestPathFinder.enqueueGcRoots(ShortestPathFinder.java:133)\n  at com.squareup.leakcanary.ShortestPathFinder.findPath(ShortestPathFinder.java:82)\n  at com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(HeapAnalyzer.java:112)\n  at com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:87)\n  at com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:58)\n  at android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\n  at android.os.Handler.dispatchMessage(Handler.java:102)\n  at android.os.Looper.loop(Looper.java:136)\n  at android.os.HandlerThread.run(HandlerThread.java:61)\n- Reference Key: 17ea16ba-cb43-4a23-bd9e-18c6ad09b2d2\n- Device: Xiaomi Xiaomi HM 1SW armani\n- Android Version: 4.4.4 API: 19 LeakCanary: 1.4-beta1 02804f3\n- Durations: watch=5018ms, gc=123ms, heap dump=580ms, analysis=4082ms\n- Excluded Refs:\n  | Field: android.app.ActivityThread$ActivityClientRecord.nextIdle\n  | Field: android.widget.Editor$EasyEditSpanController.this$0\n  | Field: android.widget.Editor$SpanController.this$0\n  | Field: android.os.Message.obj\n  | Field: android.os.Message.next\n  | Field: android.os.Message.target\n  | Field: android.view.inputmethod.InputMethodManager.mNextServedView\n  | Field: android.view.inputmethod.InputMethodManager.mServedView\n  | Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\n  | Field: android.view.inputmethod.InputMethodManager.mCurRootView\n  | Field: android.animation.LayoutTransition$1.val$parent\n  | Field: android.view.textservice.SpellCheckerSession$1.this$0\n  | Field: android.support.v7.internal.widget.ActivityChooserModel.mActivityChoserModelPolicy\n  | Field: android.widget.ActivityChooserModel.mActivityChoserModelPolicy\n  | Field: android.speech.SpeechRecognizer$InternalListener.this$0\n  | Field: android.accounts.AccountManager$AmsTask$Response.this$1\n  | Field: android.media.MediaScannerConnection.mContext\n  | Field: android.os.UserManager.mContext\n  | Field: android.appwidget.AppWidgetHost$Callbacks.this$0\n  | Field: android.media.AudioManager$1.this$0\n  | Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\n  | Static field: android.text.TextLine.sCached\n  | Thread:FinalizerWatchdogDaemon (always)\n  | Thread:main (always)\n  | Thread:LeakCanary-Heap-Dump (always)\n  | Class:java.lang.ref.WeakReference (always)\n  | Class:java.lang.ref.SoftReference (always)\n  | Class:java.lang.ref.PhantomReference (always)\n  | Class:java.lang.ref.Finalizer (always)\n  | Class:java.lang.ref.FinalizerReference (always)\n  | Root Class:android.os.Binder (always)\n  dump http://pan.baidu.com/s/1c0KU7y4\n", "url": "https://github.com/square/leakcanary/issues/417", "user": "fanwucoder", "labels": ["status: needs more info", "type: bug"], "created": "2016-02-01 08:39:07", "closed": "2016-03-30 02:12:36", "commits": {"3df74c4eb81f13053dd961d534ec152f467df6c4": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 57.000277777777775, "commitsDetails": [{"commitHash": "3df74c4eb81f13053dd961d534ec152f467df6c4", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["9e74a8529ca94287fe0c3b02b7a6b39d51ecd704"], "nameRev": "3df74c4eb81f13053dd961d534ec152f467df6c4 tags/v1.4~15^2", "commitMessage": "No crash if can't find thread name\n\nFixes #417.\n", "commitDateTime": "2016-03-29 17:50:19", "authoredDateTime": "2016-03-29 17:50:19", "commitGitStats": [{"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HahaHelper.java", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HahaHelper.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HahaHelper.threadName(com.squareup.haha.perflib.Instance)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3df74c4eb81f13053dd961d534ec152f467df6c4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 0, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-analyzer/src/main/java/com/squareup/leakcanary"], "changesInPackagesSPOON": ["com.squareup.leakcanary.HahaHelper.threadName(com.squareup.haha.perflib.Instance)"]}, {"title": "Crash opening \"Leaks\" activity on 1.4-beta1", "body": "My test device is running Android M, and I have not had a leak to get the notification to grant storage permissions. When I run the Leaks activity, it crashes with the dump below. The activity is able to open after granting storage permission.\n\n```\nD  Shutting down VM\nE  FATAL EXCEPTION: main\nE  Process: com.meiste.tempalarm, PID: 14231\nE  java.lang.RuntimeException: Unable to resume activity {com.meiste.tempalarm/com.squareup.leakcanary.internal.DisplayLeakActivity}: java.lang.Unsupport\n                        edOperationException: Could not create leak directory /storage/emulated/0/Download/leakcanary-com.meiste.tempalarm\nE      at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3121)\nE      at android.app.ActivityThread.handleResumeActivity(ActivityThread.java:3152)\nE      at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2495)\nE      at android.app.ActivityThread.-wrap11(ActivityThread.java)\nE      at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1354)\nE      at android.os.Handler.dispatchMessage(Handler.java:102)\nE      at android.os.Looper.loop(Looper.java:148)\nE      at android.app.ActivityThread.main(ActivityThread.java:5443)\nE      at java.lang.reflect.Method.invoke(Native Method)\nE      at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:728)\nE      at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:618)\nE  Caused by: java.lang.UnsupportedOperationException: Could not create leak directory /storage/emulated/0/Download/leakcanary-com.meiste.tempalarm\nE      at com.squareup.leakcanary.DefaultLeakDirectoryProvider.leakDirectory(DefaultLeakDirectoryProvider.java:45)\nE      at com.squareup.leakcanary.internal.DisplayLeakActivity.getLeakDirectory(DisplayLeakActivity.java:94)\nE      at com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks.<init>(DisplayLeakActivity.java:431)\nE      at com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks.load(DisplayLeakActivity.java:413)\nE      at com.squareup.leakcanary.internal.DisplayLeakActivity.onResume(DisplayLeakActivity.java:142)\nE      at android.app.Instrumentation.callActivityOnResume(Instrumentation.java:1281)\nE      at android.app.Activity.performResume(Activity.java:6320)\nE      at android.app.ActivityThread.performResumeActivity(ActivityThread.java:3110)\nE      ... 10 more\n```\n", "url": "https://github.com/square/leakcanary/issues/382", "user": "meisteg", "labels": ["status: help wanted", "type: bug"], "created": "2016-01-09 17:01:10", "closed": "2016-03-30 02:27:40", "commits": {"32a295c5c714faae7ec449695e6825ee8faef132": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "131a8ae309b8f422d54685875ee0568da50ef2dc": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 80.00027777777778, "commitsDetails": [{"commitHash": "32a295c5c714faae7ec449695e6825ee8faef132", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "131a8ae309b8f422d54685875ee0568da50ef2dc", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["37cb2b7f3cb05bb0ac916d1cb308f9ba2c177472"], "nameRev": "131a8ae309b8f422d54685875ee0568da50ef2dc tags/v1.4~13^2", "commitMessage": "Fix permission crash for DisplayLeakActivity on M\n\nFixes #382\n", "commitDateTime": "2016-03-29 19:14:57", "authoredDateTime": "2016-01-22 17:13:25", "commitGitStats": [{"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/DefaultLeakDirectoryProvider.java", "insertions": 12, "deletions": 1, "lines": 13}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/LeakDirectoryProvider.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/DisplayLeakActivity.java", "insertions": 16, "deletions": 11, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidHeapDumper.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.dumpHeap()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultLeakDirectoryProvider.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.requestWritePermission()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.requestPermission(android.app.Activity)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LeakDirectoryProvider.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.requestWritePermission()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.requestPermission(android.app.Activity)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DisplayLeakActivity.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.getLeakDirectory(android.content.Context)", "TOT": 8, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteAllLeaks()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks.load(com.squareup.leakcanary.internal.DisplayLeakActivity)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.onResume()", "TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.leakDirectoryProvider(android.content.Context)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks.load(com.squareup.leakcanary.internal.DisplayLeakActivity,java.io.File)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["131a8ae309b8f422d54685875ee0568da50ef2dc"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 33.0, "deletions": 14.0, "lines": 47.0, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 30.0, "UPD": 8.0, "INS": 11.0, "MOV": 7.0, "DEL": 4.0, "spoonFilesChanged": 4, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android/src/main/java/com/squareup/leakcanary/internal", "leakcanary-android/src/main/java/com/squareup/leakcanary"], "changesInPackagesSPOON": ["com.squareup.leakcanary.internal.DisplayLeakActivity.leakDirectoryProvider(android.content.Context)", "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks.load(com.squareup.leakcanary.internal.DisplayLeakActivity)", "com.squareup.leakcanary.DefaultLeakDirectoryProvider.requestPermission(android.app.Activity)", "com.squareup.leakcanary.DefaultLeakDirectoryProvider.requestWritePermission()", "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks", "com.squareup.leakcanary.requestWritePermission()", "com.squareup.leakcanary.requestPermission(android.app.Activity)", "com.squareup.leakcanary.internal.DisplayLeakActivity.onResume()", "com.squareup.leakcanary.internal.DisplayLeakActivity.deleteAllLeaks()", "com.squareup.leakcanary.internal.DisplayLeakActivity.getLeakDirectory(android.content.Context)", "com.squareup.leakcanary.AndroidHeapDumper.dumpHeap()", "com.squareup.leakcanary.internal.DisplayLeakActivity.LoadLeaks.load(com.squareup.leakcanary.internal.DisplayLeakActivity,java.io.File)"]}, {"title": "\"Could not create leak directory\" on Marshmallow", "body": "I'm having a new crash on Marshmallow with the latest version of leak canary (1.4-SNAPSHOT, latest snapshot):\n\n```\njava.lang.UnsupportedOperationException: Could not create leak directory /storage/emulated/0/Download/leakcanary-com.myapp\n   at com.squareup.leakcanary.DefaultLeakDirectoryProvider.leakDirectory(DefaultLeakDirectoryProvider.java:23)\n   at com.squareup.leakcanary.AndroidHeapDumper.getHeapDumpFile(AndroidHeapDumper.java:113)\n   at com.squareup.leakcanary.AndroidHeapDumper.access$100(AndroidHeapDumper.java:33)\n   at com.squareup.leakcanary.AndroidHeapDumper$1.run(AndroidHeapDumper.java:100)\n   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1113)\n   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:588)\n   at java.lang.Thread.run(Thread.java:818)\n```\n\nI don't think it was happening in the previous snapshot.\n", "url": "https://github.com/square/leakcanary/issues/374", "user": "romainpiel", "labels": ["type: bug"], "created": "2016-01-07 10:28:45", "closed": "2016-01-07 12:04:05", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Storage permission on Android M", "body": "Sometimes the Toast with the message \"Dumping memory, app will freeze. Brrr.\" appears on my application and does not disappear. \nI also get a few ANR while this message is visible (I think this is expected) and always select wait instead of killing the application. \nThe only way to remove the Toast is killing the application.\nTo install the leakcanary I only added the install method on the application class (`LeakCanary.install(this);`). It is necessary to do something more? \n\nOn my device (OnePlus One with Android 5.1.1) I never get this behaviour but on Android emulator with Android 6.0 it happens with some frequency.  \n", "url": "https://github.com/square/leakcanary/issues/285", "user": "SandroMachado", "labels": ["status: help wanted", "type: bug"], "created": "2015-09-16 11:36:49", "closed": "2016-01-07 14:33:05", "commits": {"3a505b3c86d5b146dc47a16f9a1a26b847ebe549": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "0aaf25dad3a2621b3e48e36b52c388aa6f14841d": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "afaa3cde834747c5b843650a164e124309b496e7": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "ea0af1d6be08ba4ac7eda913219456286ab0c4f8": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 113.00027777777778, "commitsDetails": [{"commitHash": "3a505b3c86d5b146dc47a16f9a1a26b847ebe549", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "0aaf25dad3a2621b3e48e36b52c388aa6f14841d", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "afaa3cde834747c5b843650a164e124309b496e7", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "ea0af1d6be08ba4ac7eda913219456286ab0c4f8", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["80421bc9410a457588a9d6391a9873189274b087"], "nameRev": "ea0af1d6be08ba4ac7eda913219456286ab0c4f8 tags/release_1.4-beta1~2^2", "commitMessage": "Handle storage permission on M\n\nWhen a potential leak is detected, if the storage permission is missing, we drop the leak and we show a notification. That notification will then show the permission dialog.\n\nFixes #285\n", "commitDateTime": "2016-01-07 15:04:52", "authoredDateTime": "2016-01-07 14:31:04", "commitGitStats": [{"filePath": "leakcanary-android/src/main/AndroidManifest.xml", "insertions": 9, "deletions": 0, "lines": 9}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/DefaultLeakDirectoryProvider.java", "insertions": 45, "deletions": 0, "lines": 45}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/DisplayLeakService.java", "insertions": 2, "deletions": 45, "lines": 47}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/LeakCanary.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/LeakDirectoryProvider.java", "insertions": 22, "deletions": 1, "lines": 23}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/LeakCanaryInternals.java", "insertions": 56, "deletions": 5, "lines": 61}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/internal/RequestStoragePermissionActivity.java", "insertions": 56, "deletions": 0, "lines": 56}, {"filePath": "leakcanary-android/src/main/res/values/leak_canary_strings.xml", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "leakcanary-android/src/main/res/values/leak_canary_themes.xml", "insertions": 9, "deletions": 1, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidHeapDumper.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.dumpHeap()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.cleanup().1.run()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultLeakDirectoryProvider.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.requestWritePermission()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.hasStoragePermission()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DefaultLeakDirectoryProvider.isLeakStorageWritable()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DisplayLeakService.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.DisplayLeakService.onHeapAnalyzed(com.squareup.leakcanary.HeapDump,com.squareup.leakcanary.AnalysisResult)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.DisplayLeakService.notify(java.lang.String,java.lang.String,android.app.PendingIntent)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "LeakCanary.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.LeakCanary.setDisplayLeakActivityDirectoryProvider(com.squareup.leakcanary.LeakDirectoryProvider)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LeakDirectoryProvider.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.requestWritePermission()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "LeakCanaryInternals.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.LeakCanaryInternals.setEnabledBlocking(android.content.Context,java.lang.Class,boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.LeakCanaryInternals.showNotification(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.LeakCanaryInternals.setEnabled(android.content.Context,java.lang.Class,boolean)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "com.squareup.leakcanary.internal.LeakCanaryInternals.setEnabled(android.content.Context,java.lang.Class,boolean).1.run()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "RequestStoragePermissionActivity.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.internal.RequestStoragePermissionActivity", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ea0af1d6be08ba4ac7eda913219456286ab0c4f8"], "filteredCommitsReason": {"duplicated": 3, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 191.0, "deletions": 53.0, "lines": 244.0, "gitFilesChange": 7}, "spoonStatsSummary": {"TOT": 23.0, "UPD": 3.0, "INS": 13.0, "MOV": 6.0, "DEL": 1.0, "spoonFilesChanged": 7, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android/src/main/java/com/squareup/leakcanary/internal", "leakcanary-android/src/main/java/com/squareup/leakcanary"], "changesInPackagesSPOON": ["com.squareup.leakcanary.DisplayLeakService.notify(java.lang.String,java.lang.String,android.app.PendingIntent)", "com.squareup.leakcanary.DefaultLeakDirectoryProvider.isLeakStorageWritable()", "com.squareup.leakcanary.AndroidHeapDumper.cleanup().1.run()", "com.squareup.leakcanary.requestWritePermission()", "com.squareup.leakcanary.DisplayLeakService.onHeapAnalyzed(com.squareup.leakcanary.HeapDump,com.squareup.leakcanary.AnalysisResult)", "com.squareup.leakcanary.DefaultLeakDirectoryProvider.hasStoragePermission()", "com.squareup.leakcanary.internal.LeakCanaryInternals.setEnabledBlocking(android.content.Context,java.lang.Class,boolean)", "com.squareup.leakcanary.AndroidHeapDumper.dumpHeap()", "com.squareup.leakcanary.internal.RequestStoragePermissionActivity", "com.squareup.leakcanary.DefaultLeakDirectoryProvider.requestWritePermission()", "com.squareup.leakcanary.LeakCanary.setDisplayLeakActivityDirectoryProvider(com.squareup.leakcanary.LeakDirectoryProvider)", "com.squareup.leakcanary.internal.LeakCanaryInternals.setEnabled(android.content.Context,java.lang.Class,boolean).1.run()", "com.squareup.leakcanary.internal.LeakCanaryInternals.showNotification(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent)", "com.squareup.leakcanary.internal.LeakCanaryInternals.setEnabled(android.content.Context,java.lang.Class,boolean)"]}, {"title": "Proguard fails on 1.4-SNAPSHOT", "body": "I've got this:\n\n```\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$1: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$Itr\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$2: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$Itr\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$RandomAccessWrappedList: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$RandomAccessWrappedList: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedList\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$SortedAsMap: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$AsMap\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$SortedKeySet: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$KeySet\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedList: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedList: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedList$WrappedListIterator: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection$WrappedIterator\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedSet: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedSortedSet: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedSortedSet: can't find referenced class com.squareup.haha.guava.collect.AbstractMapBasedMultimap$com.squareup.haha.guava.collect.AbstractMapBasedMultimap$WrappedCollection\nWarning: com.squareup.haha.guava.collect.AbstractMultimap$EntrySet: can't find referenced class com.squareup.haha.guava.collect.AbstractMultimap$com.squareup.haha.guava.collect.AbstractMultimap$Entries\nWarning: com.squareup.haha.guava.collect.ImmutableMultimap$1: can't find referenced class com.squareup.haha.guava.collect.ImmutableMultimap$com.squareup.haha.guava.collect.ImmutableMultimap$Itr\nWarning: com.squareup.haha.guava.collect.ImmutableMultimap$2: can't find referenced class com.squareup.haha.guava.collect.ImmutableMultimap$com.squareup.haha.guava.collect.ImmutableMultimap$Itr\nWarning: com.squareup.haha.guava.collect.MapMakerInternalMap$EntryIterator: can't find referenced class com.squareup.haha.guava.collect.MapMakerInternalMap$com.squareup.haha.guava.collect.MapMakerInternalMap$HashIterator\nWarning: com.squareup.haha.guava.collect.MapMakerInternalMap$HashIterator: can't find referenced class com.squareup.haha.guava.collect.MapMakerInternalMap$com.squareup.haha.guava.collect.MapMakerInternalMap$com.squareup.haha.guava.collect.MapMakerInternalMap$WriteThroughEntry\nWarning: com.squareup.haha.guava.collect.MapMakerInternalMap$HashIterator: can't find referenced class com.squareup.haha.guava.collect.MapMakerInternalMap$com.squareup.haha.guava.collect.MapMakerInternalMap$com.squareup.haha.guava.collect.MapMakerInternalMap$WriteThroughEntry\nWarning: com.squareup.haha.guava.collect.MapMakerInternalMap$HashIterator: can't find referenced class com.squareup.haha.guava.collect.MapMakerInternalMap$com.squareup.haha.guava.collect.MapMakerInternalMap$WriteThroughEntry\nWarning: com.squareup.haha.guava.collect.MapMakerInternalMap$KeyIterator: can't find referenced class com.squareup.haha.guava.collect.MapMakerInternalMap$com.squareup.haha.guava.collect.MapMakerInternalMap$HashIterator\nWarning: com.squareup.haha.guava.collect.MapMakerInternalMap$ValueIterator: can't find referenced class com.squareup.haha.guava.collect.MapMakerInternalMap$com.squareup.haha.guava.collect.MapMakerInternalMap$HashIterator\nWarning: com.squareup.haha.perflib.io.MemoryMappedFileBuffer: can't find referenced class sun.misc.Cleaner\nWarning: com.squareup.haha.perflib.io.MemoryMappedFileBuffer: can't find referenced class sun.nio.ch.DirectBuffer\nWarning: com.squareup.haha.perflib.io.MemoryMappedFileBuffer: can't find referenced class sun.misc.Cleaner\nWarning: com.squareup.haha.perflib.io.MemoryMappedFileBuffer: can't find referenced class sun.nio.ch.DirectBuffer\nWarning: com.squareup.haha.trove.THashMap$EntryView: can't find referenced class com.squareup.haha.trove.THashMap$com.squareup.haha.trove.THashMap$MapBackedView\nWarning: com.squareup.haha.trove.THashMap$KeyView: can't find referenced class com.squareup.haha.trove.THashMap$com.squareup.haha.trove.THashMap$MapBackedView\nWarning: com.squareup.haha.trove.THashMap$ValueView: can't find referenced class com.squareup.haha.trove.THashMap$com.squareup.haha.trove.THashMap$MapBackedView\nWarning: there were 50 unresolved references to classes or interfaces.\n         You may need to add missing library jars or update their versions.\n         If your code works fine without the missing classes, you can suppress\n         the warnings with '-dontwarn' options.\n         (http://proguard.sourceforge.net/manual/troubleshooting.html#unresolvedclass)\nException while processing task\n```\n\nEven though in my proguard.cfg:\n\n```\n-keep class org.eclipse.mat.** { *; }\n-keep class com.squareup.leakcanary.** { *; }\n-keep class com.squareup.haha.** { *; }\n-keep class sun.misc.** { *; }\n-keep class sun.nio.** { *; }\n```\n", "url": "https://github.com/square/leakcanary/issues/265", "user": "kkocel", "labels": ["type: bug"], "created": "2015-08-31 10:11:20", "closed": "2016-05-24 15:20:24", "commits": {}, "ttf": 267.0002777777778, "commitsDetails": []}, {"title": "OOM in LeakCanary process while processing dump", "body": "java.lang.OutOfMemoryError: OutOfMemoryError thrown while trying to throw OutOfMemoryError; no stack available\n    \\* Reference Key: 87e281ee-6c4d-4c12-b040-d0c2c1e9c2e4\n    \\* Device: samsung samsung SM-G900T kltetmo\n    \\* Android Version: 5.0 API: 21 LeakCanary: 1.4-SNAPSHOT 6c0bee2\n    \\* Durations: watch=5036ms, gc=197ms, heap dump=8458ms, analysis=14404ms\n    \\* Excluded Refs:\n    | Field: android.app.ActivityThread$ActivityClientRecord.nextIdle\n    | Field: android.view.inputmethod.InputMethodManager.mNextServedView\n    | Field: android.view.inputmethod.InputMethodManager.mServedView\n    | Field: android.view.inputmethod.InputMethodManager.mServedInputConnection\n    | Field: android.view.inputmethod.InputMethodManager.mCurRootView\n    | Field: android.animation.LayoutTransition$1.val$parent\n    | Field: android.view.textservice.SpellCheckerSession$1.this$0\n    | Field: android.accounts.AccountManager$AmsTask$Response.this$1\n    | Field: android.media.MediaScannerConnection.mContext\n    | Field: android.os.UserManager.mContext\n    | Field: android.view.Choreographer$FrameDisplayEventReceiver.mMessageQueue (always)\n    | Static field: android.media.session.MediaSessionLegacyHelper.sInstance\n    | Static field: android.text.TextLine.sCached\n    | Static field: android.support.v7.internal.widget.ActivityChooserModel.mActivityChoserModelPolicy\n    | Static field: android.widget.ActivityChooserModel.mActivityChoserModelPolicy\n    | Static field: android.sec.clipboard.ClipboardUIManager.sInstance\n    | Thread:FinalizerWatchdogDaemon (always)\n    | Thread:main (always)\n    | Thread:LeakCanary-Heap-Dump (always)\n    | Class:java.lang.ref.WeakReference (always)\n    | Class:java.lang.ref.SoftReference (always)\n    | Class:java.lang.ref.PhantomReference (always)\n    | Class:java.lang.ref.Finalizer (always)\n    | Class:java.lang.ref.FinalizerReference (always)`\n", "url": "https://github.com/square/leakcanary/issues/229", "user": "kylefowler", "labels": ["type: bug"], "created": "2015-07-24 18:41:37", "closed": "2016-01-05 08:50:06", "commits": {}, "ttf": 164.00027777777777, "commitsDetails": []}, {"title": "FATAL EXCEPTION: LeakCanary-Heap-Dump Failure during heap dump; check log output for details", "body": "```\n FATAL EXCEPTION: LeakCanary-Heap-Dump\n java.lang.RuntimeException: Failure during heap dump; check log output for details\n    at dalvik.system.VMDebug.dumpHprofData(Native Method)\n    at dalvik.system.VMDebug.dumpHprofData(VMDebug.java:305)\n    at android.os.Debug.dumpHprofData(Debug.java:948)\n    at com.squareup.leakcanary.AndroidHeapDumper.dumpHeap(AndroidHeapDumper.java:69)\n    at com.squareup.leakcanary.RefWatcher.ensureGone(RefWatcher.java:122)\n    at com.squareup.leakcanary.RefWatcher$5.run(RefWatcher.java:103)\n    at android.os.Handler.handleCallback(Handler.java:730)\n    at android.os.Handler.dispatchMessage(Handler.java:92)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.os.HandlerThread.run(HandlerThread.java:61)\n```\n", "url": "https://github.com/square/leakcanary/issues/226", "user": "bywyu", "labels": ["type: bug"], "created": "2015-07-23 08:48:56", "closed": "2015-08-28 18:08:54", "commits": {"2ff5aeab930ac426b39d9dd57109d508b2645dc2": {"commitGHEventType": "referenced", "commitUser": "pyricau"}, "0b0ab297e81521429f1e58c5dfc21402b7cdde28": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 36.000277777777775, "commitsDetails": [{"commitHash": "2ff5aeab930ac426b39d9dd57109d508b2645dc2", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["6d6690fea92ba7ecc3ad81b5a9f004b343a7a252"], "nameRev": "2ff5aeab930ac426b39d9dd57109d508b2645dc2 tags/release_1.4-beta1~27^2", "commitMessage": "Don't crash when heap dump fails #226\n", "commitDateTime": "2015-08-28 14:01:10", "authoredDateTime": "2015-08-28 14:01:10", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidHeapDumper.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.dumpHeap()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "0b0ab297e81521429f1e58c5dfc21402b7cdde28", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["6d6690fea92ba7ecc3ad81b5a9f004b343a7a252", "2ff5aeab930ac426b39d9dd57109d508b2645dc2"], "nameRev": "0b0ab297e81521429f1e58c5dfc21402b7cdde28 tags/release_1.4-beta1~27", "commitMessage": "Merge pull request #259 from square/py/crash_dump\n\nDon't crash when heap dump fails #226", "commitDateTime": "2015-08-28 14:08:30", "authoredDateTime": "2015-08-28 14:08:30", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "leakcanary-android/src/main/java/com/squareup/leakcanary/AndroidHeapDumper.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AndroidHeapDumper.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.AndroidHeapDumper.dumpHeap()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2ff5aeab930ac426b39d9dd57109d508b2645dc2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-android/src/main/java/com/squareup/leakcanary"], "changesInPackagesSPOON": ["com.squareup.leakcanary.AndroidHeapDumper.dumpHeap()"]}, {"title": "Leak analysis failed: crash for anonymous crashes", "body": "Got a crash on leak canary and as said on the info I'm reporting it.\n\n```\njava.lang.ArrayIndexOutOfBoundsException: length=0; index=0\nat com.squareup.leakcanary.HeapAnalyzer.buildLeakElement(HeapAnalyzer.java:344)\nat com.squareup.leakcanary.HeapAnalyzer.buildLeakTrace(HeapAnalyzer.java:267)\nat com.squareup.leakcanary.HeapAnalyzer.findLeakTrace(HeapAnalyzer.java:131)\nat com.squareup.leakcanary.HeapAnalyzer.checkForLeak(HeapAnalyzer.java:104)\nat com.squareup.leakcanary.internal.HeapAnalyzerService.onHandleIntent(HeapAnalyzerService.java:57)\nat android.app.IntentService$ServiceHandler.handleMessage(IntentService.java:65)\nat android.os.Handler.dispatchMessage(Handler.java:99)\nat android.os.Looper.loop(Looper.java:137)\nat android.os.HandlerThread.run(HandlerThread.java:60)\n\n* Reference Key: cc2e855a-9e58-4bf8-b447-d5d05c7f6e00\n* Device: samsung samsung Galaxy Nexus yakjuxw\n* Android Version: 4.2.1 API: 17 LeakCanary: 1.3.1\n* Durations: watch=5629ms, gc=193ms, heap dump=8956ms, analysis=32428ms\n```\n\nHope it helps.\n\nThanks for this awesome library.\n", "url": "https://github.com/square/leakcanary/issues/195", "user": "CarlosMChica", "labels": ["type: bug"], "created": "2015-06-25 10:28:51", "closed": "2016-01-04 16:59:50", "commits": {"0328f74323719d214c5043ced6ab20dd06e59d39": {"commitGHEventType": "referenced", "commitUser": "pyricau"}}, "ttf": 193.00027777777777, "commitsDetails": [{"commitHash": "0328f74323719d214c5043ced6ab20dd06e59d39", "commitGHEventType": "referenced", "commitUser": "pyricau", "commitParents": ["0b0ab297e81521429f1e58c5dfc21402b7cdde28"], "nameRev": "0328f74323719d214c5043ced6ab20dd06e59d39 tags/release_1.4-beta1~21^2", "commitMessage": "Fix crash for anonymous crashes\n\nFixes #195\n", "commitDateTime": "2015-08-28 17:17:48", "authoredDateTime": "2015-08-28 17:17:48", "commitGitStats": [{"filePath": "CHANGELOG.md", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "leakcanary-analyzer/src/main/java/com/squareup/leakcanary/HeapAnalyzer.java", "insertions": 10, "deletions": 5, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HeapAnalyzer.java", "spoonMethods": [{"spoonMethodName": "com.squareup.leakcanary.HeapAnalyzer.buildLeakElement(com.squareup.leakcanary.LeakNode)", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0328f74323719d214c5043ced6ab20dd06e59d39"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 5, "lines": 15, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["leakcanary-analyzer/src/main/java/com/squareup/leakcanary"], "changesInPackagesSPOON": ["com.squareup.leakcanary.HeapAnalyzer.buildLeakElement(com.squareup.leakcanary.LeakNode)"]}, {"title": "StrictMode violation on 4.0.4", "body": "This is on a Galaxy Nexus:\n\n```\n StrictMode policy violation; ~duration=102 ms: android.os.StrictMode$StrictModeDiskReadViolation: policy=95 violation=2\n    at android.os.StrictMode$AndroidBlockGuardPolicy.onReadFromDisk(StrictMode.java:1089)\n    at libcore.io.BlockGuardOs.read(BlockGuardOs.java:148)\n    at libcore.io.IoBridge.read(IoBridge.java:422)\n    at java.io.FileInputStream.read(FileInputStream.java:179)\n    at org.apache.harmony.security.provider.crypto.RandomBitsSupplier.getUnixDeviceRandom(RandomBitsSupplier.java:111)\n    at org.apache.harmony.security.provider.crypto.RandomBitsSupplier.getRandomBits(RandomBitsSupplier.java:159)\n    at org.apache.harmony.security.provider.crypto.SHA1PRNG_SecureRandomImpl.engineNextBytes(SHA1PRNG_SecureRandomImpl.java:288)\n    at java.security.SecureRandom.nextBytes(SecureRandom.java:273)\n    at java.util.UUID.randomUUID(UUID.java:130)\n    at com.squareup.leakcanary.RefWatcher.watch(RefWatcher.java:96)\n    at com.squareup.leakcanary.RefWatcher.watch(RefWatcher.java:80)\n    at com.squareup.leakcanary.ActivityRefWatcher.onActivityDestroyed(ActivityRefWatcher.java:76)\n    at com.squareup.leakcanary.ActivityRefWatcher$1.onActivityDestroyed(ActivityRefWatcher.java:59)\n    at android.app.Application.dispatchActivityDestroyed(Application.java:210)\n    at android.app.Activity.onDestroy(Activity.java:1396)\n    at android.app.Activity.performDestroy(Activity.java:4629)\n    at android.app.Instrumentation.callActivityOnDestroy(Instrumentation.java:1079)\n    at android.app.ActivityThread.performDestroyActivity(ActivityThread.java:3099)\n    at android.app.ActivityThread.handleDestroyActivity(ActivityThread.java:3130)\n    at android.app.ActivityThread.handleRelaunchActivity(ActivityThread.java:3328)\n    at android.app.ActivityThread.access$700(ActivityThread.java:123)\n    at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1151)\n    at android.os.Handler.dispatchMessage(Handler.java:99)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.app.ActivityThread.main(ActivityThread.java:4424)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:511)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)\n    at dalvik.system.NativeStart.main(Native Method)\n Shutting down VM\n threadid=1: thread exiting with uncaught exception (group=0x40a461f8)\n FATAL EXCEPTION: main\n android.os.StrictMode$StrictModeViolation: policy=95 violation=2\n    at android.os.StrictMode.executeDeathPenalty(StrictMode.java:1326)\n    at android.os.StrictMode.access$1300(StrictMode.java:111)\n    at android.os.StrictMode$AndroidBlockGuardPolicy.handleViolation(StrictMode.java:1319)\n    at android.os.StrictMode$AndroidBlockGuardPolicy$1.run(StrictMode.java:1206)\n    at android.os.Handler.handleCallback(Handler.java:605)\n    at android.os.Handler.dispatchMessage(Handler.java:92)\n    at android.os.Looper.loop(Looper.java:137)\n    at android.app.ActivityThread.main(ActivityThread.java:4424)\n    at java.lang.reflect.Method.invokeNative(Native Method)\n    at java.lang.reflect.Method.invoke(Method.java:511)\n    at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:784)\n    at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:551)\n    at dalvik.system.NativeStart.main(Native Method)\n GC_CONCURRENT freed 237K, 3% free 12786K/13127K, paused 3ms+2ms\n   Force finishing activity com.example.leakcanary/.MainActivity\n Activity pause timeout for ActivityRecord{41f6cfd8 com.example.leakcanary/.MainActivity}\n```\n", "url": "https://github.com/square/leakcanary/issues/155", "user": "sjudd", "labels": ["type: bug"], "created": "2015-05-28 00:59:29", "closed": "2015-07-22 17:32:33", "commits": {}, "ttf": 55.000277777777775, "commitsDetails": []}, {"title": "NoSuchMethodError on Android 2.3.6 (API 10)", "body": "DisplayLeakActivity is enabled, but it should only run on target api over 11.\n\n```\n05-24 13:12:06.550      371-371/com.github.baoti.pioneer W/dalvikvm\ufe55 threadid=1: thread exiting with uncaught exception (group=0x4001e578)\n05-24 13:12:06.560      371-371/com.github.baoti.pioneer E/AndroidRuntime\ufe55 FATAL EXCEPTION: main\n    java.lang.NoSuchMethodError: com.squareup.leakcanary.internal.DisplayLeakActivity.invalidateOptionsMenu\n            at com.squareup.leakcanary.internal.DisplayLeakActivity.updateUi(DisplayLeakActivity.java:270)\n            at com.squareup.leakcanary.internal.DisplayLeakActivity.access$500(DisplayLeakActivity.java:66)\n            at com.squareup.leakcanary.internal.DisplayLeakActivity$LoadLeaks$3.run(DisplayLeakActivity.java:435)\n            at android.os.Handler.handleCallback(Handler.java:587)\n            at android.os.Handler.dispatchMessage(Handler.java:92)\n            at android.os.Looper.loop(Looper.java:130)\n            at android.app.ActivityThread.main(ActivityThread.java:3691)\n            at java.lang.reflect.Method.invokeNative(Native Method)\n            at java.lang.reflect.Method.invoke(Method.java:507)\n            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:907)\n            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:665)\n            at dalvik.system.NativeStart.main(Native Method)\n```\n", "url": "https://github.com/square/leakcanary/issues/148", "user": "baoti", "labels": ["status: help wanted", "type: bug"], "created": "2015-05-24 05:17:56", "closed": "2017-03-06 03:34:38", "commits": {}, "ttf": 651.0002777777778, "commitsDetails": []}]}