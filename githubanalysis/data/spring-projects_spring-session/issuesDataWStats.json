{"projectName": "spring-projects/spring-session", "bugLabels": ["type: bug", "type: regression"], "captureTime": "Fri Jul  3 16:49:09 2020", "issues": [{"title": "Broken link in Custom Cookie guide", "body": "The following sentence in the Spring Session Custom Cookie guide contains a broken link.\r\n> The guide assumes you have already set up Spring Session in your project.", "url": "https://github.com/spring-projects/spring-session/issues/1621", "user": "eleftherias", "labels": ["in: docs", "type: bug"], "created": "2020-04-28 15:45:39", "closed": "2020-04-28 18:26:32", "commits": {"5375f51bca58f4db69483b4d67c8be2cac0cd3fc": {"commitGHEventType": "closed", "commitUser": "eleftherias"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5375f51bca58f4db69483b4d67c8be2cac0cd3fc", "commitGHEventType": "closed", "commitUser": "eleftherias", "commitParents": ["29af9d3a4d7e9db750189c47bfa1224df50a8fa9"], "nameRev": "5375f51bca58f4db69483b4d67c8be2cac0cd3fc tags/2.3.0.RELEASE~9", "commitMessage": "Fix broken links in guides\n\nResolves gh-1621\n", "commitDateTime": "2020-04-28 14:25:47", "authoredDateTime": "2020-04-28 14:25:47", "commitGitStats": [{"filePath": "spring-session-docs/src/docs/asciidoc/guides/boot-websocket.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session-docs/src/docs/asciidoc/guides/java-custom-cookie.adoc", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5375f51bca58f4db69483b4d67c8be2cac0cd3fc"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-docs/src/docs/asciidoc/guides/boot-websocket.adoc", "spring-session-docs/src/docs/asciidoc/guides/java-custom-cookie.adoc"]}, {"title": "I set the ConfigureRedisAction to NO_OP \uff0cThe listener still receives the destroyed message\uff1f", "body": "**Describe the bug**\r\nI set the ConfigureRedisAction to NO_OP \uff0cThe listener still receives the destroyed message\r\n\r\n**To Reproduce**\r\nSteps to reproduce the behavior.\r\n\r\n**Expected behavior**\r\nA clear and concise description of what you expected to happen.\r\n\r\n**Sample**\r\n\r\nA link to a GitHub repository with a [minimal, reproducible sample](https://stackoverflow.com/help/minimal-reproducible-example).\r\n\r\nReports that include a sample will take priority over reports that do not.\r\nAt times, we may require a sample, so it is good to try and include a sample up front.\r\n", "url": "https://github.com/spring-projects/spring-session/issues/1619", "user": "solomonhe", "labels": ["type: bug"], "created": "2020-04-21 03:31:49", "closed": "2020-05-05 13:18:03", "commits": {}, "ttf": 14.000277777777777, "commitsDetails": []}, {"title": "spring-session-sample-boot-findbyusername", "body": "Backport of gh-1613", "url": "https://github.com/spring-projects/spring-session/issues/1615", "user": "spring-issuemaster", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2020-04-13 14:51:13", "closed": "2020-04-13 14:51:37", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "spring-session-sample-boot-findbyusername", "body": "# Issue Description:\r\nencountering \"Request method 'POST' not supported\" error when terminate user session in  `spring-session-sample-boot-findbyusername` sample application\r\n## release 2.2.2\r\n## Steps to reproduce the issue\r\n1. start-up spring-session-samples/spring-session-sample-boot-findbyusername\r\nFollow below steps displayed on http://localhost:8080/ to delete the previous session\r\n![findbyname](https://user-images.githubusercontent.com/12314312/79039614-d1941b00-7c25-11ea-8d03-6d8a11ae98a3.png)\r\n2. When click the terminate button to delete the session, the an error page comes up:\r\n![terminate](https://user-images.githubusercontent.com/12314312/79039656-2768c300-7c26-11ea-8a80-997fb699f538.png)\r\n![error](https://user-images.githubusercontent.com/12314312/79039591-8f6ad980-7c25-11ea-9a8c-dc389cac97fb.png)", "url": "https://github.com/spring-projects/spring-session/issues/1613", "user": "Ethns", "labels": ["in: docs", "status: backported", "type: bug"], "created": "2020-04-11 08:58:35", "closed": "2020-04-13 14:41:50", "commits": {"fed318abc76b1992d11746f7fa1c3459eeb31676": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "d8ae336b2402033ccf28fa58d8e7b4d6ce4f3bce": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "fed318abc76b1992d11746f7fa1c3459eeb31676", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["a824edd1c3bef1617ca36ab97e733194261463e6"], "nameRev": "fed318abc76b1992d11746f7fa1c3459eeb31676 tags/2.3.0.RELEASE~17", "commitMessage": "Find by Username Sample switch from DELETE to POST\n\nSpring Boot 2.2 no longer adds HiddenHttpMethodFilter by default See\nhttps://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.2-Release-Notes#httphiddenmethodfilter-disabled-by-default\nThis means that trying to map DELETE requests using _method variable\ndoes not work.\n\nThis changes the mapping to use a POST which doesn't require the\nHiddenHttpMethodFilter which might expose the application to unnecessary\nsecurity risk by allowing the HTTP method to be overridden.\n\nCloses gh-1613\n", "commitDateTime": "2020-04-13 09:41:02", "authoredDateTime": "2020-04-13 09:38:42", "commitGitStats": [{"filePath": "spring-session-samples/spring-session-sample-boot-findbyusername/src/integration-test/java/sample/FindByUsernameTests.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "spring-session-samples/spring-session-sample-boot-findbyusername/src/integration-test/java/sample/pages/HomePage.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "spring-session-samples/spring-session-sample-boot-findbyusername/src/main/java/sample/mvc/IndexController.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "spring-session-samples/spring-session-sample-boot-findbyusername/src/main/resources/templates/index.html", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FindByUsernameTests.java", "spoonMethods": [{"spoonMethodName": "sample.FindByUsernameTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.FindByUsernameTests.terminateOtherSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.FindByUsernameTests.home(org.openqa.selenium.WebDriver)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.FindByUsernameTests.tearDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HomePage.java", "spoonMethods": [{"spoonMethodName": "sample.pages.HomePage.terminateButtonDisabled()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "sample.pages.HomePage.terminateSession(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IndexController.java", "spoonMethods": [{"spoonMethodName": "sample.mvc.IndexController.removeSession(java.security.Principal,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d8ae336b2402033ccf28fa58d8e7b4d6ce4f3bce", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["315112f2a257105b89efa9e2e2b2fbf574078d5a"], "nameRev": "d8ae336b2402033ccf28fa58d8e7b4d6ce4f3bce tags/2.2.3.RELEASE~7", "commitMessage": "Find by Username Sample switch from DELETE to POST\n\nSpring Boot 2.2 no longer adds HiddenHttpMethodFilter by default See\nhttps://github.com/spring-projects/spring-boot/wiki/Spring-Boot-2.2-Release-Notes#httphiddenmethodfilter-disabled-by-default\nThis means that trying to map DELETE requests using _method variable\ndoes not work.\n\nThis changes the mapping to use a POST which doesn't require the\nHiddenHttpMethodFilter which might expose the application to unnecessary\nsecurity risk by allowing the HTTP method to be overridden.\n\nCloses gh-1613\n", "commitDateTime": "2020-04-13 09:44:15", "authoredDateTime": "2020-04-13 09:38:42", "commitGitStats": [{"filePath": "spring-session-samples/spring-session-sample-boot-findbyusername/src/integration-test/java/sample/FindByUsernameTests.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "spring-session-samples/spring-session-sample-boot-findbyusername/src/integration-test/java/sample/pages/HomePage.java", "insertions": 13, "deletions": 2, "lines": 15}, {"filePath": "spring-session-samples/spring-session-sample-boot-findbyusername/src/main/java/sample/mvc/IndexController.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "spring-session-samples/spring-session-sample-boot-findbyusername/src/main/resources/templates/index.html", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "FindByUsernameTests.java", "spoonMethods": [{"spoonMethodName": "sample.FindByUsernameTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.FindByUsernameTests.terminateOtherSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.FindByUsernameTests.home(org.openqa.selenium.WebDriver)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.FindByUsernameTests.tearDown()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HomePage.java", "spoonMethods": [{"spoonMethodName": "sample.pages.HomePage.terminateButtonDisabled()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "sample.pages.HomePage.terminateSession(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "IndexController.java", "spoonMethods": [{"spoonMethodName": "sample.mvc.IndexController.removeSession(java.security.Principal,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fed318abc76b1992d11746f7fa1c3459eeb31676"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 5, "lines": 21, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 7, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-samples/spring-session-sample-boot-findbyusername/src/main/resources/templates/index.html", "spring-session-samples/spring-session-sample-boot-findbyusername/src/integration-test/java/sample/pages", "spring-session-samples/spring-session-sample-boot-findbyusername/src/main/java/sample/mvc"], "changesInPackagesSPOON": ["sample.pages.HomePage.terminateButtonDisabled()", "sample.pages.HomePage.terminateSession(java.lang.String)", "sample.mvc.IndexController.removeSession(java.security.Principal,java.lang.String)"]}, {"title": "Spring Session docs PDF do not display sample code", "body": "<!--\r\nFor Security Vulnerabilities, please use https://pivotal.io/security#reporting\r\n-->\r\n\r\n<!--\r\nThanks for raising a Spring Session issue. Please provide a brief description of your problem along with the version of Spring Session that you are using. If possible, please also consider putting together a sample application that reproduces the issue.\r\n-->\r\n\r\nThis is the case for version `2.3.0.RC1`.\r\nInstead of the sample code, the following error message is shown:\r\n```\r\nUnresolved directive in guides/java-redis.adoc - include::{samples-dir}springsession-sample-javaconfig-redis/src/main/java/sample/Initializer.java[tags=class]\r\n```\r\n", "url": "https://github.com/spring-projects/spring-session/issues/1603", "user": "eleftherias", "labels": ["in: docs", "type: bug"], "created": "2020-03-11 16:18:20", "closed": "2020-03-13 15:00:51", "commits": {"00026a30f42fc6e87a05e9245ffe2b9da34fc465": {"commitGHEventType": "closed", "commitUser": "eleftherias"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "00026a30f42fc6e87a05e9245ffe2b9da34fc465", "commitGHEventType": "closed", "commitUser": "eleftherias", "commitParents": ["c007437bd34b6d991fd876af4ca2c7fa5488fbe6"], "nameRev": "00026a30f42fc6e87a05e9245ffe2b9da34fc465 tags/2.3.0.RELEASE~21", "commitMessage": "Fix PDF docs\n\nResolves: #1603\n", "commitDateTime": "2020-03-13 10:59:40", "authoredDateTime": "2020-03-13 10:59:40", "commitGitStats": [{"filePath": "spring-session-docs/spring-session-docs.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00026a30f42fc6e87a05e9245ffe2b9da34fc465"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-docs"]}, {"title": "Build closes repository before deploying JDBC artifacts ", "body": "Example build: https://jenkins.spring.io/blue/organizations/jenkins/spring-session/detail/master/1606/pipeline\r\n\r\nWe should make sure `deployArtifacts` is complete before starting the `finalizeDeployArtifacts` task.\r\nThey should be run separately, one after the other.", "url": "https://github.com/spring-projects/spring-session/issues/1574", "user": "eleftherias", "labels": ["in: build", "type: bug"], "created": "2020-01-29 15:33:03", "closed": "2020-01-29 15:40:57", "commits": {"45bb0f9b0c341f51922e72eeec83cad756f29793": {"commitGHEventType": "closed", "commitUser": "eleftherias"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "45bb0f9b0c341f51922e72eeec83cad756f29793", "commitGHEventType": "closed", "commitUser": "eleftherias", "commitParents": ["cddd84d5649174ed711dff7749b9232e99694d6e"], "nameRev": "45bb0f9b0c341f51922e72eeec83cad756f29793 tags/2.3.0.M1~6", "commitMessage": "Run deployArtifacts before finalizeDeployArtifacts in build\n\nThis commit is needed to fix the release\n\nResolves: #1574\n", "commitDateTime": "2020-01-29 16:39:07", "authoredDateTime": "2020-01-29 16:33:35", "commitGitStats": [{"filePath": "Jenkinsfile", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["45bb0f9b0c341f51922e72eeec83cad756f29793"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["Jenkinsfile"]}, {"title": "Inaccurate note on custom cookie sample index page", "body": "After running the application, on the index page there is a note that states:\r\n>  Notice that there is no JSESSIONID cookie.\r\n\r\nHowever, in this example we customize the cookie name to be \"JSESSIONID\".\r\n\r\nThe above statement should be removed from the custom cookie sample.", "url": "https://github.com/spring-projects/spring-session/issues/1559", "user": "eleftherias", "labels": ["in: docs", "status: backported", "type: bug"], "created": "2020-01-10 17:21:56", "closed": "2020-01-13 10:57:46", "commits": {"1ad6cbd7f8c678ed7f90f9d5c75a4be44c865ec8": {"commitGHEventType": "closed", "commitUser": "eleftherias"}, "6aa85236e0f673ab7928be03268ebbf10f6a54c3": {"commitGHEventType": "referenced", "commitUser": "eleftherias"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "1ad6cbd7f8c678ed7f90f9d5c75a4be44c865ec8", "commitGHEventType": "closed", "commitUser": "eleftherias", "commitParents": ["195af52d0b6c0abc72f68befabe0a71bb2497fa9"], "nameRev": "1ad6cbd7f8c678ed7f90f9d5c75a4be44c865ec8 tags/2.2.1.RELEASE~6", "commitMessage": "Update note in custom-cookie index page\n\nResolves: gh-1559\n", "commitDateTime": "2020-01-13 11:57:20", "authoredDateTime": "2020-01-13 11:52:10", "commitGitStats": [{"filePath": "spring-session-samples/spring-session-sample-javaconfig-custom-cookie/src/main/webapp/index.jsp", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "6aa85236e0f673ab7928be03268ebbf10f6a54c3", "commitGHEventType": "referenced", "commitUser": "eleftherias", "commitParents": ["5ebe699d7c47a0802222e8acb259a5a570d0b26d"], "nameRev": "6aa85236e0f673ab7928be03268ebbf10f6a54c3 tags/2.1.10.RELEASE~4", "commitMessage": "Update note in custom-cookie index page\n\nResolves: gh-1559\n", "commitDateTime": "2020-01-13 12:52:43", "authoredDateTime": "2020-01-13 11:52:10", "commitGitStats": [{"filePath": "samples/javaconfig/custom-cookie/src/main/webapp/index.jsp", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ad6cbd7f8c678ed7f90f9d5c75a4be44c865ec8"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-samples/spring-session-sample-javaconfig-custom-cookie/src/main/webapp/index.jsp"]}, {"title": "Session cookie expires directive uses invalid format", "body": "Backport of gh-1514", "url": "https://github.com/spring-projects/spring-session/issues/1529", "user": "spring-issuemaster", "labels": ["type: backport", "type: bug"], "created": "2019-10-07 20:20:15", "closed": "2019-10-08 06:56:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Session cookie expires directive uses invalid format", "body": "I recently upgrade one of our projects to use latest version 2.1.8 from 2.0.7 and we faced following issue:\r\n\r\nin previous version it used to format the expiry date as GMT without time offset regardless of the server timezone. but last version will format the expiry in time offset representation (+HHMM) if the server time zone  is not GMT.\r\n\r\nIt's like Browsers (IE, Chrome) they don't like to see anything beside GMT. in our case the are expiring the cookie unexpectedly. \r\n\r\nfor workaround we changed server time zone to GMT.\r\n\r\nbasically following line is responsible to format the time:\r\n\r\nsb.append(\"; Expires=\").append(expires.format(DateTimeFormatter.RFC_1123_DATE_TIME));\r\n\r\nand browsers suppose to support RFC_1123 I guess, but it seems they don't like anything but GMT.\r\n\r\n  ", "url": "https://github.com/spring-projects/spring-session/issues/1514", "user": "MohsenRahimi", "labels": ["status: backported", "type: bug"], "created": "2019-09-24 20:39:02", "closed": "2019-10-07 20:20:31", "commits": {"927008bdc89701555f2f8f900f4f898df23b1476": {"commitGHEventType": "closed", "commitUser": "vpavic"}, "f0aed6b8b8ed0fa3af06b182ae6c0db8a09ccd76": {"commitGHEventType": "referenced", "commitUser": "vpavic"}, "085554f56b0ee7c96d45a49daa1c664db5fb1184": {"commitGHEventType": "referenced", "commitUser": "vpavic"}, "5ebe699d7c47a0802222e8acb259a5a570d0b26d": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 12.000277777777777, "commitsDetails": [{"commitHash": "927008bdc89701555f2f8f900f4f898df23b1476", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["30588dc3c889c31e29097baf3e26f83c41f3fc01"], "nameRev": "927008bdc89701555f2f8f900f4f898df23b1476 tags/2.2.0.RELEASE~4", "commitMessage": "Ensure session cookie's expires directive uses GMT format\n\nResolves: #1514\n", "commitDateTime": "2019-10-07 21:54:00", "authoredDateTime": "2019-10-07 21:54:00", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/DefaultCookieSerializer.java", "insertions": 8, "deletions": 3, "lines": 11}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/DefaultCookieSerializerTests.java", "insertions": 41, "deletions": 75, "lines": 116}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultCookieSerializer.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer.setClock(java.time.Clock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer.writeCookieValue(org.springframework.session.web.http.CookieValue)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultCookieSerializerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.setup()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesSingle(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesSingleAndInvalidName(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesMulti(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesMultiCustomSessionCookieName(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValue(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValueAndJvmRoute(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValueAndNotNullCookie(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookie(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieDomainNamePattern()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieJvmRoute(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieJvmRoute(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieJvmRouteRouteMissing(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieJvmRouteOnlyRoute(boolean)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.CookiePreservingMockHttpServletResponse", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieCookieMaxAgeDefault()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieCookieMaxAgeExplicit()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieCookieMaxAgeExplicitEmptyCookie()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieCookieMaxAgeExplicitCookieValue()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "f0aed6b8b8ed0fa3af06b182ae6c0db8a09ccd76", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["4a3f0d5f346eb47f94ef8e19341aafa9634b51fb"], "nameRev": "f0aed6b8b8ed0fa3af06b182ae6c0db8a09ccd76 tags/2.1.10.RELEASE~8", "commitMessage": "Ensure session cookie's expires directive uses GMT format\n\nResolves: #1514\n", "commitDateTime": "2019-10-07 22:51:10", "authoredDateTime": "2019-10-07 21:54:00", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/DefaultCookieSerializer.java", "insertions": 9, "deletions": 2, "lines": 11}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/DefaultCookieSerializerTests.java", "insertions": 30, "deletions": 5, "lines": 35}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultCookieSerializer.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer.setClock(java.time.Clock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer.writeCookieValue(org.springframework.session.web.http.CookieValue)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultCookieSerializerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.setup()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieDomainNamePattern()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.CookiePreservingMockHttpServletResponse", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieCookieMaxAgeDefault()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieCookieMaxAgeExplicit()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieCookieMaxAgeExplicitEmptyCookie()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.writeCookieCookieMaxAgeExplicitCookieValue()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "085554f56b0ee7c96d45a49daa1c664db5fb1184", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["45b3b35db704fca168f27ad631abffae3ce71b0b"], "nameRev": "085554f56b0ee7c96d45a49daa1c664db5fb1184 tags/2.2.0.RELEASE~1", "commitMessage": "Polish DefaultCookieSerializer\n\nSee: #1514\n", "commitDateTime": "2019-10-09 08:58:42", "authoredDateTime": "2019-10-09 08:58:42", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/DefaultCookieSerializer.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultCookieSerializer.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer.writeCookieValue(org.springframework.session.web.http.CookieValue)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "5ebe699d7c47a0802222e8acb259a5a570d0b26d", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["f6a670d78e273d3d788844022fd05b0759782f5d"], "nameRev": "5ebe699d7c47a0802222e8acb259a5a570d0b26d tags/2.1.10.RELEASE~5", "commitMessage": "Polish DefaultCookieSerializer\n\nSee: #1514\n", "commitDateTime": "2019-10-09 21:06:45", "authoredDateTime": "2019-10-09 08:58:42", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/DefaultCookieSerializer.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultCookieSerializer.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer.writeCookieValue(org.springframework.session.web.http.CookieValue)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["927008bdc89701555f2f8f900f4f898df23b1476", "085554f56b0ee7c96d45a49daa1c664db5fb1184"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 11, "deletions": 6, "lines": 17, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 3, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.DefaultCookieSerializer.writeCookieValue(org.springframework.session.web.http.CookieValue)", "org.springframework.session.web.http.DefaultCookieSerializer.setClock(java.time.Clock)", "org.springframework.session.web.http.DefaultCookieSerializer"]}, {"title": "OnCommittedResponseWrapper fails on static resources served by Tomcat 8.5", "body": "Backport of gh-1489", "url": "https://github.com/spring-projects/spring-session/issues/1490", "user": "spring-issuemaster", "labels": ["in: core", "type: backport", "type: bug"], "created": "2019-08-21 16:47:07", "closed": "2019-08-21 16:53:26", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "OnCommittedResponseWrapper fails on static resources served by Tomcat 8.5", "body": "Related to https://github.com/spring-projects/spring-security/issues/7261", "url": "https://github.com/spring-projects/spring-session/issues/1489", "user": "jzheaux", "labels": ["in: core", "status: backported", "type: bug"], "created": "2019-08-20 18:04:31", "closed": "2019-08-20 19:32:01", "commits": {"bcdd05a0bc7fc565c3f19399dc616cc2519f66fc": {"commitGHEventType": "closed", "commitUser": "jzheaux"}, "51252a55e68e486801473c5f9a4d3b1292971174": {"commitGHEventType": "referenced", "commitUser": "vpavic"}, "8f13a7b3565789e22374cd2530e2e054e336eea0": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bcdd05a0bc7fc565c3f19399dc616cc2519f66fc", "commitGHEventType": "closed", "commitUser": "jzheaux", "commitParents": ["5d26ab4df4bea79f8c829c8d11157107862a3b32"], "nameRev": "bcdd05a0bc7fc565c3f19399dc616cc2519f66fc tags/2.2.0.M4~10", "commitMessage": "Add OnCommittedResponseWrapper.setContentLengthLong\n\nAdd setContentLengthLong tracking to OnCommittedResponseWrapper in\norder to detect commits on servlets that use setContentLengthLong to\nannounce the entity size they are about to write (as used in the\nApache Tomcat's DefaultServlet).\n\nFixes gh-1489\n", "commitDateTime": "2019-08-20 13:29:52", "authoredDateTime": "2019-08-20 13:29:52", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/OnCommittedResponseWrapper.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/OnCommittedResponseWrapperTests.java", "insertions": 11, "deletions": 0, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OnCommittedResponseWrapper.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapper.setContentLengthLong(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OnCommittedResponseWrapperTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapperTests.contentLengthLongOutputStreamWriteStringCommits()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "51252a55e68e486801473c5f9a4d3b1292971174", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["4487b07bb1e5ff73d675d7e4e8e012c9b0be0265"], "nameRev": "51252a55e68e486801473c5f9a4d3b1292971174 tags/2.1.9.RELEASE~10", "commitMessage": "Add OnCommittedResponseWrapper.setContentLengthLong\n\nAdd setContentLengthLong tracking to OnCommittedResponseWrapper in\norder to detect commits on servlets that use setContentLengthLong to\nannounce the entity size they are about to write (as used in the\nApache Tomcat's DefaultServlet).\n\nFixes gh-1489\n", "commitDateTime": "2019-08-21 18:53:08", "authoredDateTime": "2019-08-20 13:29:52", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/OnCommittedResponseWrapper.java", "insertions": 7, "deletions": 1, "lines": 8}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/OnCommittedResponseWrapperTests.java", "insertions": 12, "deletions": 1, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OnCommittedResponseWrapper.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapper.setContentLengthLong(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OnCommittedResponseWrapperTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapperTests.contentLengthLongOutputStreamWriteStringCommits()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8f13a7b3565789e22374cd2530e2e054e336eea0", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["51252a55e68e486801473c5f9a4d3b1292971174"], "nameRev": "8f13a7b3565789e22374cd2530e2e054e336eea0 tags/2.1.9.RELEASE~9", "commitMessage": "Fix test visibility\n\nSee: #1489\n", "commitDateTime": "2019-08-21 18:56:38", "authoredDateTime": "2019-08-21 18:56:38", "commitGitStats": [{"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/OnCommittedResponseWrapperTests.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OnCommittedResponseWrapperTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapperTests.contentLengthLongOutputStreamWriteStringCommits()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bcdd05a0bc7fc565c3f19399dc616cc2519f66fc", "8f13a7b3565789e22374cd2530e2e054e336eea0"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 0, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.OnCommittedResponseWrapper.setContentLengthLong(long)"]}, {"title": "Spring Session does not wrap HttpSession on Error Dispatch on Jetty", "body": "Backport of gh-1308", "url": "https://github.com/spring-projects/spring-session/issues/1451", "user": "spring-issuemaster", "labels": ["in: core", "type: backport", "type: bug"], "created": "2019-06-11 06:20:16", "closed": "2019-06-11 06:47:04", "commits": {"7d71aa5d003b8f8b008614d4851af394e59159a5": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7d71aa5d003b8f8b008614d4851af394e59159a5", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["bee9c7c2e2879597a67e98c647a7cfe6d84e6c80"], "nameRev": "7d71aa5d003b8f8b008614d4851af394e59159a5 tags/2.1.7.RELEASE~6", "commitMessage": "Separate \"filtered\" attribute for ERROR dispatch\n\nResolves: #1451\nSee: spring-projects/spring-framework#22989\n", "commitDateTime": "2019-06-11 08:34:04", "authoredDateTime": "2019-06-10 08:23:38", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/OncePerRequestFilter.java", "insertions": 19, "deletions": 4, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OncePerRequestFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)", "TOT": 8, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.updateForErrorDispatch(java.lang.String,javax.servlet.ServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Remove immediate flush mode support for reactive Redis sessions", "body": "The support for immediate flush mode in `ReactiveRedisOperationsSessionRepository` is buggy due to unhandled `Mono` instance in `RedisSession#flushImmediateIfNecessary` which in turn is a limitation of both our `Session` API and Spring WebFlux's `WebSession` since they don't offer capabilities of setting attribute in a reactive manner.", "url": "https://github.com/spring-projects/spring-session/issues/1441", "user": "vpavic", "labels": ["in: redis", "type: bug"], "created": "2019-06-02 17:18:35", "closed": "2019-06-20 08:44:37", "commits": {"aab9b39a6ba5f76182c0a324d4a16dd53a74b980": {"commitGHEventType": "closed", "commitUser": "vpavic"}, "099be441dd7cd1f782b7080242d7254c70cdbff3": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "aab9b39a6ba5f76182c0a324d4a16dd53a74b980", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["090d882f98cb33e7ba409a592f0bca10fcdd2766"], "nameRev": "aab9b39a6ba5f76182c0a324d4a16dd53a74b980 tags/2.2.0.M3~31", "commitMessage": "Remove immediate flush mode support for reactive Redis sessions\n\nResolves: #1441\n", "commitDateTime": "2019-06-20 10:44:22", "authoredDateTime": "2019-06-20 10:44:22", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 6, "deletions": 19, "lines": 25}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/server/EnableRedisWebSession.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/server/RedisWebSessionConfiguration.java", "insertions": 1, "deletions": 5, "lines": 6}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryTests.java", "insertions": 0, "deletions": 13, "lines": 13}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/config/annotation/web/server/RedisWebSessionConfigurationTests.java", "insertions": 0, "deletions": 16, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setAttribute(java.lang.String,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.removeAttribute(java.lang.String)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setLastAccessedTime(java.time.Instant)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setMaxInactiveInterval(java.time.Duration)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.setRedisFlushMode(org.springframework.session.data.redis.RedisFlushMode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.putAndFlush(java.lang.String,java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "EnableRedisWebSession.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.redisFlushMode()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisWebSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.sessionRepository()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.setRedisFlushMode(org.springframework.session.data.redis.RedisFlushMode)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.setImportMetadata(org.springframework.core.type.AnnotationMetadata)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.customRedisFlushMode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.nullRedisFlushMode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedisWebSessionConfigurationTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfigurationTests.customFlushMode()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfigurationTests.CustomFlushModeConfig", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "099be441dd7cd1f782b7080242d7254c70cdbff3", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["17d029d34d4859633c40d40ab9d682c200193421"], "nameRev": "099be441dd7cd1f782b7080242d7254c70cdbff3 tags/2.2.0.M3~29", "commitMessage": "Fix copyright dates\n\nSee: #1441\n", "commitDateTime": "2019-06-21 15:52:26", "authoredDateTime": "2019-06-21 11:52:21", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/server/EnableRedisWebSession.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnableRedisWebSession.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["aab9b39a6ba5f76182c0a324d4a16dd53a74b980", "099be441dd7cd1f782b7080242d7254c70cdbff3"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 10, "deletions": 25, "lines": 35, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 19.0, "UPD": 4.0, "INS": 3.0, "MOV": 3.0, "DEL": 9.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 14}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config", "spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.putAndFlush(java.lang.String,java.lang.Object)", "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.sessionRepository()", "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.setRedisFlushMode(org.springframework.session.data.redis.RedisFlushMode)", "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setAttribute(java.lang.String,java.lang.Object)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.setRedisFlushMode(org.springframework.session.data.redis.RedisFlushMode)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.removeAttribute(java.lang.String)", "org.springframework.session.data.redis.config.annotation.web.server.redisFlushMode()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setLastAccessedTime(java.time.Instant)", "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.setImportMetadata(org.springframework.core.type.AnnotationMetadata)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setMaxInactiveInterval(java.time.Duration)"]}, {"title": "ReactiveRedisOperationsSessionRepository causes IllegalStateException on logout", "body": "Backport of gh-1399", "url": "https://github.com/spring-projects/spring-session/issues/1440", "user": "spring-issuemaster", "labels": ["in: redis", "type: backport", "type: bug"], "created": "2019-06-02 17:04:23", "closed": "2019-06-02 17:35:54", "commits": {"49ebaa5cb7a0cfde33cab8b478e0c0cc96db31a1": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "49ebaa5cb7a0cfde33cab8b478e0c0cc96db31a1", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["a48edd5e71ac8a1b24ce29ca6dbbe4251bbf75a3"], "nameRev": "49ebaa5cb7a0cfde33cab8b478e0c0cc96db31a1 tags/2.1.7.RELEASE~11", "commitMessage": "Save reactive Redis session on subscribe\n\nThis commit ensures ReactiveRedisOperationsSessionRepository#save does work only after subscribe. Without this, multiple invocations of #save over the course of same request can lead to race condition situations.\n\nResolves: #1440\n", "commitDateTime": "2019-06-02 19:21:49", "authoredDateTime": "2019-05-03 21:00:04", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryITests.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 15, "deletions": 19, "lines": 34}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryTests.java", "insertions": 42, "deletions": 44, "lines": 86}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryITests.saveMultipleTimes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "TOT": 12, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.save()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveDelta()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveLastAccessChanged()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveSetAttribute()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveRemoveAttribute()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveNewSession()", "TOT": 68, "UPD": 25, "INS": 15, "MOV": 23, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["49ebaa5cb7a0cfde33cab8b478e0c0cc96db31a1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 19, "lines": 34, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 16, "UPD": 1, "INS": 6, "MOV": 5, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveDelta()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.save()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()"]}, {"title": "New session is created on unavailable pages (404)", "body": "### Summary\r\n\r\nI'm using sessions with redis enabled which all works great.\r\nI started to notice that my client started losing sessions when accessing to 404 pages.\r\nThere are different sessions created with the same session-name and thus my client is having an invalid session when going back to a valid url.\r\n\r\nI have a custom ErrorController which simply displays any error in the format needed for my application.\r\n\r\n### Actual Behavior\r\n\r\nMy sessions look like this when accessing any valid URL:\r\nYmFkZGRlMDMtZjdlMi00NzhjLWEzMWEtY2E3NmViNGU4MGUz\r\n\r\nThis is what I get when accessing any unavailable URL:\r\nnode0c0u0x7la04eb1h2057sm64t6b2.node0\r\n\r\nLooks like the embedded server is overwriting sessions all of a sudden?\r\n\r\n### Expected Behavior\r\n\r\nSessions should be the same on invalid pages as well.\r\n\r\n### Configuration\r\n\r\nUsing Spring-Boot 2.1.4.\r\nRedis enabled.\r\nJetty embedded server. (Tomcat is having the same issue)\r\n\r\n", "url": "https://github.com/spring-projects/spring-session/issues/1430", "user": "heyarny", "labels": ["in: core", "status: duplicate", "type: bug"], "created": "2019-05-04 15:20:09", "closed": "2019-05-17 21:13:43", "commits": {}, "ttf": 13.000277777777777, "commitsDetails": []}, {"title": "Reactive Redis change session id can override changes to the session", "body": "Backport of gh-1428", "url": "https://github.com/spring-projects/spring-session/issues/1429", "user": "rwinch", "labels": ["in: redis", "type: backport", "type: bug"], "created": "2019-05-16 20:52:38", "closed": "2019-05-16 20:53:31", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Reactive Redis change session id can override changes to the session", "body": "Transferred from https://github.com/spring-projects/spring-boot/issues/16877 since I don't believe it's a Spring Boot issue.\r\n\r\n/cc @wangxing-git\r\n\r\n### Spring boot version:\r\n`2.1.4.RELEASE`\r\n### pom.xml\r\n```\r\n<dependencies>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-data-redis-reactive</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-webflux</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.session</groupId>\r\n            <artifactId>spring-session-data-redis</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-security</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.commons</groupId>\r\n            <artifactId>commons-lang3</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>com.google.guava</groupId>\r\n            <artifactId>guava</artifactId>\r\n            <version>27.1-jre</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.apache.commons</groupId>\r\n            <artifactId>commons-pool2</artifactId>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-devtools</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-configuration-processor</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <optional>true</optional>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.boot</groupId>\r\n            <artifactId>spring-boot-starter-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>io.projectreactor</groupId>\r\n            <artifactId>reactor-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.springframework.security</groupId>\r\n            <artifactId>spring-security-test</artifactId>\r\n            <scope>test</scope>\r\n        </dependency>\r\n    </dependencies>\r\n```\r\n### RedisConfig.java\r\n```\r\npackage com.example.webfluxsessiondemo.config;\r\n\r\nimport io.lettuce.core.resource.DefaultClientResources;\r\nimport org.springframework.beans.BeansException;\r\nimport org.springframework.beans.factory.config.BeanPostProcessor;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;\r\n\r\n@Configuration\r\npublic class RedisConfig {\r\n\r\n    @Bean\r\n    public BeanPostProcessor lettuceConnectionFactoryObjectPostProcessor() {\r\n        return new BeanPostProcessor() {\r\n            @Override\r\n            public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {\r\n                if (bean instanceof LettuceConnectionFactory) {\r\n                    LettuceConnectionFactory lettuceConnectionFactory = ((LettuceConnectionFactory) bean);\r\n                    lettuceConnectionFactory.setShareNativeConnection(false);\r\n                }\r\n                return bean;\r\n            }\r\n        };\r\n    }\r\n\r\n    @Bean(destroyMethod = \"shutdown\")\r\n    public DefaultClientResources lettuceClientResources() {\r\n        return DefaultClientResources.builder()\r\n                .ioThreadPoolSize(20)\r\n                .computationThreadPoolSize(20)\r\n                .build();\r\n    }\r\n\r\n}\r\n```\r\n### SpringSessionConfig.java\r\n```\r\npackage com.example.webfluxsessiondemo.config;\r\n\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.session.data.redis.RedisFlushMode;\r\nimport org.springframework.session.data.redis.config.annotation.web.server.EnableRedisWebSession;\r\n\r\n@Configuration\r\n@EnableRedisWebSession(redisFlushMode = RedisFlushMode.IMMEDIATE)\r\npublic class SpringSessionConfig {\r\n}\r\n```\r\n### SpringSecurityConfig.java\r\n```\r\npackage com.example.webfluxsessiondemo.config;\r\n\r\nimport com.example.webfluxsessiondemo.security.TestReactiveUserDetailsService;\r\nimport org.springframework.context.annotation.Bean;\r\nimport org.springframework.context.annotation.Configuration;\r\nimport org.springframework.security.authentication.UserDetailsRepositoryReactiveAuthenticationManager;\r\nimport org.springframework.security.config.web.server.ServerHttpSecurity;\r\nimport org.springframework.security.core.userdetails.ReactiveUserDetailsService;\r\nimport org.springframework.security.crypto.factory.PasswordEncoderFactories;\r\nimport org.springframework.security.crypto.password.PasswordEncoder;\r\nimport org.springframework.security.web.server.SecurityWebFilterChain;\r\nimport org.springframework.security.web.server.context.WebSessionServerSecurityContextRepository;\r\n\r\n@Configuration\r\npublic class SpringSecurityConfig {\r\n\r\n    @Bean\r\n    public ReactiveUserDetailsService getUserDetailsService() {\r\n        return new TestReactiveUserDetailsService();\r\n    }\r\n\r\n    @Bean\r\n    public PasswordEncoder passwordEncoder() {\r\n        return PasswordEncoderFactories.createDelegatingPasswordEncoder();\r\n    }\r\n\r\n    @Bean\r\n    public SecurityWebFilterChain securityWebFilterChain(final ServerHttpSecurity http) {\r\n        final SecurityWebFilterChain securityWebFilterChain = http\r\n                .authorizeExchange()\r\n                .pathMatchers(\"/login\").permitAll()\r\n                .pathMatchers(\"/user/me\").permitAll()\r\n                .anyExchange().authenticated()\r\n                .and()\r\n                .formLogin()\r\n                .authenticationManager(userDetailsRepositoryReactiveAuthenticationManager())\r\n                .securityContextRepository(webSessionServerSecurityContextRepository())\r\n                .and()\r\n                .csrf().disable()\r\n                .build();\r\n        return securityWebFilterChain;\r\n    }\r\n\r\n    @Bean\r\n    public WebSessionServerSecurityContextRepository webSessionServerSecurityContextRepository() {\r\n        return new WebSessionServerSecurityContextRepository();\r\n    }\r\n\r\n    @Bean\r\n    public UserDetailsRepositoryReactiveAuthenticationManager userDetailsRepositoryReactiveAuthenticationManager(){\r\n        return new UserDetailsRepositoryReactiveAuthenticationManager(getUserDetailsService());\r\n    }\r\n\r\n}\r\n```\r\nWhen I reset the user information in the session after updating the user information, sometimes the cache is not updated.\r\n### Reproducible example\r\n[webflux-session-demo](https://github.com/wangxing-git/webflux-session-demo)\r\n`Note: For security, I hide the redis host and password in the example.`\r\nRun test `WebfluxSessionDemoApplicationTests`\r\n```\r\n2019-05-16 10:03:37.039  INFO 1920 --- [ctor-http-nio-6] c.e.w.s.TestReactiveUserDetailsService   : loadUserByUsername:test\r\n2019-05-16 10:03:37.249  INFO 1920 --- [ctor-http-nio-6] c.e.w.s.TestReactiveUserDetailsService   : loadUserByUsername:test\r\n2019-05-16 10:03:37.451  INFO 1920 --- [ctor-http-nio-6] c.e.w.s.TestReactiveUserDetailsService   : loadUserByUsername:test\r\n2019-05-16 10:03:37.675  INFO 1920 --- [ctor-http-nio-6] c.e.w.s.TestReactiveUserDetailsService   : loadUserByUsername:test\r\n2019-05-16 10:03:37.874  INFO 1920 --- [ctor-http-nio-6] c.e.w.s.TestReactiveUserDetailsService   : loadUserByUsername:test\r\n\r\njava.lang.AssertionError: \r\nExpected: hasProperty(\"nickName\", \"6692778561368372881\")\r\n     but: property 'nickName' was \"-8326156080247474824\"\r\n\r\n> GET http://localhost:53988/user/me\r\n> Accept: [application/json;charset=UTF-8]\r\n> WebTestClient-Request-Id: [1]\r\n\r\nNo content\r\n\r\n< 200 OK OK\r\n< Content-Type: [application/json;charset=UTF-8]\r\n< Content-Length: [97]\r\n< Cache-Control: [no-cache, no-store, max-age=0, must-revalidate]\r\n< Pragma: [no-cache]\r\n< Expires: [0]\r\n< X-Content-Type-Options: [nosniff]\r\n< X-Frame-Options: [DENY]\r\n< X-XSS-Protection: [1 ; mode=block]\r\n< Referrer-Policy: [no-referrer]\r\n\r\n{\"id\":\"3ac7b489-8048-49f3-8c18-5c7274a3828f\",\"userName\":\"test\",\"nickName\":\"-8326156080247474824\"}\r\n\r\n\r\n\tat org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:200)\r\n\tat org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec.value(DefaultWebTestClient.java:392)\r\n\tat com.example.webfluxsessiondemo.WebfluxSessionDemoApplicationTests.contextLoads(WebfluxSessionDemoApplicationTests.java:115)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: java.lang.AssertionError: \r\nExpected: hasProperty(\"nickName\", \"6692778561368372881\")\r\n     but: property 'nickName' was \"-8326156080247474824\"\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:20)\r\n\tat org.hamcrest.MatcherAssert.assertThat(MatcherAssert.java:8)\r\n\tat org.springframework.test.web.reactive.server.DefaultWebTestClient$DefaultBodySpec.lambda$value$1(DefaultWebTestClient.java:392)\r\n\tat org.springframework.test.web.reactive.server.ExchangeResult.assertWithDiagnostics(ExchangeResult.java:197)\r\n\t... 33 more\r\n```\r\nAnd it is normal after removing `RedisConfig`", "url": "https://github.com/spring-projects/spring-session/issues/1428", "user": "philwebb", "labels": ["in: redis", "status: backported", "type: bug"], "created": "2019-05-16 03:45:17", "closed": "2019-05-16 20:52:54", "commits": {"d94d58d96b37a25045ef8600a5100e71673da61d": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "17ddfc0fa875b78d8152ba37740b7184d64a1f85": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d94d58d96b37a25045ef8600a5100e71673da61d", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["cc41ea527109e6af3bc080f0de3430f97eb94066"], "nameRev": "d94d58d96b37a25045ef8600a5100e71673da61d tags/2.2.0.M2~32", "commitMessage": "Redis save uses then\n\nWe need to ensure that the session id is changed before we save the\nchanges. Otherwise the rename of the session id will override the\nchanges we just made.\n\nFixes: gh-1428\n", "commitDateTime": "2019-05-16 15:51:51", "authoredDateTime": "2019-05-16 15:49:24", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "17ddfc0fa875b78d8152ba37740b7184d64a1f85", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["f2f9562a0178d6b78e62bf141930082318d24937"], "nameRev": "17ddfc0fa875b78d8152ba37740b7184d64a1f85 tags/2.1.7.RELEASE~13", "commitMessage": "Redis save uses then\n\nWe need to ensure that the session id is changed before we save the\nchanges. Otherwise the rename of the session id will override the\nchanges we just made.\n\nFixes: gh-1428\n", "commitDateTime": "2019-05-16 15:49:24", "authoredDateTime": "2019-05-16 15:49:24", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d94d58d96b37a25045ef8600a5100e71673da61d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)"]}, {"title": "RedisOperationsSessionRepository with immediate flush mode doesn't persist custom maxInactiveInterval on create", "body": "Backport of #1409.", "url": "https://github.com/spring-projects/spring-session/issues/1423", "user": "vpavic", "labels": ["in: redis", "type: backport", "type: bug"], "created": "2019-05-13 17:09:12", "closed": "2019-05-13 17:17:32", "commits": {"b1d53874e47eb89add79211a9282a139b02059ee": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "b1d53874e47eb89add79211a9282a139b02059ee", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["cc2a75b668483a3bbf39de1b4d597aa20f3e747c"], "nameRev": "b1d53874e47eb89add79211a9282a139b02059ee tags/2.1.6.RELEASE~1", "commitMessage": "Ensure Redis session with immediate flush respects defaultMaxInactiveInterval\n\nResolves: #1423\n", "commitDateTime": "2019-05-13 19:09:45", "authoredDateTime": "2019-05-13 19:06:35", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 44, "deletions": 34, "lines": 78}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 20, "deletions": 2, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.save(org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.createSession()", "TOT": 10, "UPD": 4, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(java.lang.String,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveDelta()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.save()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.flushModeImmediateCreateWithCustomMaxInactiveInterval()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.redisSessionGetAttributes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b1d53874e47eb89add79211a9282a139b02059ee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 44, "deletions": 34, "lines": 78, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 28, "UPD": 7, "INS": 7, "MOV": 10, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveDelta()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.save()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.save(org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.createSession()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(java.lang.String,boolean)"]}, {"title": "JdbcOperationsSessionRepository lazy deserialization broken", "body": "Backport of #1411.", "url": "https://github.com/spring-projects/spring-session/issues/1412", "user": "vpavic", "labels": ["in: jdbc", "type: backport", "type: bug"], "created": "2019-05-06 20:58:52", "closed": "2019-05-06 21:44:58", "commits": {"14be439da08e225cf031d55d297a6ed1edbf9cc2": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "14be439da08e225cf031d55d297a6ed1edbf9cc2", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["2631ddc44643ca8109ccf676fb0651b89593351b"], "nameRev": "14be439da08e225cf031d55d297a6ed1edbf9cc2 tags/2.1.6.RELEASE~11", "commitMessage": "Fix JdbcOperationsSessionRepository lazy deserialization\n\nResolves: #1412\n", "commitDateTime": "2019-05-06 23:38:47", "authoredDateTime": "2019-05-06 23:37:08", "commitGitStats": [{"filePath": "spring-session-jdbc/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 7, "deletions": 11, "lines": 18}, {"filePath": "spring-session-jdbc/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 19, "deletions": 13, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.sessionFromStoreResolvesAttributesLazily()", "TOT": 14, "UPD": 3, "INS": 5, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.setObjectAsBlob(java.sql.PreparedStatement,int,java.lang.Object)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getBlobAsObject(java.sql.ResultSet,java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.updateSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor.extractData(java.sql.ResultSet)", "TOT": 6, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).5.setValues(java.sql.PreparedStatement,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.updateSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).6.setValues(java.sql.PreparedStatement,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getLobHandler()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["14be439da08e225cf031d55d297a6ed1edbf9cc2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 13, "lines": 32, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 26, "UPD": 12, "INS": 2, "MOV": 11, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-jdbc/src/main/java/org/springframework/session/jdbc"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.updateSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).6.setValues(java.sql.PreparedStatement,int)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.setObjectAsBlob(java.sql.PreparedStatement,int,java.lang.Object)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).5.setValues(java.sql.PreparedStatement,int)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.updateSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getBlobAsObject(java.sql.ResultSet,java.lang.String)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor.extractData(java.sql.ResultSet)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getLobHandler()"]}, {"title": "JdbcOperationsSessionRepository lazy deserialization broken", "body": "The lazy loading work done for #1133 was undone by @vpavic's polish commit b61937def7b9b8924e07f\r\n\r\nThe key problem is that this working code:\r\n```\r\nbyte[] bytes = lobToBytes(rs, \"ATTRIBUTE_BYTES\");\r\nsession.delegate.setAttribute(attributeName, lazily(() -> deserialize(bytes)));\r\n```\r\nwas changed to:\r\n```\r\nObject attributeValue = getBlobAsObject(rs, \"ATTRIBUTE_BYTES\");\r\nsession.delegate.setAttribute(attributeName, lazily(() -> attributeValue));\r\n```\r\n\r\nNote that the actual work of deserializing occurs in `getBlobAsObject` which is done outside of `lazily`. Also note that nothing is done in `lazily` - it just returns a value.\r\n\r\n`getBlobAsObject` must be separated into two methods, one to convert the LOB to bytes and that must be done outside of the lazily, and one to deserialize the bytes to an object which must be done in the lazily.\r\n\r\nCan b61937def7b9b8924e07f please be reverted?", "url": "https://github.com/spring-projects/spring-session/issues/1411", "user": "candrews", "labels": ["in: jdbc", "status: backported", "type: bug"], "created": "2019-05-06 16:01:21", "closed": "2019-05-06 21:38:01", "commits": {"83e0f4f24a17ad8e48848efe156857aabceff118": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "83e0f4f24a17ad8e48848efe156857aabceff118", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["397d4e5ca11954072187ac701ab0379505029f7d"], "nameRev": "83e0f4f24a17ad8e48848efe156857aabceff118 tags/2.2.0.M2~42", "commitMessage": "Fix JdbcOperationsSessionRepository lazy deserialization\n\nResolves: #1411\n", "commitDateTime": "2019-05-06 23:37:08", "authoredDateTime": "2019-05-06 23:37:08", "commitGitStats": [{"filePath": "spring-session-jdbc/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 7, "deletions": 11, "lines": 18}, {"filePath": "spring-session-jdbc/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 19, "deletions": 13, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.sessionFromStoreResolvesAttributesLazily()", "TOT": 14, "UPD": 3, "INS": 5, "MOV": 5, "DEL": 1}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.setObjectAsBlob(java.sql.PreparedStatement,int,java.lang.Object)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getBlobAsObject(java.sql.ResultSet,java.lang.String)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.updateSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor.extractData(java.sql.ResultSet)", "TOT": 6, "UPD": 3, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).5.setValues(java.sql.PreparedStatement,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.updateSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).6.setValues(java.sql.PreparedStatement,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getLobHandler()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["83e0f4f24a17ad8e48848efe156857aabceff118"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 13, "lines": 32, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 26, "UPD": 12, "INS": 2, "MOV": 11, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-jdbc/src/main/java/org/springframework/session/jdbc"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.updateSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).6.setValues(java.sql.PreparedStatement,int)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.setObjectAsBlob(java.sql.PreparedStatement,int,java.lang.Object)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).5.setValues(java.sql.PreparedStatement,int)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.updateSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getBlobAsObject(java.sql.ResultSet,java.lang.String)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor.extractData(java.sql.ResultSet)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getLobHandler()"]}, {"title": "RedisOperationsSessionRepository with immediate flush mode doesn't persist custom maxInactiveInterval on create", "body": "This is due to `RedisOperationsSessionRepository.RedisSession#flushImmediateIfNecessary` being invoked in `RedisSession` constructor while custom `maxInactiveInterval` is applied afterwards in `RedisOperationsSessionRepository#createSession`.", "url": "https://github.com/spring-projects/spring-session/issues/1409", "user": "vpavic", "labels": ["in: redis", "status: backported", "type: bug"], "created": "2019-05-01 21:12:49", "closed": "2019-05-13 17:08:33", "commits": {"cc41ea527109e6af3bc080f0de3430f97eb94066": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "cc41ea527109e6af3bc080f0de3430f97eb94066", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["e6a88ccf4cfad198763e26ceb141e0e0dd6cc5eb"], "nameRev": "cc41ea527109e6af3bc080f0de3430f97eb94066 tags/2.2.0.M2~33", "commitMessage": "Ensure Redis session with immediate flush respects defaultMaxInactiveInterval\n\nResolves: #1409\n", "commitDateTime": "2019-05-13 19:08:03", "authoredDateTime": "2019-05-13 19:06:35", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 44, "deletions": 34, "lines": 78}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 20, "deletions": 2, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.save(org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.createSession()", "TOT": 10, "UPD": 4, "INS": 2, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(java.lang.String,boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveDelta()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.save()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.flushModeImmediateCreateWithCustomMaxInactiveInterval()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.redisSessionGetAttributes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cc41ea527109e6af3bc080f0de3430f97eb94066"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 44, "deletions": 34, "lines": 78, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 28, "UPD": 7, "INS": 7, "MOV": 10, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveDelta()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.save()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.save(org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.createSession()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSession(java.lang.String,boolean)"]}, {"title": "ReactiveRedisOperationsSessionRepository causes IllegalStateException on logout", "body": "While working on a Spring WebFlux application secured via OAuth2 (Spring Boot 2, Spring Cloud Gateway, Spring Security, Spring Session Redis) I observed users receiving a 500 status code caused by an IllegalStateEx raised by `ReactiveRedisOperationsSessionRepository#save`.\r\n\r\nImho for `spring-data-redis-2.2.0.M2` the issue is that `ReactiveRedisOperationsSessionRepository#saveDelta` is called two times (WebSessionServerCsrfTokenRepository and WebSessionServerSecurityContextRepository) and both receive a reference to `this.delta` with entries at creation time, on execution time when the first finishes `this.delta` is cleared and the second call fails due to an empty map. \r\n\r\n### Simple sample:\r\nhttps://github.com/AndreasKl/issue-in-spring-session-redis/tree/master\r\n\r\nWhen I bump the version to *Spring Boot 2.1.3* a slightly different behaviour with an additional exception occurs.\r\n\r\n### Steps to reproduce:\r\n* Start the application\r\n* Navigate to http://localhost:8080/login\r\n* Login with user: user pw: 123456\r\n* Navigate to http://localhost:8080/logout\r\n* Press \"Log Out\"\r\n* Observe the error page and the following stacktrace in your log:\r\n\r\n```\r\njava.lang.IllegalStateException: Session was invalidated\r\n\tat org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.lambda$save$2(ReactiveRedisOperationsSessionRepository.java:159) ~[spring-session-data-redis-2.1.3.RELEASE.jar:2.1.3.RELEASE]\r\n\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:123) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:73) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onNext(MonoFlatMapMany.java:238) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapImmediate.innerNext(FluxConcatMap.java:275) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxConcatMap$ConcatMapInner.onNext(FluxConcatMap.java:849) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:121) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.FluxOnAssembly$OnAssemblySubscriber.onNext(FluxOnAssembly.java:353) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:76) ~[reactor-core-3.2.5.RELEASE.jar:3.2.5.RELEASE]\r\n\tat io.lettuce.core.RedisPublisher$RedisSubscription.onNext(RedisPublisher.java:270) ~[lettuce-core-5.1.3.RELEASE.jar:na]\r\n\tat io.lettuce.core.RedisPublisher$SubscriptionCommand.complete(RedisPublisher.java:754) ~[lettuce-core-5.1.3.RELEASE.jar:na]\r\n\tat io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:646) ~[lettuce-core-5.1.3.RELEASE.jar:na]\r\n\tat io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:604) ~[lettuce-core-5.1.3.RELEASE.jar:na]\r\n\tat io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:556) ~[lettuce-core-5.1.3.RELEASE.jar:na]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) ~[netty-transport-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:799) ~[netty-transport-native-epoll-4.1.31.Final-linux-x86_64.jar:4.1.31.Final]\r\n\tat io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:433) ~[netty-transport-native-epoll-4.1.31.Final-linux-x86_64.jar:4.1.31.Final]\r\n\tat io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:330) ~[netty-transport-native-epoll-4.1.31.Final-linux-x86_64.jar:4.1.31.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) ~[netty-common-4.1.31.Final.jar:4.1.31.Final]\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.31.Final.jar:4.1.31.Final]\r\n\tat java.base/java.lang.Thread.run(Thread.java:834) ~[na:na]\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \r\nAssembly trace from producer [reactor.core.publisher.MonoFlatMap] :\r\n\treactor.core.publisher.Mono.flatMap(Mono.java:2491)\r\n\torg.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(ReactiveRedisOperationsSessionRepository.java:159)\r\nError has been observed by the following operator(s):\r\n\t|_\tMono.flatMap \u21e2 org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(ReactiveRedisOperationsSessionRepository.java:159)\r\n\t|_\tFlux.concat \u21e2 org.springframework.http.server.reactive.AbstractServerHttpResponse.doCommit(AbstractServerHttpResponse.java:234)\r\n\t|_\tFlux.then \u21e2 org.springframework.http.server.reactive.AbstractServerHttpResponse.doCommit(AbstractServerHttpResponse.java:234)\r\n\t|_\tMono.doOnError \u21e2 org.springframework.http.server.reactive.AbstractServerHttpResponse.writeWith(AbstractServerHttpResponse.java:179)\r\n\t|_\tMono.flatMap \u21e2 org.springframework.http.codec.EncoderHttpMessageWriter.write(EncoderHttpMessageWriter.java:126)\r\n\t|_\tMono.flatMap \u21e2 org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler.handle(AbstractErrorWebExceptionHandler.java:247)\r\n\t|_\tMono.onErrorResume \u21e2 org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:68)\r\n\t|_\tMono.error \u21e2 org.springframework.web.server.handler.ResponseStatusExceptionHandler.handle(ResponseStatusExceptionHandler.java:67)\r\n\t|_\tMono.onErrorResume \u21e2 org.springframework.web.server.handler.ExceptionHandlingWebHandler.handle(ExceptionHandlingWebHandler.java:68)\r\n\t|_\tMono.doOnSuccess \u21e2 org.springframework.web.server.adapter.HttpWebHandlerAdapter.handle(HttpWebHandlerAdapter.java:247)\r\n```", "url": "https://github.com/spring-projects/spring-session/issues/1399", "user": "AndreasKl", "labels": ["in: redis", "status: backported", "type: bug"], "created": "2019-04-01 19:26:05", "closed": "2019-06-02 17:02:53", "commits": {"78b72f2d1bf8fdc580195bc5170158d3e364537f": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 61.000277777777775, "commitsDetails": [{"commitHash": "78b72f2d1bf8fdc580195bc5170158d3e364537f", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["52f59a83e4535fb7805aed7df87288859f8054df"], "nameRev": "78b72f2d1bf8fdc580195bc5170158d3e364537f tags/2.2.0.M2~24", "commitMessage": "Save reactive Redis session on subscribe\n\nThis commit ensures ReactiveRedisOperationsSessionRepository#save does work only after subscribe. Without this, multiple invocations of #save over the course of same request can lead to race condition situations.\n\nResolves: #1399\n", "commitDateTime": "2019-06-02 19:02:13", "authoredDateTime": "2019-05-03 21:00:04", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryITests.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 15, "deletions": 19, "lines": 34}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryTests.java", "insertions": 42, "deletions": 44, "lines": 86}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryITests.saveMultipleTimes()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "TOT": 12, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.save()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveDelta()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveLastAccessChanged()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveSetAttribute()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveRemoveAttribute()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveNewSession()", "TOT": 68, "UPD": 25, "INS": 15, "MOV": 23, "DEL": 5}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["78b72f2d1bf8fdc580195bc5170158d3e364537f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 19, "lines": 34, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 16, "UPD": 1, "INS": 6, "MOV": 5, "DEL": 4, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveDelta()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.save()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.flushImmediateIfNecessary()"]}, {"title": "RedisOperationsSessionRepository fails with ERR no such key on concurrent session id change", "body": "Backport of #1270.", "url": "https://github.com/spring-projects/spring-session/issues/1327", "user": "vpavic", "labels": ["in: redis", "type: backport", "type: bug"], "created": "2019-01-29 20:50:16", "closed": "2019-01-29 20:57:09", "commits": {"01c49c145b76742eb5985d82087a69fbb5807dc1": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "01c49c145b76742eb5985d82087a69fbb5807dc1", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["7c8fe93f2fab54745983aafe2c90641c067c22fd"], "nameRev": "01c49c145b76742eb5985d82087a69fbb5807dc1 tags/2.0.10.RELEASE~14", "commitMessage": "Ignore failed rename operation for deleted session\n\nIn scenario with concurrent requests attempting to change session id, the \"ERR no such key\" error will occur for a thread that comes in second. This commit addresses the problem by ignoring the aforementioned error.\n\nResolves: #1327\n", "commitDateTime": "2019-01-29 21:51:34", "authoredDateTime": "2019-01-29 01:38:54", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 20, "deletions": 1, "lines": 21}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 19, "deletions": 9, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.changeSessionIdSaveConcurrently()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.handleErrNoSuchKeyError(org.springframework.dao.NonTransientDataAccessException)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["01c49c145b76742eb5985d82087a69fbb5807dc1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 9, "lines": 28, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.handleErrNoSuchKeyError(org.springframework.dao.NonTransientDataAccessException)"]}, {"title": "Spring Session does not wrap HttpSession on Error Dispatch on Jetty", "body": "### Summary\r\n\r\nSpring Security throws the exception when Spring-session is in use and CSRF token has not been provided.\r\n\r\n### Actual Behavior\r\n\r\nWhen Spring security and Spring-session is used in application, when CSRF token is not provided, Spring security throws following exception:\r\n\r\n```\r\njava.lang.IllegalStateException: Cannot invoke saveContext on response org.springframework.security.web.firewall.FirewalledResponse@10d467dc. You must use the HttpRequestResponseHolder.response after invoking loadContext\r\n\tat org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(HttpSessionSecurityContextRepository.java:144) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:115) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:82) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:101) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(ChannelProcessingFilter.java:157) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:186) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:75) ~[spring-session-core-2.1.2.RELEASE.jar:2.1.2.RELEASE]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:566) ~[jetty-security-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1242) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.Dispatcher.forward(Dispatcher.java:203) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.Dispatcher.error(Dispatcher.java:81) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ErrorHandler.doError(ErrorHandler.java:119) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ErrorHandler.handle(ErrorHandler.java:78) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.springframework.boot.web.embedded.jetty.JettyEmbeddedErrorHandler.handle(JettyEmbeddedErrorHandler.java:55) ~[spring-boot-2.1.1.RELEASE.jar:2.1.1.RELEASE]\r\n\tat org.eclipse.jetty.server.Response.sendError(Response.java:655) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:123) ~[javax.servlet-api-4.0.1.jar:4.0.1]\r\n\tat org.springframework.session.web.http.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:117) ~[spring-session-core-2.1.2.RELEASE.jar:2.1.2.RELEASE]\r\n\tat javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:123) ~[javax.servlet-api-4.0.1.jar:4.0.1]\r\n\tat javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:123) ~[javax.servlet-api-4.0.1.jar:4.0.1]\r\n\tat org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:119) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat javax.servlet.http.HttpServletResponseWrapper.sendError(HttpServletResponseWrapper.java:123) ~[javax.servlet-api-4.0.1.jar:4.0.1]\r\n\tat org.springframework.security.web.util.OnCommittedResponseWrapper.sendError(OnCommittedResponseWrapper.java:119) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.access.AccessDeniedHandlerImpl.handle(AccessDeniedHandlerImpl.java:76) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:118) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:96) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.access.channel.ChannelProcessingFilter.doFilter(ChannelProcessingFilter.java:157) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.1.2.RELEASE.jar:5.1.2.RELEASE]\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:92) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:151) ~[spring-session-core-2.1.2.RELEASE.jar:2.1.2.RELEASE]\r\n\tat org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81) ~[spring-session-core-2.1.2.RELEASE.jar:2.1.2.RELEASE]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar:5.1.3.RELEASE]\r\n\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1642) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:533) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548) ~[jetty-security-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1340) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473) ~[jetty-servlet-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1242) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.Server.handle(Server.java:503) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:364) ~[jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260) [jetty-server-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305) [jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103) [jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.io.ssl.SslConnection$DecryptedEndPoint.onFillable(SslConnection.java:411) [jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.io.ssl.SslConnection.onFillable(SslConnection.java:305) [jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.io.ssl.SslConnection$2.succeeded(SslConnection.java:159) [jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103) [jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118) [jetty-io-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333) [jetty-util-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310) [jetty-util-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168) [jetty-util-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126) [jetty-util-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366) [jetty-util-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765) [jetty-util-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683) [jetty-util-9.4.12.v20180830.jar:9.4.12.v20180830]\r\n\tat java.base/java.lang.Thread.run(Thread.java:844) [na:na]\r\n```\r\n\r\nThist stacktrace is also printed on web page instead of standard Whitelabel error page or JSON message.\r\n\r\n### Expected Behavior\r\n\r\nException is not throwing. User see Whitelabel page or JSON message with status code 403 instead of page with stacktrace and status code 500\r\n\r\n### Configuration\r\n\r\nSpring security Java config:\r\n\r\n```\r\n@EnableWebSecurity\r\n@Configuration\r\npublic class DefaultSecurityConfig extends WebSecurityConfigurerAdapter {\r\n@Override\r\nprotected void configure(final HttpSecurity http) throws Exception {\r\n        http\r\n                .requiresChannel()\r\n                    .requestMatchers(request -> request.getHeader(\"X-Forwarded-Proto\") != null)\r\n                        .requiresSecure()\r\n                    .and()\r\n                .cors()\r\n                    .and()\r\n                .headers()\r\n                    .frameOptions()\r\n                    .sameOrigin()\r\n                    .and()\r\n                .csrf()\r\n                    .ignoringAntMatchers(\"/api/v1/auth/local/user/login\", \"/api/v1/auth/local/user/registrations\")\r\n                    .and()\r\n                .logout()\r\n                    .logoutUrl(\"/api/v1/auth/logout\")\r\n                    .logoutSuccessHandler(new RestLogoutHandler())\r\n                    .clearAuthentication(true)\r\n                    .invalidateHttpSession(true)\r\n                    .deleteCookies(\"JSESSIONID\")\r\n                    .and()\r\n                .exceptionHandling()\r\n                    .authenticationEntryPoint(new HttpStatusEntryPoint(HttpStatus.UNAUTHORIZED))\r\n                    .and()\r\n                .authorizeRequests()\r\n                    .antMatchers(\"/api/v1/auth/social/**\")\r\n                        .permitAll()\r\n                    .antMatchers(\"/api/v1/auth/local/**\")\r\n                        .permitAll()\r\n                    .antMatchers(\"/static/**\")\r\n                        .permitAll()\r\n                    .antMatchers(\"/web/**\")\r\n                        .permitAll()\r\n                    .anyRequest()\r\n                        .authenticated();\r\n    }\r\n}\r\n```\r\nSession or Spring security related properties:\r\n\r\n```\r\nserver.servlet.session.timeout=604800\r\nserver.servlet.session.cookie.max-age=604800\r\nserver.servlet.session.cookie.http-only=true\r\nserver.servlet.session.cookie.secure=true\r\nspring.session.store-type=redis\r\nspring.session.redis.flush-mode=on-save\r\nspring.session.redis.namespace=spring:session\r\n```\r\n\r\n### Version\r\n\r\nVersion: 5.1.2.RELEASE\r\nProblem exists also in: 5.0.8.RELEASE\r\n\r\n### Sample\r\n", "url": "https://github.com/spring-projects/spring-session/issues/1308", "user": "PawelJ-PL", "labels": ["in: core", "status: backported", "type: bug"], "created": "2018-12-28 22:13:45", "closed": "2019-06-11 05:51:59", "commits": {"be58c0083885b1ef0134e05e48e134014a46ba9c": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 164.00027777777777, "commitsDetails": [{"commitHash": "be58c0083885b1ef0134e05e48e134014a46ba9c", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["3475043bf03731dde65e8186fdf7605a005b82fe"], "nameRev": "be58c0083885b1ef0134e05e48e134014a46ba9c tags/2.2.0.M2~11", "commitMessage": "Separate \"filtered\" attribute for ERROR dispatch\n\nResolves: #1308\nSee: spring-projects/spring-framework#22989\n", "commitDateTime": "2019-06-11 07:27:25", "authoredDateTime": "2019-06-10 08:23:38", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/OncePerRequestFilter.java", "insertions": 19, "deletions": 4, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OncePerRequestFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)", "TOT": 8, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.updateForErrorDispatch(java.lang.String,javax.servlet.ServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Fix Spring Security integration docs sample", "body": "Backport of #1304.", "url": "https://github.com/spring-projects/spring-session/issues/1306", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2019-01-08 07:25:00", "closed": "2019-01-10 13:04:29", "commits": {"bba095f27644f02dc94b9662fad6fa4a1062afb6": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "bba095f27644f02dc94b9662fad6fa4a1062afb6", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["61937a9251a127104d758f390ecc589e4a2a39f9"], "nameRev": "bba095f27644f02dc94b9662fad6fa4a1062afb6 tags/1.3.5.RELEASE~3", "commitMessage": "Fix Spring Security integration docs sample\n\nResolves: #1306\n", "commitDateTime": "2019-01-10 13:54:45", "authoredDateTime": "2019-01-08 08:15:08", "commitGitStats": [{"filePath": "docs/src/test/java/docs/security/SecurityConfiguration.java", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SecurityConfiguration.java", "spoonMethods": [{"spoonMethodName": "docs.security.SecurityConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "docs.security.SecurityConfiguration.sessionRegistry()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bba095f27644f02dc94b9662fad6fa4a1062afb6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": ["docs.security.SecurityConfiguration", "docs.security.SecurityConfiguration.sessionRegistry()"]}, {"title": "Fix Spring Security integration docs sample", "body": "Backport of #1304.", "url": "https://github.com/spring-projects/spring-session/issues/1305", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2019-01-08 07:24:17", "closed": "2019-01-08 20:48:28", "commits": {"6ed798e09f287f068caf387bbfe058c85c36fb41": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6ed798e09f287f068caf387bbfe058c85c36fb41", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["adcfa87454d14d727438cd8d9b14db037488cb4b"], "nameRev": "6ed798e09f287f068caf387bbfe058c85c36fb41 tags/2.0.9.RELEASE~7", "commitMessage": "Fix Spring Security integration docs sample\n\nResolves: #1305\n", "commitDateTime": "2019-01-08 21:46:19", "authoredDateTime": "2019-01-08 08:15:08", "commitGitStats": [{"filePath": "docs/src/test/java/docs/security/SecurityConfiguration.java", "insertions": 5, "deletions": 4, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SecurityConfiguration.java", "spoonMethods": [{"spoonMethodName": "docs.security.SecurityConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "docs.security.SecurityConfiguration.sessionRegistry()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6ed798e09f287f068caf387bbfe058c85c36fb41"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": ["docs.security.SecurityConfiguration", "docs.security.SecurityConfiguration.sessionRegistry()"]}, {"title": "Fix Spring Security integration docs sample", "body": "I am trying to implement RememberMe service for my Spring Security application with Spring Session management. I configured, `SpringSessionRememberMeServices` and `SpringSessionBackedSessionRegistry` beans based on [Spring Session Documentation][1]. When I try to autowire `FindByIndexNameSessionRepository` I got the following error\r\n\r\n    Could not autowire. No beans of 'FindByIndexNameSessionRepository<Session>' type found\r\n\r\n**SecurityConfig.java**\r\n\r\n    package com.springtesting.security.config;\r\n    \r\n    \r\n    import com.springtesting.security.MyUserDetailsService;\r\n    import com.springtesting.security.handlers.CustomAuthenticationFailureHandler;\r\n    import com.springtesting.security.handlers.CustomAuthenticationSuccessHandler;\r\n    import com.springtesting.security.handlers.CustomLogoutSuccessHandler;\r\n    import com.springtesting.security.providers.CustomDaoAuthenticationProvider;\r\n    import org.springframework.beans.factory.annotation.Autowired;\r\n    import org.springframework.context.annotation.Bean;\r\n    import org.springframework.context.annotation.Configuration;\r\n    import org.springframework.security.authentication.AuthenticationManager;\r\n    import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;\r\n    import org.springframework.security.config.annotation.web.builders.HttpSecurity;\r\n    import org.springframework.security.config.annotation.web.builders.WebSecurity;\r\n    import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;\r\n    import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;\r\n    import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;\r\n    import org.springframework.security.crypto.password.PasswordEncoder;\r\n    import org.springframework.security.web.session.HttpSessionEventPublisher;\r\n    import org.springframework.session.FindByIndexNameSessionRepository;\r\n    import org.springframework.session.Session;\r\n    import org.springframework.session.jdbc.config.annotation.web.http.EnableJdbcHttpSession;\r\n    import org.springframework.session.security.SpringSessionBackedSessionRegistry;\r\n    import org.springframework.session.security.web.authentication.SpringSessionRememberMeServices;\r\n    \r\n    \r\n    @Configuration\r\n    @EnableWebSecurity\r\n    public class SecurityConfig extends WebSecurityConfigurerAdapter\r\n    {\r\n        private final MyUserDetailsService userDetailsService;\r\n    \r\n        private final FindByIndexNameSessionRepository<Session> sessionRepository;\r\n    \r\n        @Autowired\r\n        public SecurityConfig(MyUserDetailsService userDetailsService, FindByIndexNameSessionRepository<Session> sessionRepository)\r\n        {\r\n            this.userDetailsService = userDetailsService;\r\n            this.sessionRepository = sessionRepository;\r\n        }\r\n    \r\n    \r\n        @Override\r\n        public void configure(AuthenticationManagerBuilder auth)\r\n        {\r\n            auth.authenticationProvider(getDaoAuthenticationProvider());\r\n        }\r\n    \r\n        @Bean\r\n        public CustomDaoAuthenticationProvider getDaoAuthenticationProvider()\r\n        {\r\n            CustomDaoAuthenticationProvider daoAuthenticationProvider=new CustomDaoAuthenticationProvider();\r\n            daoAuthenticationProvider.setUserDetailsService(userDetailsService);\r\n            daoAuthenticationProvider.setPasswordEncoder(getBCryptPasswordEncoder());\r\n            return daoAuthenticationProvider;\r\n        }\r\n    \r\n        /* BCrypt strength should 12 or more*/\r\n        @Bean\r\n        public PasswordEncoder getBCryptPasswordEncoder()\r\n        {\r\n            return new BCryptPasswordEncoder(12);\r\n        }\r\n    \r\n        @Override\r\n        protected void configure(HttpSecurity http) throws Exception\r\n        {\r\n                http.authorizeRequests()\r\n                        .antMatchers(\"/anonymous*\").anonymous()\r\n                        .antMatchers(\"/users/**\").hasAuthority(AuthorityConstants.Admin)\r\n                        .antMatchers(\"/admin**\").hasAuthority(AuthorityConstants.Admin)\r\n                        .antMatchers(\"/profile/**\").hasAuthority(AuthorityConstants.User)\r\n                        .antMatchers(\"/api/**\").hasAuthority(AuthorityConstants.ApiUser)\r\n                        .antMatchers(\"/dba/**\").hasAuthority(AuthorityConstants.Dba)\r\n                        .anyRequest().authenticated()\r\n                .and()\r\n                        .httpBasic()\r\n                .and()\r\n                        .formLogin()\r\n                            .loginPage(\"/login\")\r\n                            .loginProcessingUrl(\"/login\")\r\n                            .successHandler(new CustomAuthenticationSuccessHandler())\r\n                            .failureHandler(new CustomAuthenticationFailureHandler())\r\n                            .permitAll()\r\n                .and()\r\n                        .logout()\r\n                            .deleteCookies(\"JSESSIONID\")\r\n                            .logoutSuccessHandler(new CustomLogoutSuccessHandler())\r\n                            .permitAll()\r\n                .and()\r\n                        .rememberMe().rememberMeServices(springSessionRememberMeServices());\r\n    \r\n    \r\n            http.sessionManagement()\r\n                            .invalidSessionUrl(\"/invalidSession.html\")\r\n                            .sessionFixation()\r\n                            .migrateSession()\r\n                            .maximumSessions(1)\r\n                            .sessionRegistry(sessionRegistry());;\r\n        }\r\n    \r\n        @Bean\r\n        public SpringSessionRememberMeServices springSessionRememberMeServices()\r\n        {\r\n            SpringSessionRememberMeServices rememberMeServices = new SpringSessionRememberMeServices();\r\n            // optionally customize\r\n            rememberMeServices.setRememberMeParameterName(\"remember-me\");\r\n            rememberMeServices.setValiditySeconds(86000);\r\n    \r\n            return rememberMeServices;\r\n        }\r\n    \r\n    \r\n        @Bean\r\n        SpringSessionBackedSessionRegistry sessionRegistry()\r\n        {\r\n            return new SpringSessionBackedSessionRegistry<>(this.sessionRepository);\r\n        }\r\n    \r\n        @Override\r\n        public void configure(WebSecurity web) throws Exception\r\n        {\r\n            web\r\n                .ignoring()\r\n                .antMatchers(\"/resources/**\", \"/static/**\", \"/css/**\", \"/js/**\", \"/images/**\");\r\n        }\r\n    \r\n        @Bean\r\n        public HttpSessionEventPublisher httpSessionEventPublisher()\r\n        {\r\n            return new HttpSessionEventPublisher();\r\n        }\r\n    \r\n        @Bean(\"authenticationManager\")\r\n        @Override\r\n        public AuthenticationManager authenticationManagerBean() throws Exception\r\n        {\r\n            return super.authenticationManagerBean();\r\n        }\r\n    }\r\n\r\n\r\n**application.properties**\r\n\r\n\r\n    ###################################  MySQL Database as persistent Database  ##############################\r\n    \r\n    spring.jpa.hibernate.ddl-auto=update\r\n    spring.datasource.url=jdbc:mysql://localhost:3306/springsecuritydb?useSSL=false\r\n    spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect\r\n    spring.datasource.username=root\r\n    spring.datasource.password=bcmc1234\r\n    \r\n    management.endpoints.web.exposure.include=*\r\n    management.endpoint.auditevents.enabled=true\r\n    \r\n    spring.session.store-type=jdbc\r\n    # Name of the database table used to store sessions.\r\n    spring.session.jdbc.table-name=SPRING_SESSION\r\n    # Database schema initialization mode\r\n    spring.session.jdbc.initialize-schema=always\r\n    \r\n    \r\n    \r\n    #server.servlet.session.timeout=\r\n    #spring.session.jdbc.schema=classpath:org/springframework/session/jdbc/schema-@@platform@@.sql # Path to the SQL file to use to initialize the database schema.\r\n    \r\n    \r\n    spring.devtools.restart.enabled=true\r\n    \r\n    server.servlet.session.cookie.http-only=true\r\n    server.servlet.session.cookie.secure=false\r\n\r\n\r\n\r\nhttps://docs.spring.io/spring-session/docs/current/reference/html5/#spring-security\r\n\r\n\r\n  [1]: https://docs.spring.io/spring-session/docs/current/reference/html5/#spring-security\r\n\r\n\r\n", "url": "https://github.com/spring-projects/spring-session/issues/1304", "user": "pavankjadda", "labels": ["in: docs", "type: bug"], "created": "2019-01-07 04:07:11", "closed": "2019-01-08 07:25:32", "commits": {}, "ttf": 1.0002777777777778, "commitsDetails": []}, {"title": "HazelcastSessionRepository doesn't update TTL when maxInactiveInterval is changed", "body": "In `HazelcastSessionRepository`, after session has been initially saved, subsequent updates to session do not reflect the changes to `HttpSession#setMaxInactiveInterval` in entry's TTL. This is due to updates being handled by `EntryProcessor` while the initial save is handled by `IMap#set` which explicitly specifies the TTL.", "url": "https://github.com/spring-projects/spring-session/issues/1300", "user": "vpavic", "labels": ["in: hazelcast", "type: bug"], "created": "2018-12-26 20:09:54", "closed": "2019-01-12 11:31:34", "commits": {"f00a1b9c6fce90957387d9793bd517ed8b808c3b": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 16.00027777777778, "commitsDetails": [{"commitHash": "f00a1b9c6fce90957387d9793bd517ed8b808c3b", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["39cecb0902e7ed099a823fda360c070f84b521c6"], "nameRev": "f00a1b9c6fce90957387d9793bd517ed8b808c3b tags/2.1.4.RELEASE~10", "commitMessage": "Fix HazelcastSessionRepository to update TTL when maxInactiveInterval is changed\n\nResolves: #1300\n", "commitDateTime": "2019-01-12 12:22:45", "authoredDateTime": "2019-01-10 16:46:41", "commitGitStats": [{"filePath": "spring-session-hazelcast/src/integration-test/java/org/springframework/session/hazelcast/config/annotation/web/http/EnableHazelcastHttpSessionEventsTests.java", "insertions": 23, "deletions": 1, "lines": 24}, {"filePath": "spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast/HazelcastSessionRepository.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "spring-session-hazelcast/src/test/java/org/springframework/session/hazelcast/HazelcastSessionRepositoryTests.java", "insertions": 6, "deletions": 3, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnableHazelcastHttpSessionEventsTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.updateMaxInactiveIntervalTest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.updateTtl(org.springframework.session.hazelcast.HazelcastSessionRepository$HazelcastSession)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.save(org.springframework.session.hazelcast.HazelcastSessionRepository$HazelcastSession)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "HazelcastSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepositoryTests.saveUpdatedMaxInactiveIntervalInSecondsFlushModeImmediate()", "TOT": 7, "UPD": 1, "INS": 3, "MOV": 2, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f00a1b9c6fce90957387d9793bd517ed8b808c3b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 1, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 0, "INS": 5, "MOV": 3, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast"], "changesInPackagesSPOON": ["org.springframework.session.hazelcast.HazelcastSessionRepository.save(org.springframework.session.hazelcast.HazelcastSessionRepository$HazelcastSession)", "org.springframework.session.hazelcast.HazelcastSessionRepository", "org.springframework.session.hazelcast.HazelcastSessionRepository.updateTtl(org.springframework.session.hazelcast.HazelcastSessionRepository$HazelcastSession)"]}, {"title": "Fix SessionRepositoryFilter Javadoc", "body": "Backport of #1282.", "url": "https://github.com/spring-projects/spring-session/issues/1285", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2018-12-13 21:07:45", "closed": "2018-12-14 15:46:25", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fix SessionRepositoryFilter Javadoc", "body": "Backport of #1282.", "url": "https://github.com/spring-projects/spring-session/issues/1284", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2018-12-13 21:05:43", "closed": "2018-12-14 15:43:44", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fix RedisOperationsSessionRepository javadoc typos", "body": "Backport of #1273.", "url": "https://github.com/spring-projects/spring-session/issues/1276", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2018-12-04 19:09:35", "closed": "2018-12-04 19:10:38", "commits": {"3885b7e7ff28fc7a413e8a46b3fcc885cca0c180": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3885b7e7ff28fc7a413e8a46b3fcc885cca0c180", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["bea569c3c8af587095aa0eb14f2196171b72bb86"], "nameRev": "3885b7e7ff28fc7a413e8a46b3fcc885cca0c180 tags/1.3.5.RELEASE~5", "commitMessage": "Fix RedisOperationsSessionRepository javadoc typos\n\nResolves: #1276\n", "commitDateTime": "2018-12-04 20:08:50", "authoredDateTime": "2018-12-04 14:36:12", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3885b7e7ff28fc7a413e8a46b3fcc885cca0c180"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis"]}, {"title": "Fix RedisOperationsSessionRepository javadoc typos", "body": "Backport of #1273.", "url": "https://github.com/spring-projects/spring-session/issues/1275", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2018-12-04 19:07:38", "closed": "2018-12-04 19:08:30", "commits": {"0a3dbfa43e2c029d65a2df234775d3d133a4277b": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0a3dbfa43e2c029d65a2df234775d3d133a4277b", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["ae77a9db6ca645232f0f9fe59b1a324043bc4c2d"], "nameRev": "0a3dbfa43e2c029d65a2df234775d3d133a4277b tags/2.0.9.RELEASE~12", "commitMessage": "Fix RedisOperationsSessionRepository javadoc typos\n\nResolves: #1275\n", "commitDateTime": "2018-12-04 20:07:48", "authoredDateTime": "2018-12-04 14:36:12", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0a3dbfa43e2c029d65a2df234775d3d133a4277b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"]}, {"title": "ERR no such key when RedisOperationsSessionRepository.saveChangeSessionId called", "body": "Hi all\r\n\r\nI got the following exception and seems the session is already gone before rename. Should we ignore such exception?\r\n\r\nVersion: spring-session-data-redis-2.1.2.RELEASE\r\n\r\nI guess that #1137 d3134ad065af9e8bf10906c6e82710236be3691d did not fix all issues.\r\n\r\n```\r\norg.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: ERR no such key\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:268) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:817) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.rename(LettuceKeyCommands.java:325) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.connection.DefaultedRedisConnection.rename(DefaultedRedisConnection.java:118) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.core.RedisTemplate.lambda$rename$16(RedisTemplate.java:932) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.data.redis.core.RedisTemplate.rename(RedisTemplate.java:931) ~[spring-data-redis-2.1.3.RELEASE.jar!/:2.1.3.RELEASE]\r\n\tat org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.saveChangeSessionId(RedisOperationsSessionRepository.java:867) ~[spring-session-data-redis-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.saveDelta(RedisOperationsSessionRepository.java:826) ~[spring-session-data-redis-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.access$000(RedisOperationsSessionRepository.java:703) ~[spring-session-data-redis-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:421) ~[spring-session-data-redis-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:247) ~[spring-session-data-redis-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:240) ~[spring-session-core-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:201) ~[spring-session-core-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:154) ~[spring-session-core-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81) ~[spring-session-core-2.1.2.RELEASE.jar!/:2.1.2.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:117) ~[spring-boot-actuator-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]\r\n\tat org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:106) ~[spring-boot-actuator-2.1.1.RELEASE.jar!/:2.1.1.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar!/:5.1.3.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.1.3.RELEASE.jar!/:5.1.3.RELEASE]\r\n\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.1.3.RELEASE.jar!/:5.1.3.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199) ~[tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:490) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:408) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:791) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1417) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_191]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_191]\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-9.0.13.jar!/:9.0.13]\r\n\tat java.lang.Thread.run(Thread.java:748) [na:1.8.0_191]\r\nCaused by: io.lettuce.core.RedisCommandExecutionException: ERR no such key\r\n\tat io.lettuce.core.ExceptionFactory.createExecutionException(ExceptionFactory.java:135) ~[lettuce-core-5.1.3.RELEASE.jar!/:na]\r\n\tat io.lettuce.core.ExceptionFactory.createExecutionException(ExceptionFactory.java:108) ~[lettuce-core-5.1.3.RELEASE.jar!/:na]\r\n\tat io.lettuce.core.protocol.AsyncCommand.completeResult(AsyncCommand.java:120) ~[lettuce-core-5.1.3.RELEASE.jar!/:na]\r\n\tat io.lettuce.core.protocol.AsyncCommand.complete(AsyncCommand.java:111) ~[lettuce-core-5.1.3.RELEASE.jar!/:na]\r\n\tat io.lettuce.core.protocol.CommandWrapper.complete(CommandWrapper.java:59) ~[lettuce-core-5.1.3.RELEASE.jar!/:na]\r\n\tat io.lettuce.core.protocol.CommandHandler.complete(CommandHandler.java:646) ~[lettuce-core-5.1.3.RELEASE.jar!/:na]\r\n\tat io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:604) ~[lettuce-core-5.1.3.RELEASE.jar!/:na]\r\n\tat io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:556) ~[lettuce-core-5.1.3.RELEASE.jar!/:na]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:648) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:583) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:500) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:462) ~[netty-transport-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:897) ~[netty-common-4.1.31.Final.jar!/:4.1.31.Final]\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) ~[netty-common-4.1.31.Final.jar!/:4.1.31.Final]\r\n\t... 1 common frames omitted\r\n\r\n```", "url": "https://github.com/spring-projects/spring-session/issues/1270", "user": "wangzw", "labels": ["in: redis", "type: bug"], "created": "2018-12-02 15:11:48", "closed": "2019-01-29 20:42:44", "commits": {"d3134ad065af9e8bf10906c6e82710236be3691d": {"commitGHEventType": "referenced", "commitUser": "vpavic"}, "381a07cb8c903df8099a0a141f9d054ebb13aaf4": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 58.000277777777775, "commitsDetails": [{"commitHash": "d3134ad065af9e8bf10906c6e82710236be3691d", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["6208d0298d71c6356975614b05c2b591a4a4fc82"], "nameRev": "d3134ad065af9e8bf10906c6e82710236be3691d tags/2.1.0.M3~9", "commitMessage": "Ignore failed rename operation for deleted session\n\nAttempting to change session id for a deleted session currently results in \"ERR no such key\" error on rename operation of expired key. This commit addressed the problem by ignoring the aforementioned error.\n\nCloses #1137\n", "commitDateTime": "2018-09-04 23:07:27", "authoredDateTime": "2018-09-04 00:34:44", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 12, "deletions": 2, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.changeSessionIdWhenSessionIsDeleted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "381a07cb8c903df8099a0a141f9d054ebb13aaf4", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["0e89539e203ccd5dd7ed97832211a0f7a0a6d918"], "nameRev": "381a07cb8c903df8099a0a141f9d054ebb13aaf4 tags/2.1.4.RELEASE~8", "commitMessage": "Ignore failed rename operation for deleted session\n\nIn scenario with concurrent requests attempting to change session id, the \"ERR no such key\" error will occur for a thread that comes in second. This commit addresses the problem by ignoring the aforementioned error.\n\nResolves: #1270\n", "commitDateTime": "2019-01-29 21:29:10", "authoredDateTime": "2019-01-29 01:38:54", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 20, "deletions": 1, "lines": 21}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 19, "deletions": 9, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.changeSessionIdSaveConcurrently()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.handleErrNoSuchKeyError(org.springframework.dao.NonTransientDataAccessException)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d3134ad065af9e8bf10906c6e82710236be3691d"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 2, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)"]}, {"title": "Make SessionUpdateEntryProcessor public", "body": "Backport of #1260.", "url": "https://github.com/spring-projects/spring-session/issues/1266", "user": "vpavic", "labels": ["in: hazelcast", "type: backport", "type: bug"], "created": "2018-11-26 17:56:28", "closed": "2018-11-26 18:25:53", "commits": {"bea569c3c8af587095aa0eb14f2196171b72bb86": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bea569c3c8af587095aa0eb14f2196171b72bb86", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["7f1434cc4c8eb6d961dbeef68e751233430a4f02"], "nameRev": "bea569c3c8af587095aa0eb14f2196171b72bb86 tags/1.3.5.RELEASE~6", "commitMessage": "Make SessionUpdateEntryProcessor public\n\nResolves: #1266\n", "commitDateTime": "2018-11-26 19:21:55", "authoredDateTime": "2018-11-26 19:21:55", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/hazelcast/SessionUpdateEntryProcessor.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionUpdateEntryProcessor.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.SessionUpdateEntryProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bea569c3c8af587095aa0eb14f2196171b72bb86"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/hazelcast"], "changesInPackagesSPOON": ["org.springframework.session.hazelcast.SessionUpdateEntryProcessor"]}, {"title": "Make SessionUpdateEntryProcessor public", "body": "Backport of #1260.", "url": "https://github.com/spring-projects/spring-session/issues/1265", "user": "vpavic", "labels": ["in: hazelcast", "type: backport", "type: bug"], "created": "2018-11-26 17:55:18", "closed": "2018-11-26 18:20:16", "commits": {"32c28013f3de535147ee035ec70a328de3c201fe": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "32c28013f3de535147ee035ec70a328de3c201fe", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["c5b43f096c97f2902dc97a2d92a062d85d84a683"], "nameRev": "32c28013f3de535147ee035ec70a328de3c201fe tags/2.0.8.RELEASE~6", "commitMessage": "Make SessionUpdateEntryProcessor public\n\nResolves: #1265\n", "commitDateTime": "2018-11-26 19:09:03", "authoredDateTime": "2018-11-26 19:09:03", "commitGitStats": [{"filePath": "spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast/SessionUpdateEntryProcessor.java", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionUpdateEntryProcessor.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.SessionUpdateEntryProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["32c28013f3de535147ee035ec70a328de3c201fe"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast"], "changesInPackagesSPOON": ["org.springframework.session.hazelcast.SessionUpdateEntryProcessor"]}, {"title": "Support for Hazelcast client-server topology - SessionUpdateEntryProcessor not public", "body": "<!--\r\nFor Security Vulnerabilities, please use https://pivotal.io/security#reporting\r\n-->\r\n\r\n<!--\r\nThanks for raising a Spring Session issue. Please provide a brief description of your problem along with the version of Spring Session that you are using. If possible, please also consider putting together a sample application that reproduces the issue.\r\n-->\r\n\r\nHello everyone! \r\n\r\nI have Hazelcast client/server topology \r\nI saw that issue https://github.com/spring-projects/spring-session/issues/1101\r\nBut unfortunately, I can't implement that code in where i create my Hazelcast client:\r\n\r\n```\r\nclientConfig.getUserCodeDeploymentConfig().setEnabled(true) \r\n \t\t\t.addClass(Session.class).addClass(MapSession.class) \r\n \t\t\t.addClass(SessionUpdateEntryProcessor.class); \r\n```\r\n\r\nBecause SessionUpdateEntryProcessor is package private \r\nIs that default access modifier correct?\r\n\r\nAlso, i have an issue with adding MapSession.class through UserCodeDeployment\r\n```\r\n018-11-22 17:06:59.600, closedTime=2018-11-22 17:06:59.605, connected server version=3.11} closed. Reason: Could not connect to [127.0.0.1]:5500 as owner\r\n    java.util.concurrent.ExecutionException: java.lang.IllegalStateException: User Code Deployment is not enabled.\r\n        at com.hazelcast.client.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:109)\r\n        at com.hazelcast.client.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:33)\r\n        at com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:162)\r\n        at com.hazelcast.client.spi.impl.ClientUserCodeDeploymentService.deploy(ClientUserCodeDeploymentService.java:172)\r\n        at com.hazelcast.client.impl.clientside.HazelcastClientInstanceImpl.onClusterConnect(HazelcastClientInstanceImpl.java:616)\r\n        at com.hazelcast.client.connection.nio.ClusterConnector.connectAsOwner(ClusterConnector.java:137)\r\n        at com.hazelcast.client.connection.nio.ClusterConnector.connectToClusterInternal(ClusterConnector.java:194)\r\n        at com.hazelcast.client.connection.nio.ClusterConnector.access$400(ClusterConnector.java:56)\r\n        at com.hazelcast.client.connection.nio.ClusterConnector$2.call(ClusterConnector.java:215)\r\n        at com.hazelcast.client.connection.nio.ClusterConnector$2.call(ClusterConnector.java:211)\r\n        at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n        at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n        at java.base/java.lang.Thread.run(Thread.java:834)\r\n        at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n        at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n    Caused by: java.lang.IllegalStateException: User Code Deployment is not enabled.\r\n        at com.hazelcast.internal.usercodedeployment.UserCodeDeploymentService.defineClass(UserCodeDeploymentService.java:70)\r\n        at com.hazelcast.internal.usercodedeployment.impl.operation.DeployClassesOperation.run(DeployClassesOperation.java:50)\r\n        at com.hazelcast.spi.Operation.call(Operation.java:170)\r\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.call(OperationRunnerImpl.java:208)\r\n        at com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:197)\r\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.run(OperationExecutorImpl.java:407)\r\n        at com.hazelcast.spi.impl.operationexecutor.impl.OperationExecutorImpl.runOrExecute(OperationExecutorImpl.java:434)\r\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvokeLocal(Invocation.java:586)\r\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.doInvoke(Invocation.java:571)\r\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke0(Invocation.java:530)\r\n        at com.hazelcast.spi.impl.operationservice.impl.Invocation.invoke(Invocation.java:220)\r\n        at com.hazelcast.spi.impl.operationservice.impl.InvocationBuilderImpl.invoke(InvocationBuilderImpl.java:60)\r\n        at com.hazelcast.client.impl.protocol.task.AbstractMultiTargetMessageTask.processMessage(AbstractMultiTargetMessageTask.java:57)\r\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.initializeAndProcessMessage(AbstractMessageTask.java:123)\r\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.doRun(AbstractMessageTask.java:111)\r\n        at com.hazelcast.client.impl.protocol.task.AbstractMessageTask.run(AbstractMessageTask.java:101)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n        at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n        at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n        at ------ submitted from ------.(Unknown Source)\r\n        at com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127)\r\n        at com.hazelcast.spi.impl.AbstractInvocationFuture$1.run(AbstractInvocationFuture.java:250)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n        at com.hazelcast.util.executor.HazelcastManagedThread.executeRun(HazelcastManagedThread.java:64)\r\n        at com.hazelcast.util.executor.HazelcastManagedThread.run(HazelcastManagedThread.java:80)\r\n        at ------ submitted from ------.(Unknown Source)\r\n        at com.hazelcast.client.spi.impl.ClientInvocationFuture.resolveAndThrowIfException(ClientInvocationFuture.java:96)\r\n        ... 15 more\r\n```\r\n\r\nThank you \r\n", "url": "https://github.com/spring-projects/spring-session/issues/1260", "user": "cdene", "labels": ["in: hazelcast", "type: bug"], "created": "2018-11-22 13:53:22", "closed": "2018-11-26 17:54:12", "commits": {"e0dc0262efc049eeb5ca315b5a83a9e8d8558137": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "e0dc0262efc049eeb5ca315b5a83a9e8d8558137", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["3b7da0c3709f7b95e8cebd07d51355426a2987f9"], "nameRev": "e0dc0262efc049eeb5ca315b5a83a9e8d8558137 tags/2.1.2.RELEASE~9", "commitMessage": "Make SessionUpdateEntryProcessor public\n\nResolves: #1260\n", "commitDateTime": "2018-11-26 18:18:18", "authoredDateTime": "2018-11-26 18:18:18", "commitGitStats": [{"filePath": "spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast/SessionUpdateEntryProcessor.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionUpdateEntryProcessor.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.SessionUpdateEntryProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["e0dc0262efc049eeb5ca315b5a83a9e8d8558137"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast"], "changesInPackagesSPOON": ["org.springframework.session.hazelcast.SessionUpdateEntryProcessor"]}, {"title": "Commit Session on Include Dispatch", "body": "Backport of #1243.", "url": "https://github.com/spring-projects/spring-session/issues/1250", "user": "vpavic", "labels": ["in: core", "type: backport", "type: bug"], "created": "2018-11-02 22:40:49", "closed": "2018-11-08 21:40:52", "commits": {"695f2f150916baa6df9bd750a19c4eddaaaf54e3": {"commitGHEventType": "referenced", "commitUser": "vpavic"}, "d245cc1a36bf7fd2b840d16fe3771af912739716": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "695f2f150916baa6df9bd750a19c4eddaaaf54e3", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["3940a22d5e0bbe68a08ae02c93eb95454cd67811"], "nameRev": "695f2f150916baa6df9bd750a19c4eddaaaf54e3 tags/1.3.4.RELEASE~3", "commitMessage": "Commit Session on Include Dispatch\n\nThe servlet spec disallows any writing of headers after an include has been issued.\n\nThis commit intercepts the include and commits the session, then\nallowing the include to proceed.\n\nSee: #1250\n", "commitDateTime": "2018-11-08 22:00:50", "authoredDateTime": "2018-11-02 21:18:53", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 27, "deletions": 0, "lines": 27}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestDispatcher(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.SessionCommittingRequestDispatcher", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions()", "TOT": 13, "UPD": 3, "INS": 1, "MOV": 9, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.getSessionFalseWithInvalidSessionIdShouldOnlyAskRepositoryOnce()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().85", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().79", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().80", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().81", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().82", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().84", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().83", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.getSessionFalseWithInvalidSessionIdShouldOnlyAskRepositoryOnce().88", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).89", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).90", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().78.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.getSessionFalseWithInvalidSessionIdShouldOnlyAskRepositoryOnce().88.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 15, "UPD": 11, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInclude().78.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 0, "INS": 7, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().79.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionCreation()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionUpdates()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().78", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().85.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d245cc1a36bf7fd2b840d16fe3771af912739716", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["695f2f150916baa6df9bd750a19c4eddaaaf54e3"], "nameRev": "d245cc1a36bf7fd2b840d16fe3771af912739716 tags/1.3.4.RELEASE~2", "commitMessage": "Polish contribution\n\nResolves: #1250\n", "commitDateTime": "2018-11-08 22:00:52", "authoredDateTime": "2018-11-02 22:26:17", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 7, "deletions": 6, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": []}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["695f2f150916baa6df9bd750a19c4eddaaaf54e3", "d245cc1a36bf7fd2b840d16fe3771af912739716"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 41, "deletions": 3, "lines": 44, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestDispatcher(java.lang.String)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.SessionCommittingRequestDispatcher"]}, {"title": "Commit Session on Include Dispatch", "body": "Backport of #1243.", "url": "https://github.com/spring-projects/spring-session/issues/1244", "user": "vpavic", "labels": ["in: core", "type: backport", "type: bug"], "created": "2018-11-02 21:46:30", "closed": "2018-11-02 22:34:47", "commits": {"6c322631d4c42f2556c6ed3fc1795f7c83ed6166": {"commitGHEventType": "referenced", "commitUser": "vpavic"}, "ed3f6abf5d1233ffea6e9e7aa687babc9d47fd06": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "6c322631d4c42f2556c6ed3fc1795f7c83ed6166", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["9575be9b7d33faf7f9f1fe9ec0560d44f433ec99"], "nameRev": "6c322631d4c42f2556c6ed3fc1795f7c83ed6166 tags/2.0.8.RELEASE~14", "commitMessage": "Commit Session on Include Dispatch\n\nThe servlet spec disallows any writing of headers after an include has been issued.\n\nThis commit intercepts the include and commits the session, then\nallowing the include to proceed.\n\nSee: #1244\n", "commitDateTime": "2018-11-02 22:50:28", "authoredDateTime": "2018-11-02 21:18:53", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 28, "deletions": 0, "lines": 28}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestDispatcher(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.SessionCommittingRequestDispatcher", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions()", "TOT": 13, "UPD": 3, "INS": 1, "MOV": 9, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionIdForInvalidSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionRetrievalIsCached()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().85", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().77", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionIdForInvalidSession().78", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().79", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().80", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().81", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().82", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().84", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().83", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionRetrievalIsCached().88", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).89", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).90", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().77.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionIdForInvalidSession().78.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInclude().77.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionCreation()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionUpdates()", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ed3f6abf5d1233ffea6e9e7aa687babc9d47fd06", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["6c322631d4c42f2556c6ed3fc1795f7c83ed6166"], "nameRev": "ed3f6abf5d1233ffea6e9e7aa687babc9d47fd06 tags/2.0.8.RELEASE~13", "commitMessage": "Polish contribution\n\nResolves: #1244\n", "commitDateTime": "2018-11-02 22:51:14", "authoredDateTime": "2018-11-02 22:26:17", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 14, "deletions": 3, "lines": 17}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 6, "deletions": 4, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": []}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6c322631d4c42f2556c6ed3fc1795f7c83ed6166", "ed3f6abf5d1233ffea6e9e7aa687babc9d47fd06"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 42, "deletions": 3, "lines": 45, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2.0, "UPD": 0.0, "INS": 2.0, "MOV": 0.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestDispatcher(java.lang.String)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.SessionCommittingRequestDispatcher"]}, {"title": "Ensure HttpServletRequest#getRequestedSessionId API is respected", "body": "Backport of #1229.", "url": "https://github.com/spring-projects/spring-session/issues/1236", "user": "vpavic", "labels": ["in: core", "type: backport", "type: bug"], "created": "2018-10-26 17:48:37", "closed": "2018-10-26 18:52:07", "commits": {"9575be9b7d33faf7f9f1fe9ec0560d44f433ec99": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "9575be9b7d33faf7f9f1fe9ec0560d44f433ec99", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["eae239febf868a7974d68391e5dcd47a61a53a2b"], "nameRev": "9575be9b7d33faf7f9f1fe9ec0560d44f433ec99 tags/2.0.8.RELEASE~15", "commitMessage": "Ensure HttpServletRequest#getRequestedSessionId API is respected\n\nHttpSessionIdResolver supports resolving multiple requested session ids associated with the request - as a consequence, we need to validate the existence of requested session before returning the id. However, if no presented session ids do validate the null is returned, which violates the HttpServletRequest#getRequestedSessionId API.\n\nThis commit ensures that if no presented session ids are valid, we respect the HttpServletRequest#getRequestedSessionId API by returning first requested session id.\n\nResolves: #1236\n", "commitDateTime": "2018-10-26 20:12:39", "authoredDateTime": "2018-10-26 19:34:53", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 11, "deletions": 3, "lines": 14}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestedSessionId()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.clearRequestedSessionCache()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestedSession()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate()", "TOT": 12, "UPD": 3, "INS": 1, "MOV": 8, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionRetrievalIsCached()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().81", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().78", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().80", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().83", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().84", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().79", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().82", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionRetrievalIsCached().87", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).88", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).89", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().81.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionUpdates()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionIdForInvalidSession().78.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().80.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionCreation()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9575be9b7d33faf7f9f1fe9ec0560d44f433ec99"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 3, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.clearRequestedSessionCache()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestedSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestedSessionId()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper"]}, {"title": "When Spring Session combined with Spring Security is used, timeout cannot be detected.", "body": "We are using spring-session and spring-security.\r\nThe problem occured during version upgrade.\r\n\r\nTimeout cannot be detected in version A.\r\nPreviously, we have used spring-session and spring-security combination of version B.\r\n\r\nversion A\r\nspring-boot-starter-redis:2.0.4.RELEASE\r\nspring-session-data-redis:2.0.5.RELEASE\r\n- spring-session-core: 2.0.5.RELEASE\r\nspring-security-web:5.0.7.RELEASE\r\n\r\nversion B\r\nspring-boot-starter-redis:1.5.7.RELEASE\r\nspring-session: 1.3.1.RELEASE\r\nspring-security-web: 4.2.4.RELEASE\r\n\r\nIn version B, `SessionManagementFilter.dofilter()` of Spring Security was able to detect the timeout but,\r\ntimeout cannot be detected in version A.\r\n\r\n`SessionManagementFilter.dofilter()`\r\n\r\n```\r\n                if (request.getRequestedSessionId() != null\r\n                        && !request.isRequestedSessionIdValid()) {\r\n                    if (logger.isDebugEnabled()) {\r\n                        logger.debug(\"Requested session ID \"\r\n                                + request.getRequestedSessionId() + \" is invalid.\");\r\n                    }\r\n\r\n                    if (invalidSessionStrategy != null) {\r\n                        invalidSessionStrategy\r\n                                .onInvalidSessionDetected(request, response);\r\n                        return;\r\n                    }\r\n                }\r\n```\r\n\r\nWe think that the return value of `request.getRequestedSessionId()` is different for each version.\r\n\u203b`SessionRepositoryFilter$SessionRepositoryRequestWrapper.getRequestedSessionId()`\r\n\r\nversion A : null\r\nversion B : session ID\r\n\r\nDoes it work as planned ?\r\nCould you tell me how to detect the timeout ?\r\n", "url": "https://github.com/spring-projects/spring-session/issues/1229", "user": "btkukinom", "labels": ["in: core", "type: bug"], "created": "2018-10-24 05:03:14", "closed": "2018-10-26 17:57:19", "commits": {"717e16cb7168cca2e0b76fb5373aab546f161ee6": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "717e16cb7168cca2e0b76fb5373aab546f161ee6", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["5f1b7d67223c019678c9e679c080ef436ec6f58c"], "nameRev": "717e16cb7168cca2e0b76fb5373aab546f161ee6 tags/2.1.1.RELEASE~4", "commitMessage": "Ensure HttpServletRequest#getRequestedSessionId API is respected\n\nHttpSessionIdResolver supports resolving multiple requested session ids associated with the request - as a consequence, we need to validate the existence of requested session before returning the id. However, if no presented session ids do validate the null is returned, which violates the HttpServletRequest#getRequestedSessionId API.\n\nThis commit ensures that if no presented session ids are valid, we respect the HttpServletRequest#getRequestedSessionId API by returning first requested session id.\n\nResolves: #1229\n", "commitDateTime": "2018-10-26 19:55:37", "authoredDateTime": "2018-10-26 19:34:53", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 11, "deletions": 3, "lines": 14}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 23, "deletions": 0, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestedSessionId()", "TOT": 6, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.clearRequestedSessionCache()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestedSession()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate()", "TOT": 12, "UPD": 3, "INS": 1, "MOV": 8, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions()", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionRetrievalIsCached()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindListener()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindListenerThenUnbind()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindSameListenerTwice()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindListenerOverwrite()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindThrowsException()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindListenerThenUnbindThrowsException()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().81", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().78", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().80", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().83", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().84", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().79", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().82", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionRetrievalIsCached().87", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindListener().88", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindListenerThenUnbind().89", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindSameListenerTwice().90", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindListenerOverwrite().91", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindThrowsException().92", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.bindingListenerBindListenerThenUnbindThrowsException().93", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).94", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).95", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().81.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionUpdates()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionIdForInvalidSession().78.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().80.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionCreation()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["717e16cb7168cca2e0b76fb5373aab546f161ee6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 11, "deletions": 3, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 10, "UPD": 0, "INS": 6, "MOV": 2, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.clearRequestedSessionCache()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestedSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getRequestedSessionId()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper"]}, {"title": "Configure default LobHandler to use temporary LOBs on Oracle", "body": "Backport of #1203.", "url": "https://github.com/spring-projects/spring-session/issues/1212", "user": "vpavic", "labels": ["in: jdbc", "type: backport", "type: bug"], "created": "2018-09-26 04:06:52", "closed": "2018-09-26 15:52:09", "commits": {"46bac131d0f301a760cfa03d5a5a735e4a21e4ff": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "46bac131d0f301a760cfa03d5a5a735e4a21e4ff", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["96752787299c2352cde8d811b63270dce1da2187"], "nameRev": "46bac131d0f301a760cfa03d5a5a735e4a21e4ff tags/1.3.4.RELEASE~6", "commitMessage": "Configure default LobHandler to use temporary LOBs on Oracle\n\nJdbcOperationsSessionRepository recently introduced validation when inserting new session attributes in order to prevent data integrity violations in highly concurrent environments. This is done by using INSERT INTO ... SELECT statement to verify existence of session record in parent table. Such arrangement causes problems with Oracle if inserted attribute is of size 4 kb or more.\n\nThis commit enhances JdbcHttpSessionConfiguration to detect Oracle database is used, and set createTemporaryLob option on default LobHandler to true.\n\nResolves: #1212\n", "commitDateTime": "2018-09-26 06:36:06", "authoredDateTime": "2018-09-25 18:45:02", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.java", "insertions": 22, "deletions": 4, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveWithLargeAttribute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcOperations,org.springframework.transaction.PlatformTransactionManager)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.requiresTemporaryLob(javax.sql.DataSource)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["46bac131d0f301a760cfa03d5a5a735e4a21e4ff"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 22, "deletions": 4, "lines": 26, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 6, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/jdbc/config/annotation"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.requiresTemporaryLob(javax.sql.DataSource)", "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcOperations,org.springframework.transaction.PlatformTransactionManager)", "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager)"]}, {"title": "Fix remember-me support documentation", "body": "Backport of #1157.", "url": "https://github.com/spring-projects/spring-session/issues/1211", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2018-09-26 04:05:21", "closed": "2018-09-26 15:52:17", "commits": {"96752787299c2352cde8d811b63270dce1da2187": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "96752787299c2352cde8d811b63270dce1da2187", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["f0c216d9d55455573aceab0edbdd9624f0e3a577"], "nameRev": "96752787299c2352cde8d811b63270dce1da2187 tags/1.3.4.RELEASE~7", "commitMessage": "Fix SpringSessionRememberMeServices documentation example\n\nResolves: #1211\n", "commitDateTime": "2018-09-26 06:08:57", "authoredDateTime": "2018-09-21 19:05:33", "commitGitStats": [{"filePath": "docs/src/test/java/docs/security/RememberMeSecurityConfiguration.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RememberMeSecurityConfiguration.java", "spoonMethods": [{"spoonMethodName": "docs.security.RememberMeSecurityConfiguration.rememberMeServices()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["96752787299c2352cde8d811b63270dce1da2187"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": ["docs.security.RememberMeSecurityConfiguration.rememberMeServices()"]}, {"title": "Fix remember-me support documentation", "body": "Backport of #1157.", "url": "https://github.com/spring-projects/spring-session/issues/1210", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2018-09-25 17:23:42", "closed": "2018-09-25 17:40:16", "commits": {"5944648c250152424424c23ce0fbd10466ad3630": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5944648c250152424424c23ce0fbd10466ad3630", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["4502724e8c31dc16d5ae8e7019f3a1d8c44681a9"], "nameRev": "5944648c250152424424c23ce0fbd10466ad3630 tags/2.0.7.RELEASE~10", "commitMessage": "Fix SpringSessionRememberMeServices documentation example\n\nResolves: #1210\n", "commitDateTime": "2018-09-25 19:27:39", "authoredDateTime": "2018-09-21 19:05:33", "commitGitStats": [{"filePath": "docs/src/test/java/docs/security/RememberMeSecurityConfiguration.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RememberMeSecurityConfiguration.java", "spoonMethods": [{"spoonMethodName": "docs.security.RememberMeSecurityConfiguration.rememberMeServices()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5944648c250152424424c23ce0fbd10466ad3630"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": ["docs.security.RememberMeSecurityConfiguration.rememberMeServices()"]}, {"title": "Configure default LobHandler to use temporary LOBs on Oracle", "body": "Backport of #1203.", "url": "https://github.com/spring-projects/spring-session/issues/1208", "user": "vpavic", "labels": ["in: jdbc", "type: backport", "type: bug"], "created": "2018-09-25 17:17:46", "closed": "2018-09-25 17:40:24", "commits": {"dc4a0ce61b1ff53ea077951fe8c3ac6a4805e2a4": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dc4a0ce61b1ff53ea077951fe8c3ac6a4805e2a4", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["5944648c250152424424c23ce0fbd10466ad3630"], "nameRev": "dc4a0ce61b1ff53ea077951fe8c3ac6a4805e2a4 tags/2.0.7.RELEASE~9", "commitMessage": "Configure default LobHandler to use temporary LOBs on Oracle\n\nJdbcOperationsSessionRepository recently introduced validation when inserting new session attributes in order to prevent data integrity violations in highly concurrent environments. This is done by using INSERT INTO ... SELECT statement to verify existence of session record in parent table. Such arrangement causes problems with Oracle if inserted attribute is of size 4 kb or more.\n\nThis commit enhances JdbcHttpSessionConfiguration to detect Oracle database is used, and set createTemporaryLob option on default LobHandler to true.\n\nResolves: #1208\n", "commitDateTime": "2018-09-25 19:30:09", "authoredDateTime": "2018-09-25 18:45:02", "commitGitStats": [{"filePath": "spring-session-jdbc/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "spring-session-jdbc/src/main/java/org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.java", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveWithLargeAttribute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.requiresTemporaryLob(javax.sql.DataSource)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dc4a0ce61b1ff53ea077951fe8c3ac6a4805e2a4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 0, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-jdbc/src/main/java/org/springframework/session/jdbc/config/annotation"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.requiresTemporaryLob(javax.sql.DataSource)", "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository()"]}, {"title": "spring-session-jdbc ORA-01461 on save session attributes", "body": "Spring Session JDBC worked with 2.0.5.RELEASE, is now broken with 2.0.6.RELEASE due to code change resulting from issue https://github.com/spring-projects/spring-session/issues/1031\r\n\r\nWe are using Oracle Enterprise Edition 11.2.0.4.v16 on AWS RDS and the new query yields an error:\r\n\r\nORA-01461: can bind a LONG value only for insert into a LONG column\r\n\r\nfrom org.springframework.session.jdbc.JdbcOperationsSessionRepository:\r\n\r\nOld Working Query:\r\n\tprivate static final String CREATE_SESSION_ATTRIBUTE_QUERY =\r\n\t\t\t\"INSERT INTO %TABLE_NAME%_ATTRIBUTES(SESSION_PRIMARY_ID, ATTRIBUTE_NAME, ATTRIBUTE_BYTES) (?, ?, ?)\";\r\n\r\nNew Broken Query:\r\n\tprivate static final String CREATE_SESSION_ATTRIBUTE_QUERY =\r\n\t\t\t\"INSERT INTO %TABLE_NAME%_ATTRIBUTES(SESSION_PRIMARY_ID, ATTRIBUTE_NAME, ATTRIBUTE_BYTES) \" +\r\n\t\t\t\t\t\"SELECT PRIMARY_ID, ?, ? \" +\r\n\t\t\t\t\t\"FROM %TABLE_NAME% \" +\r\n\t\t\t\t\t\"WHERE SESSION_ID = ?\";\r\n\r\n\r\n\r\nMy hypothesis is that while binding a blob or clob in to a table works fine, when you bind it to a fictional table created as the result set of \"select literal from ...\" the type of that BLOB literal gets modified by oracle for backwards compatability to the 'LONG' type which it then cannot use for inserting into the other table.  perhaps add a type cast letting the fictional table know what type it is supposed to be?\r\n\r\nThank You", "url": "https://github.com/spring-projects/spring-session/issues/1203", "user": "benwynn", "labels": ["in: jdbc", "type: bug"], "created": "2018-09-19 15:17:05", "closed": "2018-09-25 17:16:23", "commits": {"93aee206fbc20c849559fd512aef333489e36c46": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "93aee206fbc20c849559fd512aef333489e36c46", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["3df3b30117a44b801c052210a5395ad6c4bdd6d2"], "nameRev": "93aee206fbc20c849559fd512aef333489e36c46 tags/2.1.0.RELEASE~12", "commitMessage": "Configure default LobHandler to use temporary LOBs on Oracle\n\nJdbcOperationsSessionRepository recently introduced validation when inserting new session attributes in order to prevent data integrity violations in highly concurrent environments. This is done by using INSERT INTO ... SELECT statement to verify existence of session record in parent table. Such arrangement causes problems with Oracle if inserted attribute is of size 4 kb or more.\n\nThis commit enhances JdbcHttpSessionConfiguration to detect Oracle database is used, and set createTemporaryLob option on default LobHandler to true.\n\nResolves: #1203\nSee also: #1031\n", "commitDateTime": "2018-09-25 18:45:02", "authoredDateTime": "2018-09-25 18:45:02", "commitGitStats": [{"filePath": "spring-session-jdbc/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "spring-session-jdbc/src/main/java/org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.java", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveWithLargeAttribute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.requiresTemporaryLob(javax.sql.DataSource)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "Ensure RedisHttpSessionConfiguration handles events for configured database", "body": "Backport of #1128.", "url": "https://github.com/spring-projects/spring-session/issues/1193", "user": "vpavic", "labels": ["in: redis", "type: backport", "type: bug"], "created": "2018-09-12 22:43:49", "closed": "2018-09-13 18:58:49", "commits": {"7c6b143964ced894c600e9be29dcf49401195ae2": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7c6b143964ced894c600e9be29dcf49401195ae2", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["39c640f456a1ea4c7e421864435eb5c064c2cb7b"], "nameRev": "7c6b143964ced894c600e9be29dcf49401195ae2 tags/2.0.7.RELEASE~14", "commitMessage": "Ensure RedisHttpSessionConfiguration handles events for configured database\n\nAt present, RedisHttpSessionConfiguration doesn't take into account database index when handlng events. In situations where multiple apps use Spring Session with same Redis instance, but different database, this results in invalid session events.\n\nThis commits improves event handling in RedisHttpSessionConfiguration to ensure currently used database is considered.\n\nCloses gh-1193\n", "commitDateTime": "2018-09-13 18:23:59", "authoredDateTime": "2018-09-13 18:23:21", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 61, "deletions": 9, "lines": 70}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 21, "deletions": 3, "lines": 24}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 88, "deletions": 22, "lines": 110}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByPrincipalNameExpireRemovesIndex()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findBySecurityPrincipalNameExpireRemovesIndex()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getExpiredKeyPrefix()", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionCreatedChannelPrefix()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.setDatabase(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionDeletedChannel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionExpiredChannel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.setRedisKeyNamespace(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.redisMessageListenerContainer()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.resolveDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.sessionRepository()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreated()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreatedCustomSerializer()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageDeletedSessionFound()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageDeletedSessionNotFound()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageExpiredSessionFound()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageExpiredSessionNotFound()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreatedInOtherDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageDeletedInOtherDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageExpiredInOtherDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7c6b143964ced894c600e9be29dcf49401195ae2"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 82, "deletions": 12, "lines": 94, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 31, "UPD": 9, "INS": 16, "MOV": 5, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config", "spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository", "org.springframework.session.data.redis.RedisOperationsSessionRepository.setRedisKeyNamespace(java.lang.String)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionDeletedChannel()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.sessionRepository()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.resolveDatabase()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getExpiredKeyPrefix()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.setDatabase(int)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionCreatedChannelPrefix()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionExpiredChannel()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.redisMessageListenerContainer()"]}, {"title": "Verify session existence before update in ReactiveRedisOperationsSessionRepository", "body": "Backport of #1111.", "url": "https://github.com/spring-projects/spring-session/issues/1185", "user": "vpavic", "labels": ["in: redis", "type: backport", "type: bug"], "created": "2018-09-09 22:02:24", "closed": "2018-09-09 22:13:00", "commits": {"7e8f500df0962576bad2300156dbc4c883a09701": {"commitGHEventType": "referenced", "commitUser": "vpavic"}, "ff10709f18456063cae84948445816f4358dc872": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7e8f500df0962576bad2300156dbc4c883a09701", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["b27742ce3eabcc0c1be77b8d423ae8d32a73060d"], "nameRev": "7e8f500df0962576bad2300156dbc4c883a09701 tags/2.0.6.RELEASE~5", "commitMessage": "Verify session existence before update in ReactiveRedisOperationsSessionRepository\n\nCurrently, ReactiveRedisOperationsSessionRepository#save does not ensure session's existence before executing update. This can result in an invalid session record in Redis, since write use only delta, and in turn to error while retrieving the invalid session record.\n\nThis commit adds check for session existence if session is being updated.\n\nCloses gh-1185\n", "commitDateTime": "2018-09-10 00:04:06", "authoredDateTime": "2018-09-07 07:46:29", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryITests.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 34, "deletions": 26, "lines": 60}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryTests.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryITests.changeSessionSaveOldSessionInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.isNew()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "TOT": 10, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setNew(boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveDelta()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.hasChangedSessionId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveSessionNothingChanged()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveLastAccessChanged()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveSetAttribute()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveRemoveAttribute()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "ff10709f18456063cae84948445816f4358dc872", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["6e471f6441ed9e1bd0e4f16872c20f86c9e16be3"], "nameRev": "ff10709f18456063cae84948445816f4358dc872 tags/2.0.6.RELEASE~2", "commitMessage": "Polish\n\nSee gh-1185\n", "commitDateTime": "2018-09-10 17:16:31", "authoredDateTime": "2018-09-10 17:02:33", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 3, "deletions": 6, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7e8f500df0962576bad2300156dbc4c883a09701", "ff10709f18456063cae84948445816f4358dc872"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 37, "deletions": 32, "lines": 69, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 40, "UPD": 2, "INS": 10, "MOV": 16, "DEL": 12, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveDelta()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.isNew()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.hasChangedSessionId()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setNew(boolean)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)"]}, {"title": "Ignore failed rename operation for deleted session", "body": "Backport of #1137.", "url": "https://github.com/spring-projects/spring-session/issues/1177", "user": "vpavic", "labels": ["in: redis", "type: backport", "type: bug"], "created": "2018-09-04 21:16:29", "closed": "2018-09-04 21:37:18", "commits": {"1079e9e0167de110271ca048d29a23fcaa8e76a0": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1079e9e0167de110271ca048d29a23fcaa8e76a0", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["5fa52be8d1e8db715419b3ca46e0972e89563201"], "nameRev": "1079e9e0167de110271ca048d29a23fcaa8e76a0 tags/2.0.6.RELEASE~10", "commitMessage": "Ignore failed rename operation for deleted session\n\nAttempting to change session id for a deleted session currently results in \"ERR no such key\" error on rename operation of expired key. This commit addressed the problem by ignoring the aforementioned error.\n\nCloses #1177\n", "commitDateTime": "2018-09-04 23:18:07", "authoredDateTime": "2018-09-04 00:34:44", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 12, "deletions": 2, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.changeSessionIdWhenSessionIsDeleted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1079e9e0167de110271ca048d29a23fcaa8e76a0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 2, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)"]}, {"title": "Fix settings.gradle on Windows", "body": "Backport of #1167.", "url": "https://github.com/spring-projects/spring-session/issues/1169", "user": "vpavic", "labels": ["in: build", "type: backport", "type: bug"], "created": "2018-08-22 18:35:41", "closed": "2018-08-22 18:37:39", "commits": {"748ba70a013037a45d77b1559c935523be7f9f1b": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "748ba70a013037a45d77b1559c935523be7f9f1b", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["dc1c7cdf02f9c5d912304e0a95ae5050d9780191"], "nameRev": "748ba70a013037a45d77b1559c935523be7f9f1b tags/2.0.6.RELEASE~15", "commitMessage": "Fix settings.gradle on Windows\n\nFixes: gh-1169\n", "commitDateTime": "2018-08-22 20:36:08", "authoredDateTime": "2018-08-22 17:23:15", "commitGitStats": [{"filePath": "settings.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["748ba70a013037a45d77b1559c935523be7f9f1b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": [""]}, {"title": "Fix settings.gradle on Windows", "body": "Similar to spring-projects/spring-security-oauth2-boot#37", "url": "https://github.com/spring-projects/spring-session/issues/1167", "user": "rwinch", "labels": ["in: build", "type: bug"], "created": "2018-08-22 15:22:55", "closed": "2018-08-22 15:23:36", "commits": {"1fc0162fe9fcbd857755fcf6e86203b7802fdb92": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1fc0162fe9fcbd857755fcf6e86203b7802fdb92", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["9df259b1ae12a87ba3476a7748d9b42f98cf433e"], "nameRev": "1fc0162fe9fcbd857755fcf6e86203b7802fdb92 tags/2.1.0.M3~18", "commitMessage": "Fix settings.gradle on Windows\n\nFixes: gh-1167\n", "commitDateTime": "2018-08-22 10:23:29", "authoredDateTime": "2018-08-22 10:23:15", "commitGitStats": [{"filePath": "settings.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1fc0162fe9fcbd857755fcf6e86203b7802fdb92"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": [""]}, {"title": "Documentation on remember-me support misses out on CookieSerializer bean configuration", "body": "The documentation on [remember-me support](https://docs.spring.io/spring-session/docs/current/reference/html/spring-security.html#spring-security-rememberme) fails to display the required configuration of the CookieSerializer bean.\r\n\r\nFor remember-me to work one has to configure a DefaultCookieSerializer like this (note that code is in kotlin):\r\n\r\n````kotlin\r\n@Bean\r\nfun cookieSerializer() = DefaultCookieSerializer().apply {\r\n  setRememberMeRequestAttribute(SpringSessionRememberMeServices.REMEMBER_ME_LOGIN_ATTR)\r\n}\r\n````\r\n\r\nOtherwise the cookies lifetime is undefined and therefore will be removed when the browser is closed.", "url": "https://github.com/spring-projects/spring-session/issues/1157", "user": "jbollacke", "labels": ["in: docs", "type: bug"], "created": "2018-08-15 14:03:13", "closed": "2018-09-21 17:29:52", "commits": {"58ae28b0a0cc02cce3d52f89f52630be537164de": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 37.000277777777775, "commitsDetails": [{"commitHash": "58ae28b0a0cc02cce3d52f89f52630be537164de", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["3e98ecf2340a8acca467a2ed0c7307d3d17074bb"], "nameRev": "58ae28b0a0cc02cce3d52f89f52630be537164de tags/2.1.0.RC1~2", "commitMessage": "Fix SpringSessionRememberMeServices documentation example\n\nResolves: #1157\n", "commitDateTime": "2018-09-21 19:05:33", "authoredDateTime": "2018-09-21 19:05:33", "commitGitStats": [{"filePath": "docs/src/test/java/docs/security/RememberMeSecurityConfiguration.java", "insertions": 1, "deletions": 2, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RememberMeSecurityConfiguration.java", "spoonMethods": [{"spoonMethodName": "docs.security.RememberMeSecurityConfiguration.rememberMeServices()", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["58ae28b0a0cc02cce3d52f89f52630be537164de"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": ["docs.security.RememberMeSecurityConfiguration.rememberMeServices()"]}, {"title": "Insert of JDBC session attribute fails if concurrent request deletes session", "body": "Backport of #1031.", "url": "https://github.com/spring-projects/spring-session/issues/1153", "user": "vpavic", "labels": ["in: jdbc", "type: backport", "type: bug"], "created": "2018-08-09 21:30:11", "closed": "2018-08-13 06:48:56", "commits": {"cb6f7fdfa6b7ebf29b67b7640aa9493254127d70": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "cb6f7fdfa6b7ebf29b67b7640aa9493254127d70", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["b50a4e247eb18cc7e8218ac0b0ba3a7e9295ab79"], "nameRev": "cb6f7fdfa6b7ebf29b67b7640aa9493254127d70 tags/1.3.4.RELEASE~9", "commitMessage": "Insert new attributes conditionally in JDBC repo\n\nAt present, the insert of new attributes in JdbcOperationsSessionRepository is done unconditionally. This can cause data integrity violation errors with concurrent requests, where one request attempts to add new session attribute while the other, concurrent request, deletes the session.\n\nThis commit addresses the described scenario by executing insert of new attributes conditionally on presence of parent record.\n\nCloses gh-1153\n", "commitDateTime": "2018-08-13 08:21:34", "authoredDateTime": "2018-08-13 06:28:42", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveDeleted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveDeletedAddAttribute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.save(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession).1.doInTransactionWithoutResult(org.springframework.transaction.TransactionStatus).2.setValues(java.sql.PreparedStatement,int)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.save(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession).2.doInTransactionWithoutResult(org.springframework.transaction.TransactionStatus).4.setValues(java.sql.PreparedStatement)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cb6f7fdfa6b7ebf29b67b7640aa9493254127d70"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 7, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 13, "UPD": 5, "INS": 2, "MOV": 6, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/jdbc"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.save(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession).1.doInTransactionWithoutResult(org.springframework.transaction.TransactionStatus).2.setValues(java.sql.PreparedStatement,int)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.save(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession).2.doInTransactionWithoutResult(org.springframework.transaction.TransactionStatus).4.setValues(java.sql.PreparedStatement)"]}, {"title": "Insert of JDBC session attribute fails if concurrent request deletes session", "body": "Backport of #1031.", "url": "https://github.com/spring-projects/spring-session/issues/1151", "user": "vpavic", "labels": ["in: jdbc", "type: backport", "type: bug"], "created": "2018-08-09 21:22:18", "closed": "2018-08-13 06:48:08", "commits": {"3a972bef767b1d9286b61d8e4a6b02f869fa00d4": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "3a972bef767b1d9286b61d8e4a6b02f869fa00d4", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["6b7fc3af088111014a40a78bcc942390df2f2109"], "nameRev": "3a972bef767b1d9286b61d8e4a6b02f869fa00d4 tags/2.0.6.RELEASE~17", "commitMessage": "Insert new attributes conditionally in JDBC repo\n\nAt present, the insert of new attributes in JdbcOperationsSessionRepository is done unconditionally. This can cause data integrity violation errors with concurrent requests, where one request attempts to add new session attribute while the other, concurrent request, deletes the session.\n\nThis commit addresses the described scenario by executing insert of new attributes conditionally on presence of parent record.\n\nCloses gh-1151\n", "commitDateTime": "2018-08-13 08:36:08", "authoredDateTime": "2018-08-13 06:28:42", "commitGitStats": [{"filePath": "spring-session-jdbc/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "spring-session-jdbc/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveDeleted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveDeletedAddAttribute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).4.setValues(java.sql.PreparedStatement,int)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3a972bef767b1d9286b61d8e4a6b02f869fa00d4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 7, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 12, "UPD": 6, "INS": 2, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-jdbc/src/main/java/org/springframework/session/jdbc"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).4.setValues(java.sql.PreparedStatement,int)"]}, {"title": "ERR no such key when RedisOperationsSessionRepository.saveChangeSessionId called", "body": "Hi,\r\n\r\nI'm using following versions: \r\ncompile group: \"org.springframework.session\", name: \"spring-session-core\", version: \"2.0.4.RELEASE\"\r\ncompile group: \"org.springframework.session\", name: \"spring-session-data-redis\", version: \"2.0.4.RELEASE\"\r\n\r\nGot this exception during integration testing:\r\n\r\n```\r\norg.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: ERR no such key\r\nat org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54)\r\nat org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:52)\\\r\nat org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41)\r\nat org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:44)\r\nat org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:42)\r\nat org.springframework.data.redis.connection.lettuce.LettuceConnection.convertLettuceAccessException(LettuceConnection.java:257)\r\nat org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.convertLettuceAccessException(LettuceKeyCommands.java:650)\r\nat org.springframework.data.redis.connection.lettuce.LettuceKeyCommands.rename(LettuceKeyCommands.java:249)\r\nat org.springframework.data.redis.connection.lettuce.LettuceClusterKeyCommands.rename(LettuceClusterKeyCommands.java:119)\r\nat org.springframework.data.redis.connection.DefaultedRedisConnection.rename(DefaultedRedisConnection.java:96)\r\nat org.springframework.data.redis.core.RedisTemplate.lambda$rename$13(RedisTemplate.java:889)\r\nat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:224)\r\nat org.springframework.data.redis.core.RedisTemplate.execute(RedisTemplate.java:184)\r\nat org.springframework.data.redis.core.RedisTemplate.rename(RedisTemplate.java:888)\r\nat org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.saveChangeSessionId(RedisOperationsSessionRepository.java:815)\r\nat org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.saveDelta(RedisOperationsSessionRepository.java:772)\r\nat org.springframework.session.data.redis.RedisOperationsSessionRepository$RedisSession.access$000(RedisOperationsSessionRepository.java:649)\r\nat org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:384)\r\nat org.springframework.session.data.redis.RedisOperationsSessionRepository.save(RedisOperationsSessionRepository.java:245)\r\nat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:234)\r\nat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197)\r\nat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryResponseWrapper.onResponseCommitted(SessionRepositoryFilter.java:185)\r\nat org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted(OnCommittedResponseWrapper.java:227)\r\nat org.springframework.session.web.http.OnCommittedResponseWrapper.access$000(OnCommittedResponseWrapper.java:38)\r\nat org.springframework.session.web.http.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:494)\r\nat org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514)\r\nat com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100)\r\nat com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915)\r\nat org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)\r\nat org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102)\r\nat org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:271)\r\nat org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:218)\r\nat org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)\r\nat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119)\r\nat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:870)\r\nat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:776)\r\nat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\nat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)\r\nat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)\r\nat ....\r\n```\r\n", "url": "https://github.com/spring-projects/spring-session/issues/1137", "user": "yevgenb", "labels": ["in: redis", "type: bug"], "created": "2018-07-27 17:23:08", "closed": "2018-09-04 21:15:04", "commits": {"d3134ad065af9e8bf10906c6e82710236be3691d": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 39.000277777777775, "commitsDetails": [{"commitHash": "d3134ad065af9e8bf10906c6e82710236be3691d", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["6208d0298d71c6356975614b05c2b591a4a4fc82"], "nameRev": "d3134ad065af9e8bf10906c6e82710236be3691d tags/2.1.0.M3~9", "commitMessage": "Ignore failed rename operation for deleted session\n\nAttempting to change session id for a deleted session currently results in \"ERR no such key\" error on rename operation of expired key. This commit addressed the problem by ignoring the aforementioned error.\n\nCloses #1137\n", "commitDateTime": "2018-09-04 23:07:27", "authoredDateTime": "2018-09-04 00:34:44", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 16, "deletions": 0, "lines": 16}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 12, "deletions": 2, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.changeSessionIdWhenSessionIsDeleted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d3134ad065af9e8bf10906c6e82710236be3691d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 2, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)"]}, {"title": "Ensure Session#getAttributeNames implementations return a copy", "body": "Backport of #1120.", "url": "https://github.com/spring-projects/spring-session/issues/1129", "user": "vpavic", "labels": ["type: backport", "type: bug"], "created": "2018-07-18 21:40:07", "closed": "2018-08-02 17:40:58", "commits": {"b778d97dc757dd0f470f8dc0ee7dc160bbe40b45": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "b778d97dc757dd0f470f8dc0ee7dc160bbe40b45", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["d0887fe40d3ea8431b5e33c4db09dcd90b894e5c"], "nameRev": "b778d97dc757dd0f470f8dc0ee7dc160bbe40b45 tags/1.3.4.RELEASE~15", "commitMessage": "Ensure Session#getAttributeNames implementations return a copy\n\nCurrently, Session#getAttributeNames implementations, by delegating to MapSession, all return a session attribute map's key set. This causes ConcurrentModificationException when an attempt to modify session attributes is made while iterating over the returned attribute names.\n\nCloses gh-1129\n", "commitDateTime": "2018-08-02 18:59:29", "authoredDateTime": "2018-07-17 15:05:03", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/MapSession.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "spring-session/src/test/java/org/springframework/session/MapSessionRepositoryTests.java", "insertions": 15, "deletions": 1, "lines": 16}, {"filePath": "spring-session/src/test/java/org/springframework/session/MapSessionTests.java", "insertions": 13, "deletions": 1, "lines": 14}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "spring-session/src/test/java/org/springframework/session/hazelcast/HazelcastSessionRepositoryTests.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "spring-session/src/test/java/org/springframework/session/jdbc/JdbcOperationsSessionRepositoryTests.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MapSession.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.MapSession.getAttributeNames()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MapSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.MapSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapSessionTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.MapSessionTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b778d97dc757dd0f470f8dc0ee7dc160bbe40b45"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session"], "changesInPackagesSPOON": ["org.springframework.session.MapSession.getAttributeNames()"]}, {"title": "spring-session-data-redis-2.0.4 produces WARN messages when using multiple redis databases", "body": "spring-session-data-redis-2.0.4 produces WARN messages when using multiple redis databases\r\n\r\nWe are using spring-session-data-redis-2.0.4, as part of spring-boot 2.0.3, on redis 2.x,3.x,4.x.  For our development servers we are using different redis databases per instance for our session caches.  \r\n\r\nIn spring-session-data-redis-1.x the warning message is not present in the RedisOperationsSessionRepository.onMessage method.  This was added in 2.+.\r\n\r\nSince messages are not filtered per db we get all key event messages regardless of the database.  The listener that is constructed listens for ALL del, expire, and create messages.\r\n\r\nWhat is troubling here, is for events from other dbs spring-session is throwing SessionCreatedEvents with null session objects, which is not correct.  For the del/expire case, the warning message is logged, but the events are not created, which I think is less wrong, but still wrong.\r\n\r\nWhen registering the listener in RedisHttpSessionConfiguration, we CAN filter on the database for del/expire messages if we add the database in this configuration, but I don't see a way to filter on the create messages, which could be problematic.\r\n\r\nFor now I am just setting logging to ERROR for this class, to avoid filling my disks, because we don't use these events, and its a non issue, for us.\r\n\r\nRepro Steps:\r\nConnect app1 to redis db0\r\nConnect app2 to redis db1\r\ncreate and delete a session on app1\r\nnotice WARN message in app2\r\n\r\nNOTE: make sure key events are enabled.\r\n\r\nThanks in advance,\r\n\r\n- Joe", "url": "https://github.com/spring-projects/spring-session/issues/1128", "user": "joevalerio", "labels": ["in: redis", "type: bug"], "created": "2018-07-17 21:24:15", "closed": "2018-09-12 21:12:28", "commits": {"5d0775b802514da469e43fa00d9cdd58f238b30e": {"commitGHEventType": "closed", "commitUser": "vpavic"}, "1a3da5944d8958540e2de62bb20091b842f0bf12": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 56.000277777777775, "commitsDetails": [{"commitHash": "5d0775b802514da469e43fa00d9cdd58f238b30e", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["603a2581724350187c8df24df69343d955314281"], "nameRev": "5d0775b802514da469e43fa00d9cdd58f238b30e tags/2.1.0.RC1~25", "commitMessage": "Ensure RedisHttpSessionConfiguration handles events for configured database\n\nAt present, RedisHttpSessionConfiguration doesn't take into account database index when handlng events. In situations where multiple apps use Spring Session with same Redis instance, but different database, this results in invalid session events.\n\nThis commits improves event handling in RedisHttpSessionConfiguration to ensure currently used database is considered.\n\nCloses gh-1128\n", "commitDateTime": "2018-09-12 23:07:52", "authoredDateTime": "2018-09-10 16:16:00", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 9, "deletions": 6, "lines": 15}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 52, "deletions": 9, "lines": 61}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 21, "deletions": 3, "lines": 24}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 88, "deletions": 22, "lines": 110}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByPrincipalNameExpireRemovesIndex()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findBySecurityPrincipalNameExpireRemovesIndex()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 2}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getExpiredKeyPrefix()", "TOT": 9, "UPD": 4, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionCreatedChannelPrefix()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.setDatabase(int)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionDeletedChannel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionExpiredChannel()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.setRedisKeyNamespace(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.redisMessageListenerContainer()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.resolveDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.sessionRepository()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreated()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreatedCustomSerializer()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 3}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageDeletedSessionFound()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageDeletedSessionNotFound()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageExpiredSessionFound()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageExpiredSessionNotFound()", "TOT": 7, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreatedInOtherDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageDeletedInOtherDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageExpiredInOtherDatabase()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "1a3da5944d8958540e2de62bb20091b842f0bf12", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["5d0775b802514da469e43fa00d9cdd58f238b30e"], "nameRev": "1a3da5944d8958540e2de62bb20091b842f0bf12 tags/2.1.0.RC1~24", "commitMessage": "Polish\n\nSee gh-1128\n", "commitDateTime": "2018-09-13 08:55:13", "authoredDateTime": "2018-09-13 08:55:13", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 6, "deletions": 2, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5d0775b802514da469e43fa00d9cdd58f238b30e", "1a3da5944d8958540e2de62bb20091b842f0bf12"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 79, "deletions": 14, "lines": 93, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 33, "UPD": 9, "INS": 16, "MOV": 7, "DEL": 1, "spoonFilesChanged": 2, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis", "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])", "org.springframework.session.data.redis.RedisOperationsSessionRepository", "org.springframework.session.data.redis.RedisOperationsSessionRepository.setRedisKeyNamespace(java.lang.String)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionDeletedChannel()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.sessionRepository()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.resolveDatabase()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getExpiredKeyPrefix()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.setDatabase(int)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionCreatedChannelPrefix()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.getSessionExpiredChannel()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.redisMessageListenerContainer()"]}, {"title": "Clearing attributes of Redis backed WebSession results in ConcurrentModificationException", "body": "This can be demonstrated with a simple controller handler like this one:\r\n\r\n```java\r\n@GetMapping(path = \"/clear\")\r\npublic Rendering clear(WebSession session) {\r\n\tsession.getAttributes().clear();\r\n\treturn Rendering.redirectTo(\"/\").build();\r\n}\r\n```\r\n\r\nThe cause is in `SpringSessionWebSessionStore.SpringSessionMap#clear` method, where `Session#getAttributeNames` are iterated and removed, which causes the `ConcurrentModificationException`. This naturally means that the same behavior can be observed with any `SessionRepository` implementation when working directly against `Session` in a similar fashion (i.e. iterate attribute names and remove). What makes this more of a problem with `WebSession` is the fact that it provides `WebSession#getAttributes` whereas Servlet counterpart i.e. `HttpSession` does not.\r\n\r\nWhat are your thoughts on this @rwinch? This affects basically all `Session` implementations in this repo, since they all delegate `Session#getAttributeNames` to `MapSession` which simply returns a key set:\r\n\r\nhttps://github.com/spring-projects/spring-session/blob/dba475c48fc2cc6cce28614620f35704bb62e7a9/spring-session-core/src/main/java/org/springframework/session/MapSession.java#L178-L181\r\n\r\nInterestingly, Spring Session Data MongoDB's `MongoSession` isn't affected since it does not delegate to `MapSession` and does the following:\r\n\r\n```java\r\npublic Set<String> getAttributeNames() {\r\n\r\n\tHashSet<String> result = new HashSet<>();\r\n\r\n\tfor (String key : this.attrs.keySet()) {\r\n\t\tresult.add(uncoverDot(key));\r\n\t}\r\n\r\n\treturn result;\r\n}\r\n```\r\n\r\nArguably, this should be addressed in `MapSession`.", "url": "https://github.com/spring-projects/spring-session/issues/1120", "user": "vpavic", "labels": ["type: bug"], "created": "2018-07-13 16:51:53", "closed": "2018-07-17 13:05:53", "commits": {"936fc853df75ca5f52ca29701343bfd741242836": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "936fc853df75ca5f52ca29701343bfd741242836", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["dba475c48fc2cc6cce28614620f35704bb62e7a9"], "nameRev": "936fc853df75ca5f52ca29701343bfd741242836 tags/2.0.5.RELEASE~12", "commitMessage": "Ensure Session#getAttributeNames implementations return a copy\n\nCurrently, Session#getAttributeNames implementations, by delegating to MapSession, all return a session attribute map's key set. This causes ConcurrentModificationException when an attempt to modify session attributes is made while iterating over the returned attribute names.\n\nCloses gh-1120\n", "commitDateTime": "2018-07-17 15:05:03", "authoredDateTime": "2018-07-17 15:05:03", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/MapSession.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/MapSessionRepositoryTests.java", "insertions": 14, "deletions": 1, "lines": 15}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/MapSessionTests.java", "insertions": 12, "deletions": 0, "lines": 12}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/ReactiveMapSessionRepositoryTests.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryTests.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "spring-session-hazelcast/src/test/java/org/springframework/session/hazelcast/HazelcastSessionRepositoryTests.java", "insertions": 13, "deletions": 0, "lines": 13}, {"filePath": "spring-session-jdbc/src/test/java/org/springframework/session/jdbc/JdbcOperationsSessionRepositoryTests.java", "insertions": 13, "deletions": 0, "lines": 13}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MapSession.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.MapSession.getAttributeNames()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "MapSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.MapSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "MapSessionTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.MapSessionTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveMapSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.ReactiveMapSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.getAttributeNamesAndRemove()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["936fc853df75ca5f52ca29701343bfd741242836"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session"], "changesInPackagesSPOON": ["org.springframework.session.MapSession.getAttributeNames()"]}, {"title": "SpringSessionWebSessionStore doesn't invalidate session before clearing session store", "body": "`SpringSessionWebSessionStore`, or more specifically, its internal `WebSession` implementation does not mark session as invalid before clearing in from the underlying session store.\r\n\r\nThis can cause the subsequent request processing to continue using the old, invalidated session id. See this [StackOverflow question](https://stackoverflow.com/questions/51196009/websession-invalidation-not-working-from-spring-boot-2-0-2) and the supplied sample app.", "url": "https://github.com/spring-projects/spring-session/issues/1114", "user": "vpavic", "labels": ["type: bug"], "created": "2018-07-09 21:50:29", "closed": "2018-07-13 09:04:37", "commits": {"dba475c48fc2cc6cce28614620f35704bb62e7a9": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "dba475c48fc2cc6cce28614620f35704bb62e7a9", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["9956e91b93c5ed8b05010e9e7c49d5dda5cf17c0"], "nameRev": "dba475c48fc2cc6cce28614620f35704bb62e7a9 tags/2.0.5.RELEASE~13", "commitMessage": "Invalidate session before clearing session store\n\nCloses gh-1114\n", "commitDateTime": "2018-07-13 10:50:49", "authoredDateTime": "2018-07-11 23:32:35", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/server/session/SpringSessionWebSessionStore.java", "insertions": 10, "deletions": 2, "lines": 12}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/server/session/SpringSessionWebSessionStoreTests.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpringSessionWebSessionStore.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.SpringSessionWebSession.isExpired()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.State", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.SpringSessionWebSession.invalidate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringSessionWebSessionStoreTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionThenSessionIsNotExpired()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.invalidateSessionThenSessionIsExpired()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dba475c48fc2cc6cce28614620f35704bb62e7a9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 2, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/server/session"], "changesInPackagesSPOON": ["org.springframework.session.web.server.session.SpringSessionWebSessionStore.State", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.SpringSessionWebSession.invalidate()", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.SpringSessionWebSession.isExpired()"]}, {"title": "ReactiveRedisOperationsSessionRepository logout race condition with NullPointerException in findById", "body": "Using Spring Boot 2.0.3 with reactive WebFlux and spring-session-data-redis 2.0.4.\r\n\r\n1. Suppose we have a long-running web request (for example, WebSocket).\r\n2. Execute logout operation while long-running request 1 is still running.\r\n3. Session changes its key in Redis.\r\n4. When request 1 finishes an operation to save session delta will be executed.\r\n5. ReactiveRedisOperationsSessionRepository saves changed fields (for example, lastAccessedTime) USING OLD SESSION KEY.\r\n6. So now we have OLD SESSION KEY back in Redis having only one field: lastAccessedTime.\r\n7. Any new request which uses OLD SESSION KEY fails in ReactiveRedisOperationsSessionRepository.findById with NullPointerException in SessionMapper because all other fields like creationTime are missing.\r\n8. Panic ensues.\r\n\r\nEDIT: Created related Spring Framework issue: https://jira.spring.io/browse/SPR-17051", "url": "https://github.com/spring-projects/spring-session/issues/1111", "user": "haizz", "labels": ["in: redis", "type: bug"], "created": "2018-07-02 14:43:39", "closed": "2018-09-09 22:00:33", "commits": {"6cc4bcd13dd5c432a27f9587412e92b35fa5e98c": {"commitGHEventType": "closed", "commitUser": "vpavic"}, "57955b7d7b8b672a3ce73cb41ec089e791c5f808": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 69.00027777777778, "commitsDetails": [{"commitHash": "6cc4bcd13dd5c432a27f9587412e92b35fa5e98c", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["dc43f5bd2d83ac59722a380b61cd21b1bfc7ed03"], "nameRev": "6cc4bcd13dd5c432a27f9587412e92b35fa5e98c tags/2.1.0.M3~3", "commitMessage": "Verify session existence before update in ReactiveRedisOperationsSessionRepository\n\nCurrently, ReactiveRedisOperationsSessionRepository#save does not ensure session's existence before executing update. This can result in an invalid session record in Redis, since write use only delta, and in turn to error while retrieving the invalid session record.\n\nThis commit adds check for session existence if session is being updated.\n\nCloses gh-1111\n", "commitDateTime": "2018-09-09 23:55:27", "authoredDateTime": "2018-09-07 07:46:29", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryITests.java", "insertions": 24, "deletions": 0, "lines": 24}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 34, "deletions": 26, "lines": 60}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryTests.java", "insertions": 8, "deletions": 0, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryITests.changeSessionSaveOldSessionInstance()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.isNew()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "TOT": 10, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setNew(boolean)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveDelta()", "TOT": 8, "UPD": 0, "INS": 1, "MOV": 3, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 2, "DEL": 3}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.hasChangedSessionId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveSessionNothingChanged()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveLastAccessChanged()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveSetAttribute()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.saveRemoveAttribute()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "57955b7d7b8b672a3ce73cb41ec089e791c5f808", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["d5da38f2e041eac82bfb03dad4a94ba9f5d36748"], "nameRev": "57955b7d7b8b672a3ce73cb41ec089e791c5f808 tags/2.1.0.M3~1", "commitMessage": "Polish\n\nSee gh-1111\n", "commitDateTime": "2018-09-10 17:03:10", "authoredDateTime": "2018-09-10 17:02:33", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 3, "deletions": 6, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "TOT": 10, "UPD": 0, "INS": 2, "MOV": 6, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6cc4bcd13dd5c432a27f9587412e92b35fa5e98c", "57955b7d7b8b672a3ce73cb41ec089e791c5f808"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 37, "deletions": 32, "lines": 69, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 40, "UPD": 2, "INS": 10, "MOV": 16, "DEL": 12, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.save(org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository$RedisSession)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveDelta()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.isNew()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.hasChangedSessionId()", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.setNew(boolean)", "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)"]}, {"title": "HazelcastSessionRepository generates invalid session events", "body": "Since `HazelcastSessionRepository` uses `IMap#remove` and `IMap#set` while handling change session id, this scenario will trigger `EntryRemovedListener#entryRemoved` and `EntryAddedListener#entryAdded` therefore generating invalid session destroyed and session created events.", "url": "https://github.com/spring-projects/spring-session/issues/1077", "user": "vpavic", "labels": ["in: hazelcast", "type: bug"], "created": "2018-05-15 20:31:44", "closed": "2018-06-13 15:07:11", "commits": {"8dac35cf73f7d2d00a09835507dfa2db963f2bb8": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 28.00027777777778, "commitsDetails": [{"commitHash": "8dac35cf73f7d2d00a09835507dfa2db963f2bb8", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["19b8583d65d6cce61121d2f7c912b46d26d35a1f"], "nameRev": "8dac35cf73f7d2d00a09835507dfa2db963f2bb8 tags/2.0.4.RELEASE~3", "commitMessage": "Fix session event handling in HazelcastSessionRepository\n\nPreviously, invoking HttpServletRequest#changeSessionId on session backed by HazelcastSessionRepository generated generated invalid session destroyed and session created events. This was due to use of IMap#remove and IMap#set when handling the change session id.\n\nThis commit improves change session id handling to prevent publishing invalid events by using IMap#delete instead of IMap#remove and keeping track of originally assigned session id.\n\nCloses gh-1077\n", "commitDateTime": "2018-06-13 16:12:28", "authoredDateTime": "2018-05-16 08:31:36", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/MapSession.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "spring-session-hazelcast/src/integration-test/java/org/springframework/session/hazelcast/config/annotation/web/http/EnableHazelcastHttpSessionEventsTests.java", "insertions": 20, "deletions": 1, "lines": 21}, {"filePath": "spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast/HazelcastSessionRepository.java", "insertions": 79, "deletions": 43, "lines": 122}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MapSession.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.MapSession.getOriginalId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnableHazelcastHttpSessionEventsTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.changeSessionIdNoEventTest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.save(org.springframework.session.hazelcast.HazelcastSessionRepository$HazelcastSession)", "TOT": 23, "UPD": 4, "INS": 3, "MOV": 13, "DEL": 3}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.clearFlags()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.changeSessionId()", "TOT": 5, "UPD": 1, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.setMaxInactiveInterval(java.time.Duration)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.setAttribute(java.lang.String,java.lang.Object)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.entryAdded(com.hazelcast.core.EntryEvent)", "TOT": 15, "UPD": 1, "INS": 3, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.entryRemoved(com.hazelcast.core.EntryEvent)", "TOT": 15, "UPD": 1, "INS": 3, "MOV": 8, "DEL": 3}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.setLastAccessedTime(java.time.Instant)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.removeAttribute(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor", "TOT": 10, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 4}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.hasChanges()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.setLastAccessedTime(java.time.Instant)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.setMaxInactiveInterval(java.time.Duration)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.setDelta(java.util.Map)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.process(java.util.Map$Entry)", "TOT": 6, "UPD": 0, "INS": 3, "MOV": 3, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8dac35cf73f7d2d00a09835507dfa2db963f2bb8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 85, "deletions": 44, "lines": 129, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 93, "UPD": 12, "INS": 21, "MOV": 45, "DEL": 15, "spoonFilesChanged": 2, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session", "spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast"], "changesInPackagesSPOON": ["org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.clearFlags()", "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.setLastAccessedTime(java.time.Instant)", "org.springframework.session.hazelcast.HazelcastSessionRepository.save(org.springframework.session.hazelcast.HazelcastSessionRepository$HazelcastSession)", "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.process(java.util.Map$Entry)", "org.springframework.session.hazelcast.HazelcastSessionRepository.entryAdded(com.hazelcast.core.EntryEvent)", "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.setLastAccessedTime(java.time.Instant)", "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.changeSessionId()", "org.springframework.session.hazelcast.HazelcastSessionRepository.entryRemoved(com.hazelcast.core.EntryEvent)", "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.hasChanges()", "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession", "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.setAttribute(java.lang.String,java.lang.Object)", "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.setMaxInactiveInterval(java.time.Duration)", "org.springframework.session.MapSession.getOriginalId()", "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor", "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.setDelta(java.util.Map)", "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.setMaxInactiveInterval(java.time.Duration)", "org.springframework.session.hazelcast.HazelcastSessionRepository.HazelcastSession.removeAttribute(java.lang.String)"]}, {"title": "NullPointerException after invalidating session", "body": "I upgraded my application from Spring Boot 2.0.1 and Hazelcast 3.8.5 to Spring Boot 2.0.2 and Hazelcast 3.9.4. After doing so, I notice a NullPointerException when logging out.\r\n\r\nI am using Spring Security and have a org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler configured to invalidate the HttpSession after logout.  During a logout, Spring Session is failing with this stack trace:\r\n\r\n```\r\njava.lang.NullPointerException: null\r\n\tat org.springframework.session.hazelcast.HazelcastSessionRepository$SessionUpdateEntryProcessor.process(HazelcastSessionRepository.java:455) ~[spring-session-hazelcast-2.0.3.RELEASE.jar:2.0.3.RELEASE]\r\n\tat com.hazelcast.map.impl.operation.EntryOperator.process(EntryOperator.java:335) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.map.impl.operation.EntryOperator.operateOnKeyValueInternal(EntryOperator.java:194) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.map.impl.operation.EntryOperator.operateOnKey(EntryOperator.java:179) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.map.impl.operation.EntryOperation.runVanilla(EntryOperation.java:395) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.map.impl.operation.EntryOperation.run(EntryOperation.java:177) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.spi.impl.operationservice.impl.OperationRunnerImpl.run(OperationRunnerImpl.java:194) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.process(OperationThread.java:120) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.spi.impl.operationexecutor.impl.OperationThread.run(OperationThread.java:100) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat ------ submitted from ------.(Unknown Source) ~[na:na]\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolve(InvocationFuture.java:127) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.spi.impl.operationservice.impl.InvocationFuture.resolveAndThrowIfException(InvocationFuture.java:79) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.spi.impl.AbstractInvocationFuture.get(AbstractInvocationFuture.java:155) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.map.impl.proxy.MapProxySupport.executeOnKeyInternal(MapProxySupport.java:1073) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.map.impl.proxy.MapProxyImpl.executeOnKeyInternal(MapProxyImpl.java:106) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat com.hazelcast.map.impl.proxy.MapProxyImpl.executeOnKey(MapProxyImpl.java:674) ~[hazelcast-3.9.4.jar:3.9.4]\r\n\tat org.springframework.session.hazelcast.HazelcastSessionRepository.save(HazelcastSessionRepository.java:236) ~[spring-session-hazelcast-2.0.3.RELEASE.jar:2.0.3.RELEASE]\r\n\tat org.springframework.session.hazelcast.HazelcastSessionRepository.save(HazelcastSessionRepository.java:110) ~[spring-session-hazelcast-2.0.3.RELEASE.jar:2.0.3.RELEASE]\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.saveSession(SessionRepositoryFilter.java:377) ~[spring-session-core-2.0.3.RELEASE.jar:2.0.3.RELEASE]\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:233) ~[spring-session-core-2.0.3.RELEASE.jar:2.0.3.RELEASE]\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:197) ~[spring-session-core-2.0.3.RELEASE.jar:2.0.3.RELEASE]\r\n\tat org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:150) ~[spring-session-core-2.0.3.RELEASE.jar:2.0.3.RELEASE]\r\n\tat org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:81) ~[spring-session-core-2.0.3.RELEASE.jar:2.0.3.RELEASE]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728) ~[tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:472) ~[tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:395) ~[tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:316) ~[tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.valves.RemoteIpValve.invoke(RemoteIpValve.java:677) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1468) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142) [na:1.8.0_92]\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617) [na:1.8.0_92]\r\n\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.31.jar:8.5.31]\r\n\tat java.lang.Thread.run(Thread.java:745) [na:1.8.0_92]\r\n``\r\n\r\nMy guess is that the spring-session is attempting to update a session that has been invalidated. ", "url": "https://github.com/spring-projects/spring-session/issues/1076", "user": "matthews614", "labels": ["in: core", "type: bug"], "created": "2018-05-14 13:57:17", "closed": "2018-05-15 08:08:13", "commits": {"42818a1b90ddb3b371e509c4452a3ac9e7456ad8": {"commitGHEventType": "referenced", "commitUser": "vpavic"}, "6d027900ee3a1567a5bd95c028b2be16ea503a2c": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "42818a1b90ddb3b371e509c4452a3ac9e7456ad8", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["b6348736acf03c1bc217b22157c61c4889038218"], "nameRev": "42818a1b90ddb3b371e509c4452a3ac9e7456ad8 tags/2.0.4.RELEASE~16", "commitMessage": "Improve update handling in HazelcastSessionRepository\n\nThis commit improves HazelcastSessionRepository.SessionUpdateEntryProcessor to avoid NPE in scenario where save operation was invoked for session that was already deleted.\n\nSee gh-1076\n", "commitDateTime": "2018-05-15 08:16:20", "authoredDateTime": "2018-05-15 08:16:20", "commitGitStats": [{"filePath": "spring-session-hazelcast/src/integration-test/java/org/springframework/session/hazelcast/AbstractHazelcastRepositoryITests.java", "insertions": 15, "deletions": 1, "lines": 16}, {"filePath": "spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast/HazelcastSessionRepository.java", "insertions": 5, "deletions": 2, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractHazelcastRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.AbstractHazelcastRepositoryITests.attemptToUpdateSessionAfterDelete()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.process(java.util.Map$Entry)", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6d027900ee3a1567a5bd95c028b2be16ea503a2c", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["42818a1b90ddb3b371e509c4452a3ac9e7456ad8"], "nameRev": "6d027900ee3a1567a5bd95c028b2be16ea503a2c tags/2.0.4.RELEASE~15", "commitMessage": "Fix caching of requested session in SessionRepositoryFilter\n\nCloses gh-1076\n", "commitDateTime": "2018-05-15 10:03:41", "authoredDateTime": "2018-05-15 08:21:26", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 27, "deletions": 0, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.saveSession(org.springframework.session.Session)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper.invalidate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).87", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).88", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionRetrievalIsCached()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["42818a1b90ddb3b371e509c4452a3ac9e7456ad8", "6d027900ee3a1567a5bd95c028b2be16ea503a2c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 9, "deletions": 5, "lines": 14, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http", "spring-session-hazelcast/src/main/java/org/springframework/session/hazelcast"], "changesInPackagesSPOON": ["org.springframework.session.hazelcast.HazelcastSessionRepository.SessionUpdateEntryProcessor.process(java.util.Map$Entry)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.saveSession(org.springframework.session.Session)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper.invalidate()"]}, {"title": "Session retrieval in JdbcOperationsSessionRepository uses delta", "body": "Backport of #1042.", "url": "https://github.com/spring-projects/spring-session/issues/1053", "user": "vpavic", "labels": ["in: jdbc", "type: backport", "type: bug"], "created": "2018-04-16 07:10:35", "closed": "2018-04-16 09:52:17", "commits": {"c433b01ee56568b5f8cccd2c72902894d6d02740": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c433b01ee56568b5f8cccd2c72902894d6d02740", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["a3195f1f4b5219db6da166f3d179a475640f0c37"], "nameRev": "c433b01ee56568b5f8cccd2c72902894d6d02740 tags/1.3.3.RELEASE~1", "commitMessage": "Optimize session retrieval in JdbcOperationsSessionRepository\n\nPreviously, SessionResultSetExtractor used JdbcSession.setAttribute which had a side effect of freshly loaded session potentially having a non-empty delta and/or changed flag set. This commit optimizes session retrieval to invoke setAttribute directly on the delegate, therefore preventing unnecessary modifications of delta and change flags.\n\nCloses gh-1053\n", "commitDateTime": "2018-04-16 10:33:55", "authoredDateTime": "2018-04-16 09:40:13", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 55, "deletions": 6, "lines": 61}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 21, "deletions": 22, "lines": 43}, {"filePath": "spring-session/src/test/java/org/springframework/session/jdbc/JdbcOperationsSessionRepositoryTests.java", "insertions": 8, "deletions": 6, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saves()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.putAllOnSingleAttrDoesNotRemoveOld()", "TOT": 6, "UPD": 1, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.updateLastAccessedTime()", "TOT": 7, "UPD": 2, "INS": 2, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveWhenNoAttributesThenCanBeFound()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByPrincipalNameNoPrincipalNameChange()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByPrincipalNameNoPrincipalNameChangeReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByChangedPrincipalName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByChangedPrincipalNameReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByPrincipalNameNoSecurityPrincipalNameChange()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByPrincipalNameNoSecurityPrincipalNameChangeReload()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByChangedSecurityPrincipalName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByChangedSecurityPrincipalNameReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.ExpiringSessionResultSetExtractor", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getSession(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.findByIndexNameAndIndexValue(java.lang.String,java.lang.String)", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.ExpiringSessionResultSetExtractor.getLast(java.util.List)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.ExpiringSessionResultSetExtractor.extractData(java.sql.ResultSet)", "TOT": 10, "UPD": 7, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getSession(java.lang.String).3", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getSession(java.lang.String).3.doInTransaction(org.springframework.transaction.TransactionStatus)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.findByIndexNameAndIndexValue(java.lang.String,java.lang.String).5", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor.extractData(java.sql.ResultSet)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.getSessionExpired()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.getSessionFound()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.findByIndexNameAndIndexValuePrincipalIndexNameFound()", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c433b01ee56568b5f8cccd2c72902894d6d02740"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 22, "lines": 43, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 26, "UPD": 16, "INS": 5, "MOV": 2, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/jdbc"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository.ExpiringSessionResultSetExtractor.getLast(java.util.List)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.ExpiringSessionResultSetExtractor.extractData(java.sql.ResultSet)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getSession(java.lang.String)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getSession(java.lang.String).3.doInTransaction(org.springframework.transaction.TransactionStatus)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.findByIndexNameAndIndexValue(java.lang.String,java.lang.String).5", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.ExpiringSessionResultSetExtractor", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor.extractData(java.sql.ResultSet)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.findByIndexNameAndIndexValue(java.lang.String,java.lang.String)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.getSession(java.lang.String).3"]}, {"title": "Session event handling in RedisOperationsSessionRepository causes NullPointerException", "body": "The change from #984, which was a partial backport of #939, missed a `return` statement which in turn causes `NullPointerException`.\r\n\r\nSee #1047.", "url": "https://github.com/spring-projects/spring-session/issues/1049", "user": "vpavic", "labels": ["in: redis", "type: bug"], "created": "2018-04-12 15:51:47", "closed": "2018-04-16 09:52:05", "commits": {"a3195f1f4b5219db6da166f3d179a475640f0c37": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "a3195f1f4b5219db6da166f3d179a475640f0c37", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["467ecaaeff752cc463c95eaf45efaecc5357c989"], "nameRev": "a3195f1f4b5219db6da166f3d179a475640f0c37 tags/1.3.3.RELEASE~2", "commitMessage": "Fix NPE in RedisOperationsSessionRepository event handling\n\nCloses gh-1049\n", "commitDateTime": "2018-04-16 10:33:55", "authoredDateTime": "2018-04-12 22:00:03", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 100, "deletions": 1, "lines": 101}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageDeletedSessionFound()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageDeletedSessionNotFound()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageExpiredSessionFound()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageExpiredSessionNotFound()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a3195f1f4b5219db6da166f3d179a475640f0c37"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 2, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])"]}, {"title": "Sessions are always dirty by default in JDBC implementation", "body": "Hello,\r\n\r\nWe are using Spring Session project widely in our projects, but we encountered a strange situation when we traced lifecycle of our requests.\r\n\r\n```\r\norg.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor\r\n```\r\n\r\nWhen sessions are fetched from database, this extractor creates sessions.  At first that is okay, but  setAttribute method is making sessions default dirty. (I mean differences in delta)\r\n\r\nSo, even there is no update on session attributes, there are always SQL operations for writing them to spring_session_attributes table. We think it causes a performance problem.\r\n\r\nIn the other hand; if security context or principal name index name, or both of them, exist in attributes, it also marks session as changed, and there comes a new query for update session.\r\n\r\nCorrect me if I am wrong, If we imagine a logged in user in simple website, there will be minimum 3 update queries for each request even there is no operation on session.\r\n\r\nWhat are the motivations, or applied best practices for this implementations and api designs? ", "url": "https://github.com/spring-projects/spring-session/issues/1042", "user": "okohub", "labels": ["in: jdbc", "type: bug"], "created": "2018-04-09 22:24:19", "closed": "2018-04-16 09:50:02", "commits": {"2395582fe66e6f6fcbd1a18db53d6453554bcfaf": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "2395582fe66e6f6fcbd1a18db53d6453554bcfaf", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["5173026aa8dbd20f607e8adc15b1bf2555f38f02"], "nameRev": "2395582fe66e6f6fcbd1a18db53d6453554bcfaf tags/2.0.3.RELEASE~26", "commitMessage": "Optimize session retrieval in JdbcOperationsSessionRepository\n\nPreviously, SessionResultSetExtractor used JdbcSession.setAttribute which had a side effect of freshly loaded session potentially having a non-empty delta and/or changed flag set. This commit optimizes session retrieval to invoke setAttribute directly on the delegate, therefore preventing unnecessary modifications of delta and change flags.\n\nCloses gh-1042\n", "commitDateTime": "2018-04-16 08:58:16", "authoredDateTime": "2018-04-13 23:03:08", "commitGitStats": [{"filePath": "spring-session-jdbc/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 50, "deletions": 6, "lines": 56}, {"filePath": "spring-session-jdbc/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saves()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.putAllOnSingleAttrDoesNotRemoveOld()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.updateLastAccessedTime()", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveWhenNoAttributesThenCanBeFound()", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByPrincipalNameNoPrincipalNameChange()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByPrincipalNameNoPrincipalNameChangeReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByChangedPrincipalName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByChangedPrincipalNameReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByPrincipalNameNoSecurityPrincipalNameChange()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByPrincipalNameNoSecurityPrincipalNameChangeReload()", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByChangedSecurityPrincipalName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.findByChangedSecurityPrincipalNameReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.changeSessionIdWhenOnlyChangeId()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.changeSessionIdWhenSetAttributeOnChangedSession()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor.extractData(java.sql.ResultSet)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2395582fe66e6f6fcbd1a18db53d6453554bcfaf"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-jdbc/src/main/java/org/springframework/session/jdbc"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository.SessionResultSetExtractor.extractData(java.sql.ResultSet)"]}, {"title": "SpringSessionWebSessionStore doesn't update lastAccessTime when retrieving session", "body": "I find the redis session TTL only refresh if you access the first url before login(the `SPRING_SECURITY_SAVED_REQUEST`), any other request didn't update the TTL.\r\n\r\nAnd the TTL didn't affected by `server.session.timeout` property.\r\n\r\nversion 2.0.2.RELEASE.", "url": "https://github.com/spring-projects/spring-session/issues/1039", "user": "zjengjie", "labels": ["type: bug"], "created": "2018-04-09 09:46:07", "closed": "2018-04-19 10:35:19", "commits": {"6f8359ba1612bacb85799aaf151386c7514b6cd6": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "6f8359ba1612bacb85799aaf151386c7514b6cd6", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["62bfeb3f053dab09e8f6eb14bafbdb910f80d1cd"], "nameRev": "6f8359ba1612bacb85799aaf151386c7514b6cd6 tags/2.0.3.RELEASE~24", "commitMessage": "Fix lastAccessedTime handling in SpringSessionWebSessionStore\n\nThis commit ensures lastAccessedTime is updated when session is retrieved, as per WebSessionStore API.\n\nCloses gh-1039\n", "commitDateTime": "2018-04-19 12:11:16", "authoredDateTime": "2018-04-19 12:10:41", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/server/session/SpringSessionWebSessionStore.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/server/session/SpringSessionWebSessionStoreTests.java", "insertions": 13, "deletions": 6, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpringSessionWebSessionStore.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.retrieveSession(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SpringSessionWebSessionStoreTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.setClockWhenNullThenException()", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.constructorWhenNullRepositoryThenThrowsIllegalArgumentException()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.retrieveSessionThenStarted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["6f8359ba1612bacb85799aaf151386c7514b6cd6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/server/session"], "changesInPackagesSPOON": ["org.springframework.session.web.server.session.SpringSessionWebSessionStore.retrieveSession(java.lang.String)"]}, {"title": "ReactiveRedisOperationsSessionRepository fails to retrieve session after removing attribute", "body": "Use webflux and spring session with redis, when logout it still logged in. Config like this:\r\n```java\r\n    @Bean\r\n    public SecurityWebFilterChain securitygWebFilterChain(ServerHttpSecurity http) {\r\n        // @formatter:off\r\n        return http.authorizeExchange()\r\n                .anyExchange().authenticated()\r\n                .and().formLogin()\r\n                .and()\r\n                .build();\r\n        // @formatter:on\r\n    }\r\n```\r\nthe version is 2.0.2.RELEASE.\r\nI open a [sample](https://github.com/zjengjie/SpringSessionLogoutIssue) project to produce this issue.", "url": "https://github.com/spring-projects/spring-session/issues/1035", "user": "zjengjie", "labels": ["in: redis", "type: bug"], "created": "2018-04-02 07:14:56", "closed": "2018-04-19 13:54:11", "commits": {"91b4efc5bdfd8bb8cf31054da7551f5fe7c4bc1d": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 17.00027777777778, "commitsDetails": [{"commitHash": "91b4efc5bdfd8bb8cf31054da7551f5fe7c4bc1d", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["6f8359ba1612bacb85799aaf151386c7514b6cd6"], "nameRev": "91b4efc5bdfd8bb8cf31054da7551f5fe7c4bc1d tags/2.0.3.RELEASE~23", "commitMessage": "Fix attribute mapping in ReactiveRedisOperationsSessionRepository\n\nThis commit ensures that attributes with null values are correctly mapped to session on retrieval from Redis.\n\nCloses gh-1035\n", "commitDateTime": "2018-04-19 15:31:08", "authoredDateTime": "2018-04-19 15:31:08", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 1, "deletions": 3, "lines": 4}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryTests.java", "insertions": 12, "deletions": 6, "lines": 18}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 12, "deletions": 6, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.findById(java.lang.String)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryTests.getSessionFound()", "TOT": 13, "UPD": 8, "INS": 5, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.getSessionFound()", "TOT": 13, "UPD": 8, "INS": 5, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["91b4efc5bdfd8bb8cf31054da7551f5fe7c4bc1d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 3, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.findById(java.lang.String)"]}, {"title": "Insert of JDBC session attribute fails if concurrent request deletes session", "body": "Hi everyone,\r\n\r\nI'm using spring-session 1.3.2.RELEASE with postgresql, I got this following error on my production environment. When I tried to login into the system, the session was created in the database normally, but somehow this exception occurred, I haven't found how to replicate this. does anyone know how to fix it ?\r\n\r\n```\r\nOops! Appears that an error has occured. Please refresh the page and try again.. Exception message: PreparedStatementCallback; SQL [INSERT INTO SPRING_SESSION_ATTRIBUTES(SESSION_ID, ATTRIBUTE_NAME, ATTRIBUTE_BYTES) VALUES (?, ?, ?)]; ERROR: insert or update on table \"spring_session_attributes\" violates foreign key constraint \"spring_session_attributes_fk\"\r\n  Detail: Key (session_id)=(3483b536-25b7-4206-89b7-2323626ba198) is not present in table \"spring_session\".; nested exception is org.postgresql.util.PSQLException: ERROR: insert or update on table \"spring_session_attributes\" violates foreign key constraint \"spring_session_attributes_fk\"\r\n  Detail: Key (session_id)=(3483b536-25b7-4206-89b7-2323626ba198) is not present in table \"spring_session\".\r\norg.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [INSERT INTO SPRING_SESSION_ATTRIBUTES(SESSION_ID, ATTRIBUTE_NAME, ATTRIBUTE_BYTES) VALUES (?, ?, ?)]; ERROR: insert or update on table \"spring_session_attributes\" violates foreign key constraint \"spring_session_attributes_fk\"\r\n  Detail: Key (session_id)=(3483b536-25b7-4206-89b7-2323626ba198) is not present in table \"spring_session\".; nested exception is org.postgresql.util.PSQLException: ERROR: insert or update on table \"spring_session_attributes\" violates foreign key constraint \"spring_session_attributes_fk\"\r\n  Detail: Key (session_id)=(3483b536-25b7-4206-89b7-2323626ba198) is not present in table \"spring_session\".\r\n    at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:243)\r\n    at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)\r\n    at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:657)\r\n    at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:906)\r\n    at org.springframework.jdbc.core.JdbcTemplate.update(JdbcTemplate.java:967)\r\n    at org.springframework.session.jdbc.JdbcOperationsSessionRepository$2.doInTransactionWithoutResult(JdbcOperationsSessionRepository.java:464)\r\n    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:34)\r\n    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:133)\r\n    at org.springframework.session.jdbc.JdbcOperationsSessionRepository.save(JdbcOperationsSessionRepository.java:418)\r\n    at org.springframework.session.jdbc.JdbcOperationsSessionRepository.save(JdbcOperationsSessionRepository.java:130)\r\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:245)\r\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:217)\r\n    at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:170)\r\n    at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80)\r\n    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\r\n    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\r\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:241)\r\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:208)\r\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)\r\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:110)\r\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:615)\r\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:169)\r\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\r\n    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:962)\r\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:116)\r\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:445)\r\n    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1115)\r\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:637)\r\n    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:318)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\r\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\r\n    at java.lang.Thread.run(Thread.java:745)\r\nCaused by: org.postgresql.util.PSQLException: ERROR: insert or update on table \"spring_session_attributes\" violates foreign key constraint \"spring_session_attributes_fk\"\r\n  Detail: Key (session_id)=(3483b536-25b7-4206-89b7-2323626ba198) is not present in table \"spring_session\".\r\n    at org.postgresql.core.v3.QueryExecutorImpl.receiveErrorResponse(QueryExecutorImpl.java:2182)\r\n    at org.postgresql.core.v3.QueryExecutorImpl.processResults(QueryExecutorImpl.java:1911)\r\n    at org.postgresql.core.v3.QueryExecutorImpl.execute(QueryExecutorImpl.java:173)\r\n    at org.postgresql.jdbc.PgStatement.execute(PgStatement.java:622)\r\n    at org.postgresql.jdbc.PgStatement.executeWithFlags(PgStatement.java:472)\r\n    at org.postgresql.jdbc.PgStatement.executeUpdate(PgStatement.java:429)\r\n    at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:913)\r\n    at org.springframework.jdbc.core.JdbcTemplate$2.doInPreparedStatement(JdbcTemplate.java:906)\r\n    at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:641)\r\n    ... 30 more\r\n```\r\n\r\nThe configuration\r\n\r\n```\r\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<beans xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n       xmlns:context=\"http://www.springframework.org/schema/context\"\r\n       xmlns=\"http://www.springframework.org/schema/beans\"\r\n       xsi:schemaLocation=\"http://www.springframework.org/schema/beans\r\n        http://www.springframework.org/schema/beans/spring-beans.xsd\r\n        http://www.springframework.org/schema/context\r\n        http://www.springframework.org/schema/context/spring-context.xsd\">\r\n\r\n    <context:annotation-config/>\r\n    <bean class=\"org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration\"/>\r\n\r\n    <bean id=\"dataSource\"\r\n          class=\"org.springframework.jdbc.datasource.DriverManagerDataSource\">\r\n        <property name=\"driverClassName\" value=\"${driverClassName}\" />\r\n        <property name=\"url\" value=\"${database.url}\" />\r\n        <property name=\"username\" value=\"${database.username}\" />\r\n        <property name=\"password\" value=\"${database.password}\" />\r\n    </bean>\r\n\r\n\r\n    <bean class=\"org.springframework.jdbc.datasource.DataSourceTransactionManager\">\r\n        <constructor-arg ref=\"dataSource\"/>\r\n    </bean>\r\n\r\n    <bean class=\"org.springframework.session.web.http.DefaultCookieSerializer\">\r\n        <property name=\"cookieName\" value=\"MYCOOKIE\" />\r\n    </bean>\r\n</beans>\r\n```\r\n", "url": "https://github.com/spring-projects/spring-session/issues/1031", "user": "rfajarachmad", "labels": ["in: jdbc", "type: bug"], "created": "2018-03-28 04:33:59", "closed": "2018-08-13 06:47:11", "commits": {"87c2e53b5a31d08b9010b61479fdfb1f8b7c3774": {"commitGHEventType": "closed", "commitUser": "vpavic"}, "93aee206fbc20c849559fd512aef333489e36c46": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 138.00027777777777, "commitsDetails": [{"commitHash": "87c2e53b5a31d08b9010b61479fdfb1f8b7c3774", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["268ba663e5827678dff54d918e8a1ba1b0259698"], "nameRev": "87c2e53b5a31d08b9010b61479fdfb1f8b7c3774 tags/2.1.0.M2~12", "commitMessage": "Insert new attributes conditionally in JDBC repo\n\nAt present, the insert of new attributes in JdbcOperationsSessionRepository is done unconditionally. This can cause data integrity violation errors with concurrent requests, where one request attempts to add new session attribute while the other, concurrent request, deletes the session.\n\nThis commit addresses the described scenario by executing insert of new attributes conditionally on presence of parent record.\n\nCloses gh-1031\n", "commitDateTime": "2018-08-13 06:28:42", "authoredDateTime": "2018-08-13 06:28:42", "commitGitStats": [{"filePath": "spring-session-jdbc/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 25, "deletions": 0, "lines": 25}, {"filePath": "spring-session-jdbc/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 9, "deletions": 7, "lines": 16}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveDeleted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveDeletedAddAttribute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).4.setValues(java.sql.PreparedStatement,int)", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "93aee206fbc20c849559fd512aef333489e36c46", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["3df3b30117a44b801c052210a5395ad6c4bdd6d2"], "nameRev": "93aee206fbc20c849559fd512aef333489e36c46 tags/2.1.0.RELEASE~12", "commitMessage": "Configure default LobHandler to use temporary LOBs on Oracle\n\nJdbcOperationsSessionRepository recently introduced validation when inserting new session attributes in order to prevent data integrity violations in highly concurrent environments. This is done by using INSERT INTO ... SELECT statement to verify existence of session record in parent table. Such arrangement causes problems with Oracle if inserted attribute is of size 4 kb or more.\n\nThis commit enhances JdbcHttpSessionConfiguration to detect Oracle database is used, and set createTemporaryLob option on default LobHandler to true.\n\nResolves: #1203\nSee also: #1031\n", "commitDateTime": "2018-09-25 18:45:02", "authoredDateTime": "2018-09-25 18:45:02", "commitGitStats": [{"filePath": "spring-session-jdbc/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 15, "deletions": 0, "lines": 15}, {"filePath": "spring-session-jdbc/src/main/java/org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.java", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.saveWithLargeAttribute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.requiresTemporaryLob(javax.sql.DataSource)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["87c2e53b5a31d08b9010b61479fdfb1f8b7c3774"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 9, "deletions": 7, "lines": 16, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 12, "UPD": 6, "INS": 2, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-jdbc/src/main/java/org/springframework/session/jdbc"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.insertSessionAttributes(org.springframework.session.jdbc.JdbcOperationsSessionRepository$JdbcSession,java.util.List).4.setValues(java.sql.PreparedStatement,int)"]}, {"title": "RedisOperationsSessionRepository's changeSessionId causes SessionDestroyedEvent warnings", "body": "The `RedisOperationsSessionRepository.RedisSession#changeSessionId` added in Spring Session 2.0 causes the following `SessionDestroyedEvent` warnings:\r\n\r\n```\r\n2018-03-23 21:31:57.160  WARN 18514 --- [enerContainer-3] s.s.d.r.RedisOperationsSessionRepository : Unable to publish SessionDestroyedEvent for session b965668d-4c83-445a-a951-325375be9eeb\r\n```\r\n\r\nThis is caused by `RedisOperationsSessionRepository.RedisSession#saveChangeSessionId` implementation, which renames the session key but leaves the expiration key for the previous session id intact. So when this key expires, `SessionDestroyedEvent` handling is invoked for the session record that doesn't exist.\r\n\r\nThe problem can be reproduced using Spring Security with default web security config, or something as simple as:\r\n\r\n```java\r\nhttp\r\n\t.formLogin()\r\n\t\t.and()\r\n\t.authorizeRequests()\r\n\t\t.anyRequest().authenticated();\r\n```\r\n\r\nAfter logging in, the existing session has its session id changed, after which the expiration key for old session id can be observed in Redis.\r\n\r\nNote: Although the effect of this bug is basically the same to one reported in #499, this is a different issue that doesn't occur in `1.3.x`, where `changeSessionId` is not implemented natively but rather by deleting session and creating a new one.", "url": "https://github.com/spring-projects/spring-session/issues/1029", "user": "vpavic", "labels": ["in: redis", "type: bug"], "created": "2018-03-23 22:09:55", "closed": "2018-04-20 21:35:37", "commits": {"1d1253e643c7951ad7a939990fc0ab31bdf5772e": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 27.00027777777778, "commitsDetails": [{"commitHash": "1d1253e643c7951ad7a939990fc0ab31bdf5772e", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["0e7e2eaf5c637ac9575ac96abebe96607349a2d4"], "nameRev": "1d1253e643c7951ad7a939990fc0ab31bdf5772e tags/2.0.3.RELEASE~14", "commitMessage": "Rename expiration key on changeSessionId in RedisOperationsSessionRepository\n\nThis commit ensures existing expiration key is renamed on changeSessionId operation in RedisOperationsSessionRepository. Previously, this key wasn't renamed which caused invalid invocations of SessionDestroyedEvent handling when key expired.\n\nCloses gh-1029\n", "commitDateTime": "2018-04-20 23:08:50", "authoredDateTime": "2018-04-20 23:08:50", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 32, "deletions": 1, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.changeSessionId()", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.changeSessionIdWhenNotSaved()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1d1253e643c7951ad7a939990fc0ab31bdf5772e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)"]}, {"title": "Update guides for Spring Boot based samples", "body": "Our guides for Spring Boot based samples use some deprecated application properties.\r\n\r\nSee #1024.", "url": "https://github.com/spring-projects/spring-session/issues/1025", "user": "vpavic", "labels": ["in: docs", "type: bug"], "created": "2018-03-20 07:47:22", "closed": "2018-03-20 10:21:55", "commits": {"cdfa557442af48e640c4982852e9a0dc7200105f": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cdfa557442af48e640c4982852e9a0dc7200105f", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["edc8a7efff1d34dfc034152989e59b1c864caafa"], "nameRev": "cdfa557442af48e640c4982852e9a0dc7200105f tags/2.0.3.RELEASE~34", "commitMessage": "Update guides for Spring Boot based samples\n\nCloses gh-1025\n", "commitDateTime": "2018-03-20 10:44:51", "authoredDateTime": "2018-03-20 10:44:51", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/boot-jdbc.adoc", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "docs/src/docs/asciidoc/guides/boot-redis.adoc", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "docs/src/docs/asciidoc/guides/boot-websocket.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/boot/websocket/src/main/resources/application.properties", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cdfa557442af48e640c4982852e9a0dc7200105f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 16, "deletions": 16, "lines": 32, "gitFilesChange": 4}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/guides/boot-redis.adoc", "docs/src/docs/asciidoc/guides/boot-jdbc.adoc", "docs/src/docs/asciidoc/guides/boot-websocket.adoc", "samples/boot/websocket/src/main/resources/application.properties"]}, {"title": "Broken Links in Docs", "body": "<!--\r\nThanks for raising a Spring Session issue. Please provide a brief description of your problem along with the version of Spring Session that you are using. If possible, please also consider putting together a sample application that reproduces the issue.\r\n-->\r\n\r\nspring-boot-version is not defined in spring-session/docs/spring-session-docs.gradle to replace placeholder in:\r\n\r\n- docs/src/docs/asciidoc/guides/boot-jdbc.adoc\r\n- docs/src/docs/asciidoc/guides/boot-redis.adoc\r\n- docs/src/docs/asciidoc/guides/grails3.adoc\r\n\r\ncausing dead links to be referenced in the resulting html documentation.\r\n\r\n```\r\nasciidoctor {\r\n\tdef ghTag = snapshotBuild ? 'master' : project.version\r\n\tdef ghUrl = \"https://github.com/spring-projects/spring-session/tree/$ghTag\"\r\n\r\n\tattributes 'docs-itest-dir': \"$rootProject.projectDir.path/docs/src/integration-test/java/\",\r\n\t\t\t'docs-test-dir': \"$rootProject.projectDir.path/docs/src/test/java/\",\r\n\t\t\t'docs-test-resources-dir': \"$rootProject.projectDir.path/docs/src/test/resources/\",\r\n\t\t\t'download-url': \"https://github.com/spring-projects/spring-session/archive/${ghTag}.zip\",\r\n\t\t\t'gh-samples-url': \"$ghUrl/samples/\",\r\n\t\t\t'gh-url': ghUrl,\r\n\t\t\t'hazelcast-version': versions['com.hazelcast:hazelcast'],\r\n\t\t\t'lettuce-version': versions['io.lettuce:lettuce-core'],\r\n\t\t\t'samples-dir': \"$rootProject.projectDir.path/samples/\",\r\n\t\t\t'session-jdbc-main-resources-dir': \"${project(':spring-session-jdbc').projectDir.path}/src/main/resources/\",\r\n\t\t\t'spring-data-redis-version': versions['org.springframework.data:spring-data-redis'],\r\n\t\t\t'spring-framework-version': versions['org.springframework:spring-core'],\r\n\t\t\t'spring-security-version': versions['org.springframework.security:spring-security-core'],\r\n\t\t\t'spring-session-version': project.version,\r\n\t\t\t'version-milestone': milestoneBuild,\r\n\t\t\t'version-release': releaseBuild,\r\n\t\t\t'version-snapshot': snapshotBuild\r\n}\r\n```\r\n\r\nsee:\r\n[spring-session/docs/spring-session-docs.gradle](https://github.com/spring-projects/spring-session/blob/45807998f62d8a22fc6f548c798ba19fd40ddeda/docs/spring-session-docs.gradle)\r\n[docs/src/docs/asciidoc/guides/boot-jdbc.adoc](https://github.com/spring-projects/spring-session/blob/ebd4b349d238f21e4c3d1141fe920634442159d7/docs/src/docs/asciidoc/guides/boot-jdbc.adoc)\r\n[docs/src/docs/asciidoc/guides/boot-redis.adoc](https://github.com/spring-projects/spring-session/blob/ebd4b349d238f21e4c3d1141fe920634442159d7/docs/src/docs/asciidoc/guides/boot-redis.adoc)\r\n[docs/src/docs/asciidoc/guides/grails3.adoc](https://github.com/spring-projects/spring-session/blob/ebd4b349d238f21e4c3d1141fe920634442159d7/docs/src/docs/asciidoc/guides/grails3.adoc)", "url": "https://github.com/spring-projects/spring-session/issues/1023", "user": "semchev", "labels": ["in: docs", "type: bug"], "created": "2018-03-15 02:45:51", "closed": "2018-03-20 10:21:55", "commits": {"3c2f0fd485e2118f7c2d15ddac29e6e794bdda66": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "3c2f0fd485e2118f7c2d15ddac29e6e794bdda66", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["cdfa557442af48e640c4982852e9a0dc7200105f"], "nameRev": "3c2f0fd485e2118f7c2d15ddac29e6e794bdda66 tags/2.0.3.RELEASE~33", "commitMessage": "Fix broken links in Spring Boot samples guides\n\nCloses gh-1023\n", "commitDateTime": "2018-03-20 10:57:03", "authoredDateTime": "2018-03-20 10:57:03", "commitGitStats": [{"filePath": "docs/spring-session-docs.gradle", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3c2f0fd485e2118f7c2d15ddac29e6e794bdda66"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs"]}, {"title": "Confusing readme in sample for FindByUsername", "body": "https://github.com/spring-projects/spring-session/tree/master/samples/boot/findbyusername\r\n\r\n\"The sample provides a hook to add the current username to the session (required for finding the user) by providing a custom implementation of Spring Security\u2019s AuthenticationSuccessHandler.\"\r\n\r\nI couldn't find any custom implementation of AuthenticationSuccessHandler. \r\n\r\nIs this sample complete? ", "url": "https://github.com/spring-projects/spring-session/issues/989", "user": "mrshawn191", "labels": ["in: docs", "type: bug"], "created": "2018-01-31 14:16:41", "closed": "2018-02-06 14:56:28", "commits": {"7acdeffe2246a03a755b944c97b9677bfbd09bae": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "7acdeffe2246a03a755b944c97b9677bfbd09bae", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["de03b20619c8c68d64b82a5b52a4b75fbbc9efe1"], "nameRev": "7acdeffe2246a03a755b944c97b9677bfbd09bae tags/2.0.2.RELEASE~12", "commitMessage": "Remove outdated sample docs\n\nCloses gh-989\n", "commitDateTime": "2018-02-06 15:30:09", "authoredDateTime": "2018-02-06 13:41:51", "commitGitStats": [{"filePath": "samples/boot/findbyusername/README.adoc", "insertions": 0, "deletions": 4, "lines": 4}, {"filePath": "samples/boot/jdbc/README.adoc", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "samples/boot/redis/README.adoc", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7acdeffe2246a03a755b944c97b9677bfbd09bae"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 6, "lines": 6, "gitFilesChange": 3}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/boot/findbyusername/README.adoc", "samples/boot/jdbc/README.adoc", "samples/boot/redis/README.adoc"]}, {"title": "Fix documentation typos", "body": "Backport of #846.", "url": "https://github.com/spring-projects/spring-session/issues/981", "user": "vpavic", "labels": ["in: docs", "type: backport", "type: bug"], "created": "2018-01-29 12:10:18", "closed": "2018-01-29 17:58:35", "commits": {"96eb40439cbb6648c903c1eb5dad185bf3b5f1f1": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "96eb40439cbb6648c903c1eb5dad185bf3b5f1f1", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["8ed0999ad35248b0a85578a093ce1954caf76fc2"], "nameRev": "96eb40439cbb6648c903c1eb5dad185bf3b5f1f1 tags/1.3.2.RELEASE~13", "commitMessage": "fix typo\n\nchange \"they key\" to  \"the key\"\n\nCloses gh-981\n", "commitDateTime": "2018-01-29 16:26:08", "authoredDateTime": "2017-08-04 11:45:34", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/index.adoc", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["96eb40439cbb6648c903c1eb5dad185bf3b5f1f1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/index.adoc"]}, {"title": "Fix CookieSerializer.CookieValue visibility", "body": "Hi, I'm in Spring Session 1.2.2 and I'm trying to move up to 2.x\r\nI noticed CookeSerializer.CookieValue changed visibility from public to package.\r\n\r\nsorry if this is super basic, but in new version how could I update the CookieValue from the already configured CookieSerializer.CookieValue?\r\n\r\nin 1.2.2 I was doing\r\nmyCookieSerializer.writeCookieValue(new CookieSerializer.CookieValue(request, response, \"some value\"));\r\n\r\nthank you in advance.\r\n\r\n", "url": "https://github.com/spring-projects/spring-session/issues/978", "user": "elartigue", "labels": ["in: core", "type: bug"], "created": "2018-01-23 17:33:38", "closed": "2018-02-05 18:46:10", "commits": {"becee53dbf10426c9832a5e169f6ed0ced6d6b11": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "becee53dbf10426c9832a5e169f6ed0ced6d6b11", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["4eb64e81404f6f081fbdbea54ded7567620632e7"], "nameRev": "becee53dbf10426c9832a5e169f6ed0ced6d6b11 tags/2.0.2.RELEASE~14", "commitMessage": "Restore `CookieSerializer.CookieValue` constructor visibility\n\nCloses gh-978\n", "commitDateTime": "2018-02-05 19:11:08", "authoredDateTime": "2018-02-05 19:11:08", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/CookieSerializer.java", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookieSerializer.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieValue", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["becee53dbf10426c9832a5e169f6ed0ced6d6b11"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.CookieValue"]}, {"title": "Documentation contains invalid commands for starting sample apps", "body": "", "url": "https://github.com/spring-projects/spring-session/issues/969", "user": "utsavkansara", "labels": ["in: docs", "type: bug"], "created": "2018-01-15 23:01:43", "closed": "2018-01-18 21:28:21", "commits": {"ebd4b349d238f21e4c3d1141fe920634442159d7": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "ebd4b349d238f21e4c3d1141fe920634442159d7", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["ffa1bca898108d5105beee82c88cb96ac0e7cc87"], "nameRev": "ebd4b349d238f21e4c3d1141fe920634442159d7 tags/2.0.1.RELEASE~11", "commitMessage": "Fix run commands in samples documentation\n\nCloses gh-969\n", "commitDateTime": "2018-01-18 22:27:09", "authoredDateTime": "2018-01-18 21:51:32", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/boot-findbyusername.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/boot-jdbc.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/boot-redis.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/boot-websocket.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/grails3.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/java-custom-cookie.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/java-hazelcast.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/java-jdbc.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/java-redis.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/java-rest.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/java-security.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/xml-jdbc.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "docs/src/docs/asciidoc/guides/xml-redis.adoc", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ebd4b349d238f21e4c3d1141fe920634442159d7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 13, "lines": 26, "gitFilesChange": 13}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/guides/java-custom-cookie.adoc", "docs/src/docs/asciidoc/guides/xml-jdbc.adoc", "docs/src/docs/asciidoc/guides/boot-redis.adoc", "docs/src/docs/asciidoc/guides/grails3.adoc", "docs/src/docs/asciidoc/guides/boot-websocket.adoc", "docs/src/docs/asciidoc/guides/boot-findbyusername.adoc", "docs/src/docs/asciidoc/guides/boot-jdbc.adoc", "docs/src/docs/asciidoc/guides/java-security.adoc", "docs/src/docs/asciidoc/guides/java-jdbc.adoc", "docs/src/docs/asciidoc/guides/xml-redis.adoc", "docs/src/docs/asciidoc/guides/java-redis.adoc", "docs/src/docs/asciidoc/guides/java-rest.adoc", "docs/src/docs/asciidoc/guides/java-hazelcast.adoc"]}, {"title": "Internal RedisTemplate does not use application classloader anymore", "body": "Spring Session 2 has moved to an internal  `RedisTemplate` (as part of #887) but this `RedisTemplate` isn't built the same way as before and breaks a Spring Boot application using Devtools. \r\n\r\nPreviously, `RedisTemplate` was created as a bean, making sure that container callbacks are invoked appropriately. Now that `RedisTemplate` is created manually, it misses the `BeanClassLoaderAware` that provides the `ClassLoader` of the `ApplicationContext` (the restart `ClassLoader` when Devtools is running).\r\n\r\nOne way to fix this issue would be to move that callback to `RedisHttpSessionConfiguration` and invoke the setter manually (just like `afterPropertiesSet` is invoked manually at the moment).\r\n\r\nFixing this issue will resolve https://github.com/spring-projects/spring-boot/issues/11537 - There is repro project in  the `fix/boot2` branch [of this repository](https://github.com/tomoTaka01/redis-session-sample)", "url": "https://github.com/spring-projects/spring-session/issues/968", "user": "snicoll", "labels": ["in: redis", "type: bug"], "created": "2018-01-11 13:54:00", "closed": "2018-01-18 21:28:21", "commits": {"ffa1bca898108d5105beee82c88cb96ac0e7cc87": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "ffa1bca898108d5105beee82c88cb96ac0e7cc87", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["d0ee9fd16a34b582e43a5614e3e4504434f05a13"], "nameRev": "ffa1bca898108d5105beee82c88cb96ac0e7cc87 tags/2.0.1.RELEASE~12", "commitMessage": "Update Redis configuration to use bean classloader\n\nSpring Session 2.0 made changes to Redis configuration facilities so that the `RedisTemplate` used by `RedisOperationsSessionRepository` isn't exposed as a bean anymore. This has a consequence that bean `ClassLoader` isn't applied automatically which causes issues in Spring Boot applications that use DevTools.\n\nThis commit restores the previous behavior by updating Redis configuration classes to implement `BeanClassLoaderAware` callback and apply the application `ClassLoader` to `RedisTemplate`. The analogous change was made to reactive Redis configuration.\n\nCloses gh-968\n", "commitDateTime": "2018-01-18 22:27:02", "authoredDateTime": "2018-01-18 21:36:28", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 17, "deletions": 10, "lines": 27}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/server/RedisWebSessionConfiguration.java", "insertions": 18, "deletions": 10, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.createRedisTemplate(org.springframework.data.redis.connection.RedisConnectionFactory,org.springframework.data.redis.serializer.RedisSerializer)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 6}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setBeanClassLoader(java.lang.ClassLoader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.createRedisTemplate()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.sessionRepository()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedisWebSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 3}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.createDefaultTemplate(org.springframework.data.redis.connection.ReactiveRedisConnectionFactory)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 5}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.sessionRepository()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.setBeanClassLoader(java.lang.ClassLoader)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.createReactiveRedisTemplate()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ffa1bca898108d5105beee82c88cb96ac0e7cc87"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 35, "deletions": 20, "lines": 55, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 33, "UPD": 4, "INS": 11, "MOV": 4, "DEL": 14, "spoonFilesChanged": 2, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration", "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.sessionRepository()", "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.createReactiveRedisTemplate()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.sessionRepository()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.setBeanClassLoader(java.lang.ClassLoader)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.createRedisTemplate()", "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.createDefaultTemplate(org.springframework.data.redis.connection.ReactiveRedisConnectionFactory)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.createRedisTemplate(org.springframework.data.redis.connection.RedisConnectionFactory,org.springframework.data.redis.serializer.RedisSerializer)", "org.springframework.session.data.redis.config.annotation.web.server.RedisWebSessionConfiguration.setBeanClassLoader(java.lang.ClassLoader)"]}, {"title": "Fix change session id handling in `RedisOperationsSessionRepository`", "body": "Similarly like with `ReactiveRedisOperationsSessionRepository` in #954, `RedisOperationsSessionRepository` also suffers from potential `ERR no such key` error in scenarios where `SessionRepository#save` is invoked twice on a newly created session.", "url": "https://github.com/spring-projects/spring-session/issues/962", "user": "vpavic", "labels": ["in: redis", "type: bug"], "created": "2018-01-05 11:49:58", "closed": "2018-01-05 11:53:45", "commits": {"1edce117aae86931b73cef7cb34df9a6b45474fd": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1edce117aae86931b73cef7cb34df9a6b45474fd", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["c0f4c7f38134ca3e9c29525e8ca1aa3d5e93ca6a"], "nameRev": "1edce117aae86931b73cef7cb34df9a6b45474fd tags/2.0.0.RELEASE~7", "commitMessage": "Fix Redis change session id handling\n\nThis commit updates logic around changing session id in `RedisOperationsSessionRepository` to properly handle updates for new sessions i.e. ones that haven't been saved yet.\n\nPreviously, the logic skipped both Redis rename operation and replacement of session id within the current session holder object, which led to no such key errors on subsequent save operation which still observed the session id as changed.\n\nCloses gh-962\n", "commitDateTime": "2018-01-05 12:52:12", "authoredDateTime": "2018-01-05 12:51:24", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 15, "deletions": 1, "lines": 16}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 7, "deletions": 5, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.changeSessionIdSaveTwice()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1edce117aae86931b73cef7cb34df9a6b45474fd"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 7, "deletions": 5, "lines": 12, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)"]}, {"title": "ReactiveRedisOperationsSessionRepository.save(\u2026) on changeSessionId fails with ERR no such key", "body": "Saving a session from `changeSessionId()`fails with `ERR no such key`\r\n\r\n* Repository with code to reproduce: \\\r\n  https://github.com/hantsy/spring-reactive-microservice-sample\r\n* Test to reproduce: \\\r\n   `com.example.authservice.IntegrationTests` (Please make sure to run Redis and a Apache Cassandra node, does not require further setup beyond install & start)\r\n* Original StackOverflow post: \\\r\n   https://stackoverflow.com/questions/47829537/exception-threw-in-integrationtest-rediscommandexecutionexception-err-no-such\r\n\r\nFull log:\r\n\r\n```\r\n2017-12-15 14:59:16.757  INFO 24400 --- [           main] c.example.authservice.IntegrationTests   : Starting IntegrationTests on Marks-Mac-Pro.fritz.box with PID 24400 (started by mark in /Users/mark/tmp/spring-reactive-microservice-sample)\r\n2017-12-15 14:59:16.759  INFO 24400 --- [           main] c.example.authservice.IntegrationTests   : No active profile set, falling back to default profiles: default\r\n2017-12-15 14:59:16.799  INFO 24400 --- [           main] onfigReactiveWebServerApplicationContext : Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@66ea1466: startup date [Fri Dec 15 14:59:16 CET 2017]; root of context hierarchy\r\n2017-12-15 14:59:17.587  INFO 24400 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'cassandraTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=cassandraConfig; factoryMethodName=cassandraTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/example/authservice/CassandraConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.data.cassandra.CassandraDataAutoConfiguration; factoryMethodName=cassandraTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraDataAutoConfiguration.class]]\r\n2017-12-15 14:59:17.590  INFO 24400 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'reactiveCassandraTemplate' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=cassandraConfig; factoryMethodName=reactiveCassandraTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [com/example/authservice/CassandraConfig.class]] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.data.cassandra.CassandraReactiveDataAutoConfiguration; factoryMethodName=reactiveCassandraTemplate; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/data/cassandra/CassandraReactiveDataAutoConfiguration.class]]\r\n2017-12-15 14:59:17.602  INFO 24400 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!\r\n2017-12-15 14:59:17.669  INFO 24400 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!\r\n2017-12-15 14:59:17.685  INFO 24400 --- [           main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!\r\n2017-12-15 14:59:17.701  INFO 24400 --- [           main] .RepositoryConfigurationExtensionSupport : Spring Data Redis - Could not safely identify store assignment for repository candidate interface com.example.authservice.UserRepository.\r\n2017-12-15 14:59:18.443  INFO 24400 --- [           main] o.h.v.i.engine.ValidatorFactoryImpl      : HV000238: Temporal validation tolerance set to 0.\r\n2017-12-15 14:59:18.719  INFO 24400 --- [           main] c.d.driver.core.GuavaCompatibility       : Detected Guava >= 19 in the classpath, using modern compatibility layer\r\n2017-12-15 14:59:18.972  INFO 24400 --- [           main] com.datastax.driver.core.ClockFactory    : Using native clock to generate timestamps.\r\n2017-12-15 14:59:19.156  WARN 24400 --- [           main] com.datastax.driver.core.NettyUtil       : Found Netty's native epoll transport, but not running on linux-based operating system. Using NIO instead.\r\n2017-12-15 14:59:20.662  WARN 24400 --- [           main] com.datastax.driver.core.Cluster         : You listed localhost/0:0:0:0:0:0:0:1:9042 in your contact points, but it wasn't found in the control host's system.peers at startup\r\n2017-12-15 14:59:20.757  WARN 24400 --- [           main] licationStrategy$NetworkTopologyStrategy : Error while computing token map for keyspace full2 with datacenter bar: could not achieve replication factor 4 (found 0 replicas only), check your keyspace replication settings.\r\n2017-12-15 14:59:20.758  WARN 24400 --- [           main] licationStrategy$NetworkTopologyStrategy : Error while computing token map for keyspace full2 with datacenter foo: could not achieve replication factor 4 (found 0 replicas only), check your keyspace replication settings.\r\n2017-12-15 14:59:20.759  INFO 24400 --- [           main] c.d.d.c.p.DCAwareRoundRobinPolicy        : Using data-center name 'datacenter1' for DCAwareRoundRobinPolicy (if this is incorrect, please provide the correct datacenter name with DCAwareRoundRobinPolicy constructor)\r\n2017-12-15 14:59:20.761  INFO 24400 --- [           main] com.datastax.driver.core.Cluster         : New Cassandra host localhost/127.0.0.1:9042 added\r\n2017-12-15 14:59:21.495  WARN 24400 --- [luster-worker-1] licationStrategy$NetworkTopologyStrategy : Error while computing token map for keyspace full2 with datacenter bar: could not achieve replication factor 4 (found 0 replicas only), check your keyspace replication settings.\r\n2017-12-15 14:59:21.495  WARN 24400 --- [luster-worker-1] licationStrategy$NetworkTopologyStrategy : Error while computing token map for keyspace full2 with datacenter foo: could not achieve replication factor 4 (found 0 replicas only), check your keyspace replication settings.\r\n2017-12-15 14:59:22.202 DEBUG 24400 --- [           main] s.w.r.r.m.a.RequestMappingHandlerMapping : Looking for request mappings in application context: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@66ea1466: startup date [Fri Dec 15 14:59:16 CET 2017]; root of context hierarchy\r\n2017-12-15 14:59:22.265 DEBUG 24400 --- [           main] o.s.w.r.f.s.s.RouterFunctionMapping      : Looking for router functions in application context: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@66ea1466: startup date [Fri Dec 15 14:59:16 CET 2017]; root of context hierarchy\r\n2017-12-15 14:59:22.303  INFO 24400 --- [           main] o.s.w.r.f.s.s.RouterFunctionMapping      : Mapped (GET && /user) -> com.example.authservice.AuthServiceApplication$$Lambda$474/302256620@273293c8\r\n(GET && /users/exists) -> com.example.authservice.AuthServiceApplication$$Lambda$476/1771486148@6f1d799\r\n2017-12-15 14:59:22.320  INFO 24400 --- [           main] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]\r\n2017-12-15 14:59:22.321  INFO 24400 --- [           main] o.s.w.r.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.reactive.resource.ResourceWebHandler]\r\n2017-12-15 14:59:22.363  INFO 24400 --- [           main] o.h.v.i.engine.ValidatorFactoryImpl      : HV000238: Temporal validation tolerance set to 0.\r\n2017-12-15 14:59:22.400  INFO 24400 --- [           main] o.s.w.r.r.m.a.ControllerMethodResolver   : Looking for @ControllerAdvice: org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@66ea1466: startup date [Fri Dec 15 14:59:16 CET 2017]; root of context hierarchy\r\n2017-12-15 14:59:23.446  INFO 24400 --- [ctor-http-nio-1] r.ipc.netty.tcp.BlockingNettyContext     : Started HttpServer on /0:0:0:0:0:0:0:0:54930\r\n2017-12-15 14:59:23.447  INFO 24400 --- [           main] o.s.b.web.embedded.netty.NettyWebServer  : Netty started on port(s): 54930\r\n2017-12-15 14:59:23.451  INFO 24400 --- [           main] com.example.authservice.DataInitializer  : start users initialization  ...\r\n2017-12-15 14:59:23.471  INFO 24400 --- [           main] reactor.Flux.ConcatArray.1               : onSubscribe(FluxConcatArray.ConcatArraySubscriber)\r\n2017-12-15 14:59:23.472  INFO 24400 --- [           main] reactor.Flux.ConcatArray.1               : request(unbounded)\r\n2017-12-15 14:59:23.478  INFO 24400 --- [           main] c.example.authservice.IntegrationTests   : Started IntegrationTests in 7.204 seconds (JVM running for 8.716)\r\n2017-12-15 14:59:23.819  INFO 24400 --- [er-nio-worker-3] reactor.Flux.ConcatArray.1               : onNext(User(username=admin, password={bcrypt}$2a$10$GWL/MzYrTWKxclm2xECEIO8WHu2t//FFOMKkCPu3/NyE234f6Y/GS, email=admin@example.com, active=true, roles=[USER, ADMIN]))\r\n2017-12-15 14:59:23.819  INFO 24400 --- [er-nio-worker-3] reactor.Flux.ConcatArray.1               : onNext(User(username=user, password={bcrypt}$2a$10$CaX07.68xqlYUeXkeDJouORAc37HYgffjv7hqWzsbwjJiDXVgpgGm, email=user@example.com, active=true, roles=[USER]))\r\n2017-12-15 14:59:23.820  INFO 24400 --- [er-nio-worker-3] reactor.Flux.ConcatArray.1               : onComplete()\r\n2017-12-15 14:59:23.820  INFO 24400 --- [er-nio-worker-3] com.example.authservice.DataInitializer  : done users initialization...\r\n2017-12-15 14:59:23.988 DEBUG 24400 --- [           main] o.s.web.reactive.function.client         : onSubscribe(FluxMap.MapSubscriber)\r\n2017-12-15 14:59:23.988 DEBUG 24400 --- [           main] o.s.web.reactive.function.client         : request(unbounded)\r\n2017-12-15 14:59:24.288 DEBUG 24400 --- [ctor-http-nio-5] o.s.web.reactive.function.client         : onNext(WiretapClientHttpResponse [delegate=ReactorClientHttpResponse{request=[GET /user],status=401}])\r\n2017-12-15 14:59:24.290 DEBUG 24400 --- [ctor-http-nio-5] o.s.web.reactive.function.client         : onComplete()\r\n2017-12-15 14:59:24.311 DEBUG 24400 --- [           main] o.s.web.reactive.function.client         : onSubscribe(FluxMap.MapSubscriber)\r\n2017-12-15 14:59:24.312 DEBUG 24400 --- [           main] o.s.web.reactive.function.client         : request(unbounded)\r\n2017-12-15 14:59:59.936  INFO 24400 --- [     parallel-3] io.lettuce.core.EpollProvider            : Starting without optional epoll library\r\n2017-12-15 14:59:59.938  INFO 24400 --- [     parallel-3] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library\r\n2017-12-15 15:00:00.025 DEBUG 24400 --- [oEventLoop-12-1] o.s.web.reactive.DispatcherHandler       : Processing GET request for [http://localhost:54930/user]\r\n2017-12-15 15:00:00.028 DEBUG 24400 --- [oEventLoop-12-1] o.s.w.r.function.server.RouterFunctions  : Predicate \"(GET && /user)\" matches against \"GET /user\"\r\n2017-12-15 15:00:07.012 ERROR 24400 --- [oEventLoop-12-1] o.s.w.s.adapter.HttpWebHandlerAdapter    : Failed to handle request\r\n\r\norg.springframework.data.redis.RedisSystemException: Error in execution; nested exception is io.lettuce.core.RedisCommandExecutionException: ERR no such key\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:54) ~[spring-data-redis-2.0.2.RELEASE.jar:2.0.2.RELEASE]\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceExceptionConverter.convert(LettuceExceptionConverter.java:41) ~[spring-data-redis-2.0.2.RELEASE.jar:2.0.2.RELEASE]\r\n\tat org.springframework.data.redis.connection.lettuce.LettuceReactiveRedisConnection.lambda$translateException$0(LettuceReactiveRedisConnection.java:267) ~[spring-data-redis-2.0.2.RELEASE.jar:2.0.2.RELEASE]\r\n\tat reactor.core.publisher.Flux.lambda$onErrorMap$23(Flux.java:5170) ~[reactor-core-3.1.2.RELEASE.jar:3.1.2.RELEASE]\r\n\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:88) ~[reactor-core-3.1.2.RELEASE.jar:3.1.2.RELEASE]\r\n\tat reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:243) ~[reactor-core-3.1.2.RELEASE.jar:3.1.2.RELEASE]\r\n\tat org.springframework.security.test.context.support.ReactorContextTestExecutionListener$DelegateTestExecutionListener$SecuritySubContext.onError(ReactorContextTestExecutionListener.java:101) ~[spring-security-test-5.0.0.RELEASE.jar:5.0.0.RELEASE]\r\n\tat org.springframework.security.test.context.support.ReactorContextTestExecutionListener$DelegateTestExecutionListener$SecuritySubContext.onError(ReactorContextTestExecutionListener.java:101) ~[spring-security-test-5.0.0.RELEASE.jar:5.0.0.RELEASE]\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:120) ~[reactor-core-3.1.2.RELEASE.jar:3.1.2.RELEASE]\r\n\tat reactor.core.publisher.FluxMap$MapSubscriber.onError(FluxMap.java:120) ~[reactor-core-3.1.2.RELEASE.jar:3.1.2.RELEASE]\r\n\tat reactor.core.publisher.MonoNext$NextSubscriber.onError(MonoNext.java:87) ~[reactor-core-3.1.2.RELEASE.jar:3.1.2.RELEASE]\r\n\tat io.lettuce.core.RedisPublisher$State.onError(RedisPublisher.java:655) ~[lettuce-core-5.0.1.RELEASE.jar:na]\r\n\tat io.lettuce.core.RedisPublisher$RedisSubscription.onError(RedisPublisher.java:313) ~[lettuce-core-5.0.1.RELEASE.jar:na]\r\n\tat io.lettuce.core.RedisPublisher$SubscriptionCommand.onError(RedisPublisher.java:767) ~[lettuce-core-5.0.1.RELEASE.jar:na]\r\n\tat io.lettuce.core.RedisPublisher$SubscriptionCommand.complete(RedisPublisher.java:703) ~[lettuce-core-5.0.1.RELEASE.jar:na]\r\n\tat io.lettuce.core.protocol.CommandHandler.decode(CommandHandler.java:558) ~[lettuce-core-5.0.1.RELEASE.jar:na]\r\n\tat io.lettuce.core.protocol.CommandHandler.channelRead(CommandHandler.java:511) ~[lettuce-core-5.0.1.RELEASE.jar:na]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1359) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:935) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:138) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:645) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:580) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:497) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:459) ~[netty-transport-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:858) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]\r\n\tat io.netty.util.concurrent.DefaultThreadFactory$DefaultRunnableDecorator.run(DefaultThreadFactory.java:138) ~[netty-common-4.1.17.Final.jar:4.1.17.Final]\r\n\tat java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_131]\r\nCaused by: io.lettuce.core.RedisCommandExecutionException: ERR no such key\r\n\t... 26 common frames omitted\r\n```", "url": "https://github.com/spring-projects/spring-session/issues/954", "user": "mp911de", "labels": ["in: redis", "type: bug"], "created": "2017-12-15 14:01:30", "closed": "2018-01-05 11:53:45", "commits": {"c0f4c7f38134ca3e9c29525e8ca1aa3d5e93ca6a": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 20.00027777777778, "commitsDetails": [{"commitHash": "c0f4c7f38134ca3e9c29525e8ca1aa3d5e93ca6a", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["7fa07b2973781b8b9b19ff2aec065a3fbdf175b5"], "nameRev": "c0f4c7f38134ca3e9c29525e8ca1aa3d5e93ca6a tags/2.0.0.RELEASE~8", "commitMessage": "Fix reactive Redis change session id handling\n\nThis commit updates logic around changing session id in `ReactiveRedisOperationsSessionRepository` to properly handle updates for new sessions i.e. ones that haven't been saved yet.\n\nPreviously, the logic skipped both Redis rename operation and replacement of session id within the current session holder object, which led to no such key errors on subsequent save operation which still observed the session id as changed.\n\nCloses gh-954\n", "commitDateTime": "2018-01-05 12:22:28", "authoredDateTime": "2018-01-05 12:21:39", "commitGitStats": [{"filePath": "spring-session-data-redis/src/integration-test/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepositoryITests.java", "insertions": 16, "deletions": 1, "lines": 17}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/ReactiveRedisOperationsSessionRepository.java", "insertions": 17, "deletions": 9, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveRedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepositoryITests.changeSessionIdSaveTwice()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ReactiveRedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)", "TOT": 11, "UPD": 0, "INS": 3, "MOV": 6, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c0f4c7f38134ca3e9c29525e8ca1aa3d5e93ca6a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 17, "deletions": 9, "lines": 26, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 11, "UPD": 0, "INS": 3, "MOV": 6, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-redis/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.ReactiveRedisOperationsSessionRepository.RedisSession.saveChangeSessionId(java.lang.String)"]}, {"title": "Wrong Dependency in Spring Boot Tutorial", "body": "I just noticed that the 'spring-boot-starter-redis' dependency in the spring boot tutorial (https://docs.spring.io/spring-session/docs/current/reference/html5/guides/boot.html) is not longer valid and should be 'spring-boot-starter-data-redis' instead.", "url": "https://github.com/spring-projects/spring-session/issues/952", "user": "mld-ger", "labels": ["in: docs", "type: bug"], "created": "2017-12-14 13:13:28", "closed": "2018-01-29 17:57:54", "commits": {"f0e187fbd77dab32f4bbc4f4082d7b9293674501": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 46.000277777777775, "commitsDetails": [{"commitHash": "f0e187fbd77dab32f4bbc4f4082d7b9293674501", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["2d3001a24ef2c1970f7c085520d5487bdb68040f"], "nameRev": "f0e187fbd77dab32f4bbc4f4082d7b9293674501 tags/1.3.2.RELEASE~7", "commitMessage": "Update references to Spring Boot's Redis starter\n\nCloses gh-952\n", "commitDateTime": "2018-01-29 17:06:51", "authoredDateTime": "2018-01-29 16:54:46", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/boot.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/boot/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/findbyusername/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/httpsession-redis-json/build.gradle", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f0e187fbd77dab32f4bbc4f4082d7b9293674501"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 5, "lines": 10, "gitFilesChange": 4}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/findbyusername", "samples/boot", "docs/src/docs/asciidoc/guides/boot.adoc", "samples/httpsession-redis-json"]}, {"title": "SessionRepositoryFilter#changeSessionId does not copy the previous maxInactiveInterval into the new session", "body": "When using SpringSession with _ChangeSessionIdAuthenticationStrategy_ the SessionRepositoryFilter's method, _changeSessionId_, is invoked. In this code the **session** variable and the **original** variable are a reference to the same object, so in the following code extracted from _SessionRepositoryFilter.changeSessionId_\r\n\r\n_HttpSessionWrapper newSession = getSession();\r\noriginal.setSession(newSession.getSession()); \r\nnewSession.setMaxInactiveInterval(session.getMaxInactiveInterval());_\r\n\r\nin the second line we are effectively overwriting the internal session object of the same HttpSessionWrapper, referenced by our **original** AND **session** variables.\r\nSo in the third line we have lost the reference to the previously stored **maxInactiveInterval** value\r\n\r\nThe solution is as simply as \r\n\r\n_HttpSessionWrapper newSession = getSession();\r\n**int previousValue = session.getMaxInactiveInterval();**\r\noriginal.setSession(newSession.getSession());\r\nnewSession.setMaxInactiveInterval(**previousValue**);_", "url": "https://github.com/spring-projects/spring-session/issues/951", "user": "yacota", "labels": ["in: core", "type: bug"], "created": "2017-12-10 08:19:53", "closed": "2018-01-29 17:57:44", "commits": {"2d3001a24ef2c1970f7c085520d5487bdb68040f": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 50.000277777777775, "commitsDetails": [{"commitHash": "2d3001a24ef2c1970f7c085520d5487bdb68040f", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["f2d1badd60687bab56c98a1474465d172b4771c9"], "nameRev": "2d3001a24ef2c1970f7c085520d5487bdb68040f tags/1.3.2.RELEASE~8", "commitMessage": "Fix `SessionRepositoryFilter` not retaining original `maxInactiveInterval`\n\nCloses gh-951\n", "commitDateTime": "2018-01-29 16:45:46", "authoredDateTime": "2018-01-29 16:45:46", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 22, "deletions": 1, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.changeSessionId()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()", "TOT": 7, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions()", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.getSessionFalseWithInvalidSessionIdShouldOnlyAskRepositoryOnce()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().41", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().44", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().40", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().46", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().47", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().48", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().50", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().51", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().52", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().54", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().55", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().56", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().57", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().58", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().60", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().61", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().62", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().63", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().64", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().65", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().66", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().67", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().68", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().69", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().77", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().78", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().80", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().83", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().84", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().79", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().82", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.getSessionFalseWithInvalidSessionIdShouldOnlyAskRepositoryOnce().87", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).88", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).89", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().38.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.getSessionFalseWithInvalidSessionIdShouldOnlyAskRepositoryOnce().87.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 15, "UPD": 11, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError().43.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().41.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().45.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().47.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().65.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().69.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().77.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().48.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdCopyAttributes().38.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse().40.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().60.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionCreation()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionUpdates()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().38", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().81", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().81.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().50.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().51.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().52.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().56.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().57.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().58.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().70.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().71.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().72.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().73.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().74.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().75.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().76.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().49.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().53.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().54.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().55.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().59.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2d3001a24ef2c1970f7c085520d5487bdb68040f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 2, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.changeSessionId()"]}, {"title": "Fix package tangles SpringWebSessionConfiguration", "body": "Fix tangles in SpringWebSessionConfiguration", "url": "https://github.com/spring-projects/spring-session/issues/900", "user": "rwinch", "labels": ["type: bug"], "created": "2017-10-23 03:31:16", "closed": "2017-10-23 03:33:53", "commits": {"df7ab9d99ed7db673360ca8d57b42366726cc624": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "8b9d421ad63e0dfdad1313d5f8200cdb0769df2b": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "df7ab9d99ed7db673360ca8d57b42366726cc624", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["7d61c5496ae7c84ab86403a937fe4cfcd67743d3"], "nameRev": "df7ab9d99ed7db673360ca8d57b42366726cc624 tags/2.0.0.RC1~21", "commitMessage": "Package tangles for Reactive Configuration\n\nFixes gh-900\n", "commitDateTime": "2017-10-22 22:33:29", "authoredDateTime": "2017-10-22 21:16:10", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/{ => config/annotation/web/server}/EnableSpringWebSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/{ => config/annotation/web/server}/SpringWebSessionConfiguration.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/SpringWebSessionConfigurationTests.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/reactor/EnableRedisReactorSession.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config/annotation/web/reactor/RedisReactorSessionConfiguration.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EnableSpringWebSession.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringWebSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.SpringWebSessionConfiguration.webSessionManager(org.springframework.session.ReactorSessionRepository)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringWebSessionConfigurationTests.java", "spoonMethods": []}, {"spoonFilePath": "EnableRedisReactorSession.java", "spoonMethods": []}, {"spoonFilePath": "RedisReactorSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.reactor.RedisReactorSessionConfiguration", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "8b9d421ad63e0dfdad1313d5f8200cdb0769df2b", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["df7ab9d99ed7db673360ca8d57b42366726cc624"], "nameRev": "8b9d421ad63e0dfdad1313d5f8200cdb0769df2b tags/2.0.0.RC1~20", "commitMessage": "Tangles in RedisOperationsSessionRepository\n\nIssue: gh-900\n", "commitDateTime": "2017-10-22 22:33:36", "authoredDateTime": "2017-10-22 21:22:54", "commitGitStats": [{"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/RedisSessionExpirationPolicy.java", "insertions": 8, "deletions": 6, "lines": 14}, {"filePath": "spring-session-data-redis/src/test/java/org/springframework/session/data/redis/RedisSessionExpirationPolicyTests.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisSessionExpirationPolicy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy", "TOT": 9, "UPD": 6, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.getSessionKey(java.lang.String)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.getExpirationKey(long)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisSessionExpirationPolicyTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicyTests.setup()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["df7ab9d99ed7db673360ca8d57b42366726cc624", "8b9d421ad63e0dfdad1313d5f8200cdb0769df2b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 15, "deletions": 11, "lines": 26, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 25, "UPD": 17, "INS": 5, "MOV": 3, "DEL": 0, "spoonFilesChanged": 5, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/{ => config/annotation/web", "spring-session-data-redis/src/main/java/org/springframework/session/data/redis", "spring-session-data-redis/src/main/java/org/springframework/session/data/redis/config"], "changesInPackagesSPOON": ["org.springframework.session.SpringWebSessionConfiguration.webSessionManager(org.springframework.session.ReactorSessionRepository)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.getSessionKey(java.lang.String)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.getExpirationKey(long)", "org.springframework.session", "org.springframework.session.data.redis.RedisOperationsSessionRepository", "org.springframework.session.data.redis.config.annotation.web.reactor.RedisReactorSessionConfiguration", "org.springframework.session.data.redis.RedisSessionExpirationPolicy"]}, {"title": "Navbar not visible in Users sample app", "body": "Hi\r\n\r\ni to run the \"users\" sample app (samples/javaconfig/users/) with 'gradle tomcatRun' and encountered problems with the navbar. It's not visible for me running Chromium Version 60.0.3112.113 or Firefox 55.0.2.\r\n\r\nI removed the 'collapse' class from https://github.com/spring-projects/spring-session/blob/master/samples/javaconfig/users/src/main/webapp/index.jsp#L23\r\n\r\nand \r\n\r\nhttps://github.com/spring-projects/spring-session/blob/master/samples/javaconfig/users/src/main/webapp/link.jsp#L23\r\n\r\nSo the navbar is visible for me and everthing works. \r\nBootstrap version used is 2.3.2 in my case.\r\n\r\nThanks,\r\nKristian\r\n\r\n", "url": "https://github.com/spring-projects/spring-session/issues/885", "user": "kkoehler", "labels": ["in: docs", "type: bug"], "created": "2017-09-28 10:05:30", "closed": "2017-10-02 20:57:47", "commits": {"9f5f7540d2ebd27523632074429b4b7c4248f42b": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "9f5f7540d2ebd27523632074429b4b7c4248f42b", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["eb8c22939c7aab224198289ece8034b577b5e138"], "nameRev": "9f5f7540d2ebd27523632074429b4b7c4248f42b tags/2.0.0.M5~5", "commitMessage": "Fix Users sample app navbar\n\nCloses gh-885\n", "commitDateTime": "2017-10-02 22:31:55", "authoredDateTime": "2017-10-02 22:31:55", "commitGitStats": [{"filePath": "gradle/dependency-management.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/javaconfig/users/gradle/dependency-management.gradle", "insertions": 5, "deletions": 0, "lines": 5}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9f5f7540d2ebd27523632074429b4b7c4248f42b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["gradle", "samples/javaconfig/users/gradle"]}, {"title": "SpringSessionWebSessionManager does not write on commit", "body": "The `WebSession` is not automatically written when the `ServerHttpResponse` is committed.", "url": "https://github.com/spring-projects/spring-session/issues/856", "user": "rwinch", "labels": ["in: core", "type: bug"], "created": "2017-08-18 21:22:17", "closed": "2017-08-18 21:34:21", "commits": {"a7bb9d3b31df84e51240ae569713b50c31afc309": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a7bb9d3b31df84e51240ae569713b50c31afc309", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["5f0e4c3b8526d3ed0654efd3757c5df3469341ed"], "nameRev": "a7bb9d3b31df84e51240ae569713b50c31afc309 tags/2.0.0.M4~24", "commitMessage": "SpringSessionWebSessionManager writes on commit\n\nwhen the ServerHttpResonse is commited the cookie and the session are written\n\nFixes gh-856\n", "commitDateTime": "2017-08-18 16:28:46", "authoredDateTime": "2017-08-18 14:30:22", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/server/session/SpringSessionWebSessionManager.java", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/server/session/SpringSessionWebSessionStore.java", "insertions": 16, "deletions": 11, "lines": 27}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/server/session/SpringSessionWebSessionManagerTests.java", "insertions": 29, "deletions": 0, "lines": 29}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/server/session/SpringSessionWebSessionStoreTests.java", "insertions": 37, "deletions": 17, "lines": 54}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpringSessionWebSessionManager.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionManager.getSession(org.springframework.web.server.ServerWebExchange)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionManager.retrieveSession(org.springframework.web.server.ServerWebExchange)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionManager.createSession(org.springframework.web.server.ServerWebExchange)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringSessionWebSessionStore.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.createSession(org.springframework.session.Session)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.existingSession(org.springframework.session.Session)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.SpringSessionWebSession", "TOT": 7, "UPD": 3, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.SpringSessionWebSession.save()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.createSession()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.retrieveSession(java.lang.String)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.createSession(java.util.function.Function)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.retrieveSession(java.lang.String,java.util.function.Function)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.createSession(org.springframework.session.Session,java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStore.existingSession(org.springframework.session.Session,java.util.function.Function)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringSessionWebSessionManagerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionManagerTests", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionManagerTests.commitWrites()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringSessionWebSessionStoreTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.storeSessionWhenInvokedThenSessionSaved()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenNoAttributesThenNotStarted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenAddAttributeThenStarted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndSizeThenDelegatesToCreateSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndIsEmptyThenDelegatesToCreateSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndContainsKeyAndNotStringThenFalse()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndContainsKeyAndNotFoundThenFalse()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndContainsKeyAndFoundThenTrue()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndPutThenDelegatesToCreateSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndPutNullThenDelegatesToCreateSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndRemoveThenDelegatesToCreateSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndPutAllThenDelegatesToCreateSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndClearThenDelegatesToCreateSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndKeySetThenDelegatesToCreateSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndValuesThenDelegatesToCreateSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.createSessionWhenGetAttributesAndEntrySetThenDelegatesToCreateSession()", "TOT": 3, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.server.session.SpringSessionWebSessionStoreTests.retrieveSessionThenStarted()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a7bb9d3b31df84e51240ae569713b50c31afc309"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 20, "deletions": 15, "lines": 35, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 34, "UPD": 10, "INS": 12, "MOV": 5, "DEL": 7, "spoonFilesChanged": 2, "spoonMethodsChanged": 13}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/server/session"], "changesInPackagesSPOON": ["org.springframework.session.web.server.session.SpringSessionWebSessionStore.createSession(org.springframework.session.Session)", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.SpringSessionWebSession.save()", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.createSession(java.util.function.Function)", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.existingSession(org.springframework.session.Session)", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.existingSession(org.springframework.session.Session,java.util.function.Function)", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.createSession()", "org.springframework.session.web.server.session.SpringSessionWebSessionManager.getSession(org.springframework.web.server.ServerWebExchange)", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.retrieveSession(java.lang.String,java.util.function.Function)", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.SpringSessionWebSession", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.retrieveSession(java.lang.String)", "org.springframework.session.web.server.session.SpringSessionWebSessionManager.createSession(org.springframework.web.server.ServerWebExchange)", "org.springframework.session.web.server.session.SpringSessionWebSessionManager.retrieveSession(org.springframework.web.server.ServerWebExchange)", "org.springframework.session.web.server.session.SpringSessionWebSessionStore.createSession(org.springframework.session.Session,java.util.function.Function)"]}, {"title": "Document that MapReactorSessionRepository must be a non-blocking Map", "body": "", "url": "https://github.com/spring-projects/spring-session/issues/842", "user": "rwinch", "labels": ["in: docs", "type: bug"], "created": "2017-07-27 15:51:16", "closed": "2018-01-09 19:32:00", "commits": {"1ba434a3572ad4219d463202a471f0163f1e7b29": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 166.00027777777777, "commitsDetails": [{"commitHash": "1ba434a3572ad4219d463202a471f0163f1e7b29", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["45807998f62d8a22fc6f548c798ba19fd40ddeda"], "nameRev": "1ba434a3572ad4219d463202a471f0163f1e7b29 tags/2.0.0.RELEASE~2", "commitMessage": "Document `ReactiveMapSessionRepository` map requirements\n\nCloses gh-842\n", "commitDateTime": "2018-01-09 20:19:22", "authoredDateTime": "2018-01-09 20:19:22", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/ReactiveMapSessionRepository.java", "insertions": 3, "deletions": 3, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ReactiveMapSessionRepository.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ba434a3572ad4219d463202a471f0163f1e7b29"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session"]}, {"title": "Ensure Spring Session core depends only on `spring-jcl`", "body": "In [Requirements section](http://docs.spring.io/spring-session/docs/2.0.0.M2/reference/html5/) of reference manual we claim that Spring Session's only required dependency is `spring-jcl`.\r\n\r\nHowever recent changes to `Session` in 36bb65e have introduced dependency of core API on `spring-core` via use of [`org.springframework.util.Assert`](https://github.com/spring-projects/spring-session/blob/master/spring-session-core/src/main/java/org/springframework/session/Session.java#L23). For non-Spring users this will result in `ClassNotFoundException` on invocation of `Session#getRequiredAttribute`.\r\n\r\nWe should ensure that our core does not have such dependencies. The exception might only be the code that provides extra functionalities which require Spring anyway (such as Spring Security integration).", "url": "https://github.com/spring-projects/spring-session/issues/820", "user": "vpavic", "labels": ["type: bug"], "created": "2017-07-03 08:23:50", "closed": "2017-07-05 15:05:15", "commits": {"47a7a35aa425640c0f34f806bc05fadd59e92e95": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "47a7a35aa425640c0f34f806bc05fadd59e92e95", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["04b4fe3e3bf88e542288e2363a7f961918be431f"], "nameRev": "47a7a35aa425640c0f34f806bc05fadd59e92e95 tags/2.0.0.M3~23", "commitMessage": "Remove use of `Assert#notNull` from core components\n\nFixes gh-820\n", "commitDateTime": "2017-07-05 17:04:03", "authoredDateTime": "2017-07-05 17:04:03", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/Session.java", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/CookieHttpSessionStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/HeaderHttpSessionStrategy.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Session.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.getRequiredAttribute(java.lang.String)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "CookieHttpSessionStrategy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.setCookieSerializer(org.springframework.session.web.http.CookieSerializer)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "HeaderHttpSessionStrategy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.HeaderHttpSessionStrategy.setHeaderName(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["47a7a35aa425640c0f34f806bc05fadd59e92e95"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 10, "deletions": 7, "lines": 17, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 7, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 3, "spoonFilesChanged": 3, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http", "spring-session-core/src/main/java/org/springframework/session"], "changesInPackagesSPOON": ["org.springframework.session.web.http.HeaderHttpSessionStrategy.setHeaderName(java.lang.String)", "org.springframework.session.getRequiredAttribute(java.lang.String)", "org.springframework.session.web.http.CookieHttpSessionStrategy.setCookieSerializer(org.springframework.session.web.http.CookieSerializer)"]}, {"title": "Move SessionEventRegistry back to integrationTest Source", "body": "", "url": "https://github.com/spring-projects/spring-session/issues/810", "user": "rwinch", "labels": ["type: bug"], "created": "2017-06-23 16:32:18", "closed": "2017-06-23 17:22:32", "commits": {"084e3428fbf510b85f9d299993a923ec9c07d29b": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "084e3428fbf510b85f9d299993a923ec9c07d29b", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["b321ff02f081c7e1c42e3db3b65678571fb09597"], "nameRev": "084e3428fbf510b85f9d299993a923ec9c07d29b tags/2.0.0.M3~33", "commitMessage": "Move `SessionEventRegistry` back to integration-test sources\n\nFixes gh-810\n", "commitDateTime": "2017-06-23 19:03:46", "authoredDateTime": "2017-06-23 19:03:46", "commitGitStats": [{"filePath": "{spring-session-core/src/main => spring-session-data-redis/src/integration-test}/java/org/springframework/session/data/SessionEventRegistry.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "spring-session-hazelcast/src/integration-test/java/org/springframework/session/hazelcast/SessionEventRegistry.java", "insertions": 70, "deletions": 0, "lines": 70}, {"filePath": "spring-session-hazelcast/src/integration-test/java/org/springframework/session/hazelcast/config/annotation/web/http/EnableHazelcastHttpSessionEventsTests.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionEventRegistry.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.SessionEventRegistry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnableHazelcastHttpSessionEventsTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.HazelcastSessionConfig.sessionEventRegistry()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["084e3428fbf510b85f9d299993a923ec9c07d29b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 70, "deletions": 0, "lines": 70, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-hazelcast/src/integration-test/java/org/springframework/session/hazelcast", "{spring-session-core/src/main => spring-session-data-redis/src/integration-test}/java/org/springframework/session/data"], "changesInPackagesSPOON": ["org.springframework.session.hazelcast.SessionEventRegistry"]}, {"title": "Use explicit constraints in JDBC schema scripts", "body": "Backport of #750.", "url": "https://github.com/spring-projects/spring-session/issues/766", "user": "vpavic", "labels": ["in: jdbc", "type: bug"], "created": "2017-04-26 21:32:30", "closed": "2017-04-26 22:02:04", "commits": {"2d2e7a3cec6910a8b43c67369a3318be41b7599e": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2d2e7a3cec6910a8b43c67369a3318be41b7599e", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["6e2d4a5ef4870ada0ef3d4b7beedb17a08ec79bc"], "nameRev": "2d2e7a3cec6910a8b43c67369a3318be41b7599e remotes/origin/1.4.x~11", "commitMessage": "Use explicit constraints in JDBC schema scripts\n\nFixes gh-766\n", "commitDateTime": "2017-04-26 23:32:58", "authoredDateTime": "2017-04-17 09:37:09", "commitGitStats": [{"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-db2.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-derby.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-h2.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-hsqldb.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-mysql.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-oracle.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-postgresql.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlite.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlserver.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sybase.sql", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2d2e7a3cec6910a8b43c67369a3318be41b7599e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 40, "deletions": 40, "lines": 80, "gitFilesChange": 10}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlserver.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-mysql.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlite.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-db2.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-oracle.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-hsqldb.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-h2.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sybase.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-postgresql.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-derby.sql"]}, {"title": "Use explicit constraints in JDBC schema scripts", "body": "Backport of #750.", "url": "https://github.com/spring-projects/spring-session/issues/765", "user": "vpavic", "labels": ["in: jdbc", "type: bug"], "created": "2017-04-26 21:32:27", "closed": "2017-04-26 22:21:51", "commits": {"a64e6d1a9c119c9615b11da634084a3180948024": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "a64e6d1a9c119c9615b11da634084a3180948024", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["598715f2196e14a1f9a7f859df9207e8b16d38f2"], "nameRev": "a64e6d1a9c119c9615b11da634084a3180948024 tags/1.3.1.RELEASE~1", "commitMessage": "Use explicit constraints in JDBC schema scripts\n\nFixes gh-765\n", "commitDateTime": "2017-04-26 23:33:35", "authoredDateTime": "2017-04-17 09:37:09", "commitGitStats": [{"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-db2.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-derby.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-h2.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-hsqldb.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-mysql.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-oracle.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-postgresql.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlite.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlserver.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sybase.sql", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a64e6d1a9c119c9615b11da634084a3180948024"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 40, "deletions": 40, "lines": 80, "gitFilesChange": 10}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlserver.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-mysql.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlite.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-db2.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-oracle.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-hsqldb.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-h2.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sybase.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-postgresql.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-derby.sql"]}, {"title": "Fix invalid not null assertions", "body": "Backport of #724.", "url": "https://github.com/spring-projects/spring-session/issues/762", "user": "vpavic", "labels": ["in: jdbc", "in: redis", "type: backport", "type: bug"], "created": "2017-04-26 20:58:33", "closed": "2017-04-26 22:22:04", "commits": {"4f57c6c6c1695f6490fb84e476864a393efb00db": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4f57c6c6c1695f6490fb84e476864a393efb00db", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["c210a4a3cf756e127168236cc67dc35d04f183e1"], "nameRev": "4f57c6c6c1695f6490fb84e476864a393efb00db tags/1.3.1.RELEASE~4", "commitMessage": "Fix invalid not null assertions\n\nFixes gh-762\n", "commitDateTime": "2017-04-26 23:16:55", "authoredDateTime": "2017-01-31 01:07:57", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.JdbcSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4f57c6c6c1695f6490fb84e476864a393efb00db"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/jdbc", "spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository.JdbcSession", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession"]}, {"title": "Mongo repository `createSession` causes NPE if max inactive interval is undefined", "body": "Backport of #716.", "url": "https://github.com/spring-projects/spring-session/issues/761", "user": "vpavic", "labels": ["in: mongo-db", "type: backport", "type: bug"], "created": "2017-04-26 20:56:32", "closed": "2017-04-26 22:22:24", "commits": {"c210a4a3cf756e127168236cc67dc35d04f183e1": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c210a4a3cf756e127168236cc67dc35d04f183e1", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["a1380d722b900a5135b9e0bab745dfbe286702dd"], "nameRev": "c210a4a3cf756e127168236cc67dc35d04f183e1 tags/1.3.1.RELEASE~5", "commitMessage": "Prevent NPE in`MongoOperationsSessionRepository` when creating session if max inactive interval is undefined\n\nFixes gh-761\n", "commitDateTime": "2017-04-26 23:15:40", "authoredDateTime": "2017-01-21 22:58:06", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/mongo/MongoOperationsSessionRepository.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/mongo/MongoOperationsSessionRepositoryTests.java", "insertions": 30, "deletions": 13, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MongoOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepository.createSession()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "MongoOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldDeleteSession()", "TOT": 10, "UPD": 3, "INS": 1, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.setUp()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldSaveSession()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldHandleExpiredSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldGetSessionsMapByPrincipal()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldCreateSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldGetSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldReturnEmptyMapForNotSupportedIndex()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c210a4a3cf756e127168236cc67dc35d04f183e1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/mongo"], "changesInPackagesSPOON": ["org.springframework.session.data.mongo.MongoOperationsSessionRepository.createSession()"]}, {"title": "Usage of Spring Data Redis 1.7.1 which has critical bug https://jira.spring.io/browse/DATAREDIS-502", "body": "Hi, \r\n\r\nSpring Session uses Spring Data Redis 1.7.1 which has critical bug already fixed in 1.7.3 https://jira.spring.io/browse/DATAREDIS-502\r\n\r\nI haven't seen any related pull requests for 1.4.0 M1. Are there any plans to update Spring Data Redis?\r\n\r\nP.S. I do not know gradle well but i suppose that \"springDataReleaseTrainVersion=Kay-BUILD-SNAPSHOT\" means that current master branch points to the latest Spring Data Redis version  2.0 M3 (Kay). If so is it possible to have Snapshot of Spring Session which uses  2.0 M3 (Kay)?\r\n", "url": "https://github.com/spring-projects/spring-session/issues/756", "user": "mumukiller", "labels": ["in: redis", "type: bug"], "created": "2017-04-25 14:30:50", "closed": "2017-04-26 12:58:50", "commits": {"c029922bf408cb80c406975d131956d8ad31cffb": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "c029922bf408cb80c406975d131956d8ad31cffb", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["6b55f3f7d271b30882044df30ecb574f4d7b9601"], "nameRev": "c029922bf408cb80c406975d131956d8ad31cffb tags/1.3.1.RELEASE~7", "commitMessage": "Update to Spring Data Redis 1.7.10\n\nNote the Spring 3 tests must stick to 1.7.1\n\nFixes gh-756\n", "commitDateTime": "2017-04-26 07:56:15", "authoredDateTime": "2017-04-26 07:56:15", "commitGitStats": [{"filePath": "gradle.properties", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "gradle/spring3.gradle", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["c029922bf408cb80c406975d131956d8ad31cffb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 2}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["gradle.properties", "gradle"]}, {"title": "Improve GemFire SessionRepository, (HTTP) Session copy logic to void issues with delta propagation on updates. ", "body": "A Spring Session Data GemFire user (Pivotal Customer) observed to problems with Spring Session Data GemFire integration...\r\n\r\n1. That multiple `HttpSessionListener.sessionCreated(:HttpSessionEvent)` are being fired per HTTP request.\r\n\r\n2. `session.removeAttribute(name)` is not working correctly.\r\n\r\nWhile #2 can be solved, and will properly handle deltas in the process of adding more intelligence to copies, #1 is a GemFire issue and not something _Spring Session Data GemFire_ can necessarily control.", "url": "https://github.com/spring-projects/spring-session/issues/755", "user": "jxblum", "labels": ["type: bug", "type: enhancement"], "created": "2017-04-21 22:29:25", "closed": "2017-04-22 08:41:48", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "SpringSessionRememberMeServices removes Spring Security's Saved Request", "body": "Currently we invalidate existing session when handling login failure in `SpringSessionRememberMeServices#loginFail`. As a consequence of this, original `SavedRequest` is lost with the invalidated session so Spring Security is unable to redirect user to originally requested resource after subsequent successful login attempts.\r\n\r\nI think we should be safe to make `SpringSessionRememberMeServices#loginFail` a no-op. Any thoughts @rwinch? To my knowledge no other `RememberMeServices` invalidates existing session when handling login failure.", "url": "https://github.com/spring-projects/spring-session/issues/752", "user": "vpavic", "labels": ["in: core", "in: security", "type: bug"], "created": "2017-04-18 16:30:05", "closed": "2017-04-26 13:57:32", "commits": {"f30cb7a1e64d5c6301968769e670eabb44e95a8b": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "6e2d4a5ef4870ada0ef3d4b7beedb17a08ec79bc": {"commitGHEventType": "referenced", "commitUser": "rwinch"}, "a1380d722b900a5135b9e0bab745dfbe286702dd": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "f30cb7a1e64d5c6301968769e670eabb44e95a8b", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["432eb84a946e869a868e8943e2471d940590a2d1"], "nameRev": "f30cb7a1e64d5c6301968769e670eabb44e95a8b tags/2.0.0.M1~29", "commitMessage": "SpringSessionRememberMeServices rm SecurityContext attribute\n\nSpringSessionRememberMeServices use to invalidate the session which would\ncause Spring Security's saved request to be lost.\n\nNow SpringSessionRememberMeServices deletes the SecurityContext from the\nHttpSession instead.\n\nFixes gh-752\n", "commitDateTime": "2017-04-26 08:57:22", "authoredDateTime": "2017-04-26 08:12:26", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/security/web/authentication/SpringSessionRememberMeServices.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "spring-session/src/test/java/org/springframework/session/security/web/authentication/SpringSessionRememberMeServicesTests.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpringSessionRememberMeServices.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServices.logout(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServices", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringSessionRememberMeServicesTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServicesTests.loginFailInvalidatesSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "6e2d4a5ef4870ada0ef3d4b7beedb17a08ec79bc", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["808414191ef19983941f5de4e79e67dd66619e4a"], "nameRev": "6e2d4a5ef4870ada0ef3d4b7beedb17a08ec79bc remotes/origin/1.4.x~12", "commitMessage": "SpringSessionRememberMeServices rm SecurityContext attribute\n\nSpringSessionRememberMeServices use to invalidate the session which would\ncause Spring Security's saved request to be lost.\n\nNow SpringSessionRememberMeServices deletes the SecurityContext from the\nHttpSession instead.\n\nFixes gh-752\n", "commitDateTime": "2017-04-26 08:57:55", "authoredDateTime": "2017-04-26 08:12:26", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/security/web/authentication/SpringSessionRememberMeServices.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "spring-session/src/test/java/org/springframework/session/security/web/authentication/SpringSessionRememberMeServicesTests.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpringSessionRememberMeServices.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServices.logout(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServices", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringSessionRememberMeServicesTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServicesTests.loginFailInvalidatesSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "a1380d722b900a5135b9e0bab745dfbe286702dd", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["c029922bf408cb80c406975d131956d8ad31cffb"], "nameRev": "a1380d722b900a5135b9e0bab745dfbe286702dd tags/1.3.1.RELEASE~6", "commitMessage": "SpringSessionRememberMeServices rm SecurityContext attribute\n\nSpringSessionRememberMeServices use to invalidate the session which would\ncause Spring Security's saved request to be lost.\n\nNow SpringSessionRememberMeServices deletes the SecurityContext from the\nHttpSession instead.\n\nFixes gh-752\n", "commitDateTime": "2017-04-26 09:09:12", "authoredDateTime": "2017-04-26 08:12:26", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/security/web/authentication/SpringSessionRememberMeServices.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "spring-session/src/test/java/org/springframework/session/security/web/authentication/SpringSessionRememberMeServicesTests.java", "insertions": 4, "deletions": 2, "lines": 6}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpringSessionRememberMeServices.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServices.logout(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServices", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SpringSessionRememberMeServicesTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.security.web.authentication.SpringSessionRememberMeServicesTests.loginFailInvalidatesSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f30cb7a1e64d5c6301968769e670eabb44e95a8b"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 1, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/security/web/authentication"], "changesInPackagesSPOON": ["org.springframework.session.security.web.authentication.SpringSessionRememberMeServices", "org.springframework.session.security.web.authentication.SpringSessionRememberMeServices.logout(javax.servlet.http.HttpServletRequest)"]}, {"title": "Create table statements for DB2 give error", "body": "Using spring-session-jdbc 1.3.0.RELEASE, and running the SQL to create the tables on DB2, found here:\r\nhttps://github.com/spring-projects/spring-session/blob/master/spring-session/src/main/resources/org/springframework/session/jdbc/schema-db2.sql\r\n\r\nOn DB2 v10.5.0.5, the first CREATE TABLE gives the following error:\r\n[2017-04-15 18:40:07] [42831][-542] The column named \"SESSION_ID\" cannot be a column of a primary key or unique key constraint because it can contain null values.. SQLCODE=-542, SQLSTATE=42831, DRIVER=4.7.85\r\n\r\nChanging the primary key columns on both tables to NOT NULL fixes the issue, and I wouldn't expect SESSION_ID or ATTRIBUTE_NAME to be null, so that seems like a valid change, but wanted to verify.", "url": "https://github.com/spring-projects/spring-session/issues/750", "user": "smackfu", "labels": ["in: jdbc", "type: bug"], "created": "2017-04-15 22:54:38", "closed": "2017-04-26 21:50:54", "commits": {"0312c31a42698e23e9a83ce7c7849fefb9af2115": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "0312c31a42698e23e9a83ce7c7849fefb9af2115", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["815cbf4ee8b288862024ba6f7fa29e64b4a83dc5"], "nameRev": "0312c31a42698e23e9a83ce7c7849fefb9af2115 tags/2.0.0.M1~24", "commitMessage": "Use explicit constraints in JDBC schema scripts\n\nFixes gh-750\n", "commitDateTime": "2017-04-26 23:31:18", "authoredDateTime": "2017-04-17 09:37:09", "commitGitStats": [{"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-db2.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-derby.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-h2.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-hsqldb.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-mysql.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-oracle.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-postgresql.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlite.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlserver.sql", "insertions": 4, "deletions": 4, "lines": 8}, {"filePath": "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sybase.sql", "insertions": 4, "deletions": 4, "lines": 8}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0312c31a42698e23e9a83ce7c7849fefb9af2115"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 40, "deletions": 40, "lines": 80, "gitFilesChange": 10}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlserver.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-mysql.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sqlite.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-db2.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-oracle.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-hsqldb.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-h2.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-sybase.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-postgresql.sql", "spring-session/src/main/resources/org/springframework/session/jdbc/schema-derby.sql"]}, {"title": "Travis CI fails occasionally due to GemFire sample integration test failure", "body": "Backport of #672.", "url": "https://github.com/spring-projects/spring-session/issues/728", "user": "vpavic", "labels": ["in: build", "in: docs", "in: gemfire", "type: bug"], "created": "2017-02-02 20:01:49", "closed": "2017-02-16 21:32:51", "commits": {"4175751b1bb37406b92504096a4a3a3d6e4069ab": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "4175751b1bb37406b92504096a4a3a3d6e4069ab", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["736b341ba3a76fc6ca75e6f13d9fa28c24babd49"], "nameRev": "4175751b1bb37406b92504096a4a3a3d6e4069ab remotes/origin/1.4.x~20", "commitMessage": "Introduce more reliable coordination between a GemFire client/server during integration tests.\n\nFixes gh-728\n", "commitDateTime": "2017-02-16 22:08:36", "authoredDateTime": "2017-01-18 22:58:55", "commitGitStats": [{"filePath": "samples/boot/gemfire/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/boot/gemfire/src/main/java/sample/client/Application.java", "insertions": 78, "deletions": 8, "lines": 86}, {"filePath": "samples/javaconfig/gemfire-clientserver/build.gradle", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "samples/javaconfig/gemfire-clientserver/src/main/java/sample/ClientConfig.java", "insertions": 84, "deletions": 13, "lines": 97}, {"filePath": "samples/javaconfig/gemfire-clientserver/src/main/java/sample/ServerConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/xml/gemfire-clientserver/build.gradle", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "samples/xml/gemfire-clientserver/src/main/java/sample/GemFireCacheServerReadyBeanPostProcessor.java", "insertions": 0, "deletions": 73, "lines": 73}, {"filePath": "samples/xml/gemfire-clientserver/src/main/java/sample/GemFireClientServerReadyBeanPostProcessor.java", "insertions": 148, "deletions": 0, "lines": 148}, {"filePath": "samples/xml/gemfire-clientserver/src/main/resources/META-INF/spring/session-server.xml", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "samples/xml/gemfire-clientserver/src/main/webapp/WEB-INF/spring/session-client.xml", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Application.java", "spoonMethods": [{"spoonMethodName": "sample.client.Application.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.shouldCheckWhetherGemFireServerIsRunning(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.isGemFireRegion(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.whenGemFireCache(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientNotified()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientSubscriptionQueueConnectionEstablished()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.defaultIfNull(com.gemstone.gemfire.cache.client.Pool,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "ClientConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ClientConfig.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "sample.ClientConfig", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.applicationName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.logLevel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.shouldCheckWhetherGemFireServerIsRunning(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.isGemFireRegion(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.whenGemFireCache(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientNotified()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientSubscriptionQueueConnectionEstablished()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.defaultIfNull(com.gemstone.gemfire.cache.client.Pool,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "ServerConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ServerConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GemFireCacheServerReadyBeanPostProcessor.java", "spoonMethods": [{"spoonMethodName": "sample.GemFireCacheServerReadyBeanPostProcessor", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GemFireClientServerReadyBeanPostProcessor.java", "spoonMethods": [{"spoonMethodName": "sample.GemFireClientServerReadyBeanPostProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4175751b1bb37406b92504096a4a3a3d6e4069ab"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 326, "deletions": 104, "lines": 430, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 42, "UPD": 6, "INS": 27, "MOV": 6, "DEL": 3, "spoonFilesChanged": 5, "spoonMethodsChanged": 28}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/boot/gemfire", "samples/boot/gemfire/src/main/java/sample/client", "samples/javaconfig/gemfire-clientserver", "samples/xml/gemfire-clientserver/src/main/java/sample", "samples/javaconfig/gemfire-clientserver/src/main/java/sample", "samples/xml/gemfire-clientserver"], "changesInPackagesSPOON": ["sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientSubscriptionQueueConnectionEstablished()", "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2", "sample.client.Application", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int)", "sample.ServerConfig", "sample.GemFireClientServerReadyBeanPostProcessor", "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientNotified()", "sample.ClientConfig.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int)", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.isGemFireRegion(java.lang.Object,java.lang.String)", "sample.ClientConfig.logLevel()", "sample.ClientConfig.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientNotified()", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientSubscriptionQueueConnectionEstablished()", "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.defaultIfNull(com.gemstone.gemfire.cache.client.Pool,java.lang.String[])", "sample.ClientConfig.applicationName()", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.whenGemFireCache(java.lang.Object,java.lang.String)", "sample.GemFireCacheServerReadyBeanPostProcessor", "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.defaultIfNull(com.gemstone.gemfire.cache.client.Pool,java.lang.String[])", "sample.client.Application.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.shouldCheckWhetherGemFireServerIsRunning(java.lang.Object,java.lang.String)", "sample.ClientConfig", "sample.client.Application.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int)", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.shouldCheckWhetherGemFireServerIsRunning(java.lang.Object,java.lang.String)", "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.isGemFireRegion(java.lang.Object,java.lang.String)", "sample.client.Application.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.whenGemFireCache(java.lang.Object,java.lang.String)"]}, {"title": "GemFire sample integration test fails with JAVA_TOOL_OPTIONS env variable", "body": "Backport of #669.", "url": "https://github.com/spring-projects/spring-session/issues/727", "user": "vpavic", "labels": ["in: build", "in: docs", "in: gemfire", "type: bug"], "created": "2017-02-02 19:54:03", "closed": "2017-02-16 21:32:38", "commits": {"736b341ba3a76fc6ca75e6f13d9fa28c24babd49": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 14.000277777777777, "commitsDetails": [{"commitHash": "736b341ba3a76fc6ca75e6f13d9fa28c24babd49", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["ecf0a80d7dae80c6ac7b18447c10c60eda7d46c3"], "nameRev": "736b341ba3a76fc6ca75e6f13d9fa28c24babd49 remotes/origin/1.4.x~21", "commitMessage": "Fixes GemFire client/server integratione tests issue when setting JAVA_TOOL_OPTIONS env var\n\nFixes gh-727\n", "commitDateTime": "2017-02-16 20:51:58", "authoredDateTime": "2017-01-18 00:42:41", "commitGitStats": [{"filePath": "samples/boot/gemfire/build.gradle", "insertions": 26, "deletions": 13, "lines": 39}, {"filePath": "samples/boot/gemfire/src/main/java/sample/client/Application.java", "insertions": 8, "deletions": 9, "lines": 17}, {"filePath": "samples/boot/gemfire/src/main/java/sample/server/GemFireServer.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "samples/boot/gemfire/src/main/java/sample/server/NativeGemFireServer.java", "insertions": 186, "deletions": 0, "lines": 186}, {"filePath": "samples/javaconfig/gemfire-clientserver/build.gradle", "insertions": 18, "deletions": 11, "lines": 29}, {"filePath": "samples/javaconfig/gemfire-clientserver/src/main/java/sample/ClientConfig.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "samples/javaconfig/gemfire-clientserver/src/main/java/sample/ServerConfig.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "samples/xml/gemfire-clientserver/build.gradle", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "samples/xml/gemfire-clientserver/src/main/java/sample/Application.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "spring-session/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Application.java", "spoonMethods": []}, {"spoonFilePath": "GemFireServer.java", "spoonMethods": [{"spoonMethodName": "sample.server.GemFireServer", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.server.GemFireServer.applicationName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.server.GemFireServer.logLevel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.server.GemFireServer.gemfireCacheServer(com.gemstone.gemfire.cache.Cache,java.lang.String,java.lang.String,int)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.server.GemFireServer.gemfireProperties()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "NativeGemFireServer.java", "spoonMethods": [{"spoonMethodName": "sample.server.NativeGemFireServer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ClientConfig", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ServerConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ServerConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ServerConfig.gemfireProperties()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["736b341ba3a76fc6ca75e6f13d9fa28c24babd49"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 268, "deletions": 59, "lines": 327, "gitFilesChange": 10}, "spoonStatsSummary": {"TOT": 14, "UPD": 8, "INS": 3, "MOV": 0, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/boot/gemfire/src/main/java/sample/server", "samples/boot/gemfire/src/main/java/sample/client", "spring-session", "samples/xml/gemfire-clientserver/src/main/java/sample", "samples/boot/gemfire", "samples/javaconfig/gemfire-clientserver", "samples/javaconfig/gemfire-clientserver/src/main/java/sample", "samples/xml/gemfire-clientserver"], "changesInPackagesSPOON": ["sample.server.GemFireServer.gemfireCacheServer(com.gemstone.gemfire.cache.Cache,java.lang.String,java.lang.String,int)", "sample.server.NativeGemFireServer", "sample.server.GemFireServer.applicationName()", "sample.server.GemFireServer", "sample.server.GemFireServer.gemfireProperties()", "sample.server.GemFireServer.logLevel()", "sample.ServerConfig", "sample.ServerConfig.gemfireProperties()", "sample.ClientConfig"]}, {"title": "Fix invalid not null assertions", "body": "Backport of #724.", "url": "https://github.com/spring-projects/spring-session/issues/726", "user": "vpavic", "labels": ["in: jdbc", "in: redis", "type: backport", "type: bug"], "created": "2017-02-02 19:46:56", "closed": "2017-02-02 19:50:21", "commits": {"0a7e0f1a976eec6fa5fb1dd8af331d8c3b152cb0": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0a7e0f1a976eec6fa5fb1dd8af331d8c3b152cb0", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["32d928564cad868f0932dd196ee525973771b06c"], "nameRev": "0a7e0f1a976eec6fa5fb1dd8af331d8c3b152cb0 remotes/origin/1.4.x~23", "commitMessage": "Fix invalid not null assertions\n\nFixes gh-726\n", "commitDateTime": "2017-02-02 20:47:19", "authoredDateTime": "2017-01-31 01:07:57", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.JdbcSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0a7e0f1a976eec6fa5fb1dd8af331d8c3b152cb0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/jdbc", "spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository.JdbcSession", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession"]}, {"title": "Fix compilation error caused by improper use of Assert.notNull(..)", "body": "Currently, the _Spring Session_ codebase contains improper uses of the `Assert.notNull(..)` method invocation in [JdbcOperationSessionRepository](https://github.com/spring-projects/spring-session/blob/master/spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java#L661) and in [RedisOperationsSessionRepository](https://github.com/spring-projects/spring-session/blob/master/spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java#L697) that are not actually performing the **null** check.\r\n\r\nThe following is causing compilation errors in the _Spring Session_ [Travis CI build](https://travis-ci.org/spring-projects/spring-session/builds/196779571) and [Bamboo build](https://build.spring.io/browse/SESSION-SIO-100), possibly Jenkins too but I did not check.", "url": "https://github.com/spring-projects/spring-session/issues/724", "user": "jxblum", "labels": ["in: jdbc", "in: redis", "type: bug"], "created": "2017-01-31 00:05:20", "closed": "2017-01-31 00:18:59", "commits": {"5c6565bd9c19beb99ffa2084940acbc871eebba7": {"commitGHEventType": "closed", "commitUser": "jxblum"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5c6565bd9c19beb99ffa2084940acbc871eebba7", "commitGHEventType": "closed", "commitUser": "jxblum", "commitParents": ["3e24393e9a2e9f5682afce21ad2349519368dcc0"], "nameRev": "5c6565bd9c19beb99ffa2084940acbc871eebba7 tags/2.0.0.M1~48", "commitMessage": "Fix compilation error caused by improper use of Assert.notNull(..)\n\nFixes gh-724\n", "commitDateTime": "2017-01-30 16:10:34", "authoredDateTime": "2017-01-30 16:07:57", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.JdbcSession", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5c6565bd9c19beb99ffa2084940acbc871eebba7"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0, "spoonFilesChanged": 2, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/jdbc", "spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository.JdbcSession", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession"]}, {"title": "Mongo repository `createSession` causes NPE if max inactive interval is undefined", "body": "Backport of #716.", "url": "https://github.com/spring-projects/spring-session/issues/717", "user": "vpavic", "labels": ["in: mongo-db", "type: backport", "type: bug"], "created": "2017-01-21 22:32:55", "closed": "2017-01-21 22:46:14", "commits": {"32d928564cad868f0932dd196ee525973771b06c": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "32d928564cad868f0932dd196ee525973771b06c", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["bbd731a83510b17549f378d38b061c8212a48818"], "nameRev": "32d928564cad868f0932dd196ee525973771b06c remotes/origin/1.4.x~24", "commitMessage": "Prevent NPE in`MongoOperationsSessionRepository` when creating session if max inactive interval is undefined\n\nFixes gh-717\n", "commitDateTime": "2017-01-21 23:42:05", "authoredDateTime": "2017-01-21 22:58:06", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/mongo/MongoOperationsSessionRepository.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/mongo/MongoOperationsSessionRepositoryTests.java", "insertions": 30, "deletions": 13, "lines": 43}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MongoOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepository.createSession()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "MongoOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldDeleteSession()", "TOT": 10, "UPD": 3, "INS": 1, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.setUp()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldSaveSession()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldHandleExpiredSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldGetSessionsMapByPrincipal()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldCreateSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldGetSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldReturnEmptyMapForNotSupportedIndex()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["32d928564cad868f0932dd196ee525973771b06c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/mongo"], "changesInPackagesSPOON": ["org.springframework.session.data.mongo.MongoOperationsSessionRepository.createSession()"]}, {"title": "Mongo repository `createSession` causes NPE if max inactive interval is undefined", "body": "If `MongoOperationsSessionRepository#maxInactiveIntervalInSeconds` is set to `null` NPE will be thrown when creating a new `MongoExpiringSession` due to `null` being passed to `MongoExpiringSession#MongoExpiringSession(int)`.", "url": "https://github.com/spring-projects/spring-session/issues/716", "user": "vpavic", "labels": ["in: mongo-db", "type: bug"], "created": "2017-01-21 21:48:42", "closed": "2017-01-21 22:31:07", "commits": {"012f121c48833673efc1b7fc81d5c5942ecc1c7c": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "012f121c48833673efc1b7fc81d5c5942ecc1c7c", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["c0cc15679c6cb5bfeac586e8331ffb70852b6464"], "nameRev": "012f121c48833673efc1b7fc81d5c5942ecc1c7c tags/2.0.0.M1~51", "commitMessage": "Prevent NPE  in`MongoOperationsSessionRepository` when creating session if max inactive interval is undefined\n\nFixes gh-716\n", "commitDateTime": "2017-01-21 22:58:06", "authoredDateTime": "2017-01-21 22:58:06", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/mongo/MongoOperationsSessionRepository.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/mongo/MongoOperationsSessionRepositoryTests.java", "insertions": 29, "deletions": 17, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "MongoOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepository.createSession()", "TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1}]}, {"spoonFilePath": "MongoOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.setUp()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldSaveSession()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldHandleExpiredSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldDeleteSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldCreateSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldGetSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldGetSessionsMapByPrincipal()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldReturnEmptyMapForNotSupportedIndex()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.mongo.MongoOperationsSessionRepositoryTests.shouldCreateSessionWhenMaxInactiveIntervalNotDefined()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["012f121c48833673efc1b7fc81d5c5942ecc1c7c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/mongo"], "changesInPackagesSPOON": ["org.springframework.session.data.mongo.MongoOperationsSessionRepository.createSession()"]}, {"title": "Resolve circular dependency between Spring Session and Spring Boot", "body": "Remove the circular dependency between _Spring Session_ and _Spring Boot_, when the versions are synced.\r\n\r\n_Spring Boot_ has many integration points with _Spring Session_ (e.g. auto-configuration support, starter, etc).  If _Spring Session_ is set to build with _Spring Boot_ `2.0.0`, then _Spring Boot_ `2.0.0.RELEASE` cannot be released unless _Spring Session_ `2.0.0.RELEASE` is released first.  However, since _Spring Session_ is building on and using _Spring Boot_ `2.0.0`, then _Spring Session_ `2.0.0.RELEASE` cannot be released until _Spring Boot_ `2.0.0.RELEASE` is out, and we end up with the [Buttered Cat Paradox](https://en.wikipedia.org/wiki/Buttered_cat_paradox) as both _Spring Boot_ and _Spring Session_ approach GA.\r\n\r\nSince the only code dependencies in Spring Session on Spring Boot are in the **samples**, possible solutions to this problem as discussed with @rwinch include...\r\n\r\n1. Moving the _Spring Session_ **Samples** to a separate project dependent on _Spring Session_ core and _Spring Boot_.\r\n\r\n2. Move the _Spring Session_ **Samples** to the _Spring Boot_ project.\r\n\r\n3. Set _Spring Session_ to a release version of _Spring Boot_ (e.g. `1.5.0.RELEASE` in _Spring Session_ `2.0.0`, which is not really the desired solution, but listed here for the sake of completeness).\r\n", "url": "https://github.com/spring-projects/spring-session/issues/710", "user": "jxblum", "labels": ["type: bug"], "created": "2017-01-13 19:37:07", "closed": "2017-04-28 19:21:31", "commits": {"2ebbe762f0211f7b2f11ae5c4e6bc454ecf56d82": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 104.00027777777778, "commitsDetails": [{"commitHash": "2ebbe762f0211f7b2f11ae5c4e6bc454ecf56d82", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["63b836b2120ca167f005a2c49c5b0c952a68f5ce"], "nameRev": "2ebbe762f0211f7b2f11ae5c4e6bc454ecf56d82 tags/2.0.0.M1~16", "commitMessage": "Downgrade Spring Boot to 1.5.3.RELEASE\n\nFixes gh-710\n", "commitDateTime": "2017-04-28 17:27:49", "authoredDateTime": "2017-04-28 17:27:49", "commitGitStats": [{"filePath": "gradle.properties", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "gradle/dependency-management.properties", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "samples/boot/redis-json/spring-session-sample-boot-redis-json.gradle", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "samples/boot/redis/spring-session-sample-boot-redis.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/boot/websocket/spring-session-sample-boot-websocket.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/boot/websocket/src/main/java/sample/websocket/WebSocketDisconnectHandler.java", "insertions": 4, "deletions": 5, "lines": 9}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WebSocketDisconnectHandler.java", "spoonMethods": [{"spoonMethodName": "sample.websocket.WebSocketDisconnectHandler.onApplicationEvent(org.springframework.web.socket.messaging.SessionDisconnectEvent)", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2ebbe762f0211f7b2f11ae5c4e6bc454ecf56d82"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 12, "lines": 24, "gitFilesChange": 6}, "spoonStatsSummary": {"TOT": 5, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["gradle/dependency-management.properties", "samples/boot/redis", "gradle.properties", "samples/boot/redis-json", "samples/boot/websocket/src/main/java/sample/websocket", "samples/boot/websocket"], "changesInPackagesSPOON": ["sample.websocket.WebSocketDisconnectHandler.onApplicationEvent(org.springframework.web.socket.messaging.SessionDisconnectEvent)"]}, {"title": "`JdbcOperationsSessionRepository` cleanup fails with big max inactive interval values", "body": "Specifically, I've encountered this with PostgreSQL if there are sessions with max inactive interval set to at least `Integer.MAX_VALUE / 1000 + 1`:\r\n\r\n```stacktrace\r\norg.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [DELETE FROM SPRING_SESSION WHERE LAST_ACCESS_TIME < ? - MAX_INACTIVE_INTERVAL * 1000]; ERROR: integer out of range; nested exception is org.postgresql.util.PSQLException: ERROR: integer out of range\r\n```\r\n\r\nThis occurs due to `MAX_INACTIVE_INTERVAL * 1000` part of the SQL statement's `WHERE` clause expression being evaluated as `INT` (since `MAX_INACTIVE_INTERVAL` column is of type `INT`).\r\n\r\nWorkaround is to configure custom SQL with `CAST` - see [alternative statement](https://github.com/spring-projects/spring-session/blob/master/spring-session/src/main/java/org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.java#L101-L102) used for H2 and Derby.\r\n\r\nWe need to test this scenario with other RDBMS vendors as well.", "url": "https://github.com/spring-projects/spring-session/issues/679", "user": "vpavic", "labels": ["in: jdbc", "type: bug"], "created": "2016-11-28 22:45:32", "closed": "2016-12-03 12:12:55", "commits": {"39503a21a7510fb5dd87d55317ba53bd7c9662ea": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 4.000277777777778, "commitsDetails": [{"commitHash": "39503a21a7510fb5dd87d55317ba53bd7c9662ea", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["ebbc10b2b4460cad9503ed8b42964468506e05f0"], "nameRev": "39503a21a7510fb5dd87d55317ba53bd7c9662ea tags/1.3.0.RELEASE~5", "commitMessage": "Refactor `JdbcOperationsSessionRepository` session clean up query to prevent overflow\n\nFixes gh-679\n", "commitDateTime": "2016-12-02 21:29:47", "authoredDateTime": "2016-12-02 20:29:23", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.java", "insertions": 2, "deletions": 21, "lines": 23}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.getDatabaseName(javax.sql.DataSource)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["39503a21a7510fb5dd87d55317ba53bd7c9662ea"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 22, "lines": 25, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 7, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 3, "spoonFilesChanged": 2, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/jdbc", "spring-session/src/main/java/org/springframework/session/jdbc/config/annotation"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.JdbcOperationsSessionRepository", "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.getDatabaseName(javax.sql.DataSource)", "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager)"]}, {"title": "Travis CI fails occasionally due to GemFire sample integration test failure", "body": "Build output:\r\n\r\n```\r\n:samples:httpsession-gemfire-boot:runGemFireServer\r\nSTARTING GEMFIRE SERVER...\r\n:samples:httpsession-gemfire-boot:integrationTest\r\n\r\nsample.AttributeTests > first visit no attributes FAILED\r\n    java.lang.IllegalStateException\r\n        Caused by: org.springframework.context.ApplicationContextException\r\n            Caused by: org.springframework.boot.context.embedded.EmbeddedServletContainerException\r\n                Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException\r\n                    Caused by: org.springframework.beans.factory.UnsatisfiedDependencyException\r\n                        Caused by: org.springframework.beans.factory.BeanCreationException\r\n                            Caused by: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException\r\n                                Caused by: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException\r\n    java.lang.NullPointerException\r\n\r\n2 tests completed, 1 failed, 1 skipped\r\n:samples:httpsession-gemfire-boot:integrationTest FAILED\r\n\r\nFAILURE: Build failed with an exception.\r\n```\r\n\r\nHere are the samples of such jobs:\r\n\r\n- https://travis-ci.org/spring-projects/spring-session/builds/175189705\r\n- https://travis-ci.org/spring-projects/spring-session/builds/175888993\r\n- https://travis-ci.org/spring-projects/spring-session/builds/176169898\r\n\r\n/cc @jxblum\r\n", "url": "https://github.com/spring-projects/spring-session/issues/672", "user": "vpavic", "labels": ["in: build", "in: docs", "in: gemfire", "type: bug"], "created": "2016-11-15 21:07:56", "closed": "2017-01-31 21:52:55", "commits": {"9a51cb9ca7ac3355069868f94a54ecd86b92a85d": {"commitGHEventType": "closed", "commitUser": "jxblum"}, "b3706addbbddfd398218ac3614dc0b75df7f4263": {"commitGHEventType": "closed", "commitUser": "jxblum"}}, "ttf": 77.00027777777778, "commitsDetails": [{"commitHash": "9a51cb9ca7ac3355069868f94a54ecd86b92a85d", "commitGHEventType": "closed", "commitUser": "jxblum", "commitParents": ["5e0ee5077a6525cefe284c251db033475fa7d334"], "nameRev": "9a51cb9ca7ac3355069868f94a54ecd86b92a85d tags/1.3.0.RELEASE~7", "commitMessage": "Minor changes to improve the timing between Spring Boot-based GemFire client and server connections\n\nFixes gh-672\n", "commitDateTime": "2016-11-22 22:48:37", "authoredDateTime": "2016-11-22 22:24:17", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/httpsession-gemfire-boot.adoc", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "samples/httpsession-gemfire-boot/src/main/java/sample/client/Application.java", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "samples/httpsession-gemfire-boot/src/main/java/sample/server/GemFireServer.java", "insertions": 3, "deletions": 4, "lines": 7}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Application.java", "spoonMethods": [{"spoonMethodName": "sample.client.Application", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.client.Application.gemfirePool(java.lang.String,int)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GemFireServer.java", "spoonMethods": [{"spoonMethodName": "sample.server.GemFireServer.gemfireProperties()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "b3706addbbddfd398218ac3614dc0b75df7f4263", "commitGHEventType": "closed", "commitUser": "jxblum", "commitParents": ["5c6565bd9c19beb99ffa2084940acbc871eebba7"], "nameRev": "b3706addbbddfd398218ac3614dc0b75df7f4263 tags/2.0.0.M1~47", "commitMessage": "Introduce more reliable coordination between a GemFire client/server during integration tests.\n\nFixes gh-672\n", "commitDateTime": "2017-01-31 12:47:28", "authoredDateTime": "2017-01-18 13:58:55", "commitGitStats": [{"filePath": "samples/boot/gemfire/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/boot/gemfire/src/main/java/sample/client/Application.java", "insertions": 78, "deletions": 8, "lines": 86}, {"filePath": "samples/javaconfig/gemfire-clientserver/build.gradle", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "samples/javaconfig/gemfire-clientserver/src/main/java/sample/ClientConfig.java", "insertions": 84, "deletions": 11, "lines": 95}, {"filePath": "samples/javaconfig/gemfire-clientserver/src/main/java/sample/ServerConfig.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/xml/gemfire-clientserver/build.gradle", "insertions": 4, "deletions": 2, "lines": 6}, {"filePath": "samples/xml/gemfire-clientserver/src/main/java/sample/Application.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/xml/gemfire-clientserver/src/main/java/sample/GemFireCacheServerReadyBeanPostProcessor.java", "insertions": 0, "deletions": 73, "lines": 73}, {"filePath": "samples/xml/gemfire-clientserver/src/main/java/sample/GemFireClientServerReadyBeanPostProcessor.java", "insertions": 148, "deletions": 0, "lines": 148}, {"filePath": "samples/xml/gemfire-clientserver/src/main/resources/META-INF/spring/session-server.xml", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "samples/xml/gemfire-clientserver/src/main/webapp/WEB-INF/spring/session-client.xml", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Application.java", "spoonMethods": [{"spoonMethodName": "sample.Application.main(java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "ClientConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ClientConfig.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "sample.ClientConfig", "TOT": 2, "UPD": 1, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.applicationName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.logLevel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.shouldCheckWhetherGemFireServerIsRunning(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.isGemFireRegion(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.whenGemFireCache(java.lang.Object,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientNotified()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientSubscriptionQueueConnectionEstablished()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.defaultIfNull(org.apache.geode.cache.client.Pool,java.lang.String[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}]}, {"spoonFilePath": "ServerConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ServerConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GemFireCacheServerReadyBeanPostProcessor.java", "spoonMethods": [{"spoonMethodName": "sample.GemFireCacheServerReadyBeanPostProcessor", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "GemFireClientServerReadyBeanPostProcessor.java", "spoonMethods": [{"spoonMethodName": "sample.GemFireClientServerReadyBeanPostProcessor", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["9a51cb9ca7ac3355069868f94a54ecd86b92a85d", "b3706addbbddfd398218ac3614dc0b75df7f4263"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 329, "deletions": 105, "lines": 434, "gitFilesChange": 12}, "spoonStatsSummary": {"TOT": 31, "UPD": 7, "INS": 15, "MOV": 3, "DEL": 6, "spoonFilesChanged": 6, "spoonMethodsChanged": 21}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/boot/gemfire", "samples/boot/gemfire/src/main/java/sample/client", "samples/xml/gemfire-clientserver/src/main/java/sample", "docs/src/docs/asciidoc/guides/httpsession-gemfire-boot.adoc", "samples/javaconfig/gemfire-clientserver", "samples/javaconfig/gemfire-clientserver/src/main/java/sample", "samples/httpsession-gemfire-boot/src/main/java/sample/client", "samples/xml/gemfire-clientserver", "samples/httpsession-gemfire-boot/src/main/java/sample/server"], "changesInPackagesSPOON": ["sample.GemFireCacheServerReadyBeanPostProcessor", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.isGemFireRegion(java.lang.Object,java.lang.String)", "sample.Application.main(java.lang.String[])", "sample.client.Application", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int)", "sample.server.GemFireServer.gemfireProperties()", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.whenGemFireCache(java.lang.Object,java.lang.String)", "sample.client.Application.gemfirePool(java.lang.String,int)", "sample.GemFireClientServerReadyBeanPostProcessor", "sample.ClientConfig.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int)", "sample.ClientConfig.logLevel()", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2", "sample.ClientConfig.gemfireCacheServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientNotified()", "sample.ClientConfig", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.postProcessBeforeInitialization(java.lang.Object,java.lang.String)", "sample.ClientConfig.applicationName()", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.shouldCheckWhetherGemFireServerIsRunning(java.lang.Object,java.lang.String)", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.defaultIfNull(org.apache.geode.cache.client.Pool,java.lang.String[])", "sample.ClientConfig.gemfireClientServerReadyBeanPostProcessor(java.lang.String,int).2.validateCacheClientSubscriptionQueueConnectionEstablished()", "sample.ServerConfig"]}, {"title": "Remove \"This feature will likely be refactored in the next release to account for #301\"", "body": "See #389 - this change is present only in `1.1.x`.", "url": "https://github.com/spring-projects/spring-session/issues/671", "user": "vpavic", "labels": ["in: docs", "type: bug"], "created": "2016-11-14 17:33:37", "closed": "2016-11-14 17:34:52", "commits": {"5671037c39417df4259f4edef38692e4f2eb129c": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5671037c39417df4259f4edef38692e4f2eb129c", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["3d44467275b424227018f29dcfb66e938103fd3a"], "nameRev": "5671037c39417df4259f4edef38692e4f2eb129c tags/1.3.0.RC1~21", "commitMessage": "Delete refactor from findbyusername doc\n\nFixes gh-671\n", "commitDateTime": "2016-11-14 18:33:49", "authoredDateTime": "2016-11-14 18:33:49", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/findbyusername.adoc", "insertions": 0, "deletions": 2, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5671037c39417df4259f4edef38692e4f2eb129c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 2, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/guides/findbyusername.adoc"]}, {"title": "FindByIndexNameSessionRepository sublink doesn't work", "body": "I was reading up on fetching a session id via a repository and hit a broken link.\r\n\r\n<img width=\"695\" alt=\"screen shot 2016-11-12 at 9 53 41 am\" src=\"https://cloud.githubusercontent.com/assets/311040/20239096/1b0cc640-a8be-11e6-88b5-864a369f6f53.png\">\r\n\r\n<img width=\"1013\" alt=\"screen shot 2016-11-12 at 9 53 46 am\" src=\"https://cloud.githubusercontent.com/assets/311040/20239097/1e6fbca2-a8be-11e6-9551-1c4e868bae5e.png\">\r\n", "url": "https://github.com/spring-projects/spring-session/issues/670", "user": "gregturn", "labels": ["in: docs", "type: bug"], "created": "2016-11-12 15:55:24", "closed": "2016-11-14 17:20:48", "commits": {"3d44467275b424227018f29dcfb66e938103fd3a": {"commitGHEventType": "closed", "commitUser": "vpavic"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "3d44467275b424227018f29dcfb66e938103fd3a", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["94221c70a9dff4b938189b6e18fd4a55a841b3ab"], "nameRev": "3d44467275b424227018f29dcfb66e938103fd3a tags/1.3.0.RC1~22", "commitMessage": "Fix broken link in find by username guide\n\nFixes gh-670\n", "commitDateTime": "2016-11-14 18:17:10", "authoredDateTime": "2016-11-14 18:17:10", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/findbyusername.adoc", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3d44467275b424227018f29dcfb66e938103fd3a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/guides/findbyusername.adoc"]}, {"title": "GemFire sample integration test fails with JAVA_TOOL_OPTIONS env variable", "body": "This consequently causes the project build to fail.\r\nIf I don't export the `JAVA_TOOL_OPTIONS` environment variable then everything runs fine.\r\n\r\nI guess this is related to that fact that JVM prints information about special variable, such as `JAVA_TOOL_OPTIONS` or `_JAVA_OPTIONS`, to `stderr`. For example:\r\n\r\n```\r\n$ JAVA_TOOL_OPTIONS=\"-Dtest\" java -version\r\nPicked up JAVA_TOOL_OPTIONS: -Dtest\r\njava version \"1.8.0_111\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_111-b14)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.111-b14, mixed mode)\r\n```\r\n\r\n/cc @jxblum since this is GemFire related you might want to take a look.\r\n\r\nHere's the relevant build output:\r\n\r\n```\r\n:samples:httpsession-gemfire-clientserver:runGemFireServer\r\nSTARTING GEMFIRE SERVER...\r\n:samples:httpsession-gemfire-clientserver:integrationTomcatRun\r\n[warn 2016/11/12 15:37:36.199 CET <poolTimer-DEFAULT-2> tid=0x187] Could not connect to: localhost:39359\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat com.gemstone.gemfire.internal.SocketUtils.connect(SocketUtils.java:88)\r\n\tat com.gemstone.gemfire.internal.SocketUtils.connect(SocketUtils.java:60)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connect(SocketCreator.java:1011)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connect(SocketCreator.java:946)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connectForClient(SocketCreator.java:915)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionImpl.connect(ConnectionImpl.java:113)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.createClientToServerConnection(ConnectionFactoryImpl.java:114)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.createClientToServerConnection(ConnectionFactoryImpl.java:231)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.prefillConnection(ConnectionManagerImpl.java:794)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.prefill(ConnectionManagerImpl.java:737)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl$PrefillConnectionsTask.run2(ConnectionManagerImpl.java:888)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl$PoolTask.run(PoolImpl.java:1258)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n[warn 2016/11/12 15:37:36.199 CET <localhost-startStop-1> tid=0x17a] Could not connect to: localhost:39359\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat com.gemstone.gemfire.internal.SocketUtils.connect(SocketUtils.java:88)\r\n\tat com.gemstone.gemfire.internal.SocketUtils.connect(SocketUtils.java:60)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connect(SocketCreator.java:1011)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connect(SocketCreator.java:946)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connectForClient(SocketCreator.java:915)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionImpl.connect(ConnectionImpl.java:113)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.createClientToServerConnection(ConnectionFactoryImpl.java:114)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.createClientToServerConnection(ConnectionFactoryImpl.java:231)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.borrowConnection(ConnectionManagerImpl.java:214)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.acquireConnection(PoolImpl.java:834)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.checkConnected(PoolImpl.java:848)\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.findQueueServers(QueueManagerImpl.java:799)\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.initializeConnections(QueueManagerImpl.java:427)\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.start(QueueManagerImpl.java:302)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.start(PoolImpl.java:322)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.finishCreate(PoolImpl.java:150)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.create(PoolImpl.java:136)\r\n\tat com.gemstone.gemfire.internal.cache.PoolFactoryImpl.create(PoolFactoryImpl.java:448)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.determineDefaultPool(GemFireCacheImpl.java:2803)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.initializeDeclarativeCache(GemFireCacheImpl.java:1154)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.init(GemFireCacheImpl.java:1018)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:678)\r\n\tat com.gemstone.gemfire.cache.client.ClientCacheFactory.basicCreate(ClientCacheFactory.java:207)\r\n\tat com.gemstone.gemfire.cache.client.ClientCacheFactory.create(ClientCacheFactory.java:162)\r\n\tat org.springframework.data.gemfire.client.ClientCacheFactoryBean.createCache(ClientCacheFactoryBean.java:335)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.resolveCache(CacheFactoryBean.java:250)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.init(CacheFactoryBean.java:191)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.getObject(CacheFactoryBean.java:178)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.getObject(CacheFactoryBean.java:88)\r\n\tat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)\r\n\tat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1606)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:317)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:754)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)\r\n\tat org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:444)\r\n\tat org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:326)\r\n\tat org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)\r\n\tat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:5014)\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5524)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1575)\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1565)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n[warn 2016/11/12 15:37:36.212 CET <localhost-startStop-1> tid=0x17a] Could not create a queue. No queue servers available.\r\n\r\n[warn 2016/11/12 15:37:36.220 CET <poolTimer-DEFAULT-2> tid=0x187] Could not connect to: localhost:39359\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat com.gemstone.gemfire.internal.SocketUtils.connect(SocketUtils.java:88)\r\n\tat com.gemstone.gemfire.internal.SocketUtils.connect(SocketUtils.java:60)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connect(SocketCreator.java:1011)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connect(SocketCreator.java:946)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connectForClient(SocketCreator.java:915)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionImpl.connect(ConnectionImpl.java:113)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.createClientToServerConnection(ConnectionFactoryImpl.java:114)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.createClientToServerConnection(ConnectionFactoryImpl.java:231)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.prefillConnection(ConnectionManagerImpl.java:794)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.prefill(ConnectionManagerImpl.java:737)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl$PrefillConnectionsTask.run2(ConnectionManagerImpl.java:888)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl$PoolTask.run(PoolImpl.java:1258)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\n[warn 2016/11/12 15:37:36.242 CET <poolTimer-DEFAULT-2> tid=0x187] Could not connect to: localhost:39359\r\njava.net.ConnectException: Connection refused (Connection refused)\r\n\tat java.net.PlainSocketImpl.socketConnect(Native Method)\r\n\tat java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)\r\n\tat java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)\r\n\tat java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)\r\n\tat java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)\r\n\tat java.net.Socket.connect(Socket.java:589)\r\n\tat com.gemstone.gemfire.internal.SocketUtils.connect(SocketUtils.java:88)\r\n\tat com.gemstone.gemfire.internal.SocketUtils.connect(SocketUtils.java:60)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connect(SocketCreator.java:1011)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connect(SocketCreator.java:946)\r\n\tat com.gemstone.gemfire.internal.SocketCreator.connectForClient(SocketCreator.java:915)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionImpl.connect(ConnectionImpl.java:113)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.createClientToServerConnection(ConnectionFactoryImpl.java:114)\r\n\tat com.gemstone.gemfire.cache.client.internal.ConnectionFactoryImpl.createClientToServerConnection(ConnectionFactoryImpl.java:231)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.prefillConnection(ConnectionManagerImpl.java:794)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl.prefill(ConnectionManagerImpl.java:737)\r\n\tat com.gemstone.gemfire.cache.client.internal.pooling.ConnectionManagerImpl$PrefillConnectionsTask.run2(ConnectionManagerImpl.java:888)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl$PoolTask.run(PoolImpl.java:1258)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n\r\nNo bean named 'DEFAULT' available\r\nException encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ClusteredSpringSessions' defined in org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionConfiguration: Invocation of init method failed; nested exception is com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: Primary discovery failed.\r\nContext initialization failed\r\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ClusteredSpringSessions' defined in org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionConfiguration: Invocation of init method failed; nested exception is com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: Primary discovery failed.\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1583)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:754)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)\r\n\tat org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:444)\r\n\tat org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:326)\r\n\tat org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)\r\n\tat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:5014)\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5524)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1575)\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1565)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: Primary discovery failed.\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.getAllConnections(QueueManagerImpl.java:188)\r\n\tat com.gemstone.gemfire.cache.client.internal.OpExecutorImpl.executeOnQueuesAndReturnPrimaryResult(OpExecutorImpl.java:522)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.executeOnQueuesAndReturnPrimaryResult(PoolImpl.java:765)\r\n\tat com.gemstone.gemfire.cache.client.internal.RegisterInterestOp.execute(RegisterInterestOp.java:55)\r\n\tat com.gemstone.gemfire.cache.client.internal.ServerRegionProxy.registerInterest(ServerRegionProxy.java:397)\r\n\tat com.gemstone.gemfire.internal.cache.LocalRegion.processSingleInterest(LocalRegion.java:3834)\r\n\tat com.gemstone.gemfire.internal.cache.LocalRegion.registerInterest(LocalRegion.java:3924)\r\n\tat org.springframework.data.gemfire.client.ClientRegionFactoryBean.registerInterests(ClientRegionFactoryBean.java:312)\r\n\tat org.springframework.data.gemfire.client.ClientRegionFactoryBean.postProcess(ClientRegionFactoryBean.java:299)\r\n\tat org.springframework.data.gemfire.client.ClientRegionFactoryBean.afterPropertiesSet(ClientRegionFactoryBean.java:102)\r\n\tat org.springframework.session.data.gemfire.config.annotation.web.http.support.GemFireCacheTypeAwareRegionFactoryBean.newClientRegion(GemFireCacheTypeAwareRegionFactoryBean.java:163)\r\n\tat org.springframework.session.data.gemfire.config.annotation.web.http.support.GemFireCacheTypeAwareRegionFactoryBean.afterPropertiesSet(GemFireCacheTypeAwareRegionFactoryBean.java:98)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1642)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1579)\r\n\t... 23 more\r\nCaused by: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: Primary discovery failed.\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl$ConnectionList.setPrimaryDiscoveryFailed(QueueManagerImpl.java:1310)\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.initializeConnections(QueueManagerImpl.java:434)\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.start(QueueManagerImpl.java:302)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.start(PoolImpl.java:322)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.finishCreate(PoolImpl.java:150)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.create(PoolImpl.java:136)\r\n\tat com.gemstone.gemfire.internal.cache.PoolFactoryImpl.create(PoolFactoryImpl.java:448)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.determineDefaultPool(GemFireCacheImpl.java:2803)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.initializeDeclarativeCache(GemFireCacheImpl.java:1154)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.init(GemFireCacheImpl.java:1018)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:678)\r\n\tat com.gemstone.gemfire.cache.client.ClientCacheFactory.basicCreate(ClientCacheFactory.java:207)\r\n\tat com.gemstone.gemfire.cache.client.ClientCacheFactory.create(ClientCacheFactory.java:162)\r\n\tat org.springframework.data.gemfire.client.ClientCacheFactoryBean.createCache(ClientCacheFactoryBean.java:335)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.resolveCache(CacheFactoryBean.java:250)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.init(CacheFactoryBean.java:191)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.getObject(CacheFactoryBean.java:178)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.getObject(CacheFactoryBean.java:88)\r\n\tat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)\r\n\tat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1606)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:317)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)\r\n\t... 22 more\r\nException sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener\r\norg.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ClusteredSpringSessions' defined in org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionConfiguration: Invocation of init method failed; nested exception is com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: Primary discovery failed.\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1583)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:754)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)\r\n\tat org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:444)\r\n\tat org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:326)\r\n\tat org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:107)\r\n\tat org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:5014)\r\n\tat org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5524)\r\n\tat org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1575)\r\n\tat org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1565)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: Primary discovery failed.\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.getAllConnections(QueueManagerImpl.java:188)\r\n\tat com.gemstone.gemfire.cache.client.internal.OpExecutorImpl.executeOnQueuesAndReturnPrimaryResult(OpExecutorImpl.java:522)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.executeOnQueuesAndReturnPrimaryResult(PoolImpl.java:765)\r\n\tat com.gemstone.gemfire.cache.client.internal.RegisterInterestOp.execute(RegisterInterestOp.java:55)\r\n\tat com.gemstone.gemfire.cache.client.internal.ServerRegionProxy.registerInterest(ServerRegionProxy.java:397)\r\n\tat com.gemstone.gemfire.internal.cache.LocalRegion.processSingleInterest(LocalRegion.java:3834)\r\n\tat com.gemstone.gemfire.internal.cache.LocalRegion.registerInterest(LocalRegion.java:3924)\r\n\tat org.springframework.data.gemfire.client.ClientRegionFactoryBean.registerInterests(ClientRegionFactoryBean.java:312)\r\n\tat org.springframework.data.gemfire.client.ClientRegionFactoryBean.postProcess(ClientRegionFactoryBean.java:299)\r\n\tat org.springframework.data.gemfire.client.ClientRegionFactoryBean.afterPropertiesSet(ClientRegionFactoryBean.java:102)\r\n\tat org.springframework.session.data.gemfire.config.annotation.web.http.support.GemFireCacheTypeAwareRegionFactoryBean.newClientRegion(GemFireCacheTypeAwareRegionFactoryBean.java:163)\r\n\tat org.springframework.session.data.gemfire.config.annotation.web.http.support.GemFireCacheTypeAwareRegionFactoryBean.afterPropertiesSet(GemFireCacheTypeAwareRegionFactoryBean.java:98)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1642)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1579)\r\n\t... 23 more\r\nCaused by: com.gemstone.gemfire.cache.NoSubscriptionServersAvailableException: Primary discovery failed.\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl$ConnectionList.setPrimaryDiscoveryFailed(QueueManagerImpl.java:1310)\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.initializeConnections(QueueManagerImpl.java:434)\r\n\tat com.gemstone.gemfire.cache.client.internal.QueueManagerImpl.start(QueueManagerImpl.java:302)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.start(PoolImpl.java:322)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.finishCreate(PoolImpl.java:150)\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.create(PoolImpl.java:136)\r\n\tat com.gemstone.gemfire.internal.cache.PoolFactoryImpl.create(PoolFactoryImpl.java:448)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.determineDefaultPool(GemFireCacheImpl.java:2803)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.initializeDeclarativeCache(GemFireCacheImpl.java:1154)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.init(GemFireCacheImpl.java:1018)\r\n\tat com.gemstone.gemfire.internal.cache.GemFireCacheImpl.create(GemFireCacheImpl.java:678)\r\n\tat com.gemstone.gemfire.cache.client.ClientCacheFactory.basicCreate(ClientCacheFactory.java:207)\r\n\tat com.gemstone.gemfire.cache.client.ClientCacheFactory.create(ClientCacheFactory.java:162)\r\n\tat org.springframework.data.gemfire.client.ClientCacheFactoryBean.createCache(ClientCacheFactoryBean.java:335)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.resolveCache(CacheFactoryBean.java:250)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.init(CacheFactoryBean.java:191)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.getObject(CacheFactoryBean.java:178)\r\n\tat org.springframework.data.gemfire.CacheFactoryBean.getObject(CacheFactoryBean.java:88)\r\n\tat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.doGetObjectFromFactoryBean(FactoryBeanRegistrySupport.java:168)\r\n\tat org.springframework.beans.factory.support.FactoryBeanRegistrySupport.getObjectFromFactoryBean(FactoryBeanRegistrySupport.java:103)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getObjectForBeanInstance(AbstractBeanFactory.java:1606)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:317)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:835)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:467)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1128)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1022)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:512)\r\n\t... 22 more\r\nError listenerStart\r\nContext [] startup failed due to previous errors\r\nThe web application [] created a ThreadLocal with key of type [com.gemstone.gemfire.internal.cache.EventID$1] (value [com.gemstone.gemfire.internal.cache.EventID$1@4fd8fb41]) and a value of type [com.gemstone.gemfire.internal.cache.EventID.ThreadAndSequenceIDWrapper] (value [com.gemstone.gemfire.internal.cache.EventID$ThreadAndSequenceIDWrapper@70603153]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\nThe web application [] created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@249a5e98]) and a value of type [com.gemstone.gemfire.internal.stats50.Atomic50StatisticsImpl.ThreadStorage] (value [com.gemstone.gemfire.internal.stats50.Atomic50StatisticsImpl$ThreadStorage@12cf4e54]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\nThe web application [] created a ThreadLocal with key of type [java.lang.ThreadLocal] (value [java.lang.ThreadLocal@6bdefd1d]) and a value of type [com.gemstone.gemfire.internal.stats50.Atomic50StatisticsImpl.ThreadStorage] (value [com.gemstone.gemfire.internal.stats50.Atomic50StatisticsImpl$ThreadStorage@1dc61060]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\nStarted Tomcat Server\r\nThe Server is running at http://localhost:45971\r\n:samples:httpsession-gemfire-clientserver:integrationTest\r\nPicked up JAVA_TOOL_OPTIONS: -Dhttp.proxyHost=localhost -Dhttp.proxyPort=3128 -Dhttps.proxyHost=localhost -Dhttps.proxyPort=3128\r\n\r\nsample.AttributeTests > first visit no attributes FAILED\r\n    org.codehaus.groovy.runtime.powerassert.PowerAssertionError at AttributeTests.groovy:33\r\n\r\n2 tests completed, 1 failed, 1 skipped\r\n:samples:httpsession-gemfire-clientserver:integrationTest FAILED\r\n:samples:httpsession-gemfire-clientserver:integrationTomcatStop\r\n\r\nFAILURE: Build failed with an exception.\r\n\r\n* What went wrong:\r\nExecution failed for task ':samples:httpsession-gemfire-clientserver:integrationTest'.\r\n> There were failing tests. See the report at: file:///home/vedran/dev/projects/spring-session/samples/httpsession-gemfire-clientserver/build/reports/integration-tests/index.html\r\n\r\n* Try:\r\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\r\n\r\nBUILD FAILED\r\n\r\nTotal time: 7 mins 48.229 secs\r\n```\r\n\r\nOther relevant information about environment:\r\n\r\n```\r\n$ cat /etc/os-release \r\nNAME=\"Ubuntu\"\r\nVERSION=\"16.10 (Yakkety Yak)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 16.10\"\r\nVERSION_ID=\"16.10\"\r\nHOME_URL=\"http://www.ubuntu.com/\"\r\nSUPPORT_URL=\"http://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"http://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"http://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nVERSION_CODENAME=yakkety\r\nUBUNTU_CODENAME=yakkety\r\n```\r\n\r\n```\r\n$ uname -a\r\nLinux vpavic-nb 4.8.0-27-generic #29-Ubuntu SMP Thu Oct 20 21:03:13 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux\r\n```\r\n", "url": "https://github.com/spring-projects/spring-session/issues/669", "user": "vpavic", "labels": ["in: build", "in: docs", "in: gemfire", "type: bug"], "created": "2016-11-12 15:21:16", "closed": "2017-01-30 23:42:27", "commits": {"3e24393e9a2e9f5682afce21ad2349519368dcc0": {"commitGHEventType": "closed", "commitUser": "jxblum"}}, "ttf": 79.00027777777778, "commitsDetails": [{"commitHash": "3e24393e9a2e9f5682afce21ad2349519368dcc0", "commitGHEventType": "closed", "commitUser": "jxblum", "commitParents": ["0e10b7763cb6e07f4bd078b70e8dc59e00bd597e"], "nameRev": "3e24393e9a2e9f5682afce21ad2349519368dcc0 tags/2.0.0.M1~49", "commitMessage": "Fixes GemFire client/server integratione tests issue when setting JAVA_TOOL_OPTIONS env var\n\nFixes gh-669\n", "commitDateTime": "2017-01-30 15:20:06", "authoredDateTime": "2017-01-17 15:42:41", "commitGitStats": [{"filePath": "gradle.properties", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "samples/boot/gemfire/build.gradle", "insertions": 21, "deletions": 10, "lines": 31}, {"filePath": "samples/boot/gemfire/src/main/java/sample/client/Application.java", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "samples/boot/gemfire/src/main/java/sample/server/GemFireServer.java", "insertions": 6, "deletions": 7, "lines": 13}, {"filePath": "samples/boot/gemfire/src/main/java/sample/server/NativeGemFireServer.java", "insertions": 186, "deletions": 0, "lines": 186}, {"filePath": "samples/boot/redis-json/build.gradle", "insertions": 0, "deletions": 1, "lines": 1}, {"filePath": "samples/boot/websocket/build.gradle", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "samples/javaconfig/gemfire-clientserver/build.gradle", "insertions": 12, "deletions": 7, "lines": 19}, {"filePath": "samples/javaconfig/gemfire-clientserver/src/main/java/sample/ClientConfig.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "samples/javaconfig/gemfire-clientserver/src/main/java/sample/ServerConfig.java", "insertions": 7, "deletions": 9, "lines": 16}, {"filePath": "samples/xml/gemfire-clientserver/build.gradle", "insertions": 11, "deletions": 6, "lines": 17}, {"filePath": "samples/xml/gemfire-clientserver/src/main/java/sample/Application.java", "insertions": 1, "deletions": 2, "lines": 3}, {"filePath": "spring-session/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Application.java", "spoonMethods": []}, {"spoonFilePath": "GemFireServer.java", "spoonMethods": [{"spoonMethodName": "sample.server.GemFireServer", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.server.GemFireServer.applicationName()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.server.GemFireServer.logLevel()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.server.GemFireServer.gemfireCacheServer(org.apache.geode.cache.Cache,java.lang.String,java.lang.String,int)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.server.GemFireServer.gemfireProperties()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "NativeGemFireServer.java", "spoonMethods": [{"spoonMethodName": "sample.server.NativeGemFireServer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ClientConfig", "TOT": 3, "UPD": 1, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ServerConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ServerConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ServerConfig.gemfireProperties()", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3e24393e9a2e9f5682afce21ad2349519368dcc0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 256, "deletions": 54, "lines": 310, "gitFilesChange": 13}, "spoonStatsSummary": {"TOT": 14, "UPD": 8, "INS": 3, "MOV": 0, "DEL": 3, "spoonFilesChanged": 4, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/boot/gemfire/src/main/java/sample/server", "samples/boot/gemfire/src/main/java/sample/client", "samples/xml/gemfire-clientserver/src/main/java/sample", "samples/boot/websocket", "samples/boot/redis-json", "samples/javaconfig/gemfire-clientserver/src/main/java/sample", "samples/xml/gemfire-clientserver", "gradle.properties", "spring-session", "samples/javaconfig/gemfire-clientserver", "samples/boot/gemfire"], "changesInPackagesSPOON": ["sample.server.NativeGemFireServer", "sample.server.GemFireServer.applicationName()", "sample.server.GemFireServer", "sample.server.GemFireServer.gemfireProperties()", "sample.server.GemFireServer.gemfireCacheServer(org.apache.geode.cache.Cache,java.lang.String,java.lang.String,int)", "sample.server.GemFireServer.logLevel()", "sample.ServerConfig", "sample.ClientConfig", "sample.ServerConfig.gemfireProperties()"]}, {"title": "GemFire Samples throw IllegalStateException on Shutdown", "body": "If I run the following from the root project\r\n\r\nNOTE: It does not happen if I run from the specific samples\r\n\r\n```bash\r\n$ gradlew clean check\r\n```\r\n\r\nI get the exception\r\n\r\n```\r\n:samples:httpsession-gemfire-clientserver:integrationTomcatStop\r\nInvocation of destroy method failed on bean with name 'gemfirePool'\r\njava.lang.IllegalStateException: Pool could not be destroyed because it is still in use by 1 regions\r\n\tat com.gemstone.gemfire.cache.client.internal.PoolImpl.destroy(PoolImpl.java:501)\r\n\tat org.springframework.data.gemfire.client.PoolFactoryBean.destroy(PoolFactoryBean.java:158)\r\n\tat org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:272)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:578)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:554)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:523)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961)\r\n\tat org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1033)\r\n\tat org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1009)\r\n\tat org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:961)\r\n\tat org.springframework.web.context.ContextLoader.closeWebApplicationContext(ContextLoader.java:581)\r\n\tat org.springframework.web.context.ContextLoaderListener.contextDestroyed(ContextLoaderListener.java:116)\r\n\tat org.apache.catalina.core.StandardContext.listenerStop(StandardContext.java:5061)\r\n\tat org.apache.catalina.core.StandardContext.stopInternal(StandardContext.java:5719)\r\n\tat org.apache.catalina.util.LifecycleBase.stop(LifecycleBase.java:232)\r\n\tat org.apache.catalina.Lifecycle$stop$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCall(CallSiteArray.java:48)\r\n\tat org.apache.catalina.Lifecycle$stop$0.call(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callSafe(AbstractCallSite.java:80)\r\n\tat com.bmuschko.gradle.tomcat.embedded.BaseTomcatServerImpl.stop(BaseTomcatServerImpl.groovy:61)\r\n\tat com.bmuschko.gradle.tomcat.embedded.TomcatServer$stop$8.call(Unknown Source)\r\n\tat com.bmuschko.gradle.tomcat.internal.ShutdownMonitor.run(ShutdownMonitor.groovy:75)\r\n```\r\n\r\nThe tests still pass, but this error should not be happening\r\n", "url": "https://github.com/spring-projects/spring-session/issues/665", "user": "rwinch", "labels": ["in: docs", "in: gemfire", "type: bug"], "created": "2016-11-10 22:55:38", "closed": "2016-11-11 02:20:22", "commits": {"dd3a57149477274cc6fca7e9e054eefb87671a28": {"commitGHEventType": "closed", "commitUser": "jxblum"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dd3a57149477274cc6fca7e9e054eefb87671a28", "commitGHEventType": "closed", "commitUser": "jxblum", "commitParents": ["e4fe53abf8207663f34f506a3bb8b7acde5fbcaa"], "nameRev": "dd3a57149477274cc6fca7e9e054eefb87671a28 tags/1.3.0.RC1~24", "commitMessage": "Avoid premature destruction of the GemFire Pool used by the client Sessions Region.\n\nFixes gh-665\n", "commitDateTime": "2016-11-10 18:09:39", "authoredDateTime": "2016-11-10 17:36:42", "commitGitStats": [{"filePath": "gradle.properties", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/httpsession-gemfire-clientserver-xml/src/main/webapp/WEB-INF/spring/session-client.xml", "insertions": 2, "deletions": 2, "lines": 4}, {"filePath": "samples/httpsession-gemfire-clientserver/src/main/java/sample/ClientConfig.java", "insertions": 13, "deletions": 20, "lines": 33}, {"filePath": "samples/httpsession-gemfire-clientserver/src/main/java/sample/ServerConfig.java", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ClientConfig.gemfirePool(int)", "TOT": 9, "UPD": 9, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.ClientConfig.gemfireCache()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "sample.ClientConfig", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ServerConfig.java", "spoonMethods": [{"spoonMethodName": "sample.ServerConfig.gemfireProperties()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dd3a57149477274cc6fca7e9e054eefb87671a28"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 14, "deletions": 22, "lines": 36, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 16, "UPD": 9, "INS": 1, "MOV": 4, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/httpsession-gemfire-clientserver/src/main/java/sample", "gradle.properties"], "changesInPackagesSPOON": ["sample.ClientConfig.gemfireCache()", "sample.ClientConfig.gemfirePool(int)", "sample.ClientConfig", "sample.ServerConfig.gemfireProperties()"]}, {"title": "config command leaks", "body": "I use spring-session 1.2.1 with springboot 1.4.0.\nI check client list using redis-cli, config command does not closed.\n\n```\n127.0.0.1:6379> client list\nid=388 addr=127.0.0.1:37054 fd=5 name= age=682 idle=667 flags=N db=0 sub=0 psub=0 multi=-1 qbuf=0 qbuf-free=0 obl=0 oll=0 omem=0 events=r cmd=config\n```\n\nI guess EnableRedisKeyspaceNotificationsInitializer should be close after configure.\n\n```\n    static class EnableRedisKeyspaceNotificationsInitializer implements InitializingBean {\n        private final RedisConnectionFactory connectionFactory;\n\n        private ConfigureRedisAction configure;\n\n        EnableRedisKeyspaceNotificationsInitializer(\n                RedisConnectionFactory connectionFactory,\n                ConfigureRedisAction configure) {\n            this.connectionFactory = connectionFactory;\n            this.configure = configure;\n        }\n\n        public void afterPropertiesSet() throws Exception {\n            RedisConnection connection = this.connectionFactory.getConnection();\n            this.configure.configure(connection);\n        }\n    }\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/626", "user": "hikoma", "labels": ["in: redis", "type: bug"], "created": "2016-09-13 03:54:51", "closed": "2016-11-22 18:36:00", "commits": {"802e0e714b55fad570a4ba7d96f9cea5105343d9": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 70.00027777777778, "commitsDetails": [{"commitHash": "802e0e714b55fad570a4ba7d96f9cea5105343d9", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["6263f6e9278e1e1f9b89cec6eeeb3b3b4909b6a8"], "nameRev": "802e0e714b55fad570a4ba7d96f9cea5105343d9 tags/1.3.0.RC1~19", "commitMessage": "close RedisConnection in EnableRedisKeyspaceNotificationsInitializer\n\nIssue gh-626\n", "commitDateTime": "2016-11-14 13:49:41", "authoredDateTime": "2016-10-29 13:32:36", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 13, "deletions": 1, "lines": 14}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer.afterPropertiesSet()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["802e0e714b55fad570a4ba7d96f9cea5105343d9"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 13, "deletions": 1, "lines": 14, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis/config"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer.afterPropertiesSet()"]}, {"title": "Unregistered GemFire Instantiator causes deserialization issues on app restarts.", "body": "Merge fixes for #594 into master\n\nNOTE: #595 doesn't cleanly merge\n", "url": "https://github.com/spring-projects/spring-session/issues/596", "user": "rwinch", "labels": ["in: gemfire", "type: backport", "type: bug"], "created": "2016-08-17 02:15:40", "closed": "2016-09-07 22:42:16", "commits": {}, "ttf": 21.00027777777778, "commitsDetails": []}, {"title": "Unregistered GemFire Instantiator causes deserialization issues on app restarts.", "body": "Presently, the _Spring Session Data GemFire_ support uses ([here](https://github.com/spring-projects/spring-session/blob/1.2.1.RELEASE/spring-session/src/main/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepository.java#L355-L362) and [here](https://github.com/spring-projects/spring-session/blob/1.2.1.RELEASE/spring-session/src/main/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepository.java#L659-L667)) GemFire [Instantiators](http://data-docs-samples.cfapps.io/docs-gemfire/latest/javadocs/japi/com/gemstone/gemfire/Instantiator.html) to construct instances of the `GemFireSession` and `GemFireSessionAttributes` internal types used by _Spring Session_ to serialize, store and manage `Session` state information in GemFire.\n\nSince _Spring Session's_ support for GemFire does not (and should not) use GemFire's `cache.xml` for configuration purposes, the only way to register the `Instantiator(s)` is in a static code block.\n\nHowever, a problem arises when a previous, active/valid `Session` already exists and a user attempts to (re-)access the previous `Session` after an application restart.  A user can accomplish this by leaving the browser window (or tab) open with the previous `Session` (based on an ID stored in a cookie) in tact.\n\nOnce the user attempts to access his/her `Session`, _Spring Session_ will attempt to retrieve and load the `Session` from GemFire using the appropriate `Repository`. This will lead to an attempt by GemFire to deserialize the class bytes (e.g. `GemFireSession`), possibly before the class type is loaded by the JVM.  Since the class type meta-data is not serialized when an `Instantiator` is used, GemFire will attempt to lookup the `Instantiator` by ID, which has been serialized with the class bytes and specified when the `Instantiator` is registered (in the static code block of the class).  However, if the class is not loaded, the `Instantiator` does not get registered (in time) and a deserialization Exception in GemFire occurs.\n\nThis resolution of this issue will fix this problem.\n", "url": "https://github.com/spring-projects/spring-session/issues/594", "user": "jxblum", "labels": ["in: gemfire", "type: bug"], "created": "2016-08-16 22:44:52", "closed": "2016-08-17 02:10:07", "commits": {"f6101b7e30b934ea3941d91a97318c708e1099e5": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f6101b7e30b934ea3941d91a97318c708e1099e5", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["240c9796793a4fa3622442712515b9e0b4cacb04"], "nameRev": "f6101b7e30b934ea3941d91a97318c708e1099e5 tags/1.2.2.RELEASE~10", "commitMessage": "Fix deserialization issue caused by unregistered Instantiator (#595)\n\nFixes gh-594 & gh-595", "commitDateTime": "2016-08-16 21:09:01", "authoredDateTime": "2016-08-16 19:09:01", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepository.java", "insertions": 62, "deletions": 82, "lines": 144}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractGemFireOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSession.1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSessionAttributes.1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSessionAttributes.entrySet()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSessionAttributes.entrySet().2", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSession", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSession.setMaxInactiveIntervalInSeconds(int)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSessionAttributes", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f6101b7e30b934ea3941d91a97318c708e1099e5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 62, "deletions": 82, "lines": 144, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 3, "spoonFilesChanged": 1, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/gemfire"], "changesInPackagesSPOON": ["org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSession.1", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSession", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSessionAttributes.entrySet().2", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSessionAttributes.entrySet()", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSession.setMaxInactiveIntervalInSeconds(int)", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSessionAttributes.1", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.GemFireSessionAttributes"]}, {"title": "JdbcOperationsSessionRepository does not respect per Session expiration times", "body": "I am using Spring Session v1.2.1 with Postgres. The sessions are persisted into my Postgres database using the `JdbcOperationsSessionRepository`.\n\nThe default inactive time that I am using for my sessions is 30 days. Once a user logs in, I do `request.getSession().setMaxInactiveInterval()` and change it to 180 days.\n\nHowever for some reason the 180 days is not being respected and sessions keep getting deleted every hour. For example:\n\n![](https://dl.dropboxusercontent.com/spa/urudiofz4a6071b/dcvg193z.png)\n\nThis session should have lasted 180 days but it got deleted as soon as the next hour started.\n\nDoes anyone know how I can stop these sessions from getting deleted and have them stick around for 180 days?\n\nI am guessing [this function](https://github.com/spring-projects/spring-session/blob/master/spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java#L464) has something to do with this.\n\nHere's the part of my application that extends the user's max inactive interval:\n\n```\nprivate void setupSession(HttpServletRequest request, User user) {\n   HttpSession session = request.getSession();\n   session.setMaxInactiveInterval(15552000);\n   session.setAttribute(\"user-id\", user.id);\n}\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/580", "user": "cooolwire", "labels": ["in: jdbc", "type: bug"], "created": "2016-07-29 04:15:14", "closed": "2016-09-12 18:42:11", "commits": {"d3379029bbfcbccb21bc470c3598cdadcb9b3919": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 45.000277777777775, "commitsDetails": [{"commitHash": "d3379029bbfcbccb21bc470c3598cdadcb9b3919", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["26eca5b44889124d2ab258c7c0e1db9eb8c40bcf"], "nameRev": "d3379029bbfcbccb21bc470c3598cdadcb9b3919 tags/1.3.0.M1~6", "commitMessage": "Fix custom expire for JdbcOperationsSessionRepository.cleanUpExpiredSessions\n\nCurrently, JdbcOperationsSessionRepository#cleanUpExpiredSessions only considers\nthe repository defined max inactive interval which causes incorrect cleanup of\nsessions that define custom inactive interval. This commit fixes the problem by\ndelegating calculation of deletion interval to the underlying SQL DELETE statement.\n\nFixes gh-580\n", "commitDateTime": "2016-09-12 13:09:36", "authoredDateTime": "2016-09-08 00:04:36", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/jdbc/AbstractJdbcOperationsSessionRepositoryITests.java", "insertions": 33, "deletions": 16, "lines": 49}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 2, "deletions": 15, "lines": 17}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/config/annotation/web/http/JdbcHttpSessionConfiguration.java", "insertions": 21, "deletions": 2, "lines": 23}, {"filePath": "spring-session/src/test/java/org/springframework/session/jdbc/JdbcOperationsSessionRepositoryTests.java", "insertions": 0, "deletions": 17, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractJdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.cleanupCleansUpInactiveSessions()", "TOT": 27, "UPD": 3, "INS": 0, "MOV": 22, "DEL": 2}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.cleanupInactiveSessionsUsingRepositoryDefinedInterval()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.AbstractJdbcOperationsSessionRepositoryITests.cleanupInactiveSessionsUsingSessionDefinedInterval()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.cleanUpExpiredSessions()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 4}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.cleanUpExpiredSessions().6.doInTransaction(org.springframework.transaction.TransactionStatus)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "JdbcHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcOperations,org.springframework.transaction.PlatformTransactionManager)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.getDatabaseName(javax.sql.DataSource)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.cleanupExpiredSessionsNoOverflow()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d3379029bbfcbccb21bc470c3598cdadcb9b3919"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 23, "deletions": 17, "lines": 40, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 13, "UPD": 4, "INS": 3, "MOV": 1, "DEL": 5, "spoonFilesChanged": 2, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/jdbc", "spring-session/src/main/java/org/springframework/session/jdbc/config/annotation"], "changesInPackagesSPOON": ["org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.getDatabaseName(javax.sql.DataSource)", "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcOperations,org.springframework.transaction.PlatformTransactionManager)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.cleanUpExpiredSessions()", "org.springframework.session.jdbc.config.annotation.web.http.JdbcHttpSessionConfiguration.sessionRepository(org.springframework.jdbc.core.JdbcTemplate,org.springframework.transaction.PlatformTransactionManager)", "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "org.springframework.session.jdbc.JdbcOperationsSessionRepository.cleanUpExpiredSessions().6.doInTransaction(org.springframework.transaction.TransactionStatus)"]}, {"title": "JdbcOperationsSessionRepository does not appear to support DB2", "body": "Following code does not apper to support db2:\n\n ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY...\n\nI think db2 will throw sql exception:  I am not sure but the driver has a restriction:\n\nhttps://www.ibm.com/support/knowledgecenter/SSEPGG_9.7.0/com.ibm.db2.luw.apdv.java.doc/src/tpc/imjcc_tjvrsush.html\n\nRestriction: If the ResultSet is scrollable, and the ResultSet is used to select columns from a table on a DB2\u00ae for Linux, UNIX, and Windows server, the SELECT list of the SELECT statement that defines the ResultSet cannot include columns with the following data types:\nLONG VARCHAR\nLONG VARGRAPHIC\nBLOB\nCLOB\nXML\nA distinct type that is based on any of the previous data types in this list\nA structured type\n\nJdbcOperationsSessionRepository \n\n```\npublic JdbcSession getSession(final String id) {\n    final ExpiringSession session = this.transactionOperations.execute(new TransactionCallback<ExpiringSession>() {\n\n        public ExpiringSession doInTransaction(TransactionStatus status) {\n            List<ExpiringSession> sessions = JdbcOperationsSessionRepository.this.jdbcOperations.query(\n                    new PreparedStatementCreator() {\n\n                        public PreparedStatement createPreparedStatement(Connection con) throws SQLException {\n                            PreparedStatement ps = con.prepareStatement(getQuery(GET_SESSION_QUERY),\n                                    ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);\n                            ps.setString(1, id);\n                            return ps;\n                        }\n\n                    },\n                    JdbcOperationsSessionRepository.this.mapper\n            );\n            if (sessions.isEmpty()) {\n                return null;\n            }\n            return sessions.get(0);\n        }\n\n    });\n```\n\n ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY\n", "url": "https://github.com/spring-projects/spring-session/issues/546", "user": "jltnf54", "labels": ["in: jdbc", "type: bug"], "created": "2016-06-11 03:37:11", "closed": "2016-08-15 18:34:12", "commits": {}, "ttf": 65.00027777777778, "commitsDetails": []}, {"title": "SessionRepositoryFilterTests doFilterLastAccessedTime fails intermittently", "body": "The latest [IO Platform compatibility build](https://build.spring.io/browse/PLATFORM-COM-JOB1-101/test/case/185755773) failed with:\n\n```\norg.junit.ComparisonFailure: expected:<146305517200[8]L> but was:<146305517200[9]L>\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at org.springframework.session.web.http.SessionRepositoryFilterTests$4.doFilter(SessionRepositoryFilterTests.java:153)\n    at org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter.doFilter(SessionRepositoryFilterTests.java:1464)\n    at org.springframework.session.web.http.SessionRepositoryFilterTests$89.doFilterInternal(SessionRepositoryFilterTests.java:1454)\n    at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80)\n    at org.springframework.mock.web.MockFilterChain.doFilter(MockFilterChain.java:134)\n    at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:164)\n    at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:80)\n    at org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(SessionRepositoryFilterTests.java:1457)\n    at org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLastAccessedTime(SessionRepositoryFilterTests.java:149)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.mockito.internal.runners.JUnit45AndHigherRunnerImpl.run(JUnit45AndHigherRunnerImpl.java:37)\n    at org.mockito.runners.MockitoJUnitRunner.run(MockitoJUnitRunner.java:62)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64)\n    at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n    at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n    at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n    at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n    at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n    at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)\n    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nThis is testing Spring Session 1.2.0.RELEASE.\n", "url": "https://github.com/spring-projects/spring-session/issues/519", "user": "wilkinsona", "labels": ["in: build", "type: bug"], "created": "2016-05-12 12:39:07", "closed": "2016-06-29 21:25:16", "commits": {"dc553104c63af9b8c1d28c15b11ab7b60c95151a": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 48.000277777777775, "commitsDetails": [{"commitHash": "dc553104c63af9b8c1d28c15b11ab7b60c95151a", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["2b4a349b1a8710b47e89e412d3f1ab511e828323"], "nameRev": "dc553104c63af9b8c1d28c15b11ab7b60c95151a tags/1.2.1.RELEASE~4", "commitMessage": "Fix SessionRepositoryFilterTests doFilterLastAccessedTime assertion\n\nRelax the assertion so that it is not exact to avoid timing issues.\n\nFixes gh-519\n", "commitDateTime": "2016-06-29 16:24:52", "authoredDateTime": "2016-06-29 16:24:52", "commitGitStats": [{"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLastAccessedTime().4.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dc553104c63af9b8c1d28c15b11ab7b60c95151a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "WebSocket sample fails with AbstractMethodError", "body": "As reported https://github.com/spring-projects/spring-session/issues/457#issuecomment-203611687 the websocket sample fails with the following error. The problem is due to invalid Spring Data Version.\n\n```\nCaused by: java.lang.AbstractMethodError: org.springframework.data.repository.core.support.RepositoryFactorySupport.getTargetRepository(Lorg/springframework/data/repository/core/RepositoryInformation;)Ljava/lang/Object;\n    at org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:185) ~[spring-data-commons-1.11.2.RELEASE.jar:na]\n    at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.initAndReturn(RepositoryFactoryBeanSupport.java:251) ~[spring-data-commons-1.11.2.RELEASE.jar:na]\n    at org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:237) ~[spring-data-commons-1.11.2.RELEASE.jar:na]\n    at org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:92) ~[spring-data-jpa-1.7.0.RELEASE.jar:na]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1637) ~[spring-beans-4.2.5.RELEASE.jar:4.2.5.RELEASE]\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1574) ~[spring-beans-4.2.5.RELEASE.jar:4.2.5.RELEASE]\n    ... 85 common frames omitted\n\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/460", "user": "rwinch", "labels": ["in: docs", "type: bug"], "created": "2016-04-01 19:25:56", "closed": "2016-04-01 19:27:20", "commits": {"cce8dac4b72a826a981c73c15ee06278dc753e20": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "cce8dac4b72a826a981c73c15ee06278dc753e20", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["5bde226ecc5ffb451680062b29309042b579b556"], "nameRev": "cce8dac4b72a826a981c73c15ee06278dc753e20 tags/1.2.0.RC2~5", "commitMessage": "Fix WebSocket AbstractMethodError\n\nFixes gh-460\n", "commitDateTime": "2016-04-01 14:27:08", "authoredDateTime": "2016-04-01 14:27:08", "commitGitStats": [{"filePath": "samples/websocket/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/websocket/src/test/java/sample/ApplicationTests.java", "insertions": 72, "deletions": 0, "lines": 72}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ApplicationTests.java", "spoonMethods": [{"spoonMethodName": "sample.ApplicationTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["cce8dac4b72a826a981c73c15ee06278dc753e20"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/websocket"], "changesInPackagesSPOON": []}, {"title": "JdbcSession update fails during read-only transaction", "body": "Flushing or closing HttpServletResponse outputStream while still inside readOnly transaction fails because JdbcOperationsRepository tries to execute SQL update query.  The expection is as follows:\n\n`org.springframework.jdbc.UncategorizedSQLException: PreparedStatementCallback; uncategorized SQLException for SQL [UPDATE SPRING_SESSION SET LAST_ACCESS_TIME = ? WHERE SESSION_ID = ?]; SQL state [25006]; error code [0]; ERROR: cannot execute UPDATE in a read-only transaction; nested exception is org.postgresql.util.PSQLException: ERROR: cannot execute UPDATE in a read-only transaction`\n\nBehaviour can be replicated by calling following fragment inside spring annotated transaction:\n`try (InputStream is = connection.getInputStream()) { IOUtils.copy(is, response.getOutputStream()); }`\n\nDefault configuration should avoid sharing user defined transaction in JdbcTemplate or defer updating database session until filter chain has been processed in SessionRepositoryFilter.\n", "url": "https://github.com/spring-projects/spring-session/issues/446", "user": "kherrala", "labels": ["in: jdbc", "status: waiting-for-feedback", "type: bug"], "created": "2016-03-25 21:36:55", "closed": "2016-04-06 04:39:36", "commits": {}, "ttf": 11.000277777777777, "commitsDetails": []}, {"title": "JdbcOperationsSessionRepository ignores lastAccessTime", "body": "Session always expires after maxInactiveInterval since creation, because lastAccessTime is not loaded from database column.\n\nSession inactivity is checked using de-serialized object, which is **not** updated using UPDATE_SESSION_LAST_ACCESS_TIME_QUERY executed when there are no changes to session attributes.\n\nSession in deleted by the check session.isExpired() in JdbcOperationsSessionRepository.getSession(String id)\n", "url": "https://github.com/spring-projects/spring-session/issues/445", "user": "kherrala", "labels": ["in: jdbc", "type: bug"], "created": "2016-03-25 21:19:28", "closed": "2016-03-28 20:06:50", "commits": {"b97306a83d5d52d957b1086ec3b8b9e7c3f69227": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "b97306a83d5d52d957b1086ec3b8b9e7c3f69227", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["6b131110799df54fd33a6b662470ad9106ab68c8", "63006db45d4a5d29534078b04c78640c3181e179"], "nameRev": "b97306a83d5d52d957b1086ec3b8b9e7c3f69227 tags/1.2.0.RC2~13", "commitMessage": "Merge pull request #450 from vpavic/gh-445\n\nFix loading of JdbcSession's lastAccessedTime attribute", "commitDateTime": "2016-03-28 15:06:49", "authoredDateTime": "2016-03-28 15:06:49", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/jdbc/JdbcOperationsSessionRepositoryITests.java", "insertions": 21, "deletions": 0, "lines": 21}, {"filePath": "spring-session/src/main/java/org/springframework/session/jdbc/JdbcOperationsSessionRepository.java", "insertions": 6, "deletions": 4, "lines": 10}, {"filePath": "spring-session/src/test/java/org/springframework/session/jdbc/JdbcOperationsSessionRepositoryTests.java", "insertions": 2, "deletions": 6, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "JdbcOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryITests.updateLastAccessedTime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepository.ExpiringSessionMapper.mapRow(java.sql.ResultSet,int)", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "JdbcOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.getSessionExpired()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.getSessionNotFound()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.getSessionFound()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.findByIndexNameAndIndexValuePrincipalIndexNameNotFound()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.jdbc.JdbcOperationsSessionRepositoryTests.findByIndexNameAndIndexValuePrincipalIndexNameFound()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 1, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DefaultCookieSerializer should ignore null Cookie value", "body": "Backport #392\n", "url": "https://github.com/spring-projects/spring-session/issues/412", "user": "rwinch", "labels": ["in: core", "type: backport", "type: bug"], "created": "2016-03-04 16:25:02", "closed": "2016-03-04 16:25:45", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Update Spring Session to Spring Data GemFire 1.7.4.RELEASE", "body": "And address all _Spring Session Data GemFire_ TODOs, which were dependent on the SDG **1.7.4.RELEASE**.\n", "url": "https://github.com/spring-projects/spring-session/issues/403", "user": "jxblum", "labels": ["in: gemfire", "type: bug", "type: enhancement"], "created": "2016-03-01 02:30:23", "closed": "2016-03-01 03:07:48", "commits": {"3300b58afe15c0e51bbcf1203703c961a4129e84": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3300b58afe15c0e51bbcf1203703c961a4129e84", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["00af8456d4f12b380ca1abc3b36527b86aca79ae"], "nameRev": "3300b58afe15c0e51bbcf1203703c961a4129e84 tags/1.2.0.RC1~34", "commitMessage": "Fix GemFire TODOs\n\nUpgrades Spring Session to use Spring Data GemFire 1.7.4.RELEASE\nand addresses all TODOs.\n\nFixes gh-403\n", "commitDateTime": "2016-02-29 21:07:00", "authoredDateTime": "2016-02-29 18:33:35", "commitGitStats": [{"filePath": "gradle.properties", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/gemfire/ClientServerGemFireOperationsSessionRepositoryIntegrationTests.java", "insertions": 7, "deletions": 11, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "ClientServerGemFireOperationsSessionRepositoryIntegrationTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.ClientServerGemFireOperationsSessionRepositoryIntegrationTests.SpringSessionGemFireClientConfiguration", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.ClientServerGemFireOperationsSessionRepositoryIntegrationTests.SpringSessionGemFireClientConfiguration.gemfireProperties()", "TOT": 4, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.ClientServerGemFireOperationsSessionRepositoryIntegrationTests.SpringSessionGemFireClientConfiguration.gemfirePool(int)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3300b58afe15c0e51bbcf1203703c961a4129e84"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": ["gradle.properties"], "changesInPackagesSPOON": []}, {"title": "Fix AbstractGemFireOperationsSessionRepositoryTest compile in Eclipse", "body": "Backport of #399\n", "url": "https://github.com/spring-projects/spring-session/issues/400", "user": "rwinch", "labels": ["in: build", "in: gemfire", "type: backport", "type: bug"], "created": "2016-02-29 20:35:43", "closed": "2016-02-29 20:39:21", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Fix AbstractGemFireOperationsSessionRepositoryTest compile in Eclipse", "body": "Related gh-373\n", "url": "https://github.com/spring-projects/spring-session/issues/399", "user": "rwinch", "labels": ["in: build", "in: gemfire", "type: bug"], "created": "2016-02-29 20:34:03", "closed": "2016-02-29 20:38:31", "commits": {"8bf3a251bb5166187e6de9aa4b40f9432ca7d947": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "09d7704c9e4e990e53de84be7257005bec5c4ce0": {"commitGHEventType": "referenced", "commitUser": "rwinch"}, "aeb0add50e24b82c6604be020c55141f26fac4a2": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "8bf3a251bb5166187e6de9aa4b40f9432ca7d947", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["5d1c60711f1f31d2a8f128704807b518dfc30be2"], "nameRev": "8bf3a251bb5166187e6de9aa4b40f9432ca7d947 tags/1.2.0.RC1~38", "commitMessage": "Fix GemFire compile in Eclipse\n\nFixes gh-399\n", "commitDateTime": "2016-02-29 14:38:18", "authoredDateTime": "2016-02-29 14:31:35", "commitGitStats": [{"filePath": "spring-session/src/test/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepositoryTest.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractGemFireOperationsSessionRepositoryTest.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreatedWithNonSessionTypeDoesNotPublishSessionCreatedEvent()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithNonSessionTypePublishesSessionDestroyedEventWithSessionId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithNonSessionTypePublishesSessionExpiredEventWithSessionId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "09d7704c9e4e990e53de84be7257005bec5c4ce0", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["cc0bfc22993e00bd07eff7e1a5f4e416f75dd66d"], "nameRev": "09d7704c9e4e990e53de84be7257005bec5c4ce0 tags/1.1.1.RELEASE~4", "commitMessage": "Fix GemFire compile in Eclipse\n\nFixes gh-399\n", "commitDateTime": "2016-02-29 14:38:54", "authoredDateTime": "2016-02-29 14:31:35", "commitGitStats": [{"filePath": "spring-session/src/test/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepositoryTest.java", "insertions": 5, "deletions": 5, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractGemFireOperationsSessionRepositoryTest.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreatedWithNonSessionTypeDoesNotPublishSessionCreatedEvent()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithNonSessionTypePublishesSessionDestroyedEventWithSessionId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithNonSessionTypePublishesSessionExpiredEventWithSessionId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "aeb0add50e24b82c6604be020c55141f26fac4a2", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["671bfa0444f752761b34b9ce47c3ef8c2fa4b5e0"], "nameRev": "aeb0add50e24b82c6604be020c55141f26fac4a2 tags/1.2.0.RC1~36", "commitMessage": "Fix GemFire compile in Eclipse\n\nFixes gh-399\n", "commitDateTime": "2016-02-29 15:47:01", "authoredDateTime": "2016-02-29 15:46:24", "commitGitStats": [{"filePath": "spring-session/src/test/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepositoryTest.java", "insertions": 6, "deletions": 6, "lines": 12}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractGemFireOperationsSessionRepositoryTest.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreatedWithNonSessionTypeDoesNotPublishSessionCreatedEvent()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithNonSessionTypePublishesSessionDestroyedEventWithSessionId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithNonSessionTypePublishesSessionExpiredEventWithSessionId()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8bf3a251bb5166187e6de9aa4b40f9432ca7d947"], "filteredCommitsReason": {"duplicated": 2, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "GemFireHttpSessionJavaConfigurationTests.assertCacheAndRegion fails", "body": "Gradle task `:spring-session:integrationTest` is failing for me due to 3 failed test in `GemFireHttpSessionJavaConfigurationTests`, with `assertCacheAndRegion` appearing to be the cause.\n\nHere are more details:\n\n``` bash\n$ ./gradlew :spring-session:integrationTest\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512M; support was removed in 8.0\nThe 'sonar-runner' plugin has been deprecated and is scheduled to be removed in Gradle 3.0. please use the official plugin from SonarQube (http://docs.sonarqube.org/display/SONAR/Analyzing+with+Gradle).\n:spring-session:compileJava UP-TO-DATE\n:spring-session:compileGroovy UP-TO-DATE\n:spring-session:processResources UP-TO-DATE\n:spring-session:classes UP-TO-DATE\n:spring-session:compileTestJava UP-TO-DATE\n:spring-session:compileTestGroovy UP-TO-DATE\n:spring-session:processTestResources UP-TO-DATE\n:spring-session:testClasses UP-TO-DATE\n:spring-session:compileIntegrationTestJava\nwarning: [options] bootstrap class path not set in conjunction with -source 1.5\nwarning: [options] source value 1.5 is obsolete and will be removed in a future release\nwarning: [options] target value 1.5 is obsolete and will be removed in a future release\nwarning: [options] To suppress warnings about obsolete options, use -Xlint:-options.\n:spring-session:compileIntegrationTestGroovy UP-TO-DATE\n:spring-session:processIntegrationTestResources UP-TO-DATE\n:spring-session:integrationTestClasses\n:spring-session:jar UP-TO-DATE\n:spring-session:integrationTest\n\norg.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests > gemfireCacheConfigurationIsValid FAILED\n    org.junit.ComparisonFailure at GemFireHttpSessionJavaConfigurationTests.java:64\n\norg.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests > verifyGemFireExampleCacheRegionSessionAttributesIndexWasNotCreated FAILED\n    org.junit.ComparisonFailure at GemFireHttpSessionJavaConfigurationTests.java:64\n\norg.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests > verifyGemFireExampleCacheRegionPrincipalNameIndexWasCreatedSuccessfully FAILED\n    org.junit.ComparisonFailure at GemFireHttpSessionJavaConfigurationTests.java:64\n\n70 tests completed, 3 failed\n:spring-session:integrationTest FAILED\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':spring-session:integrationTest'.\n> There were failing tests. See the report at: file:///home/vedran/dev/projects/spring-session/spring-session/build/reports/integration-tests/index.html\n\n* Try:\nRun with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output.\n\nBUILD FAILED\n\nTotal time: 49.151 secs\n```\n\nStacktrace (same for all 3 tests with the exception of 6th line):\n\n``` stacktrace\norg.junit.ComparisonFailure: expected:<[REPLICATE]> but was:<[NORMAL]>\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n    at org.springframework.session.data.gemfire.AbstractGemFireIntegrationTests.assertRegion(AbstractGemFireIntegrationTests.java:319)\n    at org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests.assertCacheAndRegion(GemFireHttpSessionJavaConfigurationTests.java:64)\n    at org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests.gemfireCacheConfigurationIsValid(GemFireHttpSessionJavaConfigurationTests.java:71)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:73)\n    at org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:82)\n    at org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:73)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:224)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:83)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\n    at org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:68)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:163)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:105)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:56)\n    at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:64)\n    at org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:50)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n    at org.gradle.messaging.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n    at org.gradle.messaging.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n    at com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n    at org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:106)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:498)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n    at org.gradle.messaging.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n    at org.gradle.messaging.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:360)\n    at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:54)\n    at org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:40)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/396", "user": "vpavic", "labels": ["in: build", "in: gemfire", "type: bug"], "created": "2016-02-28 09:42:23", "closed": "2016-03-01 02:48:37", "commits": {"00af8456d4f12b380ca1abc3b36527b86aca79ae": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 1.0002777777777778, "commitsDetails": [{"commitHash": "00af8456d4f12b380ca1abc3b36527b86aca79ae", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["aeb0add50e24b82c6604be020c55141f26fac4a2"], "nameRev": "00af8456d4f12b380ca1abc3b36527b86aca79ae tags/1.2.0.RC1~35", "commitMessage": "@DirtiesContext for GemFire integration tests\n\nApplies @DirtiesContext to all Spring Session Data GemFire integration\ntests to ensure that no lingering GemFire (peer or client) cache\ninstances cause conflicts on downstream tests.\n\nFixes gh-396\n", "commitDateTime": "2016-02-29 20:46:59", "authoredDateTime": "2016-02-29 17:53:11", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/gemfire/AbstractGemFireIntegrationTests.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/gemfire/ClientServerGemFireOperationsSessionRepositoryIntegrationTests.java", "insertions": 10, "deletions": 4, "lines": 14}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/gemfire/GemFireOperationsSessionRepositoryIntegrationTests.java", "insertions": 5, "deletions": 0, "lines": 5}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/gemfire/config/annotation/web/http/EnableGemFireHttpSessionEventsIntegrationTests.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/gemfire/config/annotation/web/http/GemFireHttpSessionJavaConfigurationTests.java", "insertions": 16, "deletions": 6, "lines": 22}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/gemfire/config/annotation/web/http/GemFireHttpSessionXmlConfigurationTests.java", "insertions": 9, "deletions": 4, "lines": 13}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepositoryTest.java", "insertions": 17, "deletions": 14, "lines": 31}, {"filePath": "spring-session/src/test/resources/org/springframework/session/data/gemfire/config/annotation/web/http/GemFireHttpSessionXmlConfigurationTests-context.xml", "insertions": 3, "deletions": 2, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractGemFireIntegrationTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireIntegrationTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ClientServerGemFireOperationsSessionRepositoryIntegrationTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.ClientServerGemFireOperationsSessionRepositoryIntegrationTests.setup()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.ClientServerGemFireOperationsSessionRepositoryIntegrationTests", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.ClientServerGemFireOperationsSessionRepositoryIntegrationTests.SpringSessionGemFireClientConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.ClientServerGemFireOperationsSessionRepositoryIntegrationTests.SpringSessionGemFireServerConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GemFireOperationsSessionRepositoryIntegrationTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.GemFireOperationsSessionRepositoryIntegrationTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnableGemFireHttpSessionEventsIntegrationTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.EnableGemFireHttpSessionEventsIntegrationTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GemFireHttpSessionJavaConfigurationTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests.GemFireConfiguration", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests.gemfireCacheConfigurationIsValid()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests.verifyGemFireExampleCacheRegionPrincipalNameIndexWasCreatedSuccessfully()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionJavaConfigurationTests.verifyGemFireExampleCacheRegionSessionAttributesIndexWasNotCreated()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "GemFireHttpSessionXmlConfigurationTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionXmlConfigurationTests.gemfireCacheConfigurationIsValid()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionXmlConfigurationTests.verifyGemFireExampleCacheRegionPrincipalNameIndexWasCreatedSuccessfully()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionXmlConfigurationTests.verifyGemFireExampleCacheRegionSessionAttributesIndexWasCreatedSuccessfully()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.config.annotation.web.http.GemFireHttpSessionXmlConfigurationTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractGemFireOperationsSessionRepositoryTest.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreatedWithNonSessionTypeDoesNotPublishSessionCreatedEvent()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithNonSessionTypePublishesSessionDestroyedEventWithSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithNonSessionTypePublishesSessionExpiredEventWithSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreateWithSessionPublishesSessionCreatedEvent().2.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreateWithSessionIdPublishesSessionCreatedEvent().3.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreatedWithNonSessionTypeDoesNotPublishSessionCreatedEvent().4.handleCreated(java.lang.String,org.springframework.session.ExpiringSession)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithSessionPublishesSessionDestroyedEvent().5.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithSessionIdPublishesSessionDestroyedEvent().6.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithNonSessionTypePublishesSessionDestroyedEventWithSessionId().7.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithSessionPublishesSessionExpiredEvent().8.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithSessionIdPublishesSessionExpiredEvent().9.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithNonSessionTypePublishesSessionExpiredEventWithSessionId().10.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.handleDeletedWithSessionPublishesSessionDeletedEvent().11.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.handleDeletedWithSessionIdPublishesSessionDeletedEvent().12.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.Tombstone", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["00af8456d4f12b380ca1abc3b36527b86aca79ae"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}, {"title": "DefaultCookieSerializer should ignore null Cookie value", "body": "Was testing the latest release 1.1.0.RELEASE, I was trying to logout, it throws the following exception. And also i have noticed that upon logout there is another cookie called JSESSIONID getting created.\n\n```\nException handling request to /myapp/logout: java.lang.NullPointerException\n    at java.util.StringTokenizer.<init>(StringTokenizer.java:199)\n    at java.util.StringTokenizer.<init>(StringTokenizer.java:221)\n    at org.springframework.session.web.http.CookieHttpSessionStrategy.getSessionIds(CookieHttpSessionStrategy.java:308)\n    at org.springframework.session.web.http.CookieHttpSessionStrategy.onInvalidateSession(CookieHttpSessionStrategy.java:260)\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:190)\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:170)\n    at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:128)\n    at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:65)\n```\n\nEnvironment : Ubuntu 14.04, Wildfly 9.0.2.Final, Chrome/Firefox\n", "url": "https://github.com/spring-projects/spring-session/issues/392", "user": "sreekanthsnair", "labels": ["in: core", "type: bug"], "created": "2016-02-26 12:16:22", "closed": "2016-03-04 16:22:46", "commits": {"091d0d8d9f8c3aa96f10072831605f17cc4147f7": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "47d897c846231a284bb48c42f48a137bc1380d3e": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 7.000277777777778, "commitsDetails": [{"commitHash": "091d0d8d9f8c3aa96f10072831605f17cc4147f7", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["3300b58afe15c0e51bbcf1203703c961a4129e84"], "nameRev": "091d0d8d9f8c3aa96f10072831605f17cc4147f7 tags/1.2.0.RC1~33", "commitMessage": "DefaultCookieSerializer ignores null Cookie value\n\nPreviously a null Cookie value was returned by DefaultCookieSerializer\nreadCookieValues(). This could cause NullPointerExeptions later on.\n\nThis commit ignores cookies with a null value.\n\nFixes gh-392\n", "commitDateTime": "2016-03-04 10:22:33", "authoredDateTime": "2016-03-01 09:57:47", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/DefaultCookieSerializer.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/DefaultCookieSerializerTests.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultCookieSerializer.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer.readCookieValues(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultCookieSerializerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValueAndJvmRoute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValueAndNotNullCookie()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "47d897c846231a284bb48c42f48a137bc1380d3e", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["09d7704c9e4e990e53de84be7257005bec5c4ce0"], "nameRev": "47d897c846231a284bb48c42f48a137bc1380d3e tags/1.1.1.RELEASE~3", "commitMessage": "DefaultCookieSerializer ignores null Cookie value\n\nPreviously a null Cookie value was returned by DefaultCookieSerializer\nreadCookieValues(). This could cause NullPointerExeptions later on.\n\nThis commit ignores cookies with a null value.\n\nFixes gh-392\n", "commitDateTime": "2016-03-04 10:23:16", "authoredDateTime": "2016-03-01 09:57:47", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/DefaultCookieSerializer.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/DefaultCookieSerializerTests.java", "insertions": 24, "deletions": 0, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "DefaultCookieSerializer.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializer.readCookieValues(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "DefaultCookieSerializerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValueAndJvmRoute()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.DefaultCookieSerializerTests.readCookieValuesNullCookieValueAndNotNullCookie()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["091d0d8d9f8c3aa96f10072831605f17cc4147f7"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.DefaultCookieSerializer.readCookieValues(javax.servlet.http.HttpServletRequest)"]}, {"title": "Remove \"This feature will likely be refactored in the next release to account for #301\"", "body": "The statement is no longer valid.\n\nhttp://docs.spring.io/spring-session/docs/1.1.0.RELEASE/reference/html5/guides/findbyusername.html\n", "url": "https://github.com/spring-projects/spring-session/issues/389", "user": "rwinch", "labels": ["in: docs", "type: bug"], "created": "2016-02-25 20:22:53", "closed": "2016-03-10 16:37:36", "commits": {"f8707009bd12597a1b0ee1aea7d2dac048274d5d": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "f8707009bd12597a1b0ee1aea7d2dac048274d5d", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["47d897c846231a284bb48c42f48a137bc1380d3e"], "nameRev": "f8707009bd12597a1b0ee1aea7d2dac048274d5d tags/1.1.1.RELEASE~2", "commitMessage": "Delete refactor from findbyusername doc\n\nFixes gh-389\n", "commitDateTime": "2016-03-10 10:05:07", "authoredDateTime": "2016-03-10 10:05:07", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/findbyusername.adoc", "insertions": 0, "deletions": 3, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f8707009bd12597a1b0ee1aea7d2dac048274d5d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 3, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/guides/findbyusername.adoc"]}, {"title": "SessionEventRegistry used in tests should save all AbstractSessionEvents", "body": "The Spring Session tests can fail if a session happens to expire after we have cleared the registry but before our test completes an expired session might override the value. For example:\n\n```\njava.lang.AssertionError: java.lang.AssertionError: \nExpecting:\n <org.springframework.session.events.SessionDeletedEvent[source=org.springframework.session.data.redis.RedisOperationsSessionRepository@42ac8584]>\nto be an instance of:\n <org.springframework.session.events.SessionCreatedEvent>\nbut was instance of:\n <org.springframework.session.events.SessionDeletedEvent>\njava.lang.AssertionError: \n(57 more lines...)\n```\n\nWe could fix this \n- Using #381 to provide a random value for the namespace to avoid collisions\n- Updating the test to capture all events and and then searching for the correct event\n", "url": "https://github.com/spring-projects/spring-session/issues/382", "user": "rwinch", "labels": ["in: redis", "type: bug"], "created": "2016-02-23 20:51:02", "closed": "2016-02-23 21:42:07", "commits": {"1871915c62308773e04e4f3e4c847691e2ddf804": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1871915c62308773e04e4f3e4c847691e2ddf804", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["d5259bf0e93589282ddaf4bf81265e7a9f3b4e77"], "nameRev": "1871915c62308773e04e4f3e4c847691e2ddf804 tags/1.1.0.RELEASE~4", "commitMessage": "Update SessionEventRegistry to store all events\n\nThis ensures that if multiple events are published, we wait until the event\nwith the expected session id is fired.\n\nFixes gh-382\n", "commitDateTime": "2016-02-23 15:41:57", "authoredDateTime": "2016-02-23 15:19:40", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/SessionEventRegistry.java", "insertions": 29, "deletions": 15, "lines": 44}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 6, "deletions": 6, "lines": 12}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/hazelcast/config/annotation/web/http/EnableHazelcastHttpSessionEventsTests.java", "insertions": 12, "deletions": 17, "lines": 29}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionEventRegistry.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.SessionEventRegistry", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.onApplicationEvent(org.springframework.session.events.AbstractSessionEvent)", "TOT": 7, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.setLock(java.lang.Object)", "TOT": 2, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.clear()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.waitForEvent()", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.getLock(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.receivedEvent(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.getEvent(java.lang.String)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.waitForEvent(java.lang.String)", "TOT": 6, "UPD": 0, "INS": 6, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByPrincipalName()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findBySecurityPrincipalName()", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.saves()", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnableHazelcastHttpSessionEventsTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.setup()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.expiredSessionTest()", "TOT": 9, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.saveUpdatesTimeToLiveTest()", "TOT": 9, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 4}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.saveSessionTest()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.deletedSessionTest()", "TOT": 8, "UPD": 0, "INS": 4, "MOV": 4, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1871915c62308773e04e4f3e4c847691e2ddf804"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 29, "deletions": 15, "lines": 44, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 36, "UPD": 5, "INS": 17, "MOV": 6, "DEL": 8, "spoonFilesChanged": 1, "spoonMethodsChanged": 9}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/integration-test/java/org/springframework/session/data"], "changesInPackagesSPOON": ["org.springframework.session.data.SessionEventRegistry.waitForEvent()", "org.springframework.session.data.SessionEventRegistry", "org.springframework.session.data.SessionEventRegistry.getLock(java.lang.String)", "org.springframework.session.data.SessionEventRegistry.setLock(java.lang.Object)", "org.springframework.session.data.SessionEventRegistry.clear()", "org.springframework.session.data.SessionEventRegistry.getEvent(java.lang.String)", "org.springframework.session.data.SessionEventRegistry.receivedEvent(java.lang.String)", "org.springframework.session.data.SessionEventRegistry.waitForEvent(java.lang.String)", "org.springframework.session.data.SessionEventRegistry.onApplicationEvent(org.springframework.session.events.AbstractSessionEvent)"]}, {"title": "ClassCastException in AbstractGemFireOperationsSessionRepository.afterCreate", "body": "I'm trying to setup a simple Spring security session sharing using spring-session and Gemfire.\nI've added following dependencies to my webapp project:\n\n```\n        compile('org.springframework.session:spring-session-data-gemfire:1.1.0.RC1')\n        compile('org.springframework.session:spring-session:1.1.0.RC1')\n        compile('org.springframework.security:spring-security-web')\n        compile('org.springframework.security:spring-security-config')\n```\n\nand almost succeeded to setup session sharing. \nI had to add several Spring dependencies to the Gemfire classpath because the spring-session-data-gemfire doesn't use PDX and thus some classes need to be present on the server side as well:\n`spring-session-1.1.0.RC1.jar`,`spring-expression-4.2.4.RELEASE.jar`, `spring-security-web-4.0.3.RELEASE.jar`, `spring-security-core-4.0.3.RELEASE.jar`\nThe session gets stored in my Gemfire cluster and I don't get server side ClassNotFoundExceptions any more.\nI also get a simple authentication prompt asking to login to my application:\n\n```\n@EnableWebSecurity\npublic class SecurityConfig extends WebSecurityConfigurerAdapter {\n\n    @Autowired\n    public void configureGlobal(AuthenticationManagerBuilder auth) throws Exception {\n        auth\n            .inMemoryAuthentication()\n                .withUser(\"user\").password(\"password\").roles(\"USER\");\n    }\n}\n```\n\nOn the application side after I try to login with the those credentials I get the following exception:\n\n```\n[error 2016/02/22 02:29:59.823 CET <http-nio-8080-exec-2> tid=0x31] Exception occurred in CacheListener\njava.lang.ClassCastException: com.gemstone.gemfire.internal.cache.Token$Tombstone cannot be cast to org.springframework.session.ExpiringSession\n    at org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.afterCreate(AbstractGemFireOperationsSessionRepository.java:212)\n    at com.gemstone.gemfire.internal.cache.EnumListenerEvent$AFTER_CREATE.dispatchEvent(EnumListenerEvent.java:97)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.dispatchEvent(LocalRegion.java:8820)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.dispatchListenerEvent(LocalRegion.java:7311)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.invokePutCallbacks(LocalRegion.java:6133)\n    at com.gemstone.gemfire.internal.cache.EntryEventImpl.invokeCallbacks(EntryEventImpl.java:1919)\n    at com.gemstone.gemfire.internal.cache.ProxyRegionMap$ProxyRegionEntry.dispatchListenerEvents(ProxyRegionMap.java:544)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.basicPutPart2(LocalRegion.java:5987)\n    at com.gemstone.gemfire.internal.cache.ProxyRegionMap.basicPut(ProxyRegionMap.java:228)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.basicPutEntry(LocalRegion.java:5919)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.findObjectInSystem(LocalRegion.java:2808)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.nonTxnFindObject(LocalRegion.java:1464)\n    at com.gemstone.gemfire.internal.cache.LocalRegionDataView.findObject(LocalRegionDataView.java:133)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.get(LocalRegion.java:1348)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.get(LocalRegion.java:1311)\n    at com.gemstone.gemfire.internal.cache.LocalRegion.get(LocalRegion.java:1298)\n    at com.gemstone.gemfire.internal.cache.AbstractRegion.get(AbstractRegion.java:321)\n    at org.springframework.data.gemfire.GemfireTemplate.get(GemfireTemplate.java:161)\n    at org.springframework.session.data.gemfire.GemFireOperationsSessionRepository.getSession(GemFireOperationsSessionRepository.java:117)\n    at org.springframework.session.data.gemfire.GemFireOperationsSessionRepository.getSession(GemFireOperationsSessionRepository.java:38)\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:270)\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:286)\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:170)\n    at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:231)\n    at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:231)\n    at org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository.loadToken(HttpSessionCsrfTokenRepository.java:77)\n    at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:85)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)\n    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:64)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)\n    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:91)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)\n    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:53)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:330)\n    at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:213)\n    at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:176)\n    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:346)\n    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:262)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:87)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:126)\n    at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:65)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:121)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.boot.actuate.autoconfigure.MetricsFilter.doFilterInternal(MetricsFilter.java:103)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:502)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:141)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:521)\n    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1096)\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:674)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1500)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1456)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nThe session is not being recognized after that and app's page says after that\n\n```\nThere was an unexpected error (type=Forbidden, status=403).\nExpected CSRF token not found. Has your session expired?\n```\n\nThat looks like something unexpected for the spring-session code.\nAm I missing anything, or this is a spring-session issue indeed?\n", "url": "https://github.com/spring-projects/spring-session/issues/373", "user": "sshcherbakov", "labels": ["in: gemfire", "type: bug"], "created": "2016-02-22 01:45:15", "closed": "2016-02-24 23:04:22", "commits": {"53d7c84f73be1df4d5f72579717789156e4b927e": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 2.000277777777778, "commitsDetails": [{"commitHash": "53d7c84f73be1df4d5f72579717789156e4b927e", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["1871915c62308773e04e4f3e4c847691e2ddf804"], "nameRev": "53d7c84f73be1df4d5f72579717789156e4b927e tags/1.1.0.RELEASE~3", "commitMessage": "Fix ClassCastException Token$Tombstone\n\nFixes gh-373\n", "commitDateTime": "2016-02-24 17:01:26", "authoredDateTime": "2016-02-23 22:49:49", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepository.java", "insertions": 15, "deletions": 3, "lines": 18}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/gemfire/AbstractGemFireOperationsSessionRepositoryTest.java", "insertions": 106, "deletions": 12, "lines": 118}], "commitSpoonAstDiffStats": [{"spoonFilePath": "AbstractGemFireOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.afterCreate(com.gemstone.gemfire.cache.EntryEvent)", "TOT": 7, "UPD": 0, "INS": 1, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.isExpiringSessionOrNull(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.toExpiringSession(java.lang.Object)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.afterDestroy(com.gemstone.gemfire.cache.EntryEvent)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.afterInvalidate(com.gemstone.gemfire.cache.EntryEvent)", "TOT": 5, "UPD": 0, "INS": 1, "MOV": 4, "DEL": 0}]}, {"spoonFilePath": "AbstractGemFireOperationsSessionRepositoryTest.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithSessionIdPublishesSessionDestroyedEvent()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithSessionIdPublishesSessionExpiredEvent()", "TOT": 8, "UPD": 3, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithSessionPublishesSessionDestroyedEvent()", "TOT": 18, "UPD": 3, "INS": 0, "MOV": 14, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithSessionPublishesSessionExpiredEvent()", "TOT": 21, "UPD": 4, "INS": 1, "MOV": 16, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreateWithSessionIdPublishesSessionCreatedEvent()", "TOT": 5, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToData().10", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionFromData().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToDataThenFromDataWhenPrincipalNameIsNullGetsHandledProperly().12", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToDataThenFromDataWhenPrincipalNameIsNullGetsHandledProperly().13", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToDelta().14", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionFromDelta().15", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesToData().16", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesFromData().17", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesToDelta().18", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesFromDelta().19", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreateWithSessionPublishesSessionCreatedEvent()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithSessionPublishesSessionDestroyedEvent().4", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.handleDeletedWithSessionIdPublishesSessionDeletedEvent()", "TOT": 12, "UPD": 2, "INS": 1, "MOV": 9, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithSessionIdPublishesSessionDestroyedEvent().5.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithSessionPublishesSessionExpiredEvent().6.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithSessionPublishesSessionDestroyedEvent().4.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToData().10.writeObject(java.lang.Object,java.io.DataOutput)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionFromData().11.readObject(java.io.DataInput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToDataThenFromDataWhenPrincipalNameIsNullGetsHandledProperly().12.writeObject(java.lang.Object,java.io.DataOutput)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToDelta().14.writeObject(java.lang.Object,java.io.DataOutput)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionFromDelta().15.readObject(java.io.DataInput)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesToData().16.writeObject(java.lang.Object,java.io.DataOutput)", "TOT": 7, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesFromData().17.readObject(java.io.DataInput)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesToDelta().18.writeObject(java.lang.Object,java.io.DataOutput)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesFromDelta().19.readObject(java.io.DataInput)", "TOT": 5, "UPD": 1, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.handleDeletedWithSessionPublishesSessionDeletedEvent()", "TOT": 11, "UPD": 0, "INS": 0, "MOV": 10, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterCreatedWithNonSessionTypeDoesNotPublishSessionCreatedEvent()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithNonSessionTypePublishesSessionDestroyedEventWithSessionId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithNonSessionTypePublishesSessionExpiredEventWithSessionId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesFromDelta().22.readObject(java.io.DataInput)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterDestroyWithNonSessionTypePublishesSessionDestroyedEventWithSessionId().7.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithNonSessionTypePublishesSessionExpiredEventWithSessionId().10.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToDataThenFromDataWhenPrincipalNameIsNullGetsHandledProperly()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToDelta()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesToData()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesFromDelta()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesToDelta()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionAttributesFromData()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.sessionToData()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.afterInvalidateWithSessionIdPublishesSessionExpiredEvent().7.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.handleDeletedWithSessionIdPublishesSessionDeletedEvent().9.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepositoryTest.handleDeletedWithSessionPublishesSessionDeletedEvent().8.answer(org.mockito.invocation.InvocationOnMock)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["53d7c84f73be1df4d5f72579717789156e4b927e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 15, "deletions": 3, "lines": 18, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 16, "UPD": 0, "INS": 5, "MOV": 10, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 5}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/gemfire"], "changesInPackagesSPOON": ["org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.isExpiringSessionOrNull(java.lang.Object)", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.afterInvalidate(com.gemstone.gemfire.cache.EntryEvent)", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.toExpiringSession(java.lang.Object)", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.afterDestroy(com.gemstone.gemfire.cache.EntryEvent)", "org.springframework.session.data.gemfire.AbstractGemFireOperationsSessionRepository.afterCreate(com.gemstone.gemfire.cache.EntryEvent)"]}, {"title": "HazelcastClientRepositoryITests should shutdown single instance not all", "body": "We should close a [single Hazelcast instance rather than all of them](https://github.com/spring-projects/spring-session/blob/7c53558454a160e0443d73366ecc9e0d32211c3f/spring-session/src/integration-test/java/org/springframework/session/hazelcast/HazelcastClientRepositoryITests.java#L55-L58)\n", "url": "https://github.com/spring-projects/spring-session/issues/358", "user": "rwinch", "labels": ["in: hazelcast", "type: bug"], "created": "2016-02-08 22:49:57", "closed": "2016-02-09 15:56:07", "commits": {"bf7729b936d110ffa8cd8f18d3a31738270c0814": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "bf7729b936d110ffa8cd8f18d3a31738270c0814", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["7c53558454a160e0443d73366ecc9e0d32211c3f"], "nameRev": "bf7729b936d110ffa8cd8f18d3a31738270c0814 tags/1.1.0.RC1~6", "commitMessage": "Close only used HazelcastInstance\n\n* It might be dangerous to shutdownAll() HazelcastInstances from the\ntest-case, especially when we are ran in with the integration test and on\nthe CI environment.\nTherefore extract the instance variable in the test and close only it from\nthe @AfterClass\n* Fix typo in the AbstractHazelcastRepositoryITests test method name\n* Increase lock wait timeout to the 10 seconds in the SessionEventRegistry.\nLooks like 3 seconds isn't enough for my Windows machine.\n\nFixes gh-358 gh-360\n", "commitDateTime": "2016-02-09 09:08:09", "authoredDateTime": "2016-02-09 08:21:05", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/SessionEventRegistry.java", "insertions": 3, "deletions": 3, "lines": 6}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/hazelcast/AbstractHazelcastRepositoryITests.java", "insertions": 7, "deletions": 6, "lines": 13}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/hazelcast/HazelcastClientRepositoryITests.java", "insertions": 12, "deletions": 7, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionEventRegistry.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.SessionEventRegistry.waitForEvent()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "AbstractHazelcastRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.AbstractHazelcastRepositoryITests.createAndDestorySession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastClientRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.HazelcastClientRepositoryITests.teardown()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastClientRepositoryITests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.HazelcastClientRepositoryITests.setup()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["bf7729b936d110ffa8cd8f18d3a31738270c0814"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 3, "lines": 6, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/integration-test/java/org/springframework/session/data"], "changesInPackagesSPOON": ["org.springframework.session.data.SessionEventRegistry.waitForEvent()"]}, {"title": "spring-session-data-gemfire fails gemfire:springIoDependencyVersionMappingCheck", "body": "```\n:spring-session-data-gemfire:springIoAlternativeDependenciesCheck\n:spring-session-data-gemfire:springIoDependencyVersionMappingCheck FAILED\n\nFAILURE: Build failed with an exception.\n\n* What went wrong:\nExecution failed for task ':spring-session-data-gemfire:springIoDependencyVersionMappingCheck'.\n> The following direct dependencies do not have Spring IO versions: \n      - org.springframework.shell:spring-shell\n  Please refer to the plugin's README for further instructions: https://github.com/spring-projects/gradle-plugins/tree/master/spring-io-plugin#dealing-with-unmapped-dependencies\n\n```\n\ncc @jxblum \n", "url": "https://github.com/spring-projects/spring-session/issues/344", "user": "rwinch", "labels": ["in: gemfire", "type: bug"], "created": "2016-01-28 23:08:49", "closed": "2016-01-29 02:27:05", "commits": {"f53e991d02bcaff6ba143d265676c719bc2ad928": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "f53e991d02bcaff6ba143d265676c719bc2ad928", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["22f6f9dd727227ccd57a322a92e56c217ffc7e9e"], "nameRev": "f53e991d02bcaff6ba143d265676c719bc2ad928 tags/1.1.0.RC1~26", "commitMessage": "Remove spring-shell from spring-data-gemfire\n\nFixes gh-344\n", "commitDateTime": "2016-01-28 20:26:49", "authoredDateTime": "2016-01-28 20:26:49", "commitGitStats": [{"filePath": "spring-session-data-gemfire/build.gradle", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f53e991d02bcaff6ba143d265676c719bc2ad928"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 1, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-data-gemfire"]}, {"title": "RedisOperationsSessionRepository findByPrincipalName fails after changing username", "body": "If the username changes, then the index is not updated\n", "url": "https://github.com/spring-projects/spring-session/issues/343", "user": "rwinch", "labels": ["in: redis", "type: bug"], "created": "2016-01-28 23:04:09", "closed": "2016-01-29 03:42:50", "commits": {"7463592988b96d9c76b4ab70860ba6a87c5eea75": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "7463592988b96d9c76b4ab70860ba6a87c5eea75", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["198acc064836b47747e5b88a999e7bcace5d071e"], "nameRev": "7463592988b96d9c76b4ab70860ba6a87c5eea75 tags/1.1.0.RC1~24", "commitMessage": "Fix RedisOperationsSessionRepository.findByPrincipalName index\n\nPreviously, the index was not properly cleaned up when it was changed. This\ncommit ensures that the index is removed when the index name changes.\n\nFixes gh-343\n", "commitDateTime": "2016-01-28 21:42:29", "authoredDateTime": "2016-01-28 21:38:18", "commitGitStats": [{"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 134, "deletions": 0, "lines": 134}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 12, "deletions": 5, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByPrincipalNameExpireRemovesIndex()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByPrincipalNameNoPrincipalNameChange()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByPrincipalNameNoPrincipalNameChangeReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByDeletedPrincipalName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByChangedPrincipalName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByDeletedPrincipalNameReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.findByChangedPrincipalNameReload()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveDelta()", "TOT": 6, "UPD": 1, "INS": 1, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7463592988b96d9c76b4ab70860ba6a87c5eea75"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 12, "deletions": 5, "lines": 17, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 8, "UPD": 1, "INS": 3, "MOV": 3, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession.saveDelta()", "org.springframework.session.data.redis.RedisOperationsSessionRepository.RedisSession"]}, {"title": "Support External Hazelcast instance (i.e. non-embedded)", "body": "I could be missing something, but here's what I'm seeing.  I'm not sure if this can really be fixed, or if it just needs to be documented better that HazelcastHttpSessionConfiguration does not work for out of process Hazelcast server.\n\nI enabled HazelcastHttpSessionConfiguration, and it works fine in a local profile that uses an embedded Hazelcast Instance.  However, when I switch to a profile that connects to a standalone Hazelcast instance, I get an exception thrown.\n\nI'm setting up my hazelcast instance with this api:\n\n```\n    public static HazelcastInstance newHazelcastClient(ClientConfig config);\n```\n\nThe first line in HazelcastHttpSessionConfiguration.configureSessionMap()  is \n\n```\n        MapConfig sessionMapConfig = hazelcastInstance.getConfig().getMapConfig(sessionMapName);\n```\n\nthen getConfig() throws this exception:\n\n```\nCaused by: java.lang.UnsupportedOperationException: Client cannot access cluster config!\n          at com.hazelcast.client.impl.HazelcastClientInstanceImpl.getConfig(HazelcastClientInstanceImpl.java:278) ~[hazelcast-client-3.5.4.jar:3.5.4]\n        at com.hazelcast.client.impl.HazelcastClientProxy.getConfig(HazelcastClientProxy.java:78) ~[hazelcast-client-3.5.4.jar:3.5.4]\n        at org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.configureSessionMap(HazelcastHttpSessionConfiguration.java:98) ~[spring-session-1.1.0.M1.jar:na]\n        at org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.sessionRepository(HazelcastHttpSessionConfiguration.java:70) ~[spring-session-1.1.0.M1.jar:na]\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/339", "user": "sc-moonlight", "labels": ["in: hazelcast", "type: bug"], "created": "2016-01-26 20:50:45", "closed": "2016-02-08 22:16:43", "commits": {"f2443f5e21b64c193cd2c1e4c4d27d1f9f7b20ce": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 13.000277777777777, "commitsDetails": [{"commitHash": "f2443f5e21b64c193cd2c1e4c4d27d1f9f7b20ce", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["2b5386ad9863182d90b1ab6f6dc7d36cda281ef7"], "nameRev": "f2443f5e21b64c193cd2c1e4c4d27d1f9f7b20ce tags/1.1.0.RC1~8", "commitMessage": "Support External Hazelcast instance\n\nPreviously the Hazelcast support only worked with\nembedded Hazelcast instances.\n\nThis commit ensures that Hazelcast support works\nwith external Hazelcast instances.\n\nFixes gh-339\n", "commitDateTime": "2016-02-08 16:00:37", "authoredDateTime": "2016-02-01 19:10:09", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/hazelcast-spring.adoc", "insertions": 7, "deletions": 7, "lines": 14}, {"filePath": "docs/src/docs/asciidoc/index.adoc", "insertions": 4, "deletions": 3, "lines": 7}, {"filePath": "samples/hazelcast-spring/src/main/java/sample/Config.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/hazelcast/config/annotation/web/http/EnableHazelcastHttpSessionEventsTests.java", "insertions": 22, "deletions": 3, "lines": 25}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/hazelcast/config/annotation/web/http/HazelcastHttpSessionConfigurationXmlTests.java", "insertions": 1, "deletions": 78, "lines": 79}, {"filePath": "spring-session/src/main/java/org/springframework/session/hazelcast/config/annotation/web/http/EnableHazelcastHttpSession.java", "insertions": 1, "deletions": 4, "lines": 5}, {"filePath": "spring-session/src/main/java/org/springframework/session/hazelcast/config/annotation/web/http/HazelcastHttpSessionConfiguration.java", "insertions": 71, "deletions": 36, "lines": 107}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Config.java", "spoonMethods": [{"spoonMethodName": "sample.Config", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnableHazelcastHttpSessionEventsTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests", "TOT": 8, "UPD": 5, "INS": 0, "MOV": 2, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.HazelcastSessionConfig", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.EnableHazelcastHttpSessionEventsTests.saveUpdatesTimeToLiveTest()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastHttpSessionConfigurationXmlTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfigurationXmlTests.CustomXmlMapNameAndIdleTest.HazelcastSessionXmlConfigCustomMapNameAndIdle", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfigurationXmlTests.CustomXmlInactiveIntervalTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfigurationXmlTests.CustomXmlMapNameTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfigurationXmlTests.CustomXmlMapNameTest.checkUnderlyingMapSettingsTest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfigurationXmlTests.CustomXmlMapNameAndIdleTest", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfigurationXmlTests.CustomXmlMapNameAndIdleTest.checkUnderlyingMapSettingsTest()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "EnableHazelcastHttpSession.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.maxInactiveIntervalInSeconds()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HazelcastHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.configureSessionMap(com.hazelcast.core.HazelcastInstance)", "TOT": 18, "UPD": 10, "INS": 0, "MOV": 7, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.transferAnnotationAttributes(org.springframework.core.annotation.AnnotationAttributes)", "TOT": 13, "UPD": 4, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.sessionRepository(com.hazelcast.core.HazelcastInstance,org.springframework.session.hazelcast.SessionEntryListener)", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.ExpiringSessionMap", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["f2443f5e21b64c193cd2c1e4c4d27d1f9f7b20ce"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 84, "deletions": 51, "lines": 135, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 44, "UPD": 20, "INS": 3, "MOV": 16, "DEL": 5, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/index.adoc", "spring-session/src/main/java/org/springframework/session/hazelcast/config/annotation", "samples/hazelcast-spring/src/main/java/sample", "docs/src/docs/asciidoc/guides/hazelcast-spring.adoc"], "changesInPackagesSPOON": ["org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.transferAnnotationAttributes(org.springframework.core.annotation.AnnotationAttributes)", "org.springframework.session.hazelcast.config.annotation.web.http.maxInactiveIntervalInSeconds()", "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration", "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.configureSessionMap(com.hazelcast.core.HazelcastInstance)", "sample.Config", "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.ExpiringSessionMap", "org.springframework.session.hazelcast.config.annotation.web.http.HazelcastHttpSessionConfiguration.sessionRepository(com.hazelcast.core.HazelcastInstance,org.springframework.session.hazelcast.SessionEntryListener)"]}, {"title": "RedisSessionExpirationPolicy uses RedisOperationsSessionRepository logger name", "body": "It doesn't look correct that logger of RedisSessionExpirationPolicy is configured by [RedisOperationsSessionRepository class name](https://github.com/spring-projects/spring-session/blob/master/spring-session/src/main/java/org/springframework/session/data/redis/RedisSessionExpirationPolicy.java#L49).\nSeparate classes should have their own loggers for better log granularity.\n", "url": "https://github.com/spring-projects/spring-session/issues/329", "user": "VitaliiH", "labels": ["in: redis", "type: bug"], "created": "2015-12-20 22:03:32", "closed": "2016-02-23 20:31:08", "commits": {"d5259bf0e93589282ddaf4bf81265e7a9f3b4e77": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 64.00027777777778, "commitsDetails": [{"commitHash": "d5259bf0e93589282ddaf4bf81265e7a9f3b4e77", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["12b1dda24c886b5aa7c110375e3bd1a734a517da"], "nameRev": "d5259bf0e93589282ddaf4bf81265e7a9f3b4e77 tags/1.1.0.RELEASE~5", "commitMessage": "Fix RedisSessionExpirationPolicy logger name\n\nFixes gh-329\n", "commitDateTime": "2016-02-23 14:31:00", "authoredDateTime": "2016-02-23 14:31:00", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisSessionExpirationPolicy.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisSessionExpirationPolicy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d5259bf0e93589282ddaf4bf81265e7a9f3b4e77"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisSessionExpirationPolicy"]}, {"title": "Session last accessed time not updated in SessionRepositoryMessageInterceptor", "body": "After implementing #272, `org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptor` was not updated.\n\nThis means that the following code:\n\n``` java\nString sessionId = sessionHeaders == null ? null : (String) sessionHeaders.get(SPRING_SESSION_ID_ATTR_NAME);\nif (sessionId != null) {\n    S session = sessionRepository.getSession(sessionId);\n    if (session != null) {\n        // update the last accessed time\n    sessionRepository.save(session);\n    }\n}\n```\n\nNo longer has the desired effect.  This means that a session expires after a certain period of only WebSocket activity - exactly the behaviour Spring Session was designed to prevent.\n", "url": "https://github.com/spring-projects/spring-session/issues/325", "user": "bmorris591", "labels": ["in: core", "type: bug"], "created": "2015-12-08 11:11:50", "closed": "2015-12-08 14:42:24", "commits": {"969053fa87d582a3a2f30602f1a9f84124320585": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "969053fa87d582a3a2f30602f1a9f84124320585", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["eb646ef5d86b94e6e848167ecf040663fead69ee"], "nameRev": "969053fa87d582a3a2f30602f1a9f84124320585 tags/1.1.0.RC1~32", "commitMessage": "SessionRepositoryMessageInterceptor updates lastAccessedTime\n\nFixes gh-325\n", "commitDateTime": "2015-12-08 08:37:50", "authoredDateTime": "2015-12-08 08:37:50", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/socket/server/SessionRepositoryMessageInterceptor.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/socket/server/SessionRepositoryMessageInterceptorTests.java", "insertions": 24, "deletions": 4, "lines": 28}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryMessageInterceptor.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptor.preSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryMessageInterceptorTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptorTests.preSendConnectUpdatesLastUpdateTime()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptorTests.preSendMessageUpdatesLastUpdateTime()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptorTests.preSendSubscribeUpdatesLastUpdateTime()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptorTests.preSendUnsubscribeUpdatesLastUpdateTime()", "TOT": 4, "UPD": 3, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptorTests.isAlmostNow()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptorTests.AlmostNowMatcher", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["969053fa87d582a3a2f30602f1a9f84124320585"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/socket/server"], "changesInPackagesSPOON": ["org.springframework.session.web.socket.server.SessionRepositoryMessageInterceptor.preSend(org.springframework.messaging.Message,org.springframework.messaging.MessageChannel)"]}, {"title": "SessionRepositoryFilter should set lastAccessedTime on session creation", "body": "**Related** #272\n", "url": "https://github.com/spring-projects/spring-session/issues/324", "user": "rwinch", "labels": ["in: core", "type: bug"], "created": "2015-12-04 21:33:13", "closed": "2015-12-04 21:44:58", "commits": {"eb646ef5d86b94e6e848167ecf040663fead69ee": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "eb646ef5d86b94e6e848167ecf040663fead69ee", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["f14942edb01bf4d67e1b46e99c66a45669137636"], "nameRev": "eb646ef5d86b94e6e848167ecf040663fead69ee tags/1.1.0.RC1~33", "commitMessage": "SessionRepositoryFilter sets maxInactiveIntervalInSeconds on create\n\nFixes gh-324\n", "commitDateTime": "2015-12-04 15:44:52", "authoredDateTime": "2015-12-04 15:38:32", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId()", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIdChanges()", "TOT": 4, "UPD": 2, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContextExplicit()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalDefault()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged()", "TOT": 5, "UPD": 2, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdNoSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions()", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIdChanges().8", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIdChanges().7", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContext().9", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContextExplicit().10", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalDefault().11", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().12", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().13", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().14", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().16", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().17", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().18", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().20", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().21", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue().22", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().26", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().27", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().25", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew().28", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew().29", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew().30", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().23", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().32", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().34", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().35", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdNoSession().36", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().37", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().43", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().40", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError().42", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().39", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().46", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().47", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().49", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().50", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().51", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().53", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().54", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().55", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().56", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().57", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().60", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().61", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().62", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().63", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().64", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().65", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().66", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().67", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().68", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().76", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().77", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().80", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().79", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().82", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions().83", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().78", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().81", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).86", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).87", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLastAccessedTime().3.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 8, "UPD": 2, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLastAccessedTime().4.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterId().5.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 4, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIdChanges().8.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().16.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().14.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().20.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().18.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().24.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue().22.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalDefault().11.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().12.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().27.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().25.getSession(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().32.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().34.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().35.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdNoSession().36.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().37.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError().42.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().40.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().44.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().46.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().64.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().68.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().76.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLastAccessedTime()", "TOT": 11, "UPD": 0, "INS": 1, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterId()", "TOT": 9, "UPD": 0, "INS": 1, "MOV": 7, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContext().9.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().47.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCreateSetsLastAccessedTime()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCreateSetsLastAccessedTime().3.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterId().6.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().59.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContextExplicit().11.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionCreation()", "TOT": 5, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLazySessionUpdates()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLastAccessedTime().4", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterLastAccessedTime().3", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().24", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContextExplicit().10.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 0, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().13.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().17.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().21.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().49.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().50.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().51.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().55.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().56.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().57.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 0, "INS": 0, "MOV": 7, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().69.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().70.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().71.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().72.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().73.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().74.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().75.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().48.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().52.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().53.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().54.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().58.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["eb646ef5d86b94e6e848167ecf040663fead69ee"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)"]}, {"title": "Single session in CookieHttpSessionStrategy assumed to be DEFAULT_ALIAS", "body": "The cookie-writing code in org.springframework.session.web.http.CookieHttpSessionStrategy#createSessionCookie does not save the session alias if there is only a single session:\n\n```\n    if(sessionIds.size() == 1) {\n        String cookieValue = sessionIds.values().iterator().next();\n        sessionCookie.setValue(cookieValue);\n        return sessionCookie;\n    }\n```\n\nThe cookie-loading code in org.springframework.session.web.http.CookieHttpSessionStrategy#getSessionIds assumes that a single sessionId must be associated with DEFAULT_ALIAS:\n\n```\n    if(tokens.countTokens() == 1) {\n        result.put(DEFAULT_ALIAS, tokens.nextToken());\n        return result;\n    }\n```\n\nThis means that if the first request to the server has an explicit session alias, the session that is created is not associated with that alias, and the second request with that same alias will be allocated a fresh session.\n\nThe test in `createSessionCookie` should test that the alias associated with the single session is in fact DEFAULT_ALIAS before using the \"compact\" alias-free version of the cookie.\n", "url": "https://github.com/spring-projects/spring-session/issues/321", "user": "RobRendell", "labels": ["in: core", "type: bug"], "created": "2015-11-30 04:25:37", "closed": "2015-12-03 20:38:36", "commits": {"b38cc74764ea94ca7b4509ea2f602a1a78e7cf04": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 3.000277777777778, "commitsDetails": [{"commitHash": "b38cc74764ea94ca7b4509ea2f602a1a78e7cf04", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["3df40dd8a9ada28e3217c15482cfe1f74812fdf1"], "nameRev": "b38cc74764ea94ca7b4509ea2f602a1a78e7cf04 tags/1.1.0.RC1~37", "commitMessage": "Include alias unless single id and default alias\n\nFixes gh-321\n", "commitDateTime": "2015-12-03 14:38:25", "authoredDateTime": "2015-12-03 14:38:07", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/CookieHttpSessionStrategy.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/CookieHttpSessionStrategyTests.java", "insertions": 10, "deletions": 1, "lines": 11}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookieHttpSessionStrategy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.createSessionCookieValue(java.util.Map)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "CookieHttpSessionStrategyTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.onNewSessionExplicitAlias()", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.onDeleteSessionExistingSessionSameAlias()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b38cc74764ea94ca7b4509ea2f602a1a78e7cf04"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.CookieHttpSessionStrategy.createSessionCookieValue(java.util.Map)"]}, {"title": "Hardcoded JdkSerializationRedisSerializer in RedisOperationsSessionRepository", "body": "Spring Session 1.1.0 M1\n\nThe following code should likely use the `defaultRedisSerializer` supplied to the `RedisHttpSessionConfiguration`:\n\n``` java\n    @SuppressWarnings(\"unchecked\")\n    public void onMessage(Message message, byte[] pattern) {\n\n... snip\n\n        if(channel.startsWith(getSessionCreatedChannelPrefix())) {\n            RedisSerializer<Object> serializer = new JdkSerializationRedisSerializer();\n            Map<Object,Object> loaded = (Map<Object, Object>) serializer.deserialize(message.getBody());\n            handleCreated(loaded, channel);\n            return;\n        }\n\n... snip\n\n    }\n```\n\nThis code works fine if I do not supply my own `RedisSerializer`, but if I follow the instructions in the [release announcement](https://spring.io/blog/2015/11/17/spring-session-1-1-0-m1-released) and supply my own `RedisSerializer` (one backed by Kryo in this case) then I get the following exception when the `RedisOperationsSessionRepository` tries to process the session created event message:\n\n``` java\n2015-11-23T14:22:04,946 WARN org.springframework.data.redis.listener.RedisMessageListenerContainer or.sp.da.re.li.RedisMessageListenerContainer.287 [redisMessageListenerContainer-20] Execution of JMS message listener failed, and no ErrorHandler has been set.\norg.springframework.data.redis.serializer.SerializationException: Cannot deserialize; nested exception is org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.StreamCorruptedException: invalid stream header: 01006A61\n        at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:41) ~[spring-data-redis-1.6.1.RELEASE.jar:1.6.1.RELEASE]\n        at org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(RedisOperationsSessionRepository.java:450) ~[spring-session-1.1.0.M1.jar:?]\n        at org.springframework.data.redis.listener.RedisMessageListenerContainer.executeListener(RedisMessageListenerContainer.java:245) [spring-data-redis-1.6.1.RELEASE.jar:1.6.1.RELEASE]\n        at org.springframework.data.redis.listener.RedisMessageListenerContainer.processMessage(RedisMessageListenerContainer.java:235) [spring-data-redis-1.6.1.RELEASE.jar:1.6.1.RELEASE]\n        at org.springframework.data.redis.listener.RedisMessageListenerContainer$1.run(RedisMessageListenerContainer.java:960) [spring-data-redis-1.6.1.RELEASE.jar:1.6.1.RELEASE]\n        at java.lang.Thread.run(Thread.java:745) [?:1.8.0_66]\nCaused by: org.springframework.core.serializer.support.SerializationFailedException: Failed to deserialize payload. Is the byte array a result of corresponding serialization for DefaultDeserializer?; nested exception is java.io.StreamCorruptedException: invalid stream header: 01006A61\n        at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:78) ~[spring-core-4.2.3.RELEASE.jar:4.2.3.RELEASE]\n        at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36) ~[spring-core-4.2.3.RELEASE.jar:4.2.3.RELEASE]\n        at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:39) ~[spring-data-redis-1.6.1.RELEASE.jar:1.6.1.RELEASE]\n        ... 5 more\nCaused by: java.io.StreamCorruptedException: invalid stream header: 01006A61\n        at java.io.ObjectInputStream.readStreamHeader(ObjectInputStream.java:806) ~[?:1.8.0_66]\n        at java.io.ObjectInputStream.<init>(ObjectInputStream.java:299) ~[?:1.8.0_66]\n        at org.springframework.core.ConfigurableObjectInputStream.<init>(ConfigurableObjectInputStream.java:64) ~[spring-core-4.2.3.RELEASE.jar:4.2.3.RELEASE]\n        at org.springframework.core.ConfigurableObjectInputStream.<init>(ConfigurableObjectInputStream.java:50) ~[spring-core-4.2.3.RELEASE.jar:4.2.3.RELEASE]\n        at org.springframework.core.serializer.DefaultDeserializer.deserialize(DefaultDeserializer.java:68) ~[spring-core-4.2.3.RELEASE.jar:4.2.3.RELEASE]\n        at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:73) ~[spring-core-4.2.3.RELEASE.jar:4.2.3.RELEASE]\n        at org.springframework.core.serializer.support.DeserializingConverter.convert(DeserializingConverter.java:36) ~[spring-core-4.2.3.RELEASE.jar:4.2.3.RELEASE]\n        at org.springframework.data.redis.serializer.JdkSerializationRedisSerializer.deserialize(JdkSerializationRedisSerializer.java:39) ~[spring-data-redis-1.6.1.RELEASE.jar:1.6.1.RELEASE]\n        ... 5 more\n```\n\nI believe this is because the body of the message received has been serialized with the custom `RedisSerializer` supplied.\n", "url": "https://github.com/spring-projects/spring-session/issues/309", "user": "bmorris591", "labels": ["in: redis", "type: bug"], "created": "2015-11-23 14:23:23", "closed": "2016-02-04 20:26:42", "commits": {"fe17e3fcc0988ae52c8a50d0007017c595f3769a": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "cc1d3a7e9ef85e68835800dd5fdfdeacf66c0444": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 73.00027777777778, "commitsDetails": [{"commitHash": "fe17e3fcc0988ae52c8a50d0007017c595f3769a", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["ef904a4544459427c3b3319e9c499935c5674b29"], "nameRev": "fe17e3fcc0988ae52c8a50d0007017c595f3769a tags/1.1.0.RC1~14", "commitMessage": "Use correct RedisSerializer\n\n- Remove hardcoded JdkSerializationRedisSerializer from onMessage\n  in favour of same defaultRedisSerializer user configured as this\n  is most likely the one which works.\n- Fixes #309\n", "commitDateTime": "2016-02-04 14:01:26", "authoredDateTime": "2015-12-27 11:16:36", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 15, "deletions": 2, "lines": 17}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 3, "deletions": 0, "lines": 3}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.setDefaultSerializer(org.springframework.data.redis.serializer.RedisSerializer)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.sessionRepository(org.springframework.data.redis.core.RedisOperations,org.springframework.context.ApplicationEventPublisher)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "cc1d3a7e9ef85e68835800dd5fdfdeacf66c0444", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["fe17e3fcc0988ae52c8a50d0007017c595f3769a"], "nameRev": "cc1d3a7e9ef85e68835800dd5fdfdeacf66c0444 tags/1.1.0.RC1~13", "commitMessage": "Add test for Redis onMessage w/ custom serializer\n\nIssue gh-309\n", "commitDateTime": "2016-02-04 14:12:24", "authoredDateTime": "2016-02-04 14:12:24", "commitGitStats": [{"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 25, "deletions": 1, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreated()", "TOT": 14, "UPD": 0, "INS": 8, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreatedCustomSerializer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.setup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["fe17e3fcc0988ae52c8a50d0007017c595f3769a", "cc1d3a7e9ef85e68835800dd5fdfdeacf66c0444"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 18, "deletions": 2, "lines": 20, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 6, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 2, "spoonFilesChanged": 2, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis/config", "spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.sessionRepository(org.springframework.data.redis.core.RedisOperations,org.springframework.context.ApplicationEventPublisher)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.setDefaultSerializer(org.springframework.data.redis.serializer.RedisSerializer)", "org.springframework.session.data.redis.RedisOperationsSessionRepository.onMessage(org.springframework.data.redis.connection.Message,byte[])"]}, {"title": "HttpSessionListener sessionCreated id contains invalid \":\"", "body": "It should remove the \":\". For example:\n\n```\nCreated :5bf30e5f-b994-477c-8f3a-aa5430effb88\nDestroy 5bf30e5f-b994-477c-8f3a-aa5430effb88\n```\n\nThere should be no `:` in the Created\n", "url": "https://github.com/spring-projects/spring-session/issues/305", "user": "rwinch", "labels": ["type: bug"], "created": "2015-11-11 22:59:58", "closed": "2015-11-17 17:58:26", "commits": {"8bd29c1ab2f2abd71edb9d46c71ae15779675b3d": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "8bd29c1ab2f2abd71edb9d46c71ae15779675b3d", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["f1d0350356719597e8cbdca3002df52ea5895e21"], "nameRev": "8bd29c1ab2f2abd71edb9d46c71ae15779675b3d tags/1.1.0.M1~4", "commitMessage": "HttpSessionListener sessionCreated id contains invalid ':'\n\nFixes gh-305\n", "commitDateTime": "2015-11-16 16:12:35", "authoredDateTime": "2015-11-16 16:12:35", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 31, "deletions": 2, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository.handleCreated(java.util.Map,java.lang.String)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.onMessageCreated()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8bd29c1ab2f2abd71edb9d46c71ae15779675b3d"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository.handleCreated(java.util.Map,java.lang.String)"]}, {"title": "Fix custom MultiHttpSessionStrategy Configuration", "body": "When using a custom MultiHttpSessionStrategy with the provided Spring Configuration, it is mistakenly set as a HttpSessionStrategy instead.\n", "url": "https://github.com/spring-projects/spring-session/issues/303", "user": "rwinch", "labels": ["type: bug"], "created": "2015-11-11 21:26:44", "closed": "2015-11-11 21:43:26", "commits": {"2e82b311ee203d60d3ce50365270df019d6e9eb1": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2e82b311ee203d60d3ce50365270df019d6e9eb1", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["8c07537bec11fb05ec9cadaff9b65fa3d416338c"], "nameRev": "2e82b311ee203d60d3ce50365270df019d6e9eb1 tags/1.1.0.M1~10", "commitMessage": "Fix custom MultiHttpSessionStrategy configuration\n\nFixes gh-303\n", "commitDateTime": "2015-11-11 15:27:01", "authoredDateTime": "2015-11-10 15:10:26", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/config/annotation/web/http/SpringHttpSessionConfiguration.java", "insertions": 6, "deletions": 1, "lines": 7}, {"filePath": "spring-session/src/test/java/org/springframework/session/config/annotation/web/http/EnableSpringHttpSessionCustomMultiHttpSessionStrategyTests.java", "insertions": 93, "deletions": 0, "lines": 93}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SpringHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.config.annotation.web.http.SpringHttpSessionConfiguration.springSessionRepositoryFilter(org.springframework.session.SessionRepository,javax.servlet.ServletContext)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EnableSpringHttpSessionCustomMultiHttpSessionStrategyTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.config.annotation.web.http.EnableSpringHttpSessionCustomMultiHttpSessionStrategyTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2e82b311ee203d60d3ce50365270df019d6e9eb1"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 1, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/config/annotation/web"], "changesInPackagesSPOON": ["org.springframework.session.config.annotation.web.http.SpringHttpSessionConfiguration.springSessionRepositoryFilter(org.springframework.session.SessionRepository,javax.servlet.ServletContext)"]}, {"title": "SessionDestroyed event triggered more times", "body": "Hi,\nI'm trying the new class SessionEventHttpSessionListenerAdapter, in order to support my HttpSessionListener with SpringSession (1.1.0-BUILD-SNAPSHOT)\n\nI registered my listener in the adapter:\nHttpSessionConfig.java\n\n``` java\n@Bean\n    public SessionEventHttpSessionListenerAdapter sessionEventHttpSessionListenerAdapter() {\n        List<HttpSessionListener> demoSessionListeners = new ArrayList<HttpSessionListener>();\n        demoSessionListeners.add(new DemoSessionListener());\n        return new SessionEventHttpSessionListenerAdapter(demoSessionListeners);\n    }\n```\n\nI created a sample listener that logs the creation and the destruction of the session\nDemoSessionListener.java\n\n``` java\npublic class DemoSessionListener implements HttpSessionListener {\n\n    @Override\n    public void sessionCreated(HttpSessionEvent httpSessionEvent) {\n        System.out.println(\"sessionCreated with id \" + httpSessionEvent.getSession().getId());\n    }\n\n    @Override\n    public void sessionDestroyed(HttpSessionEvent httpSessionEvent) {\n        System.out.println(\"sessionDestroyed with id \" + httpSessionEvent.getSession().getId());\n    }\n```\n\nThe sessionDestroyed event is triggered more times:\nOutput:\n\n```\nsessionDestroyed with id 9f8eb544-cced-4e93-95be-e2df9b8b5424\nsessionDestroyed with id 9f8eb544-cced-4e93-95be-e2df9b8b5424\nsessionCreated with id :fa9bf22e-8162-46ee-b355-ec787809e7a0\n```\n\nI think the event should be triggered only once time.\nThanks in advance\n", "url": "https://github.com/spring-projects/spring-session/issues/292", "user": "fuinumir", "labels": ["type: bug"], "created": "2015-09-23 16:12:39", "closed": "2015-11-16 17:24:30", "commits": {"8a5cba914b8a552b35ab7cc62742255d87dad1eb": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 54.000277777777775, "commitsDetails": [{"commitHash": "8a5cba914b8a552b35ab7cc62742255d87dad1eb", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["5fbf333c6147f69010874a709eb170b0c92361c3"], "nameRev": "8a5cba914b8a552b35ab7cc62742255d87dad1eb tags/1.1.0.M1~7", "commitMessage": "RedisOperationsSessionRepsitory only deletes once\n\nPreviously RedisOperationsSessionRepository incorrectly:\n\n* Deleted the session\n* Added the session\n* Set the expiration to be 0\n\nThis commit ensures that if the expiration is 0 that the sesson is only\ndeleted.\n\nFixes gh-292\n", "commitDateTime": "2015-11-16 10:52:39", "authoredDateTime": "2015-11-16 10:52:39", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisSessionExpirationPolicy.java", "insertions": 6, "deletions": 2, "lines": 8}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 19, "deletions": 5, "lines": 24}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisSessionExpirationPolicy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.onExpirationUpdated(java.lang.Long,org.springframework.session.ExpiringSession)", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.saveExpired()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.delete()", "TOT": 6, "UPD": 0, "INS": 4, "MOV": 2, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8a5cba914b8a552b35ab7cc62742255d87dad1eb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 6, "deletions": 2, "lines": 8, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 3, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisSessionExpirationPolicy.onExpirationUpdated(java.lang.Long,org.springframework.session.ExpiringSession)"]}, {"title": "Add jsp-api to security sample", "body": "", "url": "https://github.com/spring-projects/spring-session/issues/279", "user": "rwinch", "labels": ["type: bug"], "created": "2015-08-25 20:11:19", "closed": "2015-08-25 20:11:52", "commits": {"134d23bb07f0837f9de1e28e17867ec7f9b5a180": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "134d23bb07f0837f9de1e28e17867ec7f9b5a180", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["8b5469ef5ca4e12a64ca7d7ec7a07d44c70b3c7e"], "nameRev": "134d23bb07f0837f9de1e28e17867ec7f9b5a180 tags/1.1.0.M1~20", "commitMessage": "Add jsp-api to security sample\n\nFixes gh-279\n", "commitDateTime": "2015-08-25 15:11:28", "authoredDateTime": "2015-08-25 09:14:11", "commitGitStats": [{"filePath": "samples/security/build.gradle", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["134d23bb07f0837f9de1e28e17867ec7f9b5a180"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 1, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/security"]}, {"title": "CookieHttpSessionStrategy should look at all cookies not just the first", "body": "Right now if multiple cookies are submitted to Spring Session, it only considers the first cookie with the correct name. We should inspect additional cookies if the session id in the first cookie was not valid.\n\nWe need to select the first session id that is valid for this application. So for example, if a request to `/other/` is made\n\n``` http\nGET /other/ HTTP/1.1\nHost: example.com\n\nHTTP/1.1 200 OK\nSet-Cookie: SESSION=df540dc9-6919-4fe2-a410-5b04cdf9917c; Path=/other/\n```\n\nThen a request to `/` is made\n\n``` http\nGET / HTTP/1.1\nHost: example.com\n\nHTTP/1.1 200 OK\nSet-Cookie: SESSION=e4616883-678c-4e1b-a154-d3106fe60bf6; Path=/\n```\n\nFinally another request to `/other/` is made in which both SESSION cookies are submitted with the request:\n\n``` http\nGET /other/ HTTP/1.1\nHost: example.com\nCookie: SESSION=eba15ac9-3fa6-40cb-8666-20bcc4b6bf22; SESSION=ddaa23ff-698b-4af4-9a89-285185bf1ef9\n```\n\nIf these two sessions are for different applications, then we must select the correct session id. Note that the client will not include the path information in the request (it is only in the response).\n\nWe must also consider a similar scenario for the domain.\n\nPart of the struggle with this is how to make the changes passive (or as passive as possible) without looking up the session multiple times.\n\nRelates to gh-362\n", "url": "https://github.com/spring-projects/spring-session/issues/275", "user": "rwinch", "labels": ["type: bug"], "created": "2015-08-21 17:16:07", "closed": "2017-10-26 12:29:58", "commits": {"cd394bbe10c98fdb3f8e5049a88d108528be98ff": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 796.0002777777778, "commitsDetails": [{"commitHash": "cd394bbe10c98fdb3f8e5049a88d108528be98ff", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["2ecb2e60c058465eb04e3cdbe6b936f38ca3f7c9"], "nameRev": "cd394bbe10c98fdb3f8e5049a88d108528be98ff tags/2.0.0.RC1~14", "commitMessage": "Align `HttpSessionStrategy` with `WebSessionIdResolver`\n\nThis commit simplifies `HttpSessionStrategy` API by aligning it with Spring Framework's `WebSessionIdResolver`. As a part of this, support for managing multiple users' sessions has been removed.\n\nCloses gh-275\nCloses gh-362\n", "commitDateTime": "2017-10-26 07:29:56", "authoredDateTime": "2017-10-25 20:42:29", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/java-users.adoc", "insertions": 0, "deletions": 162, "lines": 162}, {"filePath": "docs/src/docs/asciidoc/index.adoc", "insertions": 0, "deletions": 17, "lines": 17}, {"filePath": "samples/javaconfig/users/gradle/dependency-management.gradle", "insertions": 0, "deletions": 5, "lines": 5}, {"filePath": "samples/javaconfig/users/spring-session-sample-javaconfig-users.gradle", "insertions": 0, "deletions": 24, "lines": 24}, {"filePath": "samples/javaconfig/users/src/integration-test/java/sample/UserTests.java", "insertions": 0, "deletions": 236, "lines": 236}, {"filePath": "samples/javaconfig/users/src/integration-test/java/sample/pages/BasePage.java", "insertions": 0, "deletions": 74, "lines": 74}, {"filePath": "samples/javaconfig/users/src/integration-test/java/sample/pages/HomePage.java", "insertions": 0, "deletions": 66, "lines": 66}, {"filePath": "samples/javaconfig/users/src/integration-test/java/sample/pages/LinkPage.java", "insertions": 0, "deletions": 35, "lines": 35}, {"filePath": "samples/javaconfig/users/src/main/java/sample/Account.java", "insertions": 0, "deletions": 45, "lines": 45}, {"filePath": "samples/javaconfig/users/src/main/java/sample/Config.java", "insertions": 0, "deletions": 39, "lines": 39}, {"filePath": "samples/javaconfig/users/src/main/java/sample/EmbeddedRedisConfig.java", "insertions": 0, "deletions": 59, "lines": 59}, {"filePath": "samples/javaconfig/users/src/main/java/sample/Initializer.java", "insertions": 0, "deletions": 36, "lines": 36}, {"filePath": "samples/javaconfig/users/src/main/java/sample/LoginServlet.java", "insertions": 0, "deletions": 48, "lines": 48}, {"filePath": "samples/javaconfig/users/src/main/java/sample/LogoutServlet.java", "insertions": 0, "deletions": 43, "lines": 43}, {"filePath": "samples/javaconfig/users/src/main/java/sample/UserAccountsFilter.java", "insertions": 0, "deletions": 104, "lines": 104}, {"filePath": "samples/javaconfig/users/src/main/resources/logback.xml", "insertions": 0, "deletions": 14, "lines": 14}, {"filePath": "samples/javaconfig/users/src/main/webapp/META-INF/MANIFEST.MF", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "samples/javaconfig/users/src/main/webapp/assets/js/ie10-viewport-bug-workaround.js", "insertions": 0, "deletions": 22, "lines": 22}, {"filePath": "samples/javaconfig/users/src/main/webapp/index.jsp", "insertions": 0, "deletions": 112, "lines": 112}, {"filePath": "samples/javaconfig/users/src/main/webapp/link.jsp", "insertions": 0, "deletions": 85, "lines": 85}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/config/annotation/web/http/SpringHttpSessionConfiguration.java", "insertions": 2, "deletions": 8, "lines": 10}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/CookieHttpSessionStrategy.java", "insertions": 14, "deletions": 355, "lines": 369}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/HeaderHttpSessionStrategy.java", "insertions": 11, "deletions": 2, "lines": 13}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/HttpSessionManager.java", "insertions": 0, "deletions": 75, "lines": 75}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/HttpSessionStrategy.java", "insertions": 7, "deletions": 4, "lines": 11}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/MultiHttpSessionStrategy.java", "insertions": 0, "deletions": 36, "lines": 36}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/RequestResponsePostProcessor.java", "insertions": 0, "deletions": 52, "lines": 52}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 29, "deletions": 78, "lines": 107}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/config/annotation/web/http/EnableSpringHttpSessionCustomCookieSerializerTests.java", "insertions": 14, "deletions": 6, "lines": 20}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/config/annotation/web/http/EnableSpringHttpSessionCustomMultiHttpSessionStrategyTests.java", "insertions": 0, "deletions": 108, "lines": 108}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/CookieHttpSessionStrategyTests.java", "insertions": 13, "deletions": 571, "lines": 584}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/HeaderSessionStrategyTests.java", "insertions": 13, "deletions": 8, "lines": 21}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 73, "deletions": 106, "lines": 179}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyFiles"}], "filteredCommits": ["cd394bbe10c98fdb3f8e5049a88d108528be98ff"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 63, "deletions": 1564, "lines": 1627, "gitFilesChange": 25}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session-core/src/main/java/org/springframework/session/web/http", "spring-session-core/src/main/java/org/springframework/session/config/annotation/web", "samples/javaconfig/users/src/integration-test/java/sample/pages", "samples/javaconfig/users/src/main/webapp/META-INF/MANIFEST.MF", "samples/javaconfig/users/src/main/webapp/link.jsp", "samples/javaconfig/users/src/main/java/sample", "docs/src/docs/asciidoc/guides/java-users.adoc", "samples/javaconfig/users/src/main/webapp/index.jsp", "samples/javaconfig/users/gradle", "docs/src/docs/asciidoc/index.adoc", "samples/javaconfig/users"]}, {"title": "Remove commons-httpclient from integration tests", "body": "This causes classpath issues in the integration tests\n", "url": "https://github.com/spring-projects/spring-session/issues/268", "user": "rwinch", "labels": ["type: bug"], "created": "2015-08-17 19:41:27", "closed": "2015-08-17 19:45:04", "commits": {"77eb6cfd71027488505be4d3c6bded3439015c39": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "77eb6cfd71027488505be4d3c6bded3439015c39", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["21065b23c0309589c96c213ddb7fa3a94bfa7d6b"], "nameRev": "77eb6cfd71027488505be4d3c6bded3439015c39 tags/1.1.0.M1~36", "commitMessage": "Remove commons-httpclient:commons-httpclient\n\nFixes gh-268\n", "commitDateTime": "2015-08-17 14:41:35", "authoredDateTime": "2015-08-13 23:11:56", "commitGitStats": [{"filePath": "gradle/java.gradle", "insertions": 0, "deletions": 1, "lines": 1}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["77eb6cfd71027488505be4d3c6bded3439015c39"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 0, "deletions": 1, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["gradle"]}, {"title": "Fix reference indentation for REST subsections", "body": "", "url": "https://github.com/spring-projects/spring-session/issues/262", "user": "rwinch", "labels": ["type: bug"], "created": "2015-08-12 19:20:36", "closed": "2015-08-12 22:09:47", "commits": {"2503537e36039b0bd31102c1b52787441a46b2da": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2503537e36039b0bd31102c1b52787441a46b2da", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["d27d9a22bf0f8e05b09c745280e966f06414a46f"], "nameRev": "2503537e36039b0bd31102c1b52787441a46b2da tags/1.1.0.M1~39", "commitMessage": "Fix reference indentation for REST subsections\n\nFixes gh-262\n", "commitDateTime": "2015-08-12 16:55:01", "authoredDateTime": "2015-08-11 23:09:36", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/index.adoc", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2503537e36039b0bd31102c1b52787441a46b2da"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/index.adoc"]}, {"title": "CookieHttpSessionStrategy can write the same Session id twice", "body": "If `SessionRepositoryRequestWrapper.commitSession()` is invoked twice when a new session is created, then `CookieHttpSessionStrategy` will add the same cookie twice. A couple examples of how this could happen:\n- The response is committed and `SessionRepositoryResponseWrapper.onResponseCommitted()` invokes `SessionRepositoryRequestWrapper.commitSession()`. Then the finally block in `SessionRepositoryFilter` invokes `SessionRepositoryRequestWrapper.commitSession()` again.\n- The new session is initialized and an Exception is thrown (i.e. #229). The `SessionRepositoryFilter` invokes `SessionRepositoryRequestWrapper.commitSession()` in the REQUEST dispatch. Then in the ERROR dispatch `SessionRepositoryFilter` invokes `SessionRepositoryRequestWrapper.commitSession()` invokes it again.\n", "url": "https://github.com/spring-projects/spring-session/issues/251", "user": "rwinch", "labels": ["type: bug"], "created": "2015-07-27 22:08:10", "closed": "2015-07-28 20:05:27", "commits": {"d5484e15ca5175e853c4dce0f8218d7583df82eb": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "d5484e15ca5175e853c4dce0f8218d7583df82eb", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["3d93f2cf56ad9b9562ceeb3ffda75715b113de4f"], "nameRev": "d5484e15ca5175e853c4dce0f8218d7583df82eb tags/1.0.2.RELEASE~6", "commitMessage": "CookieHttpSessionStrategy only writes same Session once\n\nIf SessionRepositoryRequestWrapper.commitSession() is invoked twice\nwhen a new session is created, then CookieHttpSessionStrategy will\nadd the same cookie twice. A couple examples of how this could happen:\n\n* The response is committed and\n  SessionRepositoryResponseWrapper.onResponseCommitted() invokes\n  SessionRepositoryRequestWrapper.commitSession(). Then the finally\n  block in SessionRepositoryFilter invokes\n  SessionRepositoryRequestWrapper.commitSession() again.\n* The new session is initialized and an Exception is thrown (i.e.\n  gh-229). The SessionRepositoryFilter invokes\n  SessionRepositoryRequestWrapper.commitSession() in the REQUEST\n  dispatch. Then in the ERROR dispatch SessionRepositoryFilter invokes\n  SessionRepositoryRequestWrapper.commitSession() invokes it again.\n\nThis commit ensures if the same Session is passed into\nCookieHttpSessionStrategy multiple times within the same HttpServletRequest\nit is only written once by keeping track of the sessions on a request\nattribute.\n\nFixes gh-251\n", "commitDateTime": "2015-07-28 15:01:51", "authoredDateTime": "2015-07-28 14:58:51", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/CookieHttpSessionStrategy.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/CookieHttpSessionStrategyTests.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookieHttpSessionStrategy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.getSessionIdsWritten(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.onNewSession(org.springframework.session.Session,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CookieHttpSessionStrategyTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.onNewSessionTwiceSameId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.onNewSessionTwiceNewId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d5484e15ca5175e853c4dce0f8218d7583df82eb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 19, "deletions": 0, "lines": 19, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 5, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.CookieHttpSessionStrategy", "org.springframework.session.web.http.CookieHttpSessionStrategy.getSessionIdsWritten(javax.servlet.http.HttpServletRequest)", "org.springframework.session.web.http.CookieHttpSessionStrategy.onNewSession(org.springframework.session.Session,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"]}, {"title": "ERROR dispatch can cause two sessions to be created", "body": "# Updated Description\n\nAfter further feedback from @tsachev the issue is reproduced:\n- Initially there is no session created on the server and no session cookies in the browser.\n- The controller/servlet creates a new session and sets an attribute. then throw an exception\n- The error is handled and the SessionRepositoryFilter is invoked on the ERROR dispatch\n\nThis happens because the wrapped request that is caching the current session is not there anymore. It is a new HttpServletRequest object that is no longer wrapped. Instead, we should save the `HttpSessionWrapper currentSession` in a `HttpServletRequest` attribute.\n# Original Description\n\nIf a request creates a new session and then forwards (`requestDispatcher.forward()`) to another servlet/view which tries to update the session - two session are created.\n\nif SessionRepositoryFilter is registered for `DisptcherType.FORWARD` - two spring sessions are created.\nif SessionRepositoryFilter is not registered for `DisptcherType.FORWARD` - one spring session is created and one tomcat session.\n\nI can see that two `Set-Cooke` headers are sent to the browser.\n\n```\nHTTP/1.1 500 Internal Server Error\nServer: Apache-Coyote/1.1\nSet-Cookie: SESSION=8aa5f36e-820c-43bf-ba68-3797fd70b20f; Path=/storefront/; Secure; HttpOnly\nSet-Cookie: SESSION=acc2a3df-ab9a-4080-afa3-c740fee75f5b; Path=/storefront/; Secure; HttpOnly\nContent-Type: text/html;charset=UTF-8\nContent-Language: en-US\nContent-Length: 0\nDate: Thu, 25 Jun 2015 14:56:10 GMT\nConnection: close\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/229", "user": "tsachev", "labels": ["type: bug"], "created": "2015-06-25 14:59:07", "closed": "2015-07-27 22:28:43", "commits": {"8929e85fb1ebed64e8204b893e3bc34be9814c84": {"commitGHEventType": "referenced", "commitUser": "rwinch"}, "3d93f2cf56ad9b9562ceeb3ffda75715b113de4f": {"commitGHEventType": "referenced", "commitUser": "rwinch"}, "d5484e15ca5175e853c4dce0f8218d7583df82eb": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 32.000277777777775, "commitsDetails": [{"commitHash": "8929e85fb1ebed64e8204b893e3bc34be9814c84", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["f6c14072596e365732b0205d9aa4af201a25614d"], "nameRev": "8929e85fb1ebed64e8204b893e3bc34be9814c84 tags/1.0.2.RELEASE~8", "commitMessage": "Fix Tests\n\nThese tests passed, but were technically incorrect. The\ninvalid tests were noticed when fixing gh-229.\n\nIssue: gh-229\n", "commitDateTime": "2015-07-27 17:11:04", "authoredDateTime": "2015-07-27 17:10:16", "commitGitStats": [{"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIdChanges()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "3d93f2cf56ad9b9562ceeb3ffda75715b113de4f", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["8929e85fb1ebed64e8204b893e3bc34be9814c84"], "nameRev": "3d93f2cf56ad9b9562ceeb3ffda75715b113de4f tags/1.0.2.RELEASE~7", "commitMessage": "currentSession saved on HttpServletRequest attribute\n\nPreviously, if the following happened:\n\n* New Session Created\n* Exception thrown\n* Exception processed by error handler within Servlet\n* Error Handler used a session\n\nThe result would be two sessions were created. This means the\ndata from the first session was also lost. This happend\nbecause ERROR dispatch is a separate Filter invocation where\nthe request is no longer wrapped.\n\nThis commit ensures that currentSession is saved on a\nHttpServletRequest attribute so that the ERROR dispatch sees\nthat a session was already created.\n\nFixes: gh-229\n", "commitDateTime": "2015-07-27 17:23:34", "authoredDateTime": "2015-07-27 16:52:33", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 23, "deletions": 6, "lines": 29}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 26, "deletions": 1, "lines": 27}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 3, "UPD": 2, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.changeSessionId()", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isInvalidateClientSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "TOT": 19, "UPD": 0, "INS": 10, "MOV": 2, "DEL": 7}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper.invalidate()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getCurrentSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.setCurrentSession(org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.setup()", "TOT": 4, "UPD": 1, "INS": 2, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().41", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().45", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().46", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().47", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().48", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().49", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().50", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().51", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().52", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().53", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().54", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().55", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().56", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().57", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().58", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().60", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().61", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().62", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().63", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().64", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().65", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().66", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().67", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().74", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().75", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().77", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().76", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate().79", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).82", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).83", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().42.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 5, "UPD": 5, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().44.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().62.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().67.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().66.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().74.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().45.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().46.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 5, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionOnError()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().51.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().58.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().75.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().57.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionNoSessionRepositoryInteractions()", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().47.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().48.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().49.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().50.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().53.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().55.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().56.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().54.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().68.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().69.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().70.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().71.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().72.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().73.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().51.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().52.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "d5484e15ca5175e853c4dce0f8218d7583df82eb", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["3d93f2cf56ad9b9562ceeb3ffda75715b113de4f"], "nameRev": "d5484e15ca5175e853c4dce0f8218d7583df82eb tags/1.0.2.RELEASE~6", "commitMessage": "CookieHttpSessionStrategy only writes same Session once\n\nIf SessionRepositoryRequestWrapper.commitSession() is invoked twice\nwhen a new session is created, then CookieHttpSessionStrategy will\nadd the same cookie twice. A couple examples of how this could happen:\n\n* The response is committed and\n  SessionRepositoryResponseWrapper.onResponseCommitted() invokes\n  SessionRepositoryRequestWrapper.commitSession(). Then the finally\n  block in SessionRepositoryFilter invokes\n  SessionRepositoryRequestWrapper.commitSession() again.\n* The new session is initialized and an Exception is thrown (i.e.\n  gh-229). The SessionRepositoryFilter invokes\n  SessionRepositoryRequestWrapper.commitSession() in the REQUEST\n  dispatch. Then in the ERROR dispatch SessionRepositoryFilter invokes\n  SessionRepositoryRequestWrapper.commitSession() invokes it again.\n\nThis commit ensures if the same Session is passed into\nCookieHttpSessionStrategy multiple times within the same HttpServletRequest\nit is only written once by keeping track of the sessions on a request\nattribute.\n\nFixes gh-251\n", "commitDateTime": "2015-07-28 15:01:51", "authoredDateTime": "2015-07-28 14:58:51", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/CookieHttpSessionStrategy.java", "insertions": 19, "deletions": 0, "lines": 19}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/CookieHttpSessionStrategyTests.java", "insertions": 22, "deletions": 0, "lines": 22}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookieHttpSessionStrategy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.getSessionIdsWritten(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.onNewSession(org.springframework.session.Session,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CookieHttpSessionStrategyTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.onNewSessionTwiceSameId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.onNewSessionTwiceNewId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["8929e85fb1ebed64e8204b893e3bc34be9814c84", "3d93f2cf56ad9b9562ceeb3ffda75715b113de4f", "d5484e15ca5175e853c4dce0f8218d7583df82eb"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 42, "deletions": 6, "lines": 48, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 40, "UPD": 2, "INS": 24, "MOV": 2, "DEL": 12, "spoonFilesChanged": 2, "spoonMethodsChanged": 12}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getCurrentSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.setCurrentSession(org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper$HttpSessionWrapper)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper.invalidate()", "org.springframework.session.web.http.SessionRepositoryFilter", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isInvalidateClientSession()", "org.springframework.session.web.http.CookieHttpSessionStrategy.getSessionIdsWritten(javax.servlet.http.HttpServletRequest)", "org.springframework.session.web.http.CookieHttpSessionStrategy", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.changeSessionId()", "org.springframework.session.web.http.CookieHttpSessionStrategy.onNewSession(org.springframework.session.Session,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)"]}, {"title": "Updates to previous HttpSession references are not reflected after changeSessionId() invoked", "body": "When `spring-session` is used and `HttpServletRequest#changeSessionId()` is called previously obtained HTTP session instance is no longer usable.\nFor example following code works fine on tomcat, jetty and undertow, but doesn't when `spring-session` is used\n\n``` java\nHttpSession session = req.getSession();\nreq.changeSessionId();\nsession.setAttribute(\"attr\", \"value\");\n\n// ...\n\n// expect attrValue to be \"value\" \nObject attrValue = req.getSession().getAttribute(\"attr\");\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/227", "user": "tsachev", "labels": ["type: bug"], "created": "2015-06-24 13:24:41", "closed": "2015-07-27 20:27:07", "commits": {"b79913240da4283bf45fdbbcd7bdfa925e5fe832": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 33.000277777777775, "commitsDetails": [{"commitHash": "b79913240da4283bf45fdbbcd7bdfa925e5fe832", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["4c243842436a02a6dd1961bc22a47e8b92ece3e5"], "nameRev": "b79913240da4283bf45fdbbcd7bdfa925e5fe832 tags/1.0.2.RELEASE~10", "commitMessage": "HttpServletRequest.changeSessionId() impacts previous references\n\nPreviously, if a user had a reference to an existing HttpSession and\nchanged the session id, it would not work. For example:\n\nHttpSession s = request.getSession();\nrequest.changeSessionId();\ns.setAttribute(...);\n\nThis commit fixes holding on to a reference of an HttpSession when\nthe session id is changed.\n\nFixes gh-227\n", "commitDateTime": "2015-07-27 15:25:58", "authoredDateTime": "2015-07-27 15:25:58", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 7, "deletions": 1, "lines": 8}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.changeSessionId()", "TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().34.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 0, "INS": 5, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["b79913240da4283bf45fdbbcd7bdfa925e5fe832"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 5, "deletions": 2, "lines": 7, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.changeSessionId()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper"]}, {"title": "IllegalArgumentException running websocket sample", "body": "```\n./gradlew :samples:websocket:bootRun\n```\n\nfails with an exception caused by:\n\n```\njava.lang.IllegalArgumentException: Could not resolve placeholder 'spring.redis.port' in string value \"${spring.redis.port}\"\n```\n\nI'm assuming from the docs that this should run without having to set any properties.\n", "url": "https://github.com/spring-projects/spring-session/issues/191", "user": "manderson23", "labels": ["type: bug"], "created": "2015-04-16 21:40:04", "closed": "2015-04-16 21:59:46", "commits": {"664b5aae215f416bd5e8fbcae23ce733846863f8": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "664b5aae215f416bd5e8fbcae23ce733846863f8", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["b44b7365b55b5c7a72813649d6c96d87575717f4"], "nameRev": "664b5aae215f416bd5e8fbcae23ce733846863f8 tags/1.0.2.RELEASE~25", "commitMessage": "Add EnableEmbeddedRedis to WebSocket Sample\n\nThis issue is a result of moving EmbeddedRedisConfiguration to its own\npackage in 865e381c7c314c1d8b1968a1d64935c92fd10d87.\n\nNow we explicitly add EnableEmbeddedRedis to the configuration.\n\nFixes gh-191\n", "commitDateTime": "2015-04-16 16:59:35", "authoredDateTime": "2015-04-16 16:59:35", "commitGitStats": [{"filePath": "samples/websocket/src/main/java/sample/config/WebSecurityConfig.java", "insertions": 2, "deletions": 0, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WebSecurityConfig.java", "spoonMethods": [{"spoonMethodName": "sample.config.WebSecurityConfig", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["664b5aae215f416bd5e8fbcae23ce733846863f8"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 0, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/websocket/src/main/java/sample/config"], "changesInPackagesSPOON": ["sample.config.WebSecurityConfig"]}, {"title": "Requested Session invalidated if session is not accessed", "body": "``` java\n        private boolean isInvalidateClientSession() {\n            return currentSession == null && isRequestedSessionIdValid();\n        }\n```\n\nI believe this is missing a `!`  in front of `isRequestedSessionIdValid()`\n", "url": "https://github.com/spring-projects/spring-session/issues/188", "user": "sirianni", "labels": ["in: core", "type: bug"], "created": "2015-04-15 16:11:38", "closed": "2015-04-15 17:33:45", "commits": {"5879d156926404a54aaabc623e5759105946b468": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5879d156926404a54aaabc623e5759105946b468", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["30d4ea996bf0138382a09dcf6005acde6234f558"], "nameRev": "5879d156926404a54aaabc623e5759105946b468 tags/1.0.1.RELEASE~3", "commitMessage": "Valid HTTP session no longer invalidated when HttpSession not accessed\n\nFixes gh-188\n", "commitDateTime": "2015-04-15 12:33:34", "authoredDateTime": "2015-04-15 12:33:34", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 3, "deletions": 1, "lines": 4}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 26, "deletions": 0, "lines": 26}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isInvalidateClientSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper.invalidate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).78", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).79", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterRequestSessionNoRequestSessionDoesNotInvalidate()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5879d156926404a54aaabc623e5759105946b468"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 1, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 4, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 3}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isInvalidateClientSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper.invalidate()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper"]}, {"title": "rest sample outputs x-auth-token when no credentials are provided", "body": "If no credentials are provided to the REST sample, then the x-auth-token is outputed meaning a session is created. We should set the requestCache in Spring Security to prevent this.\n\n[StackOverflow](http://stackoverflow.com/questions/29479840/spring-session-and-spring-security)\n", "url": "https://github.com/spring-projects/spring-session/issues/183", "user": "rwinch", "labels": ["in: docs", "type: bug"], "created": "2015-04-08 21:59:10", "closed": "2015-04-08 22:04:16", "commits": {"3a42147d3e0a360f2dbf9752daff7d2be2d46c27": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "88151b4287e495fab70df5d97865d93b726ee57b": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "3a42147d3e0a360f2dbf9752daff7d2be2d46c27", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["4631b57531a951eda562a8d56db49c01b4d012a0"], "nameRev": "3a42147d3e0a360f2dbf9752daff7d2be2d46c27 tags/1.0.1.RELEASE~13", "commitMessage": "Add NullRequestCache to rest sample\n\nFixes gh-183\n", "commitDateTime": "2015-04-08 16:59:38", "authoredDateTime": "2015-04-08 16:59:38", "commitGitStats": [{"filePath": "samples/rest/build.gradle", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "samples/rest/src/main/java/sample/SecurityConfig.java", "insertions": 8, "deletions": 4, "lines": 12}, {"filePath": "samples/rest/src/test/java/rest/RestMockMvcTests.java", "insertions": 67, "deletions": 0, "lines": 67}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SecurityConfig.java", "spoonMethods": [{"spoonMethodName": "sample.SecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "RestMockMvcTests.java", "spoonMethods": [{"spoonMethodName": "rest.RestMockMvcTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "88151b4287e495fab70df5d97865d93b726ee57b", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["3a42147d3e0a360f2dbf9752daff7d2be2d46c27"], "nameRev": "88151b4287e495fab70df5d97865d93b726ee57b tags/1.0.1.RELEASE~12", "commitMessage": "Fix rest sample tests\n\n- move to itest folder\n- dynamically allocate the port for Redis\n\nIssues gh-183\n", "commitDateTime": "2015-04-09 14:28:12", "authoredDateTime": "2015-04-09 14:28:12", "commitGitStats": [{"filePath": "samples/rest/src/{test => integration-test}/java/rest/RestMockMvcTests.java", "insertions": 0, "deletions": 0, "lines": 0}, {"filePath": "samples/rest/src/main/java/sample/EmbeddedRedisConfiguration.java", "insertions": 47, "deletions": 5, "lines": 52}, {"filePath": "samples/rest/src/main/java/sample/HttpSessionConfig.java", "insertions": 5, "deletions": 2, "lines": 7}, {"filePath": "samples/rest/src/test/resources/application.properties", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RestMockMvcTests.java", "spoonMethods": []}, {"spoonFilePath": "EmbeddedRedisConfiguration.java", "spoonMethods": [{"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean.afterPropertiesSet()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.redisServer()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.propertyPlaceholderConfigurer()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.redisServer(org.springframework.core.env.ConfigurableEnvironment)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean.getProperty(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean.getAvailablePort()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "HttpSessionConfig.java", "spoonMethods": [{"spoonMethodName": "sample.HttpSessionConfig.connectionFactory()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "sample.HttpSessionConfig.connectionFactory(int)", "TOT": 4, "UPD": 0, "INS": 4, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3a42147d3e0a360f2dbf9752daff7d2be2d46c27", "88151b4287e495fab70df5d97865d93b726ee57b"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 62, "deletions": 12, "lines": 74, "gitFilesChange": 4}, "spoonStatsSummary": {"TOT": 23, "UPD": 4, "INS": 16, "MOV": 1, "DEL": 2, "spoonFilesChanged": 3, "spoonMethodsChanged": 10}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/rest/src/main/java/sample", "samples/rest"], "changesInPackagesSPOON": ["sample.EmbeddedRedisConfiguration.propertyPlaceholderConfigurer()", "sample.HttpSessionConfig.connectionFactory()", "sample.SecurityConfig.configure(org.springframework.security.config.annotation.web.builders.HttpSecurity)", "sample.EmbeddedRedisConfiguration.RedisServerBean.getAvailablePort()", "sample.EmbeddedRedisConfiguration.RedisServerBean.afterPropertiesSet()", "sample.EmbeddedRedisConfiguration.redisServer(org.springframework.core.env.ConfigurableEnvironment)", "sample.EmbeddedRedisConfiguration.redisServer()", "sample.EmbeddedRedisConfiguration.RedisServerBean.getProperty(java.lang.String)", "sample.EmbeddedRedisConfiguration.RedisServerBean", "sample.HttpSessionConfig.connectionFactory(int)"]}, {"title": "Servlet 2.5 NoSuchMethodError: javax.servlet.http.Cookie.setHttpOnly", "body": "Running in Servlet 2.5 produces the following error\n\n```\nServlet.service() for servlet jsp threw exception\njava.lang.NoSuchMethodError: javax.servlet.http.Cookie.setHttpOnly(Z)V\n    at org.springframework.session.web.http.CookieHttpSessionStrategy.createSessionCookie(CookieHttpSessionStrategy.java:218)\n    at org.springframework.session.web.http.CookieHttpSessionStrategy.onNewSession(CookieHttpSessionStrategy.java:211)\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.commitSession(SessionRepositoryFilter.java:189)\n    at org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.access$100(SessionRepositoryFilter.java:164)\n    at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:122)\n    at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:65)\n    at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\n    at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\n    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:861)\n    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:620)\n    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\n    at java.lang.Thread.run(Thread.java:745)\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/182", "user": "rwinch", "labels": ["type: bug"], "created": "2015-04-07 22:27:29", "closed": "2015-04-08 03:16:58", "commits": {"4631b57531a951eda562a8d56db49c01b4d012a0": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "4631b57531a951eda562a8d56db49c01b4d012a0", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["5417e59a507de8dfea13af68fb66f9191f6a2709"], "nameRev": "4631b57531a951eda562a8d56db49c01b4d012a0 tags/1.0.1.RELEASE~14", "commitMessage": "Make Servlet 2.5 compatible\n\nFixes gh-111 gh-182\n", "commitDateTime": "2015-04-07 22:12:40", "authoredDateTime": "2015-04-07 22:12:40", "commitGitStats": [{"filePath": "build.gradle", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "gradle/tomcat.gradle", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "gradle/tomcat6.gradle", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "gradle/tomcat7.gradle", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "samples/hazelcast/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/httpsession-xml/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/httpsession-xml/src/main/java/sample/SessionServlet.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "samples/httpsession-xml/src/main/webapp/WEB-INF/web.xml", "insertions": 18, "deletions": 8, "lines": 26}, {"filePath": "samples/httpsession/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/rest/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/security/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/users/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/websocket/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/config/annotation/web/http/EnableRedisHttpSessionExpireSessionDestroyedTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "spring-session/src/main/java/org/springframework/session/web/http/CookieHttpSessionStrategy.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfigurationXmlCustomExpireTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfigurationXmlTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionServlet.java", "spoonMethods": [{"spoonMethodName": "sample.SessionServlet", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnableRedisHttpSessionExpireSessionDestroyedTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSessionExpireSessionDestroyedTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.springSessionRepositoryFilter(org.springframework.session.SessionRepository,javax.servlet.ServletContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CookieHttpSessionStrategy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.isServlet3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.createSessionCookie(javax.servlet.http.HttpServletRequest,java.util.Map)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.setServletContext(javax.servlet.ServletContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getServletContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfigurationXmlCustomExpireTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfigurationXmlCustomExpireTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfigurationXmlTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfigurationXmlTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse()", "TOT": 9, "UPD": 3, "INS": 1, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalDefault()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged()", "TOT": 12, "UPD": 2, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdNoSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalDefault().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().11", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().12", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().13", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().15", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().16", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().17", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().19", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().20", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue().21", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().25", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().26", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew().27", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().23", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().30", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew().28", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew().29", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().22", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().31", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().32", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().34", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdNoSession().35", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().36", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().38", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().46", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().47", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().48", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().49", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().50", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().51", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().52", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().53", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().54", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().55", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().56", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().57", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().58", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().60", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().61", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().62", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().63", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().64", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().65", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().73", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().74", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().75", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().76", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).77", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).78", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().15.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().13.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().19.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().17.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().23.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue().21.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().11.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().26.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().31.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().34.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().36.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().39.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().41.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().43.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().61.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().65.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContextExplicit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().27.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().12.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().16.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().20.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().66.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().67.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().68.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().69.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().70.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().71.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().72.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4631b57531a951eda562a8d56db49c01b4d012a0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 67, "deletions": 22, "lines": 89, "gitFilesChange": 15}, "spoonStatsSummary": {"TOT": 18, "UPD": 1, "INS": 13, "MOV": 3, "DEL": 1, "spoonFilesChanged": 4, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["gradle", "spring-session/src/main/java/org/springframework/session/web/http", "samples/websocket", "samples/rest", "samples/hazelcast", "", "samples/httpsession-xml", "samples/users", "samples/httpsession-xml/src/main/java/sample", "spring-session/src/main/java/org/springframework/session/data/redis/config", "samples/httpsession", "samples/security"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.springSessionRepositoryFilter(org.springframework.session.SessionRepository,javax.servlet.ServletContext)", "org.springframework.session.web.http.CookieHttpSessionStrategy.createSessionCookie(javax.servlet.http.HttpServletRequest,java.util.Map)", "org.springframework.session.web.http.SessionRepositoryFilter.setServletContext(javax.servlet.ServletContext)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getServletContext()", "org.springframework.session.web.http.SessionRepositoryFilter", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "org.springframework.session.web.http.CookieHttpSessionStrategy.isServlet3()", "org.springframework.session.web.http.CookieHttpSessionStrategy", "sample.SessionServlet", "org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)"]}, {"title": "Unsupported CONFIG parameter: notify-keyspace-events with Embedded Redis on Windows", "body": "I was cloned the spring-session samples in Win7 - JDK8. If I change 'springSessionVersion' to  '1.0.1.BUILD-SNAPSHOT'  in 'samples/spring-websocket-chat/build.gradle' then, the error also got...\n\nI think this is a blocked issue, because the whole application not works because of it.\n", "url": "https://github.com/spring-projects/spring-session/issues/174", "user": "szabobar", "labels": ["type: bug"], "created": "2015-03-17 15:26:08", "closed": "2015-04-15 15:07:48", "commits": {}, "ttf": 28.00027777777778, "commitsDetails": []}, {"title": "OnCommittedResponseWrapper does not trigger on ServletOutputStream write(byte[]) reach content length", "body": "If `HttpServletRequest.getOutputStream().write(bytes)` is invoked, then `onResponseCommitted` is not triggered due to the fact that write(byte[]) is updating the size based upon String.valueOf(bytes) length instead of the length of the byte array.\n\nThis means that cookies might not be properly added to the response and that the HttpSession may not be persisted before the response is committed.\n\nNOTE: This is related to issues found when investigating https://jira.spring.io/browse/SEC-2896\n", "url": "https://github.com/spring-projects/spring-session/issues/171", "user": "rwinch", "labels": ["type: bug"], "created": "2015-03-10 05:27:17", "closed": "2015-03-10 05:29:32", "commits": {"2d8664d84119d663a525ca6f0b2d86cd60cd09f4": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "2d8664d84119d663a525ca6f0b2d86cd60cd09f4", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["72227b8d83fb925a8e605b13706f334606faf197"], "nameRev": "2d8664d84119d663a525ca6f0b2d86cd60cd09f4 tags/1.0.1.RELEASE~25", "commitMessage": "OnCommittedResponseWrapper tracks getOutputStream().write(byte[]) properly\n\nFixes gh-171\n", "commitDateTime": "2015-03-10 00:29:26", "authoredDateTime": "2015-03-10 00:29:03", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/OnCommittedResponseWrapper.java", "insertions": 4, "deletions": 0, "lines": 4}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/OnCommittedResponseWrapperTests.java", "insertions": 19, "deletions": 0, "lines": 19}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OnCommittedResponseWrapper.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapper.trackContentLength(byte[])", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OnCommittedResponseWrapperTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapperTests.contentLengthPlus1OutputStreamWriteByteArrayMultiDigitCommits()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["2d8664d84119d663a525ca6f0b2d86cd60cd09f4"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 4, "deletions": 0, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.OnCommittedResponseWrapper.trackContentLength(byte[])"]}, {"title": "Redis background task to (forcibly) cleanup sessions does not work", "body": "In the method `public void onExpirationUpdated(Long originalExpirationTime, ExpiringSession session)` of `org.springframework.session.data.redis.RedisSessionExpirationPolicy.onExpirationUpdated`, the following code seems to be wrong:\n\n``` java\npublic void onExpirationUpdated(Long originalExpirationTime, ExpiringSession session) {\n        if(originalExpirationTime != null) {\n            String expireKey = getExpirationKey(originalExpirationTime);\n            expirationRedisOperations.boundSetOps(expireKey).remove(session.getId());\n        }\n\n        long toExpire = roundUpToNextMinute(session.getLastAccessedTime(), session.getMaxInactiveIntervalInSeconds());\n\n        String expireKey = getExpirationKey(toExpire);\n        expirationRedisOperations.boundSetOps(expireKey).add(session.getId());\n\n        long redisExpirationInSeconds = session.getMaxInactiveIntervalInSeconds();\n        String sessionKey = getSessionKey(session.getId());\n        expirationRedisOperations.boundSetOps(expireKey).expire(redisExpirationInSeconds, TimeUnit.SECONDS);\n        sessionRedisOperations.boundHashOps(sessionKey).expire(redisExpirationInSeconds, TimeUnit.SECONDS);\n    }\n```\n\nI think the `originalExpirationTime` need to be rounded up to minutes before get into `String expireKey = getExpirationKey(originalExpirationTime)`.\nI examined the relevent code carefully and am sure that `originalExpirationTime` could totally be a non-whole-minute value, which gives you the wrong `expireKey`.\n\nIn addition, `expirationRedisOperations.boundSetOps(expireKey).expire(redisExpirationInSeconds, TimeUnit.SECONDS)` seems unreasonable because this makes it the fact that: the Redis hashset key would already be expired when you tried to access the  **spring:session:expirations:SessionExpireTimeInWholeMinutes** to locate all the session's ID to be touched(by the `private void touch(String key)` method )\nI would be very grateful for your response!\n", "url": "https://github.com/spring-projects/spring-session/issues/169", "user": "Calabor-Hoc", "labels": ["type: bug"], "created": "2015-03-04 08:38:39", "closed": "2015-04-15 20:31:46", "commits": {"23afc1b3546750c0c6bd5f8220b6a1ac8aee5d5a": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 42.000277777777775, "commitsDetails": [{"commitHash": "23afc1b3546750c0c6bd5f8220b6a1ac8aee5d5a", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["f7118763470e58e5430c336ad217c76c82fbeba4"], "nameRev": "23afc1b3546750c0c6bd5f8220b6a1ac8aee5d5a tags/1.0.1.RELEASE~1", "commitMessage": "Fix RedisSessionExpirationPolicy to properly cleanup expired sessions\n\nPreviously forcibly cleaning up sessions was not working. All the cleanup\nwas done by Redis expiration. This meant that sessions would be kept alive\nuntil Redis cleaned them up (non deterministic).\n\nThis commit resolves the mapping of expiration to session ids.\n\nFixes gh-169\n", "commitDateTime": "2015-04-15 15:25:50", "authoredDateTime": "2015-04-15 15:25:50", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/index.adoc", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisSessionExpirationPolicy.java", "insertions": 25, "deletions": 19, "lines": 44}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/RedisSessionExpirationPolicyTests.java", "insertions": 102, "deletions": 0, "lines": 102}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisSessionExpirationPolicy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.roundUpToNextMinute(long,int)", "TOT": 12, "UPD": 4, "INS": 0, "MOV": 8, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.onExpirationUpdated(java.lang.Long,org.springframework.session.ExpiringSession)", "TOT": 17, "UPD": 7, "INS": 4, "MOV": 3, "DEL": 3}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.roundDownMinute(long)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.onDelete(org.springframework.session.ExpiringSession)", "TOT": 8, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 4}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.getExpirationKey(long)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.getSessionKey(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.roundUpToNextMinute(long)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisSessionExpirationPolicyTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicyTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["23afc1b3546750c0c6bd5f8220b6a1ac8aee5d5a"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 26, "deletions": 20, "lines": 46, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 44, "UPD": 14, "INS": 6, "MOV": 13, "DEL": 11, "spoonFilesChanged": 1, "spoonMethodsChanged": 8}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/index.adoc", "spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisSessionExpirationPolicy.roundUpToNextMinute(long)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.roundDownMinute(long)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.roundUpToNextMinute(long,int)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.getExpirationKey(long)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.getSessionKey(java.lang.String)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.onExpirationUpdated(java.lang.Long,org.springframework.session.ExpiringSession)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.onDelete(org.springframework.session.ExpiringSession)", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions()"]}, {"title": "Session Cookie should be deleted on expired/invalid Session / InfiniteLoop", "body": "Right now, if the user accesses the webapp with an invalid Session cookie (e.g. by tampering, using an expired cookie or because of a wrong path in the cookie), the webserver redirects to the expired session url (when using Spring Security). \n\nAdditionally to redirecting, the offending cookie should also be deleted, because if not, a redirect loop similar to #142 occurs.\n\nI'll try to make a PR for this.\n", "url": "https://github.com/spring-projects/spring-session/issues/159", "user": "domdorn", "labels": ["type: bug"], "created": "2015-02-23 17:09:07", "closed": "2015-04-07 17:15:26", "commits": {}, "ttf": 43.000277777777775, "commitsDetails": []}, {"title": "Invoke HttpSessionStrategy.onNewSession if session id changed", "body": "If the session id changes, the session id needs to be sent back to the client.\n\nOriginally reported on #136 but only want part of the suggestions in the PR (i.e. do not want commit for flag to always send the cookie).\n", "url": "https://github.com/spring-projects/spring-session/issues/154", "user": "rwinch", "labels": ["type: bug"], "created": "2015-02-19 22:45:27", "closed": "2015-02-19 22:49:52", "commits": {"29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "020fbdaf4f3982d03af041026fae73b3f1386ce6": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["ae03fac4684e267ef6f2dfbb5aaec4c6dabb2fff"], "nameRev": "29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad tags/1.0.1.RELEASE~30", "commitMessage": "Invoke HttpSessionStrategy.onNewSession if session id changed\n\nFixes gh-154\n", "commitDateTime": "2015-02-19 16:49:38", "authoredDateTime": "2015-02-19 16:07:57", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 32, "deletions": 0, "lines": 32}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()", "TOT": 4, "UPD": 1, "INS": 1, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew().24", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew().25", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew().26", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().29", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().28", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().30", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().32", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().34", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().35", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().36", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().37", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().46", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().47", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().48", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().49", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().50", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().51", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().52", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().53", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().54", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().55", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().56", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().58", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().62", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().63", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().64", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().65", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).66", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).67", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().28.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().30.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().32.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().50.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().56.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().55.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 1, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().54.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().58.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().57.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().59.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().60.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().61.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "020fbdaf4f3982d03af041026fae73b3f1386ce6", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["369e98c7eff46d229c5e84b9252590239a53f625"], "nameRev": "020fbdaf4f3982d03af041026fae73b3f1386ce6 tags/1.0.1.RELEASE~28", "commitMessage": "Polish gh-154\n", "commitDateTime": "2015-02-19 17:06:25", "authoredDateTime": "2015-02-19 17:06:25", "commitGitStats": [{"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 1, "deletions": 0, "lines": 1}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad", "020fbdaf4f3982d03af041026fae73b3f1386ce6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()"]}, {"title": "SessionRepositoryRequestWrapper needs to override isRequestedSessionIdValid", "body": "", "url": "https://github.com/spring-projects/spring-session/issues/153", "user": "rwinch", "labels": ["type: bug"], "created": "2015-02-19 22:39:06", "closed": "2015-04-07 19:46:51", "commits": {"369e98c7eff46d229c5e84b9252590239a53f625": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 46.000277777777775, "commitsDetails": [{"commitHash": "369e98c7eff46d229c5e84b9252590239a53f625", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad"], "nameRev": "369e98c7eff46d229c5e84b9252590239a53f625 tags/1.0.1.RELEASE~29", "commitMessage": "SessionRepositoryRequestWrapper overrides isRequestedSessionIdValid\n\nFixes gh-142, gh-153\n", "commitDateTime": "2015-02-19 16:49:38", "authoredDateTime": "2015-02-19 16:40:23", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 21, "deletions": 4, "lines": 25}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 46, "deletions": 0, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isInvalidateClientSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isRequestedSessionIdValid()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isRequestedSessionIdValid(org.springframework.session.ExpiringSession)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().32", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().34", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().35", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().36", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().37", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().46", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().47", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().48", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().49", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().50", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().51", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().52", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().53", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().54", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().55", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().56", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().57", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().58", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().60", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().62", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().65", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().66", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().67", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().68", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).69", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).70", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().31.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().33.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().35.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().53.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().60.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().59.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().58.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().57.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().62.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().61.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().63.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().64.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["369e98c7eff46d229c5e84b9252590239a53f625"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 4, "lines": 25, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 3, "INS": 4, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isRequestedSessionIdValid(org.springframework.session.ExpiringSession)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isInvalidateClientSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isRequestedSessionIdValid()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper"]}, {"title": "SessionRepositoryRequestWrapper needs to override changeSessionId()", "body": "```\njava.lang.IllegalStateException: Cannot change session ID. There is no session associated with this request.\n    at org.apache.catalina.connector.Request.changeSessionId(Request.java:2490)\n    at org.apache.catalina.connector.RequestFacade.changeSessionId(RequestFacade.java:918)\n    at javax.servlet.http.HttpServletRequestWrapper.changeSessionId(HttpServletRequestWrapper.java:249)\n    at javax.servlet.http.HttpServletRequestWrapper.changeSessionId(HttpServletRequestWrapper.java:249)\n    at javax.servlet.http.HttpServletRequestWrapper.changeSessionId(HttpServletRequestWrapper.java:249)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:202)\n    at org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:187)\n    at org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy.applySessionFixation(ChangeSessionIdAuthenticationStrategy.java:48)\n    at org.springframework.security.web.authentication.session.AbstractSessionFixationProtectionStrategy.onAuthentication(AbstractSessionFixationProtectionStrategy.java:82)\n    at org.springframework.security.web.authentication.session.ChangeSessionIdAuthenticationStrategy.onAuthentication(ChangeSessionIdAuthenticationStrategy.java:32)\n    at org.springframework.security.web.authentication.session.CompositeSessionAuthenticationStrategy.onAuthentication(CompositeSessionAuthenticationStrategy.java:83)\n    at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:216)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n    at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:110)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n    at org.springframework.security.web.csrf.CsrfFilter.doFilterInternal(CsrfFilter.java:105)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n    at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:57)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n    at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:87)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n    at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:50)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\n    at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)\n    at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:111)\n    at org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:65)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.springframework.boot.actuate.autoconfigure.MetricFilterAutoConfiguration$MetricsFilter.doFilterInternal(MetricFilterAutoConfiguration.java:90)\n    at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:239)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:219)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:106)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:501)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:142)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:79)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:88)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:516)\n    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1086)\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:659)\n    at org.apache.coyote.http11.Http11NioProtocol$Http11ConnectionHandler.process(Http11NioProtocol.java:223)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1558)\n    at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.run(NioEndpoint.java:1515)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nRelated #142 \n", "url": "https://github.com/spring-projects/spring-session/issues/152", "user": "rwinch", "labels": ["type: bug"], "created": "2015-02-19 16:48:29", "closed": "2015-04-03 22:07:31", "commits": {"3d1cd9fae42598b4c6a31ebc59bd538597a3617f": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 43.000277777777775, "commitsDetails": [{"commitHash": "3d1cd9fae42598b4c6a31ebc59bd538597a3617f", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["3c72828500676de656480114d79bcfdfeee7069c"], "nameRev": "3d1cd9fae42598b4c6a31ebc59bd538597a3617f tags/1.0.1.RELEASE~17", "commitMessage": "Implement changeSessionId()\n\nFixes gh-152\n", "commitDateTime": "2015-04-03 17:07:21", "authoredDateTime": "2015-04-03 17:07:21", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 47, "deletions": 10, "lines": 57}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 54, "deletions": 0, "lines": 54}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse,javax.servlet.FilterChain)", "TOT": 6, "UPD": 6, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.wrapRequest(org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.wrapResponse(org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse)", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryResponseWrapper", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper.getSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.getRequestedSessionId(org.springframework.session.web.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.onNewSession(org.springframework.session.Session,org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.onInvalidateSession(org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.1", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.1.getSession(java.lang.String)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.changeSessionId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().32", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse().33", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().36", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().35", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().34", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().37", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().46", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().47", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().48", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().49", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().50", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().51", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().52", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().53", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().54", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().55", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().56", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().57", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().58", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().60", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().61", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().62", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().63", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().64", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().66", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().69", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().70", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().71", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().72", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).73", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).74", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().32.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse().33.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().35.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().37.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().39.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().57.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().64.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().63.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().62.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().61.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdNoSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().36.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().43.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().66.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().65.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().67.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().68.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["3d1cd9fae42598b4c6a31ebc59bd538597a3617f"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 47, "deletions": 10, "lines": 57, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 30, "UPD": 29, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 15}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "org.springframework.session.web.http.SessionRepositoryFilter.1.getSession(java.lang.String)", "org.springframework.session.web.http.SessionRepositoryFilter", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.wrapResponse(org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.HttpSessionWrapper.getSessionContext()", "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.wrapRequest(org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse)", "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.onNewSession(org.springframework.session.Session,org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse)", "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.getRequestedSessionId(org.springframework.session.web.http.HttpServletRequest)", "org.springframework.session.web.http.SessionRepositoryFilter.1", "org.springframework.session.web.http.SessionRepositoryFilter.MultiHttpSessionStrategyAdapter.onInvalidateSession(org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse)", "org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(org.springframework.session.web.http.HttpServletRequest,org.springframework.session.web.http.HttpServletResponse,javax.servlet.FilterChain)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.changeSessionId()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryResponseWrapper"]}, {"title": "Users guide shows end::how-does-it-work[]", "body": "You should not be able to see the tag in the [doc](http://docs.spring.io/spring-session/docs/1.0.0.RELEASE/reference/html5/guides/users.html#automatic-session-alias-inclusion-with-encodeurl)\n\n```\nend::how-does-it-work[]\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/145", "user": "rwinch", "labels": ["in: docs", "type: bug"], "created": "2015-02-12 04:42:35", "closed": "2015-04-03 16:13:22", "commits": {"d46bc636de908e6c18284be665acb5b18644574e": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 50.000277777777775, "commitsDetails": [{"commitHash": "d46bc636de908e6c18284be665acb5b18644574e", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["4dedb4d10acd3fb2fcecf663acf2376708dc5cde"], "nameRev": "d46bc636de908e6c18284be665acb5b18644574e tags/1.0.1.RELEASE~22", "commitMessage": "Add comment to end::how-does-it-work[]\n\nFixes gh-145\n", "commitDateTime": "2015-04-03 11:13:13", "authoredDateTime": "2015-04-03 10:35:47", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/guides/users.adoc", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d46bc636de908e6c18284be665acb5b18644574e"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs/src/docs/asciidoc/guides/users.adoc"]}, {"title": "SessionFixationProtectionStrategy at  Servlet 2.5 cause continuous loop at login", "body": "I have the project with servlet 2.5, spring security (cookie strategy JSESSIONID) an session (also with cookie strategy).  \nFirst time it runs (without cookies) the authentication works fine and I can access to the application. Looking at redis the session is stored with SPRING_CONTEXT key all right.\nThe problem is when I restart the browser and It has the previous cookies setted ( JSESSIONID and SESSION), the login form are continuosly showed, and the spring-session create new session redis variables each time I insert the user/password, and one of this variables has sessionAttr:SPRING_SECURITY_CONTEXT empty.\nTo break the loop and enter I need to remove the cookies.. ;o(\n\nI think that maybe this strange behavior are due to the  `SessionFixationProtectionStrategy` since it creates a new session for the newly authenticated user if they already have a session (as a defence against session-fixation protection attacks).\n\nDisable session management seems to solve the problem: \n\n```\n<http>\n    <session-management session-fixation-protection=\"none\"/>\n</http>\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/142", "user": "pdorgambide", "labels": ["type: bug"], "created": "2015-02-09 12:30:22", "closed": "2015-02-19 22:49:52", "commits": {"369e98c7eff46d229c5e84b9252590239a53f625": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 10.000277777777777, "commitsDetails": [{"commitHash": "369e98c7eff46d229c5e84b9252590239a53f625", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["29ad2383079bbcfe6d6ec0bd2a5d8640c35c3fad"], "nameRev": "369e98c7eff46d229c5e84b9252590239a53f625 tags/1.0.1.RELEASE~29", "commitMessage": "SessionRepositoryRequestWrapper overrides isRequestedSessionIdValid\n\nFixes gh-142, gh-153\n", "commitDateTime": "2015-02-19 16:49:38", "authoredDateTime": "2015-02-19 16:40:23", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 21, "deletions": 4, "lines": 25}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 46, "deletions": 0, "lines": 46}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isInvalidateClientSession()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isRequestedSessionIdValid()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isRequestedSessionIdValid(org.springframework.session.ExpiringSession)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()", "TOT": 6, "UPD": 1, "INS": 2, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().32", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().31", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().34", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().35", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().36", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().37", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().38", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().46", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().47", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().48", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().49", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().50", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().51", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().52", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().53", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().54", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().55", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().56", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().57", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().58", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().60", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().62", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().65", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().66", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().67", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().68", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).69", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).70", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().31.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().33.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().35.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().53.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().60.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().59.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().58.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().57.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 7, "UPD": 1, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().62.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 6, "UPD": 0, "INS": 0, "MOV": 6, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().61.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().63.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().64.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["369e98c7eff46d229c5e84b9252590239a53f625"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 4, "lines": 25, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 9, "UPD": 3, "INS": 4, "MOV": 0, "DEL": 2, "spoonFilesChanged": 1, "spoonMethodsChanged": 6}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isRequestedSessionIdValid(org.springframework.session.ExpiringSession)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.commitSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isInvalidateClientSession()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.isRequestedSessionIdValid()", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper"]}, {"title": "ERR unknown command 'CONFIG' when using Secured Redis", "body": "Redis security [recommends](http://redis.io/topics/security) disabling the `CONFIG` command so that remote users cannot reconfigure an instance. The `RedisHttpSessionConfiguration` requires access to this [during its initialization](https://github.com/spring-projects/spring-session/blob/master/spring-session/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java#L175). Hosted Redis services, like AWS ElastiCache disable this command by default, with no option to re-enable it.\n", "url": "https://github.com/spring-projects/spring-session/issues/124", "user": "danveloper", "labels": ["type: bug"], "created": "2015-01-25 20:11:46", "closed": "2015-04-15 03:34:19", "commits": {"d2e5005fa0e7266b0e1044375448b9cdf36ddf14": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "30d4ea996bf0138382a09dcf6005acde6234f558": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 79.00027777777778, "commitsDetails": [{"commitHash": "d2e5005fa0e7266b0e1044375448b9cdf36ddf14", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["865e381c7c314c1d8b1968a1d64935c92fd10d87"], "nameRev": "d2e5005fa0e7266b0e1044375448b9cdf36ddf14 tags/1.0.1.RELEASE~5", "commitMessage": "Allow disabling configuration of Redis\n\nFixes gh-124\n", "commitDateTime": "2015-04-14 22:34:01", "authoredDateTime": "2015-04-14 22:17:49", "commitGitStats": [{"filePath": "docs/build.gradle", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "docs/src/docs/asciidoc/index.adoc", "insertions": 19, "deletions": 2, "lines": 21}, {"filePath": "docs/src/test/java/docs/HttpSessionConfigurationNoOpConfigureRedisActionXmlTests.java", "insertions": 50, "deletions": 0, "lines": 50}, {"filePath": "docs/src/test/java/docs/RedisHttpSessionConfigurationNoOpConfigureRedisActionTests.java", "insertions": 58, "deletions": 0, "lines": 58}, {"filePath": "docs/src/test/resources/docs/HttpSessionConfigurationNoOpConfigureRedisActionXmlTests-context.xml", "insertions": 22, "deletions": 0, "lines": 22}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/ConfigureNotifyKeyspaceEventsAction.java", "insertions": 79, "deletions": 0, "lines": 79}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/ConfigureRedisAction.java", "insertions": 38, "deletions": 0, "lines": 38}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 19, "deletions": 26, "lines": 45}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/config/annotation/web/http/EnableRedisKeyspaceNotificationsInitializerTests.java", "insertions": 2, "deletions": 1, "lines": 3}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfigurationNoOpConfigureRedisActionTests.java", "insertions": 55, "deletions": 0, "lines": 55}], "commitSpoonAstDiffStats": [{"spoonFilePath": "HttpSessionConfigurationNoOpConfigureRedisActionXmlTests.java", "spoonMethods": [{"spoonMethodName": "docs.HttpSessionConfigurationNoOpConfigureRedisActionXmlTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfigurationNoOpConfigureRedisActionTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfigurationNoOpConfigureRedisActionTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigureNotifyKeyspaceEventsAction.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.ConfigureNotifyKeyspaceEventsAction", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "ConfigureRedisAction.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer.getNotifyOptions(org.springframework.data.redis.connection.RedisConnection)", "TOT": 6, "UPD": 5, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.enableRedisKeyspaceNotificationsInitializer(org.springframework.data.redis.connection.RedisConnectionFactory)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer.afterPropertiesSet()", "TOT": 10, "UPD": 0, "INS": 1, "MOV": 2, "DEL": 7}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer", "TOT": 8, "UPD": 0, "INS": 3, "MOV": 4, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnableRedisKeyspaceNotificationsInitializerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.EnableRedisKeyspaceNotificationsInitializerTests.setup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "30d4ea996bf0138382a09dcf6005acde6234f558", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["d2e5005fa0e7266b0e1044375448b9cdf36ddf14"], "nameRev": "30d4ea996bf0138382a09dcf6005acde6234f558 tags/1.0.1.RELEASE~4", "commitMessage": "Fix doc dependencies for gh-124\n", "commitDateTime": "2015-04-14 22:46:02", "authoredDateTime": "2015-04-14 22:46:02", "commitGitStats": [{"filePath": "docs/build.gradle", "insertions": 2, "deletions": 1, "lines": 3}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["d2e5005fa0e7266b0e1044375448b9cdf36ddf14", "30d4ea996bf0138382a09dcf6005acde6234f558"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 158, "deletions": 29, "lines": 187, "gitFilesChange": 5}, "spoonStatsSummary": {"TOT": 28.0, "UPD": 6.0, "INS": 7.0, "MOV": 7.0, "DEL": 8.0, "spoonFilesChanged": 3, "spoonMethodsChanged": 7}, "statsSkippedReason": "", "changesInPackagesGIT": ["docs", "spring-session/src/main/java/org/springframework/session/data/redis/config", "docs/src/docs/asciidoc/index.adoc"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer.getNotifyOptions(org.springframework.data.redis.connection.RedisConnection)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.enableRedisKeyspaceNotificationsInitializer(org.springframework.data.redis.connection.RedisConnectionFactory)", "org.springframework.session.data.redis.config.ConfigureNotifyKeyspaceEventsAction", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer.afterPropertiesSet()", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration", "org.springframework.session.data.redis.config"]}, {"title": "ERR Unsupported CONFIG parameter: notify-keyspace-events", "body": "I try to run the samples, but I always get the exception below. How do I fix the problem? Do I need to change some versions?\n\n```\nCaused by: org.springframework.dao.InvalidDataAccessApiUsageException: ERR Unsupported CONFIG parameter: notify-keyspace-events; nested exception is redis.clien\nts.jedis.exceptions.JedisDataException: ERR Unsupported CONFIG parameter: notify-keyspace-events\n        at org.springframework.data.redis.connection.jedis.JedisExceptionConverter.convert(JedisExceptionConverter.java:44)\n        at org.springframework.data.redis.connection.jedis.JedisExceptionConverter.convert(JedisExceptionConverter.java:36)\n        at org.springframework.data.redis.PassThroughExceptionTranslationStrategy.translate(PassThroughExceptionTranslationStrategy.java:37)\n        at org.springframework.data.redis.FallbackExceptionTranslationStrategy.translate(FallbackExceptionTranslationStrategy.java:37)\n        at org.springframework.data.redis.connection.jedis.JedisConnection.convertJedisAccessException(JedisConnection.java:195)\n        at org.springframework.data.redis.connection.jedis.JedisConnection.setConfig(JedisConnection.java:618)\n        at org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration$EnableRedisKeyspaceNotificationsInitializer.afterProp\nertiesSet(RedisHttpSessionConfiguration.java:170)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1625)\n        at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1562)\n        ... 22 more\nCaused by: redis.clients.jedis.exceptions.JedisDataException: ERR Unsupported CONFIG parameter: notify-keyspace-events\n        at redis.clients.jedis.Protocol.processError(Protocol.java:113)\n        at redis.clients.jedis.Protocol.process(Protocol.java:138)\n        at redis.clients.jedis.Protocol.read(Protocol.java:192)\n        at redis.clients.jedis.Connection.readProtocolWithCheckingBroken(Connection.java:282)\n        at redis.clients.jedis.Connection.getStatusCodeReply(Connection.java:181)\n        at redis.clients.jedis.Jedis.configSet(Jedis.java:2480)\n        at org.springframework.data.redis.connection.jedis.JedisConnection.setConfig(JedisConnection.java:616)\n        ... 25 more\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/113", "user": "michael-wirth", "labels": ["type: bug"], "created": "2015-01-20 00:40:40", "closed": "2015-02-23 16:17:43", "commits": {"a7f686af73e1bbef6a44b061814935e0cfce58f6": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "34e2faa692e52450deb0ecf87d29a1b06647533f": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 34.000277777777775, "commitsDetails": [{"commitHash": "a7f686af73e1bbef6a44b061814935e0cfce58f6", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["020fbdaf4f3982d03af041026fae73b3f1386ce6"], "nameRev": "a7f686af73e1bbef6a44b061814935e0cfce58f6 tags/1.0.1.RELEASE~27^2", "commitMessage": "Upgrade to embedded-redis:0.4 (fixes #113)\n\nEmbedded-Redis 0.4 got released; it now includes the latest versions of redis for win/mac/unix and \r\ntherefor fixes the problems with \r\nERR Unsupported CONFIG parameter: notify-keyspace-events #113", "commitDateTime": "2015-02-23 12:09:12", "authoredDateTime": "2015-02-23 12:09:12", "commitGitStats": [{"filePath": "spring-session/build.gradle", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "34e2faa692e52450deb0ecf87d29a1b06647533f", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["020fbdaf4f3982d03af041026fae73b3f1386ce6", "a7f686af73e1bbef6a44b061814935e0cfce58f6"], "nameRev": "34e2faa692e52450deb0ecf87d29a1b06647533f tags/1.0.1.RELEASE~27", "commitMessage": "Merge pull request #156 from domdorn/patch-1\n\nUpgrade to embedded-redis:0.4 (fixes #113)", "commitDateTime": "2015-02-23 10:17:43", "authoredDateTime": "2015-02-23 10:17:43", "commitGitStats": [{"filePath": "spring-session/build.gradle", "insertions": 2, "deletions": 2, "lines": 4}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}], "filteredCommits": ["a7f686af73e1bbef6a44b061814935e0cfce58f6"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 2, "lines": 4, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session"]}, {"title": "Servlet 2.5 throws NoSuchMethodError: SessionRepositoryRequestWrapper.getServletContext()", "body": "Testing the XML configuration files #101 run on  Servlet 2.5 into Tomcat 6.0.36:\n\n```\njava.lang.NoSuchMethodError: org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getServletContext()Ljavax/servlet/ServletContext;\nat org.springframework.session.web.http.SessionRepositoryFilter$SessionRepositoryRequestWrapper.getSession(SessionRepositoryFilter.java:202)\nat javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:216)\nat org.springframework.security.web.context.HttpSessionSecurityContextRepository$SaveToSessionResponseWrapper.createNewSessionIfAllowed(HttpSessionSecurityContextRepository.java:375)\nat org.springframework.security.web.context.HttpSessionSecurityContextRepository$SaveToSessionResponseWrapper.saveContext(HttpSessionSecurityContextRepository.java:316)\nat org.springframework.security.web.context.HttpSessionSecurityContextRepository.saveContext(HttpSessionSecurityContextRepository.java:117)\nat org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:93)\nat org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:342)\nat org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:192)\nat org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:160)\nat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\nat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\nat org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(SessionRepositoryFilter.java:111)\nat org.springframework.session.web.http.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:65)\nat org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:344)\nat org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:261)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\nat com.applus.traza.api.common.SimpleCORSFilter.doFilterInternal(SimpleCORSFilter.java:33)\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\nat org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter.doFilterInternal(OpenEntityManagerInViewFilter.java:177)\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\nat org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:77)\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\nat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:88)\nat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)\nat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:235)\nat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:206)\nat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:233)\nat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:191)\nat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:127)\nat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:103)\nat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109)\nat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:293)\nat org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:861)\nat org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:606)\nat org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:489)\nat java.lang.Thread.run(Thread.java:722)\n```\n\nThis can be useful [How to get the Servlet Context from ServletRequest in Servlet 2.5?](http://stackoverflow.com/questions/10621580/how-to-get-the-servlet-context-from-servletrequest-in-servlet-2-5)\n\nCheck also Cookie.setHttpOnly(boolean) into CookieHttpSessionStrategy.java since servlet 3.0.\n", "url": "https://github.com/spring-projects/spring-session/issues/111", "user": "pdorgambide", "labels": ["type: bug"], "created": "2015-01-15 17:04:08", "closed": "2015-04-08 03:16:07", "commits": {"4631b57531a951eda562a8d56db49c01b4d012a0": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 82.00027777777778, "commitsDetails": [{"commitHash": "4631b57531a951eda562a8d56db49c01b4d012a0", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["5417e59a507de8dfea13af68fb66f9191f6a2709"], "nameRev": "4631b57531a951eda562a8d56db49c01b4d012a0 tags/1.0.1.RELEASE~14", "commitMessage": "Make Servlet 2.5 compatible\n\nFixes gh-111 gh-182\n", "commitDateTime": "2015-04-07 22:12:40", "authoredDateTime": "2015-04-07 22:12:40", "commitGitStats": [{"filePath": "build.gradle", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "gradle/tomcat.gradle", "insertions": 0, "deletions": 9, "lines": 9}, {"filePath": "gradle/tomcat6.gradle", "insertions": 8, "deletions": 0, "lines": 8}, {"filePath": "gradle/tomcat7.gradle", "insertions": 10, "deletions": 0, "lines": 10}, {"filePath": "samples/hazelcast/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/httpsession-xml/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/httpsession-xml/src/main/java/sample/SessionServlet.java", "insertions": 0, "deletions": 2, "lines": 2}, {"filePath": "samples/httpsession-xml/src/main/webapp/WEB-INF/web.xml", "insertions": 18, "deletions": 8, "lines": 26}, {"filePath": "samples/httpsession/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/rest/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/security/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/users/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "samples/websocket/build.gradle", "insertions": 1, "deletions": 1, "lines": 2}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/config/annotation/web/http/EnableRedisHttpSessionExpireSessionDestroyedTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "spring-session/src/main/java/org/springframework/session/web/http/CookieHttpSessionStrategy.java", "insertions": 18, "deletions": 1, "lines": 19}, {"filePath": "spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 18, "deletions": 2, "lines": 20}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfigurationXmlCustomExpireTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfigurationXmlTests.java", "insertions": 2, "deletions": 0, "lines": 2}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/SessionRepositoryFilterTests.java", "insertions": 17, "deletions": 0, "lines": 17}], "commitSpoonAstDiffStats": [{"spoonFilePath": "SessionServlet.java", "spoonMethods": [{"spoonMethodName": "sample.SessionServlet", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EnableRedisHttpSessionExpireSessionDestroyedTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSessionExpireSessionDestroyedTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.springSessionRepositoryFilter(org.springframework.session.SessionRepository,javax.servlet.ServletContext)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CookieHttpSessionStrategy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.isServlet3()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.createSessionCookie(javax.servlet.http.HttpServletRequest,java.util.Map)", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.setServletContext(javax.servlet.ServletContext)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getServletContext()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "TOT": 4, "UPD": 0, "INS": 2, "MOV": 2, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfigurationXmlCustomExpireTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfigurationXmlCustomExpireTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisHttpSessionConfigurationXmlTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfigurationXmlTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse()", "TOT": 9, "UPD": 3, "INS": 1, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalse()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId()", "TOT": 4, "UPD": 2, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalDefault()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged()", "TOT": 12, "UPD": 2, "INS": 0, "MOV": 9, "DEL": 1}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId()", "TOT": 3, "UPD": 3, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdNoSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse()", "TOT": 3, "UPD": 2, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId()", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId()", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalDefault().10", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().11", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().12", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().13", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().15", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().16", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().17", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().19", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().20", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue().21", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().25", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().26", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().24", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionNew().27", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().23", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().30", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueNew().28", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseNew().29", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().22", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().31", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().32", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().33", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().34", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionIdNoSession().35", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().36", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterCookieSecuritySettings().40", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().39", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().38", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().41", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().42", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().43", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateInvalidateIllegalState().44", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateCreationTimeIllegalState().45", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeIllegalState().46", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueIllegalState().47", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAttributeNamesIllegalState().48", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateValueNamesIllegalState().49", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSetAttributeIllegalState().50", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidatePutValueIllegalState().51", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveAttributeIllegalState().52", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateRemoveValueIllegalState().53", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateNewIllegalState().54", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateLastAccessedTimeIllegalState().55", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateId().56", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateServletContext().57", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateSessionContext().58", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateMaxInteractiveInterval().59", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().60", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().61", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionInvalidSessionId().62", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionTrueInvalidSessionId().63", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionFalseInvalidSessionId().64", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().65", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterGetRequestedSessionId().73", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnNewSession().74", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().75", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAdapterOnInvalidate().76", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).77", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilter(org.springframework.session.web.http.SessionRepositoryFilterTests$DoInFilter).78", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().15.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().13.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().19.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 2, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().17.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 7, "UPD": 3, "INS": 0, "MOV": 4, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewFalse().23.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 5, "UPD": 2, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsNewTrue().21.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 6, "UPD": 3, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().11.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().26.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionTrue().31.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterChangeSessionId().34.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterIsRequestedValidSessionFalseInvalidId().36.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 1, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetSessionGetSessionFalse().39.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSessionContext().41.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 4, "UPD": 4, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterGetAttr().43.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterInvalidateAndGetSession().61.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendError().65.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 2, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterServletContextExplicit()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSetsCookieIfChanged().27.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterMaxInactiveIntervalOverride().12.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterAttribute().16.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterValue().20.doFilter(javax.servlet.http.HttpServletRequest)", "TOT": 3, "UPD": 0, "INS": 0, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendErrorAndMessage().66.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterSendRedirect().67.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterFlushBuffer().68.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputFlush().69.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterOutputClose().70.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterFlush().71.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilterTests.doFilterWriterClose().72.doFilter(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["4631b57531a951eda562a8d56db49c01b4d012a0"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 67, "deletions": 22, "lines": 89, "gitFilesChange": 15}, "spoonStatsSummary": {"TOT": 18, "UPD": 1, "INS": 13, "MOV": 3, "DEL": 1, "spoonFilesChanged": 4, "spoonMethodsChanged": 11}, "statsSkippedReason": "", "changesInPackagesGIT": ["gradle", "spring-session/src/main/java/org/springframework/session/web/http", "samples/websocket", "samples/rest", "samples/hazelcast", "", "samples/httpsession-xml", "samples/users", "samples/httpsession-xml/src/main/java/sample", "spring-session/src/main/java/org/springframework/session/data/redis/config", "samples/httpsession", "samples/security"], "changesInPackagesSPOON": ["org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getSession(boolean)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.springSessionRepositoryFilter(org.springframework.session.SessionRepository,javax.servlet.ServletContext)", "org.springframework.session.web.http.CookieHttpSessionStrategy.createSessionCookie(javax.servlet.http.HttpServletRequest,java.util.Map)", "org.springframework.session.web.http.SessionRepositoryFilter.setServletContext(javax.servlet.ServletContext)", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper.getServletContext()", "org.springframework.session.web.http.SessionRepositoryFilter", "org.springframework.session.web.http.SessionRepositoryFilter.SessionRepositoryRequestWrapper", "org.springframework.session.web.http.CookieHttpSessionStrategy.isServlet3()", "org.springframework.session.web.http.CookieHttpSessionStrategy", "sample.SessionServlet", "org.springframework.session.web.http.SessionRepositoryFilter.doFilterInternal(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)"]}, {"title": "Cleanup in RedisOperationsSessionRepository can cause session to be deleted incorrectly", "body": "The background task that cleans up sessions can incorrectly remove a session due to a race condition. \n\nAssume an existing session with the id \"1\" exists and will expire at 1420656360000. This means our redis store has the following:\n\n``` text\nspring:session:expirations:1420656360000 -> [1]\nspring:session:session:1 -> <session>\n```\n\nConsider the following sequence:\n- Thread 1 requests Session 1 and determines it should be forcibly deleted up at 1420656420000\n- Thread 2 requests Session 2 and determines it should be forcibly deleted one minute later at  1420656480000\n- Thread 2 removes Session 1 from 1420656360000, so it will no longer be forcibly deleted at that time\n\n``` text\nspring:session:expirations:1420656360000 -> []\nspring:session:session:1 -> <session>\n```\n- Thread 2 adds Session 1 to 1420656480000\n\n``` text\nspring:session:expirations:1420656360000 -> []\nspring:session:session:1 -> <session>\nspring:session:expirations:1420656480000 -> [1]\n```\n- Thread 1 removes Session 1 (which was already removed) from 1420656360000 (the original expiration)\n\n``` text\nspring:session:expirations:1420656360000 -> []\nspring:session:session:1 -> <session>\nspring:session:expirations:1420656480000 -> [1]\n```\n- Thread 1 adds Session 1 to 1420656420000\n\n``` text\nspring:session:expirations:1420656360000 -> []\nspring:session:session:1 -> <session>\nspring:session:expirations:1420656480000 -> [1]\nspring:session:expirations:1420656420000 -> [1]\n```\n\nNow the session is mapped to be forcibly deleted in two locations. However, at most it will be cleaned up in one location. This means that the session will be forcibly deleted even if the session is continued to be used.\n\nInstead of deleting the session, we should have the background task access the key which will only forcibly delete the key if it is expired. This means that a session could at earliest be deleted when the value in the datastore indicates.\n\nThis still means that a session can be deleted too soon since the incorrect TTL may be set on a key. However, at worst this is the the longest HTTP request length. Short of using distributed locking there isn't a good answer to get exact consistency.\n\nRelated #92 \n", "url": "https://github.com/spring-projects/spring-session/issues/93", "user": "rwinch", "labels": ["type: bug"], "created": "2015-01-07 20:05:12", "closed": "2015-01-07 20:40:00", "commits": {"5847801a32bfff2b55ca89a70ac6d757b463b61c": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "5847801a32bfff2b55ca89a70ac6d757b463b61c", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["9b168423b80482dd0ba7f0d06e43414eb70c1127"], "nameRev": "5847801a32bfff2b55ca89a70ac6d757b463b61c tags/1.0.0.RELEASE~9", "commitMessage": "RedisSessionExpirationPolicy.cleanExpiredSessions does not delete performs get\n\nThe Problem:\n\nThe background task that cleans up sessions can incorrectly remove a\nsession due to a race condition.\n\nAssume an existing session with the id \"1\" exists and will expire at\n1420656360000. This means our redis store has the following:\n\nspring:session:expirations:1420656360000 -> [1]\nspring:session:session:1 -> <session>\nConsider the following sequence:\n\n* Thread 1 requests Session 1 and determines it should be forcibly deleted\nup at 1420656420000\n* Thread 2 requests Session 2 and determines it should be forcibly deleted\none minute later at 1420656480000\n* Thread 2 removes Session 1 from 1420656360000, so it will no longer be\nforcibly deleted at that time\n\nspring:session:expirations:1420656360000 -> []\nspring:session:session:1 -> <session>\n\n* Thread 2 adds Session 1 to 1420656480000\n\nspring:session:expirations:1420656360000 -> []\nspring:session:session:1 -> <session>\nspring:session:expirations:1420656480000 -> [1]\n\n* Thread 1 removes Session 1 (which was already removed) from 1420656360000 (the original expiration)\n\nspring:session:expirations:1420656360000 -> []\nspring:session:session:1 -> <session>\nspring:session:expirations:1420656480000 -> [1]\n\n* Thread 1 adds Session 1 to 1420656420000\n\nspring:session:expirations:1420656360000 -> []\nspring:session:session:1 -> <session>\nspring:session:expirations:1420656480000 -> [1]\nspring:session:expirations:1420656420000 -> [1]\n\nNow the session is mapped to be forcibly deleted in two locations.\nHowever, at most it will be cleaned up in one location. This means that the\nsession will be forcibly deleted even if the session is continued to be\nused.\n\nFixing the Issue:\n\nInstead of deleting the session, we should have the background task access\nthe key which will only forcibly delete the key if it is expired. This mean\ns that a session could at earliest be deleted when the value in the\ndatastore indicates.\n\nThis still means that a session can be deleted too soon since the\nincorrect TTL may be set on a key. However, at worst this is the the\nlongest HTTP request length. Short of using distributed locking there\nisn't a good answer to get exact consistency.\n\nFixes gh-93\n", "commitDateTime": "2015-01-07 14:39:10", "authoredDateTime": "2015-01-07 14:39:10", "commitGitStats": [{"filePath": "docs/src/docs/asciidoc/index.adoc", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisSessionExpirationPolicy.java", "insertions": 12, "deletions": 9, "lines": 21}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryTests.java", "insertions": 3, "deletions": 7, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": []}, {"spoonFilePath": "RedisSessionExpirationPolicy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions()", "TOT": 16, "UPD": 4, "INS": 1, "MOV": 10, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisSessionExpirationPolicy.touch(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests.cleanupExpiredSessions()", "TOT": 4, "UPD": 1, "INS": 0, "MOV": 1, "DEL": 2}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryTests", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 1}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["5847801a32bfff2b55ca89a70ac6d757b463b61c"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 21, "deletions": 9, "lines": 30, "gitFilesChange": 3}, "spoonStatsSummary": {"TOT": 17, "UPD": 4, "INS": 2, "MOV": 10, "DEL": 1, "spoonFilesChanged": 1, "spoonMethodsChanged": 2}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis", "docs/src/docs/asciidoc/index.adoc"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisSessionExpirationPolicy.cleanExpiredSessions()", "org.springframework.session.data.redis.RedisSessionExpirationPolicy.touch(java.lang.String)"]}, {"title": "websocket sample does not receive session expired events", "body": "The websocket sample is not receiving session destroyed events from Redis despite being configured to receive keyspace notifications.\n", "url": "https://github.com/spring-projects/spring-session/issues/81", "user": "rwinch", "labels": ["type: bug"], "created": "2014-12-18 23:28:02", "closed": "2014-12-23 23:30:44", "commits": {"7f9b5c0515662397e0b9f936e1c22bcc724b9ade": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "7f9b5c0515662397e0b9f936e1c22bcc724b9ade", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["b3130edd98537d866b7095ecd06b0cffc250c284"], "nameRev": "7f9b5c0515662397e0b9f936e1c22bcc724b9ade tags/1.0.0.RELEASE~33", "commitMessage": "Ensure Redis Configured to Send Keyspace Notifications\n\nPreviously there was a possibility that Session to WebSocket mapping was\nleaked if keyspace notifications were not enabled in Redis.\n\nTo resolve this the RedisHttpSessionConfiguration now ensures that Redis\nis configured to enable Keyspace notifications.\n\nFixes gh-76 gh-81\n", "commitDateTime": "2014-12-23 16:38:42", "authoredDateTime": "2014-12-15 16:13:03", "commitGitStats": [{"filePath": "samples/boot/src/main/java/sample/config/EmbeddedRedisConfiguration.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "samples/security/src/main/java/sample/EmbeddedRedisConfiguration.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "samples/users/src/main/java/sample/EmbeddedRedisConfiguration.java", "insertions": 17, "deletions": 1, "lines": 18}, {"filePath": "samples/web/src/main/java/sample/EmbeddedRedisConfiguration.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "samples/websocket/src/main/java/sample/config/EmbeddedRedisConfig.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 84, "deletions": 11, "lines": 95}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/config/annotation/web/http/EnableRedisHttpSessionExpireSessionDestroyedTests.java", "insertions": 177, "deletions": 0, "lines": 177}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/SessionMessageListener.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 56, "deletions": 1, "lines": 57}, {"filePath": "spring-session/src/main/java/org/springframework/session/web/socket/handler/WebSocketRegistryListener.java", "insertions": 15, "deletions": 9, "lines": 24}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/SessionMessageListenerTests.java", "insertions": 16, "deletions": 7, "lines": 23}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/config/annotation/web/http/EnableRedisKeyspaceNotificationsInitializerTests.java", "insertions": 151, "deletions": 0, "lines": 151}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/socket/handler/WebSocketRegistryListenerTests.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EmbeddedRedisConfiguration.java", "spoonMethods": [{"spoonMethodName": "sample.EmbeddedRedisConfiguration.redisServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EmbeddedRedisConfig.java", "spoonMethods": [{"spoonMethodName": "sample.config.EmbeddedRedisConfig.redisServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "sample.config.EmbeddedRedisConfig.RedisServerBean", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.config.EmbeddedRedisConfig.RedisServerBean.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.config.EmbeddedRedisConfig.RedisServerBean.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.setup()", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.shutdown()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.getPort()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.Config", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.SessionDestroyedEventRegistry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.saves()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.Config.connectionFactory()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EnableRedisHttpSessionExpireSessionDestroyedTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSessionExpireSessionDestroyedTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionMessageListener.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListener.onMessage(org.springframework.data.redis.connection.Message,byte[])", "TOT": 15, "UPD": 7, "INS": 4, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.redisMessageListenerContainer(org.springframework.data.redis.connection.RedisConnectionFactory)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.enableRedisKeyspaceNotificationsInitializer(org.springframework.data.redis.connection.RedisConnectionFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketRegistryListener.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.registerWsSession(java.lang.String,org.springframework.web.socket.WebSocketSession)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.closeWsSessions(java.lang.String)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionClosed(java.lang.String,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "SessionMessageListenerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageDel()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageSource()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageExpired()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageHset()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageRename()", "TOT": 8, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageEventPublisherErrorCaught()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageWrongKeyPrefix()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.mockMessage(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EnableRedisKeyspaceNotificationsInitializerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.EnableRedisKeyspaceNotificationsInitializerTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketRegistryListenerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListenerTests.onApplicationEventConnectDisconnectCleanup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7f9b5c0515662397e0b9f936e1c22bcc724b9ade"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 174, "deletions": 29, "lines": 203, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 50, "UPD": 17, "INS": 18, "MOV": 13, "DEL": 2, "spoonFilesChanged": 5, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis", "samples/web/src/main/java/sample", "samples/users/src/main/java/sample", "samples/websocket/src/main/java/sample/config", "spring-session/src/main/java/org/springframework/session/data/redis/config", "spring-session/src/main/java/org/springframework/session/web/socket/handler", "samples/boot/src/main/java/sample/config", "samples/security/src/main/java/sample"], "changesInPackagesSPOON": ["sample.EmbeddedRedisConfiguration.RedisServerBean.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer", "org.springframework.session.web.socket.handler.WebSocketRegistryListener.registerWsSession(java.lang.String,org.springframework.web.socket.WebSocketSession)", "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionClosed(java.lang.String,java.lang.String)", "sample.EmbeddedRedisConfiguration.RedisServerBean", "sample.config.EmbeddedRedisConfig.redisServer()", "sample.EmbeddedRedisConfiguration.RedisServerBean.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)", "sample.config.EmbeddedRedisConfig.RedisServerBean.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration", "sample.config.EmbeddedRedisConfig.RedisServerBean", "sample.config.EmbeddedRedisConfig.RedisServerBean.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)", "sample.EmbeddedRedisConfiguration.redisServer()", "org.springframework.session.data.redis.SessionMessageListener.onMessage(org.springframework.data.redis.connection.Message,byte[])", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.redisMessageListenerContainer(org.springframework.data.redis.connection.RedisConnectionFactory)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.enableRedisKeyspaceNotificationsInitializer(org.springframework.data.redis.connection.RedisConnectionFactory)", "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)", "org.springframework.session.web.socket.handler.WebSocketRegistryListener.closeWsSessions(java.lang.String)"]}, {"title": "Ensure _s values are escaped when added as a cookie value", "body": "", "url": "https://github.com/spring-projects/spring-session/issues/80", "user": "rwinch", "labels": ["in: core", "type: bug"], "created": "2014-12-17 19:41:45", "closed": "2014-12-23 23:29:48", "commits": {"ddff1f4c0d15214e28763833d81d895af1110ba5": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 6.000277777777778, "commitsDetails": [{"commitHash": "ddff1f4c0d15214e28763833d81d895af1110ba5", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["375db97f1cd94cf00688916d062750d477930bce"], "nameRev": "ddff1f4c0d15214e28763833d81d895af1110ba5 tags/1.0.0.RELEASE~30", "commitMessage": "Ensure values of _s are encoded\n\nFixes gh-80\n", "commitDateTime": "2014-12-23 16:39:18", "authoredDateTime": "2014-12-17 17:37:29", "commitGitStats": [{"filePath": "samples/users/src/main/webapp/index.jsp", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "spring-session/src/main/java/org/springframework/session/web/http/CookieHttpSessionStrategy.java", "insertions": 21, "deletions": 4, "lines": 25}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/CookieHttpSessionStrategyTests.java", "insertions": 59, "deletions": 0, "lines": 59}], "commitSpoonAstDiffStats": [{"spoonFilePath": "CookieHttpSessionStrategy.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.encodeURL(java.lang.String,java.lang.String)", "TOT": 5, "UPD": 4, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.urlEncode(java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategy.getCurrentSessionAlias(javax.servlet.http.HttpServletRequest)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "CookieHttpSessionStrategyTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.encodeURLMaliciousAlias()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.getCurrentSessionAliasContainsQuote()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.getCurrentSessionAliasContainsSingleQuote()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.getCurrentSessionAliasContainsSpace()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.getCurrentSessionAliasContainsLt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.getCurrentSessionAliasContainsGt()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.getCurrentSessionAliasTooLong()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.CookieHttpSessionStrategyTests.getCurrentSessionAliasAllows50()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["ddff1f4c0d15214e28763833d81d895af1110ba5"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 25, "deletions": 5, "lines": 30, "gitFilesChange": 2}, "spoonStatsSummary": {"TOT": 8, "UPD": 4, "INS": 4, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 4}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/users/src/main/webapp/index.jsp", "spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.CookieHttpSessionStrategy.getCurrentSessionAlias(javax.servlet.http.HttpServletRequest)", "org.springframework.session.web.http.CookieHttpSessionStrategy", "org.springframework.session.web.http.CookieHttpSessionStrategy.encodeURL(java.lang.String,java.lang.String)", "org.springframework.session.web.http.CookieHttpSessionStrategy.urlEncode(java.lang.String)"]}, {"title": "WebSocketRegistryListener defensive about null Session in SessionDisconnectEvent", "body": "We should prevent NullPointerExceptions if SessionDisconnectEvent has a null Session id\n", "url": "https://github.com/spring-projects/spring-session/issues/77", "user": "rwinch", "labels": ["type: bug"], "created": "2014-12-12 21:25:09", "closed": "2014-12-12 21:26:17", "commits": {"0b403c33139aa76c2116fbaddbc34e34e32d2fef": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "0b403c33139aa76c2116fbaddbc34e34e32d2fef", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["c7e9c698a548dc6a0dc359a5f34aa5919b6f3fbc"], "nameRev": "0b403c33139aa76c2116fbaddbc34e34e32d2fef tags/1.0.0.RELEASE~38", "commitMessage": "WebSocketRegistryListener handles null Session in SessionDisconnectEvent\n\nFixes gh-77\n", "commitDateTime": "2014-12-12 15:26:07", "authoredDateTime": "2014-12-12 15:26:07", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/socket/handler/WebSocketRegistryListener.java", "insertions": 3, "deletions": 0, "lines": 3}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/socket/handler/WebSocketRegistryListenerTests.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "WebSocketRegistryListener.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionClosed(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketRegistryListenerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListenerTests.onApplicationEventConnectDisconnectNullSession()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0b403c33139aa76c2116fbaddbc34e34e32d2fef"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 3, "deletions": 0, "lines": 3, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/socket/handler"], "changesInPackagesSPOON": ["org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionClosed(java.lang.String,java.lang.String)"]}, {"title": "WebSocketRegistryListener leaks if no SessionDestroyedEvent fired", "body": "If no SessionDestroyedEvent is fired, then WebSocketRegistryListener will have a memory leak. This would happen if Redis is not configured to send events.\n\nWe should be proactive in ensuring that Redis is configured for send session expiration events (which then get translated to SessionDestroyedEvent). We should also ensure empty session to WebSocket connections are removed.\n", "url": "https://github.com/spring-projects/spring-session/issues/76", "user": "rwinch", "labels": ["type: bug"], "created": "2014-12-12 21:08:56", "closed": "2014-12-23 23:26:38", "commits": {"f40e10b135fbf7d8298bac4f68863efc9a2e379a": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "7f9b5c0515662397e0b9f936e1c22bcc724b9ade": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 11.000277777777777, "commitsDetails": [{"commitHash": "f40e10b135fbf7d8298bac4f68863efc9a2e379a", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "7f9b5c0515662397e0b9f936e1c22bcc724b9ade", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["b3130edd98537d866b7095ecd06b0cffc250c284"], "nameRev": "7f9b5c0515662397e0b9f936e1c22bcc724b9ade tags/1.0.0.RELEASE~33", "commitMessage": "Ensure Redis Configured to Send Keyspace Notifications\n\nPreviously there was a possibility that Session to WebSocket mapping was\nleaked if keyspace notifications were not enabled in Redis.\n\nTo resolve this the RedisHttpSessionConfiguration now ensures that Redis\nis configured to enable Keyspace notifications.\n\nFixes gh-76 gh-81\n", "commitDateTime": "2014-12-23 16:38:42", "authoredDateTime": "2014-12-15 16:13:03", "commitGitStats": [{"filePath": "samples/boot/src/main/java/sample/config/EmbeddedRedisConfiguration.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "samples/security/src/main/java/sample/EmbeddedRedisConfiguration.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "samples/users/src/main/java/sample/EmbeddedRedisConfiguration.java", "insertions": 17, "deletions": 1, "lines": 18}, {"filePath": "samples/web/src/main/java/sample/EmbeddedRedisConfiguration.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "samples/websocket/src/main/java/sample/config/EmbeddedRedisConfig.java", "insertions": 19, "deletions": 3, "lines": 22}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/RedisOperationsSessionRepositoryITests.java", "insertions": 84, "deletions": 11, "lines": 95}, {"filePath": "spring-session/src/integration-test/java/org/springframework/session/data/redis/config/annotation/web/http/EnableRedisHttpSessionExpireSessionDestroyedTests.java", "insertions": 177, "deletions": 0, "lines": 177}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/SessionMessageListener.java", "insertions": 10, "deletions": 6, "lines": 16}, {"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/config/annotation/web/http/RedisHttpSessionConfiguration.java", "insertions": 56, "deletions": 1, "lines": 57}, {"filePath": "spring-session/src/main/java/org/springframework/session/web/socket/handler/WebSocketRegistryListener.java", "insertions": 15, "deletions": 9, "lines": 24}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/SessionMessageListenerTests.java", "insertions": 16, "deletions": 7, "lines": 23}, {"filePath": "spring-session/src/test/java/org/springframework/session/data/redis/config/annotation/web/http/EnableRedisKeyspaceNotificationsInitializerTests.java", "insertions": 151, "deletions": 0, "lines": 151}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/socket/handler/WebSocketRegistryListenerTests.java", "insertions": 15, "deletions": 0, "lines": 15}], "commitSpoonAstDiffStats": [{"spoonFilePath": "EmbeddedRedisConfiguration.java", "spoonMethods": [{"spoonMethodName": "sample.EmbeddedRedisConfiguration.redisServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.EmbeddedRedisConfiguration.RedisServerBean.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "EmbeddedRedisConfig.java", "spoonMethods": [{"spoonMethodName": "sample.config.EmbeddedRedisConfig.redisServer()", "TOT": 2, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "sample.config.EmbeddedRedisConfig.RedisServerBean", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.config.EmbeddedRedisConfig.RedisServerBean.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "sample.config.EmbeddedRedisConfig.RedisServerBean.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "RedisOperationsSessionRepositoryITests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.setup()", "TOT": 6, "UPD": 4, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.shutdown()", "TOT": 5, "UPD": 3, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.getPort()", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.Config", "TOT": 3, "UPD": 0, "INS": 1, "MOV": 1, "DEL": 1}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests", "TOT": 2, "UPD": 0, "INS": 2, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.SessionDestroyedEventRegistry", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.saves()", "TOT": 3, "UPD": 0, "INS": 3, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepositoryITests.Config.connectionFactory()", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EnableRedisHttpSessionExpireSessionDestroyedTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.EnableRedisHttpSessionExpireSessionDestroyedTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionMessageListener.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListener.onMessage(org.springframework.data.redis.connection.Message,byte[])", "TOT": 15, "UPD": 7, "INS": 4, "MOV": 3, "DEL": 1}]}, {"spoonFilePath": "RedisHttpSessionConfiguration.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.redisMessageListenerContainer(org.springframework.data.redis.connection.RedisConnectionFactory)", "TOT": 3, "UPD": 1, "INS": 1, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.enableRedisKeyspaceNotificationsInitializer(org.springframework.data.redis.connection.RedisConnectionFactory)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketRegistryListener.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.registerWsSession(java.lang.String,org.springframework.web.socket.WebSocketSession)", "TOT": 6, "UPD": 4, "INS": 0, "MOV": 2, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.closeWsSessions(java.lang.String)", "TOT": 4, "UPD": 3, "INS": 0, "MOV": 1, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionClosed(java.lang.String,java.lang.String)", "TOT": 7, "UPD": 0, "INS": 2, "MOV": 4, "DEL": 1}]}, {"spoonFilePath": "SessionMessageListenerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageDel()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageSource()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageExpired()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageHset()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageRename()", "TOT": 8, "UPD": 2, "INS": 3, "MOV": 3, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageEventPublisherErrorCaught()", "TOT": 2, "UPD": 2, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.onMessageWrongKeyPrefix()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.data.redis.SessionMessageListenerTests.mockMessage(java.lang.String,java.lang.String)", "TOT": 1, "UPD": 0, "INS": 0, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "EnableRedisKeyspaceNotificationsInitializerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.config.annotation.web.http.EnableRedisKeyspaceNotificationsInitializerTests", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "WebSocketRegistryListenerTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.socket.handler.WebSocketRegistryListenerTests.onApplicationEventConnectDisconnectCleanup()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["7f9b5c0515662397e0b9f936e1c22bcc724b9ade"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 174.0, "deletions": 29.0, "lines": 203.0, "gitFilesChange": 8}, "spoonStatsSummary": {"TOT": 50.0, "UPD": 17.0, "INS": 18.0, "MOV": 13.0, "DEL": 2.0, "spoonFilesChanged": 5, "spoonMethodsChanged": 17}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis", "samples/web/src/main/java/sample", "samples/users/src/main/java/sample", "samples/websocket/src/main/java/sample/config", "spring-session/src/main/java/org/springframework/session/data/redis/config", "spring-session/src/main/java/org/springframework/session/web/socket/handler", "samples/boot/src/main/java/sample/config", "samples/security/src/main/java/sample"], "changesInPackagesSPOON": ["sample.EmbeddedRedisConfiguration.RedisServerBean.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.EnableRedisKeyspaceNotificationsInitializer", "org.springframework.session.web.socket.handler.WebSocketRegistryListener.registerWsSession(java.lang.String,org.springframework.web.socket.WebSocketSession)", "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionClosed(java.lang.String,java.lang.String)", "sample.EmbeddedRedisConfiguration.RedisServerBean", "sample.config.EmbeddedRedisConfig.redisServer()", "sample.EmbeddedRedisConfiguration.RedisServerBean.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)", "sample.config.EmbeddedRedisConfig.RedisServerBean.postProcessBeanDefinitionRegistry(org.springframework.beans.factory.support.BeanDefinitionRegistry)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration", "sample.config.EmbeddedRedisConfig.RedisServerBean", "sample.config.EmbeddedRedisConfig.RedisServerBean.postProcessBeanFactory(org.springframework.beans.factory.config.ConfigurableListableBeanFactory)", "sample.EmbeddedRedisConfiguration.redisServer()", "org.springframework.session.data.redis.SessionMessageListener.onMessage(org.springframework.data.redis.connection.Message,byte[])", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.redisMessageListenerContainer(org.springframework.data.redis.connection.RedisConnectionFactory)", "org.springframework.session.data.redis.config.annotation.web.http.RedisHttpSessionConfiguration.enableRedisKeyspaceNotificationsInitializer(org.springframework.data.redis.connection.RedisConnectionFactory)", "org.springframework.session.web.socket.handler.WebSocketRegistryListener.afterConnectionEstablished(org.springframework.web.socket.WebSocketSession)", "org.springframework.session.web.socket.handler.WebSocketRegistryListener.closeWsSessions(java.lang.String)"]}, {"title": "disableOnResponseCommitted after first invocation", "body": "At times OnCommittedResponseWrapper#onResponseCommitted() can be invoked multiple times. For example, when flush is performed multiple times. This means that the session can be written multiple times which is inefficient. Instead, we should only save on the first update.\n", "url": "https://github.com/spring-projects/spring-session/issues/57", "user": "rwinch", "labels": ["type: bug"], "created": "2014-11-12 23:26:21", "closed": "2014-11-13 03:20:51", "commits": {"1ad47fc7b17cdbbd4cbf35d92464cc1e9532e680": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "1ad47fc7b17cdbbd4cbf35d92464cc1e9532e680", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["2a558885ad9a76291f4beb512deabad9ede9aa37"], "nameRev": "1ad47fc7b17cdbbd4cbf35d92464cc1e9532e680 tags/1.0.0.RC1~17", "commitMessage": "Disable onCommit after first commit\n\nAt times OnCommittedResponseWrapper#onResponseCommitted() can be invoked\nmultiple times. For example, when flush is performed multiple times. This\nmeans that the session can be written multiple times which is inefficient.\nInstead, we should only save on the first update.\n\nFixes gh-57\n", "commitDateTime": "2014-11-12 17:26:43", "authoredDateTime": "2014-10-13 15:32:33", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/OnCommittedResponseWrapper.java", "insertions": 1, "deletions": 0, "lines": 1}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/OnCommittedResponseWrapperTests.java", "insertions": 17, "deletions": 1, "lines": 18}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OnCommittedResponseWrapper.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OnCommittedResponseWrapperTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapperTests", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapperTests.bufferSizeCommitsOnce()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["1ad47fc7b17cdbbd4cbf35d92464cc1e9532e680"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 0, "lines": 1, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.OnCommittedResponseWrapper.doOnResponseCommitted()"]}, {"title": "Change security to session in RedisOperationsSessionRepository.BOUNDED_HASH_KEY_PREFIX", "body": "", "url": "https://github.com/spring-projects/spring-session/issues/46", "user": "rwinch", "labels": ["type: bug"], "created": "2014-10-03 16:14:13", "closed": "2014-10-09 03:02:41", "commits": {"07ff3088bf1843e35c0b8a7319e5d2ecc4971349": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "07ff3088bf1843e35c0b8a7319e5d2ecc4971349", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["6a22a11187848555b17ce1caa3e3f8d8c93bd7e0"], "nameRev": "07ff3088bf1843e35c0b8a7319e5d2ecc4971349 tags/1.0.0.RC1~23", "commitMessage": "Change RedisOperationsSessionRepository.BOUNDED_HASH_KEY_PREFIX\n\nPreviously the key contained spring-security-sessions in it since the\nproject was originally going to be a part of Spring Security.\n\nThis commit moves it to spring:session:sessions: to better align with\nbeing part of Spring Session\n\nFixes #46\n", "commitDateTime": "2014-10-08 22:01:25", "authoredDateTime": "2014-10-08 22:01:25", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/data/redis/RedisOperationsSessionRepository.java", "insertions": 1, "deletions": 1, "lines": 2}], "commitSpoonAstDiffStats": [{"spoonFilePath": "RedisOperationsSessionRepository.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.data.redis.RedisOperationsSessionRepository", "TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["07ff3088bf1843e35c0b8a7319e5d2ecc4971349"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 1, "deletions": 1, "lines": 2, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 1, "UPD": 1, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/data/redis"], "changesInPackagesSPOON": ["org.springframework.session.data.redis.RedisOperationsSessionRepository"]}, {"title": " Sample App Fails: No qualifying bean of type RedisTemplate", "body": "The sample app fails to run successfully using provided instrutions as shown here: https://github.com/spring-projects/spring-session#sample. Here is what I see when running on Ubuntu 14.\n\n$ git clone https://github.com/spring-projects/spring-session.git\n\n$ cd spring-session\n\n$ ./gradlew tomcatRun\n\nDownloading https://services.gradle.org/distributions/gradle-1.12-all.zip\n..................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................................\nUnzipping /home/userx/.gradle/wrapper/dists/gradle-1.12-all/2650hq37qpph364ivk299q86gl/gradle-1.12-all.zip to /home/userx/.gradle/wrapper/dists/gradle-1.12-all/2650hq37qpph364ivk299q86gl\nSet executable permissions for: /home/userx/.gradle/wrapper/dists/gradle-1.12-all/2650hq37qpph364ivk299q86gl/gradle-1.12/bin/gradle\nDownload https://repo.spring.io/plugins-release/org/gradle/api/plugins/gradle-tomcat-plugin/1.2.3/gradle-tomcat-plugin-1.2.3.pom\nDownload https://repo.spring.io/plugins-release/org/springframework/build/gradle/propdeps-plugin/0.0.7/propdeps-plugin-0.0.7.pom\nDownload https://repo.spring.io/plugins-release/org/springframework/build/gradle/spring-io-plugin/0.0.3.RELEASE/spring-io-plugin-0.0.3.RELEASE.pom\nDownload https://repo.spring.io/plugins-release/me/champeau/gradle/gradle-javadoc-hotfix-plugin/0.1/gradle-javadoc-hotfix-plugin-0.1.pom\nDownload https://repo.spring.io/plugins-release/org/asciidoctor/asciidoctor-gradle-plugin/0.7.0/asciidoctor-gradle-plugin-0.7.0.pom\nDownload https://repo.spring.io/plugins-release/org/asciidoctor/asciidoctor-java-integration/0.1.4.preview.1/asciidoctor-java-integration-0.1.4.preview.1.pom\nDownload https://repo.spring.io/plugins-release/org/sonatype/oss/oss-parent/7/oss-parent-7.pom\nDownload https://repo.spring.io/plugins-release/org/asciidoctor/asciidoctor-java-integration/0.1.4/asciidoctor-java-integration-0.1.4.pom\nDownload https://repo.spring.io/plugins-release/org/jruby/jruby-complete/1.7.4/jruby-complete-1.7.4.pom\nDownload https://repo.spring.io/plugins-release/org/jruby/shared/1.7.4/shared-1.7.4.pom\nDownload https://repo.spring.io/plugins-release/com/beust/jcommander/1.30/jcommander-1.30.pom\nDownload https://repo.spring.io/plugins-release/org/sonatype/oss/oss-parent/3/oss-parent-3.pom\nDownload https://repo.spring.io/plugins-release/org/gradle/api/plugins/gradle-tomcat-plugin/1.2.3/gradle-tomcat-plugin-1.2.3.jar\nDownload https://repo.spring.io/plugins-release/org/springframework/build/gradle/propdeps-plugin/0.0.7/propdeps-plugin-0.0.7.jar\nDownload https://repo.spring.io/plugins-release/org/springframework/build/gradle/spring-io-plugin/0.0.3.RELEASE/spring-io-plugin-0.0.3.RELEASE.jar\nDownload https://repo.spring.io/plugins-release/me/champeau/gradle/gradle-javadoc-hotfix-plugin/0.1/gradle-javadoc-hotfix-plugin-0.1.jar\nDownload https://repo.spring.io/plugins-release/org/asciidoctor/asciidoctor-gradle-plugin/0.7.0/asciidoctor-gradle-plugin-0.7.0.jar\nDownload https://repo.spring.io/plugins-release/org/asciidoctor/asciidoctor-java-integration/0.1.4/asciidoctor-java-integration-0.1.4.jar\nDownload https://repo.spring.io/plugins-release/org/jruby/jruby-complete/1.7.4/jruby-complete-1.7.4.jar\nDownload https://repo.spring.io/plugins-release/com/beust/jcommander/1.30/jcommander-1.30.jar\nDownload http://repo1.maven.org/maven2/org/jacoco/org.jacoco.agent/0.6.2.201302030002/org.jacoco.agent-0.6.2.201302030002.pom\nDownload http://repo1.maven.org/maven2/org/jacoco/org.jacoco.build/0.6.2.201302030002/org.jacoco.build-0.6.2.201302030002.pom\nDownload http://repo1.maven.org/maven2/org/jacoco/org.jacoco.agent/0.6.2.201302030002/org.jacoco.agent-0.6.2.201302030002-runtime.jar\n:spring-session:compileJava\nDownload http://repo1.maven.org/maven2/org/springframework/data/spring-data-redis/1.3.0.RELEASE/spring-data-redis-1.3.0.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-tx/3.2.9.RELEASE/spring-tx-3.2.9.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-aop/3.2.9.RELEASE/spring-aop-3.2.9.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-context-support/3.2.9.RELEASE/spring-context-support-3.2.9.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-core/3.2.9.RELEASE/spring-core-3.2.9.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-context/3.2.9.RELEASE/spring-context-3.2.9.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-beans/3.2.9.RELEASE/spring-beans-3.2.9.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-expression/3.2.9.RELEASE/spring-expression-3.2.9.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/data/spring-data-redis/1.3.0.RELEASE/spring-data-redis-1.3.0.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-tx/3.2.9.RELEASE/spring-tx-3.2.9.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-aop/3.2.9.RELEASE/spring-aop-3.2.9.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-context-support/3.2.9.RELEASE/spring-context-support-3.2.9.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-core/3.2.9.RELEASE/spring-core-3.2.9.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-context/3.2.9.RELEASE/spring-context-3.2.9.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-beans/3.2.9.RELEASE/spring-beans-3.2.9.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-expression/3.2.9.RELEASE/spring-expression-3.2.9.RELEASE.jar\nNote: /apps/spring/spring-session/spring-session/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java uses or overrides a deprecated API.\nNote: Recompile with -Xlint:deprecation for details.\n:spring-session:compileGroovy UP-TO-DATE\n:spring-session:processResources UP-TO-DATE\n:spring-session:classes\n:spring-session:jar\n:samples:web:compileJava\nDownload http://repo1.maven.org/maven2/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.pom\nDownload http://repo1.maven.org/maven2/redis/clients/jedis/2.4.1/jedis-2.4.1.pom\nDownload http://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.2/commons-pool2-2.2.pom\nDownload http://repo1.maven.org/maven2/org/apache/commons/commons-parent/33/commons-parent-33.pom\nDownload http://clojars.org/repo/redis/embedded/embedded-redis/0.2/embedded-redis-0.2.pom\nDownload http://repo1.maven.org/maven2/javax/servlet/jsp/jstl/javax.servlet.jsp.jstl-api/1.2.1/javax.servlet.jsp.jstl-api-1.2.1.pom\nDownload http://repo1.maven.org/maven2/org/apache/taglibs/taglibs-standard-jstlel/1.2.1/taglibs-standard-jstlel-1.2.1.pom\nDownload http://repo1.maven.org/maven2/org/apache/taglibs/taglibs-standard/1.2.1/taglibs-standard-1.2.1.pom\nDownload http://repo1.maven.org/maven2/org/apache/taglibs/taglibs-parent/3/taglibs-parent-3.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.pom\nDownload http://repo1.maven.org/maven2/com/google/guava/guava-io/r03/guava-io-r03.pom\nDownload http://repo1.maven.org/maven2/com/google/guava/guava-parent/r03/guava-parent-r03.pom\nDownload http://repo1.maven.org/maven2/com/google/google/5/google-5.pom\nDownload http://repo1.maven.org/maven2/commons-io/commons-io/2.4/commons-io-2.4.pom\nDownload http://repo1.maven.org/maven2/org/apache/commons/commons-parent/25/commons-parent-25.pom\nDownload http://repo1.maven.org/maven2/org/apache/taglibs/taglibs-standard-spec/1.2.1/taglibs-standard-spec-1.2.1.pom\nDownload http://repo1.maven.org/maven2/org/apache/taglibs/taglibs-standard-impl/1.2.1/taglibs-standard-impl-1.2.1.pom\nDownload http://repo1.maven.org/maven2/com/google/guava/guava-annotations/r03/guava-annotations-r03.pom\nDownload http://repo1.maven.org/maven2/com/google/guava/guava-base/r03/guava-base-r03.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.pom\nDownload http://repo1.maven.org/maven2/org/springframework/spring-web/4.0.2.RELEASE/spring-web-4.0.2.RELEASE.jar\nDownload http://repo1.maven.org/maven2/redis/clients/jedis/2.4.1/jedis-2.4.1.jar\nDownload http://repo1.maven.org/maven2/org/apache/commons/commons-pool2/2.2/commons-pool2-2.2.jar\nDownload http://clojars.org/repo/redis/embedded/embedded-redis/0.2/embedded-redis-0.2.jar\nDownload http://repo1.maven.org/maven2/javax/servlet/jsp/jstl/javax.servlet.jsp.jstl-api/1.2.1/javax.servlet.jsp.jstl-api-1.2.1.jar\nDownload http://repo1.maven.org/maven2/org/apache/taglibs/taglibs-standard-jstlel/1.2.1/taglibs-standard-jstlel-1.2.1.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-aop/4.0.2.RELEASE/spring-aop-4.0.2.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-beans/4.0.2.RELEASE/spring-beans-4.0.2.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-context/4.0.2.RELEASE/spring-context-4.0.2.RELEASE.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-core/4.0.2.RELEASE/spring-core-4.0.2.RELEASE.jar\nDownload http://repo1.maven.org/maven2/com/google/guava/guava-io/r03/guava-io-r03.jar\nDownload http://repo1.maven.org/maven2/commons-io/commons-io/2.4/commons-io-2.4.jar\nDownload http://repo1.maven.org/maven2/org/apache/taglibs/taglibs-standard-spec/1.2.1/taglibs-standard-spec-1.2.1.jar\nDownload http://repo1.maven.org/maven2/org/apache/taglibs/taglibs-standard-impl/1.2.1/taglibs-standard-impl-1.2.1.jar\nDownload http://repo1.maven.org/maven2/com/google/guava/guava-annotations/r03/guava-annotations-r03.jar\nDownload http://repo1.maven.org/maven2/com/google/guava/guava-base/r03/guava-base-r03.jar\nDownload http://repo1.maven.org/maven2/org/springframework/spring-expression/4.0.2.RELEASE/spring-expression-4.0.2.RELEASE.jar\nNote: /apps/spring/spring-session/samples/web/src/main/java/Config.java uses unchecked or unsafe operations.\nNote: Recompile with -Xlint:unchecked for details.\n:samples:web:compileGroovy UP-TO-DATE\n:samples:web:processResources UP-TO-DATE\n:samples:web:classes\n:samples:web:tomcatRun\nDownload http://repo1.maven.org/maven2/org/apache/tomcat/embed/tomcat-embed-jasper/7.0.54/tomcat-embed-jasper-7.0.54.pom\nDownload http://repo1.maven.org/maven2/org/apache/tomcat/embed/tomcat-embed-jasper/7.0.54/tomcat-embed-jasper-7.0.54.jar\nContext initialization failed\norg.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sessionRepository' defined in class Config: Unsatisfied dependency expressed through constructor argument with index 0 of type [org.springframework.data.redis.core.RedisTemplate]: : No qualifying bean of type [org.springframework.data.redis.core.RedisTemplate] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.data.redis.core.RedisTemplate] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}\n    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\n    at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:462)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1094)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:989)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:700)\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)\n    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)\n    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)\n    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)\n    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4971)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5467)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.data.redis.core.RedisTemplate] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1100)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:960)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:855)\n    at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:805)\n    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:733)\n    ... 24 more\nException sending context initialized event to listener instance of class org.springframework.web.context.ContextLoaderListener\norg.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'sessionRepository' defined in class Config: Unsatisfied dependency expressed through constructor argument with index 0 of type [org.springframework.data.redis.core.RedisTemplate]: : No qualifying bean of type [org.springframework.data.redis.core.RedisTemplate] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.data.redis.core.RedisTemplate] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}\n    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:741)\n    at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:462)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1094)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:989)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:504)\n    at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:475)\n    at org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:304)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:228)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:300)\n    at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:195)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:700)\n    at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:760)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:482)\n    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:403)\n    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)\n    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:106)\n    at org.apache.catalina.core.StandardContext.listenerStart(StandardContext.java:4971)\n    at org.apache.catalina.core.StandardContext.startInternal(StandardContext.java:5467)\n    at org.apache.catalina.util.LifecycleBase.start(LifecycleBase.java:150)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1559)\n    at org.apache.catalina.core.ContainerBase$StartChild.call(ContainerBase.java:1549)\n    at java.util.concurrent.FutureTask.run(FutureTask.java:262)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:744)\nCaused by: org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [org.springframework.data.redis.core.RedisTemplate] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {}\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.raiseNoSuchBeanDefinitionException(DefaultListableBeanFactory.java:1100)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:960)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:855)\n    at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:805)\n    at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:733)\n    ... 24 more\nError listenerStart\nContext [] startup failed due to previous errors\n", "url": "https://github.com/spring-projects/spring-session/issues/33", "user": "frankbeerstein", "labels": ["type: bug"], "created": "2014-08-11 22:14:27", "closed": "2014-08-12 03:37:50", "commits": {"dcfd85e933d0161573dbee988ac2f055823f2f83": {"commitGHEventType": "closed", "commitUser": "rwinch"}}, "ttf": 0.0002777777777777778, "commitsDetails": [{"commitHash": "dcfd85e933d0161573dbee988ac2f055823f2f83", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["a4e003ebf1bc40a4376174b273c5b9cfc8eb60f5"], "nameRev": "dcfd85e933d0161573dbee988ac2f055823f2f83 tags/1.0.0.RC1~38", "commitMessage": "Sample properly uses RedisTemplate<String,ExpiringSession>\n\nFixes #33\n", "commitDateTime": "2014-08-11 22:36:47", "authoredDateTime": "2014-08-11 22:36:47", "commitGitStats": [{"filePath": "samples/web/src/main/java/Config.java", "insertions": 2, "deletions": 3, "lines": 5}], "commitSpoonAstDiffStats": [{"spoonFilePath": "Config.java", "spoonMethods": []}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["dcfd85e933d0161573dbee988ac2f055823f2f83"], "filteredCommitsReason": {"duplicated": 0, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 1, "gitStatsSummary": {"insertions": 2, "deletions": 3, "lines": 5, "gitFilesChange": 1}, "spoonStatsSummary": {}, "statsSkippedReason": "", "changesInPackagesGIT": ["samples/web/src/main/java"]}, {"title": "Header not set when response is bigger than bufferSize", "body": "Hi\n\nI'm fiddling with M1 and found two issues. I created a spring boot application that demonstrates the problem: https://github.com/ralscha/session\n\nThe application uses the HeaderHttpSessionStrategy and the response  contains the _x-auth-token_ header when the response is json and smaller than the default response buffer size of 8192. (http://localhost:8080/big)\n\nThe response is missing the _x-auth-token_ header when the response is bigger than 8192 (http://localhost:8080/bigger)\n\nThe same happens when the StringHttpMessageConverter is used. \n(http://localhost:8080/string). In this case the size does not matter. Even a small response does not contain the _x-auth-token_\n\nAs a workaround for the first problem I can simply increase the buffer\n\n``` response.setBufferSize(9000);```\n\nFound no workaround for the String problem. \n\nRalph\n```\n", "url": "https://github.com/spring-projects/spring-session/issues/26", "user": "ralscha", "labels": ["type: bug"], "created": "2014-07-26 19:50:29", "closed": "2014-08-01 19:39:25", "commits": {"0d217c680a47069a9bac90881441c5f760b64e95": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "4eb1ac09995030ed1643ee92c06bc17235e08522": {"commitGHEventType": "closed", "commitUser": "rwinch"}, "2732a183f3d46e5597956a6940e9c061e4b19c32": {"commitGHEventType": "referenced", "commitUser": "rwinch"}}, "ttf": 5.000277777777778, "commitsDetails": [{"commitHash": "0d217c680a47069a9bac90881441c5f760b64e95", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": ["eb0da565f3a53d52d00df8a1042fff9bc34dc031"], "nameRev": "0d217c680a47069a9bac90881441c5f760b64e95 tags/1.0.0.RC1~41", "commitMessage": "OnCommittedResponseWrapper triggers commit when content length is reached\n\nFixes #26\n", "commitDateTime": "2014-07-31 16:01:18", "authoredDateTime": "2014-07-31 16:01:18", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/OnCommittedResponseWrapper.java", "insertions": 142, "deletions": 2, "lines": 144}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/OnCommittedResponseWrapperTests.java", "insertions": 538, "deletions": 1, "lines": 539}], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": "tooManyChanges"}, {"commitHash": "4eb1ac09995030ed1643ee92c06bc17235e08522", "commitGHEventType": "closed", "commitUser": "rwinch", "commitParents": [], "nameRev": "", "commitMessage": "", "commitDateTime": "", "authoredDateTime": "", "commitGitStats": [], "commitSpoonAstDiffStats": [], "spoonStatsSkippedReason": ""}, {"commitHash": "2732a183f3d46e5597956a6940e9c061e4b19c32", "commitGHEventType": "referenced", "commitUser": "rwinch", "commitParents": ["0d217c680a47069a9bac90881441c5f760b64e95"], "nameRev": "2732a183f3d46e5597956a6940e9c061e4b19c32 tags/1.0.0.RC1~40", "commitMessage": "OnCommitedResponseWrapper commits when buffer exceeded\n\nFixes #26\n", "commitDateTime": "2014-08-01 15:24:50", "authoredDateTime": "2014-08-01 14:38:24", "commitGitStats": [{"filePath": "spring-session/src/main/java/org/springframework/session/web/http/OnCommittedResponseWrapper.java", "insertions": 4, "deletions": 1, "lines": 5}, {"filePath": "spring-session/src/test/java/org/springframework/session/web/http/OnCommittedResponseWrapperTests.java", "insertions": 10, "deletions": 0, "lines": 10}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OnCommittedResponseWrapper.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapper.checkContentLength(long)", "TOT": 5, "UPD": 0, "INS": 4, "MOV": 1, "DEL": 0}]}, {"spoonFilePath": "OnCommittedResponseWrapperTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OnCommittedResponseWrapperTests.bufferSizePrintWriterWriteCommits()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": ["0d217c680a47069a9bac90881441c5f760b64e95", "2732a183f3d46e5597956a6940e9c061e4b19c32"], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 0, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 2, "gitStatsSummary": {"insertions": 146.0, "deletions": 3.0, "lines": 149.0, "gitFilesChange": 1}, "spoonStatsSummary": {"TOT": 5.0, "UPD": 0.0, "INS": 4.0, "MOV": 1.0, "DEL": 0.0, "spoonFilesChanged": 1, "spoonMethodsChanged": 1}, "statsSkippedReason": "", "changesInPackagesGIT": ["spring-session/src/main/java/org/springframework/session/web/http"], "changesInPackagesSPOON": ["org.springframework.session.web.http.OnCommittedResponseWrapper.checkContentLength(long)"]}, {"title": "Review OncePerRequestFilter changes for error dispatch on Jetty", "body": "Backport of gh-1470", "url": "https://github.com/spring-projects/spring-session/issues/1477", "user": "spring-issuemaster", "labels": ["in: core", "type: backport", "type: regression"], "created": "2019-07-19 18:47:40", "closed": "2019-07-19 21:29:32", "commits": {}, "ttf": 0.0002777777777777778, "commitsDetails": []}, {"title": "Review OncePerRequestFilter changes for error dispatch on Jetty", "body": "We should keep an eye on spring-projects/spring-framework#23196 and apply whatever is the outcome to our own `OncePerRequestFilter` (and backport it to `2.1.x` as well).\r\n\r\nRelated to #1308.", "url": "https://github.com/spring-projects/spring-session/issues/1470", "user": "vpavic", "labels": ["in: core", "status: backported", "type: regression"], "created": "2019-06-26 20:12:29", "closed": "2019-07-19 18:48:37", "commits": {"593c126c03642f5afdd7cb162f6690e9439b4082": {"commitGHEventType": "closed", "commitUser": "vpavic"}, "e40e55d1e9a5419d77b1577f3450453313fd2bb3": {"commitGHEventType": "referenced", "commitUser": "vpavic"}}, "ttf": 22.00027777777778, "commitsDetails": [{"commitHash": "593c126c03642f5afdd7cb162f6690e9439b4082", "commitGHEventType": "closed", "commitUser": "vpavic", "commitParents": ["033d6eecaeabe1adaa4deedc9a3019cf9260fcbc"], "nameRev": "593c126c03642f5afdd7cb162f6690e9439b4082 tags/2.2.0.M3~18", "commitMessage": "Filtering for nested ERROR dispatch\n\nResolves: #1470\nSee: spring-projects/spring-framework#23196\n", "commitDateTime": "2019-07-19 20:38:30", "authoredDateTime": "2019-07-15 23:55:36", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/OncePerRequestFilter.java", "insertions": 37, "deletions": 11, "lines": 48}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/OncePerRequestFilterTests.java", "insertions": 33, "deletions": 0, "lines": 33}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OncePerRequestFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.updateForErrorDispatch(java.lang.String,javax.servlet.ServletRequest)", "TOT": 15, "UPD": 10, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.getAlreadyFilteredAttributeName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OncePerRequestFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilterTests.filterNestedErrorDispatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilterTests.TestOncePerRequestFilter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}, {"commitHash": "e40e55d1e9a5419d77b1577f3450453313fd2bb3", "commitGHEventType": "referenced", "commitUser": "vpavic", "commitParents": ["a289938c7cc485f6a6740335e7c6f3b64a5cb377"], "nameRev": "e40e55d1e9a5419d77b1577f3450453313fd2bb3 tags/2.1.8.RELEASE~8", "commitMessage": "Filtering for nested ERROR dispatch\n\nResolves: #1470\nSee: spring-projects/spring-framework#23196\n", "commitDateTime": "2019-07-19 21:06:30", "authoredDateTime": "2019-07-15 23:55:36", "commitGitStats": [{"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/OncePerRequestFilter.java", "insertions": 37, "deletions": 12, "lines": 49}, {"filePath": "spring-session-core/src/main/java/org/springframework/session/web/http/SessionRepositoryFilter.java", "insertions": 6, "deletions": 0, "lines": 6}, {"filePath": "spring-session-core/src/test/java/org/springframework/session/web/http/OncePerRequestFilterTests.java", "insertions": 35, "deletions": 1, "lines": 36}], "commitSpoonAstDiffStats": [{"spoonFilePath": "OncePerRequestFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.updateForErrorDispatch(java.lang.String,javax.servlet.ServletRequest)", "TOT": 15, "UPD": 10, "INS": 0, "MOV": 5, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse,javax.servlet.FilterChain)", "TOT": 10, "UPD": 0, "INS": 5, "MOV": 3, "DEL": 2}, {"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilter.getAlreadyFilteredAttributeName()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "SessionRepositoryFilter.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.SessionRepositoryFilter.doFilterNestedErrorDispatch(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,javax.servlet.FilterChain)", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}, {"spoonFilePath": "OncePerRequestFilterTests.java", "spoonMethods": [{"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilterTests.filterNestedErrorDispatch()", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}, {"spoonMethodName": "org.springframework.session.web.http.OncePerRequestFilterTests.TestOncePerRequestFilter", "TOT": 1, "UPD": 0, "INS": 1, "MOV": 0, "DEL": 0}]}], "spoonStatsSkippedReason": ""}], "filteredCommits": [], "filteredCommitsReason": {"duplicated": 1, "alsoFixesPhrase": 0, "moreThanOneParent": 0, "multipleIssueFixes": 1, "unavailable": 0, "mergeCommitUsed": 0}, "numCommits": 0, "gitStatsSummary": {"insertions": 0, "deletions": 0, "lines": 0, "gitFilesChange": 0}, "spoonStatsSummary": {"TOT": 0, "UPD": 0, "INS": 0, "MOV": 0, "DEL": 0, "spoonFilesChanged": 0, "spoonMethodsChanged": 0}, "statsSkippedReason": "", "changesInPackagesGIT": [], "changesInPackagesSPOON": []}]}