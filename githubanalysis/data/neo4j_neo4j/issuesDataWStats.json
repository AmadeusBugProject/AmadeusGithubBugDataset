{"bugLabels": ["bug"], "issues": [{"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12539", "title": "Does the community version have CPU startup restrictions\uff1fmax four core? ", "closed": "2020-07-06 08:04:19", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2020-06-28 04:02:07", "user": "mikechengwei", "body": "- Neo4j version: 3.5.18\r\n\r\nDoes the community version have CPU or memory limit?\r\n\r\n\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12535", "title": "session.writeTransaction does not support types even though it is a generic.", "closed": "2020-07-02 20:04:26", "commitsDetails": [], "commits": {}, "ttf": 10.000277777777777, "created": "2020-06-22 20:01:01", "user": "ELI7VH", "body": "I am trying to use a generic type so I can use my transactions in a typed manner. \r\n\r\ndoing something like this: \r\n```ts\r\nconst node = await session.writeTransaction<ScheduleRecord>((tx) =>\r\n    tx.run(query, formData)\r\n  )\r\n```\r\ngives me the following error (the red line us under `tx.run(query, formData)`):\r\n```\r\nType 'Result' is not assignable to type 'ScheduleRecord | Promise<ScheduleRecord>'.\r\n  Type 'Result' is not assignable to type 'Promise<ScheduleRecord>'.\r\n    Types of property 'then' are incompatible.\r\n      Type '<TResult1 = QueryResult, TResult2 = never>(onfulfilled?: (value: QueryResult) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<...>) => Promise<...>' is not assignable to type '<TResult1 = ScheduleRecord, TResult2 = never>(onfulfilled?: (value: ScheduleRecord) => TResult1 | PromiseLike<TResult1>, onrejected?: (reason: any) => TResult2 | PromiseLike<...>) => Promise<...>'.\r\n        Types of parameters 'onfulfilled' and 'onfulfilled' are incompatible.\r\n          Types of parameters 'value' and 'value' are incompatible.\r\n            Type 'QueryResult' is missing the following properties from type 'ScheduleRecord': id, start, durationts(2322)\r\nsession.d.ts(25, 35): The expected type comes from the return type of this signature.\r\n```\r\nthe error goes away if i remove the `ScheduleRecord` from the `writeTransaction` generic argument."}, {"labels": ["bug", "cypher", "docs"], "url": "https://github.com/neo4j/neo4j/issues/12532", "title": "[RBAC] user with reader role cannot use `db.stats.retrieve` procedure", "closed": "2020-07-04 16:05:18", "commitsDetails": [], "commits": {}, "ttf": 19.00027777777778, "created": "2020-06-15 12:08:48", "user": "ikwattro", "body": "\r\nFollowing the [documentation](https://neo4j.com/docs/operations-manual/current/authentication-authorization/manage-procedure-permissions/#auth-manage-procedure-permissions-configure-procedure-permissions), a user with the role `reader` should be able to access `READ` procedures.\r\n\r\nFollowing the [documentation for built-in procedures](https://neo4j.com/docs/operations-manual/current/reference/procedures/), the `db.stats.retrieve` procedure is `READ` mode procedure.\r\n\r\nHowever, granting a user the role `reader` does not allow him to call that procedure.\r\n\r\n**Neo4j Version:** 4.0.4\r\n**Operating System:** Centos\r\n**API:** Browser\r\n\r\n### Steps to reproduce\r\n\r\nCreate user and grant him the role reader : \r\n\r\n```\r\nCREATE USER procuser SET PASSWORD \"pass\" CHANGE NOT REQUIRED;\r\nGRANT ROLE reader TO procuser;\r\n```\r\n\r\nLogin as `procuser` and run the following procedure : \r\n\r\n```\r\nCALL db.stats.retrieve('GRAPH COUNTS', {})\r\n```\r\n\r\nA permission denied exception is thrown\r\n\r\n```\r\nNeo.ClientError.Security.Forbidden\r\nPermission denied.\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nA user with the role `reader` should be able to execute all READ built-in procedures.\r\n\r\n### Actual behavior\r\n\r\nA user with the role `reader` is not able to execute all READ built-in procedures.\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12518", "title": "Neo4J Online Backup Does Not Work", "closed": "2020-07-01 09:22:28", "commitsDetails": [], "commits": {}, "ttf": 28.00027777777778, "created": "2020-06-02 11:21:55", "user": "deemeetree", "body": "- Neo4j version: 3.3.3 Enterprise\r\n- Operating system: Ubuntu\r\n\r\n- **Steps to reproduce**\r\n- Expected behavior\r\nRunning \r\n```\r\nneo4j-admin backup --backup-dir=backups --name=graph.db --from=localhost:6362 --timeout=59m --pagecache=2G\r\n```\r\nOnline backup should work .\r\n\r\n\r\n- Actual behavior\r\n\r\n```\r\n2020-06-02 11:17:04.673+0000 INFO [o.n.c.s.StoreCopyClient] Copying neostore.propertystore.db\r\ncommand failed: Backup failed: Unexpected Exception\r\n```\r\n\r\nI've been trying to deal with it for 1(!) month already. Here's a thread on Neo4J forum. I tried everything, nothing worked.\r\n\r\nhttps://community.neo4j.com/t/cant-backup-remote-database-using-neo4j/18332/33\r\n\r\nIt looks like Neo4J enterprise backup function simply does not work. "}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12509", "title": "Planner was unable to find a plan within the constraints provided", "closed": "2020-06-11 22:07:42", "commitsDetails": [], "commits": {}, "ttf": 34.000277777777775, "created": "2020-05-08 14:19:04", "user": "fabio-510", "body": "Initially reported in #12434 as a way to report an error in doc, but after more diligence (and clarifying from neo4j team), it may be indeed a bug.\r\n\r\nI am getting this error immediately after I try to run a cypher query:\r\n\r\n**Neo.DatabaseError.General.UnknownError**\r\n> Neo4jError: Unfortunately, the planner was unable to find a plan within the constraints provided.\r\nTry increasing the config values unsupported.cypher.idp_solver_table_threshold\r\nand unsupported.cypher.idp_solver_duration_threshold to allow\r\nfor a larger sub-plan table and longer planning time.\r\n\r\nSince the error only happens when we have some data I was able to reproduce it by adding some sample data, which is not directly related to the cypher query itself.\r\n\r\n## Step 1 - Create and use a blank database\r\n```\r\n:use system\r\nCREATE DATABASE test\r\n:use test\r\n```\r\n## Step 2 - Initialize it with some data\r\n```\r\n:play northwind-graph\r\n```\r\n> Execute all the steps of the demo dataset\r\n\r\n## Step 3 - Initialize cypher paramters\r\n```\r\n:params {\"createdBy\":\"79224171-10e7-4162-a062-bded2c200572\",\"polyglotID\":\"29754318-1faf-4189-8983-fc3d32608785\",\"created\":1588752876836,\"modified\":1588752876836,\"labels\":[{\"createdBy\":\"\",\"polyglotID\":\"29754318-1faf-4189-8983-fc3d32608785\",\"created\":1588752876836,\"modified\":1588752876836,\"name\":\"test\",\"properties\":{\"test\":\"number\"}},{\"createdBy\":\"\",\"polyglotID\":\"29754318-1faf-4189-8983-fc3d32608785\",\"created\":1588752876836,\"modified\":1588752876836,\"name\":\"test1\",\"properties\":{\"ID\":\"string\",\"test\":\"number\"}},{\"createdBy\":\"\",\"polyglotID\":\"29754318-1faf-4189-8983-fc3d32608785\",\"created\":1588752876837,\"modified\":1588752876837,\"name\":\"test2\",\"properties\":{\"ID\":\"string\",\"test\":\"number\"}}],\"labelNames\":[\"test\",\"test1\",\"test2\"],\"name\":\"Test Model\",\"identifierProperty\":\"test\",\"modelItems\":[{\"createdBy\":\"79224171-10e7-4162-a062-bded2c200572\",\"polyglotID\":\"7152d100-e764-425a-8ce2-31b9db30a7d5\",\"created\":1588752876836,\"modified\":1588752876836,\"labels\":[{\"createdBy\":\"\",\"polyglotID\":\"7152d100-e764-425a-8ce2-31b9db30a7d5\",\"created\":1588752876836,\"modified\":1588752876836,\"name\":\"test1\",\"properties\":{\"ID\":\"string\",\"system\":\"number\"}}],\"labelNames\":[\"test1\"],\"name\":\"test1\",\"identifierProperty\":\"ID\",\"parentPolyglotId\":\"29754318-1faf-4189-8983-fc3d32608785\"},{\"createdBy\":\"79224171-10e7-4162-a062-bded2c200572\",\"polyglotID\":\"1267e9b3-cd46-488a-ba67-683915df13b1\",\"created\":1588752876837,\"modified\":1588752876837,\"labels\":[{\"createdBy\":\"\",\"polyglotID\":\"1267e9b3-cd46-488a-ba67-683915df13b1\",\"created\":1588752876837,\"modified\":1588752876837,\"name\":\"test2\",\"properties\":{\"ID\":\"string\",\"system\":\"number\"}}],\"labelNames\":[\"test2\"],\"name\":\"test2\",\"identifierProperty\":\"ID\",\"parentPolyglotId\":\"29754318-1faf-4189-8983-fc3d32608785\"}],\"relationships\":{\"connects\":[{\"polyglotID\":\"29754318-1faf-4189-8983-fc3d32608785\",\"created\":1588752876837,\"modified\":1588752876837,\"alias\":\"test1connectstest2\",\"from\":\"test1\",\"fromIdentifier\":\"sourceid\",\"to\":\"test2\",\"toIdentifier\":\"toid\",\"properties\":{\"identity\":\"string\"},\"identifierProperty\":\"identity\"},{\"polyglotID\":\"29754318-1faf-4189-8983-fc3d32608785\",\"created\":1588752876837,\"modified\":1588752876837,\"alias\":\"test2connectstest1\",\"from\":\"test2\",\"fromIdentifier\":\"sourceid\",\"to\":\"test1\",\"toIdentifier\":\"toid\",\"properties\":{\"identity\":\"string\"},\"identifierProperty\":\"identity\"}]}}\r\n```\r\n\r\n## Step 4 - Execute the query to get the planner error\r\n```\r\nMATCH (m:Elements:Creation:Model{polyglotID:$polyglotID})\r\nWITH *\r\nUNWIND keys($relationships) as relationType UNWIND $relationships[relationType] as relation MATCH (a:Elements:`799cc536-3180-47f7-9bab-b154f3ab2204`:Artefact:ModelItem{name:relation.from})\r\n<-[:contains]-(m) MATCH (b:Elements:`799cc536-3180-47f7-9bab-b154f3ab2204`:Artefact:ModelItem{name:relation.to})\r\n<-[:contains]-(m) CALL apoc.merge.relationship(a, relationType, NULL, {alias: relation.alias, identifierProperty: relation.identifierProperty, fromIdentifier: relation.fromIdentifier, toIdentifier: relation.toIdentifier}, b) YIELD rel\r\nRETURN *\r\n```\r\n## Neo Specs\r\n\r\n**Neo4j version: 4.0.4 enterprise\r\nOperating system: Original neo4j docker image\r\nAPI/Driver: Neo4j browser**\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12506", "title": "[4.x] Cannot create database with test harness", "closed": "2020-05-05 20:28:40", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2020-05-05 18:00:31", "user": "fbiville", "body": "## Guidelines\r\n\r\n- Neo4j version: 4.0.4\r\n- Operating system: Mac OS\r\n- API/Driver: Test harness\r\n\r\n\r\n\r\n### Steps to reproduce\r\n\r\n1. Clone https://github.com/fbiville/neo4j-harness-multi-db\r\n2. Run the test with `mvn test`.\r\n\r\n\r\n### Expected behavior\r\nI expect a database to be created and the test to pass.\r\n\r\n### Actual behavior\r\nThe test fails with the following error:\r\n```java\r\norg.neo4j.dbms.api.DatabaseManagementException: org.neo4j.graphdb.QueryExecutionException: Unsupported administration command: CREATE DATABASE `extra`\r\n\r\n\tat org.neo4j.dbms.database.DatabaseManagementServiceImpl.systemDatabaseExecute(DatabaseManagementServiceImpl.java:154)\r\n\tat org.neo4j.dbms.database.DatabaseManagementServiceImpl.createDatabase(DatabaseManagementServiceImpl.java:72)\r\n\tat com.acme.MultiDatabaseTest.creates_extra_db(MultiDatabaseTest.java:33)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:24)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.neo4j.harness.junit.rule.Neo4jRule$1.evaluate(Neo4jRule.java:89)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\r\nCaused by: org.neo4j.graphdb.QueryExecutionException: Unsupported administration command: CREATE DATABASE `extra`\r\n\tat org.neo4j.kernel.impl.query.QueryExecutionKernelException.asUserException(QueryExecutionKernelException.java:35)\r\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.execute(TransactionImpl.java:236)\r\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.execute(TransactionImpl.java:217)\r\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.execute(TransactionImpl.java:211)\r\n\tat org.neo4j.dbms.database.DatabaseManagementServiceImpl.systemDatabaseExecute(DatabaseManagementServiceImpl.java:148)\r\n\t... 27 more\r\nCaused by: org.neo4j.kernel.impl.query.QueryExecutionKernelException: Unsupported administration command: CREATE DATABASE `extra`\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:125)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:110)\r\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.execute(TransactionImpl.java:228)\r\n\t... 30 more\r\nCaused by: org.neo4j.exceptions.DatabaseAdministrationException: Unsupported administration command: CREATE DATABASE `extra`\r\n\tat org.neo4j.cypher.internal.logical.plans.DatabaseAdministrationLogicalPlan.invalid(MultiDatabaseLogicalPlan.scala:42)\r\n\tat org.neo4j.cypher.internal.logical.plans.DatabaseAdministrationLogicalPlan.invalid(MultiDatabaseLogicalPlan.scala:41)\r\n\tat org.neo4j.cypher.internal.planning.CypherPlanner.createPlan$1(CypherPlanner.scala:267)\r\n\tat org.neo4j.cypher.internal.planning.CypherPlanner.$anonfun$doPlan$6(CypherPlanner.scala:294)\r\n\tat org.neo4j.cypher.internal.QueryCache.compileAndCache(QueryCache.scala:186)\r\n\tat org.neo4j.cypher.internal.QueryCache.computeIfAbsentOrStale(QueryCache.scala:128)\r\n\tat org.neo4j.cypher.internal.planning.CypherPlanner.doPlan(CypherPlanner.scala:296)\r\n\tat org.neo4j.cypher.internal.planning.CypherPlanner.parseAndPlan(CypherPlanner.scala:177)\r\n\tat org.neo4j.cypher.internal.CypherCurrentCompiler.compile(CypherCurrentCompiler.scala:112)\r\n\tat org.neo4j.cypher.internal.MasterCompiler.compile(MasterCompiler.scala:89)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.$anonfun$compilers$2(ExecutionEngine.scala:245)\r\n\tat org.neo4j.cypher.internal.QueryCache.compileAndCache(QueryCache.scala:186)\r\n\tat org.neo4j.cypher.internal.QueryCache.computeIfAbsentOrStale(QueryCache.scala:128)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.getOrCompile(ExecutionEngine.scala:280)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.parseAndCompile$1(ExecutionEngine.scala:212)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.doExecute(ExecutionEngine.scala:229)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.$anonfun$executeSubQuery$1(ExecutionEngine.scala:190)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.closing(ExecutionEngine.scala:195)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.executeSubQuery(ExecutionEngine.scala:188)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:139)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:121)\r\n\t... 32 more\r\n\r\n\r\norg.neo4j.dbms.api.DatabaseManagementException: org.neo4j.graphdb.QueryExecutionException: Unsupported administration command: DROP DATABASE `extra`\r\n\r\n\tat org.neo4j.dbms.database.DatabaseManagementServiceImpl.systemDatabaseExecute(DatabaseManagementServiceImpl.java:154)\r\n\tat org.neo4j.dbms.database.DatabaseManagementServiceImpl.dropDatabase(DatabaseManagementServiceImpl.java:78)\r\n\tat com.acme.MultiDatabaseTest.deletes_extra_db(MultiDatabaseTest.java:38)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:33)\r\n\tat org.neo4j.harness.junit.rule.Neo4jRule$1.evaluate(Neo4jRule.java:89)\r\n\tat org.junit.rules.RunRules.evaluate(RunRules.java:20)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\r\n\tat org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:160)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:33)\r\n\tat com.intellij.rt.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:230)\r\n\tat com.intellij.rt.junit.JUnitStarter.main(JUnitStarter.java:58)\r\nCaused by: org.neo4j.graphdb.QueryExecutionException: Unsupported administration command: DROP DATABASE `extra`\r\n\tat org.neo4j.kernel.impl.query.QueryExecutionKernelException.asUserException(QueryExecutionKernelException.java:35)\r\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.execute(TransactionImpl.java:236)\r\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.execute(TransactionImpl.java:217)\r\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.execute(TransactionImpl.java:211)\r\n\tat org.neo4j.dbms.database.DatabaseManagementServiceImpl.systemDatabaseExecute(DatabaseManagementServiceImpl.java:148)\r\n\t... 26 more\r\nCaused by: org.neo4j.kernel.impl.query.QueryExecutionKernelException: Unsupported administration command: DROP DATABASE `extra`\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:125)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:110)\r\n\tat org.neo4j.kernel.impl.coreapi.TransactionImpl.execute(TransactionImpl.java:228)\r\n\t... 29 more\r\nCaused by: org.neo4j.exceptions.DatabaseAdministrationException: Unsupported administration command: DROP DATABASE `extra`\r\n\tat org.neo4j.cypher.internal.logical.plans.DatabaseAdministrationLogicalPlan.invalid(MultiDatabaseLogicalPlan.scala:42)\r\n\tat org.neo4j.cypher.internal.logical.plans.DatabaseAdministrationLogicalPlan.invalid(MultiDatabaseLogicalPlan.scala:41)\r\n\tat org.neo4j.cypher.internal.planning.CypherPlanner.createPlan$1(CypherPlanner.scala:267)\r\n\tat org.neo4j.cypher.internal.planning.CypherPlanner.$anonfun$doPlan$6(CypherPlanner.scala:294)\r\n\tat org.neo4j.cypher.internal.QueryCache.compileAndCache(QueryCache.scala:186)\r\n\tat org.neo4j.cypher.internal.QueryCache.computeIfAbsentOrStale(QueryCache.scala:128)\r\n\tat org.neo4j.cypher.internal.planning.CypherPlanner.doPlan(CypherPlanner.scala:296)\r\n\tat org.neo4j.cypher.internal.planning.CypherPlanner.parseAndPlan(CypherPlanner.scala:177)\r\n\tat org.neo4j.cypher.internal.CypherCurrentCompiler.compile(CypherCurrentCompiler.scala:112)\r\n\tat org.neo4j.cypher.internal.MasterCompiler.compile(MasterCompiler.scala:89)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.$anonfun$compilers$2(ExecutionEngine.scala:245)\r\n\tat org.neo4j.cypher.internal.QueryCache.compileAndCache(QueryCache.scala:186)\r\n\tat org.neo4j.cypher.internal.QueryCache.computeIfAbsentOrStale(QueryCache.scala:128)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.getOrCompile(ExecutionEngine.scala:280)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.parseAndCompile$1(ExecutionEngine.scala:212)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.doExecute(ExecutionEngine.scala:229)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.$anonfun$executeSubQuery$1(ExecutionEngine.scala:190)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.closing(ExecutionEngine.scala:195)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.executeSubQuery(ExecutionEngine.scala:188)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:139)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:121)\r\n\t... 31 more\r\n```\r\n"}, {"labels": ["bug", "cypher", "team-cypher"], "filteredCommits": ["215831d1fc2298fade1d1e679b3b5cf07596df6b"], "url": "https://github.com/neo4j/neo4j/issues/12505", "gitStatsSummary": {"insertions": 32, "gitFilesChange": 5, "lines": 82, "deletions": 50}, "numCommits": 1, "commits": {"215831d1fc2298fade1d1e679b3b5cf07596df6b": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}, "c5b8f8fd46bc8e39a150c2ddba91333ab92900c1": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 21.00027777777778, "user": "ofraiwan", "changesInPackagesGIT": ["community/cypher/front-end/expressions/src/main/scala/org/neo4j/cypher", "community/cypher/cypher-planner/src/main/scala/org/neo4j/cypher/internal", "community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher"], "body": "List parameters cannot be indexed in neo4j 4. Whenever you try to take an element from a parameter of type list, this error is thrown:\r\n\r\n```\r\n**Neo.DatabaseError.General.UnknownError**\r\nDid not find any type information for expression ContainerIndex(Parameter(r,Any),SignedDecimalIntegerLiteral(0))\r\n```\r\n\r\nNeo4j Version: 4.0.3\r\nOperating System: Ubuntu 18.04.3 LTS\r\nDB Mode: Causal Cluster\r\n\r\nAn example query to reproduce the issue is:\r\n```\r\nMATCH (user:User)\r\nWHERE ($range[0] > user.id OR user.id > $range[1])\r\nreturn user\r\nlimit 1\r\n```\r\n\r\n$range is the parameter in question with an example value [100, 200]\r\n\r\nThis error does not happen in the previous neo4j version 3.5, as we are currently migrating to neo4j 4. It happens in the neo4j browser, and through drivers. I currently use python driver 1.7.6\r\n", "filteredCommitsReason": {"duplicated": 1, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Usage of parameters of type list", "statsSkippedReason": "", "closed": "2020-05-27 12:36:00", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-05-25 08:52:06", "commitHash": "215831d1fc2298fade1d1e679b3b5cf07596df6b", "commitParents": ["4da6c4c68eb0584791f389e0494d5fc73e221a86"], "commitGHEventType": "referenced", "nameRev": "215831d1fc2298fade1d1e679b3b5cf07596df6b tags/4.0.5~10", "commitGitStats": [{"insertions": 2, "lines": 36, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/LessThanOrEqualTest.scala", "deletions": 34}, {"insertions": 1, "lines": 14, "filePath": "community/cypher/front-end/expressions/src/main/scala/org/neo4j/cypher/internal/v4_0/expressions/PredicateExpressions.scala", "deletions": 13}, {"insertions": 18, "lines": 30, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/InfixExpressionTestBase.scala", "deletions": 12}, {"insertions": 2, "lines": 34, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/GreaterThanOrEqualTest.scala", "deletions": 32}, {"insertions": 22, "lines": 32, "filePath": "community/cypher/cypher-planner/src/test/scala/org/neo4j/cypher/internal/compiler/planner/LogicalPlanningTestSupport.scala", "deletions": 10}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/EqualsTest.scala", "deletions": 2}, {"insertions": 2, "lines": 34, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/GreaterThanTest.scala", "deletions": 32}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/NotEqualsTest.scala", "deletions": 2}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/SemanticFeature.scala", "deletions": 1}, {"insertions": 2, "lines": 34, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/LessThanTest.scala", "deletions": 32}, {"insertions": 6, "lines": 23, "filePath": "community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/SemanticExpressionCheck.scala", "deletions": 17}, {"insertions": 8, "lines": 17, "filePath": "community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/SemanticState.scala", "deletions": 9}, {"insertions": 17, "lines": 27, "filePath": "community/cypher/cypher-planner/src/main/scala/org/neo4j/cypher/internal/compiler/phases/CompilationPhases.scala", "deletions": 10}, {"insertions": 4, "lines": 9, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/v4_0/ast/semantics/SemanticFunSuite.scala", "deletions": 5}], "commitSpoonAstDiffStats": [], "commitMessage": "Type check param list accesses in inequalities\n\nThis fixes a bug where we would not\ntype check deeply into InequalityExpression,\nwhich can lead to errors later while planning.\n\nIt also completely removes the SemanticFeature\nCypher9Comparability, and uses that as the only\navailable comparison behavior instead of offering\nnot to compare with these semantics.\n\nFixes #12505\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2020-05-13 16:32:51"}, {"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-05-26 14:19:04", "commitHash": "c5b8f8fd46bc8e39a150c2ddba91333ab92900c1", "commitParents": ["d53f5ccffe9791c9cd98413d0fab8538f2a6c000"], "commitGHEventType": "closed", "nameRev": "c5b8f8fd46bc8e39a150c2ddba91333ab92900c1 remotes/origin/4.1~149", "commitGitStats": [{"insertions": 1, "lines": 7, "filePath": "community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/ast/semantics/SemanticState.scala", "deletions": 6}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/ast/semantics/SemanticFeature.scala", "deletions": 1}, {"insertions": 2, "lines": 34, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/ast/semantics/GreaterThanTest.scala", "deletions": 32}, {"insertions": 1, "lines": 4, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/ast/semantics/SemanticFunSuite.scala", "deletions": 3}, {"insertions": 2, "lines": 34, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/ast/semantics/GreaterThanOrEqualTest.scala", "deletions": 32}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-planner/src/test/scala/org/neo4j/cypher/internal/compiler/planner/LogicalPlanningTestSupport.scala", "deletions": 1}, {"insertions": 2, "lines": 34, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/ast/semantics/LessThanTest.scala", "deletions": 32}, {"insertions": 1, "lines": 14, "filePath": "community/cypher/front-end/expressions/src/main/scala/org/neo4j/cypher/internal/expressions/PredicateExpressions.scala", "deletions": 13}, {"insertions": 2, "lines": 36, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/ast/semantics/LessThanOrEqualTest.scala", "deletions": 34}, {"insertions": 6, "lines": 23, "filePath": "community/cypher/front-end/ast/src/main/scala/org/neo4j/cypher/internal/ast/semantics/SemanticExpressionCheck.scala", "deletions": 17}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/ast/semantics/NotEqualsTest.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/ast/semantics/EqualsTest.scala", "deletions": 2}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/cypher-planner/src/main/scala/org/neo4j/cypher/internal/compiler/phases/CompilationPhases.scala", "deletions": 1}, {"insertions": 16, "lines": 27, "filePath": "community/cypher/front-end/ast/src/test/scala/org/neo4j/cypher/internal/ast/semantics/InfixExpressionTestBase.scala", "deletions": 11}], "commitSpoonAstDiffStats": [], "commitMessage": "Type check param list accesses in inequalities\n\nThis fixes a bug where we would not\ntype check deeply into InequalityExpression,\nwhich can lead to errors later while planning.\n\nIt also completely removes the SemanticFeature\nCypher9Comparability, and uses that as the only\navailable comparison behavior instead of offering\nnot to compare with these semantics.\n\nFixes #12505\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2020-05-13 16:32:51"}], "created": "2020-05-05 13:22:15"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12503", "title": "OGM Session does not execute apoc.cypher.runFile", "closed": "2020-05-11 19:12:16", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2020-05-04 19:57:17", "user": "jrsperry", "body": "To help us understand your issue, please specify important details, primarily:\r\n\r\n- Neo4j version: 4.0.0\r\n- Operating system: (Ubuntu 18.04)\r\n- API/Driver: Java 4.0.0\r\n\r\nSteps to reproduce\r\n- I have a  OGM repository that needs to make an apoc.cypher.runFile call\r\n- I have propositionRepository, PropositionRepositoryCustom, and PropositionRepositoryCustomImpl all in a project\r\n- when I add a query (simple, no apoc call) to the repository, I am able to call it later in my java code no problem. \r\n- however when I create a query (registered in the repository) with the apoc.cypher.runFile command, nothing happens in my graph. \r\n- I have apoc 4.0.0 binary jar in my plugins, and can make the apoc.cypher.runFile call in the neo4j browser no problem\r\n- I believe something is happening with the call within the repository, as I get an error if the file name is mispelled. After logging out the query that's supposed to happen, I can copy and paste the query into a separate neo4j browser and it executes fine. \r\n- if I create a new session straight from the db driver (not the conditional OGM session) I can use session.run(\"call apoc.cypher.runFile(\"filename.cypher\", {parameters .....}) and it executes. \r\n\r\nMy problem is that I need to be able to keep the apoc.cypher.runFile command in the same session (ogm) as it's part of a transaction that I frequently roll back. \r\n\r\nBelow is my customImplementation code of the repository \r\n\r\n```\r\n@Repository\r\n@Slf4j\r\npublic class PropositionRepositoryCustomImpl implements PropositionRepositoryCustom {\r\n    private final Session session;\r\n\r\n    @SuppressWarnings(\"SpringJavaInjectionPointsAutowiringInspection\") // OGM Session is conditional and throws off IntelliJ IDE\r\n    public PropositionRepositoryCustomImpl(Session session) {\r\n        this.session = session;\r\n    }\r\n\r\n\r\n    @Override\r\n    public void runFile(UUID graphId){\r\n        String apocQuery = String.format(\"call apoc.cypher.runFile(\\\"/props-withnmodphrase.cypher\\\", {parameters: {graphId: '%s'}})\", graphId.toString());\r\n        log.debug(apocQuery);\r\n        session.query(apocQuery, Map.of(), false);\r\n    }\r\n}\r\n```\r\n\r\nand the code in my java app that calls the function\r\n\r\n```\r\n    public List<Proposition> extractPropositions(CoreSentence coreSentence){\r\n        return transactionTemplate.execute(new TransactionCallback<List<Proposition>>() {\r\n            @Override\r\n            public List<Proposition> doInTransaction(TransactionStatus status) {\r\n                UUID graphId = createParseGraph(coreSentence);\r\n                    propositionRepository.runFile(graphId);\r\n\r\n\r\n\r\n                List<Proposition> propositions = propositionRepository.findAllByGraphId(graphId);\r\n                //\r\n                if (isDeleteGraphAfterExtraction()) {\r\n                    status.setRollbackOnly();\r\n                }\r\n                return propositions;\r\n            }\r\n        });\r\n    }\r\n```\r\n\r\n- Expected behavior \r\nExecute a apoc.cypher.runFile call inside a OGM repository\r\n\r\n- Actual behavior\r\nno errors are returned, however the cypher file is not run. \r\n\r\n\r\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12501", "title": "db.labels() does not list all labels accessible by a user", "closed": "2020-06-09 14:02:09", "commitsDetails": [], "commits": {}, "ttf": 37.000277777777775, "created": "2020-05-03 08:12:09", "user": "luanne", "body": "When READ and TRAVERSE privileges are granted on a specific label, only that label is returned in `db.labels()` and also shown in the browser Database Information->Node Labels section.\r\nIt should also return labels of nodes which have multiple labels, including the one which has been granted permissions.\r\n\r\nEither that, or allowing access to a node with multiple labels where the user has privileges to access just one label, is a bug. Not sure what principle is used here.\r\n\r\n**Neo4j Version:** 4.0.3\r\n**Operating System:** MacOS Mohave\r\n**API:** Cypher, Neo4j Browser\r\n\r\n### Steps to reproduce\r\nSet up data as follows:\r\n\r\n```\r\nCREATE (n:Review:IMDB {name:\"imdb review 1\"});\r\n\r\nCREATE (n:Movie:Netflix {name:\"netflix movie 1\"});\r\n\r\nCREATE (n:Movie:IMDB {name:\"imdb movie 1\"});\r\n\r\nCREATE USER luanne\r\nSET PASSWORD 'luanne' CHANGE NOT REQUIRED;\r\n\r\nCREATE USER netflix\r\nSET PASSWORD 'netflix' CHANGE NOT REQUIRED;\r\n\r\nCREATE USER imdb\r\nSET PASSWORD 'imdb' CHANGE NOT REQUIRED;\r\n\r\nCREATE ROLE netflixRole;\r\n\r\nCREATE ROLE imdbRole;\r\n\r\nGRANT READ {*} ON GRAPH neo4j NODES Netflix TO netflixRole;\r\n\r\nGRANT TRAVERSE ON GRAPH neo4j NODES Netflix TO netflixRole\r\n\r\nGRANT READ {*} ON GRAPH neo4j NODES IMDB TO imdbRole;\r\n\r\nGRANT TRAVERSE ON GRAPH neo4j NODES IMDB TO imdbRole;\r\n\r\nGRANT ACCESS ON DATABASE neo4j TO imdbRole;\r\n\r\nGRANT ACCESS ON DATABASE neo4j TO netflixRole;\r\n\r\nGRANT ROLES imdbRole,netflixRole to luanne;\r\n\r\nGRANT ROLES netflixRole to netflix;\r\n\r\nGRANT ROLES imdbRole to imdb;\r\n\r\n```\r\n\r\nLog in as `imdb` and check the labels displayed in the Neo4j browser: It shows only `IMDB` but not `Movie` and `Review`.\r\n\r\n`call db.labels()` also returns only `IMDB`\r\n\r\nBut\r\n\r\n```\r\nMATCH (n)\r\nWITH DISTINCT labels(n) AS labels\r\nUNWIND labels AS label\r\nRETURN DISTINCT label ORDER BY label\r\n```\r\nreturns\r\n`IMDB`, `Movie`, `Review`\r\n\r\nand `MATCH (n:Movie) return n` also returns the movie node.\r\n\r\n\r\n### Expected behavior\r\nEither `IMDB`, `Movie`, `Review` should be returned by `db.labels()` and shown in the database information of the Neo4j browser OR, this is expected behaviour and I should _not_ be able to either\r\n`MATCH (n:Movie) return n` \r\n\r\n or\r\n\r\n```\r\nMATCH (n)\r\nWITH DISTINCT labels(n) AS labels\r\nUNWIND labels AS label\r\nRETURN DISTINCT label ORDER BY label\r\n```\r\n\r\n\r\n### Actual behavior\r\nSee above\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12500", "title": "Neo4j Desktop - Frequent JS errors ", "closed": "2020-05-02 12:49:52", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2020-05-02 11:20:50", "user": "luanne", "body": "JS errors (see attached screenshot) pop up very frequently\r\n\r\n**Neo4j Desktop Version:** 1.2.7 (1.2.7.1676)\r\n**Operating System:** MacOS Mohave\r\n\r\nSteps to reproduce\r\n1. Open Neo4j Desktop\r\n2. Perform usual operations- start a database, use the browser etc.\r\n\r\n### Expected behavior\r\nNo errors pop up\r\n\r\n### Actual behavior\r\nThe following error frequently pops up\r\n![image](https://user-images.githubusercontent.com/1242476/80862741-72578280-8c88-11ea-90c1-cfe24af23588.png)\r\n\r\n"}, {"labels": ["bug", "team-kernel"], "filteredCommits": ["8c65c2c79c0241a665f70984cdaca138a1f8b43e"], "url": "https://github.com/neo4j/neo4j/issues/12498", "gitStatsSummary": {"insertions": 8, "gitFilesChange": 1, "lines": 8, "deletions": 0}, "numCommits": 1, "commits": {"8c65c2c79c0241a665f70984cdaca138a1f8b43e": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}, "1760f37bb26df96466ff6e95d884e6329518c4db": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}}, "ttf": 24.00027777777778, "user": "amitabak-MA", "changesInPackagesSPOON": ["org.neo4j.internal.batchimport.store.BatchingNeoStores.createNew()", "org.neo4j.internal.batchimport.store.BatchingNeoStores.deleteCountsStore()", "org.neo4j.internal.batchimport.store.BatchingNeoStores.buildCountsStore(org.neo4j.internal.counts.CountsBuilder,org.neo4j.io.pagecache.tracing.PageCacheTracer,org.neo4j.io.pagecache.tracing.cursor.PageCursorTracer,org.neo4j.memory.MemoryTracker)"], "changesInPackagesGIT": ["community/record-storage-engine/src/main/java/org/neo4j/internal/batchimport/store"], "body": "## Guidelines\r\n\r\nPlease note that GitHub issues are only meant for bug reports/feature requests. \r\nIf you have questions on how to use Neo4j, please ask on [StackOverflow](https://stackoverflow.com/questions/tagged/neo4j) instead of creating an issue here.\r\n\r\nTo help us understand your issue, please specify important details, primarily:\r\n\r\n- Neo4j version: 4.0.3\r\n- Operating system: (for example Windows 95/Ubuntu 16.04) Mac catalina\r\n- API/Driver: (for example Cypher/Java API/Python driver vX.Y.Z)\r\n- **Steps to reproduce**\r\nGlobal JVM setting: openjdk version \"11.0.3\" 2019-04-16\r\nbulk import to a new DB using bin/neo4j-admin import\r\nresulted in \r\nImported:\r\n  16512899 nodes\r\n  145435092 relationships\r\n  194973789 properties\r\n\r\nAfter the import finishes open desktop and , start the DB and run the following queries:\r\n\r\n1) call db.labels() - results in \"(no changes, no records)\"\r\n2) match(n) return labels(n) limit 2... This resulted in 2 lables being returned as expected\r\n![image](https://user-images.githubusercontent.com/52035400/80791659-02b79980-8b9b-11ea-8267-32e83e17a155.png)\r\nAt the same time the desktop shows the following message regarding no lables in the DB\r\n![image](https://user-images.githubusercontent.com/52035400/80791700-211d9500-8b9b-11ea-8e31-27bbc05d9c9e.png)\r\n\r\n3) run the following query  \"match(n:Users) return n limit 1\"\r\n    I was expecting to return a single user but it returns \"(no changes, no records)\"\r\n\r\n4) desktop shows there are relationships inspite bulkimport result showing they were imported \r\n![image](https://user-images.githubusercontent.com/52035400/80793275-5a580400-8b9f-11ea-810f-d1fcb895344e.png)\r\n  \r\n- Expected behavior. labels to be usable after bulk import \r\n- Actual behavior. labels are \"semi-known\".. on one hand i can get the label of a node .. on the other I cant use it in queries \r\n", "filteredCommitsReason": {"duplicated": 1, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 3, "UPD": 0, "TOT": 3, "DEL": 0, "INS": 3, "spoonFilesChanged": 1, "MOV": 0}, "title": "neo 4.0.3 - labels not usable after bulk import ", "statsSkippedReason": "", "closed": "2020-05-25 11:22:41", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-05-25 11:00:12", "commitHash": "8c65c2c79c0241a665f70984cdaca138a1f8b43e", "commitParents": ["fd7536afd37c67cc37ff48c7b4d15cbc68208897"], "commitGHEventType": "closed", "nameRev": "8c65c2c79c0241a665f70984cdaca138a1f8b43e remotes/origin/4.1~170", "commitGitStats": [{"insertions": 54, "lines": 54, "filePath": "community/community-it/record-storage-engine-it/src/test/java/org/neo4j/internal/batchimport/store/BatchingNeoStoresTest.java", "deletions": 0}, {"insertions": 8, "lines": 8, "filePath": "community/record-storage-engine/src/main/java/org/neo4j/internal/batchimport/store/BatchingNeoStores.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.internal.batchimport.store.BatchingNeoStores.createNew()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.internal.batchimport.store.BatchingNeoStores.deleteCountsStore()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.internal.batchimport.store.BatchingNeoStores.buildCountsStore(org.neo4j.internal.counts.CountsBuilder,org.neo4j.io.pagecache.tracing.PageCacheTracer,org.neo4j.io.pagecache.tracing.cursor.PageCursorTracer,org.neo4j.memory.MemoryTracker)"}], "spoonFilePath": "BatchingNeoStores.java"}, {"spoonMethods": [], "spoonFilePath": "BatchingNeoStoresTest.java"}], "commitMessage": "Ensures counts store is properly built on import into empty db\n\nIn the case where there was an existing database, although with\nnothing in it the counts store wouldn't be rebuilt properly after\nthat import.\n\nFixes #12498\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2020-05-07 12:47:42"}, {"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-05-20 08:14:18", "commitHash": "1760f37bb26df96466ff6e95d884e6329518c4db", "commitParents": ["fb63f36c7e308f786370f834f4806b45ad06d942"], "commitGHEventType": "referenced", "nameRev": "1760f37bb26df96466ff6e95d884e6329518c4db tags/4.0.5~12", "commitGitStats": [{"insertions": 54, "lines": 54, "filePath": "community/community-it/record-storage-engine-it/src/test/java/org/neo4j/internal/batchimport/store/BatchingNeoStoresTest.java", "deletions": 0}, {"insertions": 7, "lines": 7, "filePath": "community/record-storage-engine/src/main/java/org/neo4j/internal/batchimport/store/BatchingNeoStores.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.internal.batchimport.store.BatchingNeoStores.createNew()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.internal.batchimport.store.BatchingNeoStores.deleteCountsStore()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.internal.batchimport.store.BatchingNeoStores.buildCountsStore(org.neo4j.internal.counts.CountsBuilder)"}], "spoonFilePath": "BatchingNeoStores.java"}, {"spoonMethods": [], "spoonFilePath": "BatchingNeoStoresTest.java"}], "commitMessage": "Ensures counts store is properly built on import into empty db\n\nIn the case where there was an existing database, although with\nnothing in it the counts store wouldn't be rebuilt properly after\nthat import.\n\nFixes #12498\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2020-05-07 12:47:42"}], "created": "2020-05-01 08:05:40"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12484", "title": "Neo.DatabaseError.General.UnknownError Unfortunately, the planner was unable to find a plan within the constraints provided.", "closed": "2020-06-16 16:56:59", "commitsDetails": [], "commits": {}, "ttf": 53.000277777777775, "created": "2020-04-24 13:29:35", "user": "Andy2003", "body": "Given: Movie example Dataset\r\nCypher: \r\n\r\n    MATCH\r\n      (movie:Movie)\r\n    OPTIONAL MATCH\r\n      (movie)<-[:DIRECTED]-(a:Person),\r\n      (movie)<-[:DIRECTED]-(b:Person)\r\n      WHERE a.name = \"Lilly Wachowski\" AND b.name = \"Lana Wachowski\"\r\n    OPTIONAL MATCH\r\n      (movie)<-[:DIRECTED]-(c:Person)\r\n      WHERE c.name = \"Clint Eastwood\"\r\n    WITH\r\n      DISTINCT movie,\r\n       count(a) as countA,\r\n       count(b) as countB,\r\n       count(c) as countC\r\n    RETURN DISTINCT movie { .title }, countA, countB, countC\r\n\r\nFails with neo4j `4.0.3` with following error:\r\n\r\n    Unfortunately, the planner was unable to find a plan within the constraints provided.\r\n    Try increasing the config values `unsupported.cypher.idp_solver_table_threshold`\r\n    and `unsupported.cypher.idp_solver_duration_threshold` to allow\r\n    for a larger sub-plan table and longer planning time.\r\n\r\nIn neo4j `3.5.17` this query works well."}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12468", "title": "Not able to run neosemantics in the neo4j 4.0.3 version.", "closed": "2020-04-14 07:27:04", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2020-04-10 10:18:32", "user": "aravindkota", "body": "Hi all,\r\n\r\nI have added the procedure for semantics by downloading the latest jar file from neolabs repo. But When running the following command 'call n10s.graphconfig.init()' I am getting 'Neo.ClientError.Procedure.ProcedureNotFound' error message. \r\n\r\nI am new to neo4j and am trying to load rdf data into the databse. Any help would be appreciated."}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12454", "title": "org.neo4j.driver.exceptions.ClientException Unknown function 'ID'", "closed": "2020-04-14 07:05:44", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2020-04-07 09:22:38", "user": "kaplan441", "body": "I cloned the belowing example code.\r\nhttps://github.com/neo4j-examples/movies-java-spring-data-neo4j\r\n\r\nI started same application in my computer then it throwed an exception.\r\n\r\norg.neo4j.driver.exceptions.ClientException Unknown function 'ID'\r\n\r\n-Neo4j version : 3.5.16\r\n-Spring boot example code and pom.xml dependency are same in GitHub link\r\n-Computer language is Turkish\r\n\r\nPlease help me."}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/12441", "title": "Execution of complex query fails using the slotted runtime", "closed": "2020-04-06 07:10:48", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2020-03-30 11:32:48", "user": "szarnyasg", "body": "### Environment\r\n\r\n- Neo4j version: 4.0.1 Enterprise, default runtime (slotted)\r\n- Operating system: Ubuntu 18.04\r\n- JDK: OpenJDK Runtime Environment AdoptOpenJDK (build 11.0.4+11)\r\n- API/Driver: web UI\r\n\r\n### Steps to reproduce\r\n\r\nThe following query fails:\r\n\r\n```\r\nCALL {\r\n    MATCH (pX:Person)\r\n    RETURN pX\r\n}\r\nWITH collect(pX) AS pXs\r\nUNWIND pXs AS p1\r\nMATCH\r\n  (p1)-[:HAS_INTEREST]->(t:Tag),\r\n  (p1)-[:KNOWS*1..2]-(p2)\r\nRETURN p1, count(DISTINCT t) AS numTags\r\n```\r\n\r\nThe error is:\r\n\r\n```console\r\nNeo.DatabaseError.Statement.ExecutionFailed\r\nTried overwriting already taken variable name p1 as LongSlot(0,false,Node) (was: RefSlot(1,true,Any))\r\n```\r\n\r\nRemarks:\r\n* I was originally working on an LDBC dataset but the error can be reproduced in an empty database.\r\n* I tried to trim down the query as much as possible, however, all of the clauses/functions in the query (subquery, `UNWIND`, `count` + `DISTINCT`, `KNOWS*1..2`) are necessary to reproduce this error.\r\n* As the error message suggests, the error occurs in the `slotted` runtime, and putting `CYPHER runtime=interpreted` at the start of the query causes the error to go away. However, the `pipelined` runtime also fails with the same error."}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/12440", "title": "Query returns org.neo4j.cypher.internal.physicalplanning.ast.NullCheckReference ", "closed": "2020-04-06 07:38:41", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2020-03-30 09:08:57", "user": "conker84", "body": "In the Neo4j Spark Connector we have the following query in order to generate a test dataset that always worked:\r\n\r\n```\r\nUNWIND range(1,100) as id\r\nCREATE (p:Person {id:id,ids:[id,id]})\r\nWITH collect(p) as people\r\nUNWIND people as p1\r\nUNWIND range(1,10) as friend\r\nWITH p1, people[(p1.id + friend) % size(people)] as p2\r\nCREATE (p1)-[:KNOWS]->(p2)\r\n```\r\n\r\nhttps://github.com/neo4j-contrib/neo4j-spark-connector/blob/0ace7dbf8a7bf8c43800dca3fc6587d7cb9b914c/src/test/scala/org/neo4j/spark/Neo4jSparkTest.scala#L18-L26\r\n\r\n**Neo4j Version:** 4.0.2\r\n**Operating System:** Mac OS Catalina, but I used Docker Image `neo4j:enterprise`\r\n**API:** Docker Image `neo4j:enterprise`\r\n\r\n### Expected behavior\r\nGenerate a dataset according to the query\r\n\r\n### Actual behavior\r\nIn the Neo4j browser I get the following error:\r\n\r\n<img width=\"1257\" alt=\"Schermata 2020-03-30 alle 11 04 38\" src=\"https://user-images.githubusercontent.com/1833335/77894931-48b8cf00-7276-11ea-8e73-80740ceb32d0.png\">\r\n\r\nThat is consistent with the exception thrown by the java Driver:\r\n\r\n```\r\norg.neo4j.driver.exceptions.DatabaseException: org.neo4j.cypher.internal.physicalplanning.ast.NullCheckReference\r\n\tat org.neo4j.driver.internal.util.ErrorUtil.newNeo4jError(ErrorUtil.java:84)\r\n\tat org.neo4j.driver.internal.async.inbound.InboundMessageDispatcher.handleFailureMessage(InboundMessageDispatcher.java:105)\r\n\tat org.neo4j.driver.internal.messaging.v1.MessageReaderV1.unpackFailureMessage(MessageReaderV1.java:83)\r\n\tat org.neo4j.driver.internal.messaging.v1.MessageReaderV1.read(MessageReaderV1.java:59)\r\n\tat org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:83)\r\n\tat org.neo4j.driver.internal.async.inbound.InboundMessageHandler.channelRead0(InboundMessageHandler.java:35)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.SimpleChannelInboundHandler.channelRead(SimpleChannelInboundHandler.java:99)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:321)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:295)\r\n\tat org.neo4j.driver.internal.async.inbound.MessageDecoder.channelRead(MessageDecoder.java:47)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:321)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:308)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:422)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:276)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:355)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:377)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:363)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:163)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:714)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:650)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:576)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:493)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:989)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\tat org.neo4j.driver.internal.shaded.io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n```"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12438", "title": "Existential subquery and OR in WHERE clause cause UnknownError", "closed": "2020-03-30 07:48:33", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2020-03-26 12:16:20", "user": "ielatif", "body": "> An UnknownError occurs when I use EXISTS {...} in conjunction with OR in a WHERE clause. Is this a bug or am I missing something?\r\n> \r\n> Create sample nodes\r\n> \r\n> CREATE (a:A { uuid:'uuid1', foo:true })-[:KNOWS]->(b:B { uuid:'uuid2' })\r\n> Sample query\r\n> \r\n> MATCH (a:A { uuid:'uuid1' }),\r\n> (b:B { uuid:'uuid2' })\r\n> WHERE a.foo = TRUE\r\n> OR EXISTS {\r\n>   MATCH (a)-[:KNOWS]->(b)\r\n> }\r\n> RETURN a\r\n> Error\r\n> \r\n> Neo.DatabaseError.General.UnknownError\r\n> There should be at least one pattern expression\r\n\r\nhttps://stackoverflow.com/questions/60678772/existential-subquery-and-or-in-where-clause-cause-unknownerror\r\n\r\nIssue already fixed by @Lojjs https://github.com/neo4j/neo4j/commit/dc2065943bdfa236ccc87bdb5e051cce4f8bf523\r\n\r\nReporting this issue to share that it is known and solved.\r\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12434", "title": "Missing doc for config \"unsupported.cypher.idp_solver_table_threshold\"", "closed": "2020-04-27 10:04:34", "commitsDetails": [], "commits": {}, "ttf": 34.000277777777775, "created": "2020-03-24 09:25:14", "user": "fabio-510", "body": "I am getting this error:\r\n\r\n> Neo4jError: Unfortunately, the planner was unable to find a plan within the constraints provided.\r\n> Try increasing the config values `unsupported.cypher.idp_solver_table_threshold`\r\n> and `unsupported.cypher.idp_solver_duration_threshold` to allow\r\n> for a larger sub-plan table and longer planning time.\r\n\r\nHowever I cannot find these settings in the documentation configuration reference. The only reference about this config that I found was here: https://neo4j.com/developer/kb/manually-migrating-configuration-settings-from-neo4j-2x-to-neo4j-3x/\r\n\r\n- Neo4j version: 4.0.2 enterprise\r\n- Operating system: Origianl neo4j docker image\r\n- API/Driver: NodeJS 4.0.1\r\n- **Steps to reproduce**: N/A this is about documentation\r\n- Expected behavior. Documentation be present\r\n- Actual behavior. Documentation absent\r\n\r\n**Edit**\r\n\r\nThis cypher triggers it:\r\n```\r\nMATCH (p:elements:Person{polyglotID:'79224171-10e7-4162-a062-bded2c200572'})\r\nOPTIONAL MATCH (p) -[:has]->(av:elements:Avatar)\r\nCALL apoc.create.node(['Creation', 'Model', 'Personal'], {name: $name, polyglotID: $polyglotID, createdBy: $createdBy, identifierProperty: $identifierProperty, userLabels: $labelNames}) YIELD node as m\r\nWITH *\r\nUNWIND $modelItems as modelItem CALL apoc.create.node(['Artefact', 'ModelItem', 'Personal'], {name: modelItem.name, polyglotID: modelItem.polyglotID, identifierProperty: modelItem.identifierProperty, userLabels: modelItem.labelNames, createdBy: $createdBy}) YIELD node as mi\r\nWITH mi,m,p,av\r\nMERGE (mi) <-[:contains]-(m) RETURN m{.*, createdByPerson: p{.*, avatar:av.polyglotID},  assignees: []}\r\n```"}, {"labels": ["bug", "team-cypher"], "filteredCommits": ["ebb8708c42337b949e2a8a44b4232251fb64f8f1"], "url": "https://github.com/neo4j/neo4j/issues/12433", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"ebb8708c42337b949e2a8a44b4232251fb64f8f1": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}, "972daeb1d6e2ba0edb31c1c05a3f14fcfeee0506": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 5.000277777777778, "user": "Brakebein", "changesInPackagesGIT": [], "body": "**Neo4j Version:** 4.0.2\r\n**Operating System:** Windows Server 2012 R2\r\n**API:** neo4j-driver 4.0.1 (nodejs)\r\n\r\nI found another bug that is very related to #12398 and #12399 . The query also uses `OPTIONAL MATCH` and map projections. And again, the error is thrown after executing the query 10 times. After clearing the query cache it will work another 10 times. The error output is slightly different:\r\n\r\n```\r\nNeo.ClientError.Statement.TypeError\r\nNeo4jError: Can't coerce `NO_VALUE` to Map\r\n```\r\n\r\n**Cypher query:**\r\n\r\n```sql\r\nMATCH (:User:RIVAD {id: $userId})<-[:HAS_OWNER|HAS_MEMBER]-(study:Study {id: $studyId})\r\n    <-[:PART_OF]-(doc:TextDocument {id: $docId})-[:HAS_SEGMENT]->(seg:TextSegment {id: $segId})\r\n    <-[:HAS_INPUT]-(trans:TextTransformation)-[:HAS_OUTPUT]->(gist:Gist)\r\nOPTIONAL MATCH (trans)-[:APPLIES]->(replace:Replacement)-[:CONSISTS_OF]->(snippet:TextSnippet),\r\n               (replace)-[ruRep:CREATED_BY]->(userRep:User)\r\nWITH seg, trans, gist, collect(replace {.*, snippet, meta: {user: userRep.id, userName: userRep.name, timestamp: toString(ruRep.timestamp)}}) AS replacements\r\nOPTIONAL MATCH (trans)-[:APPLIES]->(remove:Removal)-[:CONSISTS_OF]->(snippet:TextSnippet),\r\n               (remove)-[ruRem:CREATED_BY]->(userRem:User)\r\nRETURN trans.id AS id,\r\n       seg.value AS input,\r\n       gist.value AS output,\r\n       replacements,\r\n       collect(remove {.*, snippet, meta: {user: userRem.id, userName: userRem.name, timestamp: toString(ruRem.timestamp)}}) AS removals\r\n```\r\n\r\n**Neo4j `query.log`:**\r\n\r\n```\r\n2020-03-21 12:29:26.170+0000 ERROR id:408 - 133 ms: bolt-session\tbolt\tneo4j-javascript/0.0.0-dev\t\tclient/127.0.0.1:50693\tserver/127.0.0.1:7687>\trivad - neo4j - \r\n\t\tMATCH (:User:RIVAD {id: $userId})<-[:HAS_OWNER|HAS_MEMBER]-(study:Study {id: $studyId})<-[:PART_OF]-(doc:TextDocument {id: $docId})-[:HAS_SEGMENT]->(seg:TextSegment {id: $segId})<-[:HAS_INPUT]-(trans:TextTransformation)-[:HAS_OUTPUT]->(gist:Gist)\r\n\t\tOPTIONAL MATCH (trans)-[:APPLIES]->(replace:Replacement)-[:CONSISTS_OF]->(snippet:TextSnippet),\r\n\t\t\t\t\t   (replace)-[ruRep:CREATED_BY]->(userRep:User)\r\n\t\tWITH seg, trans, gist, collect(replace {.*, snippet, meta: {user: userRep.id, userName: userRep.name, timestamp: toString(ruRep.timestamp)}}) AS replacements\r\n\t\tOPTIONAL MATCH (trans)-[:APPLIES]->(remove:Removal)-[:CONSISTS_OF]->(snippet:TextSnippet),\r\n\t\t\t\t\t   (remove)-[ruRem:CREATED_BY]->(userRem:User)\r\n\t\tRETURN trans.id AS id,\r\n\t\t\t   seg.value AS input,\r\n\t\t\t   gist.value AS output,\r\n\t\t\t   replacements,\r\n\t\t\t   collect(remove {.*, snippet, meta: {user: userRem.id, userName: userRem.name, timestamp: toString(ruRem.timestamp)}}) AS removals - {studyId: 'study_8m-OOmP47', segId: 'textSegment_mGNyTJzn-', userId: 'user_aH6up2P6j', docId: 'textDocument_5BylXYZDi'} - {} Can't coerce `NO_VALUE` to Map\r\norg.neo4j.exceptions.CypherTypeException: Can't coerce `NO_VALUE` to Map\r\n\tat org.neo4j.cypher.operations.CypherCoercions.cantCoerce(CypherCoercions.java:287)\r\n\tat org.neo4j.cypher.operations.CypherCoercions.asMapValue(CypherCoercions.java:272)\r\n\tat org.neo4j.codegen.Expression9/0x0000000101a61840.evaluate(Unknown Source)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.expressions.CompileWrappingExpression.apply(CompiledExpressionConverter.scala:172)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.AggregationOperator$AggregationMapperOperator$State.preAggregate(AggregationOperator.scala:135)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.AggregationOperator$AggregationMapperOperator$State.$anonfun$prepareOutput$1(AggregationOperator.scala:119)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.state.ArgumentStateMap$.$anonfun$map$1(ArgumentStateMap.scala:349)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.state.ArgumentStateMap$.$anonfun$map$1$adapted(ArgumentStateMap.scala:349)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.state.ArgumentStateMap$.foreach(ArgumentStateMap.scala:369)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.state.ArgumentStateMap$.map(ArgumentStateMap.scala:349)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.AggregationOperator$AggregationMapperOperator$State.prepareOutput(AggregationOperator.scala:119)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.AggregationOperator$AggregationMapperOperator$State.prepareOutput(AggregationOperator.scala:96)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.OutputOperatorState.prepareOutputWithProfile(OutputOperator.scala:53)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.OutputOperatorState.prepareOutputWithProfile$(OutputOperator.scala:44)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.AggregationOperator$AggregationMapperOperator$State.prepareOutputWithProfile(AggregationOperator.scala:96)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.PipelineTask.executeOutputOperator(PipelineTask.scala:74)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.PipelineTask.executeWorkUnit(PipelineTask.scala:50)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.Worker.executeTask(Worker.scala:128)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.Worker.workOnQuery(Worker.scala:84)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.execution.CallingThreadExecutingQuery.request(CallingThreadExecutingQuery.scala:30)\r\n\tat org.neo4j.cypher.internal.PipelinedRuntime$PipelinedRuntimeResult.request(PipelinedRuntime.scala:326)\r\n\tat org.neo4j.cypher.internal.result.StandardInternalExecutionResult.request(StandardInternalExecutionResult.scala:88)\r\n\tat org.neo4j.cypher.internal.result.ClosingExecutionResult.request(ClosingExecutionResult.scala:135)\r\n\tat org.neo4j.bolt.runtime.AbstractCypherAdapterStream.handleRecords(AbstractCypherAdapterStream.java:105)\r\n\tat org.neo4j.bolt.v3.messaging.ResultHandler.onPullRecords(ResultHandler.java:41)\r\n\tat org.neo4j.bolt.v4.messaging.PullResultConsumer.consume(PullResultConsumer.java:42)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.TransactionStateMachine$State.consumeResult(TransactionStateMachine.java:511)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.TransactionStateMachine$State$2.streamResult(TransactionStateMachine.java:355)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.TransactionStateMachine.streamResult(TransactionStateMachine.java:92)\r\n\tat org.neo4j.bolt.v4.runtime.InTransactionState.processStreamResultMessage(InTransactionState.java:73)\r\n\tat org.neo4j.bolt.v4.runtime.AbstractStreamingState.processUnsafe(AbstractStreamingState.java:49)\r\n\tat org.neo4j.bolt.v4.runtime.InTransactionState.processUnsafe(InTransactionState.java:60)\r\n\tat org.neo4j.bolt.v3.runtime.FailSafeBoltStateMachineState.process(FailSafeBoltStateMachineState.java:48)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.AbstractBoltStateMachine.nextState(AbstractBoltStateMachine.java:143)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.AbstractBoltStateMachine.process(AbstractBoltStateMachine.java:91)\r\n\tat org.neo4j.bolt.messaging.BoltRequestMessageReader.lambda$doRead$1(BoltRequestMessageReader.java:90)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.lambda$enqueue$0(DefaultBoltConnection.java:151)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatchInternal(DefaultBoltConnection.java:240)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:175)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:165)\r\n\tat org.neo4j.bolt.runtime.scheduling.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:212)\r\n\tat org.neo4j.bolt.runtime.scheduling.ExecutorBoltScheduler.lambda$scheduleBatchOrHandleError$2(ExecutorBoltScheduler.java:195)\r\n\tat java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Unknown Source)\r\n```\r\n", "filteredCommitsReason": {"duplicated": 1, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Neo4jError: Can't coerce `NO_VALUE` to Map", "statsSkippedReason": "", "closed": "2020-03-27 11:24:54", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-03-31 21:54:55", "commitHash": "ebb8708c42337b949e2a8a44b4232251fb64f8f1", "commitParents": ["8ec769a80d8abdf24d35436c79bd9d51fd4b5791"], "commitGHEventType": "referenced", "nameRev": "ebb8708c42337b949e2a8a44b4232251fb64f8f1 remotes/origin/4.1~825", "commitGitStats": [{"insertions": 12, "lines": 12, "filePath": "community/cypher/spec-suite-tools/src/test/resources/acceptance/features/OptionalMatchAcceptance.feature", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix compiled-expression bug with aggregation and map-projection\n\nchangelog: Fixes #12433, when combining OPTIONAL MATCH, aggregation and map-projection, in some scenarios we\nfailed with `Can't coerce `NO_VALUE` to Map`.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2020-03-23 14:00:20"}, {"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-03-26 13:29:41", "commitHash": "972daeb1d6e2ba0edb31c1c05a3f14fcfeee0506", "commitParents": ["05149d1dc6b1224a3d52b986173c20299309fd8a"], "commitGHEventType": "closed", "nameRev": "972daeb1d6e2ba0edb31c1c05a3f14fcfeee0506 tags/4.0.4~70", "commitGitStats": [{"insertions": 12, "lines": 12, "filePath": "community/cypher/spec-suite-tools/src/test/resources/acceptance/features/OptionalMatchAcceptance.feature", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix compiled-expression bug with aggregation and map-projection\n\nchangelog: Fixes #12433, when combining OPTIONAL MATCH, aggregation and map-projection, in some scenarios we\nfailed with `Can't coerce `NO_VALUE` to Map`.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2020-03-23 14:00:20"}], "created": "2020-03-21 15:00:30"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12432", "title": "[4.0.2][Security] Deny then Grant access to system db prevents user from connecting", "closed": "2020-03-23 08:17:20", "commitsDetails": [], "commits": {}, "ttf": 2.000277777777778, "created": "2020-03-20 19:53:13", "user": "ikwattro", "body": "When we deny access to the `system` db to a role, it prevents a user having that role to connect to the neo4j server. \r\nWhen granting again access to the db for the same role, the same user is still unable to connect to the neo4j server\r\n\r\n**Neo4j Version:** 4.0.2\r\n**Operating System:** OSX\r\n**API:** cypher-shell\r\n\r\n### Steps to reproduce\r\n\r\nCREATE USER charlie SET PASSWORD 'secret1' CHANGE NOT REQUIRED;\r\nCREATE ROLE analysts\r\nGRANT ROLE analysts TO charlie\r\nGRANT ACCESS ON DATABASE neo4j TO analysts\r\n\r\n--\r\nDENY ACCESS ON DATABASE system TO analysts\r\n```\r\n# cypher-shell\r\nusername: charlie\r\npassword: *******\r\nDatabase access is not allowed for user 'charlie' with roles [analysts].\r\n```\r\n\r\nGRANT ACCESS ON DATABASE system TO analysts\r\n\r\n```\r\n# cypher-shell\r\nusername: charlie\r\npassword: *******\r\nDatabase access is not allowed for user 'charlie' with roles [analysts].\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe user `charlie` should be able to connect to the Neo4j server after the role `analysts` has been granted access again to the `system` database.\r\n\r\n### Actual behavior\r\n\r\nUser `charlie` cannot connect to the Neo4j server instance while he should have the privileges to.\r\n"}, {"labels": ["bug", "fabric"], "url": "https://github.com/neo4j/neo4j/issues/12427", "title": "Neo4j 4.0.1 gets initialized, but fails to start", "closed": "2020-06-01 15:30:34", "commitsDetails": [], "commits": {}, "ttf": 78.00027777777778, "created": "2020-03-15 13:20:18", "user": "StrangeTcy", "body": "Running `neo4j start` without any plugins enabled (an empty `/var/lib/neo4j/plugins` folder) works fine, but adding any plugin leads to the following error:\r\n\r\n> 2020-03-15 13:04:18.343+0000 INFO  ======== Neo4j 4.0.1 ========\r\n> 2020-03-15 13:04:18.349+0000 INFO  Starting...\r\n> 2020-03-15 13:04:27.211+0000 INFO  Called db.clearQueryCaches(): Query cache already empty.\r\n> 2020-03-15 13:04:37.096+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabaseService@5d1907fb' was successfully initialized, but failed to start. Please see the attached cause exception \"class org.neo4j.driver.internal.handlers.pulln.AutoPullResponseHandler can not implement org.neo4j.driver.internal.handlers.PullAllResponseHandler, because it is not an interface (org.neo4j.driver.internal.handlers.PullAllResponseHandler is in unnamed mod\". Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabaseService@5d1907fb' was successfully initialized, but failed to start. Please see the attached cause exception \"class org.neo4j.driver.internal.handlers.pulln.AutoPullResponseHandler can not implement org.neo4j.driver.internal.handlers.PullAllResponseHandler, because it is not an interface (org.neo4j.driver.internal.handlers.PullAllResponseHandler is in unnamed mod\".\r\n> org.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabaseService@5d1907fb' was successfully initialized, but failed to start. Please see the attached cause exception \"class org.neo4j.driver.internal.handlers.pulln.AutoPullResponseHandler can not implement org.neo4j.driver.internal.handlers.PullAllResponseHandler, because it is not an interface (org.neo4j.driver.internal.handlers.PullAllResponseHandler is in unnamed mod\".\r\n> \tat org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:45)\r\n> \tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:164)\r\n> \tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:114)\r\n> \tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:89)\r\n> \tat com.neo4j.server.enterprise.EnterpriseEntryPoint.main(EnterpriseEntryPoint.java:25)\r\n> Caused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabaseService@5d1907fb' was successfully initialized, but failed to start. Please see the attached cause exception \"class org.neo4j.driver.internal.handlers.pulln.AutoPullResponseHandler can not implement org.neo4j.driver.internal.handlers.PullAllResponseHandler, because it is not an interface (org.neo4j.driver.internal.handlers.PullAllResponseHandler is in unnamed mod\".\r\n> \tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:465)\r\n> \tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n> \tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:157)\r\n> \t... 3 more\r\n> Caused by: java.lang.RuntimeException: Error starting database server at /var/lib/neo4j/data/databases\r\n> \tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.startDatabaseServer(DatabaseManagementServiceFactory.java:167)\r\n> \tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.build(DatabaseManagementServiceFactory.java:145)\r\n> \tat com.neo4j.server.database.EnterpriseGraphFactory.newDatabaseManagementService(EnterpriseGraphFactory.java:38)\r\n> \tat org.neo4j.server.database.LifecycleManagingDatabaseService.start(LifecycleManagingDatabaseService.java:88)\r\n> \tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:444)\r\n> \t... 5 more\r\n> Caused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.procedure.impl.GlobalProceduresRegistry@55e2fe3c' was successfully initialized, but failed to start. Please see the attached cause exception \"class org.neo4j.driver.internal.handlers.pulln.AutoPullResponseHandler can not implement org.neo4j.driver.internal.handlers.PullAllResponseHandler, because it is not an interface (org.neo4j.driver.internal.handlers.PullAllResponseHandler is in unnamed mod\".\r\n> \tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:465)\r\n> \tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n> \tat org.neo4j.graphdb.facade.DatabaseManagementServiceFactory.startDatabaseServer(DatabaseManagementServiceFactory.java:158)\r\n> \t... 9 more\r\n> Caused by: java.lang.IncompatibleClassChangeError: class org.neo4j.driver.internal.handlers.pulln.AutoPullResponseHandler can not implement org.neo4j.driver.internal.handlers.PullAllResponseHandler, because it is not an interface (org.neo4j.driver.internal.handlers.PullAllResponseHandler is in unnamed mod\r\n> \tat java.base/java.lang.ClassLoader.defineClass1(Native Method)\r\n> \tat java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1016)\r\n> \tat java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:174)\r\n> \tat java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:800)\r\n> \tat java.base/jdk.internal.loader.BuiltinClassLoader.findClassOnClassPathOrNull(BuiltinClassLoader.java:698)\r\n> \tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:621)\r\n> \tat java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:579)\r\n> \tat java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:178)\r\n> \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:575)\r\n> \tat java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:521)\r\n> \tat org.neo4j.procedure.impl.ProcedureJarLoader$1.fetchNextOrNull(ProcedureJarLoader.java:160)\r\n> \tat org.neo4j.procedure.impl.ProcedureJarLoader$1.fetchNextOrNull(ProcedureJarLoader.java:138)\r\n> \tat org.neo4j.collection.AbstractPrefetchingRawIterator.peek(AbstractPrefetchingRawIterator.java:50)\r\n> \tat org.neo4j.collection.AbstractPrefetchingRawIterator.hasNext(AbstractPrefetchingRawIterator.java:36)\r\n> \tat org.neo4j.procedure.impl.ProcedureJarLoader.loadProcedures(ProcedureJarLoader.java:111)\r\n> \tat org.neo4j.procedure.impl.ProcedureJarLoader.loadProceduresFromDir(ProcedureJarLoader.java:85)\r\n> \tat org.neo4j.procedure.impl.GlobalProceduresRegistry.start(GlobalProceduresRegistry.java:342)\r\n> \tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:444)\r\n> \t... 11 more\r\n> 2020-03-15 13:04:37.098+0000 INFO  Neo4j Server shutdown initiated by request\r\n\r\n- Neo4j version: 4.0.1\r\n- Operating system: Ubuntu 18.04\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12423", "title": "Reactome graph database loaded into Neo4j yesterday, but not today", "closed": "2020-03-06 21:31:53", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2020-03-06 20:26:18", "user": "dvklopfenstein", "body": "Using the helpful advice from https://github.com/gsviteri in https://github.com/neo4j/neo4j/issues/12408#issuecomment-594464431, I was able to load the Reactome database into Neo4j yesterday. Today I unsuccessfully tried all the same steps as in https://github.com/neo4j/neo4j/issues/12408.\r\n\r\nI am extremely motivated to use the Reactome database and hope to load it successfully. I have successfully loaded older versions of the Reactome database into Neo4j many times in the past, but it is not working out this time.\r\n\r\n**Neo4j Version:** neo4j-community-4.0.1  \r\n**Operating System:** Ubuntu 16.04.4 LTS  \r\n\r\n### Steps to reproduce\r\nPlease see https://github.com/neo4j/neo4j/issues/12408\r\n\r\n### Expected behavior\r\nI expect to see a large list of node labels in the *Node Label* section under *Database Information* seen in the image in the *Actual behavior* section. \r\n\r\n### Actual behavior\r\n![neo4j_load_unsuccessful](https://user-images.githubusercontent.com/7278188/76119180-e1806580-5fbc-11ea-916a-310613d6bb5c.png)\r\n\r\nHere is the neo4j.log file and the debug.log file:     \r\n[neo4j.log](https://github.com/neo4j/neo4j/files/4300271/neo4j.log)    \r\n[debug.log](https://github.com/neo4j/neo4j/files/4300272/debug.log)\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12417", "title": "db.schema.visualization() displays nonexistent relationships", "closed": "2020-03-09 07:49:21", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2020-03-03 19:48:08", "user": "numericOverflow", "body": "- Neo4j Server version: 4.0.0 (community)\r\n- Operating system: Windows server 2012R2\r\n- API/Driver: Cypher console web browser (Neo4j Browser version: 4.0.1)\r\n\r\n**NOTE**:  Neo4j Browser version: 4.0.3/Neo4j Server version: 4.0.1 (community) (latest version as of right now) also exhibits the same behavior described below.\r\n\r\n1. Load data\r\n2. Run call db.schema.visualization()\r\nThe example DB at neo4j console:  https://console.neo4j.org/r/nt3sgc\r\n\r\n```\r\ncreate (l1a:Level1 {name:'l1a'})\r\n,(l1b:Level1 {name: 'l1b'})\r\n,(l1c:Level1 {name: 'l1c'})\r\n,(l1d:Level1 {name: 'l1d'})\r\n,(l2a:Level2 {name: 'l2a'})\r\n,(l2b:Level2 {name:'l2b'})\r\n,(l3a:Level3 {name:'l3a'})\r\n,(l1a)-[:OWNED_BY]->(l2a)\r\n,(l1b)-[:OWNED_BY]->(l2a)\r\n,(l1c)-[:OWNED_BY]->(l2b)\r\n,(l1d)-[:OWNED_BY]->(l2b)\r\n,(l2a)-[:OWNED_BY]->(l3a)\r\n,(l2b)-[:OWNED_BY]->(l3a)\r\n;\r\n\r\nmatch (n1:Level1)-[:OWNED_BY]->(:Level1)\r\nRETURN count(n1) as cnt, 'count_L1_to_L1' as description\r\nUNION\r\nmatch (n2:Level2)-[:OWNED_BY]->(:Level2)\r\nRETURN count(n2) as cnt, 'count_L2_to_L2' as description\r\nUNION\r\nmatch (n3:Level3)-[:OWNED_BY]->(:Level3)\r\nRETURN count(n3) as cnt, 'count_L3_to_L3' as description\r\nUNION\r\nmatch (n4:Level1)-[:OWNED_BY]->(:Level2)\r\nRETURN count(n4) as cnt, 'count_L1_to_L2' as description\r\nUNION \r\nmatch (n5:Level2)-[:OWNED_BY]->(:Level3)\r\nRETURN count(n5) as cnt, 'count_L2_to_L3' as description\r\n;\r\n\r\ncall db.schema.visualization()\r\n```\r\n\r\nHere is the database contents as loaded.  It's a simple tree type hierarchy where level 3 is the top node, and level 1 is the most detailed level.  Each level's nodes points upward to a single parent, and there are no links across nodes in the same level.\r\nThe match query included above proves that there are relationships shown in the viz that do not exist in the DB.\r\n![expected_db_schema_viz_2020-03-03](https://user-images.githubusercontent.com/3429424/75811826-beeb1400-5d52-11ea-9f40-7de11c697ef0.jpg)\r\n\r\n\r\n- Expected behavior\r\nViz should only show relationships between nodes where that type of relationship actually exists in the DB\r\n![DB_Viz_as_expected](https://user-images.githubusercontent.com/3429424/75812118-46d11e00-5d53-11ea-9f89-0cf93369ffd8.jpg)\r\n\r\n- Actual behavior\r\nThe viz shows inter-node links between *ALL* nodes that have the same relationship type instead of just those that actually exist in the DB.\r\n![DB_Viz_is_wrong](https://user-images.githubusercontent.com/3429424/75811839-c4e0f500-5d52-11ea-9d85-4e0da98d6162.jpg)\r\n\r\n"}, {"labels": ["bug", "team-kernel"], "filteredCommits": ["4f43f6999fe9dc0cd660426e731550671536dec8"], "url": "https://github.com/neo4j/neo4j/issues/12414", "gitStatsSummary": {"insertions": 2, "gitFilesChange": 1, "lines": 4, "deletions": 2}, "numCommits": 1, "commits": {"4f43f6999fe9dc0cd660426e731550671536dec8": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 2.000277777777778, "user": "mikeblum", "changesInPackagesSPOON": ["org.neo4j.configuration.ExternalSettings"], "changesInPackagesGIT": ["community/configuration/src/main/java/org/neo4j/configuration"], "body": "Configuring gc logs causes the database to fail to start up properly.\r\n\r\n**Neo4j Version:** 4.0.0 Enterprise\r\n**Operating System:** Ubuntu 18.04 + Docker\r\n**API:** Docker\r\n\r\n### Steps to reproduce\r\n1. Following this guide on configuring garbage collection:\r\n\r\nhttps://neo4j.com/developer/kb/enabling-gc-logging/\r\n\r\n2. neo4j.conf looks like this:\r\n\r\n```\r\n# To enable GC Logging, uncomment this line\r\ndbms.logs.gc.enabled=true\r\n\r\n# GC Logging Options\r\n# see https://docs.oracle.com/en/java/javase/11/tools/java.html#GUID-BE93ABDC-999C-4CB5-A88B-1994AAAC74D5\r\ndbms.logs.gc.options=-Xlog:gc*,safepoint,age*=trace\r\n\r\n# Number of GC logs to keep.\r\ndbms.logs.gc.rotation.keep_number=7\r\n\r\n# Size of each GC log that is kept.\r\ndbms.logs.gc.rotation.size=20m\r\n```\r\n3. start the database\r\n\r\n### Expected behavior\r\ngc log can be sized and rotated.\r\n\r\n### Actual behavior\r\nDatabase fails to startup with the following stack trace:\r\n\r\n```\r\n2020-03-01 13:19:32.332+0000 INFO [c.n.s.e.EnterpriseBootstrapper] Neo4j Server shutdown initiated by request\r\nException in thread \"main\" java.lang.IllegalArgumentException: Error evaluating value for setting 'dbms.logs.gc.rotation.size'. '20m' is not a valid long value\r\n\tat org.neo4j.configuration.Config.evaluateSetting(Config.java:552)\r\n\tat org.neo4j.configuration.Config.evaluateSettingValues(Config.java:384)\r\n\tat org.neo4j.configuration.Config.<init>(Config.java:357)\r\n\tat org.neo4j.configuration.Config$Builder.build(Config.java:260)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:103)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:89)\r\n\tat com.neo4j.server.enterprise.EnterpriseEntryPoint.main(EnterpriseEntryPoint.java:25)\r\nCaused by: java.lang.IllegalArgumentException: '20m' is not a valid long value\r\n\tat org.neo4j.configuration.SettingValueParsers$4.parse(SettingValueParsers.java:146)\r\n\tat org.neo4j.configuration.SettingValueParsers$4.parse(SettingValueParsers.java:136)\r\n\tat org.neo4j.configuration.SettingImpl.parse(SettingImpl.java:85)\r\n\tat org.neo4j.configuration.Config.evaluateSetting(Config.java:537)\r\n\t... 6 more\r\n```\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "spoonFilesChanged": 1, "MOV": 0}, "title": "4.0.0: gc log configuration error", "statsSkippedReason": "", "closed": "2020-03-04 11:20:14", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-03-04 10:37:11", "commitHash": "4f43f6999fe9dc0cd660426e731550671536dec8", "commitParents": ["a75695ee4b3361b0a6554237944d5cb75072af23"], "commitGHEventType": "closed", "nameRev": "4f43f6999fe9dc0cd660426e731550671536dec8 tags/4.0.3~52", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/configuration/src/main/java/org/neo4j/configuration/ExternalSettings.java", "deletions": 2}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.configuration.ExternalSettings"}], "spoonFilePath": "ExternalSettings.java"}], "commitMessage": "Fix #12414 - dbms.logs.gc.rotation.size validation error\n\nThe setting dbms.logs.gc.rotation.size was wrongly marked as a long in 4.0 when we introduced stricter config validation. The setting is only used by the bash scripts and was sadly not tested.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2020-03-03 12:01:20"}], "created": "2020-03-01 16:47:08"}, {"labels": ["bug", "team-cypher"], "filteredCommits": ["0818f91601be9a1e50f2aefbdf9846236056362a"], "url": "https://github.com/neo4j/neo4j/issues/12413", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"0818f91601be9a1e50f2aefbdf9846236056362a": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}}, "ttf": 43.000277777777775, "user": "calvinhkf", "changesInPackagesGIT": [], "body": "\r\nHi. I have implemented a tool to detect library version inconsistencies. Your project have 2 inconsistent libraries and 2 false consistent libraries.\r\n\r\nTake org.apache.commons:commons-lang3 for example, this library is declared as version 3.8 in community/cypher/runtime-util, 3.7 in community/cypher/front-end/frontend and etc... Such version inconsistencies may cause unnecessary maintenance effort in the long run. For example, if two modules become inter-dependent, library version conflict may happen. It has already become a common issue and hinders development progress. Thus a version harmonization is necessary.\r\n\r\nProvided we applied a version harmonization, I calculated the cost it may have to harmonize to all upper versions including an up-to-date one. The cost refers to POM config changes and API invocation changes. Take org.apache.commons:commons-lang3 for example, if we harmonize all the library versions into 3.9. The concern is, how much should the project code adapt to the newer library version. We list an effort table to quantify the harmonization cost. \r\n\r\nThe effort table is listed below. It shows the overall harmonization effort by modules. The columns represents the number of library APIs and API calls(NA,NAC), deleted APIs and API calls(NDA,NDAC) as well as modified API and API calls(NMA,NMAC). Modified APIs refers to those APIs whose call graph is not the same as previous version. Take the first row for example, if upgrading the library into version 3.9. Given that 4 APIs is used in module community/kernel-api, 0 of them is deleted in a recommended version(which will throw a NoMethodFoundError unless re-compiling the project),  1 of them is regarded as modified which could break the former API contract.\r\n\r\n\r\n|Index|Module|NA(NAC)|NDA(NDAC)|NMA(NMAC)|\r\n|-|-|-|-|-|\r\n|1|community/kernel-api|4(4)|0(0)|1(1)|\r\n|2|community/io|2(2)|0(0)|0(0)|\r\n|3|community/cypher/runtime-util|0(0)|0(0)|0(0)|\r\n|4|..|..|..|..|\r\n\r\nAlso we provided another table to show the potential files that may be affected due to library API change, which could help to spot the concerned API usage and rerun the test cases. The table is listed below. \r\n\r\n\r\n\r\n\r\n|Module|File|Type|API|\r\n|-|-|-|-|\r\n|community/kernel-api|community/kernel-api/src/main/java/org/neo4j/internal/kernel/api/IndexQuery.java|modify|org.apache.commons.lang3.builder.EqualsBuilder.reflectionEquals(java.lang.Object,java.lang.Object,java.lang.String[])|\r\n\r\nAs for false consistency, take org.scala-lang scala-library jar for example. The library is declared in version 2.11.12 in all modules. However they are declared differently.  As components are developed in parallel, if one single library version is updated, which could become inconsistent as mentioned above, may cause above-mentioned inconsistency issues\r\n\r\n\r\nIf you are interested, you can have a more complete and detailed report in the attached PDF file.\r\n[neo4j neo4j.pdf](https://github.com/neo4j/neo4j/files/4271806/neo4j.neo4j.pdf)\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Inconsistent library versions reminder.", "statsSkippedReason": "", "closed": "2020-04-14 11:50:37", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-04-14 13:50:36", "commitHash": "0818f91601be9a1e50f2aefbdf9846236056362a", "commitParents": ["2bfa36b3d085bf6d9a4e60989500ee87545692de"], "commitGHEventType": "referenced", "nameRev": "0818f91601be9a1e50f2aefbdf9846236056362a remotes/origin/4.1~722", "commitGitStats": [{"insertions": 0, "lines": 1, "filePath": "community/cypher/front-end/parser/pom.xml", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Stop specifying redundant or conflicting versions.\n\nFixes #12413\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2020-04-07 15:25:01"}], "created": "2020-03-01 13:29:02"}, {"labels": ["bug", "team-drivers", "wontfix"], "url": "https://github.com/neo4j/neo4j/issues/12411", "title": "Neo4j /db/{databaseName} REST endpoints unavailable using community 4.0.0 docker image", "closed": "2020-03-05 13:26:17", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2020-02-27 21:57:52", "user": "Incara", "body": "I am attempting to connect to the service root endpoint in the neo4j community edition. But I receive a 404 for `/db/neo4j` in the latest docker image. \r\n\r\nI am able to connect to `http://localhost:7474` which returns:\r\n\r\n```\r\n{\r\n  \"bolt_routing\": \"neo4j://0.0.0.0:7687\",\r\n  \"transaction\": \"http://localhost:7474/db/{databaseName}/tx\",\r\n  \"bolt_direct\": \"bolt://0.0.0.0:7687\",\r\n  \"neo4j_version\": \"4.0.0\",\r\n  \"neo4j_edition\": \"community\"\r\n}\r\n```\r\n\r\nI am also able to POST a new transaction via `http://localhost:7474/db/neo4j/tx`\r\n\r\nLet me know if I'm routing this question to the wrong place or if there's documentation that I missed. If the service root endpoint is dependent on the volume mounting of the docker image, let me know, I've just been mounting it to a local directory instead of the one mentioned in the page. \r\n\r\nAnother note, I downgraded to the neo4j:3.5 image and the data endpoints work as expected. \r\n\r\n**Neo4j Version:** 4.0.0\r\n**Operating System:** Windows 10 (Docker for Windows) \r\n**API:** Docker\r\n\r\n### Steps to reproduce\r\n1. Docker run image as indicated here: https://hub.docker.com/_/neo4j/\r\n2. Attempt to connect to http://localhost:7474/db/neo4j\r\n\r\n### Expected behavior\r\nService Root response should be available\r\n\r\n### Actual behavior\r\n404 Not Found is returned."}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12408", "title": "Unsuccessful load of Reactome graph database into Neo4j", "closed": "2020-03-04 13:30:04", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2020-02-27 19:06:38", "user": "dvklopfenstein", "body": "I am not able to load the Reactome graph.db database into Neo4j, similar to https://github.com/neo4j/neo4j/issues/12388.\r\nPreviously, this worked with an older version of Neo4j and Reactome.\r\n\r\n**Neo4j Version:** neo4j-community-4.0.1      \r\n**Operating System:** Ubuntu 16.04.4 LTS\r\n\r\n### Steps to reproduce\r\nI have also had a rather good experience with neo4j-community-3.4.7 and jdk1.8_0_192, but struggle to migrate to **jdk-11.0.6** and **neo4j-community-4.0.1**.\r\n\r\n#### 1. Wiped everything from data/databases\r\n```\r\n$ rm -rf neo4j-community-4.0.1/data/databases/\r\n$ mkdir neo4j-community-4.0.1/data/databases\r\n```\r\n\r\n#### 2. Downloaded graph.db from [**Reactome**](https://reactome.org/dev/graph-database)\r\n```\r\n$ wget https://reactome.org/download/current/reactome.graphdb.tgz    \r\n$ tar zxvf reactome.graphdb.tgz\r\n$ mv graph.db neo4j-community-4.0.1/data/databases \r\n```\r\n \r\n#### 3. Start neo4j\r\n```\r\n$ neo4j-community-4.0.1/bin/neo4j start\r\nDirectories in use:\r\n  home:         /home/neo4j/neo4j/neo4j-community-4.0.1/\r\n  config:       /home/neo4j/neo4j/neo4j-community-4.0.1/conf/\r\n  logs:         /home/neo4j/neo4j/neo4j-community-4.0.1//logs\r\n  plugins:      /home/neo4j/neo4j/neo4j-community-4.0.1//plugins\r\n  import:       /home/neo4j/neo4j/neo4j-community-4.0.1//import\r\n  data:         /home/neo4j/neo4j/neo4j-community-4.0.1//data\r\n  certificates: /home/neo4j/neo4j/neo4j-community-4.0.1//certificates\r\n  run:          /home/neo4j/neo4j/neo4j-community-4.0.1//run\r\nStarting Neo4j.\r\nWARNING: Max 1024 open files allowed, minimum of 40000 recommended. See the Neo4j manual.\r\nStarted neo4j (pid 929). It is available at http://localhost:7474/\r\nThere may be a short delay until the server is ready.\r\nSee /home/neo4j/neo4j/neo4j-community-4.0.1//logs/neo4j.log for current status.\r\n```\r\n##### Try unsuccessfully to see Reactome database\r\nI see this in the **neo4j-community-4.0.1/logs/neo4j.log**:\r\n```\r\nnohup: ignoring input\r\n2020-02-27 18:19:07.228+0000 INFO  ======== Neo4j 4.0.1 ========\r\n2020-02-27 18:19:07.245+0000 INFO  Starting...\r\n2020-02-27 18:19:15.099+0000 INFO  Bolt enabled on localhost:7687.\r\n2020-02-27 18:19:15.101+0000 INFO  Started.\r\n2020-02-27 18:19:17.927+0000 INFO  Remote interface available at http://localhost:7474/\r\n```\r\n\r\n#### 4. Load *http://localhost:7474* into browser\r\nIt does not seem to connect to the data in *graph.db* asks me for a username and password. \r\n\r\nI don't believe I needed a username and password to run the Reactome graph db in the past. \r\n\r\nI try a login (*neo4j*) and password (*neo4j*):\r\n![qu_Reqctome_login](https://user-images.githubusercontent.com/7278188/75476852-51fa0780-5969-11ea-9c85-dbbf2788823a.png)\r\n\r\nIt asks me to change my password, which I do:\r\n![qu_Reqctome_chpasswd](https://user-images.githubusercontent.com/7278188/75476879-5b836f80-5969-11ea-9410-cc0ae0537643.png)\r\n\r\n#### 5. Still cannot see Reactome database\r\nI don't see any **Node Labels**, **Relationship Types**, etc. which I believe I saw the last time this worked.\r\n![qu_Reqctome_access](https://user-images.githubusercontent.com/7278188/75476898-64744100-5969-11ea-8d0c-06dbbec2aed0.png)\r\n\r\n#### These are the Neo4j environmental variables:\r\n```\r\n$ printenv | grep NEO4J\r\nNEO4J_HOME=/home/neo4j/neo4j/neo4j-community-4.0.1\r\nNEO4J_CONF=/home/neo4j/neo4j/neo4j-community-4.0.1/conf\r\n```\r\n\r\n### Expected behavior\r\nI should be able to query the database like this:\r\n![neo4j_pwy_subpwy](https://user-images.githubusercontent.com/7278188/75477086-bd43d980-5969-11ea-8251-e23ff4091aaf.png)\r\n\r\n### Actual behavior\r\nBut this is what I see:\r\n![qu_Reqctome_access](https://user-images.githubusercontent.com/7278188/75477169-e06e8900-5969-11ea-80e9-af8bfe38c5ed.png)"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12403", "title": "Neo4j 4.0.0 ~ Cypher-Shell: can't create / drop database", "closed": "2020-02-24 08:26:38", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2020-02-19 20:05:00", "user": "mikeblum", "body": "In the neo4j browser I can create a database but in cypher-shell it throws an error and after upgrading from the release candidate to 4.0.0 I can no longer create and destroy databases.\r\n\r\n**Neo4j Version:** 4.0.0 Enterprise\r\n**Operating System:** Ubuntu 18.04 \r\n**API:** Docker + Cypher-Shell 4.0.0\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a database against the `system` database:\r\n```\r\necho 'CREATE DATABASE `localhost-test`;' | ./bin/cypher-shell --database system\r\n```\r\n\r\n> There is no procedure with the name `dbms.showCurrentUser` registered for this database instance. Please ensure you've spelled the procedure name correctly and that the procedure is properly deployed.\r\n\r\n\r\n2. Destroy the database:\r\n```\r\necho 'DROP DATABASE `localhost-test`;' | ./bin/cypher-shell --database system\r\n```\r\n\r\n> There is no procedure with the name `dbms.showCurrentUser` registered for this database instance. Please ensure you've spelled the procedure name correctly and that the procedure is properly deployed.\r\n\r\n\r\n### Expected behavior\r\n\r\nDatabase should be successfully created and the database should then be destroyed.\r\n\r\n### Actual behavior\r\n\r\n```\r\nThere is no procedure with the name `dbms.showCurrentUser` registered for this database instance. Please ensure you've spelled the procedure name correctly and that the procedure is properly deployed.\r\n```\r\n\r\nbut appears to work in the browser:\r\n\r\n![image](https://user-images.githubusercontent.com/3905463/74872419-cce87000-5322-11ea-882d-72f884b71818.png)\r\n\r\nhere is the list of procedures:\r\n\r\n```\r\nCALL dbms.procedures() YIELD name, signature RETURN name;\r\n```\r\n\r\n[records.txt](https://github.com/neo4j/neo4j/files/4227272/records.txt)\r\n\r\n---\r\n\r\nThis was working using the previous release candidate:\r\n\r\n```\r\n- FROM neo4j/neo4j-experimental:4.0.0-beta03mr03-enterprise as neo4j\r\n+ FROM neo4j:4.0.0-enterprise as neo4j\r\n```\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12402", "title": "4.0.0 enterprise cluster becomes irreparably corrupt from working 3.5 statement", "closed": "2020-03-24 14:57:40", "commitsDetails": [], "commits": {}, "ttf": 33.000277777777775, "created": "2020-02-19 19:10:51", "user": "chrisdostert", "body": "- Neo4j version: 4.0.0\r\n- Operating system: `neo4j:4.0.0-enterprise`docker image \r\n- API/Driver: cypher\r\n\r\nI'm still trying to narrow down the exact repro but a cypher create/merge statement that was working in 3.5, caused our prod cluster to become corrupt in 4.0. \r\n\r\nThe cluster had been migrated from 3.5.12 a few weeks ago and running reliably until this particular statement was run (it's an infrequently run statement), which brought down and corrupted the entire cluster with logs:\r\n```\r\nERROR Clustering components for database 'neo4j' have encountered a critical error org.neo4j.internal.kernel.api.exceptions.TransactionFailureException: Could not apply the transaction to the store after written to log\r\n```\r\n```\r\njava.lang.RuntimeException: org.neo4j.internal.kernel.api.exceptions.TransactionFailureException: Could not apply the transaction to the store after written to log\r\n\tat com.neo4j.causalclustering.core.state.machines.token.ReplicatedTokenStateMachine.applyToStore(ReplicatedTokenStateMachine.java:96)\r\n\tat com.neo4j.causalclustering.core.state.machines.token.ReplicatedTokenStateMachine.applyCommand(ReplicatedTokenStateMachine.java:74)\r\n\tat com.neo4j.causalclustering.core.state.machines.CoreStateMachines$StateMachineCommandDispatcher.dispatch(CoreStateMachines.java:119)\r\n\tat com.neo4j.causalclustering.core.state.machines.token.ReplicatedTokenRequest.dispatch(ReplicatedTokenRequest.java:94)\r\n\tat com.neo4j.causalclustering.core.state.CommandApplicationProcess.handleOperations(CommandApplicationProcess.java:234)\r\n\tat com.neo4j.causalclustering.core.state.CommandApplicationProcess.applyBatch(CommandApplicationProcess.java:210)\r\n\tat com.neo4j.causalclustering.core.state.CommandBatcher.flush(CommandBatcher.java:44)\r\n\tat com.neo4j.causalclustering.core.state.CommandApplicationProcess.applyUpTo(CommandApplicationProcess.java:175)\r\n\tat com.neo4j.causalclustering.core.state.CommandApplicationProcess.applyJob(CommandApplicationProcess.java:139)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: org.neo4j.internal.kernel.api.exceptions.TransactionFailureException: Could not apply the transaction to the store after written to log\r\n\tat org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.applyToStore(TransactionRepresentationCommitProcess.java:82)\r\n\tat org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.commit(TransactionRepresentationCommitProcess.java:51)\r\n\tat com.neo4j.causalclustering.core.state.machines.StateMachineCommitHelper.commit(StateMachineCommitHelper.java:56)\r\n\tat com.neo4j.causalclustering.core.state.machines.StateMachineCommitHelper.commit(StateMachineCommitHelper.java:51)\r\n\tat com.neo4j.causalclustering.core.state.machines.token.ReplicatedTokenStateMachine.applyToStore(ReplicatedTokenStateMachine.java:92)\r\n\t... 9 more\r\nCaused by: org.neo4j.internal.kernel.api.exceptions.TransactionApplyKernelException: Failed to apply transaction: Transaction #1832889 at log position LogPosition{logVersion=1, byteOffset=217722710} {started 1970-01-01 00:00:00.000+0000, committed 1970-01-01 00:00:00.000+0000, with 1 commands in this transaction, lease 0, latest committed transaction id when started was 0, additional header bytes: \r\n```\r\n...\r\n```\r\nat org.neo4j.internal.recordstorage.RecordStorageEngine.apply(RecordStorageEngine.java:302)\r\nat org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.applyToStore(TransactionRepresentationCommitProcess.java:78)\r\n... 13 more\r\nCaused by: org.neo4j.token.api.NonUniqueTokenException: The PropertyKey NamedToken[name:stripeBankAccountId, id:611, internal:false] is not unique, it existed as NamedToken[name:__org.neo4j.SchemaRule.IndexConfig.spatial.wgs-84.max, id:611, internal:true]. at org.neo4j.token.TokenRegistry.put(TokenRegistry.java:73) at org.neo4j.token.AbstractTokenHolderBase.addToken(AbstractTokenHolderBase.java:52) at org.neo4j.internal.recordstorage.BridgingCacheAccess.addPropertyKeyToken(BridgingCacheAccess.java:68) at org.neo4j.internal.recordstorage.CacheInvalidationTransactionApplier.visitPropertyKeyTokenCommand(CacheInvalidationTransactionApplier.java:69) at org.neo4j.internal.recordstorage.Command$PropertyKeyTokenCommand.handle(Command.java:537) at org.neo4j.internal.recordstorage.TransactionApplierFacade.visit(TransactionApplierFacade.java:57) at org.neo4j.internal.recordstorage.TransactionApplierFacade.visit(TransactionApplierFacade.java:32) at org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation.accept(PhysicalTransactionRepresentation.java:76) at org.neo4j.kernel.impl.api.TransactionToApply.accept(TransactionToApply.java:130) at org.neo4j.internal.recordstorage.RecordStorageEngine.apply(RecordStorageEngine.java:294) ... 14 more\r\n```\r\n\r\nRepair was attempted by restarting the nodes but this resulted in all nodes failing to start with logs:\r\n```\r\nERROR Clustering components for database 'neo4j' have encountered a critical error Encountered error when attempting to reconcile database neo4j from state 'EnterpriseDatabaseState{databaseId=DatabaseId{name='neo4j', databaseId=DatabaseIdWithoutName{uuid=9f35bdfb-46ba-40f8-a292-88b0ba533c55}}, operatorState=STOPPED, failed=false}' to state 'online'\r\n```\r\n\r\n```\r\njava.lang.IllegalStateException: Encountered error when attempting to reconcile database neo4j from state 'EnterpriseDatabaseState{databaseId=DatabaseId{name='neo4j', databaseId=DatabaseIdWithoutName{uuid=9f35bdfb-46ba-40f8-a292-88b0ba533c55}}, operatorState=STOPPED, failed=false}' to state 'online' at com.neo4j.dbms.DbmsReconciler.reportErrorAndPanicDatabase(DbmsReconciler.java:435) at com.neo4j.dbms.DbmsReconciler.handleReconciliationErrors(DbmsReconciler.java:420) at com.neo4j.dbms.DbmsReconciler.lambda$postReconcile$14(DbmsReconciler.java:369) at java.base/java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1947) at com.neo4j.dbms.DbmsReconciler.postReconcile(DbmsReconciler.java:367) at com.neo4j.dbms.DbmsReconciler.lambda$scheduleReconciliationJob$7(DbmsReconciler.java:234) at java.base/java.util.concurrent.CompletableFuture.uniWhenComplete(CompletableFuture.java:859) at java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:837) at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:506) at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1705) at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) at java.base/java.lang.Thread.run(Thread.java:834) Caused by: org.neo4j.dbms.api.DatabaseManagementException: Unable to start database `DatabaseId{name='neo4j', databaseId=DatabaseIdWithoutName{uuid=9f35bdfb-46ba-40f8-a292-88b0ba533c55}}` at com.neo4j.dbms.database.ClusteredMultiDatabaseManager.startDatabase(ClusteredMultiDatabaseManager.java:83) at com.neo4j.dbms.database.ClusteredMultiDatabaseManager.startDatabase(ClusteredMultiDatabaseManager.java:37) at com.neo4j.dbms.database.MultiDatabaseManager.forSingleDatabase(MultiDatabaseManager.java:112) at com.neo4j.dbms.database.MultiDatabaseManager.startDatabase(MultiDatabaseManager.java:98) at com.neo4j.dbms.DbmsReconciler.start(DbmsReconciler.java:537) at com.neo4j.dbms.Transitions$TransitionFunction.lambda$prepare$0(Transitions.java:219) at com.neo4j.dbms.DbmsReconciler.doTransitionStep(DbmsReconciler.java:335) at com.neo4j.dbms.DbmsReconciler.doTransitionStep(DbmsReconciler.java:336) at com.neo4j.dbms.DbmsReconciler.doTransitions(DbmsReconciler.java:318) at com.neo4j.dbms.DbmsReconciler.lambda$doTransitions$9(DbmsReconciler.java:308) at java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1700) ... 3 more Caused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.recovery.TransactionLogsRecovery@97f40fb' failed to initialize. Please see the attached cause exception \"Internal token for id 611 not found.\". at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:426) at org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:66) at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:102) at org.neo4j.kernel.recovery.Recovery.performRecovery(Recovery.java:364) at org.neo4j.kernel.recovery.Recovery.performRecovery(Recovery.java:246) at org.neo4j.kernel.recovery.RecoveryFacade.recovery(RecoveryFacade.java:49) at com.neo4j.causalclustering.core.CoreDatabase.lambda$new$0(CoreDatabase.java:42) at org.neo4j.kernel.lifecycle.LifecycleAdapter$3.start(LifecycleAdapter.java:86) at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:444) at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111) at com.neo4j.causalclustering.common.ClusteredDatabase.start(ClusteredDatabase.java:39) at com.neo4j.dbms.database.ClusteredMultiDatabaseManager.startDatabase(ClusteredMultiDatabaseManager.java:79) ... 13 more Caused by: java.lang.RuntimeException: Error reading transaction logs, recovery not possible. To force the database to start anyway, you can specify 'unsupported.dbms.tx_log.fail_on_corrupted_log_files=false'. This will try to recover as much as possible and then truncate the corrupt part of the transaction log. Doing this means your database integrity might be compromised, please consider restoring from a consistent backup instead. at org.neo4j.kernel.recovery.Recovery.throwUnableToCleanRecover(Recovery.java:464) at org.neo4j.kernel.recovery.TransactionLogsRecovery.init(TransactionLogsRecovery.java:147) at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:405) ... 24 more Caused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.internal.recordstorage.RecordStorageEngine$2@58b75fa3' failed to initialize. Please see the attached cause exception \"Internal token for id 611 not found.\". at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:426) at org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:66) at org.neo4j.kernel.recovery.TransactionLogsRecovery.init(TransactionLogsRecovery.java:117) ... 25 more Caused by: java.lang.RuntimeException: org.neo4j.internal.kernel.api.exceptions.schema.MalformedSchemaRuleException: Cannot read schema rule because it is referring to a property key token (id 611) that does not exist. at org.neo4j.internal.recordstorage.SchemaStorage.readSchemaRuleThrowingRuntimeException(SchemaStorage.java:266) at org.neo4j.internal.recordstorage.SchemaStorage.lambda$streamAllSchemaRules$5(SchemaStorage.java:238) at java.base/java.util.stream.ReferencePipeline$7$1.accept(ReferencePipeline.java:271) at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177) at java.base/java.util.stream.LongPipeline$1$1.accept(LongPipeline.java:177) at java.base/java.util.stream.Streams$RangeLongSpliterator.tryAdvance(Streams.java:207) at java.base/java.util.Spliterator$OfLong.tryAdvance(Spliterator.java:740) at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.lambda$initPartialTraversalState$0(StreamSpliterators.java:294) at java.base/java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.fillBuffer(StreamSpliterators.java:206) at java.base/java.util.stream.StreamSpliterators$AbstractWrappingSpliterator.doAdvance(StreamSpliterators.java:161) at java.base/java.util.stream.StreamSpliterators$WrappingSpliterator.tryAdvance(StreamSpliterators.java:300) at java.base/java.util.Spliterators$1Adapter.hasNext(Spliterators.java:681) at org.neo4j.internal.recordstorage.SchemaCache$SchemaCacheState.load(SchemaCache.java:298) at org.neo4j.internal.recordstorage.SchemaCache$SchemaCacheState.<init>(SchemaCache.java:264) at org.neo4j.internal.recordstorage.SchemaCache.load(SchemaCache.java:134) at org.neo4j.internal.recordstorage.RecordStorageEngine.loadSchemaCache(RecordStorageEngine.java:368) at org.neo4j.internal.recordstorage.RecordStorageEngine$2.init(RecordStorageEngine.java:459) at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:405) ... 27 more Caused by: org.neo4j.internal.kernel.api.exceptions.schema.MalformedSchemaRuleException: Cannot read schema rule because it is referring to a property key token (id 611) that does not exist. at org.neo4j.kernel.impl.store.SchemaStore.insertPropertyIntoMap(SchemaStore.java:463) at org.neo4j.kernel.impl.store.SchemaStore.schemaRecordToMap(SchemaStore.java:445) at org.neo4j.kernel.impl.store.SchemaStore.readSchemaRule(SchemaStore.java:326) at org.neo4j.internal.recordstorage.SchemaStorage.readSchemaRule(SchemaStorage.java:274) at org.neo4j.internal.recordstorage.SchemaStorage.readSchemaRuleThrowingRuntimeException(SchemaStorage.java:259) ... 44 more Caused by: org.neo4j.token.api.TokenNotFoundException: Internal token for id 611 not found. at org.neo4j.token.AbstractTokenHolderBase.getInternalTokenById(AbstractTokenHolderBase.java:121) at org.neo4j.kernel.impl.store.SchemaStore.insertPropertyIntoMap(SchemaStore.java:457) ... 48 more\r\n```\r\nI tried starting each node as a single instance but each failed to repair the corrupt datastore and refused to start. \r\n\r\nI had a duplicate cluster in test environment that when I ran the same transaction failed in the identical way so this was not just a fluke. \r\n\r\nI will try to post more details here once I can further isolate the root cause. \r\n\r\nThis appears to be a p0 bug in neo4j 4.0.0. \r\nsee also https://community.neo4j.com/t/nonuniquetokenexception-cant-launch-database-cant-use-cypher-shell-to-fix-it/13551/7\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12401", "title": "neobolt.exceptions.DatabaseError: Tried to read a field larger than buffer size 2097152", "closed": "2020-02-24 08:23:43", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2020-02-19 11:59:44", "user": "DachuanZhao", "body": "When I run \r\n```\r\nUSING PERIODIC COMMIT 10000  LOAD CSV WITH HEADERS FROM \"file:///neo4j_relationship_output/compound_protein_treat_202002161350.csv\" AS line FIELDTERMINATOR \",\" match (from:CompoundEntity{name:line.from_name}),(to:ProteinEntity{name:line.to_name})  merge (from)-[r:TreatRelationship{confidence:line.confidence,relationship_name:\"TreatRelationship\"}]->(to)\r\n```\r\n, I get this error . There are some very long rows in my csv . What can I do to increase the limit ```2097152``` ?\r\n\r\n- Neo4j version: 4.0.0\r\n- Operating system: CentOS7\r\n- API/Driver:  Python driver v1.7.6"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12399", "title": "Neo4j 4.0 enterprise \"Can't coerce `(1)` to Map\"", "closed": "2020-02-17 14:45:14", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2020-02-14 11:12:57", "user": "fabio-510", "body": "I ran to an issue after upgrading our single node neo4j-enterprise instance to neo4j 4.0. I am upgrading from 3.5.1-enterprise. One of our queries are inconsistently executed, meaning that it succeeds after a few attempts and then starts giving an error that I cannot see anywhere googling around: \r\n\r\n> Can`t coerce '(1)' to Map\r\n\r\nI also verified that a fresh neo4j database also has the issue I also tried in three different desktops.\r\n\r\n- Neo4j version: 4.0.0-enterprise\r\n- Operating system: Neo4j docker image on top of Windows 10\r\n- API/Driver: N/A, issue happens on built-in browser\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a docker volume on the host that will hold neo4j data: `docker volume create neo4j-data`\r\n2. Run the command:\r\n```\r\ndocker run --name localNeo4j -d `\r\n    -p 7687:7687 `\r\n    -p 7474:7474 `\r\n    --mount type=volume,src=neo4j-data,dst=/data `\r\n    -e NEO4J_ACCEPT_LICENSE_AGREEMENT=yes `\r\n    -e NEO4J_apoc_export_file_enabled=true `\r\n    -e NEO4J_apoc_import_file_enabled=true `\r\n    -e NEO4J_apoc_import_file_use__neo4j__config=true `\r\n    -e NEO4J_dbms_transaction_timeout=10s `\r\n    -e NEO4J_dbms_lock_acquisition_timeout=30s `\r\n    -e NEO4J_dbms_security_procedures_unrestricted=apoc.* `\r\n    -e NEO4J_dbms_security_procedures_whitelist=apoc.* `\r\n    -e NEO4J_dbms_directories_plugins=/var/lib/neo4j/plugins `\r\n    -e NEO4J_dbms_allow__upgrade=true `\r\n    neo4j:4.0.0-enterprise neo4j\r\n```\r\n\r\n3 .Create data using neo4j by running the following cypher query\r\n```\r\nCREATE (p:Person{polyglotID:'79224171-10e7-4162-a062-bded2c200572'})\r\nCREATE (p2:Person{polyglotID:'4e6d47b3-c77a-471b-945f-506385f7ff08'})\r\nCREATE (p3:Person{polyglotID:'f84f68e5-8ce6-4931-94fd-2e2413a4ba08'})\r\nCREATE (l:ListItem{polyglotID:'ba337ab9-fc61-4181-9bbe-f3a6a9e6ed2b', createdBy: '4e6d47b3-c77a-471b-945f-506385f7ff08', name: 'list item'})\r\nCREATE (a:Avatar{name: 'avatar'})\r\nCREATE (m:Media:Image{ polyglotID: 'f84f68e5-8ce6-4931-94fd-2e2413a4ba08', name: 'image'})\r\nMERGE (p2)-[:has]->(a)\r\nMERGE (l)-[:assigned_to]->(p3)\r\nMERGE (l)-[:references]->(m)\r\n```\r\n4. Execute the cypher query below repeatedly. Clicking repeatedly on rerun button on neo4j browser is sufficient:\r\n\r\n```\r\nMATCH (p:Person{polyglotID:'79224171-10e7-4162-a062-bded2c200572'})\r\nMATCH (l:ListItem{polyglotID:'ba337ab9-fc61-4181-9bbe-f3a6a9e6ed2b'})\r\nMATCH (c:Person{polyglotID:l.createdBy})\r\nOPTIONAL MATCH (c)-[:has]->(av:Avatar)\r\nOPTIONAL MATCH (l)-[:assigned_to]->(a:Person)\r\nOPTIONAL MATCH (a)-[:has]->(av2:Avatar)\r\nOPTIONAL MATCH (l)-[:references]->(m:Media)\r\nWITH c{.*, avatar: av} as createdBy, COLLECT(a{.*, avatar: av2}) as assignees, l, m\r\nRETURN l{.*, createdBy: createdBy, assignees: assignees, media: COLLECT(DISTINCT m{.polyglotID, .name, labels: labels(m)})}\r\n```\r\n\r\n- Expected behavior\r\nConsistently run the cypher query without errors.\r\n\r\n- Actual behavior\r\nAfter a few executions (usually around 10) I start getting the error: \r\nNeo.ClientError.Statement.TypeError\r\n\"Can't coerce `(1)` to Map\"\r\n\r\nThe query only begins working again after I switch the order of one of the optional matches which makes me suspect this is something similar to a caching issue."}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12398", "title": "Query cache issue when querying optional nodes and toString()", "closed": "2020-03-09 07:55:01", "commitsDetails": [], "commits": {}, "ttf": 24.00027777777778, "created": "2020-02-13 15:47:56", "user": "Brakebein", "body": "**Neo4j Version:** 4.0.0  \r\n**Operating System:** Windows 10 / Windows Server 2012 R2  \r\n**API:** neo4j-driver 4.0.1 (nodejs)\r\n\r\nI am facing an issue that after the Neo4j instance has been running for a while, a special cypher query fails to execute. After some testing and considering the error log, I think I could narrow it down to these lines of the cypher query:\r\n\r\n```sql\r\n// ...\r\nOPTIONAL MATCH (e65)-[:P4]->(:E52)-[:P82]->(date0:E61)\r\n// ...\r\nWITH ... , date0, ...\r\n// ...\r\nRETURN\r\n  // ...\r\n  date0 {.*, from: toString(date0.from), to: toString(date0.to)} AS date\r\n  // ...\r\n```\r\n\r\n`date0` represents a timespan and has (among others) the properties `from` and `to`, which are of type `date()`. For the return output I want them to be a string formatted `YYYY-MM-DD`, that's why I am using `toSting()`. Since `date0` is optional, it can sometimes be `NULL`. In this case, the query returns `date: null`.\r\n\r\nThis has always worked fine with Neo4j 3.5.x and it also works fine with Neo4j 4.0.0, at least for some time. With Neo4j 4.0.0, after a while, this query fails when the queried dataset includes nodes that are not connected with `date0:E61` node (i.e. `date0` is NULL). Then, it throws the following error, which leads me to the `toString()` function:\r\n\r\n```\r\nNeo.ClientError.Statement.TypeError\r\nNeo4jError: Expected a String, Number, Boolean, Temporal or Duration, got: NO_VALUE\r\n```\r\n\r\nI have also found out that after clearing the query cache, the query will work fine again for some time. This can be actually a few days, the total number of queries is quite low (as this is only a prototype/showcase application).\r\n\r\n```sql\r\nCALL db.clearQueryCaches()\r\n```\r\n\r\nThis leads me to the assumption that there might be a bug with the query cache.\r\n\r\n### Steps to reproduce\r\nI am not sure, if this can be easily reproduced, since this error occurs after the Neo4j instance has been running for a while.\r\n\r\n### Expected behavior\r\nIf `date0` is `NULL`, `date` should return `null`. No errors. Should work all the time, as it did with Neo4j 3.5.x.\r\n\r\n### Actual behavior\r\nAfter some time, query fails due to TypeError. Query cache needs to be cleared, so query will work again.\r\n\r\n#### Error output/stacktrace from neo4j-driver:\r\n```\r\nNeo.ClientError.Statement.TypeError\r\n\r\n Neo4jError: Expected a String, Number, Boolean, Temporal or Duration, got: NO_VALUE\r\n\r\n    at captureStacktrace (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\result.js:263:15)\r\n    at new Result (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\result.js:68:19)\r\n    at newCompletedResult (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\transaction.js:437:10)\r\n    at Object.run (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\transaction.js:274:14)\r\n    at Transaction.run (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\transaction.js:117:32)\r\n    at C:\\ServerTools\\UH4D-Server\\modules\\neo4j-request.js:32:59\r\n    at TransactionExecutor._safeExecuteTransactionWork (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\internal\\transaction-executor.js:134:22)\r\n    at TransactionExecutor._executeTransactionInsidePromise (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\internal\\transaction-executor.js:122:32)\r\n    at C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\internal\\transaction-executor.js:61:15\r\n    at new Promise (<anonymous>)\r\n    at TransactionExecutor.execute (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\internal\\transaction-executor.js:60:14)\r\n    at Session._runTransaction (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\session.js:292:40)\r\n    at Session.readTransaction (C:\\ServerTools\\UH4D-Server\\node_modules\\neo4j-driver\\lib\\session.js:264:19)\r\n    at Object.readTransaction (C:\\ServerTools\\UH4D-Server\\modules\\neo4j-request.js:32:32)\r\n    at query (C:\\ServerTools\\UH4D-Server\\routes\\image.js:128:9)\r\n    at Layer.handle [as handle_request] (C:\\ServerTools\\UH4D-Server\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at next (C:\\ServerTools\\UH4D-Server\\node_modules\\express\\lib\\router\\route.js:137:13)\r\n    at Route.dispatch (C:\\ServerTools\\UH4D-Server\\node_modules\\express\\lib\\router\\route.js:112:3)\r\n    at Layer.handle [as handle_request] (C:\\ServerTools\\UH4D-Server\\node_modules\\express\\lib\\router\\layer.js:95:5)\r\n    at C:\\ServerTools\\UH4D-Server\\node_modules\\express\\lib\\router\\index.js:281:22\r\n    at Function.process_params (C:\\ServerTools\\UH4D-Server\\node_modules\\express\\lib\\router\\index.js:335:12)\r\n    at next (C:\\ServerTools\\UH4D-Server\\node_modules\\express\\lib\\router\\index.js:275:10)\r\n```\r\n\r\n#### Neo4j `query.log`:\r\n```\r\n2020-02-13 12:47:15.985+0000 ERROR id:1014 - 1780 ms: bolt-session\tbolt\tneo4j-javascript/0.0.0-dev\t\tclient/127.0.0.1:51289\tserver/127.0.0.1:7687>\tuh4d - neo4j - \r\n\t\t\tMATCH (image:E38:UH4D)\r\n\t\t\t\tOPTIONAL MATCH (image)<-[:P94]-(e65:E65)-[:P4]->(:E52)-[:P82]->(date:E61)\r\n\t\t\t\tWITH image, date\r\n\t\t\t\tWHERE date IS NULL OR date.to > date($from) AND date.from < date($to)\r\n\t\t\tWITH image\r\n\t\t\tMATCH (image)-[:P106]->(file:D9),\r\n\t\t\t\t(image)-[:P102]->(title:E35),\r\n\t\t\t\t(image)-[:P48]->(identifier:E42),\r\n\t\t\t\t(image)<-[:P94]-(e65:E65)\r\n\t\t\tOPTIONAL MATCH (e65)-[:P14]->(:E21)-[:P131]->(author:E82)\r\n\t\t\tOPTIONAL MATCH (e65)-[:P4]->(:E52)-[:P82]->(date0:E61)\r\n\t\t\tOPTIONAL MATCH (image)-[:P105]->(:E40)-[:P131]->(owner:E82)\r\n\t\t\tOPTIONAL MATCH (image)-[:P3]->(desc:E62)-[:P3_1]->(:E55 {id: \"image_description\"})\r\n\t\t\tOPTIONAL MATCH (image)-[:P3]->(misc:E62)-[:P3_1]->(:E55 {id: \"image_miscellaneous\"})\r\n\t\t\tOPTIONAL MATCH (image)-[:has_spatial]->(spatial:Spatial)\r\n\t\t\tOPTIONAL MATCH (image)-[:has_tag]->(tag:TAG)\r\n\t\t\tWITH image, file, title, identifier, author, date0, owner, desc, misc, spatial, collect(tag.id) AS tags WHERE (NOT image.id =~ \".*_dummy\") RETURN image.id AS id,\r\n\t\t\t\tfile,\r\n\t\t\t\ttitle.value AS title,\r\n\t\t\t\tidentifier.permalink AS permalink,\r\n\t\t\t\tidentifier.slub_cap_no AS captureNumber,\r\n\t\t\t\tauthor.value AS author,\r\n\t\t\t\tdate0 {.*, from: toString(date0.from), to: toString(date0.to)} AS date,\r\n\t\t\t\towner.value AS owner,\r\n\t\t\t\tdesc.value AS description,\r\n\t\t\t\tmisc.value AS misc,\r\n\t\t\t\tspatial,\r\n\t\t\t\ttags - {capNo: ['dummy:hide'], regexDate: [], excludes: [], regexOwner: ['(?i).*dummy:hide.*'], regexTag: ['(?i).*dummy:hide.*'], regexTitle: ['(?i).*dummy:hide.*'], from: '1679-01-01', includes: [], to: '2020-02-13', regexAuthor: ['(?i).*dummy:hide.*']} - {} Expected a String, Number, Boolean, Temporal or Duration, got: NO_VALUE\r\norg.neo4j.exceptions.ParameterWrongTypeException: Expected a String, Number, Boolean, Temporal or Duration, got: NO_VALUE\r\n\tat org.neo4j.cypher.operations.CypherFunctions.toString(CypherFunctions.java:1130)\r\n\tat org.neo4j.codegen.Expression40/0x0000000101b1b040.project(Unknown Source)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.expressions.CompileWrappingProjection.project(CompiledExpressionConverter.scala:160)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.ProjectOperator.operate(ProjectOperator.scala:41)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.OperatorTask.operateWithProfile(Operator.scala:251)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.OperatorTask.operateWithProfile$(Operator.scala:241)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.operators.ProjectOperator.operateWithProfile(ProjectOperator.scala:23)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.PipelineTask.executeOperators(PipelineTask.scala:65)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.PipelineTask.executeWorkUnit(PipelineTask.scala:48)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.Worker.executeTask(Worker.scala:128)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.Worker.workOnQuery(Worker.scala:84)\r\n\tat org.neo4j.cypher.internal.runtime.pipelined.execution.CallingThreadExecutingQuery.request(CallingThreadExecutingQuery.scala:30)\r\n\tat org.neo4j.cypher.internal.PipelinedRuntime$PipelinedRuntimeResult.request(PipelinedRuntime.scala:326)\r\n\tat org.neo4j.cypher.internal.result.StandardInternalExecutionResult.request(StandardInternalExecutionResult.scala:88)\r\n\tat org.neo4j.cypher.internal.result.ClosingExecutionResult.request(ClosingExecutionResult.scala:135)\r\n\tat org.neo4j.bolt.runtime.AbstractCypherAdapterStream.handleRecords(AbstractCypherAdapterStream.java:105)\r\n\tat org.neo4j.bolt.v3.messaging.ResultHandler.onPullRecords(ResultHandler.java:41)\r\n\tat org.neo4j.bolt.v4.messaging.PullResultConsumer.consume(PullResultConsumer.java:42)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.TransactionStateMachine$State.consumeResult(TransactionStateMachine.java:511)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.TransactionStateMachine$State$2.streamResult(TransactionStateMachine.java:355)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.TransactionStateMachine.streamResult(TransactionStateMachine.java:92)\r\n\tat org.neo4j.bolt.v4.runtime.InTransactionState.processStreamResultMessage(InTransactionState.java:73)\r\n\tat org.neo4j.bolt.v4.runtime.AbstractStreamingState.processUnsafe(AbstractStreamingState.java:49)\r\n\tat org.neo4j.bolt.v4.runtime.InTransactionState.processUnsafe(InTransactionState.java:60)\r\n\tat org.neo4j.bolt.v3.runtime.FailSafeBoltStateMachineState.process(FailSafeBoltStateMachineState.java:48)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.AbstractBoltStateMachine.nextState(AbstractBoltStateMachine.java:143)\r\n\tat org.neo4j.bolt.runtime.statemachine.impl.AbstractBoltStateMachine.process(AbstractBoltStateMachine.java:91)\r\n\tat org.neo4j.bolt.messaging.BoltRequestMessageReader.lambda$doRead$1(BoltRequestMessageReader.java:90)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.lambda$enqueue$0(DefaultBoltConnection.java:151)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatchInternal(DefaultBoltConnection.java:240)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:175)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:165)\r\n\tat org.neo4j.bolt.runtime.scheduling.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:212)\r\n\tat org.neo4j.bolt.runtime.scheduling.ExecutorBoltScheduler.lambda$scheduleBatchOrHandleError$2(ExecutorBoltScheduler.java:195)\r\n\tat java.base/java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\tat java.base/java.lang.Thread.run(Unknown Source)\r\n```"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/12392", "title": "Neo4J community server Connection issue (Says it's ssl but it's a trap)", "closed": "2020-02-21 16:33:18", "commitsDetails": [], "commits": {}, "ttf": 13.000277777777777, "created": "2020-02-07 21:24:26", "user": "pjuangph", "body": "#12208  Neo4j version: 4.0.0\r\nOperating system: Red Hat Enterprise Linux 7\r\nAPI/Driver: neo4j 1.7.6 Python api\r\n## Steps to reproduce\r\nStep 1. You can create a new environment with anaconda or any python. Install the neo4j library.\r\n\r\nStep 2. Run this code. Enter in your database ip address\r\n```\r\nfrom neo4j import GraphDatabase, basic_auth\r\ndriver = GraphDatabase.driver(\"bolt://xxx.xxx.xxx.xxx:7687\", auth=basic_auth(\"neo4j\", \"neo4j\"))\r\n```\r\n\r\n\r\n## Expected behavior\r\nIF I am using version 3.5, i can connect without any problems.\r\nIn the new version 4.0, with the same configuration file. I cannot connect. I get this strange python ssl error.\r\n\r\nI am using python 3.7.4\r\n## Actual behavior\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neo4j\\__init__.py\", line 120, in driver\r\n    return Driver(uri, **config)\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neo4j\\__init__.py\", line 161, in __new__\r\n    return subclass(uri, **config)\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neo4j\\__init__.py\", line 235, in __new__\r\n    pool.release(pool.acquire())\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neobolt\\direct.py\", line 715, in acquire\r\n    return self.acquire_direct(self.address)\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neobolt\\direct.py\", line 608, in acquire_direct\r\n    connection = self.connector(address, error_handler=self.connection_error_handler)\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neo4j\\__init__.py\", line 232, in connector\r\n    return connect(address, **dict(config, **kwargs))\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neobolt\\direct.py\", line 972, in connect\r\n    raise last_error\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neobolt\\direct.py\", line 963, in connect\r\n    s, der_encoded_server_certificate = _secure(s, host, security_plan.ssl_context, **config)\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\site-packages\\neobolt\\direct.py\", line 854, in _secure\r\n    s = ssl_context.wrap_socket(s, server_hostname=host if HAS_SNI and host else None)\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\ssl.py\", line 423, in wrap_socket\r\n    session=session\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\ssl.py\", line 870, in _create\r\n    self.do_handshake()\r\n  File \"C:\\Users\\test\\AppData\\Local\\Continuum\\anaconda3\\lib\\ssl.py\", line 1139, in do_handshake\r\n    self._sslobj.do_handshake()\r\nOSError: [Errno 0] Error"}, {"labels": ["4.0", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12391", "title": "Denying Access on copies of admin roles permits access", "closed": "2020-02-10 08:30:21", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2020-02-06 13:25:21", "user": "luanne", "body": "Following the steps at https://neo4j.com/docs/cypher-manual/current/administration/security/administration/#administration-security-administration-dbms-custom\r\n\r\nespecially \r\n```\r\nThen we DENY ACCESS to normal databases:\r\nDENY ACCESS\r\nON DATABASE * TO usermanager\r\n```\r\n\r\nstill allows a user with role usermanager to access other databases, create nodes (without a label), and query them.\r\nVerified using both cypher-shell and the browser.\r\n\r\n**Neo4j Version:** 4.0.0\r\n\r\n### Steps to reproduce\r\n1. Follow all steps at https://neo4j.com/docs/cypher-manual/current/administration/security/administration/#administration-security-administration-dbms-custom\r\n\r\n```\r\nCREATE ROLE usermanager AS COPY OF admin\r\n\r\nDENY ACCESS\r\nON DATABASE * TO usermanager\r\n\r\nDENY\r\nSTART\r\nON DATABASE * TO usermanager\r\n\r\nDENY STOP\r\nON DATABASE * TO usermanager\r\n\r\nDENY INDEX MANAGEMENT\r\nON DATABASE * TO usermanager\r\n\r\nDENY CONSTRAINT MANAGEMENT\r\nON DATABASE * TO usermanager\r\n\r\nDENY NAME MANAGEMENT\r\nON DATABASE * TO usermanager\r\n\r\nCREATE DATABASE other\r\n\r\nCREATE USER manager SET PASSWORD \"admin\" CHANGE NOT REQUIRED;\r\n\r\nGRANT ROLE usermanager TO manager;\r\n\r\n```\r\n### Expected behavior\r\nUser `manager` should not be able to access the database `other`\r\n\r\n### Actual behavior\r\nUser `manager` is able to access database `other`, query nodes, and create them (with no label)\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12390", "title": "CLA email contact in developer/cla is inconsistent insecurely references pdf", "closed": "2020-02-07 10:04:03", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2020-02-05 18:30:13", "user": "jsoref", "body": "### Steps to reproduce\r\n1. Visit https://neo4j.com/developer/cla/\r\n1. Read the [Summary](https://neo4j.com/developer/cla/#cla-summary) section:\r\n\r\n   We require all source code that is hosted on the Neo4j infrastructure to be contributed through the [Neo4j Contributor License Agreement](http://dist.neo4j.org/neo4j-cla.pdf?_ga=2.152426169.1436183593.1580752901-1926302927.1572545456) (CLA).\r\n\r\n   ...\r\n\r\n   Please see the below or send a mail to cla (@t) neo4j dot com if you have any other questions about the intent of the CLA. If you have a legal question, please ask a lawyer.\r\n\r\n1. \u2753Note that there is an encoded email address `cla@neo4j.com`\r\n1. Click `Neo4j Contributor License Agreement` -- http://dist.neo4j.org/neo4j-cla.pdf?_ga=2.152426169.1436183593.1580752901-1926302927.1572545456\r\n1. \u274c Note that the URL is *insecure* \ud83d\udd13 -- there's no reason for the link to be insecure, the server supports `https` \ud83d\udd10  .\r\n1. Read the first paragraph of the pdf:\r\n   > These terms apply to your contribution of materials to a product or project owned or managed by Neo4j (\u201cproject\u201d), and set out the intellectual property rights you grant to Neo4j Sweden AB (\u201cNeo4j\u201d) in the contributed materials. If this contribution is on behalf of a company, the term \u2018you\u2019 will also mean the company you identify below. If you agree to be bound by these terms, please confirm your agreement by e-mail to cla@neo4j.com. Include your full name, e-mail and attach a copy of this agreement.\r\n1. \u2753Note that the address is `cla@neo4j.com`\r\n1. Return to https://neo4j.com/developer/cla/\r\n1. Click `How to sign` -- https://neo4j.com/developer/cla/#sign-cla\r\n1. Read the paragraph:\r\n   > When you\u2019ve read through the CLA, please send a mail to cla (@t) neotechnology dot com. Include the following information:\r\n\r\n1. \u2049\ufe0f Note that the address is `cla@neotechnology.com`\r\n\r\n### Expected behavior\r\n1. URLs should be `https`\r\n1. The email address referenced by the web page and the PDF should be consistent\r\n\r\n### Actual behavior\r\n\r\n1. PDF is served over `http`\r\n1. The PDF itself appears to have changed recently, as the version of the PDF that I submitted has the `old` address `cla@neotechnology.com`."}, {"labels": ["4.0", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12389", "title": "Cypher query fails on 4.0", "closed": "2020-03-30 07:38:32", "commitsDetails": [], "commits": {}, "ttf": 53.000277777777775, "created": "2020-02-05 14:22:33", "user": "webtic", "body": "- Neo4j version: 4.0\r\n- Operating system: macOS 10.13.6\r\n- API/Driver: localhost:7474\r\n\r\n**Steps to reproduce**\r\n\r\nWhile this query ran fine on 3.5 :\r\n\r\n```\r\nMATCH (e:LearningActivity) \r\n        OPTIONAL MATCH (e)-[:ICONIC_IMAGE]-(img)\r\n        WITH collect(img)[0] as img, e\r\n        OPTIONAL MATCH (e)-[:IS_OWNER]-(m:Member)\r\n        WITH DISTINCT e {\r\n            typecode: 'la',\r\n            url: '/learning-activity/'+e.slug,\r\n            activity: properties(e),\r\n            upload_uuid: img.upload_uuid,\r\n            gewone_uuid: img.uuid,\r\n            icon: apoc.text.join(['/ua',img.path],'/'),\r\n            image: CASE EXISTS(img.upload_uuid) WHEN true THEN apoc.text.join(['objects',img.upload_uuid,img.thumb],'/') ELSE apoc.text.join(['objects',img.uuid,img.thumb],'/') END, \r\n            x: img,\r\n            has_image: count(img),\r\n            image_url: CASE EXISTS(img.upload_uuid) WHEN true THEN apoc.text.join(['objects',img.upload_uuid,img.thumb],'/') ELSE apoc.text.join(['objects',img.uuid,img.thumb],'/') END, \r\n            owner: { name: m.name, uuid: m.uuid, login: m.login }\r\n        } AS r \r\n        RETURN collect(r)\r\n\r\n```\r\nIt fails on 4.0 with this error:\r\n\r\n```class org.neo4j.values.storable.NoValue cannot be cast to class org.neo4j.values.virtual.VirtualNodeValue (org.neo4j.values.storable.NoValue and org.neo4j.values.virtual.VirtualNodeValue are in unnamed module of loader 'app')```\r\n\r\nRemoving the first OPTIONAL solves the issue, indicating that there are probably nodes without any image but internally that is handled less gracefully than it was in 3.5\r\n\r\n\r\n\r\n\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12388", "title": "Unable to start server. \"Mismatching store id\" on newly created DB.", "closed": "2020-05-18 14:12:21", "commitsDetails": [], "commits": {}, "ttf": 105.00027777777778, "created": "2020-02-02 17:52:26", "user": "ogronome", "body": "Hello! I have rather good experience with neo4j 3.X and jre8, but struggle to migrate to jre11 and neo4j.\r\n\r\nI always recreate DB with neo4j-admin from csv (about 40GB)\r\nDB path is custom and set in /etc/neo4j/neo4j.conf\r\nThe issue is not related to permissions. I tried to chown and to create everything by neo4j user. \r\n\r\nI get NO errors on neo4j-admin (except for missing nodes), but when I start neo4j, it fails completely.\r\ndebug.log is attached\r\n\r\n[debug.log](https://github.com/neo4j/neo4j/files/4144823/debug.log)\r\n\r\nThe system that works great: CentOS7 with jre8 and neo4j 3 (I started with 3.0, till 3.5.14) from repo\r\nThe system that fails: Debian 10.2 with jre11 and neo4j 4.0.0 from repo\r\n\r\nimport syntax for neo4j 3.5:\r\nneo4j-admin import --mode=csv \\\r\n--nodes:ids:Obj scripts/obj.h,obj \\\r\n--nodes:ids:Obj scripts/obj.h,static/idsss \\\r\n--nodes:ids:Obj scripts/obj.h,static/allids \\\r\n--relationships:present scripts/rel.h,normal \\\r\n--relationships:present scripts/rel.h,static/rel01 \\\r\n--relationships:present scripts/rel.h,static/rel02 \\\r\n--relationships:colleague scripts/rel.h,hist \\\r\n--ignore-missing-nodes=true --ignore-duplicate-nodes=true\r\n\r\nfor neo4j 4.0.0:\r\nneo4j-admin import --database=graph --max-memory=2g --high-io=false \\\r\n--nodes=ids:Obj=scripts/obj.h,obj \\\r\n--nodes=ids:Obj=scripts/obj.h,static/idsss \\\r\n--nodes=ids:Obj=scripts/obj.h,static/allids \\\r\n--relationships=present=scripts/rel.h,normal \\\r\n--relationships=present=scripts/rel.h,static/rel01 \\\r\n--relationships=present=scripts/rel.h,static/rel02 \\\r\n--relationships=colleague=scripts/rel.h,hist \\\r\n--skip-duplicate-nodes=true \\\r\n--skip-bad-relationships=true\r\n\r\nsource files are the same. "}, {"labels": ["bug", "team-clg"], "url": "https://github.com/neo4j/neo4j/issues/12386", "title": "Cypher queries with scientific notation fail", "closed": "2020-02-18 10:09:16", "commitsDetails": [], "commits": {}, "ttf": 18.00027777777778, "created": "2020-01-30 14:35:33", "user": "jjg-dressipi", "body": "I'm using Neo4j 3.4.1 on Ubuntu.  I find that the queries \r\n```\r\nCREATE (n {name:\"World\", freq: 3.9e-05}) RETURN \"hello\", n.name\r\nCREATE (n {name:\"World\", freq: 3.9e05}) RETURN \"hello\", n.name\r\n```\r\nsucceed _but_ \r\n```\r\nCREATE (n {name:\"World\", freq: 3.9e+05}) RETURN \"hello\", n.name\r\n```\r\nfails with the error\r\n```\r\nNeo.ClientError.Statement.SyntaxError: invalid literal number (line 1, column 32 (offset: 31))\r\n\"CREATE (n {name:\"World\", freq: 3.9e+05}) RETURN \"hello\", n.name\"\r\n                                ^\r\n```\r\nIt seems that the floating-point decimal parser does not accept a \"+\" preceding the exponent, but I believe that this \"+\" is required by the C standard (*), it is certainly implemented in this way in all C compilers that I have used, so will find its way into the formatted output of any language written in C,  so Ruby, Python, ....  I personally came across this issue using neo4j.rb, but have confirmed the issue in the bolt shell. \r\n\r\n(*) The standard is not available online, but IEEE Std 1003.1-2017 is, and declares itself aligned.  In their [specification for `printf`](https://pubs.opengroup.org/onlinepubs/9699919799/functions/printf.html) it is stated\r\n> e, E: The double argument shall be converted in the style \"[-]d.ddde\u00b1dd\", \r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12385", "title": "Neo4j Server should return error message when cypher-shell is wrong version", "closed": "2020-04-20 09:25:53", "commitsDetails": [], "commits": {}, "ttf": 87.00027777777778, "created": "2020-01-23 21:38:14", "user": "mojo2go", "body": "\r\n\r\n## Neo4j Server should only accept connections from a matching version cypher-shell \r\n\r\nI started using a small widget app to make it more speedy for me to switch between servers:\r\nhttps://community.neo4j.com/t/a-wrapper-for-cypher-shell-with-profiles/12573\r\nBut it's naive in this early version in that it does not try to match the cypher-shell version with the server version.  It uses what ever local cypher-shell.jar file you pointed it to, for every connection.\r\n\r\nLast time I installed this widget I was testing out the Neo4j 4.0.0-alpha, and that version of cypher-shell ended up being the version of cypher-shell I used through the widget.  I used it across 4 different versions of Neo4j Server without incident, for weeks, until I ran one particular query on Neo4j Server 3.5.8.  This is the query:\r\n\r\n`CREATE (t:Thing1) DETACH DELETE t;`\r\n\r\n### Aside:\r\n_My  intent for running this (as admin) was to make it possible for developers (as editor) to be able to use the label \"Thing1\" on nodes.  It's a way of roughly controlling what is allowed in the schema.  Thing1 label did't exist in the database, and so no developer was able to create that new token until I did, as admin.  It has always worked as intended.  It would create and delete the new token in a single transaction, and as a side effect make it an allowed token in the database for those with only editor role.  And the query ran within a transaction, so I was not polluting the database with unintended objects._  \r\n\r\nBut when I ran that query from cypher-shell 4.0.0-alpha on Neo4j Server 3.5.8, it did something unpredictable;  It 'aliased' an existing label in the database, Person, and made Person not visible in the database (still useable, but not visible).  What I mean is that when I looked at the Database Information tab in Neo4j Desktop I no longer saw a Person label.  Instead it was represented as Thing1.  When I searched for Thing1 labelled nodes I got my person nodes, but in the results when I reported the labels on those nodes they also showed Thing1.  I say 'aliased' because I could search for Person nodes and would get the same result, the person nodes but labelled as Thing1, not person.\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12384", "title": "Neo4j default .conf file using deprecated dbms.connectors.default_listen_address configuration item", "closed": "2020-01-23 10:23:41", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2020-01-22 19:23:11", "user": "pdrangeid", "body": "\r\n- Neo4j version: 4.0.0\r\n- Operating system: Windows Server 2016\r\n- API/Driver: n/a\r\n- Clean install of neo4j - uncomment the example line for Network connector configuration:\r\n\"# To accept non-local connections, uncomment this line:\r\n#dbms.connectors.default_listen_address=0.0.0.0\"\r\n\r\n- Expected behavior\r\nThe default included config file commented line SHOULD be updated to reflect the new configuration dbms.default_listen_address instead of dbms.connectors.default_listen_address \r\n\r\n- Actual behavior\r\nThe default configuration file supplies an-already-deprecated configuration item: \"dbms.connectors.default_listen_address\" \r\n\r\nAdditionally, include (as appropriate) log-files, stacktraces, and other debug output.\r\n\r\nThe neo4j log file will reflect that it is seeing a deprecated configuration setting being used.\r\n\r\n### Steps to reproduce\r\n1. Install neo4j 4.0.0 community edition for windows\r\n2. start the neo4j service\r\n3. check the /logs/neo4j.log file\r\n\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12382", "title": "Isolation issue in Neo4j 3.5.8", "closed": "2020-01-31 18:40:35", "commitsDetails": [], "commits": {}, "ttf": 9.000277777777777, "created": "2020-01-22 08:17:30", "user": "luanne", "body": "**Neo4j Version:** 3.5.8\r\n\r\n### Steps to reproduce\r\n1. Set up a test which concurrently executes two Cypher queries under load- one that deletes nodes, and the second that reads nodes and relationships  (we used JMeter and Blazerunner)\r\n2. Record the results\r\n\r\n### Expected behavior\r\nZero failures\r\n\r\n### Actual behavior\r\nThe read query fails intermittently.\r\n\r\nHere are the results of testing on two different databases, with two different sets of queries-\r\n\r\n**Database 1:**\r\n\r\nDelete query-\r\n\r\n```\r\nMATCH (project:BuildingProject {vertex_id: $vertex_id})\r\nOPTIONAL MATCH (project)-[:VIEW]->(project_view:BuildingProjectView)\r\nOPTIONAL MATCH (project)-[:SOURCED]->(bim_project:BimProject)\r\nOPTIONAL MATCH (project)-[:SOURCED]->(tally_project:TallyProject)\r\nOPTIONAL MATCH (project_view)-[:CONTAINS*]->(project_view_label:BuildingProjectViewLabel)\r\nOPTIONAL MATCH (project_view_label)-[:CONTAINS_ELEMENT]->(element:BuildingElement)\r\nDETACH DELETE project, project_view, project_view_label, element, bim_project, tally_project\r\n```\r\n\r\nRead query-\r\n```\r\nMATCH (n:BuildingItem)\r\nWHERE NOT coalesce(n.temporary, false) AND NOT n:Archived\r\nMATCH (user:Person)\r\n WHERE id(user) = $trustee\r\nMATCH (n)<-[*..6 {r: true}]-(user)\r\nWITH DISTINCT n, user\r\nOPTIONAL MATCH (n)<-[:INCLUDES]-(parent:BuildingItem)\r\n\r\nOPTIONAL MATCH paths_to_parent = shortestPath((parent)<-[*..6]-(user))\r\n WHERE ALL(rr IN relationships(paths_to_parent)\r\n   WHERE exists(rr.r))\r\nWITH n, user, size(collect(paths_to_parent)) > 0 AS can_read_parent\r\n WHERE NOT (n)<-[:INCLUDES]-(:BuildingItem) OR can_read_parent = false\r\nWITH DISTINCT n, user\r\n\r\nORDER BY n.sort_key_type DESC\r\nSKIP $skip LIMIT $limit\r\nWITH n, user\r\nOPTIONAL MATCH paths = shortestPath((n)<-[*..6]-(user))\r\n WHERE ALL(rr IN relationships(paths)\r\n   WHERE exists(rr.w))\r\nWITH CASE WHEN size(collect(paths)) > 0 THEN 4 ELSE 0 END AS W, n, user\r\nOPTIONAL MATCH paths = shortestPath((n)<-[*..6]-(user))\r\n WHERE ALL(rr IN relationships(paths)\r\n   WHERE exists(rr.m))\r\nWITH CASE WHEN size(collect(paths)) > 0 THEN 8 ELSE 0 END AS M, n, user, 1 as H, 2 as R, W\r\nOPTIONAL MATCH (n)-[:VIEW]->(view:BuildingProjectView)\r\nWHERE (view)-[:CONTAINS]->(:BuildingProjectViewLabel)\r\nOPTIONAL MATCH (n)<-[:READS|WRITES|MANAGES]-(trustees)\r\nOPTIONAL MATCH (n)<-[:INCLUDES]-(complex:BuildingComplex)\r\nOPTIONAL MATCH (complex)<-[:READS|WRITES|MANAGES]-(complex_trustees)\r\nOPTIONAL MATCH (complex)<-[:INCLUDES]-(campus:BuildingCampus)\r\nOPTIONAL MATCH (campus)<-[:READS|WRITES|MANAGES]-(campus_trustees)\r\nOPTIONAL MATCH (n)<-[:OWNS]-(owner:Person)\r\nRETURN n, owner, apoc.coll.union(apoc.coll.union(collect(trustees), collect(complex_trustees)), collect(campus_trustees))  AS trustees, collect(DISTINCT view) AS views, [H, R, W, M]\r\n```\r\n\r\nFailure message in the logs:\r\n```\r\nClient triggered an unexpected error [Neo.DatabaseError.General.UnknownError]: Node 349272 not found, reference 065f9f43-6a5a-49b6-a3e7-2405ec9416fc. Node 349272 not found\r\norg.neo4j.graphdb.NotFoundException: Node 349272 not found\r\n\tat org.neo4j.kernel.impl.core.NodeProxy.getRelationshipSelectionIterator(NodeProxy.java:780)\r\n\tat org.neo4j.kernel.impl.core.NodeProxy.lambda$innerGetRelationships$0(NodeProxy.java:157)\r\n\tat org.neo4j.graphdb.ResourceIterable.iterator(ResourceIterable.java:76)\r\n\tat org.neo4j.graphdb.impl.StandardExpander$AllExpander.doExpand(StandardExpander.java:231)\r\n\tat org.neo4j.graphdb.impl.StandardExpander$FilteringExpander.doExpand(StandardExpander.java:590)\r\n\tat org.neo4j.graphdb.impl.StandardExpander$RelationshipExpansion.iterator(StandardExpander.java:163)\r\n\tat org.neo4j.graphdb.impl.StandardExpander$RelationshipExpansion.iterator(StandardExpander.java:134)\r\n\tat org.neo4j.graphalgo.impl.path.ShortestPath$DirectionData$1.createNestedIterator(ShortestPath.java:370)\r\n\tat org.neo4j.graphalgo.impl.path.ShortestPath$DirectionData$1.createNestedIterator(ShortestPath.java:365)\r\n\tat org.neo4j.helpers.collection.NestingResourceIterator.fetchNextOrNull(NestingResourceIterator.java:49)\r\n\tat org.neo4j.helpers.collection.PrefetchingIterator.peek(PrefetchingIterator.java:60)\r\n\tat org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:46)\r\n\tat org.neo4j.graphalgo.impl.path.ShortestPath$DirectionData.fetchNextRelOrNull(ShortestPath.java:443)\r\n\tat org.neo4j.graphalgo.impl.path.ShortestPath$DirectionData.fetchNextOrNull(ShortestPath.java:396)\r\n\tat org.neo4j.graphalgo.impl.path.ShortestPath$DirectionData.fetchNextOrNull(ShortestPath.java:319)\r\n\tat org.neo4j.helpers.collection.PrefetchingIterator.peek(PrefetchingIterator.java:60)\r\n\tat org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:46)\r\n\tat org.neo4j.graphalgo.impl.path.ShortestPath.internalPaths(ShortestPath.java:161)\r\n\tat org.neo4j.graphalgo.impl.path.ShortestPath.findSinglePath(ShortestPath.java:127)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext.singleShortestPath(TransactionBoundQueryContext.scala:961)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext$$anonfun$singleShortestPath$1.apply(ExceptionTranslatingQueryContext.scala:275)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext$$anonfun$singleShortestPath$1.apply(ExceptionTranslatingQueryContext.scala:275)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslationSupport$class.translateException(ExceptionTranslationSupport.scala:33)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext.translateException(ExceptionTranslatingQueryContext.scala:41)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext.singleShortestPath(ExceptionTranslatingQueryContext.scala:275)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.commands.expressions.ShortestPathExpression.getMatches(ShortestPathExpression.scala:69)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.commands.expressions.ShortestPathExpression.apply(ShortestPathExpression.scala:55)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.ShortestPathPipe$$anonfun$internalCreateResults$1.apply(ShortestPathPipe.scala:48)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.ShortestPathPipe$$anonfun$internalCreateResults$1.apply(ShortestPathPipe.scala:47)\r\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)\r\n\tat scala.collection.Iterator$class.isEmpty(Iterator.scala:331)\r\n\tat scala.collection.AbstractIterator.isEmpty(Iterator.scala:1334)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.OptionalSlottedPipe.internalCreateResults(OptionalSlottedPipe.scala:49)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:76)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.ApplySlottedPipe$$anonfun$internalCreateResults$1.apply(ApplySlottedPipe.scala:19)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.ApplySlottedPipe$$anonfun$internalCreateResults$1.apply(ApplySlottedPipe.scala:17)\r\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:439)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:891)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1334)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.EagerAggregationSlottedPipe.internalCreateResults(EagerAggregationSlottedPipe.scala:130)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:76)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.runtime.executionplan.BaseExecutionResultBuilderFactory$BaseExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:61)\r\n\tat org.neo4j.cypher.internal.compatibility.InterpretedRuntime$InterpretedExecutionPlan.run(InterpretedRuntime.scala:84)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery$$anonfun$execute$3.apply(CypherCurrentCompiler.scala:205)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery$$anonfun$execute$3.apply(CypherCurrentCompiler.scala:190)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:89)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery.execute(CypherCurrentCompiler.scala:224)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:101)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:85)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachineV1SPI$BoltResultHandleV1.start(TransactionStateMachineV1SPI.java:189)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State.startExecution(TransactionStateMachine.java:506)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.execute(TransactionStateMachine.java:300)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:269)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:110)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:98)\r\n\tat org.neo4j.bolt.v1.runtime.ReadyState.processRunMessage(ReadyState.java:140)\r\n\tat org.neo4j.bolt.v1.runtime.ReadyState.processRunMessage(ReadyState.java:100)\r\n\tat org.neo4j.bolt.v1.runtime.ReadyState.process(ReadyState.java:61)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.nextState(BoltStateMachineV1.java:144)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.process(BoltStateMachineV1.java:92)\r\n\tat org.neo4j.bolt.messaging.BoltRequestMessageReader.lambda$doRead$1(BoltRequestMessageReader.java:89)\r\n\tat org.neo4j.bolt.runtime.MetricsReportingBoltConnection.lambda$enqueue$0(MetricsReportingBoltConnection.java:68)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:191)\r\n\tat org.neo4j.bolt.runtime.MetricsReportingBoltConnection.processNextBatch(MetricsReportingBoltConnection.java:86)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:139)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:171)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.lambda$scheduleBatchOrHandleError$2(ExecutorBoltScheduler.java:154)\r\n\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n**Database 2:**\r\n\r\nDelete query-\r\n```\r\nMATCH (n),(m)\r\nWITH n,m\r\nMATCH (n) DETACH DELETE n\r\n```\r\n\r\nRead query-\r\n```\r\nMATCH (n),(m)\r\nWITH n,m\r\nMATCH (n)-[r]-()\r\nOPTIONAL MATCH (m)--()\r\nRETURN n.id, type(r),m.id\r\n```\r\n\r\nFailure message:\r\n\r\n```\r\n2020-01-22 06:57:17.635+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [Neo.DatabaseError.General.UnknownError]: Kernel API returned non-existent relationship type: -1, reference 6257d614-1d9f-4619-ac52-04c396c5a160. Kernel API returned non-existent relationship type: -1\r\njava.lang.IllegalStateException: Kernel API returned non-existent relationship type: -1\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacade.getRelationshipTypeById(GraphDatabaseFacade.java:991)\r\n\tat org.neo4j.kernel.impl.core.RelationshipProxy.getType(RelationshipProxy.java:222)\r\n\tat org.neo4j.kernel.impl.util.RelationshipProxyWrappingValue.type(RelationshipProxyWrappingValue.java:157)\r\n\tat org.neo4j.cypher.operations.CypherFunctions.type(CypherFunctions.java:743)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.commands.expressions.RelationshipTypeFunction.compute(RelationshipTypeFunction.scala:30)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.commands.expressions.NullInNullOutExpression.apply(NullInNullOutExpression.scala:32)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.expressions.SlottedCommandProjection$$anonfun$1$$anonfun$apply$1.apply(SlottedCommandProjection.scala:21)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.expressions.SlottedCommandProjection$$anonfun$1$$anonfun$apply$1.apply(SlottedCommandProjection.scala:20)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.expressions.SlottedCommandProjection$$anonfun$project$1.apply(SlottedCommandProjection.scala:25)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.expressions.SlottedCommandProjection$$anonfun$project$1.apply(SlottedCommandProjection.scala:25)\r\n\tat scala.collection.immutable.List.foreach(List.scala:392)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.expressions.SlottedCommandProjection.project(SlottedCommandProjection.scala:25)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.ProjectionPipe$$anonfun$internalCreateResults$1.apply(ProjectionPipe.scala:38)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.ProjectionPipe$$anonfun$internalCreateResults$1.apply(ProjectionPipe.scala:37)\r\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:410)\r\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:410)\r\n\tat org.neo4j.cypher.internal.runtime.RuntimeJavaValueConverter$feedQueryResultRecordIteratorToVisitable.accept(RuntimeJavaValueConverter.scala:64)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.runtime.PipeExecutionResult.accept(PipeExecutionResult.scala:74)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.runtime.executionplan.StandardInternalExecutionResult.accept(StandardInternalExecutionResult.scala:192)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply$mcV$sp(ClosingExecutionResult.scala:158)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:158)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:158)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$safelyAndClose$1.apply(ClosingExecutionResult.scala:171)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:89)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult.safelyAndClose(ClosingExecutionResult.scala:174)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult.accept(ClosingExecutionResult.scala:157)\r\n\tat org.neo4j.bolt.v1.runtime.CypherAdapterStream.accept(CypherAdapterStream.java:73)\r\n\tat org.neo4j.bolt.v1.messaging.ResultHandler.onRecords(ResultHandler.java:40)\r\n\tat org.neo4j.bolt.v3.runtime.StreamingState.lambda$processStreamResultMessage$0(StreamingState.java:41)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State.consumeResult(TransactionStateMachine.java:484)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.streamResult(TransactionStateMachine.java:328)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.streamResult(TransactionStateMachine.java:128)\r\n\tat org.neo4j.bolt.v3.runtime.StreamingState.processStreamResultMessage(StreamingState.java:40)\r\n\tat org.neo4j.bolt.v3.runtime.AbstractStreamingState.processUnsafe(AbstractStreamingState.java:44)\r\n\tat org.neo4j.bolt.v3.runtime.FailSafeBoltStateMachineState.process(FailSafeBoltStateMachineState.java:48)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.nextState(BoltStateMachineV1.java:144)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.process(BoltStateMachineV1.java:92)\r\n\tat org.neo4j.bolt.messaging.BoltRequestMessageReader.lambda$doRead$1(BoltRequestMessageReader.java:89)\r\n\tat org.neo4j.bolt.runtime.MetricsReportingBoltConnection.lambda$enqueue$0(MetricsReportingBoltConnection.java:68)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:191)\r\n\tat org.neo4j.bolt.runtime.MetricsReportingBoltConnection.processNextBatch(MetricsReportingBoltConnection.java:86)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:139)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:171)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.lambda$scheduleBatchOrHandleError$2(ExecutorBoltScheduler.java:154)\r\n\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1604)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n```\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12379", "title": "neo4j will fail to start when using other's graph", "closed": "2020-01-20 07:40:17", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2020-01-19 08:20:10", "user": "Jaggar2018", "body": "\r\nI discover that when I try to open others' graph by use their databases and dbms to overwrite mine, \r\nneo4j will fail to start. (running on the server)\r\n\r\n\r\n**Neo4j Version: 3.4.17 \r\n**Operating System: CentOS Linux release 7.5.1804 (Core)\r\n\r\n\r\n### Steps to reproduce\r\n1. Load others\u2018graph by using their dmbs and databases file to overwrite my data file.\r\n(PS: I can start the neo4j successfully when I use my own dmbs and databases)\r\n2. Run: neo4j start\r\n\r\n3. Here is the neo4j-community-3.4.17/logs/neo4j.log: \r\nERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@3003697' was successfully initialized, but failed to start. Please see the attached cause exception \"/home/wangyi/neo4j-community-3.4.17/data/databases/graph.db/schema/index/lucene_native-2.0/9/lucene-1.0/failure-message (Too many open files)\". Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@3003697' was successfully initialized, but failed to start. Please see the attached cause exception \"/home/wangyi/neo4j-community-3.4.17/data/databases/graph.db/schema/index/lucene_native-2.0/9/lucene-1.0/failure-message (Too many open files)\".\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@3003697' was successfully initialized, but failed to start. Please see the attached cause exception \"/home/wangyi/neo4j-community-3.4.17/data/databases/graph.db/schema/index/lucene_native-2.0/9/lucene-1.0/failure-message (Too many open files)\".\r\n        at org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:68)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:220)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:111)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:79)\r\n        at org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:32)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabase@3003697' was successfully initialized, but failed to start. Please see the attached cause exception \"/home/wangyi/neo4j-community-3.4.17/data/databases/graph.db/schema/index/lucene_native-2.0/9/lucene-1.0/failure-message (Too many open files)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:466)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:212)\r\n        ... 3 more\r\nCaused by: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory, /home/wangyi/neo4j-community-3.4.17/data/databases/graph.db\r\n\r\n### Expected behavior\r\nthe neo4j can be started succesfully\r\n\r\n### Actual behavior\r\nERR_CONNECTION_REFUSED\r\n\r\nThanks a lot if anyone can help"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12378", "title": "Subqueries: returning values behaves inconsistently", "closed": "2020-01-29 09:20:48", "commitsDetails": [], "commits": {}, "ttf": 12.000277777777777, "created": "2020-01-17 05:42:34", "user": "luanne", "body": "Returning values from subqueries seems to work inconsistently across nodes and properties\r\n\r\n**Neo4j Version:** 4.0.0\r\n\r\n### Steps to reproduce\r\n\r\n```\r\ncall {\r\nmatch (n:Person)-[:ACTED_IN]->(m) return m\r\nunion\r\nmatch (n:Persin)-[:DIRECTED]->(m) return m\r\n}\r\nreturn m.title\r\n```\r\nworks as expected but\r\n\r\n```\r\ncall {\r\nmatch (n:Person)-[:ACTED_IN]->(m) return m.title\r\nunion\r\nmatch (n:Persin)-[:DIRECTED]->(m) return m.title\r\n}\r\nreturn m.title\r\n```\r\n\r\nproduces\r\n```\r\nVariable `m` not defined (line 6, column 8 (offset: 120))\r\n\"return m.title\"\r\n```\r\n\r\n### Expected behavior\r\nReturning `m.title` should not produce an error\r\n\r\n### Actual behavior\r\nThis error is returned\r\n```\r\nVariable `m` not defined (line 6, column 8 (offset: 120))\r\n\"return m.title\"\r\n```\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12373", "title": "GraphDatabaseService is not injected in the unmanaged server extension", "closed": "2020-01-10 10:01:45", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2020-01-04 23:49:55", "user": "swaechter", "body": "## Background\r\n\r\nI am in the process of writing an unmanaged server extension and used the 3.5.14 community version (Both Neo4j server & Java dependencies). I wrote a really small extension that worked:\r\n\r\n## Steps to reproduce\r\n\r\nA simple server extension:\r\n\r\n```\r\npackage acme.treeserver;\r\n\r\nimport org.neo4j.graphdb.GraphDatabaseService;\r\nimport org.neo4j.logging.Log;\r\n\r\nimport javax.ws.rs.GET;\r\nimport javax.ws.rs.Path;\r\nimport javax.ws.rs.Produces;\r\nimport javax.ws.rs.core.Context;\r\nimport javax.ws.rs.core.MediaType;\r\nimport javax.ws.rs.core.Response;\r\nimport javax.ws.rs.core.Response.Status;\r\n\r\n@Path(\"/tree\")\r\npublic class TreeResource {\r\n\r\n    private final Log log;\r\n\r\n    private final GraphDatabaseService graphDatabaseService;\r\n\r\n    public TreeResource(@Context Log log, @Context GraphDatabaseService graphDatabaseService) {\r\n        this.log = log;\r\n        this.graphDatabaseService = graphDatabaseService;\r\n        this.log.info(\"Call that triggers the null pointer (or not): \" + graphDatabaseService.getClass().getSimpleName());\r\n    }\r\n\r\n    @GET\r\n    @Path(\"/hello\")\r\n    @Produces(MediaType.TEXT_PLAIN)\r\n    public Response sayHello() {\r\n        this.log.info(\"Call that triggers the null pointer (or not): \" + graphDatabaseService.getClass().getSimpleName());\r\n        return Response.status(Status.OK).build();\r\n    }\r\n}\r\n```\r\n\r\nAnd the following Gradle file:\r\n\r\n```\r\nplugins {\r\n    id 'java'\r\n}\r\n\r\ngroup 'org.example'\r\nversion '1.0-SNAPSHOT'\r\n\r\nsourceCompatibility = 1.8\r\n\r\nrepositories {\r\n    mavenCentral()\r\n}\r\n\r\ndependencies {\r\n    compileOnly \"javax.ws.rs:javax.ws.rs-api:2.1.1\"\r\n    compileOnly \"org.neo4j:neo4j:3.5.14\"\r\n//    compileOnly \"org.neo4j:neo4j:4.0.0\"\r\n    testCompile \"junit:junit:4.12\"\r\n}\r\n```\r\n\r\nThe System is a Debian Testing with the following Java version: `OpenJDK Runtime Environment (build 11.0.6-ea+7-post-Debian-1)`\r\n\r\n## Expected behaviour\r\n\r\nAfter starting the server & triggering the endpoint is like this (Expected):\r\n\r\n```\r\n2020-01-04 23:39:26.435+0000 INFO  Call that triggers the null pointer (or not): GraphDatabaseFacade\r\n2020-01-04 23:39:26.438+0000 INFO  Call that triggers the null pointer (or not): GraphDatabaseFacade\r\n```\r\n\r\n## Unexpected (new) behaviour\r\n\r\nNow after switching to the Neo4j version 4.0.0 (Java dependencies) and Neo4j 4.0.0-rc01 (Server version), `GraphDatabaseService` isn't injected anymore (Null pointer) and the following exception is triggered:\r\n\r\n```\r\n2020-01-04 23:43:11.301+0000 WARN  The following warnings have been detected: WARNING: Unknown HK2 failure detected:\r\nMultiException stack 1 of 2\r\njava.lang.NullPointerException\r\n        at acme.treeserver.TreeResource.<init>(TreeResource.java:24)\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n        at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1352)\r\n        at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)\r\n        at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)\r\n        at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)\r\n        at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)\r\n        at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)\r\n        at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)\r\n        at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)\r\n        at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)\r\n        at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)\r\n        at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)\r\n        at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)\r\n        at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)\r\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)\r\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:292)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:274)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:244)\r\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)\r\n        at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)\r\n        at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)\r\n        at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)\r\n        at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)\r\n        at org.neo4j.server.rest.dbms.AuthorizationEnabledFilter.doFilter(AuthorizationEnabledFilter.java:122)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.neo4j.server.rest.web.AccessiblePathFilter.doFilter(AccessiblePathFilter.java:60)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.neo4j.server.rest.web.CorsFilter.doFilter(CorsFilter.java:115)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\r\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:61)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:505)\r\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)\r\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)\r\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\r\n        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\r\n        at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:786)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:743)\r\n        at java.base/java.lang.Thread.run(Thread.java:834)\r\nMultiException stack 2 of 2\r\njava.lang.IllegalStateException: Unable to perform operation: create on acme.treeserver.TreeResource\r\n        at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:369)\r\n        at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)\r\n        at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)\r\n        at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)\r\n        at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)\r\n        at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)\r\n        at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)\r\n        at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)\r\n        at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)\r\n        at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)\r\n        at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)\r\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)\r\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:292)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:274)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:244)\r\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)\r\n        at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)\r\n        at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)\r\n        at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)\r\n        at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)\r\n        at org.neo4j.server.rest.dbms.AuthorizationEnabledFilter.doFilter(AuthorizationEnabledFilter.java:122)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.neo4j.server.rest.web.AccessiblePathFilter.doFilter(AccessiblePathFilter.java:60)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.neo4j.server.rest.web.CorsFilter.doFilter(CorsFilter.java:115)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\r\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:61)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:505)\r\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)\r\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)\r\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\r\n        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\r\n        at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:786)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:743)\r\n        at java.base/java.lang.Thread.run(Thread.java:834)\r\n\r\n\r\n2020-01-04 23:43:11.304+0000 WARN  /tree/tree/hello A MultiException has 2 exceptions.  They are:\r\n1. java.lang.NullPointerException\r\n2. java.lang.IllegalStateException: Unable to perform operation: create on acme.treeserver.TreeResource\r\n\r\njavax.servlet.ServletException: A MultiException has 2 exceptions.  They are:\r\n1. java.lang.NullPointerException\r\n2. java.lang.IllegalStateException: Unable to perform operation: create on acme.treeserver.TreeResource\r\n\r\n        at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:408)\r\n        at org.glassfish.jersey.servlet.WebComponent.service(WebComponent.java:346)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:365)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:318)\r\n        at org.glassfish.jersey.servlet.ServletContainer.service(ServletContainer.java:205)\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:873)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1623)\r\n        at org.neo4j.server.rest.dbms.AuthorizationEnabledFilter.doFilter(AuthorizationEnabledFilter.java:122)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.neo4j.server.rest.web.AccessiblePathFilter.doFilter(AccessiblePathFilter.java:60)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.neo4j.server.rest.web.CorsFilter.doFilter(CorsFilter.java:115)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1610)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:540)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1700)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1345)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:480)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1667)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1247)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\r\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:61)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:505)\r\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:370)\r\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:267)\r\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\r\n        at org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\r\n        at org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:117)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:786)\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:743)\r\n        at java.base/java.lang.Thread.run(Thread.java:834)\r\nCaused by: A MultiException has 2 exceptions.  They are:\r\n1. java.lang.NullPointerException\r\n2. java.lang.IllegalStateException: Unable to perform operation: create on acme.treeserver.TreeResource\r\n\r\n        at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:368)\r\n        at org.jvnet.hk2.internal.SystemDescriptor.create(SystemDescriptor.java:463)\r\n        at org.glassfish.jersey.inject.hk2.RequestContext.findOrCreate(RequestContext.java:59)\r\n        at org.jvnet.hk2.internal.Utilities.createService(Utilities.java:2102)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:754)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.internalGetService(ServiceLocatorImpl.java:717)\r\n        at org.jvnet.hk2.internal.ServiceLocatorImpl.getService(ServiceLocatorImpl.java:687)\r\n        at org.glassfish.jersey.inject.hk2.AbstractHk2InjectionManager.getInstance(AbstractHk2InjectionManager.java:160)\r\n        at org.glassfish.jersey.inject.hk2.ImmediateHk2InjectionManager.getInstance(ImmediateHk2InjectionManager.java:30)\r\n        at org.glassfish.jersey.internal.inject.Injections.getOrCreate(Injections.java:105)\r\n        at org.glassfish.jersey.server.model.MethodHandler$ClassBasedMethodHandler.getInstance(MethodHandler.java:260)\r\n        at org.glassfish.jersey.server.internal.routing.PushMethodHandlerRouter.apply(PushMethodHandlerRouter.java:51)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:86)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage._apply(RoutingStage.java:89)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:69)\r\n        at org.glassfish.jersey.server.internal.routing.RoutingStage.apply(RoutingStage.java:38)\r\n        at org.glassfish.jersey.process.internal.Stages.process(Stages.java:173)\r\n        at org.glassfish.jersey.server.ServerRuntime$1.run(ServerRuntime.java:245)\r\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:248)\r\n        at org.glassfish.jersey.internal.Errors$1.call(Errors.java:244)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:292)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:274)\r\n        at org.glassfish.jersey.internal.Errors.process(Errors.java:244)\r\n        at org.glassfish.jersey.process.internal.RequestScope.runInScope(RequestScope.java:265)\r\n        at org.glassfish.jersey.server.ServerRuntime.process(ServerRuntime.java:232)\r\n        at org.glassfish.jersey.server.ApplicationHandler.handle(ApplicationHandler.java:680)\r\n        at org.glassfish.jersey.servlet.WebComponent.serviceImpl(WebComponent.java:392)\r\n        ... 34 more\r\nCaused by: java.lang.NullPointerException\r\n        at acme.treeserver.TreeResource.<init>(TreeResource.java:24)\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n        at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n        at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n        at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n        at org.glassfish.hk2.utilities.reflection.ReflectionHelper.makeMe(ReflectionHelper.java:1352)\r\n        at org.jvnet.hk2.internal.ClazzCreator.createMe(ClazzCreator.java:248)\r\n        at org.jvnet.hk2.internal.ClazzCreator.create(ClazzCreator.java:342)\r\n        ... 63 more\r\n\r\n```\r\n\r\n\r\nAccording to the documentation this is still the way to go (https://neo4j.com/docs/java-reference/4.0-preview/extending-neo4j/http-server-extensions/). Is this a problem or do I miss something?"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12372", "title": "Possible bug on path matching", "closed": "2020-01-07 07:48:39", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2020-01-02 17:19:18", "user": "bradleygore", "body": "I'm still new to neo4j, but this may be a bug in the path matching mechanism. Or, I could just be misunderstanding how it works :)\r\n\r\n**Neo4j Version:** 3.5.9 Enterprise\r\n**Operating System:** MacOS Catalina 10.15.2\r\n**API:** neo4j Browser 3.2.20\r\n\r\n### Steps to reproduce\r\nWe have a setup such that part of our graph contains `:User` labels, that own `:Email` labels, and may be members of `:Role:System` labels. We are building a mechanism to wipe all but the following items from the graph: \r\n\r\n* system roles\r\n* users that are member of any system role\r\n* emails of users that are member of any system role\r\n\r\nThis is for development/CI/etc.. We noticed that if the user(s) in question only have 1 `:Email` relation, all works as expected. However, if they have a second (or more), then only 1 of their `:Email` relations will remain.\r\n\r\nWhat we initially tried was this:\r\n\r\n```\r\nMATCH p=(e:Email)-[:HAS_EMAIL]-(u:User)-[:MEMBER_OF]-(r:Role:System)\r\nWITH nodes(p) AS pNodes\r\nMATCH notP=(n) WHERE NOT (n in pNodes)\r\nDETACH DELETE notP\r\n```\r\n\r\nHowever, it seems that each node `n` is not compared to the entire set of `p` nodes - which leads to all but one of the related `:Email` nodes to being deleted on the `:User` nodes we want to retain. This can be seen by the textual output using a modified form of the above query:\r\n\r\n```\r\nMATCH p=(e:Email)-[:HAS_EMAIL]-(u:User)-[:MEMBER_OF]-(r:Role:System)\r\nWITH nodes(p) AS pNodes\r\nMATCH notP=(n) WHERE NOT (n in pNodes)\r\nWITH nodes(notP) AS notPNodes, pNodes\r\nRETURN notPNodes, pNodes\r\n```\r\n\r\n```\r\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\r\n\u2502\"notPNodes\"                                                              \u2502\"pNodes\"                                                                 \u2502\r\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\r\n\u2502[{\"name\":\"Test Node\",\"someId\":1234}]                                     \u2502[{\"addr\":\"baz@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u2502                                                                         \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"name\":\"Some Other Node\",\"someId\":123,\"isDefault\":true}]               \u2502[{\"addr\":\"baz@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u2502                                                                         \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"addr\":\"foo@bar.com\"}]                                                 \u2502[{\"addr\":\"baz@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u2502                                                                         \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"firstName\":\"Regular\",\"lastName\":\"User\",\"id\":\"86864a48-11b5-4067-8aae-7\u2502[{\"addr\":\"baz@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u25024a34ca184a9\"}]                                                           \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"addr\":\"bar@foo.com\"}]                                                 \u2502[{\"addr\":\"baz@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u2502                                                                         \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"name\":\"Test Node\",\"posId\":1234}]                                      \u2502[{\"addr\":\"foo@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u2502                                                                         \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"name\":\"Some Other Node\",\"someId\":123,\"isDefault\":true}]               \u2502[{\"addr\":\"foo@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u2502                                                                         \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"addr\":\"baz@bar.com\"}]                                                 \u2502[{\"addr\":\"foo@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u2502                                                                         \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"firstName\":\"Regular\",\"lastName\":\"User\",\"id\":\"86864a48-11b5-4067-8aae-7\u2502[{\"addr\":\"foo@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u25024a34ca184a9\"}]                                                           \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u2502[{\"addr\":\"bar@foo.com\"}]                                                 \u2502[{\"addr\":\"foo@bar.com\"},{\"firstName\":\"Master\",\"lastName\":\"User\",\"id\":\"02f\u2502\r\n\u2502                                                                         \u250245328-b1b3-4840-b97b-7959fe7b8f28\"},                                     \u2502\r\n\u2502                                                                         \u2502{\"name\":\"Some System Role\",\"description\":\"\"}]                            \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nNotice how that it seems there are two subsets of data represented in `pNodes` - rows 1-5 show the email as `\"baz@bar.com\"` while rows 6+ show the email as `\"foo@bar.com\"`. However, that's not really what we want - we want every node in the `notPNodes` set compared to *all* nodes in the `pNodes` set. The same user owns both of these emails, and we want to retain them both given that this user is a `:MEMBER_OF` a `:Role:System` node.\r\n\r\nWhat we came up with instead is this query:\r\n\r\n```\r\nMATCH (u:User)-[:MEMBER_OF]-(r:Role:System)\r\nMATCH (u)-[:HAS_EMAIL]->(e:Email)\r\nWITH COLLECT(u) as users, COLLECT(e) as emails, COLLECT(r) as roles\r\nMATCH np=(n) WHERE NOT (n in users) AND NOT (n in emails) AND NOT (n in roles)\r\nDETACH DELETE np;\r\n```\r\n\r\nHowever, not entirely sure if the full path match above *should have* worked differently, or if there's a better way to do what is needed here.\r\n\r\nAgain - not sure if this is a bug or just a shortcoming of my understanding of the graph mechanisms. Feedback very welcome :)\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12370", "title": "Neo4j desktop - Initialization error: TypeError: Cannot read property 'name' of undefined", "closed": "2020-01-02 09:54:14", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2019-12-29 00:00:15", "user": "Manish-Giri", "body": "Two days back, I deleted some unused projects from Neo4j Desktop (to create more space to load my next dataset). Today, when I tried to start up Neo4j Desktop again, I get this error -\r\n\r\n![Screen Shot 2019-12-28 at 6 28 23 PM](https://user-images.githubusercontent.com/11348778/71550565-a13fae00-29a1-11ea-829c-6947f96d13d9.png)\r\n\r\nI tried restarting Neo4j Desktop several times, and each time, it's the same thing. \r\n\r\nI checked the \"developer tools\" tab, and there is a whole bunch of stuff in the console. I put all of it in this [gist](https://gist.github.com/Manish-Giri/9231a6236ed4dc0f4073e68c8765ef75), if it helps. \r\n\r\n\r\nHere's the relevant portion of the console which has this error message -\r\n\r\n![Screenshot 2019-12-28 18 43 23](https://user-images.githubusercontent.com/11348778/71550580-13b08e00-29a2-11ea-9274-89cbf284649f.png)\r\n\r\nThere are **several** questions on stack overflow where people report the exact same issue. Here's one from [SO](https://stackoverflow.com/questions/48998760/neo4j-initialization-error-typeerror-cannot-read-property-name-of-undefined) where Michael Hunger said on **March 1, 2018** that it was a known bug and it would be resolved in the next release.  Obviously, that never happened.\r\n\r\nOther reported issues - [1](https://stackoverflow.com/questions/50153885/neo4j-error-win-10-initialization-error-typeerror-cannot-read-property-n), [2](https://stackoverflow.com/questions/49878591/neo4j-initialization-error-typeerror-cannot-read-property-name-of-undefined), [3](https://stackoverflow.com/questions/49198296/neo4j-desktop-error-on-open-cannot-read-property-name-of-undefined)\r\n\r\nThe problem is that the suggested solution involves deleting this path - `~/Library/Application Support/Neo4j Desktop` and reinstalling Neo4j Desktop. I cannot do a reinstall since my thesis is on Neo4j, and all of my data (~around 400GB) is already on neo4j desktop. It also took me months to load all the datasets. \r\n\r\n~~I'm hesitant to delete that folder even, in case it causes loss of data.~~ I cannot delete the `~/Library/Application Support/Neo4j Desktop` folder, because the folder size is ~400GB, approximately the same size as my datasets, so obviously my data is all in that folde \r\n\r\nI would appreciate any help, since I really need to finish loading my next dataset, where each relationship takes several hours to load, as it is.\r\n\r\n- Neo4j version: 3.5.14\r\n- Operating system: macOS Catalina\r\n- Neo4j Desktop version: 1.2.3\r\n\r\nPS: I know there is a separate repository for [neo4j-desktop](https://github.com/neo4j-apps/neo4j-desktop/issues), but there seems to be no activity there on reported issues for a long time, so I'm posting here. "}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12369", "title": "Query exception", "closed": "2020-01-03 08:08:02", "commitsDetails": [], "commits": {}, "ttf": 7.000277777777778, "created": "2019-12-27 05:15:02", "user": "Phosphor-zhl", "body": "\r\nWhen the disk space is insufficient and the service fails, restart the service.I execute the following query and the results I don't want are shown in the figure.\r\n\r\nmatch (s:stock) where s.ucc='19001000195906' return s\r\n\r\nPlease help to see what is the problem. \r\n\r\nThanks!\r\n\r\n**Neo4j Version:** 3.5.4  \r\n**Operating System:Windows 10  \r\n\r\n![Query](https://user-images.githubusercontent.com/17038799/71502462-42980880-28ab-11ea-86d8-2b0770d4233e.png)\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12367", "title": "NullPointerException in inconsistencies report file from backup filling up hard-drive", "closed": "2020-01-07 08:07:02", "commitsDetails": [], "commits": {}, "ttf": 14.000277777777777, "created": "2019-12-23 15:57:12", "user": "borick", "body": "when our neo4j backup runs daily, it seems to be generating inconsistency checker report files in the /root folder filling up space\r\n\r\n**Neo4j Version:**  3.5.7\r\n**Operating System:** Ubuntu 18.04.2 LTS\r\n\r\n### Steps to reproduce\r\n1. Install neo4j 3.5.7\r\n2. Take backups nightly until problems arise\r\n\r\n### Expected behavior\r\nBackups should work, consistency checker should not be getting NullPointerExceptions\r\n\r\n### Actual behavior\r\n/root/ filling up with these NullPointerExceptions\r\nExample:\r\n```ERROR: Failed to check record: java.lang.NullPointerException at org.neo4j.consistency.checking.full.PropertyReader.propertyValue(PropertyReader.java:107) at org.neo4j.consistency.checking.full.PropertyAndNodeIndexedCheck.getPropertyValues(PropertyAndNodeIndexedCheck.java:217) at org.neo4j.consistency.checking.full.PropertyAndNodeIndexedCheck.matchIndexesToNode(PropertyAndNodeIndexedCheck.java:117) at org.neo4j.consistency.checking.full.PropertyAndNodeIndexedCheck.check(PropertyAndNodeIndexedCheck.java:83) at org.neo4j.consistency.checking.full.PropertyAndNodeIndexedCheck.check(PropertyAndNodeIndexedCheck.java:59) at org.neo4j.consistency.report.ConsistencyReporter.dispatch(ConsistencyReporter.java:116) at org.neo4j.consistency.report.ConsistencyReporter.forNode(ConsistencyReporter.java:384) at org.neo4j.consistency.checking.full.PropertyAndNode2LabelIndexProcessor.process(PropertyAndNode2LabelIndexProcessor.java:63) at org.neo4j.consistency.checking.full.PropertyAndNode2LabelIndexProcessor.process(PropertyAndNode2LabelIndexProcessor.java:39) at org.neo4j.consistency.checking.full.RecordCheckWorker.run(RecordCheckWorker.java:77) at```\r\n\r\n\r\nNote that prior to some date, around Nov 19, we are seeing much smaller \"inconsistency\" report files containing details such as ```Node[6042535,used=true,rel=-1,prop=13355857,labels=Inline(0x1000000002:[2]),light,secondaryUnitId=-1]\r\nERROR: The property chain contains multiple properties that have the same property key id, which means that the entity has at least one duplicate property.``` and at around Nov 19 the NullPointerException appears which causes growth in file sizes on the disk\r\nNot aware of any process that may have changed\r\n\r\n"}, {"labels": ["3.5", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12365", "title": "Neo4j Error: Expected to find a node at long slot 0 but found NO_VALUE instead", "closed": "2020-01-20 08:55:43", "commitsDetails": [], "commits": {}, "ttf": 31.00027777777778, "created": "2019-12-19 13:27:13", "user": "felipebn", "body": "Our application has one query that fails with the error below:\r\n\r\n```\r\nExpected to find a node at long slot 0 but found NO_VALUE instead\r\n```\r\n\r\n- Neo4j version: 3.5.**13**-enterprise , 3.5.**14**-enterprise\r\n- Operating system: Docker on Windows and Docker on Linux\r\n- API/Driver: Cypher\r\n\r\n# Steps to reproduce\r\n\r\nJust run the query below on the provided database.\r\n\r\nNote that when starting the query with `OPTIONAL MATCH`  instead of `MATCH` this error does not occur.\r\n\r\nAlso while preparing this report I noticed that the \"trigger\" for the error may be the last `OPTIONAL MATCH`  that is actually \"redundant\" in our query as it was already matched before the first `WITH`.\r\n\r\n## Query\r\n```\r\nMATCH (jobCatalog:JobCatalog)  WHERE (jobCatalog.uuid IN COALESCE([\"f48397f8-4d6c-4766-b659-b3993566bf6d\"], []) AND jobCatalog.uuid = \"f48397f8-4d6c-4766-b659-b3993566bf6d\")  \r\nOPTIONAL MATCH jobCatalogToConfigsPath = (jobCatalog)-[catalogToConfig:GJC_CATALOG_TO_CONFIG]->(configFields:JobCatalogConfigFields)-[configFieldsToComposition:GJC_CONFIG_TO_COMPOSITION]->(composition:JobCategoryDetailDefinitionGroup)-[compositionToPayload:GJC_DETAIL_DEFINITION_GROUP]->(compositionPayload:JobCatalogLocalizedPayload)      WHERE configFieldsToComposition.min - 11 <= 0          AND configFieldsToComposition.max - 11 > 0  \r\nWITH jobCatalog, jobCatalogToConfigsPath \r\nOPTIONAL MATCH (jobCatalog)-[catalogToChange:GJC_CATALOG_TO_CHANGE]->(change:JobCatalogChange)-[changeToCategory:GJC_CHANGE_TO_CATEGORY]->(category:SubJobFamily)     WHERE          2 < change.affectedRevision    AND change.affectedRevision < 11             AND change.jobCategoryType = 'SUB_JOB_FAMILY' \r\nWITH jobCatalog, jobCatalogToConfigsPath, {category: category, changeTypes: COLLECT(DISTINCT change.type)} as categoryWithChangeTypes \r\nWITH jobCatalog, jobCatalogToConfigsPath,      [obj IN COLLECT(categoryWithChangeTypes) WHERE          size(apoc.coll.intersection(['CREATED','COPIED'], obj.changeTypes)) > 0 AND NOT 'REMOVED' IN obj.changeTypes         | obj.category ] as createdCategories,     [obj IN COLLECT(categoryWithChangeTypes) WHERE          size(apoc.coll.intersection(['MOVED','CHANGES','TRANSLATION'], obj.changeTypes)) > 0 AND NOT 'REMOVED' IN obj.changeTypes         | obj.category     ] as changedCategories,     [obj IN COLLECT(categoryWithChangeTypes) WHERE          'REMOVED' IN obj.changeTypes AND size(apoc.coll.intersection(['CREATED','COPIED','IMPORTED'], obj.changeTypes)) = 0         | obj.category     ] as removedCategories \r\nOPTIONAL MATCH (jobFamilyChange:JobCatalogChange)-[toJobFamilyChange:GJC_CHANGE_TO_CATEGORY]->(removedJobFamily:JobFamily)     WHERE          2 < jobFamilyChange.affectedRevision    AND jobFamilyChange.affectedRevision < 11             AND jobFamilyChange.jobCategoryType = 'JOB_FAMILY'         AND jobFamilyChange.type = 'REMOVED' \r\nWITH jobCatalog, jobCatalogToConfigsPath, createdCategories, changedCategories, removedCategories, COLLECT(DISTINCT removedJobFamily) as removedJobFamilies \r\nOPTIONAL MATCH (jobCatalog)-[toImportChange:GJC_CATALOG_TO_CHANGE]->(importChange:JobCatalogChange) WHERE importChange.type='IMPORTED' AND 2 < importChange.affectedRevision    AND importChange.affectedRevision < 11 \r\nOPTIONAL MATCH (importedSubJobFamily)<-[toImportedSubFamily:GJC_JF_TO_SJF]-(importedJobFamily:JobFamily)<-[toImportedFamily:GJC_CATALOG_TO_FAMILY]-(jobCatalog) WHERE importChange IS NOT NULL      AND ALL( rel IN [toImportedSubFamily, toImportedSubFamily] WHERE rel.min = 1) \r\nWITH jobCatalog, jobCatalogToConfigsPath, createdCategories, changedCategories, removedCategories, removedJobFamilies, COLLECT(DISTINCT importedSubJobFamily) as importedCategories \r\nWITH jobCatalog, jobCatalogToConfigsPath, createdCategories, changedCategories, apoc.coll.subtract(removedCategories, importedCategories) as removedCategories, removedJobFamilies, apoc.coll.subtract(importedCategories, removedCategories) as importedCategories \r\nUNWIND createdCategories + changedCategories + removedCategories + importedCategories AS subJobFamily\r\n MATCH subJobFamilyPath = (subJobFamily)<-[toSubFamily:GJC_JF_TO_SJF]-(jobFamily:JobFamily)<-[toFamily:GJC_CATALOG_TO_FAMILY]-(jobCatalog)      WHERE (         NOT jobFamily IN removedJobFamilies AND         ALL( rel IN [toSubFamily, toFamily] WHERE rel.min - 11 <= 0 AND rel.max - 11 > 0 )      )    OR (subJobFamily IN removedCategories) \r\nOPTIONAL MATCH removedSubJobFamilyToJobsPath = (subJobFamily)-[toJobs:GJC_SUBFAMILY_TO_JOB]->(job:Job) WHERE subJobFamily IN removedCategories     AND (         ALL( rel IN [toJobs] WHERE rel.min - 11 <= 0 AND rel.max - 11 > 0 )     ) \r\nOPTIONAL MATCH removeJobsJobTypePath = (job)-[jobToType:GJC_JOB_TO_TYPE]->(jobType:JobType)-[jobTypeToPayload:GJC_DETAIL_DEFINITION]->(jobTypePayload:JobCatalogLocalizedPayload) WHERE (jobToType.min - 11  <= 0 AND jobToType.max - 11  > 0) \r\nWITH jobCatalog, jobCatalogToConfigsPath, COLLECT(subJobFamilyPath) as subJobFamilyPaths, COLLECT(removedSubJobFamilyToJobsPath) as removedSubJobFamilyToJobsPaths , COLLECT(removeJobsJobTypePath) as removeJobsJobTypePaths, COLLECT(DISTINCT subJobFamily) as subJobFamilies, COLLECT(DISTINCT jobFamily) as jobFamilies, COLLECT(DISTINCT job) as jobs \r\nUNWIND subJobFamilies + jobFamilies + jobs as categoryItems \r\nOPTIONAL MATCH itemToDescription = (categoryItems)-[itemToDescriptions:GJC_CATEGORY_TO_DESCRIPTION]->()-[itemToPayload:GJC_DESCRIPTION]->()  WHERE itemToPayload.language IN [\"en\"]                 \tAND ALL(             rel IN [itemToPayload, itemToDescriptions]                WHERE rel.min - 11 <= 0              AND rel.max - 11 > 0           )   \r\nOPTIONAL MATCH itemToDetails=(categoryItems)-[itemDetails:GJC_CATEGORY_TO_DETAIL]->(itemDetail:JobCategoryDetail)-[:GJC_DETAIL_TO_DEFINITION]->(itemDetailDefinition:JobCategoryDetailDefinition)-[itemDetailDefinitionToPayload:GJC_DETAIL_DEFINITION]->(:JobCatalogLocalizedPayload)     WHERE         itemDetailDefinitionToPayload.language IN (COALESCE([\"en\"],[]) + itemDetailDefinition.defaultLanguage)         AND ALL(            rel IN [itemDetails]             WHERE rel.min - 11 <= 0             AND rel.max - 11 > 0            ) \r\nOPTIONAL MATCH itemDetailToLevels=(itemDetail)-[itemDetailtoLevels:GJC_DETAIL_TO_LEVEL]->(itemDetailLevel:JobCategoryDetailLevel)-[itemDetailLevelToPayload:GJC_DETAIL_LEVEL]->(itemDetailLevelPayload:JobCatalogLocalizedPayload)      WHERE         itemDetailLevelToPayload.language IN (COALESCE([\"en\"],[]) + itemDetailDefinition.defaultLanguage)         AND ALL(            rel IN [itemDetailtoLevels]             WHERE rel.min - 11 <= 0             AND rel.max - 11 > 0            )\r\nOPTIONAL MATCH itemCategoryDetailPayload = (itemDetail)-[detailToPayload:GJC_DETAIL_TO_PAYLOAD]-(detailPayload)      WHERE         detailToPayload.language IN COALESCE([\"en\"],[])         AND ALL(            rel IN [detailToPayload]             WHERE rel.min - 11 <= 0             AND rel.max - 11 > 0            ) \r\nOPTIONAL MATCH levelToItems=(itemDetailLevel)-[:GJC_LEVEL_TO_ITEM]->()-[:GJC_LEVEL_ITEM]->()\r\nOPTIONAL MATCH (itemDetailDefinition)<-[itemDetailDefinitionGroupToDetail:GJC_DEFINITION_GROUP_TO_DEFINITION]-(itemDetailDefinitionGroup:JobCategoryDetailDefinitionGroup) \r\nOPTIONAL MATCH itemGroupLevels=(itemDetailDefinitionGroup)-[itemDetailtoGroupLevel:GJC_DEFINITION_GROUP_TO_LEVEL]->(itemGroupLevel:JobCategoryDetailLevel)-[itemGroupLevelToPayload:GJC_DETAIL_LEVEL]->(itemGroupLevelPayload:JobCatalogLocalizedPayload)      WHERE         itemDetailtoGroupLevel.language IN (COALESCE([\"en\"],[]) + itemDetailDefinition.defaultLanguage) \r\nOPTIONAL MATCH groupLevelToItems=(itemGroupLevel)-[:GJC_LEVEL_TO_ITEM]->()-[:GJC_LEVEL_ITEM]->() \r\n/*The error only happens when the match below is included, without it works fine.*/\r\nOPTIONAL MATCH (jobCatalog)-[catalogToConfig:GJC_CATALOG_TO_CONFIG]->(configFields:JobCatalogConfigFields)-[configFieldsToComposition:GJC_CONFIG_TO_COMPOSITION]->(composition:JobCategoryDetailDefinitionGroup)-[compositionToPayload:GJC_DETAIL_DEFINITION_GROUP]->(compositionPayload:JobCatalogLocalizedPayload)      WHERE configFieldsToComposition.min - 11 <= 0          AND configFieldsToComposition.max - 11 > 0 \r\nRETURN *\r\n```\r\n\r\n## Example database \r\n\r\nDownload the data folder from here: https://we.tl/t-OWQaciuA4z\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12364", "title": "Neo4j Go Driver does not return errors when unique constraints are violated", "closed": "2020-01-02 10:20:58", "commitsDetails": [], "commits": {}, "ttf": 14.000277777777777, "created": "2019-12-18 21:16:53", "user": "tjbrockmeyer", "body": "I posted this issue in the `neo4j/neo4j-go-driver` repository a couple weeks ago, but got no reply, so I am posting it here now. I have been experiencing this issue for the entire time, and I have no workarounds. Any help would be greatly appreciated.\r\n\r\n**Neo4j Version:** 3.5.9 Community\r\n**Neo4j Mode**: Single instance  \r\n**Driver version**: Newest stable version (just updated with `go get -u`)  \r\n**Operating System:** MacOS Mojave 10.14.5\r\n\r\nMultiple different Neo4j instances have been targeted, all of which yield the same results.\r\n\r\n### Steps to reproduce\r\n1. Start Neo4j locally\r\n2. Run the snippet shown below\r\n### Expected behavior\r\nThe second CREATE query panic()s because Session.Run() returns an error due to the conflict coming from a duplicate (:Client).name.\r\n### Actual behavior\r\nThe program completes with an exit code of 0.\r\nThe driver debug logs display the error that we are attempting to catch, but it is not returned from Session.Run().  \r\n\r\nThe code snippet in question:\r\n```\r\npackage main\r\n\r\nimport (\r\n\t\"github.com/neo4j/neo4j-go-driver/neo4j\"\r\n)\r\n\r\nfunc main() {\r\n\tdriver, err := neo4j.NewDriver(\"bolt://localhost:7687\", neo4j.BasicAuth(\"neo4j\", \"graph\", \"\"), func(config *neo4j.Config) {\r\n\t\tconfig.Log = neo4j.ConsoleLogger(neo4j.DEBUG)\r\n\t})\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tsession, err := driver.Session(neo4j.AccessModeWrite)\r\n\tif err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\tdefer session.Close()\r\n\tparams := map[string]interface{}{\"name\": \"ABC\"}\r\n\r\n\t// Deletes the client if it exists\r\n\tif _, err = session.Run(`MATCH (c:Client {name: {name}}) DELETE c`, params); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\r\n\t// Create the constraint\r\n\tif _, err = session.Run(`CREATE CONSTRAINT ON (c:Client) ASSERT c.name IS UNIQUE`, nil); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\t// Creates the client\r\n\tif _, err = session.Run(`CREATE (:Client {name: {name}})`, params); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n\t// Should panic with an error due to a conflict.\r\n\tif _, err = session.Run(`CREATE (:Client {name: {name}})`, params); err != nil {\r\n\t\tpanic(err)\r\n\t}\r\n}\r\n```\r\nI receive the following in my terminal as output:\r\n```\r\nINFO   : 2019/12/18 15:04:11.068354 [connector]: Version 1.7.4 [6912093]\r\nINFO   : 2019/12/18 15:04:11.068599 [pool-1]: Creating pool towards localhost:7687\r\nINFO   : 2019/12/18 15:04:11.077521 [pool-1]: Acquiring connection from the pool towards localhost:7687\r\nINFO   : 2019/12/18 15:04:11.077570 [addr]: Resolving address localhost:7687\r\nINFO   : 2019/12/18 15:04:11.079483 [addr]: Host resolved to 2 IP addresses\r\nINFO   : 2019/12/18 15:04:11.079528 [conn-1]: Opening IPv6 connection to ::1 at port 7687\r\nINFO   : 2019/12/18 15:04:11.079724 [conn-1]: Opening IPv4 connection to 127.0.0.1 at port 7687\r\nWARNING: 2019/12/18 15:04:11.089965 [conn-1]: Openssl reported error 'self signed certificate' with code '18' when establishing trust, but resuming handshake since trust verification is set to be skipped\r\nDEBUG  : 2019/12/18 15:04:11.090271 [conn-1]: Openssl established trust\r\nINFO   : 2019/12/18 15:04:11.093920 [conn-1]: Remote endpoint is 127.0.0.1:7687\r\nINFO   : 2019/12/18 15:04:11.093936 [conn-1]: Local endpoint is 127.0.0.1:62676\r\nINFO   : 2019/12/18 15:04:11.093989 [conn-1]: Performing handshake\r\nINFO   : 2019/12/18 15:04:11.094008 [conn-1]: (Sent 20 of 20 bytes)\r\nINFO   : 2019/12/18 15:04:11.094581 [conn-1]: Received 4 of 4 bytes\r\nINFO   : 2019/12/18 15:04:11.094594 [conn-1]: <SET protocol_version=3>\r\nINFO   : 2019/12/18 15:04:11.094625 [conn-1]: <CONNECTED>\r\nINFO   : 2019/12/18 15:04:11.094633 [conn-1]: Initialising connection\r\nDEBUG  : 2019/12/18 15:04:11.094654 [conn-1]: C[0] HELLO [{scheme: basic, principal: neo4j, credentials: ********, user_agent: Go Driver/1.7}]\r\nINFO   : 2019/12/18 15:04:11.094688 [conn-1]: (Sent 79 of 79 bytes)\r\nINFO   : 2019/12/18 15:04:11.095526 [conn-1]: Received 48 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.095556 [conn-1]: S[0] SUCCESS [{server: Neo4j/3.5.9, connection_id: bolt-19}]\r\nINFO   : 2019/12/18 15:04:11.095560 [conn-1]: <SET server=\"Neo4j/3.5.9\">\r\nINFO   : 2019/12/18 15:04:11.095566 [conn-1, bolt-19]: <SET connection_id=\"bolt-19\">\r\nINFO   : 2019/12/18 15:04:11.095570 [conn-1, bolt-19]: <READY>\r\nDEBUG  : 2019/12/18 15:04:11.095693 [conn-1, bolt-19]: C[1] RUN [MATCH (c:Client {name: {name}}) DELETE c, {name: ABC}, {}]\r\nDEBUG  : 2019/12/18 15:04:11.095707 [conn-1, bolt-19]: C[2] PULL_ALL []\r\nINFO   : 2019/12/18 15:04:11.095730 [conn-1, bolt-19]: (Sent 65 of 65 bytes)\r\nINFO   : 2019/12/18 15:04:11.106007 [conn-1, bolt-19]: Received 102 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.106032 [conn-1, bolt-19]: S[1] SUCCESS [{t_first: 7, fields: []}]\r\nDEBUG  : 2019/12/18 15:04:11.106038 [conn-1, bolt-19]: <SET result_field_names=[]>\r\nDEBUG  : 2019/12/18 15:04:11.106118 [conn-1, bolt-19]: S[2] SUCCESS [{bookmark: neo4j:bookmark:v1:tx488, stats: {nodes-deleted: 1}, type: w, t_last: 0}]\r\nINFO   : 2019/12/18 15:04:11.106126 [conn-1, bolt-19]: <SET last_bookmark=\"neo4j:bookmark:v1:tx488\">\r\nINFO   : 2019/12/18 15:04:11.106151 [pool-1]: Releasing connection to pool towards localhost:7687\r\nDEBUG  : 2019/12/18 15:04:11.106162 [conn-1, bolt-19]: C[3] RESET []\r\nINFO   : 2019/12/18 15:04:11.106216 [conn-1, bolt-19]: (Sent 6 of 6 bytes)\r\nINFO   : 2019/12/18 15:04:11.106636 [conn-1, bolt-19]: Received 7 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.106652 [conn-1, bolt-19]: S[3] SUCCESS [{}]\r\nINFO   : 2019/12/18 15:04:11.106701 [pool-1]: Acquiring connection from the pool towards localhost:7687\r\nDEBUG  : 2019/12/18 15:04:11.106733 [conn-1, bolt-19]: C[4] RUN [CREATE CONSTRAINT ON (c:Client) ASSERT c.name IS UNIQUE, {}, {}]\r\nDEBUG  : 2019/12/18 15:04:11.106745 [conn-1, bolt-19]: C[5] PULL_ALL []\r\nINFO   : 2019/12/18 15:04:11.106765 [conn-1, bolt-19]: (Sent 71 of 71 bytes)\r\nINFO   : 2019/12/18 15:04:11.310320 [conn-1, bolt-19]: Received 109 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.310361 [conn-1, bolt-19]: S[4] SUCCESS [{t_first: 201, fields: []}]\r\nDEBUG  : 2019/12/18 15:04:11.310370 [conn-1, bolt-19]: <SET result_field_names=[]>\r\nDEBUG  : 2019/12/18 15:04:11.310409 [conn-1, bolt-19]: S[5] SUCCESS [{bookmark: neo4j:bookmark:v1:tx490, stats: {constraints-added: 1}, type: s, t_last: 0}]\r\nINFO   : 2019/12/18 15:04:11.310415 [conn-1, bolt-19]: <SET last_bookmark=\"neo4j:bookmark:v1:tx490\">\r\nINFO   : 2019/12/18 15:04:11.310435 [pool-1]: Releasing connection to pool towards localhost:7687\r\nDEBUG  : 2019/12/18 15:04:11.310442 [conn-1, bolt-19]: C[6] RESET []\r\nINFO   : 2019/12/18 15:04:11.310461 [conn-1, bolt-19]: (Sent 6 of 6 bytes)\r\nINFO   : 2019/12/18 15:04:11.311240 [conn-1, bolt-19]: Received 7 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.311295 [conn-1, bolt-19]: S[6] SUCCESS [{}]\r\nINFO   : 2019/12/18 15:04:11.311361 [pool-1]: Acquiring connection from the pool towards localhost:7687\r\nDEBUG  : 2019/12/18 15:04:11.311422 [conn-1, bolt-19]: C[7] RUN [CREATE (:Client {name: {name}}), {name: ABC}, {}]\r\nDEBUG  : 2019/12/18 15:04:11.311464 [conn-1, bolt-19]: C[8] PULL_ALL []\r\nINFO   : 2019/12/18 15:04:11.311533 [conn-1, bolt-19]: (Sent 56 of 56 bytes)\r\nINFO   : 2019/12/18 15:04:11.318996 [conn-1, bolt-19]: Received 132 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.319022 [conn-1, bolt-19]: S[7] SUCCESS [{t_first: 6, fields: []}]\r\nDEBUG  : 2019/12/18 15:04:11.319030 [conn-1, bolt-19]: <SET result_field_names=[]>\r\nDEBUG  : 2019/12/18 15:04:11.319087 [conn-1, bolt-19]: S[8] SUCCESS [{bookmark: neo4j:bookmark:v1:tx491, stats: {labels-added: 1, nodes-created: 1, properties-set: 1}, type: w, t_last: 0}]\r\nINFO   : 2019/12/18 15:04:11.319094 [conn-1, bolt-19]: <SET last_bookmark=\"neo4j:bookmark:v1:tx491\">\r\nINFO   : 2019/12/18 15:04:11.319118 [pool-1]: Releasing connection to pool towards localhost:7687\r\nDEBUG  : 2019/12/18 15:04:11.319127 [conn-1, bolt-19]: C[9] RESET []\r\nINFO   : 2019/12/18 15:04:11.319148 [conn-1, bolt-19]: (Sent 6 of 6 bytes)\r\nINFO   : 2019/12/18 15:04:11.319585 [conn-1, bolt-19]: Received 7 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.319600 [conn-1, bolt-19]: S[9] SUCCESS [{}]\r\nINFO   : 2019/12/18 15:04:11.319628 [pool-1]: Acquiring connection from the pool towards localhost:7687\r\nDEBUG  : 2019/12/18 15:04:11.319672 [conn-1, bolt-19]: C[10] RUN [CREATE (:Client {name: {name}}), {name: ABC}, {}]\r\nDEBUG  : 2019/12/18 15:04:11.319689 [conn-1, bolt-19]: C[11] PULL_ALL []\r\nINFO   : 2019/12/18 15:04:11.319717 [conn-1, bolt-19]: (Sent 56 of 56 bytes)\r\nINFO   : 2019/12/18 15:04:11.321409 [conn-1, bolt-19]: Received 150 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.321443 [conn-1, bolt-19]: S[10] FAILURE [{code: Neo.ClientError.Schema.ConstraintValidationFailed, message: Node(98) already exists with label `Client` and property `name` = 'ABC'}]\r\nDEBUG  : 2019/12/18 15:04:11.321450 [conn-1, bolt-19]: <FAILURE code=\"Neo.ClientError.Schema.ConstraintValidationFailed\">\r\nDEBUG  : 2019/12/18 15:04:11.321453 [conn-1, bolt-19]: <FAILURE message=\"Node(98) already exists with label `Client` and property `name` = 'ABC'\">\r\nINFO   : 2019/12/18 15:04:11.321459 [conn-1, bolt-19]: <FAILED> [BoltConnection_fetch(/Users/neo/buildAgent/work/c4f1f1576663d58b/seabolt/src/seabolt/src/bolt/connection.c:353), failure message]\r\nDEBUG  : 2019/12/18 15:04:11.321512 [conn-1, bolt-19]: S[11] IGNORED []\r\nINFO   : 2019/12/18 15:04:11.321526 [pool-1]: Releasing connection to pool towards localhost:7687\r\nDEBUG  : 2019/12/18 15:04:11.321532 [conn-1, bolt-19]: C[12] RESET []\r\nINFO   : 2019/12/18 15:04:11.321548 [conn-1, bolt-19]: (Sent 6 of 6 bytes)\r\nINFO   : 2019/12/18 15:04:11.322035 [conn-1, bolt-19]: Received 7 of 2..8192 bytes\r\nDEBUG  : 2019/12/18 15:04:11.322049 [conn-1, bolt-19]: S[12] SUCCESS [{}]\r\nINFO   : 2019/12/18 15:04:11.322057 [conn-1, bolt-19]: <READY>\r\n\r\nProcess finished with exit code 0\r\n```"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12363", "title": "algo.similarity.jaccard throws ArithmeticException", "closed": "2019-12-23 22:00:15", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2019-12-18 16:29:27", "user": "seyeda", "body": "**Server spec:**\r\n- Neo4j version: 3.5.12\r\n- Graph algorithms version: 3.5.12.0 or 3.5.13.0\r\n- Operating system: macOS Sierra\r\n\r\n**Steps to reproduce:**\r\n1. Install neo4j with the above spec. Don't forget to add the graph algorithms jar file.\r\n2. Run the following cyphers to create a small sample graph\r\n```\r\nmerge (a:Test {name:\"a\"})   \r\nmerge (t1:Test {name:\"t1\"})   \r\nmerge (t2:Test {name:\"t2\"})   \r\nmerge (t3:Test {name:\"t3\"})   \r\nmerge (t4:Test {name:\"t4\"})   \r\nmerge (t5:Test {name:\"t5\"})   \r\nmerge (t6:Test {name:\"t6\"})   \r\nmerge (t7:Test {name:\"t7\"})   \r\nmerge (t8:Test {name:\"t8\"})   \r\nmerge (t9:Test {name:\"t9\"})   \r\nmerge (t10:Test {name:\"t10\"})   \r\nmerge (t11:Test {name:\"t11\"})   \r\nmerge (t12:Test {name:\"t12\"})   \r\nmerge (t13:Test {name:\"t13\"})   \r\nmerge (t14:Test {name:\"t14\"})   \r\nmerge (t15:Test {name:\"t15\"})   \r\nmerge (t16:Test {name:\"t16\"})   \r\nmerge (t17:Test {name:\"t17\"})   \r\nmerge (t18:Test {name:\"t18\"})   \r\nmerge (t19:Test {name:\"t19\"})   \r\nmerge (t20:Test {name:\"t20\"})   \r\nmerge (t21:Test {name:\"t21\"})   \r\nmerge (t22:Test {name:\"t22\"})   \r\nmerge (t23:Test {name:\"t23\"})   \r\nmerge (t24:Test {name:\"t24\"})   \r\nmerge (t25:Test {name:\"t25\"})   \r\nmerge (t26:Test {name:\"t26\"})\r\nmerge (a)-[:CONNECTED_TO]->(t1)\r\nmerge (a)-[:CONNECTED_TO]->(t2)\r\nmerge (a)-[:CONNECTED_TO]->(t3)\r\nmerge (a)-[:CONNECTED_TO]->(t4)\r\nmerge (a)-[:CONNECTED_TO]->(t5)\r\nmerge (a)-[:CONNECTED_TO]->(t6)\r\nmerge (a)-[:CONNECTED_TO]->(t7)\r\nmerge (a)-[:CONNECTED_TO]->(t8)\r\nmerge (a)-[:CONNECTED_TO]->(t9)\r\nmerge (a)-[:CONNECTED_TO]->(t10)\r\nmerge (a)-[:CONNECTED_TO]->(t11)\r\nmerge (a)-[:CONNECTED_TO]->(t12)\r\nmerge (a)-[:CONNECTED_TO]->(t13)\r\nmerge (a)-[:CONNECTED_TO]->(t14)\r\nmerge (a)-[:CONNECTED_TO]->(t15)\r\nmerge (a)-[:CONNECTED_TO]->(t16)\r\nmerge (a)-[:CONNECTED_TO]->(t17)\r\nmerge (a)-[:CONNECTED_TO]->(t18)\r\nmerge (a)-[:CONNECTED_TO]->(t19)\r\nmerge (a)-[:CONNECTED_TO]->(t20)\r\nmerge (a)-[:CONNECTED_TO]->(t21)\r\nmerge (a)-[:CONNECTED_TO]->(t22)\r\nmerge (a)-[:CONNECTED_TO]->(t23)\r\nmerge (a)-[:CONNECTED_TO]->(t24)\r\nmerge (a)-[:CONNECTED_TO]->(t25)    \r\nmerge (a)-[:CONNECTED_TO]->(t26)\r\nmerge (b:Test {name:\"b\"}) \r\nmerge (b)-[:CONNECTED_TO]->(t1)\r\n```\r\n3. Find jaccard similarity between nodes `a` and `b`:\r\n```\r\nmatch (a:Test {name:\"a\"})-[ie:CONNECTED_TO]->(t:Test)\r\nwith [{item:id(a), categories: collect(distinct id(t))}] as source_data, collect(distinct id(a)) as source_id\r\nmatch (b:Test {name:\"b\"})-[ie:CONNECTED_TO]->(t:Test)\r\nwith [{item:id(b), categories: collect(distinct id(t))}] as target_data, source_data, source_id, collect(distinct id(b)) as target_id\r\nCALL algo.similarity.jaccard(source_data+target_data, {similarityCutoff:0.01, sourceIds:source_id , targetIds: target_id, write:true, writeRelationshipType:'SIMILAR', writeProperty: 'jaccardSimilarity'})\r\nYIELD nodes, similarityPairs, write, writeRelationshipType, writeProperty, min, max, mean, stdDev, p25, p50, p75, p90, p95, p99, p999, p100\r\nreturn nodes, similarityPairs, write, writeRelationshipType, writeProperty, min, max, mean, stdDev, p25, p50, p75, p90, p95, p99, p999, p100\r\n```\r\n\r\n**Expected behaviour:**\r\nReturns jaccard similarity between the two nodes and add an edge of type `SIMILAR` between the nodes\r\n\r\n**Actual behaviour**\r\nThrows an exception and shows the following error message:\r\n`Failed to invoke procedure algo.similarity.jaccard: Caused by: java.lang.ArithmeticException: / by zero`\r\n\r\n**Further explanation**\r\nI noticed that if I set the `similarityCutoff` threshold to zero or `write` to False, it works. Or if I use `algo.similarity.jaccard.stream`, it will still work. It looks like when it needs to add the a new edge to the graph then it fails. \r\nIf I use version 3.5.11 of the graph algorithms library, it seems to work.\r\n\r\n* As a side note, I noticed that if I set the `similarityCutoff` to zero, it never writes the result back to the graph. This is not documented in neo4j manual. In fact there are some examples in the manual for `algo.similarity.jaccard.stream` where `similarityCutoff:0.0` which makes you to think that you can do the same with `algo.similarity.jaccard`"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12362", "title": "application with neo4j-harness 4.0 doesn't compile with jdk 1.8 ", "closed": "2019-12-18 12:40:59", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-12-18 12:11:10", "user": "malafeev", "body": "```\r\ncannot access org.neo4j.harness.junit.rule.Neo4jRule\r\nbad class file: ~/.m2/repository/org/neo4j/test/neo4j-harness/4.0.0/neo4j-harness-4.0.0.jar(org/neo4j/harness/junit/rule/Neo4jRule.class)\r\nclass file has wrong version 55.0, should be 52.0\r\nPlease remove or make sure it appears in the correct subdirectory of the classpath.\r\n```\r\n\r\n- Neo4j version: 4.0\r\n- Operating system: Ubuntu 14.04.5 LTS\r\n- API/Driver: Java neo4j-harness\r\n- **Steps to reproduce**\r\ntry to compile app which uses neo4j-harness 4.0 on jdk 1.8 \r\n\r\n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/12359", "title": "Fake concurrency in one process using one driver ", "closed": "2019-12-24 14:57:15", "commitsDetails": [], "commits": {}, "ttf": 11.000277777777777, "created": "2019-12-12 15:04:25", "user": "Huskar-d", "body": "neo4j version:_neo4j-community-3.5.3_\r\nUsing one driver in one process ,and let multi thread to run cypher. It turns out to be almost the same with single thread way. Here is the code:\r\n```\r\nfrom neo4j import GraphDatabase\r\nimport time\r\nimport threading\r\n\r\ndriver = GraphDatabase.driver(\"bolt://localhost:7687\", auth=(\"neo4j\", \"1qaz@WSX\"), max_connection_pool_size=1000)\r\n\r\ndef add_friend(tx, name, friend_name):\r\n    tx.run(\"MERGE (a:Person {name: $name}) \"\r\n           \"MERGE (a)-[:KNOWS]->(friend:Person {name: $friend_name})\",\r\n           name=name, friend_name=friend_name)\r\n\r\ndef print_friends(tx, name):\r\n    for record in tx.run(\"MATCH (a:Person)-[:KNOWS]->(friend) WHERE a.name = $name \"\r\n                         \"RETURN friend.name ORDER BY friend.name\", name=name):\r\n        #print(record[\"friend.name\"])\r\n        pass\r\n\r\ndef read_time():\r\n    #start = time.clock()\r\n    start = time.time()\r\n    with driver.session() as session:\r\n        for i in range(10000):\r\n            session.read_transaction(print_friends, \"Arthur\")\r\n    print(\"time cost: %sms\"% (time.time()-start))\r\n\r\nts=[]\r\nthread_num=5\r\nfor i in range(thread_num):\r\n    t = threading.Thread(target=read_time)\r\n    ts.append(t)\r\n\r\n\r\nfor i in range(thread_num):\r\n    ts[i].start()\r\nst = time.time()\r\n\r\nfor i in range(thread_num):\r\n    ts[i].join()\r\n\r\nconcurrent_time = time.time()-st\r\nst = time.time()\r\n\r\nfor i in range(thread_num):\r\n    read_time()\r\n\r\nprint('sequential time total:%sms'%(time.time()-st))\r\nprint('concurrent time total:%sms'%concurrent_time)\r\ndriver.close()\r\n```\r\nNext, run the code in backend way, continuously:\r\n```\r\n(base) xxx@ubuntu-RH2288H-V32:~/neo4j_test$ python test.py &\r\n[1] 32445\r\n(base) xxx@ubuntu-RH2288H-V32:~/neo4j_test$ python test.py &\r\n[2] 32451\r\n```\r\nHere is the result:\r\n```\r\ntime cost: 33.01909160614014ms\r\ntime cost: 33.02298951148987ms\r\ntime cost: 33.032909870147705ms\r\ntime cost: 33.05572199821472ms\r\ntime cost: 33.24381709098816ms\r\ntime cost: 33.24479556083679ms\r\ntime cost: 33.27847456932068ms\r\ntime cost: 33.31380105018616ms\r\ntime cost: 33.32261657714844ms\r\ntime cost: 6.356516599655151ms\r\ntime cost: 6.388063669204712ms\r\ntime cost: 6.219320297241211ms\r\ntime cost: 6.322709321975708ms\r\ntime cost: 6.2699432373046875ms\r\ntime cost: 6.3451197147369385ms\r\ntime cost: 6.174653053283691ms\r\ntime cost: 6.210440397262573ms\r\ntime cost: 6.376234292984009ms\r\nsequential time total:31.39703941345215ms\r\nconcurrent time total:33.047473192214966ms\r\ntime cost: 6.234589099884033ms\r\nsequential time total:31.50130796432495ms\r\nconcurrent time total:33.31393766403198ms\r\n```\r\nUsing one thread and multi thread cost almost the same time, but multprocess can really work well\uff0c\u201ctrue\u201d concurrency.\r\nThis is the comparison of the connections during and after the execution, it shows that it did get multi connections to the server ,but the server do not process it concurrently\uff1a\r\n```\r\n(base) xxx@ubuntu-RH2288H-V32:~$ sudo lsof -p 30275 -nP | grep TCP\r\nlsof: WARNING: can't stat() fuse.gvfsd-fuse file system /run/user/112/gvfs\r\n      Output information may be incomplete.\r\njava    30275 xxx 584u  IPv6           54092163      0t0       TCP 127.0.0.1:7687->127.0.0.1:38714 (ESTABLISHED)\r\njava    30275 xxxx 891u  IPv6           53657663      0t0       TCP *:7687 (LISTEN)\r\njava    30275 xxx  892u  IPv6           53637735      0t0       TCP *:7474 (LISTEN)\r\njava    30275 xxx  906u  IPv6           53637742      0t0       TCP *:7473 (LISTEN)\r\njava    30275 xxx  925u  IPv6           54092165      0t0       TCP 127.0.0.1:7687->127.0.0.1:38716 (ESTABLISHED)\r\njava    30275 xxx  926u  IPv6           54092167      0t0       TCP 127.0.0.1:7687->127.0.0.1:38718 (ESTABLISHED)\r\njava    30275 xxx  927u  IPv6           54092169      0t0       TCP 127.0.0.1:7687->127.0.0.1:38720 (ESTABLISHED)\r\njava    30275 xxx  928u  IPv6           54105101      0t0       TCP 127.0.0.1:7687->127.0.0.1:38722 (ESTABLISHED)\r\njava    30275 xxx  929u  IPv6           54094093      0t0       TCP 127.0.0.1:7687->127.0.0.1:38724 (ESTABLISHED)\r\njava    30275 xxx  930u  IPv6           54088326      0t0       TCP 127.0.0.1:7687->127.0.0.1:38726 (ESTABLISHED)\r\njava    30275 xxx  931u  IPv6           54088328      0t0       TCP 127.0.0.1:7687->127.0.0.1:38728 (ESTABLISHED)\r\njava    30275 xxx  932u  IPv6           54088330      0t0       TCP 127.0.0.1:7687->127.0.0.1:38730 (ESTABLISHED)\r\njava    30275 xxx  933u  IPv6           54088332      0t0       TCP 127.0.0.1:7687->127.0.0.1:38732 (ESTABLISHED)\r\n(base) wangxin@ubuntu-RH2288H-V32:~$ sudo lsof -p 30275 -nP | grep TCP\r\nlsof: WARNING: can't stat() fuse.gvfsd-fuse file system /run/user/112/gvfs\r\n      Output information may be incomplete.\r\njava    30275 xxx  891u  IPv6           53657663      0t0       TCP *:7687 (LISTEN)\r\njava    30275 xxx  892u  IPv6           53637735      0t0       TCP *:7474 (LISTEN)\r\njava    30275 xxx  906u  IPv6           53637742      0t0       TCP *:7473 (LISTEN)\r\n```"}, {"labels": ["bug", "team-packaging"], "url": "https://github.com/neo4j/neo4j/issues/12358", "title": "Installation fails on Ubuntu 18.04 - neo4j : Depends: cypher-shell (< 1.2.0)", "closed": "2020-02-07 14:35:16", "commitsDetails": [], "commits": {}, "ttf": 58.000277777777775, "created": "2019-12-11 13:11:11", "user": "petriusus", "body": "Neo4j version: 3.5.11\r\nOperating system: Ubuntu 18.04.3 LTS (GNU/Linux 4.15.0-72-generic x86_64)\r\nFresh OS installation (same happens with a VM that installed Neo4j normal a few weeks ago).\r\n\r\nI just cannot get around this problem.\r\n\r\n### Expected behavior\r\nNormal installation\r\n\r\n### Actual behavior\r\n**First:**\r\n```\r\nwget -O - https://debian.neo4j.org/neotechnology.gpg.key | sudo apt-key add -\r\necho 'deb https://debian.neo4j.org/repo stable/' | sudo tee /etc/apt/sources.list.d/neo4j.list\r\nsudo apt-get update\r\n```\r\n_All good soo far_\r\n\r\n**But then**\r\n```\r\nsudo apt-get install -y neo4j=1:3.5.11\r\nReading package lists... Done\r\nBuilding dependency tree\r\nReading state information... Done\r\nSome packages could not be installed. This may mean that you have\r\nrequested an impossible situation or if you are using the unstable\r\ndistribution that some required packages have not yet been created\r\nor been moved out of Incoming.\r\nThe following information may help to resolve the situation:\r\n\r\nThe following packages have unmet dependencies:\r\nneo4j : Depends: cypher-shell (< 1.2.0) but it is not going to be installed\r\nE: Unable to correct problems, you have held broken packages.\r\n\r\n```"}, {"labels": ["3.5", "bug", "team-cypher"], "filteredCommits": ["758b14ede40fcce539b41068e15f3d55c4aff441"], "url": "https://github.com/neo4j/neo4j/issues/12355", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"758b14ede40fcce539b41068e15f3d55c4aff441": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}, "d97f63aa4c9d21801ea8580ec8f9eb89ea582ac9": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}, "339e27500dc4ffbeea40deb81cd7add51175a053": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}}, "ttf": 29.00027777777778, "user": "swilly22", "changesInPackagesSPOON": ["org.neo4j.values.virtual.ListValue.IntegralRangeListValue.size()"], "changesInPackagesGIT": ["community/values/src/main/java/org/neo4j/values/virtual"], "body": "`docker run --rm -p7687:7687 -p7474:7474 --env=NEO4J_AUTH=none neo4j`\r\nNeo4j Version: 3.5.13\r\n\r\nFrom http://127.0.0.1:7474/browser/\r\nRun: `RETURN range(2, 8, -1)`\r\nI'm getting `-5` as a result.\r\nSimilar to: `WITH range(2, 8, -1) AS x RETURN x`\r\n\r\nI was expecting either a runtime or compile-time error.", "filteredCommitsReason": {"duplicated": 2, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "spoonFilesChanged": 1, "MOV": 1}, "title": "Range with negative interval", "statsSkippedReason": "", "closed": "2020-01-08 11:22:50", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-01-07 15:51:51", "commitHash": "758b14ede40fcce539b41068e15f3d55c4aff441", "commitParents": ["49f5623272cc518f5f8a5c19284c269e64ce3a39"], "commitGHEventType": "referenced", "nameRev": "758b14ede40fcce539b41068e15f3d55c4aff441 tags/3.5.16~27", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/values/src/main/java/org/neo4j/values/virtual/ListValue.java", "deletions": 1}, {"insertions": 22, "lines": 22, "filePath": "community/cypher/spec-suite-tools/src/test/resources/acceptance/features/ReturnAcceptance.feature", "deletions": 0}, {"insertions": 23, "lines": 23, "filePath": "community/values/src/test/java/org/neo4j/values/virtual/IntegralRangeListValueTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.values.virtual.ListValue.IntegralRangeListValue.size()"}], "spoonFilePath": "ListValue.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.values.virtual.IntegralRangeListValueTest.shouldHandleNegativeStepWithPositiveRange()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.values.virtual.IntegralRangeListValueTest.shouldHandlePositiveStepWithNegativeRange()"}], "spoonFilePath": "IntegralRangeListValueTest.java"}], "commitMessage": "Fix bug with empty range\n\nQueries like:\n\n```\nRETURN range(2, 8, -1)\n```\n\nshould return an empty list.\n\nfixes #12355\nchangelog: Fix bug with negative intervals such as `RETURN range(1, 2, -1)`\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-12-17 19:32:52"}, {"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-01-08 10:49:59", "commitHash": "d97f63aa4c9d21801ea8580ec8f9eb89ea582ac9", "commitParents": ["d00c3f6de70c8998bb3e9ff14fda07a9c01ccbd5"], "commitGHEventType": "closed", "nameRev": "d97f63aa4c9d21801ea8580ec8f9eb89ea582ac9 tags/4.0.1~60", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/values/src/main/java/org/neo4j/values/virtual/ListValue.java", "deletions": 1}, {"insertions": 22, "lines": 22, "filePath": "community/cypher/spec-suite-tools/src/test/resources/acceptance/features/ReturnAcceptance.feature", "deletions": 0}, {"insertions": 23, "lines": 23, "filePath": "community/values/src/test/java/org/neo4j/values/virtual/IntegralRangeListValueTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.values.virtual.ListValue.IntegralRangeListValue.size()"}], "spoonFilePath": "ListValue.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.values.virtual.IntegralRangeListValueTest.shouldHandleNegativeStepWithPositiveRange()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.values.virtual.IntegralRangeListValueTest.shouldHandlePositiveStepWithNegativeRange()"}], "spoonFilePath": "IntegralRangeListValueTest.java"}], "commitMessage": "Fix bug with empty range\n\nQueries like:\n\n```\nRETURN range(2, 8, -1)\n```\n\nshould return an empty list.\n\nfixes #12355\nchangelog: Fix bug with negative intervals such as `RETURN range(1, 2, -1)`\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-12-17 19:32:52"}, {"commitUser": "neo-technology-build-agent", "commitDateTime": "2020-01-09 09:01:00", "commitHash": "339e27500dc4ffbeea40deb81cd7add51175a053", "commitParents": ["4f43f34339cd3d0993fc4c7867daa988d071dc6c"], "commitGHEventType": "referenced", "nameRev": "339e27500dc4ffbeea40deb81cd7add51175a053 remotes/origin/4.1~1670", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/values/src/main/java/org/neo4j/values/virtual/ListValue.java", "deletions": 1}, {"insertions": 22, "lines": 22, "filePath": "community/cypher/spec-suite-tools/src/test/resources/acceptance/features/ReturnAcceptance.feature", "deletions": 0}, {"insertions": 23, "lines": 23, "filePath": "community/values/src/test/java/org/neo4j/values/virtual/IntegralRangeListValueTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.values.virtual.ListValue.IntegralRangeListValue.size()"}], "spoonFilePath": "ListValue.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.values.virtual.IntegralRangeListValueTest.shouldHandleNegativeStepWithPositiveRange()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.values.virtual.IntegralRangeListValueTest.shouldHandlePositiveStepWithNegativeRange()"}], "spoonFilePath": "IntegralRangeListValueTest.java"}], "commitMessage": "Fix bug with empty range\n\nQueries like:\n\n```\nRETURN range(2, 8, -1)\n```\n\nshould return an empty list.\n\nfixes #12355\nchangelog: Fix bug with negative intervals such as `RETURN range(1, 2, -1)`\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-12-17 19:32:52"}], "created": "2019-12-09 12:21:12"}, {"labels": ["bug", "team-kernel"], "filteredCommits": ["3e27ee64f291595de7c336a7ccbd237fcc1c9b1e"], "url": "https://github.com/neo4j/neo4j/issues/12354", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 6, "deletions": 3}, "numCommits": 1, "commits": {"3e27ee64f291595de7c336a7ccbd237fcc1c9b1e": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}, "1c0c29f2b8b4f44b51e9e4a4aad21892433e303f": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}, "37681cb75c2b536b219d886fe1faa66db5c891a2": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 10.000277777777777, "user": "bdm83", "changesInPackagesSPOON": ["org.neo4j.unsafe.impl.batchimport.NodeImporter.labels(java.lang.String[])"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/unsafe/impl/batchimport"], "body": "The `neo4j-admin import` tool will fail to import a CSV file when an entry has more than 20 labels. \r\n\r\n**neo4j-admin Version:** 3.5.8\r\n  \r\n### Steps to reproduce\r\n1. Download the attached [example.txt](https://github.com/neo4j/neo4j/files/3933009/example.txt) and rename to `example.csv` \r\n1. Run `neo4j-admin import`:\r\n    ```\r\n   neo4j-admin import --database=\"example.db\" --nodes=\"example.csv\"\r\n    ```\r\n1. Verify that the import failed\r\n1. Edit `example.csv` and remove a single label and rerun the import\r\n1. Verify that the import is successful\r\n\r\n### Expected behavior\r\nThe node to be imported successfully regardless of the number of labels.\r\n\r\n### Actual behavior\r\nThe following error is reported:\r\n```\r\nIMPORT FAILED in 304ms.\r\nData statistics is not available.\r\nPeak memory usage: 0.00 B\r\nError in input data\r\nCaused by:ERROR in input\r\n  data source: BufferedCharSeeker[source:/xxx/example.csv, position:196, line:1]\r\n  in field: :LABEL:2\r\n  for header: [id:ID, :LABEL]\r\n  raw field value: label_0;label_1;label_2;label_3;label_4;label_5;label_6;label_7;label_8;label_9;label_10;label_11;label_12;label_13;label_14;label_15;label_16;label_17;label_18;label_19;label_20\r\n  original error: null\r\n\r\nWARNING Import failed. The store files in /xxx/data/databases/example.db are left as they are, although they are likely in an unusable state. Starting a database on these store files will likely fail or observe inconsistent records so start at your own risk or delete the store manually\r\nunexpected error: ERROR in input\r\n  data source: BufferedCharSeeker[source:/xxx/example.csv, position:196, line:1]\r\n  in field: :LABEL:2\r\n  for header: [id:ID, :LABEL]\r\n  raw field value: label_0;label_1;label_2;label_3;label_4;label_5;label_6;label_7;label_8;label_9;label_10;label_11;label_12;label_13;label_14;label_15;label_16;label_17;label_18;label_19;label_20\r\n  original error: null\r\n```\r\n", "filteredCommitsReason": {"duplicated": 2, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 5, "DEL": 0, "INS": 3, "spoonFilesChanged": 1, "MOV": 2}, "title": "neo4j-admin import fails when node has >20 labels", "statsSkippedReason": "", "closed": "2019-12-17 13:24:21", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2019-12-16 22:42:39", "commitHash": "3e27ee64f291595de7c336a7ccbd237fcc1c9b1e", "commitParents": ["fce7306a58e688f7a8a0db6e7668dbcb6adc447e"], "commitGHEventType": "referenced", "nameRev": "3e27ee64f291595de7c336a7ccbd237fcc1c9b1e tags/3.5.16~35", "commitGitStats": [{"insertions": 3, "lines": 6, "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/impl/batchimport/NodeImporter.java", "deletions": 3}, {"insertions": 99, "lines": 99, "filePath": "community/kernel/src/test/java/org/neo4j/unsafe/impl/batchimport/NodeImporterTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "DEL": 0, "INS": 3, "MOV": 2, "spoonMethodName": "org.neo4j.unsafe.impl.batchimport.NodeImporter.labels(java.lang.String[])"}], "spoonFilePath": "NodeImporter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.impl.batchimport.NodeImporterTest"}], "spoonFilePath": "NodeImporterTest.java"}], "commitMessage": "Fixes an issue with importing node with lots of labels\n\nFixes #12354\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-12-12 16:28:22"}, {"commitUser": "neo-technology-build-agent", "commitDateTime": "2019-12-16 22:43:42", "commitHash": "1c0c29f2b8b4f44b51e9e4a4aad21892433e303f", "commitParents": ["3fe2787cd91072acaa826b93771fddcbf1d2f1a0"], "commitGHEventType": "referenced", "nameRev": "1c0c29f2b8b4f44b51e9e4a4aad21892433e303f remotes/origin/4.1~1782", "commitGitStats": [{"insertions": 3, "lines": 5, "filePath": "community/record-storage-engine/src/main/java/org/neo4j/internal/batchimport/NodeImporter.java", "deletions": 2}, {"insertions": 96, "lines": 96, "filePath": "community/record-storage-engine/src/test/java/org/neo4j/internal/batchimport/NodeImporterTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "DEL": 0, "INS": 3, "MOV": 2, "spoonMethodName": "org.neo4j.internal.batchimport.NodeImporter.labels(java.lang.String[])"}], "spoonFilePath": "NodeImporter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.internal.batchimport.NodeImporterTest"}], "spoonFilePath": "NodeImporterTest.java"}], "commitMessage": "Fixes an issue with importing node with lots of labels\n\nFixes #12354\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-12-12 16:28:22"}, {"commitUser": "neo-technology-build-agent", "commitDateTime": "2019-12-17 14:01:09", "commitHash": "37681cb75c2b536b219d886fe1faa66db5c891a2", "commitParents": ["b650281c8d39a8c916b235e51f34042a16c074f0"], "commitGHEventType": "closed", "nameRev": "37681cb75c2b536b219d886fe1faa66db5c891a2 tags/4.0.1~97", "commitGitStats": [{"insertions": 3, "lines": 5, "filePath": "community/record-storage-engine/src/main/java/org/neo4j/internal/batchimport/NodeImporter.java", "deletions": 2}, {"insertions": 96, "lines": 96, "filePath": "community/record-storage-engine/src/test/java/org/neo4j/internal/batchimport/NodeImporterTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 5, "DEL": 0, "INS": 3, "MOV": 2, "spoonMethodName": "org.neo4j.internal.batchimport.NodeImporter.labels(java.lang.String[])"}], "spoonFilePath": "NodeImporter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.internal.batchimport.NodeImporterTest"}], "spoonFilePath": "NodeImporterTest.java"}], "commitMessage": "Fixes an issue with importing node with lots of labels\n\nFixes #12354\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-12-12 16:28:22"}], "created": "2019-12-06 16:11:07"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12353", "title": "Degraded Performances with MERGE and RELATIONSHIPS", "closed": "2019-12-02 08:18:36", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2019-11-28 19:22:45", "user": "ogonbat", "body": "Hi ALL\r\n\r\ni need to import a very larga dataset, more millions of nodes.\r\nsome of that nodes have relationships\r\nSo, i have first uploaded 6M of nodes ( :Artist ) and after that i have to create relationships between the :Artist nodes\r\nfrom my python code i run:\r\n`\r\n\r\n    list_query = [\r\n        [ \r\n           {\r\n              'artist': 1234356,\r\n              'aid': 1234356\r\n           }\r\n           ....... # an average of 2000 of dictionaries\r\n        ]\r\n        ....... # and average of 100 lists\r\n    ]\r\n    session.run(add_artist_aliases, parameters={'aliases': list_query})\r\n\r\n` \r\nand the query is:\r\n\r\n`\r\n\r\n    UNWIND {aliases} as aliases\r\n    UNWIND aliases as alias\r\n    MATCH (a:Artist),(b:Artist)\r\n    WHERE a.aid = alias.artist AND b.aid = alias.aid\r\n    MERGE (a)-[r:ALIAS]-(b)\r\n\r\n`\r\n\r\nI have already created two index for :Artist one for aid and another for name parameter\r\n\r\nSo, the problem is that the process take very long time, after 8 hours i have stopped the process and if i increase the number of inputs into the python dictionary, for example 500 dictionaries into the main dictionary, the server crash\r\n\r\nthis is the log when the server crash:\r\n`\r\n\r\n     019-11-28 17:08:01.763+0000 INFO  ======== Neo4j 3.5.11 ========\r\n     2019-11-28 17:08:01.768+0000 INFO  Starting...\r\n     2019-11-28 17:08:02.335+0000 INFO  Initiating metrics...\r\n     2019-11-28 17:08:03.983+0000 INFO  Sending metrics to CSV file at \r\n     /home/xxxxx/Documents/ongdb/metrics\r\n     2019-11-28 17:08:04.212+0000 INFO  Bolt enabled on 127.0.0.1:7687.\r\n     2019-11-28 17:08:05.040+0000 INFO  Started.\r\n     2019-11-28 17:08:05.164+0000 INFO  Mounted REST API at: /db/manage\r\n     2019-11-28 17:08:05.201+0000 INFO  Server thread metrics have been registered successfully\r\n     2019-11-28 17:08:05.688+0000 INFO  Remote interface available at http://localhost:7474/\r\n     Exception in thread \"neo4j.Scheduler-1\" Exception in thread \"Silent channel reaper-1\" \r\n     java.lang.OutOfMemoryError: Java heap space2019-11-28 18:41:06.029+0000 WARN   Java \r\n     heap>\r\n     java.lang.OutOfMemoryError: Java heap space\r\n     2019-11-28 18:41:06.057+0000 WARN  Unexpected thread death: \r\n     org.eclipse.jetty.util.thread.QueuedThreadPool$2@7b1a8c8e in \r\n     QueuedThreadPool[qtp1288168365]@4cc7e3ad{STARTED,13<=>\r\n     java.lang.OutOfMemoryError: Java heap space\r\n     2019-11-28 18:41:06.057+0000 WARN   Java heap space\r\n     java.lang.OutOfMemoryError: Java heap space\r\n     java.lang.OutOfMemoryError: Java heap space\r\n\r\n`\r\nHave something wrong in my query?\r\n\r\nthanks in advance for your help\r\n\r\n- Neo4j version: 3.5.11\r\n- Operating system: Ubuntu 18\r\n- API/Driver: Python driver"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12351", "title": "NEO4J in a docker does not use TLS via bolt", "closed": "2019-12-13 12:59:14", "commitsDetails": [], "commits": {}, "ttf": 18.00027777777778, "created": "2019-11-25 08:28:37", "user": "UnreleasedCode", "body": "### Steps to reproduce\r\n1. Run a NEO4J with docker-compose (NOT local)\r\n2. Set up SSL with Certbot\r\n3. Install NEO4J and connect to a remote graph using \"Encrypted Connection\"\r\n\r\n### Expected behavior\r\nEncrypted Connection should be established\r\n\r\n### Actual behavior\r\n`Unable to establish remote connection: Database is unreachable with specified configuration.` and\r\n`Unable to establish remote connection: ServiceUnavailable`\r\n\r\n### More Info\r\nI am a student and this is one of my projects. \r\nCurrently I want to use the ETL-Tool to get the data from a SQL-Database into NEO4J.\r\nIt is sensitive data and so it is very important to use an encrypted connection.\r\n\r\nI am using:\r\nNeo4j Server version: 3.5.12 (community)\r\non an Ubuntu 19.04 disco\r\n\r\nNEO4J runs inside a docker container.\r\n### Docker compose file\r\n```\r\nversion: '3'\r\n\r\nservices:\r\n  neo4j:\r\n    restart: always\r\n    image: neo4j:latest\r\n    network_mode: \"bridge\"\r\n    ports:\r\n      - \"7687:7687\"\r\n      - \"7473:7473\"\r\n    environment:\r\n      - NEO4J_dbms_memory_heap_initial__size=2048m\r\n      - NEO4J_dbms_memory_heap_max__size=2048m\r\n      - NEO4J_dbms_security_procedures_unrestricted=apoc.*\r\n      - NEO4J_apoc_import_file_enabled=true\r\n      - NEO4J_dbms_shell_enabled=true\r\n    volumes:\r\n      - ./plugins:/plugins\r\n      - ./data:/data\r\n      - ./import:/import\r\n      - ./ssl:/ssl\r\n      - ./conf/:/conf\r\n```\r\n\r\nThe ssl certificate works great when browse via URL to the database, however I got an error by connecting via the NEO4J Desktop application (with tick \"Encrypted Connection\").\r\nI am only able to connect via the ETL-Tool by unticking the encrypted connection, so I looked into the docu and found this configuration:\r\n      `- NEO4J_dbms_connectors_bolt_tls__level=REQUIRED`\r\n\r\nBut with this parameter set, I do not got any connection to the graph via NEO4J Desktop and still got the same errors..\r\nThe logs inside the container does not support helpful information.\r\n\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12350", "title": "Access to record Node[] went out of bounds of the page", "closed": "2019-12-10 09:34:21", "commitsDetails": [], "commits": {}, "ttf": 17.00027777777778, "created": "2019-11-22 11:11:45", "user": "Silkjaer", "body": "Neo4j shut down unexpectedly during data import using the JS driver and apoc.periodic.iterate. It was importing relations in batches of 2.500.000, divided into smaller batches to avoid parallel deadlock issues, and has been importing billions of relations without any errors.\r\n\r\n- Neo4j version: 3.5.11\r\n- Operating system: Ubuntu 18.04.3 LTS\r\n\r\nOutput from debug.log:\r\n```\r\n2019-11-21 22:10:23.016+0000 WARN [o.n.k.NeoStoreDataSource] Exception occurred while starting the datasource. Attempting to close things down. Component 'org.neo4j.kernel.recovery.Recovery@597f0937' failed to initialize. Please see the attached cause exception \"Access to record Node[2042845695,used=false,rel=-1,prop=-1,labels=Inline(0x0:[]),light,secondaryUnitId=-1] went out of bounds of the page. The record size is 16 bytes, and the access was at offset 8176 bytes into page 3989932, and the pages have a capacity of 8192 bytes. The mapped store file in question is /data/neo4j/data/databases/***.db/neostore.nodestore.db\".\r\norg.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.recovery.Recovery@597f0937' failed to initialize. Please see the attached cause exception \"Access to record Node[2042845695,used=false,rel=-1,prop=-1,labels=Inline(0x0:[]),light,secondaryUnitId=-1] went out of bounds of the page. The record size is 16 bytes, and the access was at offset 8176 bytes into page 3989932, and the pages have a capacity of 8192 bytes. The mapped store file in question is /data/neo4j/data/databases/***.db/neostore.nodestore.db\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:434)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:66)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:102)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:443)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:116)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:227)\r\n\tat com.neo4j.commercial.edition.CommercialGraphDatabase.<init>(CommercialGraphDatabase.java:20)\r\n\tat com.neo4j.server.database.CommercialGraphFactory.newGraphDatabase(CommercialGraphFactory.java:40)\r\n\tat org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:90)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:180)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:124)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:91)\r\n\tat com.neo4j.server.enterprise.CommercialEntryPoint.main(CommercialEntryPoint.java:22)\r\nCaused by: java.lang.RuntimeException: Error reading transaction logs, recovery not possible. To force the database to start anyway, you can specify 'unsupported.dbms.tx_log.fail_on_corrupted_log_files=false'. This will try to recover as much as possible and then truncate the corrupt part of the transaction log. Doing this means your database integrity might be compromised, please consider restoring from a consistent backup instead.\r\n\tat org.neo4j.kernel.recovery.Recovery.throwUnableToCleanRecover(Recovery.java:160)\r\n\tat org.neo4j.kernel.recovery.Recovery.init(Recovery.java:136)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:413)\r\n\t... 18 more\r\nCaused by: org.neo4j.kernel.api.exceptions.TransactionApplyKernelException: Failed to apply transaction: Transaction #264597 at log position LogPosition{logVersion=8614, byteOffset=146544210} {started 2019-11-21 18:29:27.017+0000, committed 2019-11-21 18:39:57.359+0000, with 6060122 commands in this transaction, authored by -1, with master id -1, lock session -1, latest committed transaction id when started was 264562, additional header bytes: \r\n80\r\n70\r\nF5\r\nEA\r\nA4\r\n88\r\n0F\r\n80}\r\n```"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12348", "title": " Could not locate JVM.DLL at C:\\Program Files (x86)\\Java\\jre1.8.0_201\\bin\\server\\bin\\server\\jvm.dll", "closed": "2019-11-21 10:12:55", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-11-21 03:15:08", "user": "Varun199090", "body": "## Guidelines\r\n\r\nPlease note that GitHub issues are only meant for bug reports/feature requests. \r\nIf you have questions on how to use Neo4j, please ask on [StackOverflow](http://stackoverflow.com/questions/tagged/neo4j) instead of creating an issue here.\r\n\r\nTo help us understand your issue, please specify important details, primarily:\r\n\r\n- Neo4j version: X.Y.Z\r\n- Operating system: (for example Windows 95/Ubuntu 16.04)\r\n- API/Driver: (for example Cypher/Java API/Python driver vX.Y.Z)\r\n- **Steps to reproduce**\r\n- Expected behavior\r\n- Actual behavior\r\n\r\nAdditionally, include (as appropriate) log-files, stacktraces, and other debug output.\r\n\r\n## Example bug report\r\n\r\nI discovered that when I mount `data/` to a volume on my host, and then stop the container, the `write.lock` is not removed as well as a number of other files not being cleaned up properly.\r\n\r\n**Neo4j Version:** 3.0M03  \r\n**Operating System:** Ubuntu 15.10  \r\n**API:** Docker\r\n\r\n### Steps to reproduce\r\n1. Pull the image: `docker pull neo4j/neo4j:3.0.0-M03`\r\n2. Create a directory on the host that will be a mount for the data: `mkdir /home/neo4j-data`\r\n3. Start a new container that mounts to this directory: `docker run -d --name neo4j-test -p 7474:7474 -v /home/neo4j:/data neo4j/neo4j:3.0.0-M03`\r\n4. Navigate to the `write.lock` file located in the directory: `/data/databases/graph.db/schema/label/lucene/labelStore/1/`\r\n5. Stop the container: `docker stop neo4j-test`\r\n\r\n### Expected behavior\r\n`write.lock` should be removed now.\r\n\r\n### Actual behavior\r\n`write.lock` is still present and preventing access by other programs.\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12347", "title": "v 3.5.12 :  org.neo4j.cypher.internal.v3_5.util package not found", "closed": "2019-11-18 08:31:32", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-11-18 08:25:20", "user": "LiFool", "body": ""}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12346", "title": "NPE when setting label during a MERGE with a native + fulltext index", "closed": "2019-11-16 15:06:24", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-11-16 05:37:31", "user": "jgaskins", "body": "- Neo4j version: 3.5.12 \r\n- Operating system: macOS Catalina 10.15.1\r\n- API/Driver: [Neo4j.cr](https://github.com/jgaskins/neo4j.cr)\r\n\r\n## Steps to reproduce\r\n\r\n1. `CALL db.index.fulltext.createNodeIndex('foo', ['Account'], ['id', 'display_name', 'handle'], { analyzer: 'english' })`\r\n2. `CREATE INDEX ON :Person(id)`\r\n3. `MERGE (person:Person { id: \"test\" }) SET person:Account`\r\n\r\n## Expected behavior\r\n\r\nIt upserts a `Person` node with the given property and then sets the `Account` label on that node\r\n\r\n## Actual behavior\r\n\r\n`NullPointerException` manifesting as a `Neo.DatabaseError.General.UnknownError` in the driver.\r\n\r\n## Notes\r\n\r\nThe NPE does not seem to occur if I omit the native index or the FTS index, so it does appear to be related to interplay between them.\r\n\r\n<details>\r\n  <summary>Click for stack trace</summary>\r\n\r\n```\r\n2019-11-16 05:18:27.242+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [Neo.DatabaseError.General.UnknownError]: null, reference 606e81c5-55cd-424a-80ee-c0dcfffc1833.\r\njava.lang.NullPointerException\r\n\tat org.neo4j.values.storable.ValueTuple.hashCode(ValueTuple.java:108)\r\n\tat java.util.HashMap.hash(HashMap.java:339)\r\n\tat java.util.HashMap.computeIfAbsent(HashMap.java:1099)\r\n\tat org.neo4j.kernel.impl.api.state.TxState.getOrCreateIndexUpdatesForSeek(TxState.java:803)\r\n\tat org.neo4j.kernel.impl.api.state.TxState.indexDoUpdateEntry(TxState.java:786)\r\n\tat org.neo4j.kernel.impl.newapi.IndexTxStateUpdater.onLabelChange(IndexTxStateUpdater.java:87)\r\n\tat org.neo4j.kernel.impl.newapi.Operations.checkConstraintsAndAddLabelToNode(Operations.java:306)\r\n\tat org.neo4j.kernel.impl.newapi.Operations.nodeAddLabel(Operations.java:276)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext$$anonfun$setLabelsOnNode$1.apply$mcIII$sp(TransactionBoundQueryContext.scala:81)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext$$anonfun$setLabelsOnNode$1.apply(TransactionBoundQueryContext.scala:80)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext$$anonfun$setLabelsOnNode$1.apply(TransactionBoundQueryContext.scala:80)\r\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\r\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:891)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1334)\r\n\tat scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157)\r\n\tat scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext.setLabelsOnNode(TransactionBoundQueryContext.scala:80)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext$$anonfun$setLabelsOnNode$1.apply$mcI$sp(ExceptionTranslatingQueryContext.scala:54)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext$$anonfun$setLabelsOnNode$1.apply(ExceptionTranslatingQueryContext.scala:54)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext$$anonfun$setLabelsOnNode$1.apply(ExceptionTranslatingQueryContext.scala:54)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslationSupport$class.translateException(ExceptionTranslationSupport.scala:33)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext.translateException(ExceptionTranslatingQueryContext.scala:42)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext.setLabelsOnNode(ExceptionTranslatingQueryContext.scala:54)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.UpdateCountingQueryContext.setLabelsOnNode(UpdateCountingQueryContext.scala:88)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.SetLabelsOperation.set(SetOperation.scala:315)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.SetPipe$$anonfun$internalCreateResults$1.apply(SetPipe.scala:32)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.SetPipe$$anonfun$internalCreateResults$1.apply(SetPipe.scala:31)\r\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:410)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.EmptyResultPipe.internalCreateResults(EmptyResultPipe.scala:29)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:76)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.runtime.executionplan.BaseExecutionResultBuilderFactory$BaseExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:61)\r\n\tat org.neo4j.cypher.internal.compatibility.InterpretedRuntime$InterpretedExecutionPlan.run(InterpretedRuntime.scala:84)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery$$anonfun$execute$3.apply(CypherCurrentCompiler.scala:205)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery$$anonfun$execute$3.apply(CypherCurrentCompiler.scala:190)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:89)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery.execute(CypherCurrentCompiler.scala:224)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:101)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:85)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachineV1SPI$BoltResultHandleV1.start(TransactionStateMachineV1SPI.java:189)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State.startExecution(TransactionStateMachine.java:506)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.execute(TransactionStateMachine.java:300)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:269)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:110)\r\n\tat org.neo4j.bolt.v3.runtime.ReadyState.processRunMessage(ReadyState.java:85)\r\n\tat org.neo4j.bolt.v3.runtime.ReadyState.processUnsafe(ReadyState.java:56)\r\n\tat org.neo4j.bolt.v3.runtime.FailSafeBoltStateMachineState.process(FailSafeBoltStateMachineState.java:48)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.nextState(BoltStateMachineV1.java:144)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.process(BoltStateMachineV1.java:92)\r\n\tat org.neo4j.bolt.messaging.BoltRequestMessageReader.lambda$doRead$1(BoltRequestMessageReader.java:89)\r\n\tat org.neo4j.bolt.runtime.MetricsReportingBoltConnection.lambda$enqueue$0(MetricsReportingBoltConnection.java:68)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:191)\r\n\tat org.neo4j.bolt.runtime.MetricsReportingBoltConnection.processNextBatch(MetricsReportingBoltConnection.java:86)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:139)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:171)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.lambda$scheduleBatchOrHandleError$2(ExecutorBoltScheduler.java:154)\r\n\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1604)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```\r\n\r\n</details>\r\n\r\n## Background\r\n\r\nEvery node with the `Person` label represents a person, but may not be a fully fledged account yet (data hasn't propagated, etc), so it's not eligible for the `Account` label. The `MERGE` query is part of that \u2014 it sets the properties and assigns the `Account` label, but we can't do a `MATCH` since the node is not guaranteed to exist yet."}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12345", "title": "hasRelation method returns wrong result", "closed": "2019-11-21 14:48:21", "commitsDetails": [], "commits": {}, "ttf": 7.000277777777778, "created": "2019-11-14 12:34:53", "user": "horak90", "body": "Hello,\r\n\r\nI am getting a not consistent behavior of the hasRelation method when used by my custom stored procedure.\r\n\r\n`Stream<Node> filterNodesByRelationType(List<Node> nodes) {\r\n        return nodes.stream().filter(node -> node.hasRelationship(Direction.OUTGOING, RelationshipType.withName(\"myRelation\")));\r\n    }`\r\n\r\nThe problem is that at some point the hasRelation method returns true for a node that does not have this type of relationship.\r\n\r\nBy debugging, I found out that true is returned only the first time, the other calls of the same method return false for the same node.\r\n\r\nBy entering the innerHasRelationships method in NodeProxy class, I saw that the iterator contains a relationship that belongs to a previously checked node ( from the list ). So it seems like the method returns a value of the previous call for the first time.\r\n\r\nIf I replace the hasRelationship method by `getRelationships(Direction.OUTGOING, RelationshipType.withName(\"myRelation\")).iterator().hasNext()` everything works as expected.\r\n\r\n- Neo4j version: 3.5.12\r\n- Operating system: MacOS Catalina\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12341", "title": "create relations", "closed": "2019-12-03 02:58:21", "commitsDetails": [], "commits": {}, "ttf": 20.00027777777778, "created": "2019-11-12 06:24:59", "user": "hshrimp", "body": "**Neo4j Version:** 4.3.0\r\n**Operating System:** macOs 10\r\n**API:** \r\n\r\nHello,  i have a question.\r\ni have two relations which have same start node and end node and also the relation type. When i want to create this two relations by graph.create(), it run MERGE method but not the CREATE method, so the second relation will not to be create in the graph. why is MERGE?\r\nthanks"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12337", "title": "Inconsistency report NullPointerException consistency after full backup", "closed": "2019-11-08 10:16:10", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-11-08 00:18:21", "user": "gpierrick", "body": "Hi,\r\n\r\nRunning into this issue every night when the full backup runs. It's only been happening for the past 7 days (since adding a fulltext index is my guess)\r\n\r\n- Neo4j version: 3.5.3 enterprise Single instance\r\n- Operating system:Ubuntu 16.04\r\n\r\n**Steps to reproduce**\r\n- Performing a full backup\r\n\r\nAdditionally, include (as appropriate) log-files, stacktraces, and other debug output.\r\n\r\n```\r\nERROR: Failed to check record: java.lang.NullPointerException at org.neo4j.consistency.checking.full.PropertyReader.pro$        Node[57573034,used=true,group=904517,prop=219335142,labels=Inline(0x1000000001:[1]),light,secondaryUnitId=-1]\r\n\r\n```\r\n**Neo4j Version:** 3.5.3 \r\n**Operating System:** Ubuntu 16.04\r\n\r\nThe Node in question\r\nLabel: Project\r\nProperties id, name, description, createdAt (iso string) and more below\r\n\r\n```\r\n{\r\n  \"numberOfParticipants\": 3.0,\r\n  \"country\": \"US\",\r\n  \"publishedAtTimestamp\": 1572015599464,\r\n  \"education\": [],\r\n  \"ethnicity\": [],\r\n  \"timezone\": \"America/New_York\",\r\n  \"companyName\": \"redacted\",\r\n  \"researchType\": \"One-on-One\",\r\n  \"researchConductType\": 2.0,\r\n  \"ageGroups\": [\r\n    \"21-29\"\r\n  ],\r\n  \"organizationId\": \"redacted\",\r\n  \"duration\": 30.0,\r\n  \"createdAt\": \"2019-10-25T14:58:24.714Z\",\r\n  \"incentive\": 30.0,\r\n  \"talkToAudience\": 2.0,\r\n  \"id\": \"redacted\",\r\n  \"closedAt\": \"2019-10-29T01:44:51.728Z\",\r\n  \"audienceType\": \"General Population\",\r\n  \"slug\": \"redatcted\",\r\n  \"updatedAt\": \"2019-10-29T01:44:51.728Z\",\r\n  \"visibility\": \"marketplace\",\r\n  \"publishedAt\": \"2019-10-25T14:59:59.464Z\",\r\n  \"recruitingStatus\": \"RECRUITED\",\r\n  \"genders\": \"N/A\",\r\n  \"updatedAtTimestamp\": 1572313491728,\r\n  \"expireAt\": \"2019-11-25T15:07:45.300Z\",\r\n  \"userId\": \"redacted\",\r\n  \"createdAtTimestamp\": 1572015504714,\r\n  \"name\": \"Redacted\",\r\n  \"closed\": true,\r\n  \"kindOfResearch\": 1.0,\r\n  \"hideCompanyName\": false,\r\n  \"status\": \"ARCHIVED\"\r\n}\r\n```\r\n\r\nI have a full text index on name and description (description may have been null)\r\n\r\nI have set the description to a string and waiting to see if it happens again\r\n\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12335", "title": "malloc.c:2401 assertion failed / jvm as detected a fatal error - unable to startup", "closed": "2020-04-11 15:06:51", "commitsDetails": [], "commits": {}, "ttf": 156.00027777777777, "created": "2019-11-07 14:10:21", "user": "dllz", "body": "## Guidelines\r\n\r\nPlease note that GitHub issues are only meant for bug reports/feature requests. \r\nIf you have questions on how to use Neo4j, please ask on [StackOverflow](http://stackoverflow.com/questions/tagged/neo4j) instead of creating an issue here.\r\n\r\nTo help us understand your issue, please specify important details, primarily:\r\n\r\n- Neo4j version: 3.5.12\r\n- Operating system: Ubuntu 18.04 LTS \r\n- API/Driver: (for example Cypher/Java API/Python driver vX.Y.Z)\r\n- **Steps to reproduce**\r\nSeems to be specific to my database, can send the backup in question to devs by email. \r\n- Expected behavior\r\nDatabase starts up\r\n- Actual behavior\r\nJVM exception or malloc.c assertion failure \r\nConfig: https://gist.github.com/dllz/94ea9dcd61ebee31a48d9e90aa5e290a\r\nAdditionally, include (as appropriate) log-files, stacktraces, and other debug output.\r\n\r\nSince the 1 November been having an issue that database does not startup, after restoring a backup from the 31st October the problem went away however it is back on the 7th November, restoring this mornings backup does not fix the issue and going back to the 31st October is not an option. If I restore back to the 31sts backup everything is fine again. I have tried to delete the neostore.count.a and neostore.count.b files, this successfully triggered a rebuilding of the count store but got the assertion error below. Other times I delete the count.a file I get the jvm error below that. \r\nThe following errors come up: \r\n\r\n```\r\n2019-11-07 13:38:53.081+0000 INFO ======== Neo4j 3.5.12 ========\r\n2019-11-07 13:38:53.090+0000 INFO Starting...\r\n2019-11-07 13:38:54.042+0000 INFO Initiating metrics...\r\n2019-11-07 13:38:59.459+0000 INFO Sending metrics to CSV file at /var/lib/neo4j/metrics\r\n2019-11-07 13:38:59.799+0000 INFO Bolt enabled on 0.0.0.0:7687.\r\njava: malloc.c:2401: sysmalloc: Assertion `(old_top == initial_top (av) && old_size == 0) || ((unsigned long) (old_size) >= MINSIZE && prev_inuse (old_top) && ((unsigned long) old_end & (pagesize - 1)) == 0)' failed.\r\n```\r\n\r\nHere is the debug.log for the above error: https://gist.github.com/dllz/aefd8b637cc712bd6ae7bd8133659eb8\r\nAs well as \r\n\r\n```\r\n2019-11-07 12:38:08.771+0000 INFO  ======== Neo4j 3.5.12 ========\r\n2019-11-07 12:38:08.777+0000 INFO  Starting...\r\n2019-11-07 12:38:09.315+0000 INFO  Initiating metrics...\r\n2019-11-07 12:38:10.053+0000 INFO  Sending metrics to CSV file at /var/lib/neo4j/metrics\r\n2019-11-07 12:38:10.352+0000 INFO  Bolt enabled on 127.0.0.1:7687.\r\n#\r\n# A fatal error has been detected by the Java Runtime Environment:\r\n#\r\n#  SIGSEGV (0xb) at pc=0x00007efbfef6c0dd, pid=2287, tid=0x00007efaded4b700\r\n#\r\n# JRE version: OpenJDK Runtime Environment (8.0_222-b10) (build 1.8.0_222-8u222-b10-1ubuntu1~18.04.1-b10)\r\n# Java VM: OpenJDK 64-Bit Server VM (25.222-b10 mixed mode linux-amd64 compressed oops)\r\n# Problematic frame:\r\n# C  [libc.so.6+0x950dd]# [ timer expired, abort... ]\r\n```"}, {"labels": ["3.5", "bug", "team-cluster", "team-documentation"], "url": "https://github.com/neo4j/neo4j/issues/12331", "title": "Typos: instad in causal clusters", "closed": "2019-12-02 07:25:58", "commitsDetails": [], "commits": {}, "ttf": 31.00027777777778, "created": "2019-10-31 20:31:26", "user": "jsoref", "body": "- Neo4j version: 3.5.0\r\n\r\n### Steps to reproduce\r\n1. Load https://neo4j.com/docs/operations-manual/current/backup/causal-clusters/#backup-causal-clusters-core\r\n2. Search for \"Instad,\"\r\n\r\n### Expected behavior\r\nEnglish words in complete understandable sentences.\r\n\r\n### Actual behavior\r\n> In a Core-only cluster, we do not have access to Read Replicas for scaling out workload. *Instad*, we pick one of the Core Servers to run backups based on factors such as its physical proximity, bandwidth, performance, and liveness.\r\n"}, {"labels": ["3.5", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12329", "title": "\"Found no solution for block ...\" with complex queries", "closed": "2019-11-04 08:27:47", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2019-10-30 10:17:34", "user": "maksbotan", "body": "Complex queries on some data sets lead to errors like this one:\r\n\r\n```\r\nFound no solution for block with size 0,\\nVector() were the selected candidates from the table IDPPlanTable(numberOfPlans=17, largestSolved=3)\r\n```\r\n\r\nWe experienced such errors on 3.5.3, then discovered https://github.com/neo4j/neo4j/issues/12212, upgraded to 3.5.11 and the problem seemed solved.\r\n\r\nHowever, it appeared again with slightly more complicated query. And it reproduces only on fairly large datasets.\r\n\r\nHere's an example of such query:\r\n\r\n```cypher\r\nMATCH\r\n  (mol:Foo)<-[pl:PL_FOO]-(el:El),\r\n  (mol)<-[:NAME_OF]-(name:Name)\r\nOPTIONAL MATCH (el)<-[:TAG_OF]-(tag:Tag)\r\nWITH\r\n  mol, el, pl, collect(DISTINCT name.name) as names,\r\n  collect(DISTINCT tag.tag) as tags WITH mol,\r\n  names, collect(DISTINCT pl.pl) as pls,\r\n  collect(DISTINCT tags) as tags,\r\n  [\"AAA\",\"BBB\",\"CCC\",\"DDD\",\"EEE\",\"FFF\",\"GGG\",\"HHH\"] AS allowedElements\r\n\r\nWHERE ALL (p IN pls WHERE p in allowedElements)\r\n\r\nMATCH (mol)<-[:PL_FOO{pl:\"AAA\"}]-(el1:El)\r\nMATCH (mol)<-[:PL_FOO{pl:\"BBB\"}]-(el2:El)\r\nMATCH (mol)<-[:PL_FOO{pl:\"CCC\"}]-(el3:El)\r\nMATCH (mol)<-[:PL_FOO{pl:\"DDD\"}]-(el4:El)\r\nMATCH (mol)<-[:PL_FOO{pl:\"EEE\"}]-(el5:El)\r\nMATCH (mol)<-[:PL_FOO{pl:\"FFF\"}]-(el6:El)\r\nMATCH (mol)<-[:PL_FOO{pl:\"GGG\"}]-(el7:El)\r\nMATCH (mol)<-[:PL_FOO{pl:\"HHH\"}]-(el8:El)\r\n\r\nWITH mol, pls, names, tags, el8, el6, el1, el4, el3, el2, el5, el7\r\nWHERE TRUE \r\nMATCH\r\n  (bar1:Bar{barType:\"sequential\"})<-[:SPAM_BAR]-(:Spam{spamName:\"XXXXX\"}),\r\n  (bar1)-[:BAR_EL]->(el5)\r\nMATCH\r\n  (bar2:Bar{barType:\"sequential\"})<-[:SPAM_BAR]-(:Spam{spamName:\"XXXXX\"}),\r\n  (bar2)-[:BAR_EL]->(el6)\r\nMATCH \r\n  (bar3:Bar{barType:\"sequential\"})<-[:SPAM_BAR]-(:Spam{spamName:\"XXXXX\"}),\r\n  (bar3)-[:BAR_EL]->(el8)\r\nMATCH\r\n  (bar4:Bar{barType:\"sequential\"})<-[:SPAM_BAR]-(:Spam{spamName:\"XXXXX\"}),\r\n  (bar4)-[:BAR_EL]->(el7)\r\nMATCH\r\n  (bar5:Bar{barType:\"opposite\"})<-[:SPAM_BAR]-(:Spam{spamName:\"XXXXX\"}),\r\n  (bar5)-[:BAR_EL]->(el1),\r\n  (bar5)-[:BAR_EL]->(el2)\r\nMATCH\r\n  (bar6:Bar{barType:\"opposite\"})<-[:SPAM_BAR]-(:Spam{spamName:\"XXXXX\"}),\r\n  (bar6)-[:BAR_EL]->(el3),\r\n  (bar6)-[:BAR_EL]->(el4)\r\nWITH DISTINCT mol, names, pls, tags\r\nOPTIONAL MATCH\r\n  (bEl:El)-[:PL_FOO]->(mol),\r\n  (bar:Bar)-[:BAR_EL]->(bEl)\r\nWITH DISTINCT mol, names, pls, tags, bar\r\n\r\nOPTIONAL MATCH (bar)-[:BAR_EL]->(barEl:El)\r\nWITH mol, names, pls, tags, bar, collect(DISTINCT barEl) as barEls\r\nWHERE ALL(el in barEls WHERE EXISTS((el) -[:PL_FOO]-> (mol))) \r\n\r\nOPTIONAL MATCH\r\n  (spam:Spam)-[:SPAM_BAR]->(bar)\r\nWITH DISTINCT mol, names, pls, tags, collect(DISTINCT spam.spamName) as spams \r\n\r\nRETURN DISTINCT mol.uuid as molId, labels(mol) as labels, names, pls, tags, spams\r\n```\r\n\r\nThis particular problem is solved by upgrading to 3.5.12, but the pattern of these errors popping out of nowhere is frightening, as we can't be sure it won't occur again.\r\n\r\n**Neo4j Version:** 3.5.11\r\n**Operating System:** Image from Docker hub\r\n"}, {"labels": ["3.5", "bug", "team-cypher"], "filteredCommits": ["15ccf32f26a7cd8d67420587278083e55a59e058"], "url": "https://github.com/neo4j/neo4j/issues/12328", "gitStatsSummary": {"insertions": 15, "gitFilesChange": 1, "lines": 16, "deletions": 1}, "numCommits": 1, "commits": {"15ccf32f26a7cd8d67420587278083e55a59e058": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 14.000277777777777, "user": "ronoBalaga", "changesInPackagesSPOON": ["org.neo4j.cypher.internal.codegen.CompiledConversionUtils.toBooleanStream(java.lang.Object)", "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.toLongStream(java.lang.Object)", "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.toDoubleStream(java.lang.Object)", "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.toSet(java.lang.Object)", "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.materializeAnyResult(org.neo4j.kernel.impl.core.EmbeddedProxySPI,java.lang.Object)"], "changesInPackagesGIT": ["community/cypher/cypher/src/main/java/org/neo4j/cypher/internal"], "body": "## Bug report\r\n\r\n* when I ran \r\n`MATCH (entity:RULE)\r\nWHERE ( entity.disabled = false)\r\nRETURN entity`\r\n 100 results returns\r\n\r\n* when I ran \r\n`MATCH (entity:RULE)\r\nWHERE ( entity.disabled = true)\r\nRETURN entity`\r\n 100 results returns\r\n\r\n* when I ran \r\n`MATCH (entity:RULE)\r\nWHERE ( entity.disabled = false OR  entity.disabled =true)\r\nRETURN entity`\r\n *0 results returns*\r\n\r\n\r\n**Neo4j Version:** 3.5.5\r\n**Operating System:** Alpine Linux v3.9\r\n**API:** Docker\r\n\r\n\r\n### Expected behavior\r\n200 results should return\r\n\r\n### Actual behavior\r\n0 results returns", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 5, "UPD": 10, "TOT": 24, "DEL": 1, "INS": 1, "spoonFilesChanged": 1, "MOV": 12}, "title": "(<boolField> = true OR <boolField> = false) returns nothing", "statsSkippedReason": "", "closed": "2019-11-13 11:12:55", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2019-11-12 13:46:44", "commitHash": "15ccf32f26a7cd8d67420587278083e55a59e058", "commitParents": ["fcb2a8eb387c7a8c7fb8cefb051e1e4728320ee4"], "commitGHEventType": "closed", "nameRev": "15ccf32f26a7cd8d67420587278083e55a59e058 tags/3.5.13~22", "commitGitStats": [{"insertions": 15, "lines": 16, "filePath": "community/cypher/cypher/src/main/java/org/neo4j/cypher/internal/codegen/CompiledConversionUtils.java", "deletions": 1}, {"insertions": 2, "lines": 6, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/codegen/CompiledConversionUtilsTest.scala", "deletions": 4}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 2, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 2, "spoonMethodName": "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.toDoubleStream(java.lang.Object)"}, {"UPD": 3, "TOT": 13, "DEL": 1, "INS": 1, "MOV": 8, "spoonMethodName": "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.toLongStream(java.lang.Object)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.toSet(java.lang.Object)"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.materializeAnyResult(org.neo4j.kernel.impl.core.EmbeddedProxySPI,java.lang.Object)"}, {"UPD": 2, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 2, "spoonMethodName": "org.neo4j.cypher.internal.codegen.CompiledConversionUtils.toBooleanStream(java.lang.Object)"}], "spoonFilePath": "CompiledConversionUtils.java"}], "commitMessage": "Handle index seek of multiple boolean properties in compiled runtime\n\nIn the compiled runtime we are internally using an `IntStream` to store\nlists of booleans. This caused an issue when doing an index seek for\nmultiple index properties since values weren't being properly converted\nback to booleans before seeking. So instead of seeking for `true` we\nlooked for `1` and instead of `false` we seeked `0` leading to the wrong\nresults.\n\nFixes #12328\n\nchangelog: Fix bug for index queries with multiple boolean properties,\nlike `MATCH (n:L) WHERE n.p = true OR n.p = false RETURN n.p`\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-11-08 14:30:11"}], "created": "2019-10-29 15:23:09"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12326", "title": "Expired key for debian.neo4j.org", "closed": "2019-10-29 09:46:24", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-10-28 13:23:05", "user": "Shib4", "body": "I have an issue while following the [documentation](https://neo4j.com/docs/operations-manual/current/installation/linux/debian/#debian-add-repository). It seems the key used to sign the packages is expired.\r\n\r\n- Operating system: Ubuntu 16.04\r\n\r\n```\r\nroot@neo4j:~# wget -qO - https://debian.neo4j.org/neotechnology.gpg.key | sudo apt-key add -\r\nOK\r\n\r\nroot@neo4j:~# echo 'deb https://debian.neo4j.org/repo stable/' | sudo tee -a /etc/apt/sources.list.d/neo4j.list\r\ndeb https://debian.neo4j.org/repo stable/\r\n\r\nroot@neo4j:~# apt update\r\nHit:1 http://archive.ubuntu.com/ubuntu bionic InRelease\r\nHit:2 http://archive.ubuntu.com/ubuntu bionic-updates InRelease                                                                                     \r\nHit:3 http://archive.ubuntu.com/ubuntu bionic-backports InRelease                                                                                   \r\nHit:4 http://security.ubuntu.com/ubuntu bionic-security InRelease                                                             \r\nIgn:5 https://debian.neo4j.org/repo stable/ InRelease                                            \r\nGet:6 https://debian.neo4j.org/repo stable/ Release [1479 B]\r\nGet:7 https://debian.neo4j.org/repo stable/ Release.gpg [819 B]\r\nIgn:7 https://debian.neo4j.org/repo stable/ Release.gpg\r\nReading package lists... Done \r\nW: GPG error: https://debian.neo4j.org/repo stable/ Release: The following signatures were invalid: BADSIG 26C95CF201182252 Neo Technology Admins <admins@neotechnology.com>\r\nE: The repository 'https://debian.neo4j.org/repo stable/ Release' is not signed.\r\nN: Updating from such a repository can't be done securely, and is therefore disabled by default.\r\nN: See apt-secure(8) manpage for repository creation and user configuration details.\r\n\r\nroot@neo4j:~# apt-key list 26C95CF201182252\r\npub   rsa4096 2014-10-28 [SC] [expired: 2019-10-27]\r\n      66D3 4E95 1A8C 53D9 0242  132B 26C9 5CF2 0118 2252\r\nuid           [ expired] Neo Technology Admins <admins@neotechnology.com>\r\n```"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12321", "title": "Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached", "closed": "2019-12-19 18:24:44", "commitsDetails": [], "commits": {}, "ttf": 57.000277777777775, "created": "2019-10-23 05:34:17", "user": "karezi", "body": "I have a large neo4j database with 11061285 nodes and 13635924 relationships, but cannot show the relationship types with Neo4j because maximum id limit.\r\n\r\n** Neo4j version: neo4j-enterprise-3.5.11\r\n** Operating system: MacOS 10.15\r\n** API/Driver: Cypher or Java API\r\n\r\nReproduce and behavior\r\n- Use Cypher\r\n```\r\n$ match (n)-[r]-() RETURN r\r\n```\r\nI got the error:\r\n```\r\nNeo.DatabaseError.General.UnknownError: Kernel API returned non-existent relationship type: 2\r\n```\r\nneo4j.log:\r\n```\r\n2019-10-22 08:55:16.490+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@75d982d3' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\". Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@75d982d3' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@75d982d3' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\n\tat org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:45)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:187)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:124)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:91)\r\n\tat com.neo4j.server.enterprise.CommercialEntryPoint.main(CommercialEntryPoint.java:22)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabase@75d982d3' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:180)\r\n\t... 3 more\r\nCaused by: java.lang.RuntimeException: Error starting org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory, /Users/karezi/Desktop/neo4j-enterprise-3.5.11/data/databases\r\n\tat org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:232)\r\n\tat com.neo4j.commercial.edition.CommercialGraphDatabase.<init>(CommercialGraphDatabase.java:20)\r\n\tat com.neo4j.server.database.CommercialGraphFactory.newGraphDatabase(CommercialGraphFactory.java:40)\r\n\tat org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:90)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\t... 5 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@4228bf58' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:116)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:227)\r\n\t... 9 more\r\nCaused by: java.lang.RuntimeException: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine@3ed7821' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\n\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:459)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\t... 14 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine@3ed7821' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:443)\r\n\t... 15 more\r\nCaused by: org.neo4j.kernel.impl.store.id.validation.IdCapacityExceededException: Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\r\n\tat org.neo4j.kernel.impl.store.id.validation.IdValidator.assertIdWithinCapacity(IdValidator.java:90)\r\n\tat org.neo4j.kernel.impl.store.id.IdGeneratorImpl.setHighId(IdGeneratorImpl.java:170)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.setHighId(CommonAbstractStore.java:660)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.rebuildIdGenerator(CommonAbstractStore.java:464)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.makeStoreOk(CommonAbstractStore.java:678)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.lambda$makeStoreOk$0(NeoStores.java:459)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.visitStore(CommonAbstractStore.java:973)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.visitStore(NeoStores.java:504)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.makeStoreOk(NeoStores.java:457)\r\n\tat org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.start(RecordStorageEngine.java:376)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\t... 17 more\r\n\tSuppressed: org.neo4j.kernel.lifecycle.LifecycleException: Exception during graceful attempt to stop partially started component. Please use non suppressed exception to see original component failure.\r\n\t\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:464)\r\n\t\t... 17 more\r\n\tCaused by: java.lang.NullPointerException\r\n\t\tat org.neo4j.kernel.impl.storageengine.impl.recordstorage.id.BufferedIdController.stop(BufferedIdController.java:59)\r\n\t\tat org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.stop(RecordStorageEngine.java:401)\r\n\t\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:460)\r\n\t\t... 17 more\r\n```\r\n\r\n- Use Java API\r\nI tried to connect to db with Java API:\r\n```\r\nimport org.neo4j.graphdb.*;\r\nimport org.neo4j.graphdb.factory.GraphDatabaseFactory;\r\nimport java.io.File;\r\n\r\npublic class FindRelationType {\r\n    public static void main(String[] args) {\r\n        final GraphDatabaseService gdb = new GraphDatabaseFactory()\r\n                .newEmbeddedDatabase(new File(\"/Users/karezi/Desktop/neo4j-enterprise-3.5.11/data/databases/graph.db\"));\r\n        findRelType(gdb);\r\n        gdb.shutdown();\r\n    }\r\n\r\n    private static void findRelType(GraphDatabaseService graphdb) {\r\n        Transaction tx = graphdb.beginTx();\r\n        int count = 0;\r\n        try {\r\n            for (Node n: graphdb.getAllNodes()) {\r\n                if (count++ > 100) {\r\n                    break;\r\n                }\r\n                for(RelationshipType rt: n.getRelationshipTypes()) {\r\n                    System.out.println(rt.name());\r\n                }\r\n            }\r\n        } finally {\r\n            tx.success();\r\n            tx.close();\r\n        }\r\n    }\r\n}\r\n```\r\nI got the following errors:\r\n```\r\nException in thread \"main\" java.lang.RuntimeException: Error starting org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory, /Users/karezi/Desktop/neo4j-enterprise-3.5.11/data/databases\r\n\tat org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:232)\r\n\tat org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:148)\r\n\tat org.neo4j.graphdb.factory.GraphDatabaseFactory.newDatabase(GraphDatabaseFactory.java:133)\r\n\tat org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:122)\r\n\tat org.neo4j.graphdb.factory.GraphDatabaseFactory$EmbeddedDatabaseCreator.newDatabase(GraphDatabaseFactory.java:178)\r\n\tat org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:210)\r\n\tat org.neo4j.graphdb.factory.GraphDatabaseFactory.newEmbeddedDatabase(GraphDatabaseFactory.java:79)\r\n\tat org.neo4j.tool.FindRelationType.main(FindRelationType.java:10)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@2a2843ec' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:116)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:227)\r\n\t... 7 more\r\nCaused by: java.lang.RuntimeException: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine@81b5db0' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\n\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:459)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\t... 12 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine@81b5db0' was successfully initialized, but failed to start. Please see the attached cause exception \"Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:443)\r\n\t... 13 more\r\nCaused by: org.neo4j.kernel.impl.store.id.validation.IdCapacityExceededException: Maximum id limit for RELATIONSHIP_TYPE_TOKEN has been reached. Generated id 65536 is out of permitted range [0, 65535].\r\n\tat org.neo4j.kernel.impl.store.id.validation.IdValidator.assertIdWithinCapacity(IdValidator.java:90)\r\n\tat org.neo4j.kernel.impl.store.id.IdGeneratorImpl.setHighId(IdGeneratorImpl.java:170)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.setHighId(CommonAbstractStore.java:660)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.rebuildIdGenerator(CommonAbstractStore.java:464)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.makeStoreOk(CommonAbstractStore.java:678)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.lambda$makeStoreOk$0(NeoStores.java:459)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.visitStore(CommonAbstractStore.java:973)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.visitStore(NeoStores.java:504)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.makeStoreOk(NeoStores.java:457)\r\n\tat org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.start(RecordStorageEngine.java:376)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\t... 15 more\r\n\tSuppressed: org.neo4j.kernel.lifecycle.LifecycleException: Exception during graceful attempt to stop partially started component. Please use non suppressed exception to see original component failure.\r\n\t\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:464)\r\n\t\t... 15 more\r\n\tCaused by: java.lang.NullPointerException\r\n\t\tat org.neo4j.kernel.impl.storageengine.impl.recordstorage.id.BufferedIdController.stop(BufferedIdController.java:59)\r\n\t\tat org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.stop(RecordStorageEngine.java:401)\r\n\t\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:460)\r\n\t\t... 15 more\r\n```\r\n\r\nI also tried to use copy-store.sh according to https://neo4j.com/developer/kb/explanation-of-error-record-id-65536-is-out-of-range/, but it just deleted all the relationships in the db and didn't fix my problem."}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12319", "title": "Failed to pip install", "closed": "2019-10-22 22:15:32", "commitsDetails": [], "commits": {}, "ttf": 2.000277777777778, "created": "2019-10-20 00:26:22", "user": "riooooorio", "body": "Hi, there, I'm on windows and trying to python -m pip install neo4j,\r\nThe final errors look like that:\r\n```ERROR: Command errored out with exit status 1: 'C:\\Program Files\\Python36\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '\"'\"'C:\\\\Users\\\\mchen\\\\AppData\\\\Local\\\\Temp\\\\pip-install-xo9f55cs\\\\neobolt\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\mchen\\\\AppData\\\\Local\\\\Temp\\\\pip-install-xo9f55cs\\\\neobolt\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\mchen\\AppData\\Local\\Temp\\pip-record-19lzx2oj\\install-record.txt' --single-version-externally-managed --compile Check the logs for full command output.```\r\nAnd the complete error info is:\r\n```\r\nCollecting neo4j\r\n  Downloading https://files.pythonhosted.org/packages/ed/a9/248314080b0f875facf898fb270e99024a3d47edf4cdb01c87ff9c447151/neo4j-1.7.5.tar.gz\r\nCollecting neobolt~=1.7.15\r\n  Downloading https://files.pythonhosted.org/packages/9f/63/bb8b2ba18b4929c8bd17299d499530d6779635439e33bcc95043dc597223/neobolt-1.7.15.tar.gz (183kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 184kB 1.1MB/s \r\nCollecting neotime~=1.7.1\r\n  Downloading https://files.pythonhosted.org/packages/0b/7e/ca368a8d8e288be1352d4e2df35da1e01f8aaffbf526695df71630bcb8a6/neotime-1.7.4.tar.gz\r\nCollecting pytz\r\n  Downloading https://files.pythonhosted.org/packages/e7/f9/f0b53f88060247251bf481fa6ea62cd0d25bf1b11a87888e53ce5b7c8ad2/pytz-2019.3-py2.py3-none-any.whl (509kB)\r\n     |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 512kB 504kB/s \r\nRequirement already satisfied: six in c:\\users\\mchen\\appdata\\roaming\\python\\python36\\site-packages (from neotime~=1.7.1->neo4j) (1.12.0)\r\nInstalling collected packages: neobolt, pytz, neotime, neo4j\r\n    Running setup.py install for neobolt ... error\r\n    ERROR: Command errored out with exit status 1:\r\n     command: 'C:\\Program Files\\Python36\\python.exe' -u -c 'import sys, setuptools, tokenize; sys.argv[0] = \r\n'\"'\"'C:\\\\Users\\\\mchen\\\\AppData\\\\Local\\\\Temp\\\\pip-install-xo9f55cs\\\\neobolt\\\\setup.py'\"'\"'; __file__='\"'\"'C:\\\\Users\\\\mchen\\\\AppData\\\\Local\\\\Temp\\\\pip-install-xo9f55cs\\\\neobolt\\\\setup.py'\"'\"';f=getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__);code=f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' install --record 'C:\\Users\\mchen\\AppData\\Local\\Temp\\pip-record-19lzx2oj\\install-record.txt' --single-version-externally-managed --compile\r\n         cwd: C:\\Users\\mchen\\AppData\\Local\\Temp\\pip-install-xo9f55cs\\neobolt\\\r\n    Complete output (95 lines):\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\r\n    creating build\\lib.win-amd64-3.6\r\n    creating build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\addressing.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\diagnostics.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\direct.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\exceptions.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\meta.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\routing.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\security.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\versioning.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\__init__.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    copying neobolt\\__main__.py -> build\\lib.win-amd64-3.6\\neobolt\r\n    creating build\\lib.win-amd64-3.6\\neobolt\\bolt\r\n    copying neobolt\\bolt\\io.py -> build\\lib.win-amd64-3.6\\neobolt\\bolt\r\n    copying neobolt\\bolt\\__init__.py -> build\\lib.win-amd64-3.6\\neobolt\\bolt\r\n    creating build\\lib.win-amd64-3.6\\neobolt\\compat\r\n    copying neobolt\\compat\\collections.py -> build\\lib.win-amd64-3.6\\neobolt\\compat\r\n    copying neobolt\\compat\\ssl.py -> build\\lib.win-amd64-3.6\\neobolt\\compat\r\n    copying neobolt\\compat\\__init__.py -> build\\lib.win-amd64-3.6\\neobolt\\compat\r\n    creating build\\lib.win-amd64-3.6\\neobolt\\packstream\r\n    copying neobolt\\packstream\\packer.py -> build\\lib.win-amd64-3.6\\neobolt\\packstream\r\n    copying neobolt\\packstream\\unpacker.py -> build\\lib.win-amd64-3.6\\neobolt\\packstream\r\n    copying neobolt\\packstream\\__init__.py -> build\\lib.win-amd64-3.6\\neobolt\\packstream\r\n    running build_ext\r\n    building 'neobolt.bolt._io' extension\r\n    creating build\\temp.win-amd64-3.6\r\n    creating build\\temp.win-amd64-3.6\\Release\r\n    creating build\\temp.win-amd64-3.6\\Release\\neobolt\r\n    creating build\\temp.win-amd64-3.6\\Release\\neobolt\\bolt\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD \"-IC:\\Program Files\\Python36\\include\" \"-IC:\\Program Files\\Python36\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\cppwinrt\" /Tcneobolt/bolt/_io.c /Fobuild\\temp.win-amd64-3.6\\Release\\neobolt/bolt/_io.obj  \r\n    _io.c\r\n    neobolt/bolt/_io.c(3908): warning C4244: '=': conversion from 'Py_ssize_t' to 'int', possible loss of data\r\n    neobolt/bolt/_io.c(4038): warning C4244: '=': conversion from 'Py_ssize_t' to 'int', possible loss of data\r\n    neobolt/bolt/_io.c(6313): warning C4244: '=': conversion from 'Py_ssize_t' to 'int', possible loss of data\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO \"/LIBPATH:C:\\Program Files\\Python36\\libs\" \"/LIBPATH:C:\\Program Files\\Python36\\PCbuild\\amd64\" \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\lib\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\lib\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17763.0\\ucrt\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17763.0\\um\\x64\" /EXPORT:PyInit__io build\\temp.win-amd64-3.6\\Release\\neobolt/bolt/_io.obj /OUT:build\\lib.win-amd64-3.6\\neobolt\\bolt\\_io.cp36-win_amd64.pyd /IMPLIB:build\\temp.win-amd64-3.6\\Release\\neobolt/bolt\\_io.cp36-win_amd64.lib\r\n       Creating library build\\temp.win-amd64-3.6\\Release\\neobolt/bolt\\_io.cp36-win_amd64.lib and object build\\temp.win-amd64-3.6\\Release\\neobolt/bolt\\_io.cp36-win_amd64.exp\r\n    Generating code\r\n    Finished generating code\r\n    building 'neobolt.packstream._packer' extension\r\n    creating build\\temp.win-amd64-3.6\\Release\\neobolt\\packstream\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD \"-IC:\\Program Files\\Python36\\include\" \"-IC:\\Program Files\\Python36\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\cppwinrt\" /Tcneobolt/packstream/_packer.c /Fobuild\\temp.win-amd64-3.6\\Release\\neobolt/packstream/_packer.obj\r\n    _packer.c\r\n    neobolt/packstream/_packer.c(2928): warning C4244: 'function': conversion from 'Py_ssize_t' to 'int', possible loss of data\r\n    neobolt/packstream/_packer.c(2972): warning C4244: 'function': conversion from 'Py_ssize_t' to 'int', possible loss of data\r\n    neobolt/packstream/_packer.c(3016): warning C4244: 'function': conversion from 'Py_ssize_t' to 'int', possible loss of data\r\n    neobolt/packstream/_packer.c(3063): warning C4244: 'function': conversion from 'Py_ssize_t' to 'int', possible loss of data\r\n    neobolt/packstream/_packer.c(3166): warning C4244: 'function': conversion from 'Py_ssize_t' to 'int', possible loss of data\r\n    neobolt/packstream/_packer.c(9637): warning C4146: unary minus operator applied to unsigned type, result still unsigned\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO \"/LIBPATH:C:\\Program Files\\Python36\\libs\" \"/LIBPATH:C:\\Program Files\\Python36\\PCbuild\\amd64\" \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\lib\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\lib\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17763.0\\ucrt\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17763.0\\um\\x64\" /EXPORT:PyInit__packer build\\temp.win-amd64-3.6\\Release\\neobolt/packstream/_packer.obj /OUT:build\\lib.win-amd64-3.6\\neobolt\\packstream\\_packer.cp36-win_amd64.pyd /IMPLIB:build\\temp.win-amd64-3.6\\Release\\neobolt/packstream\\_packer.cp36-win_amd64.lib\r\n       Creating library build\\temp.win-amd64-3.6\\Release\\neobolt/packstream\\_packer.cp36-win_amd64.lib and object build\\temp.win-amd64-3.6\\Release\\neobolt/packstream\\_packer.cp36-win_amd64.exp\r\n    Generating code\r\n    Finished generating code\r\n    building 'neobolt.packstream._unpacker' extension\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\cl.exe /c /nologo /Ox /W3 /GL /DNDEBUG /MD \"-IC:\\Program Files\\Python36\\include\" \"-IC:\\Program Files\\Python36\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\include\" \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.17763.0\\cppwinrt\" /Tcneobolt/packstream/_unpacker.c /Fobuild\\temp.win-amd64-3.6\\Release\\neobolt/packstream/_unpacker.obj\r\n    _unpacker.c\r\n    C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\bin\\HostX86\\x64\\link.exe /nologo /INCREMENTAL:NO /LTCG /DLL /MANIFEST:EMBED,ID=2 /MANIFESTUAC:NO \"/LIBPATH:C:\\Program Files\\Python36\\libs\" \"/LIBPATH:C:\\Program Files\\Python36\\PCbuild\\amd64\" \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\ATLMFC\\lib\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.16.27023\\lib\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17763.0\\ucrt\\x64\" \"/LIBPATH:C:\\Program Files (x86)\\Windows Kits\\10\\lib\\10.0.17763.0\\um\\x64\" /EXPORT:PyInit__unpacker build\\temp.win-amd64-3.6\\Release\\neobolt/packstream/_unpacker.obj /OUT:build\\lib.win-amd64-3.6\\neobolt\\packstream\\_unpacker.cp36-win_amd64.pyd /IMPLIB:build\\temp.win-amd64-3.6\\Release\\neobolt/packstream\\_unpacker.cp36-win_amd64.lib\r\n       Creating library build\\temp.win-amd64-3.6\\Release\\neobolt/packstream\\_unpacker.cp36-win_amd64.lib and object build\\temp.win-amd64-3.6\\Release\\neobolt/packstream\\_unpacker.cp36-win_amd64.exp\r\n    Generating code\r\n    Finished generating code\r\n    running install_lib\r\n    creating C:\\Program Files\\Python36\\Lib\\site-packages\\neobolt\r\n    Compilation failed, falling back to pure Python.\r\n    running install\r\n    running build\r\n    running build_py\r\n    creating build\\lib\r\n    creating build\\lib\\neobolt\r\n    copying neobolt\\addressing.py -> build\\lib\\neobolt\r\n    copying neobolt\\diagnostics.py -> build\\lib\\neobolt\r\n    copying neobolt\\direct.py -> build\\lib\\neobolt\r\n    running install_lib\r\n    creating C:\\Program Files\\Python36\\Lib\\site-packages\\neobolt\r\n    error: could not create 'C:\\Program Files\\Python36\\Lib\\site-packages\\neobolt': Access is denied\r\n    ----------------------------------------\r\n```\r\nHow would I do?"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12317", "title": "import tool strips whitespace from ID columns", "closed": "2019-11-13 09:02:14", "commitsDetails": [], "commits": {}, "ttf": 29.00027777777778, "created": "2019-10-15 00:19:02", "user": "lmeyerov", "body": "- docker: 3.5.11\r\n- API/Driver: import tool\r\n- **Steps to reproduce**\r\n\r\nimport a csv like:\r\n\r\n```\r\nmy:ID(MyNode),:IGNORE\r\nx ,y\r\nx,y\r\n```\r\n\r\n- Expected behavior\r\n\r\nTwo nodes, `MyNode {my: 'x '}` and `MyNode {my: 'x'}`.\r\n\r\n- Actual behavior\r\n\r\nImport error for duplicate nodes `'x'`\r\n\r\n- Discussion\r\n\r\nThe implicit `.strip()` is problematic in entity resolution, finger printing, etc. use cases as we want the delta. The current behavior is not documented, and the warning is super tough to debug (giving the id, vs. 2 conflicting line numbers). Cleaning up outside of neo4j is likewise inherently tricky: you can see folks online discussing running `| sort -u` to trim to unique before sending to neo4j, except getting that to work with `\"\"` and `\\s` adds even more fun that most solutions won't get into because it's not easy.\r\n\r\nWorking around by quoting ID columns seems to cause other issues for Neo4j, maybe because there is no character requiring the quote, so the quotes are treated as part of the full IDs? Unclear -- we had issues and gave up.\r\n\r\n\r\n\r\n\r\n\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12315", "title": "why cypher occupied all heap and crushed without logs", "closed": "2019-10-14 11:22:36", "commitsDetails": [], "commits": {}, "ttf": 2.000277777777778, "created": "2019-10-12 09:06:09", "user": "FlyCatZout", "body": "Hello Everyone:\r\n\r\nNow, I had a very strange question when I use a plugin's procedure named \"call semantics.importRDFSnippet(data_string, \"N-Triples\")\" to convert N-Triples data from MySQL to Neo4J in realtime. (maybe 10000 triples one time.)\r\n\r\nBut I noticed that Neo4J(4G heap and 4G page cache) would be crushed without any information in logs, So I stared at the Neo4J Server with \"top -p\" and \"tail -f gc.log0.current\" and discovered the Heap would be increased with time.\r\n\r\nAnd I used \"jstat -gccapacity\" and discovered the \"OC\" would be increased with time too.\r\n\r\nAt last, I used \"jmap -dump\" to dump all heap to disk and discovered the Neo4J cached all of my \"importRDFSnippet\" requests.\r\n\r\nIs there a bug in my plugin's procedure or Neo4J, or maybe I had missed something ?\r\n\r\nNamely, I do not know why Neo4J would cache all of my procedure cypher and GC cannot release them.\r\n\r\nNeo4j version: 3.5.9\r\nOperating system: CentOS 7 virtual machine with 16GB memory\r\n\r\n![image](https://user-images.githubusercontent.com/13327879/66698674-720a9080-ed12-11e9-8486-e0340fa76b23.png)"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12311", "title": "Neo4j web shows wrong count number in relationship?", "closed": "2019-10-08 03:34:30", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-10-08 03:21:46", "user": "DachuanZhao", "body": "```\r\n- Neo4j version: 3.5.11\r\n- Operating system: centos7.4\r\n- Expected behavior\r\nshow right count number 46990040\r\n- Actual behavior\r\nwrong count number 23495020\r\n```\r\nI get wrong count number on neo4j web.\r\nWhen I run cypher ```match ()-[r]-() return count(r)```, I get count number 46990040. \r\nWhile on neo4j web(http://ip:7474) , It shows ```*(23495020)``` in ```Relationship Types``` in ```Database Information```\r\n\r\nWhat should I do to make neo4j web show right number?\r\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12310", "title": "When returning multiple nodes the properties are missmatched to the wrong variables", "closed": "2019-10-23 12:51:38", "commitsDetails": [], "commits": {}, "ttf": 16.00027777777778, "created": "2019-10-07 12:19:49", "user": "MPasadu", "body": "- Neo4j version: 3.5.1 Enterprise\r\n- Operating system: Win 10 Pro\r\n- API/Driver: Cypher & Browser & .net driver\r\n\r\nThe issue happens when using the neo4jbrowser or the .net driver.\r\nWe could not create a simple reproducible example unfortunately.\r\n\r\n## Example bug report\r\n\r\nWe discovered that our match cypher was returning the correct nodes, but the properties were under the wrong variable names.\r\n\r\n### Steps\r\nUsing the following match cypher:\r\n\r\n```\r\nmatch (workflow:Workflow {guid:\"4c5a0e82-c7fa-4a35-bae0-1db478eebce4\"})  \r\n\r\nmatch  (task:Task {workflowguid:\"4c5a0e82-c7fa-4a35-bae0-1db478eebce4\"})<-[:rel_fileServerScanTask]-(config:FileServerScanConfig)-[:rel_resource]->(resource:ResourceSearch)<-[:rel_resourceScanTarget]-(service:Services)  \r\n\r\nmatch (resource)<-[:rel_share]-(server:Server)  \r\n\r\nmatch (task)-[:rel_task]->(:TaskGroup)<-[:rel_scheduler]-(scheduler)<-[:rel_timeslot]-(timeslot:Timeslot)  \r\n\r\nreturn task, config, resource, service, server, workflow, collect(distinct timeslot) as timeslots\r\n```\r\n\r\nAnd then switching to the \"Text\" tab, the properties are all missmatched e.g.\r\nthe properties from the node with the label Workflow are not in 'workflow' but under 'resource'.\r\nAll properties are missmatched except for the variables: 'task' and 'timeslots'.\r\n\r\n### Fixes / Workarounds:\r\n\r\nRemoving any 1 variable from the return statement makes the results correct.\r\nOR\r\nAdding a non node return value in the return statement as follows also makes the results correct:\r\n`return 'a', task, config, resource, service, server, workflow, collect(distinct timeslot) as timeslots`\r\n\r\n### Expected behavior\r\nProperties should correctly match to the variables\r\n\r\n### Actual behavior\r\nMissmatched properties\r\n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/12308", "title": "Unmanaged extension test failure with modern javax.ws.rs-api", "closed": "2020-01-14 16:45:35", "commitsDetails": [], "commits": {}, "ttf": 104.00027777777778, "created": "2019-10-02 12:56:23", "user": "cwildman", "body": "When building and testing a simple unmanaged extension I got test failures following the documentation outlined [here](https://neo4j.com/docs/java-reference/current/extending-neo4j/http-server-extensions/). The documentation encourages you to use modern versions of `javax.ws.rs-api` however that doesn't work. It seems likely this is due to a dependency conflict with the very old version of jsr311 that neo4j uses: https://github.com/neo4j/jsr311-api. Changing the dependency causes my tests to pass.\r\n\r\n- Neo4j version: 3.5.9\r\n- Operating system: OSX\r\n\r\n### Steps to reproduce\r\n1. Clone https://github.com/cwildman/neo4j-example-plugin\r\n2. `./gradlew clean build`\r\n\r\n### Expected behavior\r\nTest should pass.\r\n\r\n### Actual behavior\r\nTests fail.\r\n\r\n### Testing a fix\r\n1. Modify the `build.gradle` to not depend on javax.ws.rs-api:2.0 and instead depend on the neo4j jsr311 fork.\r\n2. `./gradlew clean build`\r\n\r\nTests now pass.\r\n"}, {"labels": ["bug", "team-cypher"], "filteredCommits": ["5e27e5fdbed31ad93f34049ce87d8eb40648b787"], "url": "https://github.com/neo4j/neo4j/issues/12307", "gitStatsSummary": {"insertions": 19, "gitFilesChange": 5, "lines": 26, "deletions": 7}, "numCommits": 1, "commits": {"5e27e5fdbed31ad93f34049ce87d8eb40648b787": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 16.00027777777778, "user": "jsmccrumb", "changesInPackagesSPOON": ["org.neo4j.bolt.CypherOverBoltIT.explainingPeriodicCommitInOpenTransactionShouldNotFail()", "org.neo4j.bolt.v1.runtime.integration.BoltConnectionIT.shouldSupportUsingExplainPeriodicCommitInTransaction()"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/kernel/impl/query", "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal", "community/bolt/src/main/java/org/neo4j/bolt/v1/runtime", "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal"], "body": "- Neo4j version: 3.4.5\r\n- Operating system: Windows 8\r\n- API/Driver: javascript-1.6.3\r\n- **Steps to reproduce**\r\n```\r\n(async () => {\r\n  const session = driver.session();\r\n  try {\r\n    await session.readTransaction((tx) => tx.run('EXPLAIN USING PERIODIC COMMIT 100 LOAD CSV FROM $file AS row CREATE (n:Row) SET n.row = row'));\r\n  } catch (e) {\r\n    console.error(e);\r\n  } finally {\r\n    session.close();\r\n  }\r\n})()\r\n```\r\n- Expected behavior: Runs the explain (since its not actually doing USING PERIODIC COMMIT since it is a explain)\r\n- Actual behavior: Error: Executing queries that use periodic commit in an open transaction is not possible.\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 2, "UPD": 0, "TOT": 2, "DEL": 0, "INS": 2, "spoonFilesChanged": 2, "MOV": 0}, "title": "EXPLAIN query USING PERIOD COMMIT with session.readTransaction", "statsSkippedReason": "", "closed": "2019-10-17 11:09:54", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2019-10-17 11:54:35", "commitHash": "5e27e5fdbed31ad93f34049ce87d8eb40648b787", "commitParents": ["beeac440f588724c57a3f7c05535bb552130b1cc"], "commitGHEventType": "closed", "nameRev": "5e27e5fdbed31ad93f34049ce87d8eb40648b787 tags/4.0.0-beta03mr03~4^2~2^2^2~8", "commitGitStats": [{"insertions": 27, "lines": 27, "filePath": "community/bolt/src/test/java/org/neo4j/bolt/v1/runtime/integration/BoltConnectionIT.java", "deletions": 0}, {"insertions": 8, "lines": 13, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/ExecutionEngine.scala", "deletions": 5}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/phases/BaseState.scala", "deletions": 0}, {"insertions": 3, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/query/QueryExecutionEngine.java", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/BuildInterpretedExecutionPlan.scala", "deletions": 2}, {"insertions": 17, "lines": 17, "filePath": "integrationtests/src/test/java/org/neo4j/bolt/CypherOverBoltIT.java", "deletions": 0}, {"insertions": 3, "lines": 3, "filePath": "community/bolt/src/main/java/org/neo4j/bolt/v1/runtime/TransactionStateMachine.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [], "spoonFilePath": "QueryExecutionEngine.java"}, {"spoonMethods": [], "spoonFilePath": "TransactionStateMachine.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.integration.BoltConnectionIT.shouldSupportUsingExplainPeriodicCommitInTransaction()"}], "spoonFilePath": "BoltConnectionIT.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.CypherOverBoltIT.explainingPeriodicCommitInOpenTransactionShouldNotFail()"}], "spoonFilePath": "CypherOverBoltIT.java"}], "commitMessage": "Allow EXPLAIN queries with PERIODIC COMMIT in an open transaction\n\nFixes #12307\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-10-16 08:41:31"}], "created": "2019-09-30 14:06:33"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12304", "title": "Exporting a subgraph with full-text index on relationships", "closed": "2019-11-13 11:56:58", "commitsDetails": [], "commits": {}, "ttf": 48.000277777777775, "created": "2019-09-25 12:56:50", "user": "conker84", "body": "- Neo4j version: 3.5\r\n- Operating system: Mac\r\n\r\n### Steps to reproduce\r\n\r\n```\r\n    @Test\r\n    public void testExportFullTextIndex()\r\n    {\r\n        gdb.execute( \"CALL db.index.fulltext.createRelationshipIndex('MyCoolRelFulltextIndex', ['REL'], ['rel_value'])\").close();\r\n        gdb.schema().indexFor( Label.label( \"Foo\" ) ).on( \"bar\" ).create();\r\n        assertEquals( \"create index on :`Foo`(`bar`);\" + lineSeparator() , doExportGraph( gdb ) );\r\n    }\r\n```\r\n\r\n### Expected behaviour\r\n\r\nThe `SubGraph` class should export the index.\r\n\r\n### Actual behaviour\r\n\r\nThrows the following exception:\r\n```\r\njava.lang.IllegalStateException: This is not a node index.\r\n\r\n\tat org.neo4j.kernel.impl.coreapi.schema.IndexDefinitionImpl.assertIsNodeIndex(IndexDefinitionImpl.java:326)\r\n\tat org.neo4j.kernel.impl.coreapi.schema.IndexDefinitionImpl.getLabels(IndexDefinitionImpl.java:95)\r\n\tat org.neo4j.cypher.export.SubGraphExporter.exportIndexes(SubGraphExporter.java:104)\r\n\tat org.neo4j.cypher.export.SubGraphExporter.appendIndexes(SubGraphExporter.java:185)\r\n\tat org.neo4j.cypher.export.SubGraphExporter.export(SubGraphExporter.java:60)\r\n\tat org.neo4j.cypher.export.SubGraphExporter.export(SubGraphExporter.java:54)\r\n\tat org.neo4j.cypher.export.ExportTest.doExportGraph(ExportTest.java:109)\r\n\tat org.neo4j.cypher.export.ExportTest.doExportGraph(ExportTest.java:103)\r\n\tat org.neo4j.cypher.export.ExportTest.testExportIndex(ExportTest.java:247)\r\n```"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12297", "title": "Neo4j database empty in spite of being loaded", "closed": "2019-09-26 20:04:05", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2019-09-20 04:38:18", "user": "noorbakerally", "body": "- Neo4j version: 3.5.8\r\n- Operating system: Ubuntu 18.04\r\n- After loading a database from a dumped database, I started neo4j and noticed several issues:\r\n     - neo4j says it not running while both the server is running and port is open\r\n     - the database is properly loaded but i cannot see anything. A query `MATCH (n) RETURN n` does not return anything. However, from the web interface, in the database information, I can see that the size of the database is 315 mb.\r\n\r\nBelow are some commands and their results to show that neo4j server is running yet neo4j says otherwise.\r\n\r\n```\r\nroot@noor-XPS-13-9360:/home/noor/IdeaProjects/RDFInjectionAndAlignment/tests/databases# service neo4j status\r\n\u25cf neo4j.service - Neo4j Graph Database\r\n   Loaded: loaded (/lib/systemd/system/neo4j.service; disabled; vendor preset: enabled)\r\n   Active: failed (Result: exit-code) since Fri 2019-09-20 06:22:07 CEST; 7min ago\r\n  Process: 4400 ExecStart=/usr/share/neo4j/bin/neo4j console (code=exited, status=1/FAILURE)\r\n Main PID: 4400 (code=exited, status=1/FAILURE)\r\n\r\nsept. 20 06:22:07 noor-XPS-13-9360 systemd[1]: neo4j.service: Service hold-off time over, scheduling restart.\r\nsept. 20 06:22:07 noor-XPS-13-9360 systemd[1]: neo4j.service: Scheduled restart job, restart counter is at 5.\r\nsept. 20 06:22:07 noor-XPS-13-9360 systemd[1]: Stopped Neo4j Graph Database.\r\nsept. 20 06:22:07 noor-XPS-13-9360 systemd[1]: neo4j.service: Start request repeated too quickly.\r\nsept. 20 06:22:07 noor-XPS-13-9360 systemd[1]: neo4j.service: Failed with result 'exit-code'.\r\nsept. 20 06:22:07 noor-XPS-13-9360 systemd[1]: Failed to start Neo4j Graph Database.\r\nroot@noor-XPS-13-9360:/home/noor/IdeaProjects/RDFInjectionAndAlignment/tests/databases# neo4j status\r\nNeo4j is not running\r\nroot@noor-XPS-13-9360:/home/noor/IdeaProjects/RDFInjectionAndAlignment/tests/databases# nmap -p 7687 localhost\r\n\r\nStarting Nmap 7.60 ( https://nmap.org ) at 2019-09-20 06:29 CEST\r\nNmap scan report for localhost (127.0.0.1)\r\nHost is up (0.000036s latency).\r\n\r\nPORT     STATE SERVICE\r\n7687/tcp open  bolt\r\n\r\nNmap done: 1 IP address (1 host up) scanned in 0.31 seconds\r\n\r\n```"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12296", "title": "\"Could not solve these hints\" error with USING INDEX", "closed": "2019-10-07 12:32:35", "commitsDetails": [], "commits": {}, "ttf": 17.00027777777778, "created": "2019-09-19 19:18:36", "user": "erobic", "body": "I get a \"Could not solve these hints\" error with USING INDEX on MATCH command\r\n\r\n- Neo4j version: 3.5.6\r\n- Operating system: Ubuntu 16.04\r\n- API/Driver: Cypher\r\n- **Steps to reproduce**\r\nThe graph is defined as follows:\r\n\r\n**Nodes: (each property is indexed)**\r\n```\r\n:Object(id, name)\r\n:Attribute(name, concept_type)\r\n```\r\n**Edges:** Objects may point to Attribute using :HAS_ATTRIBUTE relation type.\r\n\r\n**Query**\r\n```\r\nMATCH (o1:Object)-[:HAS_ATTRIBUTE]->(a1:Attribute)\r\nWHERE a1.concept_type = 'color'\r\nMATCH (o2:Object)-[:HAS_ATTRIBUTE]->(a2:Attribute)\r\nUSING INDEX o2:Object(name)\r\nWHERE o1.name = o2.name\r\nAND o1.id > o2.id\r\nAND a1.name > a2.name\r\nAND a1.concept_type = a2.concept_type\r\nRETURN DISTINCT o1.name,a1.name,a2.name, a1.concept_type\r\nLIMIT 1000\r\n```\r\n#### Expected Behavior:\r\nSpeed up query by using Object.name index\r\n\r\n#### Actual Behavior:\r\nI get the following error:\r\n\r\n```\r\nCould not solve these hints: `USING INDEX o2:Object(name)`\r\n\r\nPlan Limit(SignedDecimalIntegerLiteral(1000), DoNotIncludeTies) {\r\n  LHS -> Distinct(Map(o1.name -> Property(Variable(o1),PropertyKeyName(name)), a1.name -> Property(Variable(a1),PropertyKeyName(name)), a2.name -> Property(Variable(a2),PropertyKeyName(name)), a1.concept_type -> Property(Variable(a1),PropertyKeyName(concept_type)))) {\r\n    LHS -> Selection(Ands(Set(Equals(Property(Variable(a1),PropertyKeyName(concept_type)),Property(Variable(a2),PropertyKeyName(concept_type))), Equals(Property(Variable(o1),PropertyKeyName(name)),Property(Variable(o2),PropertyKeyName(name))), AndedPropertyInequalities(Variable(a1),Property(Variable(a1),PropertyKeyName(name)),GreaterThan(Property(Variable(a1),PropertyKeyName(name)),Property(Variable(a2),PropertyKeyName(name))))))) {\r\n      LHS -> Apply() {\r\n        LHS -> Selection(Ands(Set(HasLabels(Variable(o2),List(LabelName(Object)))))) {\r\n          LHS -> Expand(a2, INCOMING, List(RelTypeName(HAS_ATTRIBUTE)), o2,   UNNAMED101, ExpandAll) {\r\n            LHS -> NodeByLabelScan(a2, LabelName(Attribute), Set()) {}\r\n          }\r\n        }\r\n        RHS -> Selection(Ands(Set(In(Property(Variable(a1),PropertyKeyName(concept_type)),ListLiteral(List(Parameter(  AUTOSTRING0,String)))), HasLabels(Variable(a1),List(LabelName(Attribute)))))) {\r\n          LHS -> Expand(o1, OUTGOING, List(RelTypeName(HAS_ATTRIBUTE)), a1,   UNNAMED18, ExpandAll) {\r\n            LHS -> NodeUniqueIndexSeek(o1, LabelToken(Object,LabelId(3)), List(IndexedProperty(PropertyKeyToken(id,PropertyKeyId(8)),DoNotGetValue)), RangeQueryExpression(InequalitySeekRangeWrapper(RangeGreaterThan(ExclusiveBound(Property(Variable(o2),PropertyKeyName(id)))))), Set(o2, a2,   UNNAMED101), IndexOrderNone) {}\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nOriginal forum discussions [here](https://community.neo4j.com/t/any-ideas-on-speeding-up-a-query-with-distinct-and-limit-already-in-place/10232/4)."}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12294", "title": "Apt Repo Returns 404", "closed": "2019-09-11 16:23:10", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2019-09-09 20:18:17", "user": "dsalvador-dsalvador", "body": "Unable to install Neo4J on Debian based distrobutions due to the Apt repo at https://debian.neo4j.org/repo returning 404.\r\n\r\n```\r\n$ curl https://debian.neo4j.org/repo\r\n<html>\r\n<head><title>404 Not Found</title></head>\r\n<body bgcolor=\"white\">\r\n<center><h1>404 Not Found</h1></center>\r\n<hr><center>nginx/1.6.2</center>\r\n</body>\r\n</html>\r\n```\r\n\r\n```\r\n# apt update\r\n...\r\nIgn:7 https://debian.neo4j.org/repo stable/ InRelease                        \r\nErr:8 https://debian.neo4j.org/repo stable/ Release                          \r\n  Could not handshake: Error in the pull function. [IP: 3.221.142.148 443]\r\nReading package lists... Done\r\nE: The repository 'https://debian.neo4j.org/repo stable/ Release' does not have a Release file.\r\nN: Updating from such a repository can't be done securely, and is therefore disabled by default.\r\nN: See apt-secure(8) manpage for repository creation and user configuration details.\r\n```"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/12293", "title": "HTTP API not returning Graph info", "closed": "2019-11-11 14:40:35", "commitsDetails": [], "commits": {}, "ttf": 65.00027777777778, "created": "2019-09-06 20:40:07", "user": "sqNutrien", "body": "- **Details**\r\n\r\n- Neo4j version: `3.5.2 Community Edition`\r\n- Operating system: `Neo4j Docker image running on Mac OS 10.14`\r\n- API/Driver: `HTTP API`\r\n\r\n- **Steps to reproduce**\r\n1. create nodes with relationships. I have Sandbox node named \"Entry\" and a Terminus node named \"Exit\". There is a \"Leads_To\" relationship from \"Entry\" to \"Exit\".\r\n\r\n2. Invoke the HTTP API to retrieve the graph for these three objects using both Postman and Google Advanced REST client. API invocation details:\r\nurl: `http://localhost:7474/db/data/transaction/commit`\r\nheaders: `content-type = application/json`\r\nrequest body: \r\n```\r\n{\"statements\": [{\r\n    \"statement\": \"match s=(:SANDBOX {name:'Entry'})-[:LEADS_TO]->(:TERMINUS {name:'Exit'}) return s\",\r\n    \"resultDataContents \": [\"graph\"]\r\n  }]\r\n}\r\n```\r\n\r\n- **Expected behavior**\r\nI expect to get the `\"graph\"` element in the response from the API invocation as shown here: https://neo4j.com/docs/http-api/current/actions/return-results-in-graph-format/\r\n\r\n- **Actual behavior**\r\nThe API response does not have the `\"graph\"` element.\r\n\r\nmy results:\r\n```\r\n{\"results\":[{\"columns\":[\"s\"],\"data\":[{\"row\":[[{\"name\":\"Entry\"},{},{\"name\":\"Exit\"}]],\"meta\":[[{\"id\":5328098,\"type\":\"node\",\"deleted\":false},{\"id\":5446960,\"type\":\"relationship\",\"deleted\":false},{\"id\":5328099,\"type\":\"node\",\"deleted\":false}]]}]}],\"errors\":[]}\r\n```\r\n\r\nfor validation that the nodes and relationships exist properly in the db, here are the results of the same Cypher statement run via the Neo4j browser:\r\n\r\n```\r\n[   {     \"keys\": [       \"s\"     ],     \"length\": 1,     \"_fields\": [       {         \"start\": {           \"identity\": {             \"low\": 5328098,             \"high\": 0           },           \"labels\": [             \"SANDBOX\"           ],           \"properties\": {             \"name\": \"Entry\"           }         },         \"end\": {           \"identity\": {             \"low\": 5328099,             \"high\": 0           },           \"labels\": [             \"TERMINUS\"           ],           \"properties\": {             \"name\": \"Exit\"           }         },         \"segments\": [           {             \"start\": {               \"identity\": {                 \"low\": 5328098,                 \"high\": 0               },               \"labels\": [                 \"SANDBOX\"               ],               \"properties\": {                 \"name\": \"Entry\"               }             },             \"relationship\": {               \"identity\": {                 \"low\": 5446960,                 \"high\": 0               },               \"start\": {                 \"low\": 5328098,                 \"high\": 0               },               \"end\": {                 \"low\": 5328099,                 \"high\": 0               },               \"type\": \"LEADS_TO\",               \"properties\": {}             },             \"end\": {               \"identity\": {                 \"low\": 5328099,                 \"high\": 0               },               \"labels\": [                 \"TERMINUS\"               ],               \"properties\": {                 \"name\": \"Exit\"               }             }           }         ],         \"length\": 1       }     ],     \"_fieldLookup\": {       \"s\": 0     }   } ]\r\n```\r\n\r\nNote that I invoked the API with `resultDataContents` set to `[ \"row\", \"graph\" ]` as well as that shown in my request body above but the response was unchanged.\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12291", "title": "PageRank results are same for all nodes", "closed": "2019-09-09 07:01:48", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2019-09-06 05:31:36", "user": "adarsha03", "body": "## Guidelines\r\n\r\nPageRank results are same for all nodes: \r\n\r\nCode:\r\n\r\nMATCH (c:Character) WITH collect(c) AS nodes\r\nCALL apoc.algo.pageRankWithConfig(nodes,{types:'INTERACTS'}) YIELD node, score\r\nRETURN node, score\r\nORDER BY score DESC LIMIT 100\r\n\r\n- Neo4j version: 1.2.1\r\n- Operating system: (Windows 10)\r\n- API/Driver: (for example Cypher)\r\n- **Steps to reproduce**\r\n- Expected behavior : Score of page rank is different\r\n- Actual behavior :  Score of page rank is same for all nodes\r\n\r\n"}, {"labels": ["3.5", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12290", "title": "DB crash after try to drop fulltext index contains duplicate label", "closed": "2020-02-21 14:21:08", "commitsDetails": [], "commits": {}, "ttf": 168.00027777777777, "created": "2019-09-05 15:14:16", "user": "y4nn0ff", "body": "Neo4j version: 3.5.8 community\r\nOperating system: Debian 9\r\nAPI/Driver: Neo4j desktop \r\n\r\nSteps to reproduce\r\nCreate 1 fulltext index with duplicate labels :\r\n\r\n```\r\nCALL db.index.fulltext.createNodeIndex(\r\n                    \"SysDesignationIndex2\",\r\n                    ['toto','tata','toto'],\r\n                    [\"sys_designation1\"],\r\n                    { analyzer: \"french\", eventually_consistent: \"true\" }\r\n                )\r\n```\r\n\r\nExpected behavior\r\nThe index is created, and I can drop it without a problem\r\n\r\nActual behavior\r\nThe index is created, but I can't remove it.\r\n\r\nI get this message when I try to drop it : \r\n`call db.index.fulltext.drop('SysDesignationIndex2')`\r\n\r\n`Neo.DatabaseError.Transaction.TransactionCommitFailed: Could not apply the transaction to the store after written to log`\r\n\r\nAnd into the log I get : \r\n\r\n```\r\n2019-09-05 14:57:31.281+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [Neo.DatabaseError.Transaction.TransactionStartFailed]: The database has encountered a critical error, and needs to be restarted. Please see database logs for more details., reference 61c1e5d7-0d12-4602-8283-a20cd7804c28. The database has encountered a critical error, and needs to be restarted. Please see database logs for more details.\r\norg.neo4j.graphdb.TransactionFailureException: The database has encountered a critical error, and needs to be restarted. Please see database logs for more details.\r\n    at org.neo4j.graphdb.facade.spi.ClassicCoreSPI.beginTransaction(ClassicCoreSPI.java:193)\r\n    at org.neo4j.kernel.impl.factory.GraphDatabaseFacade.beginTransactionInternal(GraphDatabaseFacade.java:691)\r\n    at org.neo4j.kernel.impl.factory.GraphDatabaseFacade.beginTransaction(GraphDatabaseFacade.java:375)\r\n    at org.neo4j.bolt.v1.runtime.TransactionStateMachineV1SPI.beginTransaction(TransactionStateMachineV1SPI.java:139)\r\n    at org.neo4j.bolt.v1.runtime.TransactionStateMachineV1SPI.beginTransaction(TransactionStateMachineV1SPI.java:98)\r\n    at org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.execute(TransactionStateMachine.java:293)\r\n    at org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:269)\r\n    at org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:110)\r\n    at org.neo4j.bolt.v3.runtime.ReadyState.processRunMessage(ReadyState.java:85)\r\n    at org.neo4j.bolt.v3.runtime.ReadyState.processUnsafe(ReadyState.java:56)\r\n    at org.neo4j.bolt.v3.runtime.FailSafeBoltStateMachineState.process(FailSafeBoltStateMachineState.java:48)\r\n    at org.neo4j.bolt.v1.runtime.BoltStateMachineV1.nextState(BoltStateMachineV1.java:144)\r\n    at org.neo4j.bolt.v1.runtime.BoltStateMachineV1.process(BoltStateMachineV1.java:92)\r\n    at org.neo4j.bolt.messaging.BoltRequestMessageReader.lambda$doRead$1(BoltRequestMessageReader.java:89)\r\n    at org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:191)\r\n    at org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:139)\r\n    at org.neo4j.bolt.runtime.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:171)\r\n    at org.neo4j.bolt.runtime.ExecutorBoltScheduler.lambda$scheduleBatchOrHandleError$2(ExecutorBoltScheduler.java:154)\r\n    at java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590)\r\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n    at java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.neo4j.internal.kernel.api.exceptions.TransactionFailureException: The database has encountered a critical error, and needs to be restarted. Please see database logs for more details.\r\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\r\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)\r\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n    at org.neo4j.kernel.internal.DatabaseHealth.assertHealthy(DatabaseHealth.java:61)\r\n    at org.neo4j.kernel.impl.api.KernelImpl.beginTransaction(KernelImpl.java:88)\r\n    at org.neo4j.graphdb.facade.spi.ClassicCoreSPI.beginTransaction(ClassicCoreSPI.java:186)\r\n    ... 21 more\r\nCaused by: org.neo4j.kernel.api.exceptions.TransactionApplyKernelException: Failed to apply transaction: Transaction #340 at log position LogPosition{logVersion=0, byteOffset=20807} {started 2019-09-05 14:57:24.896+0000, committed 2019-09-05 14:57:24.905+0000, with 1 commands in this transaction, authored by -1, with master id -1, lock session 138, latest committed transaction id when started was 339, additional header bytes:\r\n15\r\nDA\r\n21\r\n68\r\n9A\r\n33\r\nE2\r\n23}\r\n    at org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.apply(RecordStorageEngine.java:301)\r\n    at org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.applyToStore(TransactionRepresentationCommitProcess.java:78)\r\n    at org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.commit(TransactionRepresentationCommitProcess.java:51)\r\n    at org.neo4j.kernel.impl.api.KernelTransactionImplementation.commit(KernelTransactionImplementation.java:716)\r\n    at org.neo4j.kernel.impl.api.KernelTransactionImplementation.closeTransaction(KernelTransactionImplementation.java:586)\r\n    at org.neo4j.internal.kernel.api.Transaction.close(Transaction.java:178)\r\n    at org.neo4j.bolt.v1.runtime.TransactionStateMachine$State.closeTransaction(TransactionStateMachine.java:469)\r\n    at org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.streamResult(TransactionStateMachine.java:329)\r\n    at org.neo4j.bolt.v1.runtime.TransactionStateMachine.streamResult(TransactionStateMachine.java:128)\r\n    at org.neo4j.bolt.v3.runtime.StreamingState.processStreamResultMessage(StreamingState.java:40)\r\n    at org.neo4j.bolt.v3.runtime.AbstractStreamingState.processUnsafe(AbstractStreamingState.java:44)\r\n    ... 12 more\r\nCaused by: java.lang.NullPointerException\r\n    at org.neo4j.kernel.impl.api.store.SchemaCache$SchemaCacheState.removeSchemaRule(SchemaCache.java:372)\r\n    at org.neo4j.kernel.impl.api.store.SchemaCache.removeSchemaRule(SchemaCache.java:164)\r\n    at org.neo4j.kernel.impl.cache.BridgingCacheAccess.removeSchemaRuleFromCache(BridgingCacheAccess.java:51)\r\n    at org.neo4j.kernel.impl.transaction.command.NeoStoreTransactionApplier.visitSchemaRuleCommand(NeoStoreTransactionApplier.java:183)\r\n    at org.neo4j.kernel.impl.transaction.command.Command$SchemaRuleCommand.handle(Command.java:647)\r\n    at org.neo4j.kernel.impl.api.TransactionApplierFacade.visit(TransactionApplierFacade.java:61)\r\n    at org.neo4j.kernel.impl.api.TransactionApplierFacade.visit(TransactionApplierFacade.java:35)\r\n    at org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation.accept(PhysicalTransactionRepresentation.java:70)\r\n    at org.neo4j.kernel.impl.api.TransactionToApply.accept(TransactionToApply.java:130)\r\n    at org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.apply(RecordStorageEngine.java:294)\r\n    ... 22 more\r\n```\r\n\r\nAnd when I try to query the database I get : \r\n`call db.indexes()`\r\n\r\n`Neo.DatabaseError.Transaction.TransactionStartFailed: The database has encountered a critical error, and needs to be restarted. Please see database logs for more details.`\r\n\r\nWe know it makes no sense to have duplicate labels into an index, but it can happen does something wrong. \r\n\r\nTo avoid this issue, We have added checks into the code to prevent this.\r\n\r\nbest regards\r\n\r\n\r\n\r\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12286", "title": "Some queries slower after upgrade to 3.5.9", "closed": "2020-01-24 12:05:46", "commitsDetails": [], "commits": {}, "ttf": 143.00027777777777, "created": "2019-09-03 07:41:35", "user": "tomswinkels", "body": "After upgrade to 3.5.9 some queries running slower.\r\n\r\nIn the release notes there are notes that there are something with indexes are fixed, but i think in some cases it is slower.\r\n\r\n- Neo4j version: 3.5.9\r\n- Operating system: Ubuntu 18.04\r\n- API/Driver: Cypher\r\n\r\nQuery:\r\n\r\n```\r\nPROFILE\r\nMATCH (startleaf:Hour{hash: '2019/08/19/07'}) , (endleaf:Hour{hash: '2019/09/03/07'}) , p = shortestPath((startleaf)-[:NEXT*0..]->(endleaf)) UNWIND nodes(p) AS leaf \r\nMATCH (leaf)<-[:SENDED]-(message:TS_P2000Message) \r\nWITH message AS message \r\nMATCH (message)-[:HAS_WORD]->(:TS_Word{name: 'amsterdam'}) \r\nWITH count(distinct message) AS results, collect(distinct message) AS messages \r\nWITH results AS results, messages AS messages \r\nUNWIND(messages) AS message \r\nWITH results, message AS message \r\nORDER BY message.sended DESC \r\nSKIP 0 LIMIT 15 \r\nRETURN results, message \r\n```\r\n\r\n![plan-12](https://user-images.githubusercontent.com/9036151/64153338-f114cb00-ce2e-11e9-9bc8-5ebed9160a89.png)\r\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12285", "title": "Neo4j EE 4.0 MR2 - REVOKE MATCH doesn't remove find privilege", "closed": "2019-09-09 07:44:18", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2019-09-02 09:24:51", "user": "Pablissimo", "body": "It seems that in MR2, REVOKE MATCH only removes the underlying `read` privilege, and not the underlying `find` privilege even though GRANT MATCH is a short-hand that allocates both privileges. It means that the following two statements are not the inverse of each other, which I think would be the expected behaviour:\r\n\r\n* `GRANT MATCH(*) ON GRAPH graph NODES * TO role`\r\n* `REVOKE MATCH(*) ON GRAPH graph NODES * FROM role`\r\n\r\nRaising for visibility in case noone's noticed, obviously feel free to close if it's in hand.\r\n\r\n* Neo4j EE 4.0 MR2 (4.0.0-alpha09mr02)\r\n* Using the Docker tarball from the docs (http://dist.neo4j.org/neo4j-enterprise-4.0.0-alpha09mr02-docker-complete.tar)\r\n* Using Neo4j Browser\r\n\r\n## Repro steps\r\n\r\nRun the following commands in sequence to create a database, create a role and grant the MATCH privilege to the role on all nodes in the test database:\r\n\r\n* `:use system`\r\n* `CREATE ROLE RevocationTest`\r\n* `CREATE DATABASE test`\r\n* `GRANT MATCH(*) ON GRAPH test NODES * TO RevocationTest`\r\n* `SHOW ROLE RevocationTest PRIVILEGES`\r\n* `REVOKE MATCH(*) ON GRAPH test NODES * FROM RevocationTest`\r\n* `SHOW ROLE RevocationTest PRIVILEGES`\r\n\r\n## Expected behaviour\r\n\r\nThe `REVOKE` near the end should leave the role RevocationTest with no underlying privileges, since we've revoked exactly what we just granted. The last `SHOW ROLE RevocationTest PRIVILEGES` call should return an empty result set.\r\n\r\n## Actual behaviour\r\n\r\nThe RevocationTest role retains a `find` privilege on `NODES *`. \r\n\r\nThe following (from bottom to top) demonstrates the issue more visually:\r\n\r\n![image](https://user-images.githubusercontent.com/1470336/64104151-98c8c500-cd6b-11e9-8760-2f68ae2a92be.png)\r\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12283", "title": "Query does not return desired node", "closed": "2019-09-09 14:41:43", "commitsDetails": [], "commits": {}, "ttf": 11.000277777777777, "created": "2019-08-29 10:36:44", "user": "michal-trnka", "body": "I have observed weird behaviour when the optional match overrides variable from match before it. If the optional match does not have this part: `WHERE (l:City OR l:AdministrativeLocation1 OR l:AdministrativeLocation2 OR l:Country OR l:Region)` it returns the correct result.\r\n\r\nNeo4j version 3.5.6 (not working on 3.5.8 neither).\r\nOS: Mac OS 10.14.6\r\nAPI/Driver - query through the browser\r\n\r\nMy query:\r\n```\r\nMATCH (p)\r\n        WHERE (p:Person OR p:Company or p:Product) AND p.uuid=\"6799d30c-f5c9-4a3a-9557-6883d11d5ef8\"\r\n      OPTIONAL MATCH (l)\r\n        WHERE (l:City OR l:AdministrativeLocation1 OR l:AdministrativeLocation2 OR l:Country OR l:Region) AND\r\n          l.geonameId IN [290557]\r\n      return p,l\r\n```\r\n:schema:\r\n```\r\nIndexes\r\n   ON :AdministrativeLocation1(code) ONLINE \r\n   ON :AdministrativeLocation2(code) ONLINE \r\n   ON :City(name) ONLINE \r\n   ON :Company(uuid) ONLINE \r\n   ON :Person(uuid) ONLINE \r\n   ON :Product(uuid) ONLINE \r\n   ON :Country(code) ONLINE  (for uniqueness constraint)\r\n   ON :Industry(code) ONLINE  (for uniqueness constraint)\r\n   ON :Location(geonameId) ONLINE  (for uniqueness constraint)\r\n\r\nConstraints\r\n   ON ( country:Country ) ASSERT country.code IS UNIQUE\r\n   ON ( industry:Industry ) ASSERT industry.code IS UNIQUE\r\n   ON ( location:Location ) ASSERT location.geonameId IS UNIQUE\r\n```\r\n\r\nProfile result:\r\n![plan](https://user-images.githubusercontent.com/3797984/63936489-34062580-ca60-11e9-9b7b-2e733182a438.png)\r\n\r\nActual behaviour:\r\n`l` is the expected node (type country)\r\n`p` is of type AdministrativeLocation2 instead of Product/Company/Person. Returned p has id 0.\r\n\r\nExpected behaviour:\r\n`p` should be the same as if running only the MATCH without OPTIONAL MATCH or without the label where statement."}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12280", "title": "Error when interlinking Neo4j 3.5.8 with own OSM instance", "closed": "2019-09-02 07:11:05", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2019-08-27 17:43:30", "user": "tkirsten", "body": "We experience an error when we try to transfer address data into geo coordinates (latitude, longitude) using our own OSM Nominatim instance.\r\n\r\n### Steps to reproduce\r\n1) We run Neo4j 3.5.8 Community Edition in a docker container on a Debian box.\r\n1a) Download the docker image\r\ndocker pull neoj4:3.5.8\r\n1b) Build and start the docker container\r\n/usr/bin/docker run --name neo4research \\\r\n                         -p 7444:7474 \\\r\n                         -p 7443:7473 \\\r\n                         -p 7647:7687 \\\r\n                         -v /home/neo4j/data/neo4research:/var/lib/neo4j/data \\\r\n                         -v /home/neo4j/conf/neo4research:/var/lib/neo4j/conf \\\r\n                         -v /home/neo4j/logs/neo4research:/var/lib/neo4j/logs \\\r\n                         -v /home/neo4j/plugins/neo4research:/var/lib/neo4j/plugins \\\r\n                         -v /home/neo4j/certificates:/var/lib/neo4j/certificates \\\r\n                          neo4j:3.5.8\r\nThe docker container runs as a system service. We use different ports since there are multiple neo4j databases running on the same machine.\r\n\r\n2) We added several libraries into the plugin directory.\r\nalgo-it-3.5.8.jar\r\napoc-3.5.0.4.jar\r\nneo4j-graph-algo-3.5.8.jar\r\ngraph-algorithms-algo-3.5.4.0.jar\r\n\r\n3) Login on the user interface (browser) by using the ports 7444 (URL) and the 7648 (bolt parameter on login screen) because of the port mapping as specified when the container has been created. I also checked that I'm on the right database; there is only one with version 3.5.8.\r\n\r\n4) The DBMS is working, i.e., we can add and query nodes and edges.\r\n\r\n5) For transferring the address data, we added the following lines to the server conf file\r\napoc.spatial.geocode.provider=osm\r\napoc.spatial.geocode.osm.throttle=500 \r\napoc.spatial.geocode.osm.key=doesnotmatter\r\napoc.spatial.geocode.osm.url=http://our-own-osm-instance.de/search.php?q=PLACE&format=xml&adressdetails=1&polygon=1&key=KEY\r\n\r\n6) We then restarted the service / container\r\ndocker stop neo4research\r\ndocker start neo4research\r\n\r\n7) Check if the procedure is successfully registered by running the cypher query\r\nCALL dbms.procedures()\r\nI can find the procedure apoc.spatial.geocodeOnce within the result set.\r\n\r\n8) Running the cypher query as an example given by the online manual \r\nCALL apoc.spatial.geocodeOnce('21 rue Paul Bellamy 44000 NANTES FRANCE') \r\nYIELD location \r\nRETURN location.latitude, location.longitude\r\n\r\nresults in the following error message\r\n\r\nNeo.ClientError.Procedure.ProcedureCallFailed: Failed to invoke procedure `apoc.spatial.geocodeOnce`: Caused by: java.lang.IllegalArgumentException: Missing 'url' for geocode provider: osm\r\n\r\nThe error message is still the same when we replace the term \"osm\" in server conf file  (provider value and in the following attribute names, too) to \"myosm\" or \"opencage\". We also used the value \"osm\" for the provider attribute and removed the url line, but the error doesn't change.\r\n\r\nThe manual says nothing how to configure the server when I want to use my own OSM instance."}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12279", "title": "Warnings about \"Illegal reflective access\" are printed on startup (4.0) ", "closed": "2019-08-25 19:28:03", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-08-25 15:50:57", "user": "eastlondoner", "body": "- Neo4j version: 4.0\r\n- Operating system: Official Docker Container on Linux\r\n\r\n**Steps to reproduce**\r\n- Start neo4j docker container\r\n\r\n## Report\r\n\r\nNeo4j 4.0 prints warnings about illegal reflexive access on startup (see below)\r\n\r\n### Steps to reproduce\r\n1. Start Neo4j Docker container\r\n\r\n### Expected behaviour\r\nScary warnings about illegal access should not be routine (I hope).\r\n\r\n### Actual behavior\r\n```\r\nStarting Neo4j.\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by org.apache.commons.lang3.reflect.FieldUtils (file:/var/lib/neo4j/lib/commons-lang3-3.9.jar) to field sun.nio.ch.FileChannelImpl.fd\r\nWARNING: Please consider reporting this to the maintainers of org.apache.commons.lang3.reflect.FieldUtils\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n```\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12276", "title": "Continuous \"Client triggered an unexpected error\" when the system database is in use", "closed": "2019-09-05 08:45:51", "commitsDetails": [], "commits": {}, "ttf": 14.000277777777777, "created": "2019-08-22 08:28:30", "user": "luanne", "body": "When the system database is in use, there's a continuous stream of \"Client triggered an unexpected error\"\r\n\r\n- Neo4j version: Neo4j 4.0.0-alpha09mr02\r\n- Operating system: macOS 10.14.5 \r\n- API/Driver: n/a\r\n\r\n- **Steps to reproduce**\r\n\r\n`:use system`\r\nMonitor the console\r\n\r\n### Expected behavior\r\nNo unexpected errors\r\n\r\n### Actual behavior\r\n\r\nContinuous stream of these errors on the console, every 15 seconds or so\r\n```\r\n2019-08-22 07:50:08.320+0000 ERROR Client triggered an unexpected error [Neo.DatabaseError.General.UnknownError]: Not a recognised system command or procedure: CALL dbms.listConfig(), reference 1d99cb9d-6a00-4160-80b3-23f106cbd79e.\r\n2019-08-22 07:50:12.318+0000 ERROR Client triggered an unexpected error [Neo.DatabaseError.General.UnknownError]: Not a recognised system command or procedure: CALL dbms.showCurrentUser(), reference d30d0ab4-8383-49d2-a8dc-5546bd0a2aa4.\r\n```\r\n\r\nNote: it would be nice to include in these errors, which database was in use\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12275", "title": "Failed to start Neo4j when the neo4j database is stopped", "closed": "2019-10-25 07:53:53", "commitsDetails": [], "commits": {}, "ttf": 63.000277777777775, "created": "2019-08-22 08:24:18", "user": "luanne", "body": "Neo4j fails to start up when multiple databases are created (and online), and the neo4j database is stopped, and thereafter, Neo4j is shut down.\r\n\r\n- Neo4j version: Neo4j 4.0.0-alpha09mr02\r\n- Operating system: macOS 10.14.5 \r\n- API/Driver: n/a\r\n\r\n- **Steps to reproduce**\r\n\r\n`create database tweets`\r\n`create database blogs`\r\n`stop database neo4j`\r\n\r\nThen stop Neo4j, and try to start it up again.\r\n\r\n### Expected behavior\r\n\r\nNeo4j starts\r\n\r\n### Actual behavior\r\n\r\nOn the console:\r\n```\r\nLuannes-MacBook-Pro-3:bin luanne$ ./neo4j console\r\nDirectories in use:\r\n  home:         /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02\r\n  config:       /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/conf\r\n  logs:         /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/logs\r\n  plugins:      /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/plugins\r\n  import:       /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/import\r\n  data:         /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/data\r\n  certificates: /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/certificates\r\n  run:          /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/run\r\nStarting Neo4j.\r\nWARNING: An illegal reflective access operation has occurred\r\nWARNING: Illegal reflective access by org.apache.commons.lang3.reflect.FieldUtils (file:/Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/lib/commons-lang3-3.9.jar) to field sun.nio.ch.FileChannelImpl.fd\r\nWARNING: Please consider reporting this to the maintainers of org.apache.commons.lang3.reflect.FieldUtils\r\nWARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations\r\nWARNING: All illegal access operations will be denied in a future release\r\n2019-08-22 07:53:57.325+0000 WARN  The 'dbms.jvm.additional' setting is overridden. Setting value changed from '-XX:+UseG1GC' to '-XX:-OmitStackTraceInFastThrow'.\r\n2019-08-22 07:53:57.327+0000 WARN  The 'dbms.jvm.additional' setting is overridden. Setting value changed from '-XX:-OmitStackTraceInFastThrow' to '-XX:+AlwaysPreTouch'.\r\n2019-08-22 07:53:57.327+0000 WARN  The 'dbms.jvm.additional' setting is overridden. Setting value changed from '-XX:+AlwaysPreTouch' to '-XX:+UnlockExperimentalVMOptions'.\r\n2019-08-22 07:53:57.327+0000 WARN  The 'dbms.jvm.additional' setting is overridden. Setting value changed from '-XX:+UnlockExperimentalVMOptions' to '-XX:+TrustFinalNonStaticFields'.\r\n2019-08-22 07:53:57.327+0000 WARN  The 'dbms.jvm.additional' setting is overridden. Setting value changed from '-XX:+TrustFinalNonStaticFields' to '-XX:+DisableExplicitGC'.\r\n2019-08-22 07:53:57.327+0000 WARN  The 'dbms.jvm.additional' setting is overridden. Setting value changed from '-XX:+DisableExplicitGC' to '-Djdk.tls.ephemeralDHKeySize=2048'.\r\n2019-08-22 07:53:57.328+0000 WARN  The 'dbms.jvm.additional' setting is overridden. Setting value changed from '-Djdk.tls.ephemeralDHKeySize=2048' to '-Djdk.tls.rejectClientInitiatedRenegotiation=true'.\r\n2019-08-22 07:53:57.348+0000 INFO  ======== Neo4j 4.0.0-alpha09mr02 ========\r\n2019-08-22 07:53:57.350+0000 INFO  Starting...\r\n2019-08-22 07:54:01.952+0000 INFO  Sending metrics to CSV file at /Users/luanne/neo/neo4j-enterprise-4.0.0-alpha09mr02/metrics\r\n2019-08-22 07:54:02.267+0000 INFO  Bolt enabled on localhost:7687.\r\n2019-08-22 07:54:02.267+0000 INFO  Started.\r\n2019-08-22 07:54:02.394+0000 INFO  Mounted REST API at: /db/manage\r\n2019-08-22 07:54:02.482+0000 ERROR Failed to start Neo4j on localhost:7474: null\r\n2019-08-22 07:54:02.483+0000 INFO  Stopping...\r\n2019-08-22 07:54:05.326+0000 INFO  Stopped.\r\n2019-08-22 07:54:05.326+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.AbstractNeoServer$ServerComponentsLifecycleAdapter@6dbeaef8' was successfully initialized, but failed to start. Please see the attached cause exception \"null\". Starting Neo4j failed: Component 'org.neo4j.server.AbstractNeoServer$ServerComponentsLifecycleAdapter@6dbeaef8' was successfully initialized, but failed to start. Please see the attached cause exception \"null\".\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.AbstractNeoServer$ServerComponentsLifecycleAdapter@6dbeaef8' was successfully initialized, but failed to start. Please see the attached cause exception \"null\".\r\n\tat org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:45)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:158)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:117)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:89)\r\n\tat com.neo4j.server.enterprise.CommercialEntryPoint.main(CommercialEntryPoint.java:22)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.AbstractNeoServer$ServerComponentsLifecycleAdapter@6dbeaef8' was successfully initialized, but failed to start. Please see the attached cause exception \"null\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:151)\r\n\t... 3 more\r\nCaused by: java.lang.NullPointerException\r\n\tat com.neo4j.server.enterprise.CommercialNeoServer.lambda$createWebServer$0(CommercialNeoServer.java:60)\r\n\tat org.neo4j.server.web.Jetty9WebServer.start(Jetty9WebServer.java:142)\r\n\tat org.neo4j.server.AbstractNeoServer.startWebServer(AbstractNeoServer.java:252)\r\n\tat org.neo4j.server.AbstractNeoServer$ServerComponentsLifecycleAdapter.start(AbstractNeoServer.java:469)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\t... 5 more\r\n2019-08-22 07:54:05.327+0000 INFO  Neo4j Server shutdown initiated by request\r\n```\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12273", "title": "Neo4j Transaction Retention Policy not adhering to setting; Enterprise 3.5.7", "closed": "2019-11-19 14:31:58", "commitsDetails": [], "commits": {}, "ttf": 91.00027777777778, "created": "2019-08-19 19:12:25", "user": "bsquire0128", "body": "neo4j version: 3.5.7 Enterprise\r\nneo4j.log and debug.log\r\nI changed my configuration file to have the following transaction retention policy to avoid filling up my disk with old transactions.\r\n`\r\ndbms.tx_log.rotation.retention_policy=15 files\r\n`\r\nHere is what my graph.db folder currently looks like:\r\n`\r\n-rw-r--r-- 1 root root 259M Aug 19 16:00 neostore.transaction.db.1410                                                                                                                         [264/462]\r\n-rw-r--r-- 1 root root 259M Aug 19 16:01 neostore.transaction.db.1411\r\n-rw-r--r-- 1 root root 287M Aug 19 16:01 neostore.transaction.db.1412\r\n-rw-r--r-- 1 root root 259M Aug 19 16:02 neostore.transaction.db.1413\r\n-rw-r--r-- 1 root root 259M Aug 19 16:02 neostore.transaction.db.1414\r\n-rw-r--r-- 1 root root 259M Aug 19 16:03 neostore.transaction.db.1415\r\n-rw-r--r-- 1 root root 259M Aug 19 16:04 neostore.transaction.db.1416\r\n-rw-r--r-- 1 root root 259M Aug 19 16:04 neostore.transaction.db.1417\r\n-rw-r--r-- 1 root root 259M Aug 19 16:05 neostore.transaction.db.1418\r\n-rw-r--r-- 1 root root 259M Aug 19 16:05 neostore.transaction.db.1419\r\n-rw-r--r-- 1 root root 259M Aug 19 16:06 neostore.transaction.db.1420\r\n-rw-r--r-- 1 root root 273M Aug 19 16:06 neostore.transaction.db.1421\r\n-rw-r--r-- 1 root root 259M Aug 19 16:07 neostore.transaction.db.1422\r\n-rw-r--r-- 1 root root 259M Aug 19 16:08 neostore.transaction.db.1423\r\n-rw-r--r-- 1 root root 259M Aug 19 16:08 neostore.transaction.db.1424\r\n-rw-r--r-- 1 root root 259M Aug 19 16:08 neostore.transaction.db.1425\r\n-rw-r--r-- 1 root root 259M Aug 19 16:09 neostore.transaction.db.1426\r\n-rw-r--r-- 1 root root 259M Aug 19 16:10 neostore.transaction.db.1427\r\n-rw-r--r-- 1 root root 259M Aug 19 16:10 neostore.transaction.db.1428\r\n-rw-r--r-- 1 root root 259M Aug 19 16:11 neostore.transaction.db.1429\r\n-rw-r--r-- 1 root root 259M Aug 19 16:12 neostore.transaction.db.1430\r\n-rw-r--r-- 1 root root 259M Aug 19 16:12 neostore.transaction.db.1431\r\n-rw-r--r-- 1 root root 259M Aug 19 16:13 neostore.transaction.db.1432\r\n-rw-r--r-- 1 root root 259M Aug 19 16:14 neostore.transaction.db.1433\r\n-rw-r--r-- 1 root root 259M Aug 19 16:14 neostore.transaction.db.1434\r\n-rw-r--r-- 1 root root 259M Aug 19 16:15 neostore.transaction.db.1435\r\n-rw-r--r-- 1 root root 259M Aug 19 16:16 neostore.transaction.db.1436\r\n-rw-r--r-- 1 root root 259M Aug 19 16:16 neostore.transaction.db.1437\r\n-rw-r--r-- 1 root root 259M Aug 19 16:17 neostore.transaction.db.1438\r\n-rw-r--r-- 1 root root 259M Aug 19 16:17 neostore.transaction.db.1439\r\n-rw-r--r-- 1 root root 259M Aug 19 16:18 neostore.transaction.db.1440\r\n-rw-r--r-- 1 root root 259M Aug 19 16:19 neostore.transaction.db.1441\r\n-rw-r--r-- 1 root root 259M Aug 19 16:19 neostore.transaction.db.1442\r\n-rw-r--r-- 1 root root 273M Aug 19 16:20 neostore.transaction.db.1443\r\n-rw-r--r-- 1 root root 259M Aug 19 16:21 neostore.transaction.db.1444\r\n-rw-r--r-- 1 root root 259M Aug 19 16:21 neostore.transaction.db.1445\r\n-rw-r--r-- 1 root root 259M Aug 19 16:23 neostore.transaction.db.1446\r\n-rw-r--r-- 1 root root 259M Aug 19 16:23 neostore.transaction.db.1447\r\n-rw-r--r-- 1 root root 259M Aug 19 16:24 neostore.transaction.db.1448\r\n-rw-r--r-- 1 root root 259M Aug 19 16:25 neostore.transaction.db.1449\r\n-rw-r--r-- 1 root root 259M Aug 19 16:25 neostore.transaction.db.1450\r\n-rw-r--r-- 1 root root 259M Aug 19 16:26 neostore.transaction.db.1451\r\n-rw-r--r-- 1 root root 259M Aug 19 16:27 neostore.transaction.db.1452\r\n-rw-r--r-- 1 root root 259M Aug 19 16:28 neostore.transaction.db.1453\r\n-rw-r--r-- 1 root root 259M Aug 19 16:28 neostore.transaction.db.1454\r\n-rw-r--r-- 1 root root 259M Aug 19 16:29 neostore.transaction.db.1455\r\n-rw-r--r-- 1 root root 259M Aug 19 16:30 neostore.transaction.db.1456\r\n...\r\n-rw-r--r-- 1 root root 258M Aug 19 18:47 neostore.transaction.db.1674\r\n-rw-r--r-- 1 root root 258M Aug 19 18:48 neostore.transaction.db.1675\r\n-rw-r--r-- 1 root root 258M Aug 19 18:48 neostore.transaction.db.1676\r\n-rw-r--r-- 1 root root 258M Aug 19 18:48 neostore.transaction.db.1677\r\n-rw-r--r-- 1 root root 258M Aug 19 18:49 neostore.transaction.db.1678\r\n-rw-r--r-- 1 root root 258M Aug 19 18:49 neostore.transaction.db.1679\r\n-rw-r--r-- 1 root root 258M Aug 19 18:50 neostore.transaction.db.1680\r\n-rw-r--r-- 1 root root 258M Aug 19 18:51 neostore.transaction.db.1681\r\n-rw-r--r-- 1 root root 258M Aug 19 18:51 neostore.transaction.db.1682\r\n-rw-r--r-- 1 root root 258M Aug 19 18:52 neostore.transaction.db.1683\r\n-rw-r--r-- 1 root root 258M Aug 19 18:52 neostore.transaction.db.1684\r\n-rw-r--r-- 1 root root 258M Aug 19 18:53 neostore.transaction.db.1685\r\n-rw-r--r-- 1 root root 271M Aug 19 18:54 neostore.transaction.db.1686\r\n-rw-r--r-- 1 root root 271M Aug 19 18:54 neostore.transaction.db.1687\r\n-rw-r--r-- 1 root root 258M Aug 19 18:55 neostore.transaction.db.1688\r\n-rw-r--r-- 1 root root 258M Aug 19 18:55 neostore.transaction.db.1689\r\n-rw-r--r-- 1 root root 258M Aug 19 18:56 neostore.transaction.db.1690\r\n-rw-r--r-- 1 root root 258M Aug 19 18:56 neostore.transaction.db.1691\r\n-rw-r--r-- 1 root root 258M Aug 19 18:57 neostore.transaction.db.1692\r\n-rw-r--r-- 1 root root 258M Aug 19 18:57 neostore.transaction.db.1693\r\n-rw-r--r-- 1 root root 258M Aug 19 18:58 neostore.transaction.db.1694\r\n-rw-r--r-- 1 root root 258M Aug 19 18:59 neostore.transaction.db.1695\r\n-rw-r--r-- 1 root root 258M Aug 19 18:59 neostore.transaction.db.1696\r\n-rw-r--r-- 1 root root 258M Aug 19 18:59 neostore.transaction.db.1697\r\n-rw-r--r-- 1 root root 258M Aug 19 19:00 neostore.transaction.db.1698\r\n-rw-r--r-- 1 root root 258M Aug 19 19:01 neostore.transaction.db.1699\r\n-rw-r--r-- 1 root root 258M Aug 19 19:02 neostore.transaction.db.1700\r\n-rw-r--r-- 1 root root 258M Aug 19 19:02 neostore.transaction.db.1701\r\n-rw-r--r-- 1 root root 258M Aug 19 19:02 neostore.transaction.db.1702\r\n-rw-r--r-- 1 root root 258M Aug 19 19:03 neostore.transaction.db.1703\r\n-rw-r--r-- 1 root root 258M Aug 19 19:03 neostore.transaction.db.1704\r\n-rw-r--r-- 1 root root 258M Aug 19 19:04 neostore.transaction.db.1705\r\n-rw-r--r-- 1 root root 258M Aug 19 19:04 neostore.transaction.db.1706\r\n-rw-r--r-- 1 root root 258M Aug 19 19:05 neostore.transaction.db.1707\r\n-rw-r--r-- 1 root root   16 Aug 19 19:05 neostore.transaction.db.1708\r\n`\r\nThere are literally hundreds of transaction logs. Posting as a bug in Neo4j issues as well.\r\n\r\nThoughts?"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12272", "title": "Install Neo4j on Ubuntu 14.04", "closed": "2019-09-23 06:31:10", "commitsDetails": [], "commits": {}, "ttf": 34.000277777777775, "created": "2019-08-19 08:51:55", "user": "noorbakerally", "body": "I am unable to install Neo4j on Ubuntu 14.04. I am getting the following error:\r\n\r\n```\r\nneo4j : Depends: openjdk-8-jre-headless but it is not installable or\r\n                  java8-runtime-headless but it is not installable\r\n         Depends: cypher-shell (< 1.2.0) but it is not going to be installed\r\nE: Unable to correct problems, you have held broken packages.\r\n```\r\n\r\nMy current java version is:\r\n```\r\njava version \"1.8.0_131\"\r\nJava(TM) SE Runtime Environment (build 1.8.0_131-b11)\r\nJava HotSpot(TM) 64-Bit Server VM (build 25.131-b11, mixed mode)\r\n```"}, {"labels": ["3.5", "bug", "performance"], "url": "https://github.com/neo4j/neo4j/issues/12270", "title": "Throughput for creation of nodes in Neo4J 3.5.7 decreases significantly with the number of properties", "closed": "2019-10-21 07:31:11", "commitsDetails": [], "commits": {}, "ttf": 67.00027777777778, "created": "2019-08-14 20:33:33", "user": "kant111", "body": "\r\nI am doing an A/B testing to measure the throughput for the Creation of nodes in Neo4J. And I find throughput for creation of nodes decreases significantly as the number of properties increase.\r\n\r\n**Setup:** Neo4j cluster 3.5.7 (3 core instances where one is the leader and the rest two are followers). Tried the same experiment in a single node as well and I observe the same behavior. But all the results below ran on the 3 node cluster.\r\n\r\n\r\n**TestA:** Is to measure the throughput for creation of nodes in Neo4j  where each node has 20 properties.\r\n\r\n**TestB:** Is to measure the throughput for creation of nodes in Neo4j cluster 3.5.7 where each node has 40 properties.\r\n\r\n**Result:  Throughput for TestB = 1/2 * Throughput for TestA**\r\n\r\nBelow is the code I used to generate the load and measure the throughput.\r\n\r\n    import org.neo4j.driver.v1.*;\r\n    import java.time.Duration;\r\n    import java.time.Instant;\r\n    import java.util.ArrayList;\r\n    import java.util.HashMap;\r\n    import java.util.List;\r\n    import java.util.Map;\r\n    import java.util.concurrent.TimeUnit;\r\n    \r\n    \r\n    public class UnwindCreateNodes {\r\n    \r\n        Driver driver;\r\n        static int start;\r\n        static int end;\r\n    \r\n        public UnwindCreateNodes(String uri, String user, String password) {\r\n            Config config = Config.build()\r\n                    .withConnectionTimeout(10, TimeUnit.SECONDS)\r\n                    .toConfig();\r\n            driver = GraphDatabase.driver(uri, AuthTokens.basic(user, password), config);\r\n        }\r\n    \r\n    \r\n        private void addNodes() {\r\n            List<Map<String, Object>> listOfProperties = new ArrayList<>();\r\n            for (int inner = start; inner < end; inner++) {\r\n                Map<String, Object> properties = new HashMap<>();\r\n                properties.put(\"name\", \"Jhon \" + inner);\r\n                properties.put(\"last\", \"Alan\" + inner);\r\n                properties.put(\"id\", 2 + inner);\r\n                properties.put(\"key\", \"1234\" + inner);\r\n                properties.put(\"field5\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field6\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field7\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field8\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field9\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field10\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field11\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field12\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field13\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field14\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field15\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field16\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field17\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field18\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field19\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field20\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field21\",  \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field22\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field23\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field24\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field25\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field26\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field27\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field28\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field29\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field30\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n    \r\n                properties.put(\"field31\",  \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field32\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field33\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field34\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field35\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field36\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field37\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field38\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field39\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                properties.put(\"field40\", \"kfhc iahf uheguehuguaeghuszjxcb sd\");\r\n                listOfProperties.add(properties);\r\n            }\r\n    \r\n            int noOfNodes = 0;\r\n            for (int i = 0; i < listOfProperties.size() / 5000; i++) {\r\n                List<Map<String, Object>> events = new ArrayList<>();\r\n                for (; noOfNodes < (i + 1) * (5000) && noOfNodes < listOfProperties.size(); noOfNodes++) {\r\n                    events.add(listOfProperties.get(noOfNodes));\r\n                }\r\n                Map<String, Object> apocParam = new HashMap<>();\r\n                apocParam.put(\"events\", events);\r\n                String query = \"UNWIND $events AS event CREATE (a:Label) SET a += event\";\r\n                Instant startTime = Instant.now();\r\n                try (Session session = driver.session()) {\r\n                    session.writeTransaction((tx) -> tx.run(query, apocParam));\r\n                }\r\n                Instant finish = Instant.now();\r\n                long timeElapsed = Duration.between(startTime, finish).toMillis();\r\n                System.out.println(\"######################--timeElapsed NODES--############################\");\r\n                System.out.println(\"no of nodes per batch \" + events.size());\r\n                System.out.println(timeElapsed);\r\n                System.out.println(\"############################--NODES--############################\");\r\n            }\r\n        }\r\n    \r\n        public void close() {\r\n            driver.close();\r\n        }\r\n    \r\n        public static void main(String... args) {\r\n            start = 200001;\r\n            end = 400001;\r\n            if (args.length == 2) {\r\n                start = Integer.valueOf(args[0]);\r\n                end = Integer.valueOf(args[1]);\r\n            }\r\n            UnwindCreateNodes unwindCreateNodes = new UnwindCreateNodes(\"bolt+routing://x.x.x.x:7687\", \"neo4j\", \"neo4j\");\r\n            unwindCreateNodes.addNodes();\r\n            unwindCreateNodes.close();\r\n        }\r\n    }\r\n\r\nBelow is the graph.\r\n\r\n[![enter image description here][1]][1]\r\n\r\n\r\n  [1]: https://i.stack.imgur.com/kmCqR.png\r\n\r\n\r\nIt takes 3.5 seconds to insert 5000 nodes where each node has 40 properties\r\n\r\nIt takes 1.8 seconds to insert 5000 nodes where each node has 20 properties\r\n\r\nThis is a significant slowdown and 40 isn't a big number for the number of properties. I have a requirement until 100 properties but if it does not scale for 40 I am not sure how I can scale for 100?\r\n\r\nOther approaches I tried are using `apoc.periodic.iterate` With taking out `UNWIND`and without `UNWIND` just using `CREATE` etc but the behavior persists.\r\n\r\nI don't want to store properties in some external store like RDBMS etc because that complicates things for me as I am building a generic application where I have no idea what properties are going to be used.\r\n\r\nI cannot use CSV tool either because my data is coming from Kafka and also it is not structured in a way CSV tool wants. so no CSV tool for me.\r\n\r\nAny idea to speed this up?"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12265", "title": "[io.netty.util.ResourceLeakDetector] LEAK: ByteBuf.release() was not called before it's garbage-collected.", "closed": "2019-09-09 06:59:53", "commitsDetails": [], "commits": {}, "ttf": 26.00027777777778, "created": "2019-08-13 09:57:08", "user": "catslink", "body": "- Neo4j version: neo4j-community-3.4.7\r\n- Operating system: 3.18.6-2.el7.centos.x86_64\r\n- API/Driver: Cypher with neo4j-java-driver:1.7.5\r\n- Memory configuration:\r\n//Lucene indexes: 2380.0\r\n//Data volume and native indexes: 5500m\r\ndbms.memory.heap.initial_size=16g\r\ndbms.memory.heap.max_size=16g\r\ndbms.memory.pagecache.size=80g\r\n- Expected behavior\r\nNo leak in debug.log\r\n- Actual behavior\r\nAfter 26 hour since I restarted the server, leak expcetion happened in debug.log:\r\n```\r\n2019-08-12 23:51:24.662+0000 WARN [o.n.b.t.p.ProtocolHandshaker] Unsupported connection type: 'HTTP'. Bolt protocol only operates over a TCP connection or WebSocket.\r\n2019-08-13 06:13:37.003+0000 ERROR [io.netty.util.ResourceLeakDetector] LEAK: ByteBuf.release() was not called before it's garbage-collected. See http://netty.io/wiki/reference-counted-objects.html for more information.\r\nRecent access records:\r\nCreated at:\r\n        io.netty.buffer.AbstractByteBufAllocator.compositeDirectBuffer(AbstractByteBufAllocator.java:221)\r\n        io.netty.buffer.AbstractByteBufAllocator.compositeBuffer(AbstractByteBufAllocator.java:199)\r\n        io.netty.handler.codec.MessageAggregator.decode(MessageAggregator.java:255)\r\n        io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:88)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:438)\r\n        io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:310)\r\n        io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:284)\r\n        io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:253)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        io.netty.handler.codec.ByteToMessageDecoder.handlerRemoved(ByteToMessageDecoder.java:236)\r\n        io.netty.handler.codec.ByteToMessageDecoder.decodeRemovalReentryProtection(ByteToMessageDecoder.java:494)\r\n        io.netty.handler.codec.ByteToMessageDecoder.callDecode(ByteToMessageDecoder.java:428)\r\n        io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:265)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        io.netty.channel.ChannelInboundHandlerAdapter.channelRead(ChannelInboundHandlerAdapter.java:86)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:340)\r\n        io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1434)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:362)\r\n        io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:348)\r\n        io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:965)\r\n        io.netty.channel.epoll.AbstractEpollStreamChannel$EpollStreamUnsafe.epollInReady(AbstractEpollStreamChannel.java:808)\r\n        io.netty.channel.epoll.EpollEventLoop.processReady(EpollEventLoop.java:404)\r\n        io.netty.channel.epoll.EpollEventLoop.run(EpollEventLoop.java:304)\r\n        io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)\r\n        java.lang.Thread.run(Thread.java:748)\r\n2019-08-13 06:47:16.312+0000 WARN [o.n.b.t.p.ProtocolHandshaker] Unsupported connection type: 'HTTP'. Bolt protocol only operates over a TCP connection or WebSocket.\r\n```\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12263", "title": "Run the source code test to report an error - Lack of calss", "closed": "2019-08-26 06:41:20", "commitsDetails": [], "commits": {}, "ttf": 14.000277777777777, "created": "2019-08-12 03:38:14", "user": "crazyyanchao", "body": "Lack of calss\r\n```java\r\nimport org.neo4j.cypher.internal.v3_5.util.ArithmeticException;\r\nimport org.neo4j.cypher.internal.v3_5.util.CypherTypeException;\r\nimport org.neo4j.cypher.internal.v3_5.util.InvalidArgumentException;\r\nimport org.neo4j.cypher.internal.v3_5.util.ParameterWrongTypeException;\r\nimport org.neo4j.cypher.internal.runtime.QueryStatistics;\r\n```\r\nneo4j source code version:\r\n```\r\n<groupId>org.neo4j</groupId>\r\n  <artifactId>parent</artifactId>\r\n  <version>3.5.9-SNAPSHOT</version>\r\n  <packaging>pom</packaging>\r\n  <name>Neo4j</name>\r\n  <description>Neo4j Graph Database</description>\r\n  <inceptionYear>2002</inceptionYear>\r\n  <url>http://neo4j.com/</url>\r\n```"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12262", "title": "fulltext search - I try to search numeric field,but I get nothing by lucene query string.", "closed": "2019-08-12 06:44:09", "commitsDetails": [], "commits": {}, "ttf": 2.000277777777778, "created": "2019-08-09 07:06:17", "user": "crazyyanchao", "body": "```\r\nCALL db.index.fulltext.createNodeIndex('updateTime',[\"Event\"],[\"update_time_mills\"])\r\nCALL db.index.fulltext.queryNodes(\"updateTime\", \"update_time_mills:(>=1565093559170 AND <=1565093559180)\") YIELD node, score\r\nRETURN node limit 10\r\n```\r\nHow can I do it?\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12258", "title": "Can NOT recover data after encountering \"too many files\" error", "closed": "2019-08-15 07:17:45", "commitsDetails": [], "commits": {}, "ttf": 7.000277777777778, "created": "2019-08-07 14:39:11", "user": "hiiwave", "body": "I encountered \"too many files error\" upon starting my database, which had run over months, just as #12050. However, it's not possible for me the increase the hard-limit of opened files (`ulimit -Hn`), which is set to 10240, as I'm not the administrator of the server I'm using. That it, I'm facing the same situation as [this thread](https://groups.google.com/forum/#!topic/neo4j/wKFAD2lqv-M).\r\n\r\nTheoretically, I can avoid this issue in the future by partitioning my dataset into multiple ones. However the serious problem I'm facing now is that **I CANNOT recover my data**.\r\n\r\nI tried `neo4j-admin dump` to dump graph.db, though I encountered [this issue](https://stackoverflow.com/questions/54081703/neo4j-admin-dump-is-failing) preventing me dumping. The solution, which suggests starting database and shutdown again, is sadly impossible, because I always face \"too many files error\" upon starting neo4j on this database.\r\n\r\n**I expected there are ways to offline dumping the data into readable format to recover**. Is there any workaround for this? Thanks.\r\n\r\n**Neo4j Version:** 3.5.4\r\n**Operating System:** CentOS 7"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12257", "title": "Trying to run Neo4j in Docker - ServerStartupException", "closed": "2019-08-07 14:28:54", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-08-07 12:31:47", "user": "Tarasovych", "body": "- Neo4j version: 3.5.8\r\n- Operating system (host): Ubuntu 18.04\r\n- API/Driver: Cypher 3.5.8\r\n- **Steps to reproduce**\r\n- Expected behavior\r\n```\r\n/path/to/neo4j/bin/neo4j console\r\n```\r\nruns the server.\r\n- Actual behavior\r\nException is being thrown:\r\n```\r\nActive database: graph.db\r\nDirectories in use:\r\n  home:         /var/lib/neo4j\r\n  config:       /var/lib/neo4j/conf\r\n  logs:         /logs\r\n  plugins:      /plugins\r\n  import:       /var/lib/neo4j/import\r\n  data:         /var/lib/neo4j/data\r\n  certificates: /var/lib/neo4j/certificates\r\n  run:          /var/lib/neo4j/run\r\nStarting Neo4j.\r\n2019-08-07 12:17:53.542+0000 WARN  Unknown config option: causal_clustering.discovery_listen_address\r\n2019-08-07 12:17:53.544+0000 WARN  Unknown config option: causal_clustering.raft_advertised_address\r\n2019-08-07 12:17:53.545+0000 WARN  Unknown config option: causal_clustering.raft_listen_address\r\n2019-08-07 12:17:53.545+0000 WARN  Unknown config option: ha.host.coordination\r\n2019-08-07 12:17:53.545+0000 WARN  Unknown config option: causal_clustering.transaction_advertised_address\r\n2019-08-07 12:17:53.545+0000 WARN  Unknown config option: causal_clustering.discovery_advertised_address\r\n2019-08-07 12:17:53.545+0000 WARN  Unknown config option: ha.host.data\r\n2019-08-07 12:17:53.545+0000 WARN  Unknown config option: causal_clustering.transaction_listen_address\r\n2019-08-07 12:17:53.557+0000 INFO  ======== Neo4j 3.5.8 ========\r\n2019-08-07 12:17:53.566+0000 INFO  Starting...\r\n2019-08-07 12:17:54.391+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@74bf1791' was successfully initialized, but failed to start. Please see the attached cause exception \"Store and its lock file has been locked by another process: /data/databases/store_lock. Please ensure no other process is using this database, and that the directory is writable (required even for read-only access)\". Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@74bf1791' was successfully initialized, but failed to start. Please see the attached cause exception \"Store and its lock file has been locked by another process: /data/databases/store_lock. Please ensure no other process is using this database, and that the directory is writable (required even for read-only access)\".\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@74bf1791' was successfully initialized, but failed to start. Please see the attached cause exception \"Store and its lock file has been locked by another process: /data/databases/store_lock. Please ensure no other process is using this database, and that the directory is writable (required even for read-only access)\".\r\n        at org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:45)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:187)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:124)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:91)\r\n        at org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:32)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabase@74bf1791' was successfully initialized, but failed to start. Please see the attached cause exception \"Store and its lock file has been locked by another process: /data/databases/store_lock. Please ensure no other process is using this database, and that the directory is writable (required even for read-only access)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:180)\r\n        ... 3 more\r\nCaused by: java.lang.RuntimeException: Error starting org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory, /data/databases\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:230)\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:146)\r\n        at org.neo4j.server.database.CommunityGraphFactory.newGraphDatabase(CommunityGraphFactory.java:41)\r\n        at org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:90)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 5 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.internal.locker.StoreLockerLifecycleAdapter@7d446ed1' was successfully initialized, but failed to start. Please see the attached cause exception \"Store and its lock file has been locked by another process: /data/databases/store_lock. Please ensure no other process is using this database, and that the directory is writable (required even for read-only access)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:225)\r\n        ... 9 more\r\nCaused by: org.neo4j.kernel.StoreLockException: Store and its lock file has been locked by another process: /data/databases/store_lock. Please ensure no other process is using this database, and that the directory is writable (required even for read-only access)\r\n        at org.neo4j.kernel.internal.locker.StoreLocker.storeLockException(StoreLocker.java:116)\r\n        at org.neo4j.kernel.internal.locker.StoreLocker.checkLock(StoreLocker.java:92)\r\n        at org.neo4j.kernel.internal.locker.GlobalStoreLocker.checkLock(GlobalStoreLocker.java:61)\r\n        at org.neo4j.kernel.internal.locker.StoreLockerLifecycleAdapter.start(StoreLockerLifecycleAdapter.java:36)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 11 more\r\n```\r\n\r\nAdditionally, include (as appropriate) log-files, stacktraces, and other debug output.\r\n`docker-compose`, according to [docs](https://neo4j.com/developer/docker-run-neo4j/#docker-run):\r\n```yml\r\n  neo4j:\r\n    image: neo4j:latest\r\n    hostname: test-neo4j\r\n    container_name: test_neo4j_1\r\n    volumes:\r\n      - \"./neo4j/data:/data\"\r\n      - \"./neo4j/logs:/logs\"\r\n      - \"./neo4j/import:/var/lib/neo4j/import\"\r\n      - \"./neo4j/plugins:/plugins\"\r\n    ports:\r\n      - \"7474:7474\"\r\n      - \"7687:7687\"\r\n    environment:\r\n      - NEO4J_AUTH=neo4j/test\r\n```\r\n[debug.log gist](https://gist.github.com/Tarasovych/326613d177b2b495cc4183af86a1daa3)\r\nThanks for help in advance!"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12253", "title": "Neo4j server not starting", "closed": "2019-09-13 12:37:10", "commitsDetails": [], "commits": {}, "ttf": 41.000277777777775, "created": "2019-08-02 22:11:19", "user": "noorbakerally", "body": "I am trying to start the neo4j 3.5.7 server but failing to start on on Ubuntu 18.04. It says the the file /var/lib/neo4j/data/databases/graph.db/neostore  doesn't exist while it does and with the right permission.  Log is below\r\n\r\nnohup: ignoring input\r\n2019-08-02 22:01:47.050+0000 INFO  ======== Neo4j 3.5.7 ========\r\n2019-08-02 22:01:47.061+0000 INFO  Starting...\r\n2019-08-02 22:01:48.166+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\". Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:45)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:187)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:124)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:91)\r\n        at org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:32)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:180)\r\n        ... 3 more\r\nCaused by: java.lang.RuntimeException: Error starting org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory, /var/lib/neo4j/data/databases\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:230)\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:146)\r\n        at org.neo4j.server.database.CommunityGraphFactory.newGraphDatabase(CommunityGraphFactory.java:41)\r\n        at org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:90)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 5 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@32c8e539' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:116)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:225)\r\n        ... 9 more\r\nCaused by: org.neo4j.kernel.impl.store.UnderlyingStorageException: java.io.FileNotFoundException: /var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\r\n        at org.neo4j.kernel.impl.store.NeoStores.verifyRecordFormat(NeoStores.java:217)\r\n        at org.neo4j.kernel.impl.store.NeoStores.<init>(NeoStores.java:144)\r\n        at org.neo4j.kernel.impl.store.StoreFactory.openNeoStores(StoreFactory.java:129)\r\n        at org.neo4j.kernel.impl.store.StoreFactory.openAllNeoStores(StoreFactory.java:93)\r\n        at org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.<init>(RecordStorageEngine.java:187)\r\n        at org.neo4j.kernel.NeoStoreDataSource.buildStorageEngine(NeoStoreDataSource.java:514)\r\n        at org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:367)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 14 more\r\nCaused by: java.io.FileNotFoundException: /var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\r\n        at java.io.RandomAccessFile.open0(Native Method)\r\n        at java.io.RandomAccessFile.open(RandomAccessFile.java:316)\r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:243)\r\n        at org.neo4j.io.fs.DefaultFileSystemAbstraction.open(DefaultFileSystemAbstraction.java:65)\r\n        at org.neo4j.io.fs.DefaultFileSystemAbstraction.open(DefaultFileSystemAbstraction.java:50)\r\n        at org.neo4j.io.pagecache.impl.SingleFilePageSwapper.<init>(SingleFilePageSwapper.java:170)\r\n        at org.neo4j.io.pagecache.impl.SingleFilePageSwapperFactory.createPageSwapper(SingleFilePageSwapperFactory.java:66)\r\n        at org.neo4j.io.pagecache.impl.muninn.MuninnPagedFile.<init>(MuninnPagedFile.java:149)\r\n        at org.neo4j.io.pagecache.impl.muninn.MuninnPageCache.map(MuninnPageCache.java:412)\r\n        at org.neo4j.kernel.impl.store.MetaDataStore.getRecord(MetaDataStore.java:285)\r\n        at org.neo4j.kernel.impl.store.NeoStores.verifyRecordFormat(NeoStores.java:198)\r\n        ... 21 more\r\n2019-08-02 22:01:48.167+0000 INFO  Neo4j Server shutdown initiated by request\r\nnohup: ignoring input\r\n2019-08-02 22:03:11.329+0000 INFO  ======== Neo4j 3.5.7 ========\r\n2019-08-02 22:03:11.341+0000 INFO  Starting...\r\n2019-08-02 22:03:12.502+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\". Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:45)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:187)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:124)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:91)\r\n        at org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:32)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:180)\r\n        ... 3 more\r\nCaused by: java.lang.RuntimeException: Error starting org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory, /var/lib/neo4j/data/databases\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:230)\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:146)\r\n        at org.neo4j.server.database.CommunityGraphFactory.newGraphDatabase(CommunityGraphFactory.java:41)\r\n        at org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:90)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 5 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@32c8e539' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:116)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:225)\r\n        ... 9 more\r\nCaused by: org.neo4j.kernel.impl.store.UnderlyingStorageException: java.io.FileNotFoundException: /var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\r\n        at org.neo4j.kernel.impl.store.NeoStores.verifyRecordFormat(NeoStores.java:217)\r\n        at org.neo4j.kernel.impl.store.NeoStores.<init>(NeoStores.java:144)\r\n        at org.neo4j.kernel.impl.store.StoreFactory.openNeoStores(StoreFactory.java:129)\r\n        at org.neo4j.kernel.impl.store.StoreFactory.openAllNeoStores(StoreFactory.java:93)\r\n        at org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.<init>(RecordStorageEngine.java:187)\r\n        at org.neo4j.kernel.NeoStoreDataSource.buildStorageEngine(NeoStoreDataSource.java:514)\r\n        at org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:367)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 14 more\r\nCaused by: java.io.FileNotFoundException: /var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\r\n        at java.io.RandomAccessFile.open0(Native Method)\r\n        at java.io.RandomAccessFile.open(RandomAccessFile.java:316)\r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:243)\r\n        at org.neo4j.io.fs.DefaultFileSystemAbstraction.open(DefaultFileSystemAbstraction.java:65)\r\n        at org.neo4j.io.fs.DefaultFileSystemAbstraction.open(DefaultFileSystemAbstraction.java:50)\r\n        at org.neo4j.io.pagecache.impl.SingleFilePageSwapper.<init>(SingleFilePageSwapper.java:170)\r\n        at org.neo4j.io.pagecache.impl.SingleFilePageSwapperFactory.createPageSwapper(SingleFilePageSwapperFactory.java:66)\r\n        at org.neo4j.io.pagecache.impl.muninn.MuninnPagedFile.<init>(MuninnPagedFile.java:149)\r\n        at org.neo4j.io.pagecache.impl.muninn.MuninnPageCache.map(MuninnPageCache.java:412)\r\n        at org.neo4j.kernel.impl.store.MetaDataStore.getRecord(MetaDataStore.java:285)\r\n        at org.neo4j.kernel.impl.store.NeoStores.verifyRecordFormat(NeoStores.java:198)\r\n        ... 21 more\r\n2019-08-02 22:03:12.504+0000 INFO  Neo4j Server shutdown initiated by request\r\nnohup: ignoring input\r\n2019-08-02 22:06:18.194+0000 INFO  ======== Neo4j 3.5.7 ========\r\n2019-08-02 22:06:18.205+0000 INFO  Starting...\r\n2019-08-02 22:06:19.292+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\". Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:45)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:187)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:124)\r\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:91)\r\n        at org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:32)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabase@6475472c' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:180)\r\n        ... 3 more\r\nCaused by: java.lang.RuntimeException: Error starting org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory, /var/lib/neo4j/data/databases\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:230)\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:146)\r\n        at org.neo4j.server.database.CommunityGraphFactory.newGraphDatabase(CommunityGraphFactory.java:41)\r\n        at org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:90)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 5 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@32c8e539' was successfully initialized, but failed to start. Please see the attached cause exception \"/var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\".\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:473)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:116)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.graphdb.facade.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:225)\r\n        ... 9 more\r\nCaused by: org.neo4j.kernel.impl.store.UnderlyingStorageException: java.io.FileNotFoundException: /var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\r\n        at org.neo4j.kernel.impl.store.NeoStores.verifyRecordFormat(NeoStores.java:217)\r\n        at org.neo4j.kernel.impl.store.NeoStores.<init>(NeoStores.java:144)\r\n        at org.neo4j.kernel.impl.store.StoreFactory.openNeoStores(StoreFactory.java:129)\r\n        at org.neo4j.kernel.impl.store.StoreFactory.openAllNeoStores(StoreFactory.java:93)\r\n        at org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.<init>(RecordStorageEngine.java:187)\r\n        at org.neo4j.kernel.NeoStoreDataSource.buildStorageEngine(NeoStoreDataSource.java:514)\r\n        at org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:367)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 14 more\r\nCaused by: java.io.FileNotFoundException: /var/lib/neo4j/data/databases/graph.db/neostore (Permission denied)\r\n        at java.io.RandomAccessFile.open0(Native Method)\r\n        at java.io.RandomAccessFile.open(RandomAccessFile.java:316)\r\n        at java.io.RandomAccessFile.<init>(RandomAccessFile.java:243)\r\n        at org.neo4j.io.fs.DefaultFileSystemAbstraction.open(DefaultFileSystemAbstraction.java:65)\r\n        at org.neo4j.io.fs.DefaultFileSystemAbstraction.open(DefaultFileSystemAbstraction.java:50)\r\n        at org.neo4j.io.pagecache.impl.SingleFilePageSwapper.<init>(SingleFilePageSwapper.java:170)\r\n        at org.neo4j.io.pagecache.impl.SingleFilePageSwapperFactory.createPageSwapper(SingleFilePageSwapperFactory.java:66)\r\n        at org.neo4j.io.pagecache.impl.muninn.MuninnPagedFile.<init>(MuninnPagedFile.java:149)\r\n        at org.neo4j.io.pagecache.impl.muninn.MuninnPageCache.map(MuninnPageCache.java:412)\r\n        at org.neo4j.kernel.impl.store.MetaDataStore.getRecord(MetaDataStore.java:285)\r\n        at org.neo4j.kernel.impl.store.NeoStores.verifyRecordFormat(NeoStores.java:198)\r\n        ... 21 more\r\n2019-08-02 22:06:19.302+0000 INFO  Neo4j Server shutdown initiated by request\r\n\r\n\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12251", "title": "Neo.TransientError.Transaction.Outdated Error", "closed": "2019-08-06 06:08:07", "commitsDetails": [], "commits": {}, "ttf": 10.000277777777777, "created": "2019-07-26 11:44:10", "user": "ppoliani", "body": "I get an error from a query that used to run correctly. \r\n\r\n**Neo4j Version:** 3.5.8-enterprice\r\n**Operating System:**  MacOS Mojave\r\n**API:** Docker\r\n\r\n### Steps to reproduce\r\n\r\n1. Create a new `HAS_PERSONAL` relationship\r\n\r\n```\r\nMATCH (d:Document), (u:User {userId:\"id1\"})\r\nWHERE ID(d)=16\r\nMERGE (u)-[:HAS_PERSONAL]->(d)\r\nRETURN d\r\n```\r\n\r\n2. After the previous query is successful (and it is because I can see it in the Neo4j browser) I try to delete it\r\n\r\n```\r\nMATCH (u:User {userId:\"id1\"})-[ss:HAS_PERSONAL]->(d:Document)\r\nWHERE ID(d)=16\r\nDELETE ss\r\nRETURN ss\r\n```\r\n\r\n### Expected behavior\r\nThe relationship should be removed.\r\n\r\n### Actual behavior\r\nI get the following error:\r\n\r\n```\r\nDatabase elements (nodes, relationships, properties) were observed during query execution, but got deleted by an overlapping committed transaction before the query results could be serialised. The transaction might succeed if it is retried.\r\n```"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12250", "title": "Write Transaction Interfering with Reads", "closed": "2019-07-31 06:25:04", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2019-07-24 15:18:12", "user": "Hoekz", "body": "### Summary\r\nWe started seeing an issue in our applications where data was sometimes not returned from API calls. While investigating, it appeared to be an issue where write transactions happening in one application that destroys and recreates a node in the database interfere with the read transactions from the APIs. This seems to violate the expectation that the write transaction should be self-contained and not affect the read of the same node.\r\n\r\nWe've setup a simplified version of this problem occurring. We first create a node and spin up a separate instance of the application to simply continually query for that node. We then continually run a write transaction that first deletes the node and then recreates the node with a configurable delay in between those two steps (however, the same transaction is still used in both steps).\r\n\r\n### Setup\r\n\r\n- Neo4j: (Enterprise) v3.5.3 (also tried v3.5.6)\r\n- OS: MacOS Mojave (Neo in Docker), Ubuntu 14 (Servers)\r\n- Driver: Java v1.7.3\r\n- Language: Scala v2.13.0\r\n\r\n### Steps to Reproduce\r\n[Linked Repo](https://github.com/Hoekz/NeoTransactionInvestigation). Run twice at the same time, once in write mode, and once in read mode.\r\n\r\n`sbt \"run 0\"` - runs in write mode with 0ms delay between delete and create in same transaction.\r\n`sbt \"run read-mode\"` - runs in read mode with a constant read of the same node and reports when the node is either found or not found.\r\n\r\nThese two commands should be run at the same time in two different terminals (better to kick off the write first, but should be very little delay between starting the read).\r\n\r\n### Expected\r\n\r\nNo matter the delay used, the read should always see a node.\r\n\r\n### Actual\r\n\r\nWith no or very little delay (<= 10ms), the read intermittently fails to find the node.\r\nWith a longer delay (1s), the read always finds the node.\r\n"}, {"labels": ["3.5", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12249", "title": "Neo.DatabaseError.General.UnknownError when using property replacement/mutation operator", "closed": "2019-11-13 14:23:57", "commitsDetails": [], "commits": {}, "ttf": 117.00027777777778, "created": "2019-07-19 08:37:52", "user": "hs750", "body": "I have a database that is currently populated with around 2000 nodes. I am trying to insert a data that was exported from APOC as plain cypher form another instance of the database. \r\n\r\nThe following statement is the one that fails:\r\n`UNWIND [{_id:48, properties:{password:\"asdf\", authToken:\"6a4e0954-3d78-4601-bd7f-0825f9838841\", screenName:\"asdf\", uuid:\"96c5e031-8b6c-11e9-9c7e-f8b156dff1f6\", username:\"asdf\"}}] as row\r\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:User;`\r\n\r\nRemoving `n+=row.properties` allows the command to run. Changing `+=` to `=` still fails. \r\n\r\nNot all usages of `+=` cause a failure. `match(n) set n += {test: \"hello\"}` works. As do some other commands in the exported cypher such as: \r\n`UNWIND [{_id:1290, properties:{default:true, name:\"default\", uuid:\"96c5e030-8b6c-11e9-9c7e-f8b156dff1f6\"}}, {_id:1414, properties:{name:\"demo\", uuid:\"fd460d90-a4c5-11e9-9266-f7d63871dc56\"}}] as row\r\nCREATE (n:`UNIQUE IMPORT LABEL`{`UNIQUE IMPORT ID`: row._id}) SET n += row.properties SET n:Context;`\r\n\r\nThis issue also does not happen if the database is empty.\r\n\r\nThe first command before inport is `CREATE CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;` and the last is `DROP CONSTRAINT ON (node:`UNIQUE IMPORT LABEL`) ASSERT (node.`UNIQUE IMPORT ID`) IS UNIQUE;`. These commands have no effect on whether the other statements work. \r\n\r\n**Neo4j Version:** 3.5.5+ (works ok in 3.5.4)\r\n**Operating System:** Windows 7 / Ubuntu 18.04 + Docker (alpine linux)\r\n**API:** JavaScript Driver + Neo4j Browser\r\n**Plugins:** Error happens without plugins. The following were installed before debugging: Graphaware Server, Graphaware UUID, APOC.\r\n\r\n### Expected behavior\r\nData imported into neo4j.\r\n\r\n### Actual behavior\r\nMessage in neo4j browser of `Neo.DatabaseError.General.UnknownError`.\r\nException in neo4j log of:\r\n```\r\n2019-07-19 08:21:24.329+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [Neo.DatabaseError.General.UnknownError]: null, reference d9885c32-b552-4427-b69f-b1b70b37a245.\r\njava.lang.NullPointerException\r\n\tat org.neo4j.values.storable.ValueTuple.hashCode(ValueTuple.java:108)\r\n\tat java.util.HashMap.hash(Unknown Source)\r\n\tat java.util.HashMap.computeIfAbsent(Unknown Source)\r\n\tat org.neo4j.kernel.impl.api.state.TxState.getOrCreateIndexUpdatesForSeek(TxState.java:803)\r\n\tat org.neo4j.kernel.impl.api.state.TxState.indexDoUpdateEntry(TxState.java:786)\r\n\tat org.neo4j.kernel.impl.newapi.IndexTxStateUpdater.onLabelChange(IndexTxStateUpdater.java:87)\r\n\tat org.neo4j.kernel.impl.newapi.Operations.checkConstraintsAndAddLabelToNode(Operations.java:303)\r\n\tat org.neo4j.kernel.impl.newapi.Operations.nodeAddLabel(Operations.java:273)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext$$anonfun$setLabelsOnNode$1.apply$mcIII$sp(TransactionBoundQueryContext.scala:81)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext$$anonfun$setLabelsOnNode$1.apply(TransactionBoundQueryContext.scala:80)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext$$anonfun$setLabelsOnNode$1.apply(TransactionBoundQueryContext.scala:80)\r\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\r\n\tat scala.collection.TraversableOnce$$anonfun$foldLeft$1.apply(TraversableOnce.scala:157)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:891)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1334)\r\n\tat scala.collection.TraversableOnce$class.foldLeft(TraversableOnce.scala:157)\r\n\tat scala.collection.AbstractIterator.foldLeft(Iterator.scala:1334)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext.setLabelsOnNode(TransactionBoundQueryContext.scala:80)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext$$anonfun$setLabelsOnNode$1.apply$mcI$sp(ExceptionTranslatingQueryContext.scala:53)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext$$anonfun$setLabelsOnNode$1.apply(ExceptionTranslatingQueryContext.scala:53)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext$$anonfun$setLabelsOnNode$1.apply(ExceptionTranslatingQueryContext.scala:53)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslationSupport$class.translateException(ExceptionTranslationSupport.scala:33)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext.translateException(ExceptionTranslatingQueryContext.scala:41)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.ExceptionTranslatingQueryContext.setLabelsOnNode(ExceptionTranslatingQueryContext.scala:53)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.UpdateCountingQueryContext.setLabelsOnNode(UpdateCountingQueryContext.scala:88)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.SetLabelsOperation.set(SetOperation.scala:265)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.SetPipe$$anonfun$internalCreateResults$1.apply(SetPipe.scala:32)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.SetPipe$$anonfun$internalCreateResults$1.apply(SetPipe.scala:31)\r\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:410)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.EmptyResultPipe.internalCreateResults(EmptyResultPipe.scala:29)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:76)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.runtime.executionplan.BaseExecutionResultBuilderFactory$BaseExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:61)\r\n\tat org.neo4j.cypher.internal.compatibility.InterpretedRuntime$InterpretedExecutionPlan.run(InterpretedRuntime.scala:84)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery$$anonfun$execute$3.apply(CypherCurrentCompiler.scala:205)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery$$anonfun$execute$3.apply(CypherCurrentCompiler.scala:190)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:89)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler$CypherExecutableQuery.execute(CypherCurrentCompiler.scala:224)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:101)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:85)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachineV1SPI$BoltResultHandleV1.start(TransactionStateMachineV1SPI.java:189)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State.startExecution(TransactionStateMachine.java:506)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.execute(TransactionStateMachine.java:300)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:269)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:110)\r\n\tat org.neo4j.bolt.v3.runtime.ReadyState.processRunMessage(ReadyState.java:85)\r\n\tat org.neo4j.bolt.v3.runtime.ReadyState.processUnsafe(ReadyState.java:56)\r\n\tat org.neo4j.bolt.v3.runtime.FailSafeBoltStateMachineState.process(FailSafeBoltStateMachineState.java:48)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.nextState(BoltStateMachineV1.java:144)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.process(BoltStateMachineV1.java:92)\r\n\tat org.neo4j.bolt.messaging.BoltRequestMessageReader.lambda$doRead$1(BoltRequestMessageReader.java:89)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:191)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:139)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:171)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.lambda$scheduleBatchOrHandleError$2(ExecutorBoltScheduler.java:154)\r\n\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)\r\n\tat java.lang.Thread.run(Unknown Source)\r\n```\r\n\r\n\r\n\r\n\r\n"}, {"labels": ["3.5", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12247", "title": "Wrong results using LIMIT in RETURN (non-deterministic)", "closed": "2019-10-28 07:25:47", "commitsDetails": [], "commits": {}, "ttf": 107.00027777777778, "created": "2019-07-12 08:18:49", "user": "hijan94", "body": "I discovered that when I use the LIMIT operator in the RETURN, the database returns invalid results sometimes (non-deterministic) - but only on large size patterns/quiers. I.e: Altough there are 4 matches in the database, the database returns no matches when using LIMIT 1 (or 2,3), but 4 when using LIMIT 4. After restarting the database the error disappears sometimes - but sometimes not. \r\n\r\nHas this issue been fixed in recent releases? If not, please use the following steps to reproduce the problem: Note: be advised, that the problem occures only sporadic.\r\n\r\n- Neo4j version: 3.5.2\r\n- Operating system: Win10 x64\r\n- API/Driver: Neo4j Browser or JavaAPI\r\n\r\nSteps:\r\n1. Initiate Database, run the following queries. The query create a game board with 4x4 fields( label _:Field_), which are connected by _:right_ and _:bottom_ edges to their neighbors, and a node _:Board_, with edges to every _:Field_.\r\n\r\n```\r\nCREATE\r\n(f00: Field {name: \"f00\"})-[:right]->(f01: Field {name: \"f01\"})-[:right]->(f02: Field {name: \"f02\"})-[:right]->(f03:Field {name: \"f03\"}), \r\n(f10: Field {name: \"f10\"})-[:right]->(f11: Field {name: \"f11\"})-[:right]->(f12: Field {name: \"f12\"})-[:right]->(f13:Field {name: \"f13\"}), \r\n(f20: Field {name: \"f20\"})-[:right]->(f21: Field {name: \"f21\"})-[:right]->(f22: Field {name: \"f22\"})-[:right]->(f23:Field {name: \"f23\"}), \r\n(f30: Field {name: \"f30\"})-[:right]->(f31: Field {name: \"f31\"})-[:right]->(f32: Field {name: \"f32\"})-[:right]->(f33:Field {name: \"f33\"}), \r\n(f00)-[:bottom]->(f10)-[:bottom]->(f20)-[:bottom]->(f30), \r\n(f01)-[:bottom]->(f11)-[:bottom]->(f21)-[:bottom]->(f31), \r\n(f02)-[:bottom]->(f12)-[:bottom]->(f22)-[:bottom]->(f32), \r\n(f03)-[:bottom]->(f13)-[:bottom]->(f23)-[:bottom]->(f33),\r\n(b:Board)\r\n```\r\n\r\nand \r\n\r\n`MATCH (f:Field), (b:Board) CREATE (b)-[:fields]->(f)`\r\n\r\n2. Execute the pattern matching query. \r\n\r\n```\r\nMATCH \r\n(b:Board)-[b_fields_0_field11:fields]->(field11:Field), (b:Board)-[b_fields_1_field12:fields]->(field12:Field), (b:Board)-[b_fields_2_field13:fields]->(field13:Field), (b:Board)-[b_fields_3_field21:fields]->(field21:Field), (b:Board)-[b_fields_4_field22:fields]->(field22:Field), (b:Board)-[b_fields_5_field23:fields]->(field23:Field), (b:Board)-[b_fields_6_field31:fields]->(field31:Field), (b:Board)-[b_fields_7_field32:fields]->(field32:Field), (b:Board)-[b_fields_8_field33:fields]->(field33:Field), \r\n(field11:Field)-[field11_right_0_field12:right]->(field12:Field), (field11:Field)-[field11_bottom_1_field21:bottom]->(field21:Field), \r\n(field12:Field)-[field12_right_0_field13:right]->(field13:Field), (field12:Field)-[field12_bottom_1_field22:bottom]->(field22:Field), \r\n(field13:Field)-[field13_bottom_0_field23:bottom]->(field23:Field), \r\n(field21:Field)-[field21_right_0_field22:right]->(field22:Field), (field21:Field)-[field21_bottom_1_field31:bottom]->(field31:Field), \r\n(field22:Field)-[field22_right_0_field23:right]->(field23:Field), (field22:Field)-[field22_bottom_1_field32:bottom]->(field32:Field), \r\n(field23:Field)-[field23_bottom_0_field33:bottom]->(field33:Field), \r\n(field31:Field)-[field31_right_0_field32:right]->(field32:Field), \r\n(field32:Field)-[field32_right_0_field33:right]->(field33:Field), \r\n(field33:Field)\r\nWHERE  NOT id(field11) = id(field12) AND NOT id(field11) = id(field13) AND NOT id(field11) = id(field21) AND NOT id(field11) = id(field22) AND NOT id(field11) = id(field23) AND NOT id(field11) = id(field31) AND NOT id(field11) = id(field32) AND NOT id(field11) = id(field33)\r\nAND NOT id(field12) = id(field13) AND NOT id(field12) = id(field21) AND NOT id(field12) = id(field22) AND NOT id(field12) = id(field23) AND NOT id(field12) = id(field31) AND NOT id(field12) = id(field32) AND NOT id(field12) = id(field33)\r\nAND NOT id(field13) = id(field21) AND NOT id(field13) = id(field22) AND NOT id(field13) = id(field23) AND NOT id(field13) = id(field31) AND NOT id(field13) = id(field32) AND NOT id(field13) = id(field33)\r\nAND NOT id(field21) = id(field22) AND NOT id(field21) = id(field23) AND NOT id(field21) = id(field31) AND NOT id(field21) = id(field32) AND NOT id(field21) = id(field33)\r\nAND NOT id(field22) = id(field23) AND NOT id(field22) = id(field31) AND NOT id(field22) = id(field32) AND NOT id(field22) = id(field33)\r\nAND NOT id(field23) = id(field31) AND NOT id(field23) = id(field32) AND NOT id(field23) = id(field33)\r\nAND NOT id(field31) = id(field32) AND NOT id(field31) = id(field33)\r\nAND NOT id(field32) = id(field33)\r\nRETURN \r\nid(b_fields_0_field11) AS b_fields_0_field11, id(b_fields_1_field12) AS b_fields_1_field12, id(b_fields_2_field13) AS b_fields_2_field13,\r\nid(b_fields_3_field21) AS b_fields_3_field21, id(b_fields_4_field22) AS b_fields_4_field22, id(b_fields_5_field23) AS b_fields_5_field23,\r\nid(b_fields_6_field31) AS b_fields_6_field31, id(b_fields_7_field32) AS b_fields_7_field32, id(b_fields_8_field33) AS b_fields_8_field33,\r\nid(field11_right_0_field12) AS field11_right_0_field12, id(field11_bottom_1_field21) AS field11_bottom_1_field21, id(field12_right_0_field13) AS field12_right_0_field13,\r\nid(field12_bottom_1_field22) AS field12_bottom_1_field22, id(field13_bottom_0_field23) AS field13_bottom_0_field23, id(field21_right_0_field22) AS field21_right_0_field22, \r\nid(field21_bottom_1_field31) AS field21_bottom_1_field31, id(field22_right_0_field23) AS field22_right_0_field23, id(field22_bottom_1_field32) AS field22_bottom_1_field32,\r\nid(field23_bottom_0_field33) AS field23_bottom_0_field33, id(field31_right_0_field32) AS field31_right_0_field32, id(field32_right_0_field33) AS field32_right_0_field33, id(field33) AS field33\r\n LIMIT 1\r\n```\r\n\r\nThe query returns all 3x3 size sub boards. Hence the expected result in a 4x4 board is 4. Using the LIMIT opertor at the end, we limit the return to 1 sub board, such that the expected result size is 1. But sometimes the database returns no matches. Same behavior when using LIMIT 1, LIMIT 2 or LIMIT 3. Using LIMIT 4 the database return the 4 matches.\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12246", "title": "How can I execute 'apoc.cypher.doIt' by HTTP-API?", "closed": "2019-07-22 00:55:17", "commitsDetails": [], "commits": {}, "ttf": 11.000277777777777, "created": "2019-07-10 05:15:20", "user": "crazyyanchao", "body": "URL: http://localhost:7474/db/data/transaction/commit\r\nPARAS:\r\n```\r\n{\r\n    \"statements\": [\r\n        {\r\n            \"statement\": \"UNWIND {dataPackage} AS row CALL apoc.cypher.doIt('MERGE (n:`' + row.label + '` {_unique_uid: {_unique_uid}}) SET n += {properties}', {properties: row.properties, _unique_uid: row._unique_uid}) YIELD value RETURN 1\",\r\n            \"parameters\": {\r\n                \"dataPackage\": {\r\n                    \"row\": \"[{_unique_uid:\\\"f3665415678049ffcf9fe9cecf7dec26\\\",_entity_name:\\\"\u672b\u65e5\\\",label:\\\"TwitterID\\\",properties:{_unique_uid:\\\"f3665415678049ffcf9fe9cecf7dec26\\\",_entity_name:\\\"\u672b\u65e5\\\",id:\\\"75334231\\\",url:\\\"www.twitter.com/u/123452\\\"}}]\"\r\n                }\r\n            }\r\n        }\r\n    ]\r\n}\r\n```\r\nRESULT:\r\n```\r\n{\r\n    \"results\": [],\r\n    \"errors\": [\r\n        {\r\n            \"code\": \"Neo.ClientError.Procedure.ProcedureCallFailed\",\r\n            \"message\": \"Failed to invoke procedure `apoc.cypher.doIt`: Caused by: org.neo4j.cypher.internal.util.v3_4.SyntaxException: Invalid input 'n': expected whitespace, comment, ',', GRAPHS, SOURCE GRAPH [AS <name>], TARGET GRAPH [AS <name>], GRAPH AT <graph-url> [AS <name>], GRAPH OF <pattern> [AS <name>], GRAPH, GRAPH <graph-ref> [AS <name>], >>, ORDER, SKIP, LIMIT, WHERE, LOAD CSV, FROM, INTO, START, MATCH, UNWIND, MERGE, CREATE GRAPH >>, CREATE >> GRAPH, CREATE GRAPH, CREATE, SET, DELETE GRAPHS, DELETE, REMOVE, FOREACH, WITH, CALL, PERSIST, RELOCATE, RETURN, SNAPSHOT, UNION, ';' or end of input (line 1, column 75 (offset: 74))\"\r\n        }\r\n    ]\r\n}\r\n```\r\nI can do it this way:\r\n```\r\n{\r\n    \"statements\": [\r\n        {\r\n            \"statement\": \"UNWIND [{_unique_uid:\\\"f3665415678049ffcf9fe9cecf7dec26\\\",_entity_name:\\\"\u672b\u65e5\\\",label:\\\"TwitterID\\\",properties:{_unique_uid:\\\"f3665415678049ffcf9fe9cecf7dec26\\\",_entity_name:\\\"\u672b\u65e5\\\",id:\\\"75334231\\\",url:\\\"www.twitter.com/u/123452\\\"}}] AS row CALL apoc.cypher.doIt('MERGE (n:`' + row.label + '` {_unique_uid: {_unique_uid}}) SET n += {properties}', {properties: row.properties, _unique_uid: row._unique_uid}) YIELD value RETURN 1\"\r\n        }\r\n    ]\r\n}\r\n```"}, {"labels": ["3.2", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12245", "title": "OPTIONAL keywords not working as expected.", "closed": "2019-08-05 06:23:17", "commitsDetails": [], "commits": {}, "ttf": 26.00027777777778, "created": "2019-07-09 16:56:13", "user": "mangesh001", "body": "- Neo4j version: 3.2.15\r\n- Operating system: mac\r\n- **Steps to reproduce**\r\nThis are my two query : \r\nQuery 1\r\n`OPTIONAL MATCH (persons:Person)\r\n                                    -[:HAS_ORDER]->(orders:Order)\r\nRETURN COUNT(DISTINCT orders)`\r\nand Query 2\r\n`MATCH (persons:Person)\r\n                                    -[:HAS_ORDER]->(orders:Order)\r\nRETURN COUNT(DISTINCT orders)`\r\n\r\nboth are giving different result\r\nquery 1 returns 12873 and query 2 returns 238\r\n\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12240", "title": "neo4j-admin import stuck at Relationships counts", "closed": "2019-11-24 15:34:04", "commitsDetails": [], "commits": {}, "ttf": 143.00027777777777, "created": "2019-07-04 14:03:01", "user": "whwang1996", "body": "## Guidelines\r\n\r\n\r\n\r\n- Neo4j version: 3.5.6\r\n- Operating system: Windows 10, 64G RAM, AMD R1700\r\n- API/Driver: neo4j-admin import\r\n- **Steps to reproduce**\r\nI tried to import 40M nodes, 260M nodes properties and 300M relationships. \r\nThe number of node labels is about 40,000, and a node may have more than one label. \r\nThe number of relationship types is about 1,100, and a relationship haves only one type. \r\n\r\nThe command I ran:\r\n```\r\nneo4j-admin import  \r\n--nodes=C:\\Whole\\nodes\\nodes_0.csv (71 files in total)\r\n--relationships=relationships.csv (only 1 file)\r\n--array-delimiter=\";\"\r\n```\r\nThe previous steps were completed in an hour. But it stuck at `Relationship Counts` for 21h already and it doesn't seem to be finished:\r\n\r\n```\r\n******** DETAILS 2019-07-04 12:48:10.330+0000 ********\r\n        Relationship counts\r\n        [*>(10)==========================================|COUNT(9)====================================] 299M\r\n        I/O throughput: 746.40 MB/s\r\n        VM stop-the-world time: 51m 11s 967ms\r\n        Duration: 21h 18m 29s 433ms\r\n        Done batches: 29924\r\n```\r\nThe CPU it uses is about 0%, and RAM use is about 14G\r\n\r\nThanks for your help!\r\n------------------------------------------------------\r\nFinally, I succeeded by importing the nodes first, which took me about 30 minutes. Then I import the relationships by APOC manually, which took me about 4 hours.\r\nThank you anyway! "}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12234", "title": "Neo.DatabaseError.General.UnknownError: NOT PART OF CHAIN!", "closed": "2019-12-12 13:45:14", "commitsDetails": [], "commits": {}, "ttf": 173.00027777777777, "created": "2019-06-22 12:14:11", "user": "Ashwanthkumard", "body": "I am facing the following issue when trying to run a simple query as follow:\r\n`MATCH (s)-[:HAS_PROFILE]->(p)\r\nWHERE p.id='XXXX' RETURN s`\r\n\r\nIssue:\r\n`Neo.DatabaseError.General.UnknownError: NOT PART OF CHAIN! RelationshipTraversalCursor[id=70577, open state with: denseNode=false, next=70577, mode=regular, underlying record=Relationship[70577,used=false,source=68813,target=71331,type=14,sCount=26,sNext=55067,tCount=2,tNext=70529,prop=-1,secondaryUnitId=-1, sFirst, tFirst]]`\r\n\r\nHow can I fix this? Pretty sure the issue is not because of error. Stuck with the issue."}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/12233", "title": "Unexpected behavior when performing query stored in node property", "closed": "2019-10-01 09:06:07", "commitsDetails": [], "commits": {}, "ttf": 101.00027777777778, "created": "2019-06-22 08:16:02", "user": "jipjip", "body": "Copy / Paste stackoverflow post (https://stackoverflow.com/questions/56694788/unexpected-behavior-when-performing-query-stored-in-node-property):  \r\n\r\n**In short:**  \r\nI work in a graph database (neo4j)  \r\nI wrote a query that checks if 2 characters in a string, at a given position, are the same. (WHEN rc1=rc2 THEN...) If so: remove one of them.   \r\nFinally it will create a node with the new string.\r\n\r\nThe query, if executed in Neo4j Desktop, works very well.\r\n\r\nNow for this project I need to store the query in a property of a node.  \r\nI know that it would be easy to write some code that performs the same logic with a result from a query, however, the query needs to be stored in the node.\r\n\r\nI wrote a small piece of python that finds the right node, collects its properties and executes the query it has found in it.  \r\nWhen I run this code, with a word that does not have two identical characters at the given positions, it gives me some unexpected results.   It acts as if rc1 is equal to rc2, even if it isn't.  \r\nAgain, the query performs well when executed in Neo4j Desktop.\r\n\r\nIt might be interesting to know that if I delete the node with the false string and run the python part a second time, the results are correct.\r\n\r\nNow, first the query. I have omitted the part where it creates a new node, because that wasn't relevant.\r\n\r\n```\r\n\r\n    MATCH (w:Word{name:'buigen'}) \r\n    WITH substring(w.name,size(w.name)-2,2) AS ex1, left(w.name,size(w.name)-2) AS st1,w \r\n    WITH substring(st1, size(st1)-1 , 1) AS rc1, \r\n        CASE WHEN size(st1)>1 THEN substring(st1, size(st1)-2 , 1) \r\n        ELSE null \r\n        END AS rc2, \r\n        CASE WHEN size(st1)>2 THEN substring(st1, size(st1)-3 , 1) \r\n        ELSE null \r\n        END AS rc3,st1,ex1,w \r\n    WITH \r\n        CASE WHEN ex1 = 'en' THEN \r\n            CASE WHEN rc1=rc2 THEN left(st1,size(st1)-1) \r\n            ELSE st1 \r\n            END \r\n        WHEN ex1 = '\u00ebn' THEN st1 + 'e' \r\n        END as xn,rc3,rc2,rc1 \r\n    RETURN xn,rc3,rc2,rc1\r\n\r\n```\r\n\r\nRunning this in Neo4j Desktop results in:  \r\n\r\n    xn = \"buig\"  \r\n    st1 = \"buig\"  \r\n    rc1 = \"g\"  \r\n    rc2 = \"i\"  \r\n\r\nSo far so good.\r\n\r\nNow the python fragment:\r\n\r\n```python\r\n\r\nfrom neo4j import GraphDatabase\r\n    \r\nuri = \"bolt://localhost:7687\"\r\ndriver = GraphDatabase.driver(uri, auth=(\"****\", \"*******\"))\r\n    \r\n# skipped some code\r\n    \r\ndef find_and_execute(*args, **kwargs):\r\n    \r\n    # skipped some code\r\n    \r\n    action = fquery\r\n    print(action)\r\n    with driver.session() as session:\r\n        try:\r\n            for record in session.run(action, var_word=frequiredVal):\r\n                print(record)\r\n        except:\r\n            print('oops 2')\r\n\r\n```\r\n\r\nWhen I execute it: \r\n\r\n    a.find_and_execute(rule='stam',var_word='buigen')\r\n\r\nit results in:\r\n\r\n```\r\n\r\n    MATCH (w:Word{name:{var_word}}) WITH substring(w.name,size(w.name)-2,2) AS ex1, left(w.name,size(w.name)-2) AS st1,w WITH substring(st1, size(st1)-1 , 1) AS rc1, CASE WHEN size(st1)>1 THEN substring(st1, size(st1)-2 , 1) ELSE null END AS rc2,st1, ex1, w WITH CASE WHEN ex1 = 'en' THEN CASE WHEN rc1 = rc2 THEN left(st1,size(st1)-1) ELSE st1 END WHEN ex1 = '\u00ebn' THEN st1 + 'e' END as xn,st1,rc2,rc1 RETURN xn,st1,rc2,rc1  \r\n    <Record xn='bui' st1='buig' rc2='i' rc1='g'>\r\n\r\n```\r\nAs you can see, xn=\"bui\" where it should be \"buig\"\r\n\r\nI really have no clue why this happens (duh), but I also ran out of ideas to debug this.\r\n\r\nAny help would be welcome!\r\n\r\n\r\n---------------------\r\n\r\nEdit:  \r\nFound a workaround (maybe even more elegant):  \r\nWhen I replace the substring functions for rc1 and rc2 with a string ('g','i') all works well.  \r\nWhen I replace on of them, all works well  \r\n\r\nNow I started suspecting a bug in the Neo4j Bolt Driver 1.7 for Python.  \r\nI added:\r\n\r\n    WITH split(st1,'') as _st1\r\n\r\nand replaced the substrings for:\r\n\r\n    WITH _st1[-1] AS rc1, _st1[-2] AS rc2\r\n\r\nThis seems to have solved my problem.\r\n\r\nI guess there is a bug in the conversion of substring functions, but I'm not sure.  \r\nI hope this post will help."}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12232", "title": "bug with OPTIONAL MATCH and DISTINCT", "closed": "2019-06-27 10:37:58", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2019-06-19 09:05:04", "user": "matthew-s-miller", "body": "I've discovered a query that uses OPTIONAL MATCH and DISTINCT for which cypher returns the wrong result\r\n\r\n**Neo4j Version:** 3.5.6\r\n**Operating System:** Windows 10\r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n1. Create the following data (note the different `:Bar`, `:Baz` labels used)\r\n```\r\nCREATE (f:Foo {uuid: 1})\r\nCREATE (f)-[:BAR]->(:Bar)-[:BEL]->(:Bel)\r\nCREATE (f)-[:BAR]->(:Baz)-[:BEL]->(:Bel)\r\n```\r\n2. Run this query:\r\n```\r\nOPTIONAL MATCH (foo:Foo {uuid: 1})-[:BAR]->(bar:Bar)-[:BEL]->(bel:Bel)\r\nRETURN COUNT(DISTINCT bel)\r\n```\r\n\r\n### Expected behavior\r\nThe result should be a count of **1**\r\n\r\n### Actual behavior\r\n a count of **2** is returned\r\n\r\n### Synopsis\r\nThe following versions of the query all return the correct result...\r\n```\r\nMATCH (foo:Foo {uuid: 1})-[:BAR]->(bar:Bar)-[:BEL]->(bel:Bel) RETURN COUNT(DISTINCT bel)\r\n```\r\n```\r\nOPTIONAL MATCH (foo:Foo {uuid: 1})-[:BAR]->(bar:Bar)-[:BEL]->(bel:Bel) RETURN COUNT(bel)\r\n```\r\n```\r\nOPTIONAL MATCH (foo:Foo)-[:BAR]->(bar:Bar)-[:BEL]->(bel:Bel) RETURN COUNT(DISTINCT bel)\r\n```\r\n\r\nAfter profiling the bad query, it seems that neo4j is omitting **Filter** steps from its execution plan"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/12229", "title": "Edge ID is the same if two nodes are connected multiple times", "closed": "2019-10-21 07:23:42", "commitsDetails": [], "commits": {}, "ttf": 135.00027777777777, "created": "2019-06-08 03:07:26", "user": "HashRocketSyntax", "body": "Neo4j Desktop 1.1.15\r\n\r\n### LIST API call on relationships\r\n\r\n[\r\n    {\r\n        \"id\": \"104\",\r\n        \"a_uid\": \"bf1b364d8b084f46ac42083a8a75ad95\",\r\n        \"b_uid\": \"e22d5b5b577a400faf93b724aafa23b1\"\r\n    },\r\n    {\r\n        \"id\": \"104\",\r\n        \"a_uid\": \"bf1b364d8b084f46ac42083a8a75ad95\",\r\n        \"b_uid\": \"e22d5b5b577a400faf93b724aafa23b1\"\r\n    },\r\n    {\r\n        \"id\": \"104\",\r\n        \"a_uid\": \"bf1b364d8b084f46ac42083a8a75ad95\",\r\n        \"b_uid\": \"e22d5b5b577a400faf93b724aafa23b1\"\r\n    },\r\n    {\r\n        \"id\": \"104\",\r\n        \"a_uid\": \"bf1b364d8b084f46ac42083a8a75ad95\",\r\n        \"b_uid\": \"e22d5b5b577a400faf93b724aafa23b1\"\r\n    },\r\n    {\r\n        \"id\": \"104\",\r\n        \"a_uid\": \"bf1b364d8b084f46ac42083a8a75ad95\",\r\n        \"b_uid\": \"e22d5b5b577a400faf93b724aafa23b1\"\r\n    },\r\n    {\r\n        \"id\": \"104\",\r\n        \"a_uid\": \"bf1b364d8b084f46ac42083a8a75ad95\",\r\n        \"b_uid\": \"e22d5b5b577a400faf93b724aafa23b1\"\r\n    }\r\n]\r\n\r\n### Two relationships same edge id\r\n\r\n(Pdb) relationships[0].id\r\n104\r\n(Pdb) relationships[1].id\r\n104\r\n\r\n\r\n(Pdb) relationships[0].start_node()\r\n<A: {'uid': 'bf1b364d8b084f46ac42083a8a75ad95', 'created_at': datetime.datetime(2019, 5, 19, 20, 51, 28, 944089, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 5, 19, 20, 51, 30, 887846, tzinfo=<UTC>),  'id': 90}>\r\n(Pdb) relationships[1].start_node()\r\n<A: {'uid': 'bf1b364d8b084f46ac42083a8a75ad95', 'created_at': datetime.datetime(2019, 5, 19, 20, 51, 28, 944089, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 5, 19, 20, 51, 30, 887846, tzinfo=<UTC>),  'id': 90}>\r\n\r\n(Pdb) relationships[0].end_node()\r\n<B: {'uid': 'e22d5b5b577a400faf93b724aafa23b1', 'created_at': datetime.datetime(2019, 5, 19, 20, 51, 23, 831198, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 5, 19, 20, 51, 26, 423874, tzinfo=<UTC>),  'id': 71}>\r\n(Pdb) relationships[1].end_node()\r\n<B: {'uid': 'e22d5b5b577a400faf93b724aafa23b1', 'created_at': datetime.datetime(2019, 5, 19, 20, 51, 23, 831198, tzinfo=<UTC>), 'updated_at': datetime.datetime(2019, 5, 19, 20, 51, 26, 423874, tzinfo=<UTC>), 'id': 71}>"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12228", "title": "Pagecache warmup significantly slower on v3.5.5", "closed": "2019-12-03 17:16:49", "commitsDetails": [], "commits": {}, "ttf": 179.00027777777777, "created": "2019-06-07 11:24:14", "user": "swayam18", "body": "After upgrading to 3.5.5 from 3.4.14 pagecache warmup takes considerably longer. I investigated this using iostat and I'll show my findings here:\r\n\r\nNeo4j version: 3.5.5 (enterprise)\r\nOS: Ubuntu 18.04\r\n\r\n### Steps to reproduce\r\n1. Setup neo4j 3.4.14\r\n2. Seed neo4j with atleast 100GB of data\r\n3. Stop neo4j\r\n4. Start neo4j, while running `iostat -m 1 -x`\r\n5. Note down `r/s, rMB/s, aqu-sz, rareq-sz` (read iops, read MBps, average queue size and average request size)\r\n6. Repeat steps 1 - 5 with Neo4j 3.5.5\r\n\r\n### Expected behavior\r\nThe iostats should be similar\r\n\r\n### Actual behavior\r\nNeo4j 3.5.6 iostats are much slower while warming page cache. We noticed that the average request size is 4-10 times smaller, average queue size hover around 1 and throughput is 8 times slower. \r\n\r\nNote: we ran this on identical hardware, so it doesn't seem to be a hardware issue. "}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12225", "title": "Cost planner prefers 2 NodeIndexSeek and CartesianProduct to Expand(All", "closed": "2019-09-03 09:06:42", "commitsDetails": [], "commits": {}, "ttf": 96.00027777777778, "created": "2019-05-30 06:56:06", "user": "frant-hartm", "body": "The cost planner fails to produce viable query plan on following query:\r\n\r\n```\r\nMATCH (k:Keyword)-[r:CONTAINS_KEYWORD]-(t:Tweet)\r\nWHERE k.value IN [{keywords}] AND t.created_date > {createdDate}\r\nRETURN t,k\r\n```\r\n\r\nwhere there are indexes on Keyword(value) and Tweet(created_date)\r\n\r\n**Neo4j Version:** 3.5.5 (both community and enterprise)\r\n**Operating System:** Ubuntu 18.04\r\n**API:** Browser\r\n\r\n### Steps to reproduce\r\n\r\nCreate indexes on \r\n```\r\nCREATE INDEX ON :Tweet(created_date)\r\nCREATE INDEX ON :Keyword(value)\r\n```\r\n\r\nGenerate some random data\r\n```\r\nunwind range (1, 100000) as i\r\ncreate (t:Tweet {created_date:timestamp()})\r\nwith t\r\nunwind range(1,10) as j\r\ncreate (k:Keyword {value:randomUUID()})\r\ncreate (t)-[:CONTAINS_KEYWORD]->(k)\r\n```\r\nGet some of the generated values, pass to followoing query\r\n```\r\nMATCH (t:Tweet)--(k:Keyword)\r\nRETURN t.created_date-1,k.value LIMIT 1\r\n```\r\n\r\nSee the query profile:\r\n```\r\nPROFILE\r\nMATCH (k:Keyword)-[r:CONTAINS_KEYWORD]-(t:Tweet)\r\nWHERE k.value IN ['a72e0d93-5445-444c-a022-455d7958e0a6'] AND t.created_date > 1559128418010\r\nreturn t,k\r\n```\r\n![Query plan](https://imgur.com/download/TvQfRJm)\r\n\r\nIt picks the wrong index to start with, fair enough. Let's provide the index hint.\r\n\r\n```\r\nPROFILE\r\nMATCH (k:Keyword)-[r:CONTAINS_KEYWORD]-(t:Tweet)\r\nUSING INDEX k:Keyword(value)\r\nWHERE k.value IN [\"25563f3e-8a89-46d5-bacb-ce8fce43cda2\"] AND t.created_date > 1559197470542\r\nRETURN t,k\r\n```\r\n![Query plan](https://imgur.com/download/wKPgpvK)\r\n\r\nNow it uses both indexes and does cartesian product, bad.\r\n\r\nI had to resort to following to trick the planner to execute the desired query plan, note that using only `WITH k,t` doesn't work, need to alias the `t.created_date as cd`\r\n\r\n```\r\nPROFILE\r\nMATCH (k:Keyword)-[r:CONTAINS_KEYWORD]-(t:Tweet)\r\nUSING INDEX k:Keyword(value)\r\nWHERE k.value IN [\"25563f3e-8a89-46d5-bacb-ce8fce43cda2\"]\r\nWITH k,t,t.created_date as cd\r\nWHERE cd > 1559197470542\r\nRETURN t,k\r\n```\r\n![Query plan](https://imgur.com/download/QXGjEHT)\r\n\r\n## Expected behaviour\r\n\r\nProduce the last query plan without any hints, or with `USING INDEX k:Keyword(value)` hint only.\r\n\r\nThe currently generated query plan might be suitable in certain cases, it should be achievable by using 2 index hints:\r\n```\r\nPROFILE\r\nMATCH (k:Keyword)-[r:CONTAINS_KEYWORD]-(t:Tweet)\r\nUSING INDEX k:Keyword(value)\r\nUSING INDEX t:Tweet(created_date)\r\nWHERE k.value IN [\"25563f3e-8a89-46d5-bacb-ce8fce43cda2\"] AND t.created_date > 1559197470542\r\nreturn t,k\r\n```"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/12224", "title": "Min() is broken?", "closed": "2019-06-03 06:57:53", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2019-05-29 17:22:28", "user": "bsquire0128", "body": "\r\nTo help us understand your issue, please specify important details, primarily:\r\n\r\n- Neo4j version: \r\n3.5.5 Enterprise\r\n- Operating system: Linux \r\n- **Steps to reproduce**\r\nIn some cases min always returns first position. This is especially problematic with instances where you want the min between two nodes such as the last example.\r\n###Doesn't work\r\nreturn min(6,4)\r\n6\r\n###Works\r\nreturn min(6.0,4.0)\r\n4.0\r\n###Works\r\nUNWIND [6,4] as val\r\nRETURN min(val)\r\n4\r\n##Doesn't work\r\nMatch (c1:Collision)-->(c2:Collision) where id(c1) < id(c2) return id(c1),id(c2), min(id(c2),id(c1)) as min limit 10\r\n- Expected behavior\r\nmin(6,4)\r\n4\r\nmin(6.0,4.0)\r\n4.0\r\nMatch (c1:Collision)-->(c2:Collision) where id(c1) < id(c2) return id(c1),id(c2), min(id(c2),id(c1)) as min limit 10\r\nid(c1)\r\n\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/12223", "title": "error on mvn install neo4j-io", "closed": "2019-06-10 12:40:19", "commitsDetails": [], "commits": {}, "ttf": 12.000277777777777, "created": "2019-05-28 13:24:23", "user": "bluejoe2008", "body": "when run unit tests on neo4j-io\r\nan error happens:\r\n```\r\n[ERROR] Tests run: 7, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.094 s <<< FAILURE! - in org.neo4j.test.extension.TestDirectoryExtensionTest\r\n[ERROR] exceptionOnDirectoryDeletionIncludeTestDisplayName  Time elapsed: 0.04 s  <<< FAILURE!\r\norg.opentest4j.AssertionFailedError: expected: <true> but was: <false>\r\n\tat org.junit.jupiter.api.AssertionUtils.fail(AssertionUtils.java:40)\r\n\tat org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:42)\r\n\tat org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:37)\r\n\tat org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:129)\r\n\tat org.neo4j.test.extension.TestDirectoryExtensionTest.exceptionOnDirectoryDeletionIncludeTestDisplayName(TestDirectoryExtensionTest.java:127)\r\n```\r\nit seems that `File.setReadonly()` failed\r\n\r\nEnvironment:\r\n\r\n- Neo4j version: branch 3.5\r\n- Operating system: CentOS Linux release 7.5.1804 (Core)\r\n\r\n### Steps to reproduce\r\n1.  cd community/io/\r\n2. mvn clean install\r\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12212", "title": "Occasional \"Found no solution for block with size 0\"", "closed": "2019-06-17 09:50:49", "commitsDetails": [], "commits": {}, "ttf": 45.000277777777775, "created": "2019-05-03 08:51:10", "user": "ch-egli", "body": "Since Version 3.5.1 we have occasionally the following error:\r\n` Found no solution for block with size 0,\r\nVector() were the selected candidates from the table IDPPlanTable(numberOfPlans=3, largestSolved=1)`\r\n\r\nThis problem did never occur with version 3.5.0. \r\n\r\n- Neo4j version: 3.5.1, 3.5.2, 3.5.3, 3.5.4 and 3.5.5 \r\n- Operating system: Windows 10 and Redhat Enterprise Linux 7\r\n- API/Driver: Cypher/Java API\r\n\r\n**Steps to reproduce** \r\n(unfortunately the error does not occur systematically, but only occasionally). \r\n\r\nCreate a Graph with the following statements (this is our testcase)\r\n`CREATE (:LinearElement {id: '00000000-0000-0000-0000-000000000001', bezeichnung: 'bez-00000000-0000-0000-0000-000000000001', spurweite: 'NORMALSPUR', uuidKey: 'uno-00000000-0000-0000-0000-000000000001'});\r\nCREATE (tps:TmsTrackPositioningSystem:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000001', startMeasure: 0, endMeasure: 15000});\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000001'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000001'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 0.0, measure: 0}]-(le);\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000001'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000001'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 1.0, measure: 15000}]-(le);\r\nCREATE (:LinearElement {id: '00000000-0000-0000-0000-000000000002', bezeichnung: 'bez-00000000-0000-0000-0000-000000000002', spurweite: 'NORMALSPUR', uuidKey: 'uno-00000000-0000-0000-0000-000000000002'});\r\nCREATE (tps:TmsTrackPositioningSystem:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000002', startMeasure: 0, endMeasure: 50000});\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000002'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000002'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 0.0, measure: 0}]-(le);\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000002'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000002'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 1.0, measure: 50000}]-(le);\r\nCREATE (:LinearElement {id: '00000000-0000-0000-0000-000000000003', bezeichnung: 'bez-00000000-0000-0000-0000-000000000003', spurweite: 'NORMALSPUR', uuidKey: 'uno-00000000-0000-0000-0000-000000000003'});\r\nCREATE (tps:TmsTrackPositioningSystem:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000003', startMeasure: 0, endMeasure: 10000});\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000003'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000003'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 0.0, measure: 0}]-(le);\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000003'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000003'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 1.0, measure: 10000}]-(le);\r\nCREATE (:LinearElement {id: '00000000-0000-0000-0000-000000000004', bezeichnung: 'bez-00000000-0000-0000-0000-000000000004', spurweite: 'NORMALSPUR', uuidKey: 'uno-00000000-0000-0000-0000-000000000004'});\r\nCREATE (tps:TmsTrackPositioningSystem:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000004', startMeasure: 0, endMeasure: 2000});\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000004'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000004'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 0.0, measure: 0}]-(le);\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000004'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000004'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 1.0, measure: 2000}]-(le);\r\nCREATE (:LinearElement {id: '00000000-0000-0000-0000-000000000005', bezeichnung: 'bez-00000000-0000-0000-0000-000000000005', spurweite: 'NORMALSPUR', uuidKey: 'uno-00000000-0000-0000-0000-000000000005'});\r\nCREATE (tps:TmsTrackPositioningSystem:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000005', startMeasure: 0, endMeasure: 30000});\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000005'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000005'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 0.0, measure: 0}]-(le);\r\nMATCH (tps:LinearPositioningSystem {id: '00000000-0000-0000-0000-000000000005'}) MATCH (le:LinearElement {id: '00000000-0000-0000-0000-000000000005'}) CREATE (tps)<-[:associatedWith {intrinsicCoord: 1.0, measure: 30000}]-(le);\r\nMATCH (lnA:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000003'}) MATCH (lnB:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000001'})CREATE (lnA)-[:PositionedRelation {   positionOnA: 0,    positionOnB: 0,   navigability: 'None'}]->(lnB);\r\nMATCH (lnA:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000002'}) MATCH (lnB:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000003'})CREATE (lnA)-[:PositionedRelation { idAB: '00000000-0000-0000-0003-000639755219', idBA: '00000000-0000-0000-0003-000191058579',    positionOnA: 0,    positionOnB: 0,   navigability: 'Both'}]->(lnB);\r\nMATCH (lnA:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000002'}) MATCH (lnB:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000001'})CREATE (lnA)-[:PositionedRelation { idAB: '00000000-0000-0000-0003-000639755217', idBA: '00000000-0000-0000-0003-000088451857',    positionOnA: 0,    positionOnB: 0,   navigability: 'Both'}]->(lnB);\r\nMATCH (lnA:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000003'}) MATCH (lnB:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000005'})CREATE (lnA)-[:PositionedRelation {   positionOnA: 1,    positionOnB: 1,   navigability: 'None'}]->(lnB);\r\nMATCH (lnA:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000004'}) MATCH (lnB:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000003'})CREATE (lnA)-[:PositionedRelation { idAB: '00000000-0000-0000-0003-000257638059', idBA: '00000000-0000-0000-0003-000191058581',    positionOnA: 1,    positionOnB: 1,   navigability: 'Both'}]->(lnB);\r\nMATCH (lnA:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000004'}) MATCH (lnB:LinearElement {uuidKey: 'uno-00000000-0000-0000-0000-000000000005'})CREATE (lnA)-[:PositionedRelation { idAB: '00000000-0000-0000-0003-000257638057', idBA: '00000000-0000-0000-0003-000706334697',    positionOnA: 1,    positionOnB: 1,   navigability: 'Both'}]->(lnB);\r\nCREATE (:TmsGleisknoten:NetEntity {bezeichnung: 'GK-1a', unoWeichenArt: 4, unoGleisknotenId: 1, koordinateX: 46.0, koordinateY: 46.0, id: '00000000-0000-0000-0004-000067849177'});\r\nMATCH (n:TmsGleisknoten {id: '00000000-0000-0000-0004-000067849177'})\r\nMATCH (linearElement:LinearElement {id: '00000000-0000-0000-0000-000000000003'}) \r\nCREATE (n)-[:locatedAt]->(location:SpotLocationIntrinsic:Rechts)-[association:associatedTo]->(linearElement)\r\n SET    association.intrinsicCoord = 0.0,   location.applicationDirection = 'both';\r\nMATCH (n:TmsGleisknoten {id: '00000000-0000-0000-0004-000067849177'}) \r\nMATCH (linearElement:LinearElement {id: '00000000-0000-0000-0000-000000000002'}) \r\nCREATE (n)-[:locatedAt]->(location:SpotLocationIntrinsic:Spitz)-[association:associatedTo]->(linearElement)\r\n SET    association.intrinsicCoord = 0.0,   location.applicationDirection = 'both';\r\nMATCH (n:TmsGleisknoten {id: '00000000-0000-0000-0004-000067849177'}) \r\nMATCH (linearElement:LinearElement {id: '00000000-0000-0000-0000-000000000001'}) \r\nCREATE (n)-[:locatedAt]->(location:SpotLocationIntrinsic:Links)-[association:associatedTo]->(linearElement)\r\n SET    association.intrinsicCoord = 0.0,   location.applicationDirection = 'both';\r\nCREATE (:TmsGleisknoten:NetEntity {bezeichnung: 'GK-1b', unoWeichenArt: 4, unoGleisknotenId: 2, koordinateX: 44.0, koordinateY: 44.0, id: '00000000-0000-0000-0004-000067849178'});\r\nMATCH (n:TmsGleisknoten {id: '00000000-0000-0000-0004-000067849178'}) \r\nMATCH (linearElement:LinearElement {id: '00000000-0000-0000-0000-000000000003'}) \r\nCREATE (n)-[:locatedAt]->(location:SpotLocationIntrinsic:Links)-[association:associatedTo]->(linearElement)\r\n SET    association.intrinsicCoord = 1.0,   location.applicationDirection = 'both';\r\nMATCH (n:TmsGleisknoten {id: '00000000-0000-0000-0004-000067849178'}) \r\nMATCH (linearElement:LinearElement {id: '00000000-0000-0000-0000-000000000004'}) \r\nCREATE (n)-[:locatedAt]->(location:SpotLocationIntrinsic:Spitz)-[association:associatedTo]->(linearElement)\r\n SET    association.intrinsicCoord = 1.0,   location.applicationDirection = 'both';\r\nMATCH (n:TmsGleisknoten {id: '00000000-0000-0000-0004-000067849178'}) \r\nMATCH (linearElement:LinearElement {id: '00000000-0000-0000-0000-000000000005'}) \r\nCREATE (n)-[:locatedAt]->(location:SpotLocationIntrinsic:Rechts)-[association:associatedTo]->(linearElement)\r\n SET    association.intrinsicCoord = 1.0,   location.applicationDirection = 'both';\r\n`\r\n\r\nRun the following statement (that creates two new nodes): \r\n`WITH 20000 AS longDistanceMM, 5000 AS shortDistanceMM\r\nMATCH (gknA:TmsGleisknoten {unoWeichenArt: 4})-[:locatedAt]->(:SpotLocationIntrinsic)-[:associatedTo]->(commonLe:LinearElement)\r\n  <-[:associatedTo]-(:SpotLocationIntrinsic)<-[:locatedAt]-(gknB:TmsGleisknoten {unoWeichenArt: 4})\r\n  WHERE NOT exists( (gknA)<-[:isLinkedTo]-(:SaWeiche) ) AND NOT exists( (gknB)<-[:isLinkedTo]-(:SaWeiche) ) \r\n  AND substring(gknA.bezeichnung, 0, size(gknA.bezeichnung) - 1) = substring(gknB.bezeichnung, 0, size(gknB.bezeichnung) - 1)\r\n  AND gknA.unoGleisknotenId < gknB.unoGleisknotenId\r\nMATCH (gknA)-[:locatedAt]->(:SpotLocationIntrinsic)-[assocA:associatedTo]->(toExtendLongA:LinearElement)-[:PositionedRelation {navigability: 'None'}]-(commonLe)\r\nMATCH (gknB)-[:locatedAt]->(:SpotLocationIntrinsic)-[assocB:associatedTo]->(toExtendLongB:LinearElement)-[:PositionedRelation {navigability: 'None'}]-(commonLe)\r\nMATCH (gknA)-[:locatedAt]->(:Spitz)-[assocSpitzA:associatedTo]->(spitzA:LinearElement)\r\nMATCH (gknB)-[:locatedAt]->(:Spitz)-[assocSpitzB:associatedTo]->(spitzB:LinearElement)\r\nWITH gknA, gknB, longDistanceMM, shortDistanceMM,\r\n [{\r\n    linearElement: toExtendLongA,\r\n    fromIntrinsic: assocA.intrinsicCoord,\r\n    fromDirection: CASE WHEN assocA.intrinsicCoord = 0.0 THEN 'normal' ELSE 'reverse' END,\r\n    inboundDirection: CASE WHEN assocA.intrinsicCoord = 0.0 THEN 'reverse' ELSE 'normal' END,\r\n    distanceMM: longDistanceMM    \r\n  }, {\r\n    linearElement: toExtendLongB,\r\n    fromIntrinsic: assocB.intrinsicCoord,\r\n    fromDirection: CASE WHEN assocB.intrinsicCoord = 0.0 THEN 'normal' ELSE 'reverse' END,\r\n    inboundDirection: CASE WHEN assocB.intrinsicCoord = 0.0 THEN 'reverse' ELSE 'normal' END,\r\n    distanceMM: longDistanceMM\r\n  }, {\r\n    linearElement: spitzA,\r\n    fromIntrinsic: assocSpitzA.intrinsicCoord,\r\n    fromDirection: CASE WHEN assocSpitzA.intrinsicCoord = 0.0 THEN 'normal' ELSE 'reverse' END,\r\n    inboundDirection: CASE WHEN assocSpitzA.intrinsicCoord = 0.0 THEN 'reverse' ELSE 'normal' END,\r\n    distanceMM: shortDistanceMM\r\n  }, {\r\n    linearElement: spitzB,\r\n    fromIntrinsic: assocSpitzB.intrinsicCoord,\r\n    fromDirection: CASE WHEN assocSpitzB.intrinsicCoord = 0.0 THEN 'normal' ELSE 'reverse' END,\r\n    inboundDirection: CASE WHEN assocSpitzB.intrinsicCoord = 0.0 THEN 'reverse' ELSE 'normal' END,\r\n    distanceMM: shortDistanceMM\r\n  }] AS bounds\r\nCREATE (gknA)<-[:isLinkedTo]-(newSaWeiche:SaWeiche:NetEntity)-[:isLinkedTo]->(gknB)\r\n  SET newSaWeiche = {\r\n    uuidKey: gknA.id + '-' + gknB.id,\r\n    bezeichnung: substring(gknA.bezeichnung, 0, size(gknA.bezeichnung) - 1),\r\n    datenGrundlage: 'TMS_HEURISTIK', \r\n    typ: 'EKW'\r\n  }\r\nCREATE (newSaWeiche)-[:locatedAt]->(areaLocation:AreaLocationIntrinsic:SaWeicheSicherheitsbereich)\r\nWITH bounds, areaLocation\r\nUNWIND bounds AS bound\r\nWITH areaLocation, bound, bound.linearElement AS linearElement, bound.inboundDirection AS inboundDirection,\r\n  topo.position.intrinsicToRealTms(bound.linearElement, bound.fromIntrinsic, bound.fromDirection) AS tmsPos\r\nWITH areaLocation, bound, linearElement, tmsPos,\r\n  topo.position.addDistanceOnSameElement(tmsPos.positioningSystem, tmsPos.measure, bound.distanceMM, tmsPos.direction) AS boundedTo\r\nWITH areaLocation, bound, linearElement, tmsPos, \r\n  topo.position.tmsToIntrinsic(tmsPos.positioningSystem, boundedTo, bound.inboundDirection) AS newIntrinsicCoord\r\nCREATE (areaLocation)-[boundRel:boundedBy]->(linearElement)\r\nSET boundRel.inboundDirection = bound.inboundDirection, boundRel.intrinsicCoord = newIntrinsicCoord.intrinsicCoord`\r\n\r\n- Expected behavior:\r\nCreates two new nodes\r\n\r\n- Actual behavior:\r\n` Found no solution for block with size 0,\r\nVector() were the selected candidates from the table IDPPlanTable(numberOfPlans=3, largestSolved=1)`\r\n\r\n- The execution in a Java Test Case produces the following error: \r\n`java.lang.RuntimeException: java.lang.IllegalStateException: Found no solution for block with size 0,\r\nVector() were the selected candidates from the table IDPPlanTable(numberOfPlans=4, largestSolved=2)\r\n\r\n\tat org.neo4j.ogm.drivers.embedded.request.EmbeddedRequest.executeRequest(EmbeddedRequest.java:159)\r\n\tat org.neo4j.ogm.drivers.embedded.request.EmbeddedRequest.execute(EmbeddedRequest.java:143)\r\n\tat org.neo4j.ogm.session.delegates.ExecuteQueriesDelegate.lambda$query$0(ExecuteQueriesDelegate.java:108)\r\n\tat org.neo4j.ogm.session.Neo4jSession.doInTransaction(Neo4jSession.java:579)\r\n\tat org.neo4j.ogm.session.Neo4jSession.doInTransaction(Neo4jSession.java:558)\r\n\tat org.neo4j.ogm.session.delegates.ExecuteQueriesDelegate.query(ExecuteQueriesDelegate.java:106)\r\n\tat org.neo4j.ogm.session.delegates.ExecuteQueriesDelegate.query(ExecuteQueriesDelegate.java:86)\r\n\tat org.neo4j.ogm.session.Neo4jSession.query(Neo4jSession.java:418)\r\n\tat sun.reflect.GeneratedMethodAccessor115.invoke(Unknown Source)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.springframework.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:282)\r\n\tat org.springframework.data.neo4j.transaction.SharedSessionCreator$SharedSessionInvocationHandler.lambda$invoke$0(SharedSessionCreator.java:108)\r\n\tat org.springframework.data.neo4j.transaction.SharedSessionCreator$SharedSessionInvocationHandler.invokeInTransaction(SharedSessionCreator.java:139)\r\n\tat org.springframework.data.neo4j.transaction.SharedSessionCreator$SharedSessionInvocationHandler.invoke(SharedSessionCreator.java:110)\r\n\tat com.sun.proxy.$Proxy160.query(Unknown Source)\r\n\tat ch.sbb.tms.topo.gleisnetz.importer.TestImporterSession.query(TestImporterSession.java:97)\r\n\tat ch.sbb.tms.topo.gleisnetz.gleisabhaengigkeiten.importer.SaWeicheImportRepository.createSyntheticSaWeichenEinfacheKreuzungsWeichen(SaWeicheImportRepository.java:204)\r\n\tat ch.sbb.tms.topo.gleisnetz.gleisabhaengigkeiten.importer.SyntheticEkwSaWeichenImporterIT.generateSyntheticSaWeichenForEinfacheKreuzungsWeichen(SyntheticEkwSaWeichenImporterIT.java:91)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\r\n\tat org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\r\n\tat org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\r\n\tat org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestExecutionCallbacks.evaluate(RunBeforeTestExecutionCallbacks.java:74)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestExecutionCallbacks.evaluate(RunAfterTestExecutionCallbacks.java:84)\r\n\tat org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestMethodCallbacks.evaluate(RunBeforeTestMethodCallbacks.java:75)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestMethodCallbacks.evaluate(RunAfterTestMethodCallbacks.java:86)\r\n\tat org.springframework.test.context.junit4.statements.SpringRepeat.evaluate(SpringRepeat.java:84)\r\n\tat org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:251)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.runChild(SpringJUnit4ClassRunner.java:97)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.springframework.test.context.junit4.statements.RunBeforeTestClassCallbacks.evaluate(RunBeforeTestClassCallbacks.java:61)\r\n\tat org.springframework.test.context.junit4.statements.RunAfterTestClassCallbacks.evaluate(RunAfterTestClassCallbacks.java:70)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.springframework.test.context.junit4.SpringJUnit4ClassRunner.run(SpringJUnit4ClassRunner.java:190)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)\r\n\tat com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)\r\n\tat com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)\r\nCaused by: java.lang.IllegalStateException: Found no solution for block with size 0,\r\nVector() were the selected candidates from the table IDPPlanTable(numberOfPlans=4, largestSolved=2)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPSolver$$anonfun$findBestCandidateInBlock$1$1.apply(IDPSolver.scala:87)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPSolver$$anonfun$findBestCandidateInBlock$1$1.apply(IDPSolver.scala:87)\r\n\tat scala.Option.getOrElse(Option.scala:121)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPSolver.findBestCandidateInBlock$1(IDPSolver.scala:86)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPSolver.apply(IDPSolver.scala:108)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.SingleComponentPlanner.planComponent(SingleComponentPlanner.scala:66)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver$$anonfun$planComponents$1.apply(IDPQueryGraphSolver.scala:80)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver$$anonfun$planComponents$1.apply(IDPQueryGraphSolver.scala:79)\r\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\r\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:893)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\r\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\r\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\r\n\tat scala.collection.AbstractTraversable.map(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver.planComponents(IDPQueryGraphSolver.scala:79)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver.plan(IDPQueryGraphSolver.scala:59)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.planPart$.apply(QueryPlanner.scala:127)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.PlanWithTail.apply(PlanWithTail.scala:43)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.PlanSingleQuery.apply(PlanSingleQuery.scala:57)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner$$anonfun$1.apply(QueryPlanner.scala:106)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner$$anonfun$1.apply(QueryPlanner.scala:104)\r\n\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\r\n\tat scala.collection.immutable.List.foldLeft(List.scala:84)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.planQueries(QueryPlanner.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.plan(QueryPlanner.scala:94)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.process(QueryPlanner.scala:72)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.process(QueryPlanner.scala:33)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.Phase$$anonfun$transform$1.apply(Phase.scala:36)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.helpers.package$$anonfun$closing$1.apply(package.scala:24)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.helpers.package$$anonfun$closing$1.apply(package.scala:24)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.helpers.package$.using(package.scala:32)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.helpers.package$.closing(package.scala:24)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.Phase$class.transform(Phase.scala:35)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.transform(QueryPlanner.scala:33)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.PipeLine.transform(Transformer.scala:60)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.PipeLine.transform(Transformer.scala:60)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.PipeLine.transform(Transformer.scala:60)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.PipeLine.transform(Transformer.scala:60)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.PipeLine.transform(Transformer.scala:64)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.If.transform(Transformer.scala:89)\r\n\tat org.neo4j.cypher.internal.v3_5.frontend.phases.PipeLine.transform(Transformer.scala:64)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.CypherPlanner.planPreparedQuery(CypherPlanner.scala:57)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1.org$neo4j$cypher$internal$compatibility$v3_5$Cypher35Planner$$anonfun$$createPlan$1(Cypher35Planner.scala:162)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1$$anonfun$7.apply(Cypher35Planner.scala:180)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1$$anonfun$7.apply(Cypher35Planner.scala:180)\r\n\tat org.neo4j.cypher.internal.QueryCache.compileAndCache(QueryCache.scala:167)\r\n\tat org.neo4j.cypher.internal.QueryCache.computeIfAbsentOrStale(QueryCache.scala:126)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1.apply(Cypher35Planner.scala:178)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1.apply(Cypher35Planner.scala:124)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:89)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner.parseAndPlan(Cypher35Planner.scala:124)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler.compile(CypherCurrentCompiler.scala:83)\r\n\tat org.neo4j.cypher.internal.MasterCompiler.innerCompile$1(MasterCompiler.scala:115)\r\n\tat org.neo4j.cypher.internal.MasterCompiler.compile(MasterCompiler.scala:150)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine$$anonfun$compilers$3.apply(ExecutionEngine.scala:137)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine$$anonfun$compilers$3.apply(ExecutionEngine.scala:137)\r\n\tat org.neo4j.cypher.internal.QueryCache.compileAndCache(QueryCache.scala:167)\r\n\tat org.neo4j.cypher.internal.QueryCache.computeIfAbsentOrStale(QueryCache.scala:126)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.getOrCompile(ExecutionEngine.scala:157)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:96)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:85)\r\n\tat org.neo4j.graphdb.facade.spi.ClassicCoreSPI.executeQuery(ClassicCoreSPI.java:84)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacade.execute(GraphDatabaseFacade.java:421)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacade.execute(GraphDatabaseFacade.java:404)\r\n\tat org.neo4j.ogm.drivers.embedded.request.EmbeddedRequest.executeRequest(EmbeddedRequest.java:155)\r\n\t... 49 more\r\n`"}, {"labels": ["3.5", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12209", "title": "Neo4J Version 3.5.4 Doesn't Use Index", "closed": "2019-05-01 14:58:51", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2019-05-01 02:58:24", "user": "scottmanny", "body": "We have enterprise edition of 3.5.4 installed in a 5 core cluster (and/ 4 read nodes).  With this version we have noticed that Neo does not use the index whenever the parameters are in the WHERE IN clause of the query.  Please see the attached document for a very detailed and simple example.\r\n\r\nThe strange thing here is that we did not experience this slowness until just recently.  And now our entire system is unusable since we have a number of apps that use the WHERE IN clause.  The EC2 instances that our Neo4J database run on are at 100% CPU usage and some times cause neo itself to crash. Please give us some guidance as to how to address this and reach out if you have any questions.\r\n\r\nNeo4j Version: 3.5.4-enterprise.\r\n[Neo4J - Indexing Issue.pdf](https://github.com/neo4j/neo4j/files/3133726/Neo4J.-.Indexing.Issue.pdf)\r\n"}, {"labels": ["bug", "cypher", "team-cypher"], "filteredCommits": ["2500922147b41c7b3bfa4029e59339813417a6ca"], "url": "https://github.com/neo4j/neo4j/issues/12195", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 6, "deletions": 3}, "numCommits": 1, "commits": {"2500922147b41c7b3bfa4029e59339813417a6ca": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "referenced"}}, "ttf": 38.000277777777775, "user": "sinanoezdemir", "changesInPackagesGIT": ["community/cypher/cypher-logical-plans-3.5/src/main/scala/org/neo4j/cypher/internal"], "body": "## Tried to map bad logical plan\r\n\r\nI am receiving a database error by executing the following cypher statement. \r\n \r\n**Neo4j Version:** 3.5.0  \r\n**Operating System:** Docker -> Alpine Linux 3.9.2  \r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n1. Fill the database with a domain specific data. As of right know I can not provide that data here. \r\n2. Execute query: \r\nMATCH (a:SomeLabel)<-[relA:someRelation]-(c)\r\nMATCH (b:SomeLabel)<-[relB:someRelation]-(c)\r\n  WHERE (a.someStringId = b.someStringId AND relA.someIntValue < relB.someIntValue)\r\n  OR a.someStringId < b.someStringId \r\nreturn *\r\n3. Logs: [modofied_log.txt](https://github.com/neo4j/neo4j/files/3053856/modofied_log.txt)\r\n\r\n### Additional Information\r\n\r\n- Wrapping the values in the OR statement with toString() resolves that issue. \r\nMATCH (a:SomeLabel)<-[relA:someRelation]-(c)\r\nMATCH (b:SomeLabel)<-[relB:someRelation]-(c)\r\n  WHERE (a.someStringId = b.someStringId AND relA.someIntValue < relB.someIntValue)\r\n  OR **_toString(a.someStringId) < toString(b.someStringId)_** \r\nreturn * \r\n- This error only occurred by having more than 2000 nodes and 4000 relationships. \r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Tried to map bad logical plan. LHS and RHS must never be the same", "statsSkippedReason": "", "closed": "2019-05-16 11:46:37", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2019-05-16 13:14:06", "commitHash": "2500922147b41c7b3bfa4029e59339813417a6ca", "commitParents": ["21702ef4844ea820a38df5c6a9fea72190ad7f9c"], "commitGHEventType": "referenced", "nameRev": "2500922147b41c7b3bfa4029e59339813417a6ca tags/3.5.6~25", "commitGitStats": [{"insertions": 3, "lines": 6, "filePath": "community/cypher/cypher-logical-plans-3.5/src/main/scala/org/neo4j/cypher/internal/v3_5/logical/plans/LogicalPlans.scala", "deletions": 3}], "commitSpoonAstDiffStats": [], "commitMessage": "Allow equal plans on LHS and RHS, if they are unique instances.\n\nFixes #12195\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2019-05-14 16:00:05"}], "created": "2019-04-08 10:40:29"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12182", "title": "FOREACH CASE /MERGE after query/match using apoc.load.jsonParams generates ExecutionFailed error", "closed": "2019-04-17 07:46:50", "commitsDetails": [], "commits": {}, "ttf": 31.00027777777778, "created": "2019-03-16 17:53:43", "user": "pdrangeid", "body": "\r\n- Neo4j version: 3.5.3\r\n- Operating system: Windows 10\r\n- API/Driver: Neo4J Browser\r\n\r\n\r\nIf I run this with the \"FOREACH\" line commented out, it runs just fine. If I leave the FOREACH in I receive this error:\r\nNeo.DatabaseError.Statement.ExecutionFailed: Expressions need to be registered with it's owning Pipe, so the profiling knows where to report db-hits\r\n\r\n### Steps to reproduce\r\nRun a query as below and attempt to perform FOREACH case evaluation to perform a MERGE\r\n```\r\nMATCH (n:Clientdomain)--(a:Company {name:'Some Company'})--(kba:Knowbe4account)\r\nOPTIONAL MATCH (cnp:Contact {name:'None Provided'})\r\nWITH a,kba,cnp,\"super-secret-token\" as token,\"https://us.api.knowbe4.com/v1/users\" as url\r\nCALL apoc.load.jsonParams(url,{Authorization:\"Bearer \"+token,Accept:\"application/json\"},null) yield value\r\nOPTIONAL MATCH (c:Contact)--(a) where toLower(trim(value.email)) = toLower(trim(c.email))\r\nOPTIONAL MATCH (c2:Contact)--(a) where toLower(trim(c.name)) = toLower(trim(value.first_name))+' '+toLower(trim(value.last_name))\r\nFOREACH (ignoreMe in CASE WHEN not((kba)--(c)) and exists(c.acctrecid) THEN [1] ELSE [] END | MERGE (kba)-[:KNOWBEFORE_USER]-(c))\r\nreturn c,kba\r\n```\r\n\r\n### Expected behavior\r\nMATCH results will run against the CASE validation and MERGE where properties exisat\r\n\r\n### Actual behavior\r\nThe following Cypher exception is generated:\r\nNeo.DatabaseError.Statement.ExecutionFailed: Expressions need to be registered with it's owning Pipe, so the profiling knows where to report db-hits\r\n"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12154", "title": "java.lang.ClassNotFoundException: org.neo4j.cypher.internal.frontend.v3_4", "closed": "2019-02-26 15:29:48", "commitsDetails": [], "commits": {}, "ttf": 18.00027777777778, "created": "2019-02-07 21:03:01", "user": "rimmmmm", "body": "Hi all\r\nI would like to run a scala code which uses CAPS (cypher for spark)\r\nI added many jars including \r\n_ neo4j-cypher-frontend-3.3-3.3.4.jar\r\n_neo4j-cypher-frontend-3.4-3.4.0-alpha08.jar\r\nbut none resolves the following not found class \r\njava.lang.ClassNotFoundException: org.neo4j.cypher.internal.frontend.v3_4.semantics.SemanticFeature$Cypher10Support$\r\nbest"}, {"labels": ["3.5", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12149", "title": "Neo4J 3.5 :  Query Execution Failure when using List Expansions in Where Clauses on Indexed Properties", "closed": "2019-02-06 07:32:50", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2019-01-30 15:25:07", "user": "otgitelr", "body": "## Query Execution Failure when using List Expansions in Where Clauses on Indexed properties\r\n\r\nWhen using a list expansion in a where clause on an indexed property, Neo4J throws an error: Neo.DatabaseError.Statement.ExecutionFailed.  Removing the index/constraint allows the query to execute successfully.  Prefix the query with `CYPHER runtime=interpreted` and it also executes successfully.\r\n\r\n**Neo4j Version:** 3.5.0-enterprise, 3.5.1-enterprise, 3.5.2-enterprise\r\n**Operating System:** Alpine (openjdk:8-jre-alpine) via Docker\r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n1. Pull the image: `docker pull neo4j/neo4j:3.5.0-enterprise`\r\n2. Start a new container: `docker run -d -e NEO4J_ACCEPT_LICENSE_AGREEMENT=yes --name neo4j-test -p 7474:7474 -p 7687:7687 neo4j:3.5.0-enterprise`\r\n3. Change the default password via cypher-shell: `echo \"CALL dbms.changePassword('testing');\" | cypher-shell -u neo4j -p neo4j`\r\n4. Start a cypher-shell session using the new password: `cypher-shell -u neo4j -p testing`\r\n5. Execute the following statements and observe the results:\r\n  * `CREATE (a:Album { Name: \"Piece of Mind\", lc_name: \"piece of mind\"}) CREATE (b:Album { Name: \"Somewhere in Time\", lc_name: \"somewhere in time\"}) RETURN a,b;`\r\n  * `MATCH (a:Album) WHERE a.lc_name IN [ id IN [\"Somewhere in Time\",\"Piece of Mind\",\"Killers\"] | toLower(id) ] WITH a {ref: a.Name,id:a.lc_name} RETURN COLLECT(a) AS Map;\r\nCREATE INDEX ON :Album(lc_name);`\r\n  * `MATCH (a:Album) WHERE a.lc_name IN [ id IN [\"Somewhere in Time\",\"Piece of Mind\",\"Killers\"] | toLower(id) ] WITH a {ref: a.Name,id:a.lc_name} RETURN COLLECT(a) AS Map;`\r\n  * `CYPHER runtime=interpreted MATCH (a:Album) WHERE a.lc_name IN [ id IN [\"Somewhere in Time\",\"Piece of Mind\",\"Killers\"] | toLower(id) ] WITH a {ref: a.Name,id:a.lc_name} RETURN COLLECT(a) AS Map;`\r\n  * `DROP INDEX ON :Album(lc_name);`\r\n  * `MATCH (a:Album) WHERE a.lc_name IN [ id IN [\"Somewhere in Time\",\"Piece of Mind\",\"Killers\"] | toLower(id) ] WITH a {ref: a.Name,id:a.lc_name} RETURN COLLECT(a) AS Map;`\r\n\r\n### Expected behavior\r\nAfter creating an index on :Album(lc_name), matching the records using a list expansion should return the list of matched nodes.\r\n\r\n### Actual behavior\r\nAfter creating an index on :Album(lc_name), matching the records using a list expansion returns an execution failure: `Ouch, no suitable slot for key id = String(\"Somewhere in Time\")\r\nSlots: SlotConfiguration(longs=0, refs=0, slots=Map(), cachedProperties=Map())`\r\n\r\n### Stack Traces & Sessions\r\n[neo4j-3.5.0-enterprise-stack-trace.txt](https://github.com/neo4j/neo4j/files/2813192/neo4j-3.5.0-enterprise-stack-trace.txt)\r\n[neo4j-3.4.12-enterprise-cypher-session.txt](https://github.com/neo4j/neo4j/files/2813193/neo4j-3.4.12-enterprise-cypher-session.txt)\r\n[neo4j-3.5.0-enterprise-cypher-session.txt](https://github.com/neo4j/neo4j/files/2813194/neo4j-3.5.0-enterprise-cypher-session.txt)"}, {"labels": ["3.5", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12148", "title": "Neo4j 3.5.2 `key not found` error ", "closed": "2019-02-20 16:07:03", "commitsDetails": [], "commits": {}, "ttf": 21.00027777777778, "created": "2019-01-29 17:50:41", "user": "causaly1", "body": "After upgrading Neo4j to 3.5.1 (and then 3.5.2), we found that a query no longer works as expected (see \"Steps to reproduce\").  Instead of returning successfully, the following error is returned: `error: Neo4jError: key not found:   a@7`.\r\n\r\nIt is possible to avoid this error by replacing `sa` on line 11 with another name that is unique to the query.  The error can also be avoided by removing either: the `DISTINCT` keyword on line 10 , or `sa.f1 = \"TEST\" AND ` on line 26 of the query.  We saw nothing in any recent release notes to suggest that this behavior is intentional, and so believe that this might be a bug.\r\n\r\nEdit:  We believe that the error is due to the fact that `sa` on line 11 can sometimes be `NULL`.\r\n\r\n- **Neo4j version**: 3.5.2\r\n- **Operating system**: Ubuntu 16.04\r\n- **API/Driver**:  Cypher\r\n\r\n### Steps to reproduce:\r\nExecute the following Cypher query on a non-empty database:\r\n\r\n```\r\nMATCH (a:A)<-[:R1]-(d:B)<-[R2]-(c:C)<\r\n-[:R3]-(e:E)\r\nWHERE \r\n    NOT a:L1 \r\n    AND NOT (c)<-[:R3]-(:F) \r\n    AND (a.f1 = \"TEST\") \r\n    \r\nMATCH (a)-[:R4]->(g:G)-[:R1]->\r\n(pg:G) \r\nWITH DISTINCT \r\n    a AS sa, \r\n    g AS sG, \r\n    pg AS spg,\r\n    d AS d_c, \r\n    c, \r\n    e.f2 as f2\r\nORDER BY c.f3 DESC \r\nLIMIT 200000 \r\n\r\nMATCH (sa)<-[:R1]-(d_c)<--(c)<-\r\n[R2]-(sb:B)-[:R1]->(a:A)-[:R4]->\r\n(g:G)-[:R1]->(pg:G) \r\nWHERE \r\n    NOT a:L1 \r\n    AND (\r\n        (sa.f1 = \"TEST\" AND g.f4 = \"TEST2\")) \r\n\r\nRETURN COUNT(*)\r\n```\r\n### Expected behavior\r\nThis query should return something\r\n\r\n### Actual behavior\r\nQuery execution fails, and the following error is returned: `error: Neo4jError: key not found:   a@7`"}, {"labels": ["3.5", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12138", "title": "ORDER BY requires property to be RETURNed as well", "closed": "2019-02-05 10:59:25", "commitsDetails": [], "commits": {}, "ttf": 19.00027777777778, "created": "2019-01-17 07:01:01", "user": "rickardoberg", "body": "Neo4j version: 3.5.1 Community\r\nOS: OSX dev, but same in Ubuntu 16.04 prod\r\nAPI: embedded Cypher\r\n\r\nSteps:\r\nWe have a query that looks up a few nodes and does a WITH (one node is computed hence the WITH), then an immediate RETURN and ORDER BY. The catch is that the order by is two properties, the first of which is a property on a node which is not RETURNed (the computed node), the property is only used for ordering. The exact query is as follows:\r\n`MATCH (:Thread {id:$thread_id})-[:HAS_COMMENT]->(comment:Comment)<-[:COMMENTED]-(user:User)\r\nWHERE comment.is_deleted=false \r\nOPTIONAL MATCH (viewer:User {id:$user_id}) \r\nWITH comment, user, viewer, coalesce(head(extract(p IN (comment)-[:REPLY_TO]->() | (nodes(p)[1]))), comment) as reply_to \r\nRETURN comment.id as id, comment.comment as comment, comment.created_on as created_on,user.given_name as given_name, user.family_name as family_name, exists((comment)<-[:DISLIKED_COMMENT]-(viewer)) as disliked, exists((comment)<-[:LIKED_COMMENT]-(viewer)) as liked,size((comment)<-[:DISLIKED_COMMENT]-()) as dislike_count, size((comment)<-[:LIKED_COMMENT]-()) as like_count, comment.replies_count as replies_count, head(extract(p IN (comment)-[:REPLY_TO]->() | (nodes(p)[1]).id)) as reply_to_id \r\nORDER BY reply_to.created_on DESC, comment.created_on ASC`\r\n\r\nThis is for sorting comments in a discussion forum. Top comments are sorted new to old, replies are sorted with their top level comments old to new.\r\n\r\nExpected:\r\nORDER BY the reply_to.created_on property, then comment.created_on. This worked in 3.4.x\r\n\r\nActual:\r\nthe ORDER BY on reply_to.created_on is ignored\r\n\r\nWorkaround:\r\nIf I add \", reply_to.created_on as reply_to_created_on\" at the end of RETURN it works as expected. So it looks like ORDER BY requires the property to be touched by RETURN. If I return another property from reply_to it doesn't work.\r\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12113", "title": "3.4.10 -> 3.5.0 Differing results. Bad Cartesian?", "closed": "2019-01-30 12:24:05", "commitsDetails": [], "commits": {}, "ttf": 41.000277777777775, "created": "2018-12-19 18:18:17", "user": "senica", "body": "***Note** that I am using docker in all the version references below*\r\n\r\nOriginal question posted here: [https://community.neo4j.com/t/3-5-0-ent-cartesian-error/3935/11](https://community.neo4j.com/t/3-5-0-ent-cartesian-error/3935/11)\r\n\r\n- Neo4j version: **3.5.0-enterprise** (latest known working version is **3.4.10-enterprise** and down to 3.3.3 which is what we are upgrading from)\r\n- Operating system: (OSX and Ubuntu and Docker Neo4j)\r\n- API/Driver: NodeJS neo4-driver **1.7.2** and neo4j browser\r\n\r\n## Steps to Reproduce\r\n\r\n- Open Neo4j Browser\r\n- Create necessary nodes:\r\n```\r\nMERGE (c:company {uuid: '1'})\r\nMERGE (u:user {uuid: '1'})-[:allowed_to]-(c)\r\nMERGE (a:account {uuid: '1'})<-[:allows]-(c)\r\nMERGE (u)-[:owns]->(r:receivable)<-[:allows]-(c)\r\nON CREATE SET r += {created_at:1545237102415, description:'Yay!', discount_total:0.0, first_payment_due_date:1547915496123, first_payment_rate:100.0, first_payment_type:'percentage', paid:30.0, payment_rate:100.0, payment_schedule:'monthly', payment_type:'percentage', quantity:1.0, rate:125.0, status:'partial', subtotal:125.0, tax_total:0.0, total:125.0, unpaid:95.0, updated_at:1545237102415, uuid:'1'}\r\nMERGE (u)-[:owns]->(p:payment_voucher)<-[:allows]-(c)\r\nON CREATE SET p += {amount:125.0, created_at:1545237102463, due_date:1547915496123, paid:30.0, status:'partial', unpaid:95.0, updated_at: 545237102463, uuid: '1'}\r\nMERGE (p)-[:bills]->(r)\r\nMERGE (r)-[:references]->(pr:product)-[:deposits]->(a)\r\nON CREATE SET pr += {buyable: false, description: 'nice', rate: 175, sellable: true, title: 'Labor', updated_at:1545237102463 , uuid: '1'}\r\nRETURN *\r\n```\r\n- Set params using `:params { uid: '1', cid: '1', account: '1', data:  { uuid: '1', created_at: 1545237602363, updated_at: 1545237602363, amount: 10, payment_date: 1545237589720, method: 'check' }, now: 1545237602363, distribution:  [ { payment_voucher: '1', amount: 10, uuid: '1', created_at: 1545237602363, updated_at: 1545237602363 } ] }`\r\n- Run the query:\r\n```\r\nMATCH (u:user {uuid: $uid})-[:allowed_to]->(c:company {uuid: $cid})\r\n    CREATE (u)-[:owns]->(p:payment $data)<-[:allows]-(c)\r\n    WITH *\r\n    MATCH (a:account {uuid: $account})<-[:allows]-(c)\r\n\r\n    WITH u, c, p, a\r\n    UNWIND $distribution as distribution\r\n    MATCH (pv:payment_voucher {uuid: distribution.payment_voucher})-[:bills]->(r:receivable)\r\n    MATCH (r)-[:references]->(pr:product)-[:deposits]->(pa:account)\r\n    CREATE (u)-[:owns]->(d:distribution)<-[:allows]-(c)\r\n    SET d = distribution\r\n    CREATE (p)-[:splits]->(d)\r\n    CREATE (d)-[:pays]->(pv)\r\n    MERGE (p)-[:deposits]->(a)\r\n    CREATE (r)-[:references]->(p)\r\n    CREATE (r)-[:references]->(d)\r\n\r\n    WITH p, r, a, pr, pa, collect(d) AS distributions, sum(d.amount) as distribution_amount, pv ORDER BY pv.due_date ASC\r\n    SET pa.balance = pa.balance + distribution_amount\r\n    SET a.balance = a.balance + distribution_amount\r\n    SET pv.paid = pv.paid + distribution_amount\r\n    SET pv.unpaid = pv.amount - pv.paid\r\n    SET pv.status = CASE\r\n      WHEN pv.unpaid = 0 THEN 'paid'\r\n      WHEN pv.due_date <= $now THEN 'pastdue'\r\n      WHEN pv.unpaid < pv.amount THEN 'partial'\r\n      ELSE 'unpaid' END\r\n\r\n    WITH p, r, a, pr{.*, account: pa} AS product, sum(distribution_amount) AS voucher_amount, collect(pv{.*, distributions: distributions}) AS payment_vouchers\r\n\r\n    SET r.paid = r.paid + voucher_amount\r\n    SET r.unpaid = r.total - r.paid\r\n    SET r.status = CASE\r\n      WHEN r.unpaid = 0 THEN 'paid'\r\n      // WHEN ANY (x IN payment_vouchers WHERE x.status = 'pastdue') THEN 'pastdue'\r\n      // we don't have all the payment_vouchers to check if any are past due.\r\n      // so, if it was past due before, then it's past due now.\r\n      WHEN r.status = 'pastdue' THEN 'pastdue'\r\n      WHEN r.unpaid < r.total THEN 'partial'\r\n      ELSE 'unpaid' END\r\n\r\n    WITH p, collect(r{.*, product: product, account: a, payment_vouchers: payment_vouchers}) AS receivables\r\n\r\n    RETURN p{.*,\r\n      receivables: receivables\r\n    }\r\n```\r\n\r\n## Expected Behavior\r\nI expect that it returns a payment and the output should be:\r\n```\r\n{\r\n  \"amount\": 10.0,\r\n  \"method\": \"check\",\r\n  \"updated_at\": 1545237602363.0,\r\n  \"created_at\": 1545237602363.0,\r\n  \"receivables\": [\r\n    {\r\n      \"discount_total\": 0.0,\r\n      \"product\": {\r\n        \"buyable\": false,\r\n        \"updated_at\": 1545237102463,\r\n        \"rate\": 175,\r\n        \"description\": \"nice\",\r\n        \"sellable\": true,\r\n        \"title\": \"Labor\",\r\n        \"uuid\": \"1\",\r\n        \"account\": {\r\n          \"uuid\": \"1\"\r\n        }\r\n      },\r\n      \"quantity\": 1.0,\r\n      \"tax_total\": 0.0,\r\n      \"description\": \"Yay!\",\r\n      \"created_at\": 1545237102415,\r\n      \"unpaid\": 85.0,\r\n      \"uuid\": \"1\",\r\n      \"first_payment_due_date\": 1547915496123,\r\n      \"payment_schedule\": \"monthly\",\r\n      \"total\": 125.0,\r\n      \"payment_type\": \"percentage\",\r\n      \"first_payment_type\": \"percentage\",\r\n      \"updated_at\": 1545237102415,\r\n      \"rate\": 125.0,\r\n      \"subtotal\": 125.0,\r\n      \"paid\": 40.0,\r\n      \"first_payment_rate\": 100.0,\r\n      \"payment_rate\": 100.0,\r\n      \"payment_vouchers\": [\r\n        {\r\n          \"amount\": 125.0,\r\n          \"updated_at\": 545237102463,\r\n          \"paid\": 40.0,\r\n          \"due_date\": 1547915496123,\r\n          \"created_at\": 1545237102463,\r\n          \"unpaid\": 85.0,\r\n          \"uuid\": \"1\",\r\n          \"distributions\": [\r\n            {\r\n              \"payment_voucher\": \"1\",\r\n              \"created_at\": 1545237602363.0,\r\n              \"amount\": 10.0,\r\n              \"updated_at\": 1545237602363.0,\r\n              \"uuid\": \"1\"\r\n            }\r\n          ],\r\n          \"status\": \"partial\"\r\n        }\r\n      ],\r\n      \"account\": {\r\n        \"uuid\": \"1\"\r\n      },\r\n      \"status\": \"partial\"\r\n    }\r\n  ],\r\n  \"uuid\": \"1\",\r\n  \"payment_date\": 1545237589720.0\r\n}\r\n```\r\nThis **works correctly** in neo4j **3.4.10** (and down to 3.3.3 which is what we were upgrading from)\r\n\r\n## Actual Behavior\r\nOn neo4j **3.5.0** it returns a receivable and the output is:\r\n```\r\n{\r\n  \"receivables\": [\r\n    {\r\n      \"payment_vouchers\": [\r\n        {\r\n          \"distributions\": [\r\n            {\r\n              \"payment_voucher\": \"1\",\r\n              \"created_at\": 1545237602363.0,\r\n              \"amount\": 10.0,\r\n              \"updated_at\": 1545237602363.0,\r\n              \"uuid\": \"1\"\r\n            }\r\n          ],\r\n          \"rate\": 175,\r\n          \"description\": \"nice\",\r\n          \"uuid\": \"1\",\r\n          \"buyable\": false,\r\n          \"status\": \"unpaid\",\r\n          \"title\": \"Labor\",\r\n          \"updated_at\": 1545237102463,\r\n          \"sellable\": true\r\n        }\r\n      ],\r\n      \"product\": {\r\n        \"account\": {\r\n          \"uuid\": \"1\",\r\n          \"status\": \"unpaid\"\r\n        },\r\n        \"method\": \"check\",\r\n        \"uuid\": \"1\",\r\n        \"payment_date\": 1545237589720.0,\r\n        \"amount\": 10.0,\r\n        \"created_at\": 1545237602363.0,\r\n        \"updated_at\": 1545237602363.0\r\n      },\r\n      \"account\": {\r\n        \"amount\": 125.0,\r\n        \"updated_at\": 545237102463,\r\n        \"paid\": 30.0,\r\n        \"due_date\": 1547915496123,\r\n        \"created_at\": 1545237102463,\r\n        \"unpaid\": 95.0,\r\n        \"uuid\": \"1\",\r\n        \"status\": \"partial\"\r\n      },\r\n      \"status\": \"unpaid\",\r\n      \"uuid\": \"1\"\r\n    }\r\n  ],\r\n  \"rate\": 125.0,\r\n  \"unpaid\": 95.0,\r\n  \"quantity\": 1.0,\r\n  \"description\": \"Yay!\",\r\n  \"discount_total\": 0.0,\r\n  \"tax_total\": 0.0,\r\n  \"uuid\": \"1\",\r\n  \"payment_schedule\": \"monthly\",\r\n  \"total\": 125.0,\r\n  \"first_payment_due_date\": 1547915496123,\r\n  \"payment_type\": \"percentage\",\r\n  \"paid\": 30.0,\r\n  \"status\": \"partial\",\r\n  \"subtotal\": 125.0,\r\n  \"created_at\": 1545237102415,\r\n  \"payment_rate\": 100.0,\r\n  \"first_payment_rate\": 100.0,\r\n  \"updated_at\": 1545237102415,\r\n  \"first_payment_type\": \"percentage\"\r\n}\r\n```\r\n\r\n\r\n# 3.5.0 PROFILE AND EXPLAIN\r\n**PROFILE**\r\n![plan 7](https://user-images.githubusercontent.com/954952/50239390-e4227b00-0376-11e9-90fd-498a2cf33bff.png)\r\n\r\n**EXPLAIN**\r\n![plan 6](https://user-images.githubusercontent.com/954952/50239476-1df38180-0377-11e9-915b-d817a1ee68e0.png)\r\n\r\n# 3.4.10 PROFILE AND EXPLAIN\r\n**PROFILE**\r\n![plan 9](https://user-images.githubusercontent.com/954952/50239503-34014200-0377-11e9-9bae-dffd2a5c1a7a.png)\r\n\r\n**EXPLAIN**\r\n![plan 10](https://user-images.githubusercontent.com/954952/50239528-44192180-0377-11e9-84a5-05c3fcbc938b.png)\r\n\r\n"}, {"labels": ["3.5", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12105", "title": "Issue with WITH DISTINCT on 3.5.0 throwing 'key not found' error for existing keys", "closed": "2018-12-11 09:01:56", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2018-12-07 10:08:19", "user": "Clooney24", "body": "We are facing a strange behaviour in our 3.5.0 test database. The following cypher returns as expected one existing Uuid:\r\n\r\n```\r\nMATCH (industry:IndustryCM)\r\nWHERE industry.Uuid = \"72eb68e8-2418-4039-896e-799f497bb7ab\" \r\nWITH industry\r\nRETURN industry.Uuid\r\n```\r\n\r\nAlmost the same cypher just including DISTINCT in the WITH clause:\r\n```\r\nMATCH (industry:IndustryCM)\r\nWHERE industry.Uuid = \"72eb68e8-2418-4039-896e-799f497bb7ab\" \r\nWITH DISTINCT industry\r\nRETURN industry.Uuid\r\n```\r\n\r\nreturns the following error:\r\n\r\n> Neo.DatabaseError.General.UnknownError: key not found: CachedNodeProperty(industry,PropertyKeyName(Uuid))\r\n\r\nThis happens on our test db (3.5.0) running a backup from the live db (3.4.7) - so same data.\r\n\r\nExecuting the same cypher on our live db (3.4.7) on the same data works fine.\r\n\r\nJust tested using DISTINCT in combination with RETURN instead of WITH -  this works fine on 3.5.0:\r\n\r\n```\r\nMATCH (industry:IndustryCM)\r\nWHERE industry.Uuid = \"72eb68e8-2418-4039-896e-799f497bb7ab\" \r\nRETURN DISTINCT industry.Uuid\r\n```\r\n\r\nWe need the WITH DISTINCT statement as the cypher in our scenario is a few lines longer.\r\n\r\nI appreciate your help."}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12100", "title": "\"Did not find any type information for expression\" error after upgrading to 3.5", "closed": "2018-12-11 14:31:03", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2018-12-03 07:27:40", "user": "tolomaus", "body": "Hi,\r\n\r\nI have loaded my neo4j database via `neo4j-admin import`, one of the source datasets is AnnualAccount with id reference (field name in the csv file: `reference:ID(AnnualAccount)`)\r\n\r\nI got the following error when executing a cypher query with `OPTIONAL MATCH (company)-[:HAS]->(annualAccount:AnnualAccount) WHERE company.annualAccountReference = annualAccount.reference`\r\n\r\nThis has always worked just fine on version 3.4.x and before until I upgraded to 3.5 a moment ago. Running on aws ec2 centos, installed using yum.\r\n\r\n```\r\n2018-12-02 14:26:31.154+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [Neo.DatabaseError.Statement.ExecutionFailed]: Did not find any type information for expression Property(Variable(annualAccount),PropertyKeyName(reference)), reference 62005d51-b852-448a-a663-e295b25dc6d4.\r\n2018-12-02 14:26:31.154+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [Neo.DatabaseError.Statement.ExecutionFailed]: Did not find any type information for expression Property(Variable(annualAccount),PropertyKeyName(reference)), reference 62005d51-b852-448a-a663-e295b25dc6d4. Did not find any type information for expression Property(Variable(annualAccount),PropertyKeyName(reference))\r\norg.neo4j.kernel.impl.query.QueryExecutionKernelException: Did not find any type information for expression Property(Variable(annualAccount),PropertyKeyName(reference))\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachineV1SPI$BoltResultHandleV1.start(TransactionStateMachineV1SPI.java:203)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State.startExecution(TransactionStateMachine.java:506)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.execute(TransactionStateMachine.java:300)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:269)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:110)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:98)\r\n\tat org.neo4j.bolt.v1.runtime.ReadyState.processRunMessage(ReadyState.java:140)\r\n\tat org.neo4j.bolt.v1.runtime.ReadyState.processRunMessage(ReadyState.java:100)\r\n\tat org.neo4j.bolt.v1.runtime.ReadyState.process(ReadyState.java:61)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.nextState(BoltStateMachineV1.java:144)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachineV1.process(BoltStateMachineV1.java:92)\r\n\tat org.neo4j.bolt.messaging.BoltRequestMessageReader.lambda$doRead$1(BoltRequestMessageReader.java:89)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:191)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:139)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:171)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.lambda$scheduleBatchOrHandleError$2(ExecutorBoltScheduler.java:154)\r\n\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\nCaused by: org.neo4j.kernel.impl.query.QueryExecutionKernelException: Did not find any type information for expression Property(Variable(annualAccount),PropertyKeyName(reference))\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:89)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachineV1SPI$BoltResultHandleV1.start(TransactionStateMachineV1SPI.java:189)\r\n\t... 19 more\r\nCaused by: org.neo4j.cypher.InternalException: Did not find any type information for expression Property(Variable(annualAccount),PropertyKeyName(reference))\r\n\tat org.neo4j.cypher.exceptionHandler$.internalException(exceptionHandler.scala:45)\r\n\tat org.neo4j.cypher.exceptionHandler$.internalException(exceptionHandler.scala:26)\r\n\tat org.opencypher.v9_0.util.InternalException.mapToPublic(CypherException.scala:80)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:94)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner.parseAndPlan(Cypher35Planner.scala:116)\r\n\tat org.neo4j.cypher.internal.compatibility.CypherCurrentCompiler.compile(CypherCurrentCompiler.scala:82)\r\n\tat org.neo4j.cypher.internal.MasterCompiler.innerCompile$1(MasterCompiler.scala:115)\r\n\tat org.neo4j.cypher.internal.MasterCompiler.compile(MasterCompiler.scala:150)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine$$anonfun$compilers$3.apply(ExecutionEngine.scala:136)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine$$anonfun$compilers$3.apply(ExecutionEngine.scala:136)\r\n\tat org.neo4j.cypher.internal.QueryCache.compileAndCache(QueryCache.scala:167)\r\n\tat org.neo4j.cypher.internal.QueryCache.computeIfAbsentOrStale(QueryCache.scala:126)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.getOrCompile(ExecutionEngine.scala:156)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:95)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:85)\r\n\t... 20 more\r\nCaused by: org.opencypher.v9_0.util.InternalException: Did not find any type information for expression Property(Variable(annualAccount),PropertyKeyName(reference))\r\n\tat org.opencypher.v9_0.ast.semantics.SemanticTable$$anonfun$getActualTypeFor$1.apply(SemanticTable.scala:55)\r\n\tat org.opencypher.v9_0.ast.semantics.SemanticTable$$anonfun$getActualTypeFor$1.apply(SemanticTable.scala:55)\r\n\tat scala.collection.MapLike$class.getOrElse(MapLike.scala:128)\r\n\tat org.opencypher.v9_0.ast.ASTAnnotationMap.getOrElse(ASTAnnotationMap.scala:27)\r\n\tat org.opencypher.v9_0.ast.semantics.SemanticTable.getActualTypeFor(SemanticTable.scala:55)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.AbstractIndexSeekLeafPlanner$$anonfun$asIndexCompatiblePredicate$1.applyOrElse(AbstractIndexSeekLeafPlanner.scala:173)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.AbstractIndexSeekLeafPlanner$$anonfun$asIndexCompatiblePredicate$1.applyOrElse(AbstractIndexSeekLeafPlanner.scala:160)\r\n\tat scala.PartialFunction$$anonfun$runWith$1.apply(PartialFunction.scala:141)\r\n\tat scala.PartialFunction$$anonfun$runWith$1.apply(PartialFunction.scala:140)\r\n\tat scala.collection.immutable.Set$Set1.foreach(Set.scala:94)\r\n\tat scala.collection.TraversableLike$class.collect(TraversableLike.scala:271)\r\n\tat scala.collection.AbstractTraversable.collect(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.AbstractIndexSeekLeafPlanner.producePlanFor(AbstractIndexSeekLeafPlanner.scala:58)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.OrLeafPlanner$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(OrLeafPlanner.scala:39)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.OrLeafPlanner$$anonfun$apply$1$$anonfun$1$$anonfun$2.apply(OrLeafPlanner.scala:39)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:891)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1334)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\r\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)\r\n\tat scala.collection.AbstractTraversable.flatMap(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.OrLeafPlanner$$anonfun$apply$1$$anonfun$1.apply(OrLeafPlanner.scala:39)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.OrLeafPlanner$$anonfun$apply$1$$anonfun$1.apply(OrLeafPlanner.scala:38)\r\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\r\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\r\n\tat scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\r\n\tat scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\r\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\r\n\tat scala.collection.AbstractTraversable.map(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.OrLeafPlanner$$anonfun$apply$1.apply(OrLeafPlanner.scala:37)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.OrLeafPlanner$$anonfun$apply$1.apply(OrLeafPlanner.scala:33)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:891)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1334)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\r\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)\r\n\tat scala.collection.AbstractTraversable.flatMap(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.OrLeafPlanner.apply(OrLeafPlanner.scala:33)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.LeafPlannerList$$anonfun$1.apply(LeafPlannerIterable.scala:37)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.LeafPlannerList$$anonfun$1.apply(LeafPlannerIterable.scala:37)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:891)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1334)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\r\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)\r\n\tat scala.collection.AbstractTraversable.flatMap(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.LeafPlannerList.candidates(LeafPlannerIterable.scala:37)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.leafPlanOptions$.apply(leafPlanOptions.scala:35)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.SingleComponentPlanner.planComponent(SingleComponentPlanner.scala:46)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver$$anonfun$planComponents$1.apply(IDPQueryGraphSolver.scala:80)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver$$anonfun$planComponents$1.apply(IDPQueryGraphSolver.scala:79)\r\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\r\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:891)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1334)\r\n\tat scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\r\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:54)\r\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\r\n\tat scala.collection.AbstractTraversable.map(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver.planComponents(IDPQueryGraphSolver.scala:79)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver.plan(IDPQueryGraphSolver.scala:59)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.steps.applyOptional$.apply(solveOptionalMatches.scala:35)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver$$anonfun$2.apply(IDPQueryGraphSolver.scala:101)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver$$anonfun$2.apply(IDPQueryGraphSolver.scala:101)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.immutable.List.foreach(List.scala:392)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)\r\n\tat scala.collection.immutable.List.flatMap(List.scala:355)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver.recurse$1(IDPQueryGraphSolver.scala:101)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver.connectComponentsAndSolveOptionalMatch(IDPQueryGraphSolver.scala:115)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.idp.IDPQueryGraphSolver.plan(IDPQueryGraphSolver.scala:62)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.planPart$.apply(QueryPlanner.scala:127)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.PlanSingleQuery.apply(PlanSingleQuery.scala:47)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner$$anonfun$1.apply(QueryPlanner.scala:106)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner$$anonfun$1.apply(QueryPlanner.scala:104)\r\n\tat scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)\r\n\tat scala.collection.immutable.List.foldLeft(List.scala:84)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.planQueries(QueryPlanner.scala:104)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.plan(QueryPlanner.scala:94)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.process(QueryPlanner.scala:72)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.process(QueryPlanner.scala:33)\r\n\tat org.opencypher.v9_0.frontend.phases.Phase$$anonfun$transform$1.apply(Phase.scala:35)\r\n\tat org.opencypher.v9_0.frontend.helpers.package$$anonfun$closing$1.apply(package.scala:23)\r\n\tat org.opencypher.v9_0.frontend.helpers.package$$anonfun$closing$1.apply(package.scala:23)\r\n\tat org.opencypher.v9_0.frontend.helpers.package$.using(package.scala:31)\r\n\tat org.opencypher.v9_0.frontend.helpers.package$.closing(package.scala:23)\r\n\tat org.opencypher.v9_0.frontend.phases.Phase$class.transform(Phase.scala:34)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.planner.logical.QueryPlanner.transform(QueryPlanner.scala:33)\r\n\tat org.opencypher.v9_0.frontend.phases.PipeLine.transform(Transformer.scala:59)\r\n\tat org.opencypher.v9_0.frontend.phases.PipeLine.transform(Transformer.scala:59)\r\n\tat org.opencypher.v9_0.frontend.phases.PipeLine.transform(Transformer.scala:59)\r\n\tat org.opencypher.v9_0.frontend.phases.PipeLine.transform(Transformer.scala:59)\r\n\tat org.opencypher.v9_0.frontend.phases.PipeLine.transform(Transformer.scala:63)\r\n\tat org.opencypher.v9_0.frontend.phases.If.transform(Transformer.scala:88)\r\n\tat org.opencypher.v9_0.frontend.phases.PipeLine.transform(Transformer.scala:63)\r\n\tat org.neo4j.cypher.internal.compiler.v3_5.CypherPlanner.planPreparedQuery(CypherPlanner.scala:57)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1.org$neo4j$cypher$internal$compatibility$v3_5$Cypher35Planner$$anonfun$$createPlan$1(Cypher35Planner.scala:151)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1$$anonfun$6.apply(Cypher35Planner.scala:169)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1$$anonfun$6.apply(Cypher35Planner.scala:169)\r\n\tat org.neo4j.cypher.internal.QueryCache.compileAndCache(QueryCache.scala:167)\r\n\tat org.neo4j.cypher.internal.QueryCache.computeIfAbsentOrStale(QueryCache.scala:126)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1.apply(Cypher35Planner.scala:167)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_5.Cypher35Planner$$anonfun$parseAndPlan$1.apply(Cypher35Planner.scala:116)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:89)\r\n\t... 31 more\r\n```\r\n"}, {"labels": ["3.4", "bug", "cypher", "team-cypher"], "filteredCommits": ["418e0b5795a732eb4aede1769ff4f83b25df1222"], "url": "https://github.com/neo4j/neo4j/issues/12059", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 6, "deletions": 3}, "numCommits": 1, "commits": {"418e0b5795a732eb4aede1769ff4f83b25df1222": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 8.000277777777777, "user": "GreenGood", "changesInPackagesGIT": ["community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal"], "body": "It seems that setting `cypher.lenient_create_relationship=true` doesn't work. After restart server i still receive errors\r\n`org.neo4j.kernel.impl.query.QueryExecutionKernelException: Failed to create relationship '  UNNAMED102', node 'm' is missing. If you prefer to simply ignore rows where a relationship node is missing, set 'cypher.lenient_create_relationship = true' in neo4j.conf`\r\n\r\nMy statement:\r\n`merge (n:Node {Ogrn: \"4\"})\r\nwith n optional match (m:Node { Ogrn: \"4\"}) where id(n) <> id(m) merge (n)-[:HasSameOgrn]->(m)`\r\n\r\n**Neo4j Version:** 3.4.9 community edition  \r\n**Operating System:** Windows 10  \r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n1. Set `cypher.lenient_create_relationship=true`\r\n2. Stop server\r\n3. Create new database\r\n4. Start server\r\n5. Open browser and execute statement\r\n\r\n### Expected behavior\r\nStatement executes without errors\r\n\r\n### Actual behavior\r\nStatetement executes with errors `\r\nFailed to create relationship '  UNNAMED102', node 'm' is missing. If you prefer to simply ignore rows where a relationship node is missing, set 'cypher.lenient_create_relationship = true' in neo4j.conf`\r\n\r\n\r\nLog file: \r\n[debug.zip](https://github.com/neo4j/neo4j/files/2510135/debug.zip)\r\n\r\nConf file:\r\n[neo4j.zip](https://github.com/neo4j/neo4j/files/2510134/neo4j.zip)\r\n\r\n\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Setting cypher.lenient_create_relationship doesn`t work", "statsSkippedReason": "", "closed": "2018-11-01 11:07:23", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2018-11-01 09:50:38", "commitHash": "418e0b5795a732eb4aede1769ff4f83b25df1222", "commitParents": ["2309b620e3f3a8e8f31e37f6c126e26e10e6ca96"], "commitGHEventType": "closed", "nameRev": "418e0b5795a732eb4aede1769ff4f83b25df1222 tags/3.4.10~18", "commitGitStats": [{"insertions": 30, "lines": 34, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/LenientCreateRelationshipAcceptanceTest.scala", "deletions": 4}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/QueryState.scala", "deletions": 3}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix bug with lenient create relationship in interpreted with MERGE\n\nFixes #12059\n\nchangelog: Fixes bug with cypher.lenient_create_relationship. It would\nnot work with under some circumstances with MERGE in interpreted.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-10-30 13:38:25"}], "created": "2018-10-24 10:44:45"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12051", "title": "Problem with a logical expression", "closed": "2018-11-05 07:53:18", "commitsDetails": [], "commits": {}, "ttf": 25.00027777777778, "created": "2018-10-11 07:09:44", "user": "ontana", "body": "Hi guys,\r\nI am facing a problem with the neo4j cypher in version 3.4.8. I am running the following query:\r\n\r\n```\r\nMATCH (company:Company) \r\nWHERE company.status IN [\"ACTIVE\"] AND NOT company.status IN [\"DELETED\"] \r\nRETURN company\r\n```\r\n\r\nOn\r\n\r\n- Neo4j version: 3.3.1-enterprise\r\n- Operating system: Ubuntu 16.04\r\n- Connecting through [http://localhost:7474/browser/]\r\n- It returns a list of companies correctly.\r\n\r\nHowever,\r\nOn\r\n- Neo4j version: 3.4.8-enterprise\r\n- Operating system: Ubuntu 16.04\r\n- Connecting through [http://localhost:7474/browser/]\r\n- It returns empty.\r\n\r\nWhen change that cypher:\r\n```\r\nMATCH (company:Company) \r\nWHERE company.status IN [\"ACTIVE\"] AND company.status <> \"DELETED\" \r\nRETURN company\r\n```\r\n\r\nIt worked fine.\r\n\r\nI know the cypher is not best practise, but it's just an example for my case. Is this a bug? Or am I just missing something about the Cypher's syntax?"}, {"labels": ["bug", "cypher", "team-cypher"], "filteredCommits": ["0b19162d46d03f61a09e3a4872fa875a781cf50d"], "url": "https://github.com/neo4j/neo4j/issues/12036", "gitStatsSummary": {"insertions": 139, "gitFilesChange": 5, "lines": 140, "deletions": 1}, "numCommits": 1, "commits": {"0b19162d46d03f61a09e3a4872fa875a781cf50d": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 25.00027777777778, "user": "bingo919", "changesInPackagesSPOON": ["org.neo4j.server.helpers.PropertyTypeDispatcher.dispatchTemporalAmountProperty(java.time.temporal.TemporalAmount,java.lang.Object)", "org.neo4j.server.rest.repr.RepresentationDispatcher.dispatchTemporalAmountProperty(java.time.temporal.TemporalAmount,java.lang.String)", "org.neo4j.server.rest.repr.ValueRepresentation.1.dispatchTemporalAmountProperty(java.time.temporal.TemporalAmount,java.lang.Void)", "org.neo4j.server.rest.repr.RepresentationDispatcher.dispatchDoubleArrayProperty(org.neo4j.server.rest.repr.PropertyArray,java.lang.String)", "org.neo4j.server.rest.repr.RepresentationDispatcher.dispatchTemporalProperty(java.time.temporal.Temporal,java.lang.String)", "org.neo4j.server.rest.repr.PropertiesRepresentation.Consumer.dispatchTemporalAmountProperty(java.time.temporal.TemporalAmount,java.lang.String)", "org.neo4j.server.rest.repr.PropertiesRepresentation.Consumer.dispatchTemporalProperty(java.time.temporal.Temporal,java.lang.String)", "org.neo4j.server.rest.transactional.integration.PointTypeIT.shouldHandlePointsUsingRestResultDataContent()", "org.neo4j.server.helpers.PropertyTypeDispatcher.dispatch(java.lang.Object,java.lang.Object)", "org.neo4j.server.rest.repr.ValueRepresentation.1.dispatchPointProperty(org.neo4j.graphdb.spatial.Point,java.lang.Void)", "org.neo4j.server.rest.transactional.integration.PointTypeIT.shouldHandlePointArrays()", "org.neo4j.server.rest.repr.PropertiesRepresentation.Consumer.dispatchPointProperty(org.neo4j.graphdb.spatial.Point,java.lang.String)", "org.neo4j.server.helpers.PropertyTypeDispatcher.dispatchPointProperty(org.neo4j.graphdb.spatial.Point,java.lang.Object)", "org.neo4j.server.rest.repr.ValueRepresentation.1.dispatchTemporalProperty(java.time.temporal.Temporal,java.lang.Void)", "org.neo4j.server.rest.repr.RepresentationType", "org.neo4j.server.helpers.PropertyTypeDispatcher.dispatchTemporalProperty(java.time.temporal.Temporal,java.lang.Object)", "org.neo4j.server.rest.repr.RepresentationDispatcher.dispatchPointProperty(org.neo4j.graphdb.spatial.Point,java.lang.String)"], "changesInPackagesGIT": ["community/server/src/main/java/org/neo4j/server/rest/repr", "community/server-api/src/main/java/org/neo4j/server/rest/repr", "community/server-api/src/main/java/org/neo4j/server/helpers"], "body": "hi \r\n neo4j version 3.4.0\r\nThe gps node contains three attributes:\r\n   coordinates: point\r\n   location: string\r\n   type: string\r\neg:\r\ncoordinates: point({srid:4326, x:30.655691, y:104.081602}) ,location: shanghai ,type: gps\r\n\r\nI encountered an error while querying:\r\ncurl http://IP:PORT/db/data/transaction/commit -u xxxx:xxxx -H  \"Content-Type: application/json\" \r\n  -d \"{\r\n\t\"statements\": [{\r\n\t\t\"statement\": \"match (n:gps) return n\",\r\n\t\t\"parameters\": {},\r\n\t\t\"includeStats\": true,\r\n\t\t\"resultDataContents\": [\"rest\"]\r\n\t}]\r\n}\r\n\"\r\nError is as follows\uff1a\r\n\"code\": \"Neo.TransientError.Network.CommunicationError\",\r\n\"message\": \"Current context not an ARRAY but OBJECT\",\r\n\"stackTrace\": \"org.codehaus.jackson.JsonGenerationException: Current context not an ARRAY but OBJECT\r\n\r\n\r\nBut the following procedure was successful\r\n\r\ncurl http://IP:PORT/db/data/transaction/commit -u xxxx:xxxx -H  \"Content-Type: application/json\" \r\n  -d \"{\r\n\t\"statements\": [{\r\n\t\t\"statement\": \"match (n:gps) return n.coordinates,n.type,n.loacation\",\r\n\t\t\"parameters\": {},\r\n\t\t\"includeStats\": true,\r\n\t\t\"resultDataContents\": [\"rest\"]\r\n\t}]\r\n}\r\n\"\r\n\r\n\r\n\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 17, "UPD": 0, "TOT": 27, "DEL": 2, "INS": 20, "spoonFilesChanged": 6, "MOV": 5}, "title": "The type is a point query error", "statsSkippedReason": "", "closed": "2018-10-13 11:07:53", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2018-10-12 16:58:00", "commitHash": "0b19162d46d03f61a09e3a4872fa875a781cf50d", "commitParents": ["29f2a4c7f32b575283e93ba4b5d00682942ea6ab"], "commitGHEventType": "closed", "nameRev": "0b19162d46d03f61a09e3a4872fa875a781cf50d tags/3.4.9~6", "commitGitStats": [{"insertions": 13, "lines": 13, "filePath": "community/server-api/src/main/java/org/neo4j/server/rest/repr/RepresentationType.java", "deletions": 0}, {"insertions": 24, "lines": 24, "filePath": "community/server-api/src/main/java/org/neo4j/server/rest/repr/ValueRepresentation.java", "deletions": 0}, {"insertions": 24, "lines": 24, "filePath": "community/server-api/src/main/java/org/neo4j/server/helpers/PropertyTypeDispatcher.java", "deletions": 0}, {"insertions": 11, "lines": 13, "filePath": "community/server/src/test/java/org/neo4j/server/rest/AbstractRestFunctionalTestBase.java", "deletions": 2}, {"insertions": 52, "lines": 52, "filePath": "community/server/src/main/java/org/neo4j/server/rest/repr/PropertiesRepresentation.java", "deletions": 0}, {"insertions": 32, "lines": 36, "filePath": "community/server/src/test/java/org/neo4j/server/rest/transactional/integration/PointTypeIT.java", "deletions": 4}, {"insertions": 26, "lines": 27, "filePath": "community/server/src/main/java/org/neo4j/server/rest/repr/RepresentationDispatcher.java", "deletions": 1}, {"insertions": 62, "lines": 72, "filePath": "community/server/src/test/java/org/neo4j/server/rest/transactional/integration/QueryResultsSerializationTest.java", "deletions": 10}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "DEL": 2, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.PointTypeIT.shouldHandlePointArrays()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.PointTypeIT.shouldHandlePointsUsingRestResultDataContent()"}], "spoonFilePath": "PointTypeIT.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.PropertiesRepresentation.Consumer.dispatchPointProperty(org.neo4j.graphdb.spatial.Point,java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.PropertiesRepresentation.Consumer.dispatchTemporalProperty(java.time.temporal.Temporal,java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.PropertiesRepresentation.Consumer.dispatchTemporalAmountProperty(java.time.temporal.TemporalAmount,java.lang.String)"}], "spoonFilePath": "PropertiesRepresentation.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.QueryResultsSerializationTest.shouldHandleTemporalUsingRestResultDataContent()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.QueryResultsSerializationTest.shouldHandleDurationUsingRestResultDataContent()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.QueryResultsSerializationTest.shouldHandleTemporalArrays()"}], "spoonFilePath": "QueryResultsSerializationTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "DEL": 0, "INS": 4, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.AbstractRestFunctionalTestBase.runQuery(java.lang.String,java.lang.String[])"}, {"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.AbstractRestFunctionalTestBase.runQuery(java.lang.String)"}], "spoonFilePath": "AbstractRestFunctionalTestBase.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.RepresentationDispatcher.dispatchTemporalAmountProperty(java.time.temporal.TemporalAmount,java.lang.String)"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.repr.RepresentationDispatcher.dispatchDoubleArrayProperty(org.neo4j.server.rest.repr.PropertyArray,java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.RepresentationDispatcher.dispatchPointProperty(org.neo4j.graphdb.spatial.Point,java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.RepresentationDispatcher.dispatchTemporalProperty(java.time.temporal.Temporal,java.lang.String)"}], "spoonFilePath": "RepresentationDispatcher.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 3, "DEL": 0, "INS": 3, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.RepresentationType"}], "spoonFilePath": "RepresentationType.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.ValueRepresentation.1.dispatchPointProperty(org.neo4j.graphdb.spatial.Point,java.lang.Void)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.ValueRepresentation.1.dispatchTemporalAmountProperty(java.time.temporal.TemporalAmount,java.lang.Void)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.ValueRepresentation.1.dispatchTemporalProperty(java.time.temporal.Temporal,java.lang.Void)"}], "spoonFilePath": "ValueRepresentation.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.helpers.PropertyTypeDispatcher.dispatchPointProperty(org.neo4j.graphdb.spatial.Point,java.lang.Object)"}, {"UPD": 0, "TOT": 6, "DEL": 0, "INS": 3, "MOV": 3, "spoonMethodName": "org.neo4j.server.helpers.PropertyTypeDispatcher.dispatch(java.lang.Object,java.lang.Object)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.helpers.PropertyTypeDispatcher.dispatchTemporalProperty(java.time.temporal.Temporal,java.lang.Object)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.helpers.PropertyTypeDispatcher.dispatchTemporalAmountProperty(java.time.temporal.TemporalAmount,java.lang.Object)"}], "spoonFilePath": "PropertyTypeDispatcher.java"}], "commitMessage": "Support returning new types when using `resultDataContents: \"rest\"\"`\n\nFixes #12036\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-10-10 17:51:55"}], "created": "2018-09-18 09:15:27"}, {"labels": ["3.4", "bug", "cypher", "team-cypher"], "filteredCommits": ["72fd3ba39c848d6a37950a202546073912c4d27e"], "url": "https://github.com/neo4j/neo4j/issues/12029", "gitStatsSummary": {"insertions": 13, "gitFilesChange": 1, "lines": 19, "deletions": 6}, "numCommits": 1, "commits": {"72fd3ba39c848d6a37950a202546073912c4d27e": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 7.000277777777778, "user": "hakami1024", "changesInPackagesGIT": ["community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal"], "body": "I'm running the following query:\r\n```\r\nRETURN\r\n(\r\n  (\r\n    (\r\n      7414 IN [7372, 7414]\r\n    ) \r\n    AND \r\n    (\r\n       67542.0 <= 64547.0\r\n    )\r\n  ) \r\n  OR \r\n  (\r\n    (\r\n      7414 IN [7371, 7368, 7413, 7410] \r\n    )\r\n    AND \r\n    (\r\n       67542.0 <= 4061660.0\r\n    )\r\n  )\r\n);\r\n```\r\nOn\r\n- Neo4j version: 3.1.3\r\n- Operating system: Ubuntu 16.04 \r\n- Connecting through [http://localhost:7474/browser/]\r\nit returns `false`. That looks OK.\r\n\r\nBut!\r\nOn\r\n- Neo4j version: 3.4.7\r\n- Operating system: ArchLinux \r\n- Connecting through [http://localhost:7474/browser/]\r\nit returns `true`.\r\n\r\nThis bunch of numbers is a heavily reduced part of my match-where query, which matched more nodes than expected.\r\n\r\nIs this a bug? Or am I just missing something about the Cypher's syntax?", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Problem with a logical expression", "statsSkippedReason": "", "closed": "2018-09-11 11:05:29", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2018-09-10 15:27:07", "commitHash": "72fd3ba39c848d6a37950a202546073912c4d27e", "commitParents": ["236b4981855407cbc32e3c15621aa1469a823599"], "commitGHEventType": "closed", "nameRev": "72fd3ba39c848d6a37950a202546073912c4d27e tags/3.5.0-alpha09~6^2~7", "commitGitStats": [{"insertions": 2, "lines": 2, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/blacklists/cost-compiled.txt", "deletions": 0}, {"insertions": 10, "lines": 10, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/ast/rewriters/mergeInPredicatesTest.scala", "deletions": 0}, {"insertions": 13, "lines": 19, "filePath": "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/ast/rewriters/mergeInPredicates.scala", "deletions": 6}, {"insertions": 49, "lines": 49, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/cypher/features/BooleanExpression.feature", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Do not merge IN predicates when combining AND and OR\n\nThe rewriter `mergePredicates` tries to be clever by merging predicates\nwhen possible, e.g.\n\n- `a.prop IN [1,2,3] OR a.prop IN [4]` -> a.prop IN [1,2,3, 4]`\n- `a.prop IN [1,2,3] AND a.prop IN [2,3,5]` -> a.prop IN [2,3]`\n\nHowever it did the wrong thing and also rewrote expressions like\n\n- `(a.prop IN [1] AND FALSE) OR a.prop in [2]` -> `(a.prop IN [1,2] AND FALSE) AND a.prop IN [1,2]`\n\nwhich is not equivalent, e.g. `a.prop=1` will now evaluate to `true` instead\nof `false`.\n\nFixes #12029\nchangelog: Fix [issue](https://github.com/neo4j/neo4j/issues/12029) where combining multiple `a IN`\nwith AND and OR could lead to the wrong result.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-09-06 11:18:29"}], "created": "2018-09-04 11:00:07"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12011", "title": "Insert a node into a linked list causes heap overflow", "closed": "2018-09-02 14:44:47", "commitsDetails": [], "commits": {}, "ttf": 23.00027777777778, "created": "2018-08-10 02:45:17", "user": "lchrennew", "body": "- **Steps to reproduce**\r\nI want to insert a element into a linked list\r\n```\r\nMATCH (a), (b)\r\nWHERE id(a)==1 AND id(b)==2\r\nOPTIONAL MATCH (b)-[r:LINK_TO]->(c)\r\nDELETE r\r\nCREATE (b)-[:LINK_TO]->(a)\r\nCREATE (a)-[:LINK_TO]->(c)\r\n```\r\n- Expected behavior\r\nIf `c` EXISTS, then delete the relationship `(b)-[]-(c)` and create path `(b)-[]->(a)-[]->(c)`\r\nIf `c` NOT EXISTS, then just create the relationship `(b)-[]-(a)`\r\n\r\n- Actual behavior\r\nIf `c` EXISTS, then it works. BUT if `c` NOT EXISTS, infinitely execution until heap overflow!\r\n\r\n**Neo4j Version:** 3.4.4 Enterprise  \r\n**Operating System:** WIN 10  \r\n**API:** Docker"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/12001", "title": "Neo.DatabaseError.General.UnknownFailure", "closed": "2018-09-24 08:59:46", "commitsDetails": [], "commits": {}, "ttf": 52.000277777777775, "created": "2018-08-02 10:48:33", "user": "yasirkk", "body": "I am trying retrieve the node using the query `MATCH (node:User) WHERE id(user) IN [1,2,3,4,....4000,4001,....n] RETURN n.user_data ` and encounter an error Neo.DatabaseError.General.UnknownFailure and i tried the same query `MATCH (node:User) WHERE id(user) IN {ids} RETURN id(n)` and id passed as parameter and now get the error invalid syntax. In my db there is more than 10000 users and it still growing. Is there any limitations in `IN`. I noticed that maximum no.of node id accepted is around 4000.\r\nAny method to resolve this issue , please help me.\r\nNeo4j Version : 2.2.2\r\n"}, {"labels": ["3.3", "bug", "cypher"], "filteredCommits": ["f93f1c711d40745d9cc39d2700f2b2b4346c9480"], "url": "https://github.com/neo4j/neo4j/issues/11964", "gitStatsSummary": {"insertions": 22, "gitFilesChange": 1, "lines": 31, "deletions": 9}, "numCommits": 1, "commits": {"f93f1c711d40745d9cc39d2700f2b2b4346c9480": {"commitUser": "neo-technology-build-agent", "commitGHEventType": "closed"}}, "ttf": 42.000277777777775, "user": "EtienneMdG", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.3/src/main/scala/org/neo4j/cypher/internal"], "body": "I have a database with Sessions followed by a chain of Visits. Each Visit point to a Page.\r\n\r\nThe structure of the data is as follow:\r\n\r\nA Session is followed by a chain a Visit:\r\n\r\n`(:Session)-[:FIRST]->(:Visit)-[:NEXT]->(:Visit)-[:NEXT]-> ... -[:NEXT]->(:Visit)`\r\n\r\nEach Visit links to a Page:\r\n`(:Visit)-[:CONSISTS_IN)->(:Page)`\r\n\r\nI want to query for each Page the number of Sessions ending at this Page. I want a result for each page, even if the result is 0, which justify the OPTIONAL.\r\n\r\nThe query i wrote is:\r\n\r\n`MATCH (pa:Page) OPTIONAL MATCH (ses:Session)-[:FIRST]->(:Visit)-[:NEXT*0..]->(v1:Visit)-[:CONSISTS_IN]-(pa) WHERE NOT (v1)-[:NEXT]->() RETURN pa, count(DISTINCT v1)`\r\n\r\nIt is returning 0 for each page, which is not expected.\r\n\r\nRemoving the OPTIONAL, the DISTINCT or a label on a relationship give an expected result, with regard to the modified query.\r\n\r\nI built a small example wich seems to not work as expected:\r\n\r\n`CREATE (:A)-[:Y]->(:B)-[:X]->(:B)`\r\n \r\n`OPTIONAL MATCH (:A)-[:Y]->(b:B)-[:X*0..]->(a:B) WHERE NOT (a)-[:X]->() RETURN DISTINCT a;`\r\n\r\nHere, the query return null, despite a final node in the chain. Removing the OPTIONAL, the DISTINCT or a label on a relationship will give here too a correct answer.\r\n\r\nThis bug has been observed in neo4j 3.3.4\r\n\r\nWe also noticed this bug was not present in neo4j 2.3.2\r\n\r\nThank you\r\n\r\n\r\n- Neo4j version: 3.3.4\r\n- Operating system: Debian GNU/Linux 8\r\n- API/Driver: OGM and browser\r\n\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "bug with OPTIONAL MATCH and RETURN DISTINCT", "statsSkippedReason": "", "closed": "2018-08-20 11:10:46", "commitsDetails": [{"commitUser": "neo-technology-build-agent", "commitDateTime": "2018-08-20 09:44:40", "commitHash": "f93f1c711d40745d9cc39d2700f2b2b4346c9480", "commitParents": ["0d93f12695b71715f3751bd8cec86d4c2fb7e70d"], "commitGHEventType": "closed", "nameRev": "f93f1c711d40745d9cc39d2700f2b2b4346c9480 tags/3.4.7~18^2~2", "commitGitStats": [{"insertions": 1, "lines": 1, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/blacklists/cost-compiled.txt", "deletions": 0}, {"insertions": 22, "lines": 31, "filePath": "community/cypher/cypher-compiler-3.3/src/main/scala/org/neo4j/cypher/internal/compiler/v3_3/planner/logical/OptionalMatchRemover.scala", "deletions": 9}, {"insertions": 3, "lines": 3, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/blacklists/compatibility-32.txt", "deletions": 0}, {"insertions": 15, "lines": 15, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/cypher/features/OptionalMatchAcceptance.feature", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix error with OPTIONAL and DISTINCT\n\nConflict between `OptionalMatchRemover` which creates AST objects with\n`InputPosition.NONE` and `planPatternExpression` which relies on\n`PatternExpressionPatternElementNamer` which expects unique positions in\nthe pattern. This lead to wrong results for queries longer patterns. The\nreal problem here is relying on positions however that should adressed in\n3.5 not in 3.3.\n\nFixes #11964\nchangelog: Fix bug where combining OPTIONAL and DISTINCT could give the wrong result\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-08-13 16:46:37"}], "created": "2018-07-09 08:55:32"}, {"labels": ["3.4", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11956", "title": "Filtering by relationship types is not working in cycles of length 1", "closed": "2018-08-13 10:55:14", "commitsDetails": [], "commits": {}, "ttf": 46.000277777777775, "created": "2018-06-27 20:23:57", "user": "leorodriguez", "body": "I have found an issue when filtering on relationship types over cycles of length 1 (self loops).\r\n\r\n**Neo4j version:** 3.4.1 (causal cluster with 2 cores, no read replica)\r\n**Operative system**: Debian 9\r\n**API/Driver:** Cypher\r\n**Steps to reproduce:**\r\n_Create a self loop:_\r\n`merge (x:V)-[:R]->(x)`\r\n_Query for a non existing relationship type_\r\n`match (x:V)-[:NON_EXISTENT]->(x) return x`\r\n**Expected behaviour:**\r\nNo records found\r\n**Actual behaviour:**\r\nA node is returned.\r\n\r\n\r\n**Thank you.**\r\n"}, {"labels": ["3.4", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11944", "title": "Cypher does not use NodeIndexSeekByRange with projection", "closed": "2018-07-02 09:54:12", "commitsDetails": [], "commits": {}, "ttf": 18.00027777777778, "created": "2018-06-14 09:32:01", "user": "algarsi3", "body": "- Neo4j version: 3.4.0\r\n- Operating system: Debian 8 (Jessie)\r\n- Cypher version: 3.0\r\n\r\nWhen executing:\r\n```\r\nmatch (p:Person)\r\nwhere 1 <= p.pos_abs <= 140000000000\r\nreturn v\r\n```\r\nThe following plan is executed:\r\n![image](https://user-images.githubusercontent.com/14314257/41403667-b742323c-6fc5-11e8-86a4-db89b27d7129.png)\r\n\r\nBut when executing:\r\n```\r\nwith 1 as start, 140000000000 as end\r\nmatch (p:Person)\r\nwhere start <= p.pos_abs <= end\r\nreturn v\r\n```\r\nThe following plan is executing:\r\n![image](https://user-images.githubusercontent.com/14314257/41403781-039925d2-6fc6-11e8-888f-c921281b0033.png)\r\n\r\nI expected that Cypher used NodeIndexSeekByRange instead of NodeByLabelScan. Trying to use using hint throws an error:\r\n```\r\nwith 1 as start, 140000000000 as end\r\nmatch (p:Person)\r\nusing index p:Person(pos_bas)\r\nwhere start <= p.pos_abs <= end\r\nreturn v\r\n```"}, {"labels": ["3.3", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11904", "title": "MATCHing on negative integer throws error in 3.3", "closed": "2018-06-29 10:11:24", "commitsDetails": [], "commits": {}, "ttf": 28.00027777777778, "created": "2018-05-31 10:47:07", "user": "tomzeppenfeldt", "body": "\r\n**Neo4j Version:** 3.3.5.  \r\n**Operating System:** Ubuntu 15.10  \r\n**UI  :7474/browser\r\n\r\n### Steps to reproduce\r\n\r\nMATCH (n)\r\nwhere id(n) = -1\r\nRETURN n\r\n### Expected behavior\r\n(no changes, no records)\r\n### Actual behavior\r\n\r\nNeo.DatabaseError.General.UnknownError: Access to record Node[-1,used=false,rel=-1,prop=-1,labels=Inline(0x0:[]),light,secondaryUnitId=-1] went out of bounds of the page. The record size is 15 bytes, and the access was at offset -15 bytes into page 0, and the pages have a capacity of 8190 bytes. The mapped store file in question is /home/pdm/neo4j/data-neo4j-community-3.3.5/data/databases/graph.db/neostore.nodestore.db\r\n\r\n\r\n### Workaround\r\nInsert 'CYPHER 3.2'\r\n \r\nCYPHER 3.2 \r\nMATCH (n)\r\nWHERE id(n) = -1\r\nRETURN n"}, {"labels": ["3.4", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11901", "title": "Sort on non existing value", "closed": "2018-07-04 13:29:51", "commitsDetails": [], "commits": {}, "ttf": 34.000277777777775, "created": "2018-05-31 07:43:57", "user": "tim-hanssen", "body": "Neo4j version: 3.4.0\r\nOperating system: Unbuntu 16.4 LTS\r\n\r\nIn 3.4 the sorting is returning an error if you try to sort on a non existing value:\r\n\"Neo.ClientError.Statement.TypeError: Type mismatch: expected a map but was NO_VALUE\"\r\n\r\n**Steps to reproduce**\r\nRETURN environment ORDER BY environment.environment_group.Name\r\nIf we don't set the enviroment_group to be in environment the query crashes:\r\n\r\n**Expected behavior**\r\nWithout a change in the release notes, it should be resulting in the same result as in 3.3."}, {"labels": ["3.4", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11842", "title": "Unknown error when running query with \"equals NULL\" condition", "closed": "2018-06-18 14:45:46", "commitsDetails": [], "commits": {}, "ttf": 26.00027777777778, "created": "2018-05-23 09:23:49", "user": "sgehrig", "body": "Given the following unique constraint\r\n\r\n```\r\nCREATE CONSTRAINT ON (x:NODE) ASSERT x.id IS UNIQUE\r\n```\r\n\r\nrunning the following query fails with a `Neo.DatabaseError.General.UnknownError`:\r\n\r\n```\r\nCREATE (group:GROUP)\r\nWITH group\r\nMATCH (node:NODE)\r\nWHERE node.id = null\r\nCREATE (group)-[:IS_MANAGED_AT]->(node)\r\n```\r\n\r\n**Neo4j Version:** 3.4.0-enterprise\r\n**Operating System:** Mac OS X using official Neo4j docker image \r\n**API:** Neo4j browser / cypher shell\r\n\r\nThe same query given the same precondition (unique constraint) works on Neo4j 3.3.5-enterprise. And yes, I know that this query might look nonsensical because the `WHERE node.id = null` will never match but in our use case the `IS_MANAGED_AT` is optional and the `null` is in fact a parameter which might be `NULL` under some circumstances (in these case no relationship shall be created - same as if a given id does not match any `NODE` at all).\r\n\r\n### Expected behavior\r\nQuery should work.\r\n\r\n### Actual behavior\r\nQuery results in an error.\r\n\r\n### Steps to reproduce\r\n\r\n1. start empty Neo4j instance\r\n2. `CREATE CONSTRAINT ON (x:NODE) ASSERT x.id IS UNIQUE`\r\n3. `CREATE (group:GROUP)\r\nWITH group\r\nMATCH (node:NODE)\r\nWHERE node.id = null\r\nCREATE (group)-[:IS_MANAGED_AT]->(node)`\r\n\r\nThis is the debug log output:\r\n\r\n```\r\n2018-05-23 09:20:52.153+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: null, reference 01158ab5-7eb6-4928-9877-5fd79ed0db96.\r\n2018-05-23 09:20:52.153+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: null, reference 01158ab5-7eb6-4928-9877-5fd79ed0db96.\r\njava.lang.NullPointerException\r\n\tat org.neo4j.kernel.api.impl.schema.ValueEncoding$6.encodeQuery(ValueEncoding.java:244)\r\n\tat org.neo4j.kernel.api.impl.schema.LuceneDocumentStructure.newSeekQuery(LuceneDocumentStructure.java:110)\r\n\tat org.neo4j.kernel.api.impl.schema.reader.SimpleIndexReader.toLuceneQuery(SimpleIndexReader.java:135)\r\n\tat org.neo4j.kernel.api.impl.schema.reader.SimpleIndexReader.query(SimpleIndexReader.java:97)\r\n\tat org.neo4j.kernel.impl.index.schema.fusion.FusionIndexReader.query(FusionIndexReader.java:91)\r\n\tat org.neo4j.kernel.impl.newapi.Read.nodeIndexSeekWithFreshIndexReader(Read.java:207)\r\n\tat org.neo4j.kernel.impl.newapi.Read.lockingNodeUniqueIndexSeek(Read.java:181)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.TransactionBoundQueryContext.lockingUniqueIndexSeek(TransactionBoundQueryContext.scala:312)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslatingQueryContext$$anonfun$lockingUniqueIndexSeek$1.apply(ExceptionTranslatingQueryContext.scala:202)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslatingQueryContext$$anonfun$lockingUniqueIndexSeek$1.apply(ExceptionTranslatingQueryContext.scala:202)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslationSupport$class.translateException(ExceptionTranslationSupport.scala:33)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslatingQueryContext.translateException(ExceptionTranslatingQueryContext.scala:41)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.ExceptionTranslatingQueryContext.lockingUniqueIndexSeek(ExceptionTranslatingQueryContext.scala:202)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.DelegatingQueryContext.lockingUniqueIndexSeek(DelegatingQueryContext.scala:163)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeeker$$anonfun$indexSeek$2.apply(NodeIndexSeeker.scala:61)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeeker$$anonfun$indexSeek$2.apply(NodeIndexSeeker.scala:61)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\r\n\tat scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:33)\r\n\tat scala.collection.mutable.WrappedArray.foreach(WrappedArray.scala:35)\r\n\tat scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)\r\n\tat scala.collection.AbstractTraversable.flatMap(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeIndexSeeker$class.indexSeek(NodeIndexSeeker.scala:61)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.NodeIndexSeekSlottedPipe.indexSeek(NodeIndexSeekSlottedPipe.scala:36)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.NodeIndexSeekSlottedPipe.internalCreateResults(NodeIndexSeekSlottedPipe.scala:63)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.Pipe$class.createResults(Pipe.scala:45)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.NodeIndexSeekSlottedPipe.createResults(NodeIndexSeekSlottedPipe.scala:36)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.ApplySlottedPipe$$anonfun$internalCreateResults$1.apply(ApplySlottedPipe.scala:36)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.pipes.ApplySlottedPipe$$anonfun$internalCreateResults$1.apply(ApplySlottedPipe.scala:34)\r\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.EmptyResultPipe.internalCreateResults(EmptyResultPipe.scala:28)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:76)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.PipeWithSource.createResults(Pipe.scala:72)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.executionplan.BaseExecutionResultBuilderFactory$BaseExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:105)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.executionplan.BaseExecutionResultBuilderFactory$BaseExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:77)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.BuildInterpretedExecutionPlan$$anonfun$getExecutionPlanFunction$1.apply(BuildInterpretedExecutionPlan.scala:97)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.BuildInterpretedExecutionPlan$$anonfun$getExecutionPlanFunction$1.apply(BuildInterpretedExecutionPlan.scala:80)\r\n\tat org.neo4j.cypher.internal.BuildSlottedExecutionPlan$SlottedExecutionPlan.run(BuildSlottedExecutionPlan.scala:152)\r\n\tat org.neo4j.cypher.internal.compatibility.LatestRuntimeVariablePlannerCompatibility$ExecutionPlanWrapper$$anonfun$run$1.apply(LatestRuntimeVariablePlannerCompatibility.scala:128)\r\n\tat org.neo4j.cypher.internal.compatibility.LatestRuntimeVariablePlannerCompatibility$ExecutionPlanWrapper$$anonfun$run$1.apply(LatestRuntimeVariablePlannerCompatibility.scala:124)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:89)\r\n\tat org.neo4j.cypher.internal.compatibility.LatestRuntimeVariablePlannerCompatibility$ExecutionPlanWrapper.run(LatestRuntimeVariablePlannerCompatibility.scala:124)\r\n\tat org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:29)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:119)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:61)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachineSPI$1.start(TransactionStateMachineSPI.java:144)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State.startExecution(TransactionStateMachine.java:446)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.execute(TransactionStateMachine.java:259)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:240)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:81)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$2.run(BoltStateMachine.java:456)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine.run(BoltStateMachine.java:222)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onRun$3(BoltMessageRouter.java:93)\r\n\tat org.neo4j.bolt.runtime.MetricsReportingBoltConnection.lambda$enqueue$0(MetricsReportingBoltConnection.java:69)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:193)\r\n\tat org.neo4j.bolt.runtime.MetricsReportingBoltConnection.processNextBatch(MetricsReportingBoltConnection.java:87)\r\n\tat org.neo4j.bolt.runtime.DefaultBoltConnection.processNextBatch(DefaultBoltConnection.java:143)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.executeBatch(ExecutorBoltScheduler.java:163)\r\n\tat org.neo4j.bolt.runtime.ExecutorBoltScheduler.lambda$null$0(ExecutorBoltScheduler.java:145)\r\n\tat java.util.concurrent.CompletableFuture$AsyncSupply.run(CompletableFuture.java:1590)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```"}, {"labels": ["3.3", "bug", "cypher", "team-cypher"], "filteredCommits": ["b98a052c19ce13be7b9d7c4381657c74c7687ef6"], "url": "https://github.com/neo4j/neo4j/issues/11764", "gitStatsSummary": {"insertions": 2, "gitFilesChange": 1, "lines": 3, "deletions": 1}, "numCommits": 1, "commits": {"86ff2631e83d2037f4f2cf504a7861b7550eaf1b": {"commitUser": "fickludd", "commitGHEventType": "referenced"}, "b98a052c19ce13be7b9d7c4381657c74c7687ef6": {"commitUser": "fickludd", "commitGHEventType": "closed"}}, "ttf": 3.000277777777778, "user": "tomzeppenfeldt", "changesInPackagesGIT": ["community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal"], "body": "Version 3.3.5.\r\n\r\nIn the statement below , you have to downgrade the cypher, otherwise, you get an error when the property `keyname` does not exist.\r\n\r\nNeo.DatabaseError.Schema.PropertyKeyAccessFailed: Property key 'No such property.' not found\r\n\r\n\r\n\r\n```\r\n//cypher 3.2 \r\nwith 'keyname' as keyname\r\nmatch (n) \r\nwith keyname,n limit 1\r\nreturn n[keyname]\r\n```\r\n\r\n\r\nObviously, it should return `null` in case the property does not exist\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 1, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Can't pass a string to n[] anymore without downgrading cypher engine", "statsSkippedReason": "", "closed": "2018-05-17 09:08:33", "commitsDetails": [{"commitUser": "fickludd", "commitDateTime": "2018-05-17 09:28:18", "commitHash": "86ff2631e83d2037f4f2cf504a7861b7550eaf1b", "commitParents": ["c07589a051e306534dee5cb5a1e1cbef07ddf6e8", "6c61ec5dba7da1c33646d48f0bea88696fb28a36"], "commitGHEventType": "referenced", "nameRev": "86ff2631e83d2037f4f2cf504a7861b7550eaf1b tags/3.5.0-alpha01~1^2^2~5", "commitGitStats": [{"insertions": 4, "lines": 8, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_3/runtime/commands/expressions/ContainerIndexTest.scala", "deletions": 4}, {"insertions": 1, "lines": 1, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/blacklists/cost-compiled.txt", "deletions": 0}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/runtime/helpers/MapSupport.scala", "deletions": 1}, {"insertions": 31, "lines": 31, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/cypher/features/ReturnAcceptance.feature", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #11795 from pontusmelke/3.3-gh-11764\n\nHandle property access for non-existing property", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-05-17 09:28:18"}, {"commitUser": "fickludd", "commitDateTime": "2018-05-16 17:36:59", "commitHash": "b98a052c19ce13be7b9d7c4381657c74c7687ef6", "commitParents": ["743d1a3242c5055ee9116846084741e82f833ed2"], "commitGHEventType": "closed", "nameRev": "b98a052c19ce13be7b9d7c4381657c74c7687ef6 tags/3.5.0-alpha01~1^2^2~5^2~1", "commitGitStats": [{"insertions": 1, "lines": 1, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/blacklists/cost-compiled.txt", "deletions": 0}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/runtime/helpers/MapSupport.scala", "deletions": 1}, {"insertions": 31, "lines": 31, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/cypher/features/ReturnAcceptance.feature", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Handle property access for non-existing property\n\nFixes #11764\nchangelog: Return null when trying to access a non-existing property from\na string instead of throwing error.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-05-16 17:36:59"}], "created": "2018-05-13 10:15:13"}, {"labels": ["3.3", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11687", "title": "Neo4j 3.3.5 LOAD CSV throw Neo.DatabaseError.Statement.ExecutionFailed", "closed": "2018-07-04 13:32:40", "commitsDetails": [], "commits": {}, "ttf": 63.000277777777775, "created": "2018-05-02 05:44:01", "user": "JunOkumura", "body": "**Neo4j Version:** 3.3.5\r\n**Operating System:** OS X 10.13.4\r\n**Driver:**  Cypher\r\n\r\n### Steps to reproduce\r\n1. Access to own Neo4j browser.\r\n2. Run the below cypher.\r\n```\r\nUSING PERIODIC COMMIT LOAD CSV WITH HEADERS FROM 'file:///test.csv' AS row CREATE (tx:TxOut { value: row.value, n: toInt(row.n), uuid: row.uuid, created_at: timestamp() }) SET tx.script_pubkey = row.script_pubkey, tx.updated_at = timestamp()\r\n```\r\n### Expect behavior\r\nImport finishes without error.\r\n\r\n### Actual behavior\r\nThat return the error.\r\n```\r\nNeo.DatabaseError.Statement.ExecutionFailed: Tried to read a field larger than buffer size 2097152. A common cause of this is that a field has an unterminated quote and so will try to seek until the next quote, which ever line it may be on. This should not happen if multi-line fields are disabled, given that the fields contains no new-line characters. This field started at <NEO4J-HOME>/import/test.csv:1\r\n```\r\n\r\nusing file [here test.zip](https://github.com/neo4j/neo4j/files/1965963/test.zip)\r\n"}, {"labels": ["3.3", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11677", "title": "Cypher performing allNodesScan instead of nodeByIdSeek", "closed": "2018-05-18 11:41:19", "commitsDetails": [], "commits": {}, "ttf": 17.00027777777778, "created": "2018-04-30 13:53:34", "user": "fpusch", "body": "When performing the following two queries cypher performs an allNodesScan instead of a nodeByIdSeek for the first one.\r\n\r\n**Neo4j Version:** 3.3.5\r\n**Operating System:** RHEL 7.3\r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n1. Let cypher explain this query: \r\n```\r\nEXPLAIN\r\nMATCH (aNode) WHERE id(aNode) = 12345\r\nWITH aNode \r\nMATCH (bNode) WHERE id(bNode) = 54321 \r\nRETURN *\r\n```\r\n2. Let cypher explain this query\r\n```\r\nEXPLAIN\r\nCYPHER 2.3\r\nMATCH (aNode) WHERE id(aNode) = 12345\r\nWITH aNode \r\nMATCH (bNode) WHERE id(bNode) = 54321 \r\nRETURN *\r\n```\r\n\r\n### Expected behavior\r\nBoth queries should perform an id seek.\r\n\r\n### Actual behavior\r\nOnly the second query seeks by Id.\r\n\r\nA query similar to the one above is executed for example by Spring Data Neo4j / Neo4j OGM when persisting `@RelationshipEntities` leading to poor performance.\r\n\r\nThis issue looks similar to [11463](https://github.com/neo4j/neo4j/issues/11463), however setting Cypher 3.2 does not solve the issue.\r\n\r\nEdit:\r\nI have done some further local testing with a clean database on Windows. \r\n\r\nIt appears to be an issue limited to Neo4j 3.3.5. Performing the same queries on Neo4j 3.3.4 leads to both queries performing the same faster nodeByIdSeek. Upgrading to Neo4j 3.3.5 and running the queries results in the explained issue.\r\n\r\n\r\n"}, {"labels": ["3.3", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11663", "title": "Error using percentileDisc with no data", "closed": "2018-05-25 09:03:13", "commitsDetails": [], "commits": {}, "ttf": 28.00027777777778, "created": "2018-04-26 18:25:06", "user": "dbertouille", "body": "I noticed that queries using the percentileDisc aggregation function would hang if there were no nodes matched. These queries worked (returned NULL) in 3.1, but started to appear after upgrading to 3.3. I tested on a fresh 3.3.5 install to confirm.\r\n\r\n- Neo4j version: 3.3.5\r\n- Operating system: Alpine Linux 3.7.0\r\n- API/Driver:  Cypher\r\n\r\n### Steps to reproduce:\r\n\r\n1. Using the web interface, run `MATCH (n:FAKE) RETURN percentileDisc(n.x, 0.9)`. The query hangs.\r\n\r\n### Expected results:\r\n\r\nReturn `null`\r\n\r\n### Stacktrace from debug.log\r\n\r\n```\r\njava.lang.NullPointerException\r\n\tat org.neo4j.bolt.v1.messaging.Neo4jPack$Packer.pack(Neo4jPack.java:86)\r\n\tat org.neo4j.bolt.v1.messaging.BoltResponseMessageWriter.onRecord(BoltResponseMessageWriter.java:75)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter$ResultHandler$1.visit(BoltMessageRouter.java:153)\r\n\tat org.neo4j.bolt.v1.runtime.CypherAdapterStream.lambda$accept$0(CypherAdapterStream.java:78)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.helpers.RuntimeJavaValueConverter$feedIteratorToVisitable.accept(RuntimeJavaValueConverter.scala:55)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.PipeExecutionResult.accept(PipeExecutionResult.scala:112)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply$mcV$sp(ClosingExecutionResult.scala:175)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:174)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:174)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.exceptionHandler$runSafely$.apply(exceptionHandler.scala:90)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult.accept(ClosingExecutionResult.scala:174)\r\n\tat org.neo4j.bolt.v1.runtime.CypherAdapterStream.accept(CypherAdapterStream.java:76)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter$ResultHandler.onRecords(BoltMessageRouter.java:146)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.lambda$pullAll$0(BoltStateMachine.java:462)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.streamResult(TransactionStateMachine.java:272)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.streamResult(TransactionStateMachine.java:105)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.pullAll(BoltStateMachine.java:461)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine.pullAll(BoltStateMachine.java:236)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onPullAll$6(BoltMessageRouter.java:114)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.execute(RunnableBoltWorker.java:152)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.run(RunnableBoltWorker.java:104)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:109)\r\n```\r\n"}, {"labels": ["3.3", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11653", "title": "Issue with variable length path query and conditions", "closed": "2018-05-23 07:34:38", "commitsDetails": [], "commits": {}, "ttf": 27.00027777777778, "created": "2018-04-25 13:48:01", "user": "sgehrig", "body": "When running the following query we receive a `key not found:   UNNAMED60` error (`Neo.DatabaseError.General.UnknownError`):\r\n\r\n```\r\nMATCH (s:NODE)<-[:IS_VERSION_OF]-(sv:NODE_VERSION), \r\n        p = (s)-[*0..]->(:`NODE`)\r\n  WHERE (s.id IN ['42a8c128-f575-488f-a914-ba18157ae124']) \r\n  AND (NOT(sv.until < 20180101 OR sv.from > 20181231)) \r\n  AND (ALL(r IN relationships(p) WHERE NOT(r.until < 20180101 OR r.from > 20181231)))\r\n  AND ALL(x IN nodes(p) WHERE single(y IN nodes(p) WHERE y = x))\r\nRETURN p\r\n```\r\n\r\nThe following query however works as expected:\r\n\r\n```\r\nMATCH (s:NODE)<-[:IS_VERSION_OF]-(sv:NODE_VERSION), \r\n        p = (s)-[*0..]->(:`NODE`)\r\n  WHERE (s.id IN ['42a8c128-f575-488f-a914-ba18157ae124']) \r\n  AND (NOT(sv.until < 20180101 OR sv.from > 20181231)) \r\n  AND (ALL(r IN relationships(p) WHERE NOT(r.until < 20180101 OR r.from > 20181231)))\r\nWITH p\r\n  WHERE ALL(x IN nodes(p) WHERE single(y IN nodes(p) WHERE y = x))\r\nRETURN p\r\n```\r\nNote the `WITH` clause between the path match and the *node-duplication* condition.\r\n\r\n**Neo4j Version:** 3.3.4-enterprise\r\n**Operating System:** Mac OS X using official Neo4j docker image \r\n**API:** Neo4j browser / cypher shell\r\n\r\n### Expected behavior\r\nQuery should work.\r\n\r\n### Actual behavior\r\nQuery results in an error.\r\n\r\n### Steps to reproduce\r\n\r\n1. start empty Neo4j instance\r\n2. `FOREACH (id IN range(0,100) | CREATE (:NODE {id:id}))`\r\n3. `MATCH (n1:NODE),(n2:NODE) \r\n  WITH n1,n2 LIMIT 500 WHERE rand() < 0.1 \r\nCREATE (n1)-[:X {a: 1}]->(n2)`\r\n4. `MATCH (s:NODE), p = (s)-[*0..]->(:`NODE`)\r\n  WHERE (s.id IN [1]) \r\n  AND (ALL(r IN relationships(p) WHERE NOT(r.a < 1 OR r.a > 1)))\r\n  AND ALL(x IN nodes(p) WHERE single(y IN nodes(p) WHERE y = x))\r\nRETURN p` does not work\r\n5. `MATCH (s:NODE), p = (s)-[*0..]->(:`NODE`)\r\n  WHERE (s.id IN [1]) \r\n  AND (ALL(r IN relationships(p) WHERE NOT(r.a < 1 OR r.a > 1)))\r\nWITH p  \r\n  WHERE ALL(x IN nodes(p) WHERE single(y IN nodes(p) WHERE y = x))\r\nRETURN p` does work\r\n\r\nThis is the debug log output:\r\n\r\n```\r\n2018-04-25 13:47:12.575+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: key not found:   UNNAMED60, reference 889fa316-bcff-4c22-bf89-b7a75795010e.\r\n2018-04-25 13:47:12.575+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: key not found:   UNNAMED60, reference 889fa316-bcff-4c22-bf89-b7a75795010e. key not found:   UNNAMED60\r\njava.util.NoSuchElementException: key not found:   UNNAMED60\r\n\tat scala.collection.MapLike$class.default(MapLike.scala:228)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.MapExecutionContext.default(ExecutionContext.scala:56)\r\n\tat scala.collection.MapLike$class.apply(MapLike.scala:141)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.MapExecutionContext.apply(ExecutionContext.scala:56)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.commands.expressions.ProjectedPath$multiOutgoingRelationshipProjector.apply(ProjectedPath.scala:63)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.commands.expressions.ProjectedPath$multiOutgoingRelationshipProjector.apply(ProjectedPath.scala:61)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.commands.expressions.ProjectedPath$singleNodeProjector.apply(ProjectedPath.scala:37)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.commands.expressions.ProjectedPath$singleNodeProjector.apply(ProjectedPath.scala:35)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.commands.expressions.ProjectedPath.apply(ProjectedPath.scala:83)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.commands.expressions.NullInNullOutExpression.apply(NullInNullOutExpression.scala:30)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.commands.InList.isMatch(InList.scala:43)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.commands.predicates.Predicate.isTrue(Predicate.scala:41)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.CommunityPipeBuilder$$anonfun$asCommand$1$1$$anonfun$apply$5.apply(CommunityPipeBuilder.scala:316)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.CommunityPipeBuilder$$anonfun$asCommand$1$1$$anonfun$apply$5.apply(CommunityPipeBuilder.scala:314)\r\n\tat scala.collection.Iterator$class.forall(Iterator.scala:903)\r\n\tat scala.collection.AbstractIterator.forall(Iterator.scala:1334)\r\n\tat scala.collection.IterableLike$class.forall(IterableLike.scala:75)\r\n\tat scala.collection.AbstractIterable.forall(Iterable.scala:54)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.CommunityPipeBuilder$$anonfun$asCommand$1$1.apply(CommunityPipeBuilder.scala:314)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.CommunityPipeBuilder$$anonfun$asCommand$1$1.apply(CommunityPipeBuilder.scala:313)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.CommunityPipeBuilder$$anon$1.filterNode(CommunityPipeBuilder.scala:329)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.pipes.VarLengthExpandPipe$$anon$1.next(VarLengthExpandPipe.scala:65)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.pipes.VarLengthExpandPipe$$anon$1.next(VarLengthExpandPipe.scala:62)\r\n\tat scala.collection.Iterator$$anon$14.hasNext(Iterator.scala:535)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:439)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.profiler.ProfilingIterator.hasNext(Profiler.scala:184)\r\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:462)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.profiler.ProfilingIterator.hasNext(Profiler.scala:184)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.profiler.ProfilingIterator.hasNext(Profiler.scala:184)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.profiler.ProfilingIterator.hasNext(Profiler.scala:184)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.ClosingIterator.hasNext(ResultIterator.scala:58)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.helpers.RuntimeJavaValueConverter$feedIteratorToVisitable.accept(RuntimeJavaValueConverter.scala:53)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.PipeExecutionResult.accept(PipeExecutionResult.scala:112)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply$mcV$sp(ClosingExecutionResult.scala:175)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:174)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:174)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.exceptionHandler$runSafely$.apply(exceptionHandler.scala:90)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult.accept(ClosingExecutionResult.scala:174)\r\n\tat org.neo4j.bolt.v1.runtime.CypherAdapterStream.accept(CypherAdapterStream.java:76)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter$ResultHandler.onRecords(BoltMessageRouter.java:146)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.lambda$pullAll$0(BoltStateMachine.java:462)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.streamResult(TransactionStateMachine.java:272)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.streamResult(TransactionStateMachine.java:105)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.pullAll(BoltStateMachine.java:461)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine.pullAll(BoltStateMachine.java:236)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onPullAll$6(BoltMessageRouter.java:114)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.execute(RunnableBoltWorker.java:152)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.executeBatch(RunnableBoltWorker.java:145)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.run(RunnableBoltWorker.java:110)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:109)\r\n```"}, {"labels": ["3.1", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11542", "title": "NEO4J Cypher Query: Relationship Direction Bug in Where Clause", "closed": "2018-10-23 09:07:56", "commitsDetails": [], "commits": {}, "ttf": 192.00027777777777, "created": "2018-04-13 10:25:10", "user": "srinathganesh1", "body": "Sample Graph:\r\n![image](https://user-images.githubusercontent.com/11017158/38729992-83701118-3f32-11e8-9815-5a67489d71ae.png)\r\n\r\nSample Query:\r\n```\r\nCREATE (a1:A {title: \"a1\"})\r\nCREATE (a2:A {title: \"a2\"})\r\nCREATE (a3:A {title: \"a3\"})\r\n\r\nCREATE (b1:B {title: \"b1\"})\r\nCREATE (b2:B {title: \"b2\"})\r\n\r\nMATCH (a:A {title: \"a1\"}), (b:B {title: \"b1\"})\r\nCREATE (a)-[r:LINKS]->(b)\r\n\r\nMATCH (a:A {title: \"a2\"}), (a1:A {title: \"a1\"}) \r\nCREATE (a)-[:CONNECTED]->(a1)\r\n\r\nMATCH (a:A), (b:B) return a,b\r\n```\r\n\r\n**Objective: Finding some connections in the where clause**\r\n\r\nNow lets write some variations to find A's not directly connected to B (a2 and b3)\r\n\r\n\r\n```\r\n\r\n// Q1. Both work fine\r\nMATCH (a:A) WHERE (a)--(:B) RETURN a\r\nMATCH (a:A) WHERE (:B)--(a) RETURN a\r\n\r\n// Q2. Works\r\nMATCH (a:A)-[r]-(b:B) WHERE (a)-[r]-(b) RETURN a\r\n\r\n// Q3. Fails\r\nMATCH (a:A)-[r]-(b:B) WHERE (b)-[r]-(a) RETURN a\r\n```\r\n\r\nAny idea why Q2, Q3 are not behaving the same way even if the direction is specified as bi-directional? Is this a NEO4J **bug**?\r\n\r\nAll credits to [stdob](https://stackoverflow.com/users/4989460/stdob) for narrowing down this anomaly for me. \r\n\r\nStackoverflow post:\r\n- [Post](https://stackoverflow.com/questions/49814707/neo4j-cypher-query-relationship-direction-bug-in-where-clause)\r\n- [Related](https://stackoverflow.com/questions/49797354/neo4j-finding-disconnected-nodes/49798661#49798661)"}, {"labels": ["3.3", "bug", "team-cypher"], "filteredCommits": ["08543a2bade1d4eb955036c828d33d5f8cadfa43"], "url": "https://github.com/neo4j/neo4j/issues/11490", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"08543a2bade1d4eb955036c828d33d5f8cadfa43": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 15.000277777777777, "user": "saiwaiyanyu", "changesInPackagesGIT": ["community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal"], "body": "## Guidelines\r\n\r\n- Neo4j version: 3.3.0\r\n- Operating system: MAC OSX\r\n- **Steps to reproduce**\r\n- Expected behavior\r\n- Actual behavior\r\n\r\nAdditionally, include (as appropriate) log-files, stacktraces, and other debug output.\r\n\r\n---\r\n\r\n## example 1\r\n1. `neo4j-shell`\r\n2. `RETURN LENGTH('1 2') AS L1;`\r\n3. `RETURN LENGTH('1            2') AS L1;`\r\n\r\nthere`re **multiple spaces** between 1 and 2;\r\n\r\nboth results\r\n\r\n```\r\n+----+\r\n| L1 |\r\n+----+\r\n| 3  |\r\n+----+\r\n```\r\n\r\n---\r\n## example 2\r\n```\r\nCREATE (:TEST{TEST_ID:'1 2'});\r\nCREATE (:TEST{TEST_ID:'1  2'});\r\nCREATE CONSTRAINT ON (n:TEST) ASSERT n.TEST_ID IS UNIQUE;\r\n```\r\nresult is \r\n```\r\nWARNING: Unable to create CONSTRAINT ON ( test:TEST ) ASSERT test.TEST_ID IS UNIQUE:\r\nBoth Node(108) and Node(148) have the label `TEST` and property `TEST_ID` = '1 2'\r\n```\r\nit seems that the spaces in the strings  don`t work?\r\n\r\n\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "multiple spaces in query not work", "statsSkippedReason": "", "closed": "2018-04-23 08:29:15", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2018-04-17 15:36:40", "commitHash": "08543a2bade1d4eb955036c828d33d5f8cadfa43", "commitParents": ["e71bfae133abf3e058d478f35f4f6c7fffec05b9"], "commitGHEventType": "closed", "nameRev": "08543a2bade1d4eb955036c828d33d5f8cadfa43 tags/3.4.0-rc01~4^2^2~1^2^2~1", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/CypherCompiler.scala", "deletions": 1}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/StringMatchingAcceptanceTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix bug in cache key.\n\nFixes #11490\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-04-17 15:36:40"}], "created": "2018-04-08 07:36:11"}, {"labels": ["3.3", "bug", "team-cypher"], "filteredCommits": ["79e27bd81a47f7b57409d8768530e722a056e492"], "url": "https://github.com/neo4j/neo4j/issues/11463", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 4, "deletions": 1}, "numCommits": 1, "commits": {"79e27bd81a47f7b57409d8768530e722a056e492": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 29.00027777777778, "user": "rolandobermudez", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.3/src/main/scala/org/neo4j/cypher/internal"], "body": "- Neo4j version: 3.3.4 Enterprise\r\n- Operating system: CentOS 7\r\n- API/Driver: Web Console/Cypher\r\n- We reproduce it in our database\r\n- Normal Performance\r\n- Statement execution performing a database scan\r\n\r\n## Bug report\r\n\r\nWe discovered that the queries were taking too long, too many db hits, specifically the following query.\r\n\r\n`PROFILE MATCH (n:Identity:Principal:T4:Taggable:User:UserAccount)-[r:HAS_STATUS]->(m) WHERE ID( n ) = 2307238 AND (m:T4 OR m:T0) RETURN n, r, m`\r\n\r\nProfiler results:\r\n\r\n[query 1 profiler.txt](https://github.com/neo4j/neo4j/files/1876924/query.1.profiler.txt)\r\n\r\nNow if i change the direction of the match clause, the execution plan does not perform a database scan and execution time is highly reduced.\r\n\r\n`PROFILE MATCH (m)<-[r:HAS_STATUS]-(n:Identity:Principal:T4:Taggable:User:UserAccount) WHERE ID( n ) = 2307238 AND (m:T4 OR m:T0) RETURN n, r, m;`\r\n\r\nProfiler results:\r\n\r\n[query 2 profiler.txt](https://github.com/neo4j/neo4j/files/1876927/query.2.profiler.txt)\r\n\r\nForcing the use of CYPHER 3.2 at execution time solves the problem.\r\n\r\n`PROFILE CYPHER 3.2 MATCH (n:Identity:Principal:T4:Taggable:User:UserAccount)-[r:HAS_STATUS]->(m) WHERE ID( n ) = 2307238 AND (m:T4 OR m:T0) RETURN n, r, m`\r\n\r\nThe issue is not present on Neo4j 3.1.1 Enterprise\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Performance issue encountered with cypher query", "statsSkippedReason": "", "closed": "2018-05-04 12:21:44", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2018-04-24 16:33:24", "commitHash": "79e27bd81a47f7b57409d8768530e722a056e492", "commitParents": ["127fa70df18c64540bfc4d9290edc876617361d8"], "commitGHEventType": "closed", "nameRev": "79e27bd81a47f7b57409d8768530e722a056e492 tags/3.4.0-rc02~2^2~2^2", "commitGitStats": [{"insertions": 3, "lines": 4, "filePath": "community/cypher/cypher-compiler-3.3/src/main/scala/org/neo4j/cypher/internal/compiler/v3_3/planner/logical/CardinalityCostModel.scala", "deletions": 1}, {"insertions": 19, "lines": 19, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/CostPlannerAcceptanceTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Make sure to not hide costs underneath cartesian product\n\nIf one side of the cartesian product is estimated to return few rows,\nthe cost of the other side could be hidden, which can lead to really\nbad plans.\n\nFixes #11463\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-04-24 16:31:47"}], "created": "2018-04-04 18:07:33"}, {"labels": ["3.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/11094", "title": "CSV import bug for 3.3.2+", "closed": "2018-04-05 06:27:19", "commitsDetails": [], "commits": {}, "ttf": 40.000277777777775, "created": "2018-02-23 21:49:44", "user": "mlwish", "body": "I used NEO4J 3.3.1 on my mac to use neo4j-admin import shell to built graphs from CSV files and everything works fine. (followed by https://neo4j.com/docs/operations-manual/current/tools/import/)\r\n\r\nI wanted to build the same database on my Ubuntu box(14.04) with NEO4J 3.3.2 so I scp all the CSV files from mac to ubuntu box and used the same shell to import CSV.\r\n\r\nHowever, the importing data failed and neo4j complained the below ERRORS.\r\nI tried to upgrade to 3.3.3 but it still failed in the same way. \r\nFinally I downgraded to 3.3.1 like what I have in Mac and it magically worked.\r\n\r\n\r\n> WARNING Import failed. The store files in /home/mlo/neo4j-community-3.3.3/data/databases/tw_ml_v3.db are left as they are, although they are likely in an unusable state. Starting a database on these store files will likely fail or observe inconsistent records so start at your own risk or delete the store manually\r\n> org.neo4j.unsafe.impl.batchimport.input.InputException: ERROR in input\r\n>   data source: BufferedCharSeeker[source:/home/mlo/tw_ml_v3/merch_user_table.csv, position:2699377, line:9385]\r\n>   in field: photo_id_number:string:15\r\n>   for header: [id:ID(Merch_user), username:string, email:string, individual_name:string, store_url:string, is_banned:string, display_name:string, product_categories:string, date_last_active:string, tax_certificate:string, company_name:string, business_license:string, photo_id:string, warehouse_locations:string, photo_id_number:string, bd_rep:string]\r\n>   raw field value: ??\r\n>   original error: String index out of range: -283\r\n> \tat org.neo4j.unsafe.impl.batchimport.input.csv.InputEntityDeserializer.deserializeNextFromSource(InputEntityDeserializer.java:178)\r\n> \tat org.neo4j.unsafe.impl.batchimport.input.csv.InputEntityDeserializer.fetchNextOrNull(InputEntityDeserializer.java:77)\r\n> \tat org.neo4j.unsafe.impl.batchimport.input.csv.InputEntityDeserializer.fetchNextOrNull(InputEntityDeserializer.java:41)\r\n> \tat org.neo4j.helpers.collection.PrefetchingIterator.peek(PrefetchingIterator.java:60)\r\n> \tat org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:46)\r\n> \tat org.neo4j.unsafe.impl.batchimport.input.csv.ParallelInputEntityDeserializer.lambda$new$0(ParallelInputEntityDeserializer.java:106)\r\n> \tat org.neo4j.unsafe.impl.batchimport.staging.TicketedProcessing.lambda$submit$1(TicketedProcessing.java:103)\r\n> \tat org.neo4j.unsafe.impl.batchimport.executor.DynamicTaskExecutor$Processor.run(DynamicTaskExecutor.java:237)\r\n> \tSuppressed: org.neo4j.unsafe.impl.batchimport.executor.TaskExecutionPanicException: Executor has been shut down in panic\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.executor.DynamicTaskExecutor.assertHealthy(DynamicTaskExecutor.java:146)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.executor.DynamicTaskExecutor.submit(DynamicTaskExecutor.java:126)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.receive(ProcessorStep.java:78)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.Downstream.send(Downstream.java:56)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.SendDownstream.apply(SendDownstream.java:58)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.SendDownstream.apply(SendDownstream.java:26)\r\n> \t\tat org.neo4j.concurrent.WorkSync.doSynchronizedWork(WorkSync.java:231)\r\n> \t\tat org.neo4j.concurrent.WorkSync.tryDoWork(WorkSync.java:157)\r\n> \t\tat org.neo4j.concurrent.WorkSync.applyAsync(WorkSync.java:122)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.sendDownstream(ProcessorStep.java:162)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.access$100(ProcessorStep.java:45)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep$Sender.send(ProcessorStep.java:223)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.PropertyEncoderStep.process(PropertyEncoderStep.java:137)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.PropertyEncoderStep.process(PropertyEncoderStep.java:52)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.lambda$receive$1(ProcessorStep.java:85)\r\n> \t\t... 1 more\r\n> \t[CIRCULAR REFERENCE:org.neo4j.unsafe.impl.batchimport.input.InputException: ERROR in input\r\n>   data source: BufferedCharSeeker[source:/home/mlo/tw_ml_v3/merch_user_table.csv, position:2699377, line:9385]\r\n>   in field: photo_id_number:string:15\r\n>   for header: [id:ID(Merch_user), username:string, email:string, individual_name:string, store_url:string, is_banned:string, display_name:string, product_categories:string, date_last_active:string, tax_certificate:string, company_name:string, business_license:string, photo_id:string, warehouse_locations:string, photo_id_number:string, bd_rep:string]\r\n>   raw field value: ??\r\n>   original error: String index out of range: -283]\r\n> \t[CIRCULAR REFERENCE:org.neo4j.unsafe.impl.batchimport.executor.TaskExecutionPanicException: Executor has been shut down in panic]\r\n> \tSuppressed: org.neo4j.unsafe.impl.batchimport.executor.TaskExecutionPanicException: Executor has been shut down in panic\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.executor.DynamicTaskExecutor.assertHealthy(DynamicTaskExecutor.java:146)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.executor.DynamicTaskExecutor.submit(DynamicTaskExecutor.java:126)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.receive(ProcessorStep.java:78)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.Downstream.send(Downstream.java:56)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.SendDownstream.apply(SendDownstream.java:58)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.SendDownstream.apply(SendDownstream.java:26)\r\n> \t\tat org.neo4j.concurrent.WorkSync.doSynchronizedWork(WorkSync.java:231)\r\n> \t\tat org.neo4j.concurrent.WorkSync.tryDoWork(WorkSync.java:157)\r\n> \t\tat org.neo4j.concurrent.WorkSync.applyAsync(WorkSync.java:122)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.sendDownstream(ProcessorStep.java:162)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.access$100(ProcessorStep.java:45)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep$Sender.send(ProcessorStep.java:223)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.PropertyEncoderStep.process(PropertyEncoderStep.java:137)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.PropertyEncoderStep.process(PropertyEncoderStep.java:52)\r\n> \t\tat org.neo4j.unsafe.impl.batchimport.staging.ProcessorStep.lambda$receive$1(ProcessorStep.java:85)\r\n> \t\t... 1 more\r\n> \t[CIRCULAR REFERENCE:org.neo4j.unsafe.impl.batchimport.input.InputException: ERROR in input\r\n>   data source: BufferedCharSeeker[source:/home/mlo/tw_ml_v3/merch_user_table.csv, position:2699377, line:9385]\r\n>   in field: photo_id_number:string:15\r\n>   for header: [id:ID(Merch_user), username:string, email:string, individual_name:string, store_url:string, is_banned:string, display_name:string, product_categories:string, date_last_active:string, tax_certificate:string, company_name:string, business_license:string, photo_id:string, warehouse_locations:string, photo_id_number:string, bd_rep:string]\r\n>   raw field value: ??\r\n>   original error: String index out of range: -283]\r\n> \t[CIRCULAR REFERENCE:org.neo4j.unsafe.impl.batchimport.executor.TaskExecutionPanicException: Executor has been shut down in panic]\r\n> Caused by: java.lang.StringIndexOutOfBoundsException: String index out of range: -283\r\n> \tat java.lang.String.<init>(String.java:196)\r\n> \tat org.neo4j.csv.reader.Extractors$StringExtractor.extract0(Extractors.java:329)\r\n> \tat org.neo4j.csv.reader.Extractors$AbstractSingleValueExtractor.extract(Extractors.java:290)\r\n> \tat org.neo4j.csv.reader.BufferedCharSeeker.tryExtract(BufferedCharSeeker.java:283)\r\n> \tat org.neo4j.unsafe.impl.batchimport.input.csv.InputEntityDeserializer.deserializeNextFromSource(InputEntityDeserializer.java:138)\r\n> \t... 7 more\r\n> unexpected error: ERROR in input\r\n>   data source: BufferedCharSeeker[source:/home/mlo/tw_ml_v3/merch_user_table.csv, position:2699377, line:9385]\r\n>   in field: photo_id_number:string:15\r\n>   for header: [id:ID(Merch_user), username:string, email:string, individual_name:string, store_url:string, is_banned:string, display_name:string, product_categories:string, date_last_active:string, tax_certificate:string, company_name:string, business_license:string, photo_id:string, warehouse_locations:string, photo_id_number:string, bd_rep:string]\r\n>   raw field value: ??\r\n>   original error: String index out of range: -283\r\n"}, {"labels": ["3.4", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/11067", "title": "Error in slotted runtime for complex OPTIONAL MATCH", "closed": "2018-03-12 12:11:39", "commitsDetails": [], "commits": {}, "ttf": 19.00027777777778, "created": "2018-02-20 20:33:17", "user": "szarnyasg", "body": "As a followup to #10910, I changed to Enterprise 3.4.0.alpha08 and continued testing the new runtime.\r\n\r\n- Neo4j version: 3.4.0.alpha08 enterprise\r\n- Operating system: Ubuntu 16.04\r\n- API/Driver: any\r\n\r\nI was experimenting with LDBC queries and ran into an error with [BI query 25](https://github.com/ldbc/ldbc_snb_implementations/blob/e3e08a1a72bb74d81d183e8125eee55f8585aa7c/cypher/queries-opencypher/bi-25.cypher). I managed to trim down the query to this:\r\n\r\n```\r\nMATCH path=allShortestPaths((p1:Person {id: 17592186045594})-[:KNOWS*]-(p2:Person {id: 2199023256530}))\r\nUNWIND relationships(path) AS k\r\nWITH path, startNode(k) AS pA, endNode(k) AS pB\r\n\r\nOPTIONAL MATCH\r\n  (pA)<-[:HAS_CREATOR]-(c:Comment)-[:REPLY_OF]->(post:Post)-[:HAS_CREATOR]->(pB),\r\n  (post)<-[:CONTAINER_OF]-(forum:Forum)\r\nWHERE forum.creationDate >= 20110201000000000 AND forum.creationDate <= 20110301000000000\r\n\r\nRETURN *\r\n```\r\n\r\nThe error message on the UI is:\r\n\r\n> Neo.DatabaseError.General.UnknownError\r\n> assertion failed\r\n\r\nThe `debug.log` shows the full stacktrace:\r\n\r\n```\r\njava.lang.AssertionError: assertion failed\r\n\tat scala.Predef$.assert(Predef.scala:156)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.SlottedExecutionContext$$anonfun$mergeWith$1.apply(SlottedExecutionContext.scala:216)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.SlottedExecutionContext$$anonfun$mergeWith$1.apply(SlottedExecutionContext.scala:210)\r\n\tat scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)\r\n\tat scala.collection.mutable.HashMap$$anonfun$foreach$1.apply(HashMap.scala:130)\r\n\tat scala.collection.mutable.HashTable$class.foreachEntry(HashTable.scala:236)\r\n\tat scala.collection.mutable.HashMap.foreachEntry(HashMap.scala:40)\r\n\tat scala.collection.mutable.HashMap.foreach(HashMap.scala:130)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.SlotConfiguration.foreachSlot(SlotConfiguration.scala:298)\r\n\tat org.neo4j.cypher.internal.runtime.slotted.SlottedExecutionContext.mergeWith(SlottedExecutionContext.scala:210)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeRightOuterHashJoinPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(NodeRightOuterHashJoinPipe.scala:43)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeRightOuterHashJoinPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(NodeRightOuterHashJoinPipe.scala:43)\r\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\r\n\tat scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\r\n\tat scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:73)\r\n\tat scala.collection.mutable.MutableList.foreach(MutableList.scala:30)\r\n\tat scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\r\n\tat scala.collection.AbstractTraversable.map(Traversable.scala:104)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeRightOuterHashJoinPipe$$anonfun$internalCreateResults$1.apply(NodeRightOuterHashJoinPipe.scala:43)\r\n\tat org.neo4j.cypher.internal.runtime.interpreted.pipes.NodeRightOuterHashJoinPipe$$anonfun$internalCreateResults$1.apply(NodeRightOuterHashJoinPipe.scala:37)\r\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:410)\r\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:410)\r\n\tat scala.collection.TraversableOnce$FlattenOps$$anon$1.hasNext(TraversableOnce.scala:464)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.ClosingIterator$$anonfun$hasNext$1.apply$mcZ$sp(ResultIterator.scala:57)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.ClosingIterator$$anonfun$hasNext$1.apply(ResultIterator.scala:55)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.ClosingIterator$$anonfun$hasNext$1.apply(ResultIterator.scala:55)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.ClosingIterator$$anonfun$failIfThrows$1.apply(ResultIterator.scala:82)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.ClosingIterator.decoratedCypherException(ResultIterator.scala:91)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.ClosingIterator.failIfThrows(ResultIterator.scala:80)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.ClosingIterator.hasNext(ResultIterator.scala:54)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:409)\r\n\tat org.neo4j.cypher.internal.runtime.RuntimeJavaValueConverter$feedIteratorToVisitable.accept(RuntimeJavaValueConverter.scala:53)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_4.runtime.PipeExecutionResult.accept(PipeExecutionResult.scala:112)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply$mcV$sp(ClosingExecutionResult.scala:174)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:173)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:173)\r\n\tat org.neo4j.cypher.exceptionHandler$runSafely$.apply(exceptionHandler.scala:88)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult.accept(ClosingExecutionResult.scala:173)\r\n\tat org.neo4j.bolt.v1.runtime.CypherAdapterStream.accept(CypherAdapterStream.java:76)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter$ResultHandler.onRecords(BoltMessageRouter.java:146)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.lambda$pullAll$0(BoltStateMachine.java:454)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.streamResult(TransactionStateMachine.java:267)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.streamResult(TransactionStateMachine.java:104)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.pullAll(BoltStateMachine.java:453)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine.pullAll(BoltStateMachine.java:236)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onPullAll$6(BoltMessageRouter.java:114)\r\n\tat org.neo4j.bolt.v1.runtime.MonitoredWorkerFactory$MonitoredBoltWorker.lambda$enqueue$0(MonitoredWorkerFactory.java:82)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.execute(RunnableBoltWorker.java:150)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.executeBatch(RunnableBoltWorker.java:143)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.run(RunnableBoltWorker.java:108)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:110)\r\n```\r\n\r\nThe assertion error comes from https://github.com/neo4j/neo4j/blob/9348d2e7a3dfe1379e461ea9164f49d961df6cc3/enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/slotted/SlottedExecutionContext.scala#L216\r\n\r\nSimilarly to the previous issue, prefixing the query with `CYPHER runtime=interpreted` makes the error go away, so this must be an issue with the compiled runtime.\r\n\r\nReproducing the error needs some data. The scale factor 0.1 data set of the LDBC is sufficient for this goal:\r\n* [zipped `graph.db` (Dropbox)](https://www.dropbox.com/s/z8l7o0yellsattr/graph.db.zip?dl=0)\r\n* [CSV files with import instructions (GitHub)](https://github.com/szarnyasg/ldbc-sf01)\r\n\r\nI am cc-ing @alexaverbuch who helped me debug the cause of this issue."}, {"labels": ["3.4", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10987", "title": "Escaping | char in cypher?", "closed": "2018-02-27 19:50:29", "commitsDetails": [], "commits": {}, "ttf": 19.00027777777778, "created": "2018-02-08 17:58:56", "user": "Meatballs1", "body": "Can't work out how:\r\n\r\n```\r\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\r\n\u2502\"split(\"a|b\",\"|\")\"\r\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\r\n\u2502[\"a\",\"|\",\"b\"]     \r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n```\r\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\r\n\u2502\"split(\"a|b\",\"\\u007c\")\"                          \r\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\r\n\u2502[\"a\",\"|\",\"b\"]                                           \r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nI've tried blackslash, backticks, single and double quotes? \r\n\r\nShould work like below:\r\n\r\n```\r\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\r\n\u2502\"split(\"a&b\",\"&\")\"\r\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\r\n\u2502[\"a\",\"b\"]         \r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n"}, {"labels": ["3.2", "bug", "team-cypher"], "filteredCommits": ["de2b3838651e4be54bb83071c874e197afafeced"], "url": "https://github.com/neo4j/neo4j/issues/10978", "gitStatsSummary": {"insertions": 2, "gitFilesChange": 2, "lines": 7, "deletions": 5}, "numCommits": 1, "commits": {"de2b3838651e4be54bb83071c874e197afafeced": {"commitUser": "Lojjs", "commitGHEventType": "closed"}}, "ttf": 26.00027777777778, "user": "Mahesh-gupta542", "changesInPackagesGIT": ["community/cypher/frontend-3.2/src/main/scala/org/neo4j/cypher/internal"], "body": "The REDUCE function is not able to execute when iterating over a concatenation of two sub lists. When I tried to get the sum of the elements of two separate lists it throws error of type mismatch.\r\n\r\n**Neo4j Version:** 3.2.9  \r\n**Operating System:** Windows 10\r\n**API:** The built-in web app running over bolt\r\n\r\n### Steps to reproduce\r\n1. Start the database service on your local system\r\n2. Go to the neo4j console in your web browser (localhost:7474)\r\n3. Execute the below sample query\r\n`RETURN REDUCE(s = 0, p in [5,8,2,9] + [1,2] | s + p)`\r\n\r\n### Expected behavior\r\nIt should return one 27 which is the sum of all the elements in both list.\r\n\r\n### Actual behavior\r\nIt throws the below error \r\n`Type mismatch: accumulator is Integer but expression has type Float (line 1, column 57 (offset: 56))\r\n\"RETURN REDUCE(s = 0, p in [5,8,2,9] + [1,2] | s + p)\"\r\n                                                     ^`", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "REDUCE function giving error.", "statsSkippedReason": "", "closed": "2018-03-06 16:39:16", "commitsDetails": [{"commitUser": "Lojjs", "commitDateTime": "2018-03-05 13:27:53", "commitHash": "de2b3838651e4be54bb83071c874e197afafeced", "commitParents": ["e32a3b9e395ed15c196ef24ae633974fa7edb0cb"], "commitGHEventType": "closed", "nameRev": "de2b3838651e4be54bb83071c874e197afafeced tags/3.3.4~4^2~2^2~1", "commitGitStats": [{"insertions": 19, "lines": 19, "filePath": "community/cypher/frontend-3.2/src/test/scala/org/neo4j/cypher/internal/frontend/v3_2/ast/AddTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/frontend-3.2/src/main/scala/org/neo4j/cypher/internal/frontend/v3_2/symbols/IntegerType.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/frontend-3.2/src/test/scala/org/neo4j/cypher/internal/frontend/v3_2/symbols/TypeSpecTest.scala", "deletions": 1}, {"insertions": 5, "lines": 5, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/MatchAcceptanceTest.scala", "deletions": 0}, {"insertions": 1, "lines": 5, "filePath": "community/cypher/frontend-3.2/src/main/scala/org/neo4j/cypher/internal/frontend/v3_2/symbols/TypeSpec.scala", "deletions": 4}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix bug that concatenation of covariant lists would specify wrong type\n\nThe SemanticChecker would compute coercions of covariant types wrong.\nThis led to problems when specifying the type of add(List<?>, List<?>).\n\nFixes #10978\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-03-05 12:20:29"}], "created": "2018-02-07 19:36:38"}, {"labels": ["3.4", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10910", "title": "Slotted runtime fails on OPTIONAL MATCH and double aggregation", "closed": "2018-02-20 12:02:28", "commitsDetails": [], "commits": {}, "ttf": 22.00027777777778, "created": "2018-01-28 17:25:14", "user": "szarnyasg", "body": "- Neo4j version: 3.4.0.alpha06 enterprise\r\n- Operating system: Ubuntu 16.04\r\n- API/Driver: any\r\n\r\nI was experimenting with some queries on the LDBC Social Network Benchmark's data set and ran into an error when running a query. I managed to simplify it to this:\r\n\r\n```\r\nMATCH (person:Person)\r\nOPTIONAL MATCH (person)<-[:HAS_CREATOR]-(message:Message)-[:REPLY_OF*0..]->(post:Post)\r\nWITH person, count(message) AS messageCount\r\nRETURN messageCount, count(person) AS personCount\r\n```\r\n\r\nThe error message is:\r\n\r\n```\r\nOuch, no suitable slot for key post = NO_VALUE\r\nSlots: SlotConfiguration(longs=1, refs=0, slots=Map(person -> LongSlot(0,false,Node)))\r\n```\r\n\r\nPrefixing the query with `CYPHER runtime=interpreted` makes the error go away, so this must be an issue with the compiled runtime.\r\n\r\nReproducing the error needs some data. The scale factor 0.1 data set of the LDBC is sufficient for this goal:\r\n* [zipped `graph.db` (Dropbox)](https://www.dropbox.com/s/z8l7o0yellsattr/graph.db.zip?dl=0)\r\n* [CSV files with import instructions (GitHub)](https://github.com/szarnyasg/ldbc-sf01)\r\n\r\nThe debug.log is available at https://gist.github.com/szarnyasg/7c2bf5c026d3295116004946b193dbda.\r\n\r\nI am cc-ing @alexaverbuch who helped me debug the cause of this issue."}, {"labels": ["3.3", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10909", "title": "Working Cypher Query in 3.2.3 broken in 3.3.2", "closed": "2018-02-09 10:47:53", "commitsDetails": [], "commits": {}, "ttf": 12.000277777777777, "created": "2018-01-28 09:25:19", "user": "billscheidel", "body": "I recently started testing against 3.3.2 and found a query that is now failing.  \r\n\r\nThe following query produces 1 result in 3.2.3 but 0 results in 3.3.2.  Basically I'm looking for a set of nodes with a particular set of labels.\r\n\r\n### Steps to reproduce\r\n\r\n- Neo4j version: 3.3.2\r\n- Operating system: Ubuntu 16.04\r\n- API/Driver: Browser using Bolt\r\n\r\n```\r\nCREATE (:Foo { id: 1 });\r\nCREATE (:Bar { id: 1 });\r\n\r\nMATCH (n { id: 1 }) WHERE LABELS(n) IN ['Foo', 'Baz'] RETURN n;\r\n```\r\n\r\n### Expected behavior\r\n\r\n1 result returned:  (:Foo)\r\n\r\n### Actual behavior\r\n\r\n0 results"}, {"labels": ["3.2", "3.3", "bug", "team-cypher"], "filteredCommits": ["a56024ad71cedb1f8a33705a512ae3e0314a160d"], "url": "https://github.com/neo4j/neo4j/issues/10831", "gitStatsSummary": {"insertions": 7, "gitFilesChange": 1, "lines": 8, "deletions": 1}, "numCommits": 1, "commits": {"a56024ad71cedb1f8a33705a512ae3e0314a160d": {"commitUser": "Lojjs", "commitGHEventType": "closed"}}, "ttf": 5.000277777777778, "user": "jmarton", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.2/src/main/scala/org/neo4j/cypher/internal"], "body": "Neo4j raises error when I try to remove a property from a node given by an expression.\r\n\r\n- Neo4j version: 3.3.1, 3.2.3\r\n- Operating system: Debian Linux 9\r\n- API/Driver: bolt through webUI\r\n\r\n\r\n## Steps to reproduce\r\n\r\n1. Create 2 person nodes KNOWing each other in an empty database\r\n\r\n```\r\nCREATE (:Person {name: 'Alice', age: 23})-[:KNOWS]->(:Person {name:'Bob', age: 24})\r\n```\r\n\r\n2. Remove the age from the older one of Alice and Bob by running the query:\r\n\r\n```\r\nMATCH (a:Person {name: 'Alice'})-[:KNOWS]->(b:Person {name: 'Bob'})\r\nREMOVE CASE WHEN a.age>b.age THEN a ELSE b END.age\r\nRETURN a, b\r\n```\r\n\r\n## Expected behavior\r\n\r\nFeedback should indicate that *Set 1 property*, and return Bob without age, Alice retaining age:\r\n\r\n```\r\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\r\n\u2502\"a\"                      \u2502\"b\"           \u2502\r\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\r\n\u2502{\"name\":\"Alice\",\"age\":23}\u2502{\"name\":\"Bob\"}\u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n## Actual behavior\r\n\r\nThe following error is raised in Neo4j:\r\n\r\n> Neo.DatabaseError.Statement.ExecutionFailed\r\n> \r\n> REMOVE RemovePropertyItem(Property(CaseExpression(None,Vector((GreaterThan(Property(Variable(a),PropertyKeyName(age)),Property(Variable(b),PropertyKeyName(age))),Variable(a))),Some(Variable(b))),PropertyKeyName(age))) not supported in cost planner yet\r\n> \r\n\r\n## Additional comment\r\n\r\nThis issue was first raised in opencypher/openCypher#287, where @Mats-SX pointed out that this used to work in Neo4j 2.3 and also in Cypher 2.3 compatibility mode using Neo4j 3.x, i.e. the following query produces the expected result.\r\n\r\n```\r\nCYPHER 2.3\r\nMATCH (a:Person {name: 'Alice'})-[:KNOWS]->(b:Person {name: 'Bob'})\r\nREMOVE CASE WHEN a.age>b.age THEN a ELSE b END.age\r\nRETURN a, b\r\n```\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "REMOVE property from nodes returned by an expression", "statsSkippedReason": "", "closed": "2018-01-23 10:55:22", "commitsDetails": [{"commitUser": "Lojjs", "commitDateTime": "2018-01-22 14:08:11", "commitHash": "a56024ad71cedb1f8a33705a512ae3e0314a160d", "commitParents": ["55a1548ce8725e87bd179fe8ea510abf02355270"], "commitGHEventType": "closed", "nameRev": "a56024ad71cedb1f8a33705a512ae3e0314a160d tags/3.4.0-alpha07~4^2^2~7^2", "commitGitStats": [{"insertions": 41, "lines": 41, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/RemoveAcceptanceTest.scala", "deletions": 0}, {"insertions": 7, "lines": 8, "filePath": "community/cypher/cypher-compiler-3.2/src/main/scala/org/neo4j/cypher/internal/compiler/v3_2/ast/convert/plannerQuery/ClauseConverters.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Allow Remove property with case expression\n\nThe cost planner can now plan the following:\nREMOVE CASE WHEN ... THEN a ELSE b END.prop\n\nFixes #10831\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-01-22 14:07:52"}], "created": "2018-01-17 18:36:20"}, {"labels": ["3.3", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10719", "title": "properties() cannot be used to return node properties in a statement with a MERGE clause", "closed": "2018-01-12 12:17:54", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2018-01-03 22:24:18", "user": "mcandocia-rmarkbio", "body": "The `properties()` function cannot be used to return properties within a statement beginning with `MERGE`.\r\n\r\n**Neo4j Version:** 3.3.0 (Enterprise)\r\n**Operating System:** macOS Sierra 10.12.1\r\n**API:** Neo4J Browser/Python\r\n**Neo4j Desktop Version:** 1.0.9\r\n\r\n### Steps to reproduce\r\n1. Execute `MERGE (test:test_type {example_attr:\"123\"}) RETURN properties(test)`\r\n\r\n### Expected behavior\r\nThe attributes should be returned as `{\"example_attr\":\"123\"}`\r\n\r\n### Actual behavior\r\nThe program does not finish running, and this error is logged in the Neo4J Desktop log:\r\n\r\n    2018-01-03 22:06:14.255+0000 ERROR Client triggered an unexpected error [UnknownError]: null, reference 40c2f8ee-ec47-4129-a5cf-45812facf4a0.\r\n"}, {"labels": ["3.3", "bug", "team-cypher"], "filteredCommits": ["5f9f912554546003a798b354a77718d9caf2f8a1"], "url": "https://github.com/neo4j/neo4j/issues/10712", "gitStatsSummary": {"insertions": 8, "gitFilesChange": 1, "lines": 11, "deletions": 3}, "numCommits": 1, "commits": {"5f9f912554546003a798b354a77718d9caf2f8a1": {"commitUser": "Lojjs", "commitGHEventType": "closed"}}, "ttf": 20.00027777777778, "user": "szarnyasg", "changesInPackagesGIT": ["community/cypher/frontend-3.3/src/main/scala/org/neo4j/cypher/internal"], "body": "When abusing aliases in `RETURN ... ORDER BY ...`, it's possible to get surprising results. Users should not use aliases like this, to begin with, so this is not a critical issue. Still, I found it interesting and I think it's best if it's recorded here. I stumbled upon it while working on https://github.com/slizaa/slizaa-opencypher-xtext/issues/7.\r\n\r\n**Neo4j Version:** 3.3.1\r\n**Operating System:** Ubuntu 16.04\r\n**API:** web UI\r\n\r\n### Steps to reproduce\r\n\r\nI created a small example dataset of 4 rows.\r\n\r\n```\r\nUNWIND [\r\n  {x: 1, y: 3},\r\n  {x: 1, y: 4},\r\n  {x: 2, y: 3},\r\n  {x: 2, y: 4}\r\n] AS row\r\nWITH row.x AS x, row.y AS y, row.y AS y2\r\nRETURN x AS y, y2\r\nORDER BY y\r\n```\r\n\r\nResult:\r\n\r\n```\r\n\u2552\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2555\r\n\u2502\"y\"\u2502\"y2\"\u2502\r\n\u255e\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2561\r\n\u25021  \u25023   \u2502\r\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\r\n\u25021  \u25024   \u2502\r\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\r\n\u25022  \u25023   \u2502\r\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\r\n\u25022  \u25024   \u2502\r\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nWe can observe that the engine orders tuples according to the value of `x`. However, if we repeat the value of `y` as `y3`, we get a different ordering:\r\n\r\n```\r\nUNWIND [\r\n  {x: 1, y: 3},\r\n  {x: 1, y: 4},\r\n  {x: 2, y: 3},\r\n  {x: 2, y: 4}\r\n] AS row\r\nWITH row.x AS x, row.y AS y, row.y AS y2\r\nRETURN x AS y, y AS y3\r\nORDER BY y\r\n```\r\n\r\n(The only difference in the query is the last item of the `RETURN` clause, `y AS y3`.)\r\n\r\nResult:\r\n\r\n```\r\n\u2552\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2555\r\n\u2502\"y\"\u2502\"y3\"\u2502\r\n\u255e\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2561\r\n\u25021  \u25023   \u2502\r\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\r\n\u25022  \u25023   \u2502\r\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\r\n\u25021  \u25024   \u2502\r\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2524\r\n\u25022  \u25024   \u2502\r\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\nIn theory, repeating variable `y` aliased as `y3` should not interfere with the ordering, but somehow it does. I can only guess, but probably this somehow \"lifts\" the original variable `y` higher in the scope and it takes precedences over the newly introduced variable `y` (which is an alias for `x`).\r\n\r\nExpected results: one can argue for both orderings, but the two queries should use the same ordering. In my opinion, the variable reference `y` should refer to the closest variable declaration, i.e. to the alias (`AS y`) introduced in the `RETURN` clause.\r\n  ", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Cumbersome aliasing and ORDER BY results in inconsistent results", "statsSkippedReason": "", "closed": "2018-01-23 14:02:10", "commitsDetails": [{"commitUser": "Lojjs", "commitDateTime": "2018-01-22 16:15:27", "commitHash": "5f9f912554546003a798b354a77718d9caf2f8a1", "commitParents": ["628a25a90ff1893fe36bd7f081237f0a9832ca37"], "commitGHEventType": "closed", "nameRev": "5f9f912554546003a798b354a77718d9caf2f8a1 tags/3.4.0-alpha07~4^2~9^2", "commitGitStats": [{"insertions": 8, "lines": 8, "filePath": "community/cypher/cypher-compiler-3.3/src/test/scala/org/neo4j/cypher/internal/compiler/v3_3/ast/rewriters/NormalizeReturnClausesTest.scala", "deletions": 0}, {"insertions": 5, "lines": 10, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/MiscAcceptanceTest.scala", "deletions": 5}, {"insertions": 8, "lines": 11, "filePath": "community/cypher/frontend-3.3/src/main/scala/org/neo4j/cypher/internal/frontend/v3_3/ast/rewriters/normalizeReturnClauses.scala", "deletions": 3}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix in normalizeReturnClauses with same variable names\n\nFixes #10712\n\nchangelog:\nQueries such as match (n),(m) return m as m2, n as m order by m\nwere rewritten incorrectly to sort by the wrong column `m as m2`. Now,\nthe result is correctly ordered by `n as m`.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2018-01-22 16:15:27"}], "created": "2018-01-02 19:54:05"}, {"labels": ["3.3", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10695", "title": "Cypher throws \"failed assertion\" when comparing elements with <>", "closed": "2018-01-18 08:32:55", "commitsDetails": [], "commits": {}, "ttf": 21.00027777777778, "created": "2017-12-28 00:14:59", "user": "ikwattro", "body": "**Neo4j Version:** 3.3.1 EE\r\n**Operating System:** OS X\r\n**API:** Browser\r\n\r\n### Steps to reproduce\r\n\r\nGiven some nodes and relationships, run the following query : \r\n\r\n```\r\nMATCH (b:Book)-[:CHILD]->(:Chapter)-[:CHILD]->(c)\r\nMATCH (c)-[:CHILD*]->(r:ReadableText)<-[:INDEXES]-(k)\r\nWITH r, k, count(*) AS f\r\nMATCH (k)-[:INDEXES]->(r2)\r\nWHERE r <> r2\r\nRETURN r.text, r2.text, collect(distinct k.value)\r\nLIMIT 10\r\n```\r\n\r\n*Notice* the `WHERE r <> r2` => it works.\r\n\r\nChange to `WHERE r2 <> r` => Throws a `failed assertion exception`\r\n\r\n### Expected behavior\r\n\r\nThe query should work independently of the position of identifiers in the comparison\r\n\r\n### Actual behavior\r\n\r\nIt throws an exception with the following stacktrace : \r\n\r\n```\r\n2017-12-28 00:09:29.473+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: assertion failed, reference 029a2952-6048-49d1-8fa4-ac7bca4dcae4. assertion failed\r\njava.lang.AssertionError: assertion failed\r\n\tat scala.Predef$.assert(Predef.scala:156)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.SlottedRewriter$$anonfun$3.applyOrElse(SlottedRewriter.scala:150)\r\n\tat scala.PartialFunction$OrElse.apply(PartialFunction.scala:167)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.Rewritable$RewritableAny$.rewrite$extension(Rewritable.scala:113)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.topDown$TopDownRewriter.rec(Rewritable.scala:183)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.topDown$TopDownRewriter.apply(Rewritable.scala:160)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.Rewritable$RewritableAny$.rewrite$extension(Rewritable.scala:113)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.Rewritable$RewritableAny$.endoRewrite$extension(Rewritable.scala:120)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.SlottedRewriter$$anonfun$1.applyOrElse(SlottedRewriter.scala:108)\r\n\tat scala.PartialFunction$OrElse.apply(PartialFunction.scala:167)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.Rewritable$RewritableAny$.rewrite$extension(Rewritable.scala:113)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.topDown$TopDownRewriter.rec(Rewritable.scala:183)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.topDown$TopDownRewriter.apply(Rewritable.scala:160)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.Rewritable$RewritableAny$.rewrite$extension(Rewritable.scala:113)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.Rewritable$RewritableAny$.endoRewrite$extension(Rewritable.scala:120)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.runtime.SlottedRewriter.apply(SlottedRewriter.scala:115)\r\n\tat org.neo4j.cypher.internal.BuildSlottedExecutionPlan$.rewritePlan(BuildSlottedExecutionPlan.scala:88)\r\n\tat org.neo4j.cypher.internal.BuildSlottedExecutionPlan$.createSlottedRuntimeExecPlan(BuildSlottedExecutionPlan.scala:56)\r\n\tat org.neo4j.cypher.internal.BuildSlottedExecutionPlan$.process(BuildSlottedExecutionPlan.scala:50)\r\n\tat org.neo4j.cypher.internal.BuildSlottedExecutionPlan$.process(BuildSlottedExecutionPlan.scala:42)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.phases.Phase$$anonfun$transform$1.apply(Phase.scala:36)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.helpers.package$$anonfun$closing$1.apply(package.scala:24)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.helpers.package$$anonfun$closing$1.apply(package.scala:24)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.helpers.package$.using(package.scala:32)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.helpers.package$.closing(package.scala:24)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.phases.Phase$class.transform(Phase.scala:35)\r\n\tat org.neo4j.cypher.internal.BuildSlottedExecutionPlan$.transform(BuildSlottedExecutionPlan.scala:42)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.phases.PipeLine.transform(Transformer.scala:45)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.phases.If.transform(Transformer.scala:80)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.phases.PipeLine.transform(Transformer.scala:49)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.phases.PipeLine.transform(Transformer.scala:45)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.phases.If.transform(Transformer.scala:80)\r\n\tat org.neo4j.cypher.internal.frontend.v3_3.phases.PipeLine.transform(Transformer.scala:49)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.Compatibility$$anon$2$$anonfun$plan$1.org$neo4j$cypher$internal$compatibility$v3_3$Compatibility$class$$anon$$anonfun$$createPlan$1(Compatibility.scala:127)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.Compatibility$$anon$2$$anonfun$plan$1$$anonfun$7.apply(Compatibility.scala:131)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.Compatibility$$anon$2$$anonfun$plan$1$$anonfun$7.apply(Compatibility.scala:131)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.QueryCache$$anonfun$getOrElseUpdate$1$$anonfun$apply$1.apply(CacheAccessor.scala:36)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:57)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.LFUCache$$anon$1.apply(LFUCache.scala:31)\r\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$16(BoundedLocalCache.java:1973)\r\n\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1892)\r\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:1971)\r\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:1954)\r\n\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:113)\r\n\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:54)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.LFUCache.getOrElseUpdate(LFUCache.scala:30)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.LFUCache.apply(LFUCache.scala:48)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:55)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.QueryCache$$anonfun$getOrElseUpdate$1.apply(CacheAccessor.scala:34)\r\n\tat scala.collection.Iterator$$anon$9.next(Iterator.scala:162)\r\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)\r\n\tat scala.collection.Iterator$$anon$12.next(Iterator.scala:445)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.QueryCache.getOrElseUpdate(CacheAccessor.scala:46)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.Compatibility$$anon$2$$anonfun$plan$1.apply(Compatibility.scala:131)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.Compatibility$$anon$2$$anonfun$plan$1.apply(Compatibility.scala:107)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.exceptionHandler$runSafely$.apply(exceptionHandler.scala:90)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.Compatibility$$anon$2.plan(Compatibility.scala:107)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.org$neo4j$cypher$internal$ExecutionEngine$$producePlan$1(ExecutionEngine.scala:176)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine$$anonfun$3.apply(ExecutionEngine.scala:180)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine$$anonfun$3.apply(ExecutionEngine.scala:180)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.QueryCache$$anonfun$getOrElseUpdate$1$$anonfun$apply$1.apply(CacheAccessor.scala:36)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:57)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.LFUCache$$anon$1.apply(LFUCache.scala:31)\r\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.lambda$doComputeIfAbsent$16(BoundedLocalCache.java:1973)\r\n\tat java.util.concurrent.ConcurrentHashMap.compute(ConcurrentHashMap.java:1853)\r\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.doComputeIfAbsent(BoundedLocalCache.java:1971)\r\n\tat com.github.benmanes.caffeine.cache.BoundedLocalCache.computeIfAbsent(BoundedLocalCache.java:1954)\r\n\tat com.github.benmanes.caffeine.cache.LocalCache.computeIfAbsent(LocalCache.java:113)\r\n\tat com.github.benmanes.caffeine.cache.LocalManualCache.get(LocalManualCache.java:54)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.LFUCache.getOrElseUpdate(LFUCache.scala:30)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.LFUCache.apply(LFUCache.scala:48)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:55)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.QueryCache$$anonfun$getOrElseUpdate$1.apply(CacheAccessor.scala:34)\r\n\tat scala.collection.Iterator$$anon$9.next(Iterator.scala:162)\r\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:435)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:441)\r\n\tat scala.collection.Iterator$$anon$12.next(Iterator.scala:445)\r\n\tat org.neo4j.cypher.internal.compatibility.v3_3.QueryCache.getOrElseUpdate(CacheAccessor.scala:46)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.liftedTree1$1(ExecutionEngine.scala:180)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.planQuery(ExecutionEngine.scala:164)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:115)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:62)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachineSPI$1.start(TransactionStateMachineSPI.java:146)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:210)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:77)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$2.run(BoltStateMachine.java:398)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine.run(BoltStateMachine.java:200)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onRun$3(BoltMessageRouter.java:93)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.execute(RunnableBoltWorker.java:134)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.run(RunnableBoltWorker.java:91)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n\tat org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:109)\r\n```\r\n"}, {"labels": ["3.2", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10661", "title": "Query via REST API => CypherExecutionException, same query via web interface does not.", "closed": "2018-01-09 07:55:44", "commitsDetails": [], "commits": {}, "ttf": 20.00027777777778, "created": "2017-12-19 15:27:46", "user": "dosumis", "body": "- Neo4j version: 3.2.1 Enterprise\r\n- Operating system: docker instance  https://hub.docker.com/r/rcourt/docker-neo4j-knowledgebase/\r\n- API/Driver: REST API \r\n- **Steps to reproduce**\r\n```python\r\nimport requests\r\nimport json\r\nendpoint = \"http://kb.virtualflybrain.org\"\r\nusr = ''\r\npwd = ''\r\nquery = \"MATCH (ds:DataSet { label : 'Jenett2012'} ) \" \\\r\n    \"<-[hs:has_source]-(a:Individual) with ds,hs, a \" \\\r\n    \"OPTIONAL MATCH (ds)-[:has_site]-(s:Site) \" \\\r\n    \"WITH ds, hs, a, s \" \\\r\n    \"OPTIONAL MATCH (a)-[dbx:hasDbXref]-(s) \" \\\r\n    \"RETURN DISTINCT ds.label AS sname, \" \\\r\n    \"dbx.accession as extID, s.link_base as pre, \" \\\r\n    \"s.link_postfix as post, a.iri as iIRI,  \" \\\r\n    \"a.short_form as iID, a.label as iname\"\r\npayload = { 'statements': [ { 'statement' : query }]}\r\nr = requests.post(url = endpoint + \"/db/data/transaction/commit\", auth = (usr, pwd), data = json.dumps(payload))\r\nr.json()\r\n```  \r\n\r\n### Expected behavior\r\n\r\nReturns data - this works when the same query is run via the web endpoint and for other values of ds.label, e.g. 'Cachero2010', when the query is run via the API as above.\r\n\r\n### Actual behavior\r\n\r\n```js\r\n{'errors': [{'code': 'Neo.DatabaseError.Statement.ExecutionFailed',\r\n   'message': 'Unable to load NODE with id -1.',\r\n   'stackTrace': 'org.neo4j.cypher.CypherExecutionException: Unable to load NODE with id -1\r\n```\r\n\r\nFor full stack trace, run snippet above.\r\n\r\nThe database was built and maintained entirely via API requests. I'm worried about our long term commitment to neo4j if DB instances can easily end up in this state (I've seen something similar with a local instance in the past).\r\n\r\nI can provide full logs and a copy of the DB if this is useful for diagnosing the problem.  \r\n\r\nMany thanks.\r\n\r\nCC @Robbie1977\r\n"}, {"labels": ["3.3", "bug", "team-cypher", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/10656", "title": "NullPointerReference when updating or deleting objects", "closed": "2018-01-12 12:21:20", "commitsDetails": [], "commits": {}, "ttf": 24.00027777777778, "created": "2017-12-18 18:33:45", "user": "peterfarabaugh", "body": "Something is corrupting nodes in my db. So far it is localized to one label 'User'. I can create them and set properties, eventually something happens and any attempt to set a value or delete the node hangs.\r\nFor example: \r\nmatch (u:User {email: 'myuser@gmail.com'}) delete u\r\n\r\nalthough:\r\n\r\nmatch(u:User {email: 'myuser@gmail.com'}) return u\r\n\r\nstill works fine. If I make another user it works for a bit then the same thing happens.\r\n\r\nUPDATE2: I narrowed it down; it is the properties() that does it.\r\nMATCH (x:X) set x.y=1 RETURN properties(x) as x\r\nhangs, \r\nMATCH (x:X) set x.y=1 RETURN x\r\n\r\ndoesn't.\r\n\r\n\r\nUPDATE: I distilled it down to 2 steps: \r\n1. create (u:User {email: 'u2@gmail.com',password: 'bob',username: 'pfarabaugh',firstname: 'Peter',lastname: 'Farabaugh'})\r\n2. MATCH (u:User {email: $username,password: $password}) SET u.token=$token RETURN properties(u) as u with {\r\n  \"username\": \"u2@gmail.com\",\r\n  \"password\": \"bob\",\r\n  \"token\": \"eyJhbGciOiJIUzI1NiJ9.dTFAZ21haWwuY29t.RDSX-PmBGogJUXxtERV1FhKG9lFORTwAYXmu4bUB2uc\"\r\n}\r\nI also verified that any fieldname or value in the set will cause the hang.\r\n\r\nThe debug log shows: \r\n2017-12-18 18:09:15.371+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: null, reference 283bf860-a060-4195-a1f7-eb0b19fa6db0.\r\n2017-12-18 18:09:15.371+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: null, reference 283bf860-a060-4195-a1f7-eb0b19fa6db0.\r\njava.lang.NullPointerException\r\n        at org.neo4j.cypher.internal.spi.v3_3.TransactionBoundQueryContext$NodeOperations.propertyKeyIds(TransactionBoundQueryContext.scala:350)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.ExceptionTranslatingQueryContext$ExceptionTranslatingOperations$$anonfun$propertyKeyIds$1.apply(ExceptionTranslatingQueryContext.scala:282)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.ExceptionTranslatingQueryContext$ExceptionTranslatingOperations$$anonfun$propertyKeyIds$1.apply(ExceptionTranslatingQueryContext.scala:282)\r\n        at org.neo4j.cypher.internal.spi.v3_3.ExceptionTranslationSupport$class.translateException(ExceptionTranslationSupport.scala:32)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.ExceptionTranslatingQueryContext.translateException(ExceptionTranslatingQueryContext.scala:39)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.ExceptionTranslatingQueryContext$ExceptionTranslatingOperations.propertyKeyIds(ExceptionTranslatingQueryContext.scala:282)\r\n        at org.neo4j.cypher.internal.spi.v3_3.DelegatingOperations.propertyKeyIds(DelegatingQueryContext.scala:259)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.runtime.helpers.LazyMap.size$lzycompute(MapSupport.scala:88)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.runtime.helpers.LazyMap.size(MapSupport.scala:88)\r\n        at org.neo4j.values.virtual.MapValue.writeTo(MapValue.java:62)\r\n        at org.neo4j.bolt.v1.messaging.Neo4jPack$Packer.pack(Neo4jPack.java:86)\r\n        at org.neo4j.bolt.v1.messaging.BoltResponseMessageWriter.onRecord(BoltResponseMessageWriter.java:75)\r\n        at org.neo4j.bolt.v1.messaging.BoltMessageRouter$ResultHandler$1.visit(BoltMessageRouter.java:153)\r\n        at org.neo4j.bolt.v1.runtime.CypherAdapterStream.lambda$accept$0(CypherAdapterStream.java:78)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.runtime.helpers.RuntimeJavaValueConverter$feedIteratorToVisitable.accept(RuntimeJavaValueConverter.scala:55)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.runtime.PipeExecutionResult.accept(PipeExecutionResult.scala:112)\r\n        at org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply$mcV$sp(ClosingExecutionResult.scala:175)\r\n        at org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:174)\r\n        at org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$2.apply(ClosingExecutionResult.scala:174)\r\n        at org.neo4j.cypher.internal.compatibility.v3_3.exceptionHandler$runSafely$.apply(exceptionHandler.scala:90)\r\n        at org.neo4j.cypher.internal.compatibility.ClosingExecutionResult.accept(ClosingExecutionResult.scala:174)\r\n        at org.neo4j.bolt.v1.runtime.CypherAdapterStream.accept(CypherAdapterStream.java:76)\r\n        at org.neo4j.bolt.v1.messaging.BoltMessageRouter$ResultHandler.onRecords(BoltMessageRouter.java:146)\r\n        at org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.lambda$pullAll$0(BoltStateMachine.java:452)\r\n        at org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.streamResult(TransactionStateMachine.java:235)\r\n        at org.neo4j.bolt.v1.runtime.TransactionStateMachine.streamResult(TransactionStateMachine.java:98)\r\n        at org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.pullAll(BoltStateMachine.java:451)\r\n        at org.neo4j.bolt.v1.runtime.BoltStateMachine.pullAll(BoltStateMachine.java:236)\r\n        at org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onPullAll$6(BoltMessageRouter.java:114)\r\n        at org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.execute(RunnableBoltWorker.java:134)\r\n        at org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.run(RunnableBoltWorker.java:91)\r\n        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n        at java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n        at java.lang.Thread.run(Thread.java:748)\r\n        at org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:109)\r\n\r\n\r\n\r\n\r\n**Neo4j Version:** 3.3.0 \r\n**Operating System:** Amazon Linux  \r\n**API:** neo4j-driver (node.js)\r\n\r\n### Steps to reproduce\r\nNot sure yet. I will update if I can figure out exactly which command breaks it, \r\n\r\n### Expected behavior\r\nattributes should be settable and nodes should be deletable\r\n### Actual behavior\r\nsetting attributes or deleting properties fails and hangs\r\n"}, {"labels": ["3.2", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10626", "title": "Neo4j server crashed when load huge data by using LOAD CSV", "closed": "2018-01-08 14:35:50", "commitsDetails": [], "commits": {}, "ttf": 27.00027777777778, "created": "2017-12-12 00:34:53", "user": "cloudhuang", "body": "## Guidelines\r\n\r\nI need to load the huge data by using LOAD CSV, by standard, load nodes, then load relationships,  but after load 100, 000, 000+ nodes & relationships, the neo4j server crashed\r\n\r\n- Neo4j version: 3.2.3\r\n- Operating system: Ubuntu 16.04 LTS\r\n- 64GB OS Memory: 16GB Heap + 45GB page cache\r\n\r\n**debug.log**\r\n```\r\n2017-12-11 20:49:14.528+0000 INFO [o.n.k.i.t.l.p.LogPruningImpl] Log Rotation [521]:  Starting log pruning.\r\n2017-12-11 20:50:16.019+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 3397ms.\r\n2017-12-11 20:52:16.434+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 5594ms.\r\n2017-12-11 20:52:24.616+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 205ms.\r\n2017-12-11 20:53:33.820+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 1998ms.\r\n2017-12-11 20:54:08.930+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 8591ms.\r\n2017-12-11 20:56:12.319+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 9704ms.\r\n2017-12-11 20:56:24.922+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 1598ms.\r\n2017-12-11 20:57:49.020+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 1585ms.\r\n2017-12-11 20:58:24.126+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 15906ms.\r\n2017-12-11 20:58:44.140+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 2791ms.\r\n2017-12-11 20:58:55.438+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 4081ms.\r\n2017-12-11 20:59:19.023+0000 WARN [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 2289ms.\r\n```\r\nI'm using the default GC but seems GC take a lots of time.\r\n\r\n**neo4j.log**\r\n```\r\njava.util.concurrent.TimeoutException: Idle timeout expired: 30000/30000 ms\r\n\tat org.eclipse.jetty.io.IdleTimeout.checkIdleTimeout(IdleTimeout.java:161)\r\n\tat org.eclipse.jetty.io.IdleTimeout$1.run(IdleTimeout.java:50)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n2017-12-11 20:42:58.254+0000 WARN  Commit failed Idle timeout expired: 30030/30000 ms\r\njava.util.concurrent.TimeoutException: Idle timeout expired: 30030/30000 ms\r\n\tat org.eclipse.jetty.io.IdleTimeout.checkIdleTimeout(IdleTimeout.java:161)\r\n\tat org.eclipse.jetty.io.IdleTimeout$1.run(IdleTimeout.java:50)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n2017-12-11 20:43:10.942+0000 WARN  Commit failed Idle timeout expired: 30000/30000 ms\r\njava.util.concurrent.TimeoutException: Idle timeout expired: 30000/30000 ms\r\n\tat org.eclipse.jetty.io.IdleTimeout.checkIdleTimeout(IdleTimeout.java:161)\r\n\tat org.eclipse.jetty.io.IdleTimeout$1.run(IdleTimeout.java:50)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n2017-12-11 20:58:39.557+0000 WARN  Commit failed Idle timeout expired: 30000/30000 ms\r\njava.util.concurrent.TimeoutException: Idle timeout expired: 30000/30000 ms\r\n\tat org.eclipse.jetty.io.IdleTimeout.checkIdleTimeout(IdleTimeout.java:161)\r\n\tat org.eclipse.jetty.io.IdleTimeout$1.run(IdleTimeout.java:50)\r\n\tat java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)\r\n\tat java.util.concurrent.FutureTask.run(FutureTask.java:266)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\r\n\tat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\r\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\r\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\r\n\tat java.lang.Thread.run(Thread.java:748)\r\n```"}, {"labels": ["3.3", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10611", "title": "3.3.1-enterprise - Returning results from relationships that don't exist", "closed": "2018-01-08 16:34:25", "commitsDetails": [], "commits": {}, "ttf": 30.00027777777778, "created": "2017-12-08 17:07:44", "user": "senica", "body": "I posted this in slack. I ended up downgrading to 3.2.8 and everything works as expected. I don't have a good/short way to reproduce. I would be happy to set everything back up to 3.3.1 and show someone the error if it helped, but I mostly wanted to make this issue in case anyone else experiencing something similar there is a larger consensus.\r\n\r\nMy query - ran either direclty in the neo4j browser, or with the js driver.\r\n```\r\nrows = await _db.run(`MATCH (u:user {uuid: $uid})-[:allowed_to]->(c:company {uuid: $cid})\r\nMATCH (f:file {uuid: $uuid})\r\nMATCH (f)-[:uploaded_for]->(t) // get targets\r\nOPTIONAL MATCH (tg:tag)-[:tags]->(f) // get tags\r\nRETURN {\r\n  uuid: f.uuid,\r\n  targets: collect(DISTINCT t),\r\n  tags: collect(DISTINCT tg)\r\n}\r\n`, {\r\nuid: req.user.uid,\r\ncid: req.user.cid,\r\nuuid: fid,\r\n})\r\n```\r\nWhat seems to be happening is that it's throwing things into `tags` that don't have the relationship of `tags`.\r\nFor example, a partial output of the results is (everything else is as expected):\r\n```\r\n...\r\n\"tags\": [{\r\n  \"identity\": {\r\n  \"low\": 3132,\r\n  \"high\": 0\r\n},\r\n\"labels\": [\r\n  \"note\"\r\n],\r\n\"properties\": {\r\n  \"note\": \"What is this?\",\r\n  \"updated_at\": 1512661314571,\r\n  \"editable\": false,\r\n  \"created_at\": 1512661314571,\r\n  \"details\": \"Is this working right?\",\r\n  \"label\": \"dooda\",\r\n  \"category\": \"mycat\",\r\n  \"uuid\": \"2bca4acb-0241-4a4a-ae37-ba34f92b3acd\"\r\n}}, {\r\n\"identity\": {\r\n  \"low\": 20,\r\n  \"high\": 0\r\n},\r\n\"labels\": [\r\n \"company\"\r\n],\r\n\"properties\": {\r\n  \"name\": \"Allebrum\",\r\n  \"uuid\": \"45a8404a-073a-49c3-8705-63142e31ff5d\",\r\n  \"email\": \"\"\r\n}}]}\r\n```\r\nbut if I look at the `tags` relationship, all I have is one relationship that has nothing to do with the ones specified: \r\n![screen shot 2017-12-07 at 12 15 09 pm](https://user-images.githubusercontent.com/954952/33776649-ec6cde3e-dbf6-11e7-84e8-dc88f85dc568.jpg)\r\n\r\n\r\nAs mentioned, during development we used 3.2.5. We are using docker, so the installs on the production server we clean installs. At one point I had upgraded from 3.3.0 to 3.3.1 to fix an issue we were having that was resolved in 3.3.1. Thinking this was a bad upgrade, we deleted everything and started again...the same result happened.\r\n\r\n- Neo4j version: 3.3.1-enterprise\r\n- Operating system: Neo4j Docker 3.3.1-enterprise\r\n- API/Driver: Cypher and JS neo4j driver produced same results\r\n- **Steps to reproduce**\r\n\r\n- Expected behavior\r\nA single result.\r\n- Actual behavior\r\nTwo results, with unreleated nodes placed in tags array\r\n\r\n\r\n"}, {"labels": ["3.3", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10607", "title": "Community version doesn't check parameters were provided", "closed": "2018-01-09 09:21:46", "commitsDetails": [], "commits": {}, "ttf": 31.00027777777778, "created": "2017-12-08 11:18:27", "user": "frant-hartm", "body": "Community version doesn't check parameters are provided when there is no match.\r\n\r\n- Neo4j version: 3.3.0\r\n- Operating system: Xubuntu 16.04\r\n- API/Driver: Bolt and browser\r\n- **Steps to reproduce**\r\n\r\nI expect following code to fail on empty database (or a database with no `Person` nodes) because the parameter name is not provided:\r\n```\r\n        try (Driver driver = GraphDatabase.driver(\"bolt://localhost\")) {\r\n\r\n            try (Session session = driver.session()) {\r\n\r\n                try (Transaction tx = session.beginTransaction()) {\r\n\r\n                    StatementResult run = tx.run(\"MATCH (n:Person {name:{name}}) RETURN n\");\r\n                    run.consume();\r\n\r\n                    tx.success();\r\n\r\n                }\r\n            }\r\n        }\r\n```\r\n\r\n- Expected behavior\r\nFail with \r\n```\r\nException in thread \"main\" org.neo4j.driver.v1.exceptions.ClientException: Expected a parameter named name\r\n```\r\nThis fails as expected on enterprise version or on community when there are some nodes with `Person` label.\r\n- Actual behavior\r\nJust returns no results.\r\n"}, {"labels": ["3.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/10468", "title": "[neo4j-community-3.3.0] Crash on startup if dbms.memory.pagecache.size >= 512g", "closed": "2017-11-22 13:11:03", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2017-11-17 07:05:49", "user": "perduamour", "body": "- Neo4j version: 3.3.0 (Community)\r\n- Operating system: RHEL7.4 / macOS High Sierra 10.13.1\r\n\r\n### Steps to reproduce\r\n1. set dbms.memory.pagecache.size = 512g in /etc/neo4j/neo4j.conf\r\n2. start neo4j\r\n\r\n### Expected behavior\r\nneo4j server start successfully\r\n\r\n### Actual behavior\r\ncrash on startup, and nothing left in debug.log, only a crash log file generated by java.\r\n[crash.log](https://github.com/neo4j/neo4j/files/1481318/crash.log)"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10444", "title": "QueryExecutionKernelException in 3.3.0 - Expression [x] has to type from semantic analysis", "closed": "2017-11-20 15:29:08", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2017-11-14 15:53:32", "user": "jonpacker", "body": "Having an issue with a complicated (and admittedly hacky) cypher query. \r\n\r\n- Neo4j version: 3.3.0\r\n- Operating system: OSX 10.13.1\r\n- API/Driver: Cypher via REST API\r\n- Expected behavior: query succeeds\r\n- Actual behavior: get error `org.neo4j.kernel.impl.query.QueryExecutionKernelException: Expression Property(Variable(  video@114),PropertyKeyName(rel)) has to type from semantic analysis`\r\n\r\nI have query which rewrites a property `position` on a set of relationships between `:video` nodes and `:folder` nodes. For example, in the end project, if a `video` is inserted at the top of a folder, all other videos in folder need their `position` increased by 1. This query accomplishes that.\r\n\r\n```\r\nMATCH (folder:folder)<-[rel:in_folder]-(video:video)\r\nWHERE id(folder) = {folderId}\r\nWITH {video:video, rel:rel} as video ORDER BY video.rel.position, video.video.created\r\nWITH collect(video) AS videos\r\nWITH videos, CASE WHEN {position} = 'end' THEN size(videos) - 1 ELSE {position} END as position,\r\n     range(0, size(videos)-1) as iterator,\r\n     reduce(x=[-1,0], v IN videos | CASE WHEN id(v.video) = {videoId} THEN [x[1],x[1]+1] ELSE [x[0], x[1]+1] END)[0] as movingVideoPosition\r\nFOREACH (index IN iterator | FOREACH (rel IN [videos[index].rel] | SET rel.position =\r\n  CASE WHEN id(videos[index].video) = {videoId} THEN position\r\n       WHEN (index < movingVideoPosition AND index < position) OR (index > movingVideoPosition AND index > position) THEN index\r\n       WHEN movingVideoPosition < position THEN index - 1\r\n       ELSE index + 1 END))\r\n```\r\n\r\nThis query is supplied the following parameters: `videoId`, `folderId`, `position`.\r\n\r\nI'm not sure if trying walk through the query will help, or if someone who understands the neo4j internals can spot the problem pretty quickly. If you need me to explain something in the query I can do that.\r\n\r\nHere's a full stack trace: https://gist.github.com/jonpacker/1f9f217d45f44b567a369ac2bc03a521\r\n\r\nPlease let me know if there's any additional information needed that would be helpful.\r\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/10404", "title": "\"IdGenerator is not initialised\" error upgrading to 3.3.0 from 3.0.2", "closed": "2017-11-23 12:57:21", "commitsDetails": [], "commits": {}, "ttf": 14.000277777777777, "created": "2017-11-08 16:02:13", "user": "Dan-McG", "body": "Upgrading (database from 3.0.2 to 3.3.0 throws exception \"IdGenerator is not initialized\" at \"Migrating Native label scan index (5/6)\".  Database will not upgrade or spinup.  Database is largeish (500GB).\r\n\r\nVersion: 3.0.2 to 3.3.0 Community Single Instance\r\nOS: Ubuntu 16.04.3 with 64GB RAM\r\n\r\nSteps to reproduce:\r\nFollow 3.3.0 Single Instance Upgrade instructions [here](http://neo4j.com/docs/operations-manual/3.3/upgrade/deployment-upgrading/#upgrade-instructions-3x) and Upgrade FAQ [here](https://neo4j.com/guides/upgrade/) with existing 3.X db (aside: it's unclear how to configure tls/ssl now, hence using legacy certificate settings).\r\n\r\n**neo4j.log:**\r\n```nohup: ignoring input\r\n2017-11-08 14:46:03.126+0000 WARN  dbms.directories.certificates is deprecated.\r\n2017-11-08 14:46:03.154+0000 INFO  ======== Neo4j 3.3.0 ========\r\n2017-11-08 14:46:03.192+0000 INFO  Starting...\r\n2017-11-08 14:46:05.191+0000 INFO  Bolt enabled on 0.0.0.0:7687.\r\n2017-11-08 14:46:05.449+0000 INFO  Starting upgrade of database\r\n2017-11-08 14:46:05.500+0000 INFO  Migrating Indexes (1/6):\r\n2017-11-08 14:46:05.507+0000 INFO    10% completed\r\n2017-11-08 14:46:05.507+0000 INFO    20% completed\r\n2017-11-08 14:46:05.507+0000 INFO    30% completed\r\n2017-11-08 14:46:05.507+0000 INFO    40% completed\r\n2017-11-08 14:46:05.508+0000 INFO    50% completed\r\n2017-11-08 14:46:05.508+0000 INFO    60% completed\r\n2017-11-08 14:46:05.508+0000 INFO    70% completed\r\n2017-11-08 14:46:05.508+0000 INFO    80% completed\r\n2017-11-08 14:46:05.509+0000 INFO    90% completed\r\n2017-11-08 14:46:05.509+0000 INFO    100% completed\r\n2017-11-08 14:46:05.509+0000 INFO  Migrating Nothing (2/6):\r\n2017-11-08 14:46:05.509+0000 INFO    10% completed\r\n2017-11-08 14:46:05.509+0000 INFO    20% completed\r\n2017-11-08 14:46:05.510+0000 INFO    30% completed\r\n2017-11-08 14:46:05.510+0000 INFO    40% completed\r\n2017-11-08 14:46:05.510+0000 INFO    50% completed\r\n2017-11-08 14:46:05.510+0000 INFO    60% completed\r\n2017-11-08 14:46:05.511+0000 INFO    70% completed\r\n2017-11-08 14:46:05.511+0000 INFO    80% completed\r\n2017-11-08 14:46:05.511+0000 INFO    90% completed\r\n2017-11-08 14:46:05.511+0000 INFO    100% completed\r\n2017-11-08 14:46:05.512+0000 INFO  Migrating Explicit indexes (3/6):\r\n2017-11-08 14:46:05.513+0000 INFO    10% completed\r\n2017-11-08 14:46:05.513+0000 INFO    20% completed\r\n2017-11-08 14:46:05.513+0000 INFO    30% completed\r\n2017-11-08 14:46:05.513+0000 INFO    40% completed\r\n2017-11-08 14:46:05.514+0000 INFO    50% completed\r\n2017-11-08 14:46:05.514+0000 INFO    60% completed\r\n2017-11-08 14:46:05.514+0000 INFO    70% completed\r\n2017-11-08 14:46:05.514+0000 INFO    80% completed\r\n2017-11-08 14:46:05.515+0000 INFO    90% completed\r\n2017-11-08 14:46:05.515+0000 INFO    100% completed\r\n2017-11-08 14:46:05.515+0000 INFO  Migrating Store files (4/6):\r\n2017-11-08 14:46:05.692+0000 INFO    10% completed\r\n2017-11-08 14:46:05.692+0000 INFO    20% completed\r\n2017-11-08 14:46:05.692+0000 INFO    30% completed\r\n2017-11-08 14:46:05.693+0000 INFO    40% completed\r\n2017-11-08 14:46:05.693+0000 INFO    50% completed\r\n2017-11-08 14:46:05.693+0000 INFO    60% completed\r\n2017-11-08 14:46:05.693+0000 INFO    70% completed\r\n2017-11-08 14:46:05.694+0000 INFO    80% completed\r\n2017-11-08 14:46:05.694+0000 INFO    90% completed\r\n2017-11-08 14:46:05.694+0000 INFO    100% completed\r\n2017-11-08 14:46:05.694+0000 INFO  Migrating Native label scan index (5/6):\r\n2017-11-08 14:46:07.133+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@737a135b' was successfully initialized, but failed to start. Please see the attached cause exception \"IdGenerator is not initialized\". Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@737a135b' was successfully initialized, but failed to start. Please see the attached cause exception \"IdGenerator is not initialized\".\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@737a135b' was successfully initialized, but failed to start. Please see the attached cause exception \"IdGenerator is not initialized\".\r\n\tat org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:68)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:218)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:111)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:79)\r\n\tat org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:32)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabase@737a135b' was successfully initialized, but failed to start. Please see the attached cause exception \"IdGenerator is not initialized\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:466)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:210)\r\n\t... 3 more\r\nCaused by: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory, /home/X/X/newneo4j/data/databases/X.db\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:211)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:126)\r\n\tat org.neo4j.server.CommunityNeoServer.lambda$static$0(CommunityNeoServer.java:58)\r\n\tat org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:88)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:445)\r\n\t... 5 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@4df5bcb4' was successfully initialized, but failed to start. Please see the attached cause exception \"IdGenerator is not initialized\".\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:466)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:100)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:445)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:207)\r\n\t... 9 more\r\nCaused by: java.lang.IllegalStateException: IdGenerator is not initialized\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.assertIdGeneratorInitialized(CommonAbstractStore.java:577)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.getNumberOfIdsInUse(CommonAbstractStore.java:938)\r\n\tat org.neo4j.kernel.impl.storemigration.participant.NativeLabelScanStoreMigrator.migrate(NativeLabelScanStoreMigrator.java:73)\r\n\tat org.neo4j.kernel.impl.storemigration.StoreUpgrader.migrateToIsolatedDirectory(StoreUpgrader.java:207)\r\n\tat org.neo4j.kernel.impl.storemigration.StoreUpgrader.migrateIfNeeded(StoreUpgrader.java:132)\r\n\tat org.neo4j.kernel.impl.storemigration.DatabaseMigrator.migrate(DatabaseMigrator.java:100)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.upgradeStore(NeoStoreDataSource.java:573)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:435)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:445)\r\n\t... 14 more\r\n2017-11-08 14:46:07.135+0000 INFO  Neo4j Server shutdown initiated by request\r\n```\r\n\r\n**debug.log:**\r\n```\r\n2017-11-08 14:46:04.515+0000 INFO [o.n.k.i.f.CommunityEditionModule] No locking implementation specified, defaulting to 'community'\r\n2017-11-08 14:46:04.775+0000 INFO [o.n.k.AvailabilityGuard] Requirement makes database unavailable: Database available\r\n2017-11-08 14:46:04.810+0000 INFO [o.n.k.i.DiagnosticsManager] --- INITIALIZED diagnostics START ---\r\n2017-11-08 14:46:04.811+0000 INFO [o.n.k.i.DiagnosticsManager] Neo4j Kernel properties:\r\n2017-11-08 14:46:04.811+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.connector.http.enabled=true\r\n2017-11-08 14:46:04.811+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.security.auth_enabled=true\r\n2017-11-08 14:46:04.812+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.connector.http.listen_address=:7474\r\n2017-11-08 14:46:04.812+0000 INFO [o.n.k.i.DiagnosticsManager] unsupported.dbms.directories.neo4j_home=/home/X/X/newneo4j\r\n2017-11-08 14:46:04.812+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.directories.import=import\r\n2017-11-08 14:46:04.812+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.memory.heap.initial_size=16384m\r\n2017-11-08 14:46:04.812+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.allow_upgrade=true\r\n2017-11-08 14:46:04.812+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.connector.bolt.tls_level=REQUIRED\r\n2017-11-08 14:46:04.813+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.directories.run=run\r\n2017-11-08 14:46:04.813+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.directories.lib=lib\r\n2017-11-08 14:46:04.813+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.logs.debug.rotation.keep_number=1\r\n2017-11-08 14:46:04.813+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.logs.debug.rotation.size=20m\r\n2017-11-08 14:46:04.813+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.read_only=false\r\n2017-11-08 14:46:04.813+0000 INFO [o.n.k.i.DiagnosticsManager] https.ssl_policy=legacy\r\n2017-11-08 14:46:04.814+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.connector.https.enabled=true\r\n2017-11-08 14:46:04.814+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.jvm.additional=-Dunsupported.dbms.udc.source=tarball\r\n2017-11-08 14:46:04.814+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.tx_log.rotation.retention_policy=10k txs\r\n2017-11-08 14:46:04.814+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.memory.heap.max_size=16384m\r\n2017-11-08 14:46:04.814+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.connectors.default_listen_address=0.0.0.0\r\n2017-11-08 14:46:04.815+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.udc.enabled=true\r\n2017-11-08 14:46:04.815+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.logs.gc.rotation.keep_number=1\r\n2017-11-08 14:46:04.815+0000 INFO [o.n.k.i.DiagnosticsManager] bolt.ssl_policy=legacy\r\n2017-11-08 14:46:04.815+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.active_database=X.db\r\n2017-11-08 14:46:04.815+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.windows_service_name=neo4j\r\n2017-11-08 14:46:04.815+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.connector.https.listen_address=:7473\r\n2017-11-08 14:46:04.815+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.logs.http.enabled=true\r\n2017-11-08 14:46:04.816+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.connector.bolt.listen_address=:7687\r\n2017-11-08 14:46:04.816+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.memory.pagecache.size=24576m\r\n2017-11-08 14:46:04.816+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.directories.data=data\r\n2017-11-08 14:46:04.816+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.logs.gc.enabled=true\r\n2017-11-08 14:46:04.816+0000 INFO [o.n.k.i.DiagnosticsManager] unsupported.dbms.edition=community\r\n2017-11-08 14:46:04.816+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.directories.logs=logs\r\n2017-11-08 14:46:04.816+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.connector.bolt.enabled=true\r\n2017-11-08 14:46:04.817+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.directories.certificates=certificates\r\n2017-11-08 14:46:04.817+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.directories.plugins=plugins\r\n2017-11-08 14:46:04.817+0000 INFO [o.n.k.i.DiagnosticsManager] dbms.logs.gc.rotation.size=1m\r\n2017-11-08 14:46:04.817+0000 INFO [o.n.k.i.DiagnosticsManager] Diagnostics providers:\r\n2017-11-08 14:46:04.817+0000 INFO [o.n.k.i.DiagnosticsManager] org.neo4j.kernel.configuration.Config\r\n2017-11-08 14:46:04.817+0000 INFO [o.n.k.i.DiagnosticsManager] org.neo4j.kernel.info.DiagnosticsManager\r\n2017-11-08 14:46:04.817+0000 INFO [o.n.k.i.DiagnosticsManager] SYSTEM_MEMORY\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] JAVA_MEMORY\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] OPERATING_SYSTEM\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] JAVA_VIRTUAL_MACHINE\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] CLASSPATH\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] LIBRARY_PATH\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] SYSTEM_PROPERTIES\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] LINUX_SCHEDULERS\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] NETWORK\r\n2017-11-08 14:46:04.818+0000 INFO [o.n.k.i.DiagnosticsManager] System memory information:\r\n2017-11-08 14:46:04.826+0000 INFO [o.n.k.i.DiagnosticsManager] Total Physical memory: 62.92 GB\r\n2017-11-08 14:46:04.826+0000 INFO [o.n.k.i.DiagnosticsManager] Free Physical memory: 438.28 MB\r\n2017-11-08 14:46:04.827+0000 INFO [o.n.k.i.DiagnosticsManager] Committed virtual memory: 20.55 GB\r\n2017-11-08 14:46:04.827+0000 INFO [o.n.k.i.DiagnosticsManager] Total swap space: 0.00 B\r\n2017-11-08 14:46:04.827+0000 INFO [o.n.k.i.DiagnosticsManager] Free swap space: 0.00 B\r\n2017-11-08 14:46:04.827+0000 INFO [o.n.k.i.DiagnosticsManager] JVM memory information:\r\n2017-11-08 14:46:04.827+0000 INFO [o.n.k.i.DiagnosticsManager] Free  memory: 15.92 GB\r\n2017-11-08 14:46:04.828+0000 INFO [o.n.k.i.DiagnosticsManager] Total memory: 16.00 GB\r\n2017-11-08 14:46:04.828+0000 INFO [o.n.k.i.DiagnosticsManager] Max   memory: 16.00 GB\r\n2017-11-08 14:46:04.830+0000 INFO [o.n.k.i.DiagnosticsManager] Garbage Collector: G1 Young Generation: [G1 Eden Space, G1 Survivor Space]\r\n2017-11-08 14:46:04.830+0000 INFO [o.n.k.i.DiagnosticsManager] Garbage Collector: G1 Old Generation: [G1 Eden Space, G1 Survivor Space, G1 Old Gen]\r\n2017-11-08 14:46:04.831+0000 INFO [o.n.k.i.DiagnosticsManager] Memory Pool: Code Cache (Non-heap memory): committed=5.13 MB, used=5.11 MB, max=240.00 MB, threshold=0.00 B\r\n2017-11-08 14:46:04.832+0000 INFO [o.n.k.i.DiagnosticsManager] Memory Pool: Metaspace (Non-heap memory): committed=13.63 MB, used=12.74 MB, max=-1.00 B, threshold=0.00 B\r\n2017-11-08 14:46:04.832+0000 INFO [o.n.k.i.DiagnosticsManager] Memory Pool: Compressed Class Space (Non-heap memory): committed=1.88 MB, used=1.65 MB, max=1.00 GB, threshold=0.00 B\r\n2017-11-08 14:46:04.832+0000 INFO [o.n.k.i.DiagnosticsManager] Memory Pool: G1 Eden Space (Heap memory): committed=864.00 MB, used=80.00 MB, max=-1.00 B, threshold=?\r\n2017-11-08 14:46:04.832+0000 INFO [o.n.k.i.DiagnosticsManager] Memory Pool: G1 Survivor Space (Heap memory): committed=0.00 B, used=0.00 B, max=-1.00 B, threshold=?\r\n2017-11-08 14:46:04.833+0000 INFO [o.n.k.i.DiagnosticsManager] Memory Pool: G1 Old Gen (Heap memory): committed=15.16 GB, used=0.00 B, max=16.00 GB, threshold=0.00 B\r\n2017-11-08 14:46:04.833+0000 INFO [o.n.k.i.DiagnosticsManager] Operating system information:\r\n2017-11-08 14:46:04.833+0000 INFO [o.n.k.i.DiagnosticsManager] Operating System: Linux; version: 4.4.0-96-generic; arch: amd64; cpus: 12\r\n2017-11-08 14:46:04.834+0000 INFO [o.n.k.i.DiagnosticsManager] Max number of file descriptors: 40000\r\n2017-11-08 14:46:04.874+0000 INFO [o.n.k.i.DiagnosticsManager] Number of open file descriptors: 111\r\n2017-11-08 14:46:04.876+0000 INFO [o.n.k.i.DiagnosticsManager] Process id: 17004@hostname\r\n2017-11-08 14:46:04.877+0000 INFO [o.n.k.i.DiagnosticsManager] Byte order: LITTLE_ENDIAN\r\n2017-11-08 14:46:04.885+0000 INFO [o.n.k.i.DiagnosticsManager] Local timezone: Europe/London\r\n2017-11-08 14:46:04.885+0000 INFO [o.n.k.i.DiagnosticsManager] JVM information:\r\n2017-11-08 14:46:04.885+0000 INFO [o.n.k.i.DiagnosticsManager] VM Name: OpenJDK 64-Bit Server VM\r\n2017-11-08 14:46:04.885+0000 INFO [o.n.k.i.DiagnosticsManager] VM Vendor: Oracle Corporation\r\n2017-11-08 14:46:04.886+0000 INFO [o.n.k.i.DiagnosticsManager] VM Version: 25.151-b12\r\n2017-11-08 14:46:04.886+0000 INFO [o.n.k.i.DiagnosticsManager] JIT compiler: HotSpot 64-Bit Tiered Compilers\r\n2017-11-08 14:46:04.887+0000 INFO [o.n.k.i.DiagnosticsManager] VM Arguments: [-Xms16384m, -Xmx16384m, -Xloggc:/home/X/X/newneo4j/logs/gc.log, -XX:+UseGCLogFileRotation, -XX:NumberOfGCLogFiles=1, -XX:GCLogFileSize=1m, -XX:+PrintGCDetails, -XX:+PrintGCDateStamps, -XX:+PrintGCApplicationStoppedTime, -XX:+PrintPromotionFailure, -XX:+PrintTenuringDistribution, -XX:+UseG1GC, -XX:-OmitStackTraceInFastThrow, -XX:+AlwaysPreTouch, -XX:+UnlockExperimentalVMOptions, -XX:+TrustFinalNonStaticFields, -XX:+DisableExplicitGC, -Djdk.tls.ephemeralDHKeySize=2048, -Dunsupported.dbms.udc.source=tarball, -Dfile.encoding=UTF-8]\r\n2017-11-08 14:46:04.887+0000 INFO [o.n.k.i.DiagnosticsManager] Java classpath:\r\n2017-11-08 14:46:04.890+0000 INFO [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar\r\n2017-11-08 14:46:04.890+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-bolt-3.3.0.jar\r\n2017-11-08 14:46:04.890+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/opencsv-2.3.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jetty-server-9.2.22.v20170606.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-jmx-3.3.0.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-index-3.3.0.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-kernel-3.3.0.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/plugins/*\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-browser-3.0.11.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/nashorn.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jackson-mapper-asl-1.9.13.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-resource-3.3.0.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jline-2.12.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jetty-webapp-9.2.22.v20170606.jar\r\n2017-11-08 14:46:04.891+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jetty-servlet-9.2.22.v20170606.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-unsafe-3.3.0.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-logical-plans-3.3-3.3.0.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/commons-lang3-3.5.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jetty-http-9.2.22.v20170606.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/commons-io-2.4.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-lucene-upgrade-3.3.0.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-ir-3.3-3.3.0.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/localedata.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/javax.servlet-api-3.1.0.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-ir-3.2-3.2.5.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jersey-server-1.19.jar\r\n2017-11-08 14:46:04.892+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-import-tool-3.3.0.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/cldrdata.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/lib/jvm/java-8-openjdk-amd64/jre/classes\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jsr311-api-1.1.2.r612.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-3.3.0.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-frontend-3.3-3.3.0.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-configuration-3.3.0.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/commons-lang-2.6.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/commons-configuration-1.10.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/scala-library-2.11.11.jar\r\n2017-11-08 14:46:04.893+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-frontend-3.2-3.2.5.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-security-3.3.0.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-shell-3.3.0.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-compiler-3.2-3.2.5.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jersey-multipart-1.19.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/commons-compress-1.12.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-compiler-3.3-3.3.0.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-logging-3.3.0.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-compiler-2.3-2.3.11.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-dbms-3.3.0.jar\r\n2017-11-08 14:46:04.894+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-lucene-index-3.3.0.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-graph-algo-3.3.0.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/lucene-analyzers-common-5.5.0.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-frontend-3.1-3.1.6.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jersey-core-1.19.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/scala-reflect-2.11.11.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-codegen-3.3.0.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/icedtea-sound.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunjce_provider.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/commons-logging-1.1.1.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/conf/\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/caffeine-2.3.3.jar\r\n2017-11-08 14:46:04.895+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-server-3.3.0.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-csv-3.3.0.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-io-3.3.0.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-compiler-3.1-3.1.6.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jetty-util-9.2.22.v20170606.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/rhino-1.7R4.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-graph-matching-3.1.6.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/commons-text-1.1.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/mimepull-1.9.3.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/jaccess.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/parboiled-scala_2.11-1.1.7.jar\r\n2017-11-08 14:46:04.896+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/bcpkix-jdk15on-1.53.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunpkcs11.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/lucene-core-5.5.0.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/sunec.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-collections-3.3.0.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/concurrentlinkedhashmap-lru-1.4.2.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jetty-io-9.2.22.v20170606.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-udc-3.3.0.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-graphdb-api-3.3.0.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/netty-all-4.1.15.Final.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/zipfs.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jersey-servlet-1.19.jar\r\n2017-11-08 14:46:04.897+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/lucene-queryparser-5.5.0.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-values-3.3.0.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-common-3.3.0.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jackson-jaxrs-1.9.13.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/lucene-codecs-5.5.0.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-primitive-collections-3.3.0.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/plugins/\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jackson-core-asl-1.9.13.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jetty-security-9.2.22.v20170606.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext/dnsns.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/bcprov-jdk15on-1.53.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-consistency-check-3.3.0.jar\r\n2017-11-08 14:46:04.898+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-cypher-frontend-2.3-2.3.11.jar\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/server-api-3.3.0.jar\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/jetty-xml-9.2.22.v20170606.jar\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-ssl-3.3.0.jar\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/neo4j-command-line-3.3.0.jar\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/home/X/X/newneo4j/lib/parboiled-core-1.1.7.jar\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager] Library path:\r\n2017-11-08 14:46:04.899+0000 INFO [o.n.k.i.DiagnosticsManager] /usr/java/packages/lib/amd64\r\n2017-11-08 14:46:04.900+0000 INFO [o.n.k.i.DiagnosticsManager] /usr/lib/x86_64-linux-gnu/jni\r\n2017-11-08 14:46:04.900+0000 INFO [o.n.k.i.DiagnosticsManager] /lib/x86_64-linux-gnu\r\n2017-11-08 14:46:04.900+0000 INFO [o.n.k.i.DiagnosticsManager] /usr/lib/x86_64-linux-gnu\r\n2017-11-08 14:46:04.900+0000 INFO [o.n.k.i.DiagnosticsManager] /usr/lib/jni\r\n2017-11-08 14:46:04.900+0000 INFO [o.n.k.i.DiagnosticsManager] /lib\r\n2017-11-08 14:46:04.900+0000 INFO [o.n.k.i.DiagnosticsManager] /usr/lib\r\n2017-11-08 14:46:04.900+0000 INFO [o.n.k.i.DiagnosticsManager] System.properties:\r\n2017-11-08 14:46:04.900+0000 INFO [o.n.k.i.DiagnosticsManager] sun.boot.library.path = /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] path.separator = :\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] file.encoding.pkg = sun.io\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] user.country = US\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] sun.java.launcher = SUN_STANDARD\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] sun.os.patch.level = unknown\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] user.dir = /home/X/X/newneo4j\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] sun.jnu.encoding = UTF-8\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] unsupported.dbms.udc.source = tarball\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] sun.management.compiler = HotSpot 64-Bit Tiered Compilers\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] user.home = /home/X\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] user.timezone = Europe/London\r\n2017-11-08 14:46:04.901+0000 INFO [o.n.k.i.DiagnosticsManager] file.encoding = UTF-8\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] user.name = X\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] sun.java.command = org.neo4j.server.CommunityEntryPoint --home-dir=/home/X/X/newneo4j --config-dir=/home/X/X/newneo4j/conf\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] sun.arch.data.model = 64\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] user.language = en\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] awt.toolkit = sun.awt.X11.XToolkit\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] jdk.tls.ephemeralDHKeySize = 2048\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] file.separator = /\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] sun.io.unicode.encoding = UnicodeLittle\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] sun.cpu.endian = little\r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] sun.cpu.isalist = \r\n2017-11-08 14:46:04.902+0000 INFO [o.n.k.i.DiagnosticsManager] Linux scheduler information:\r\n2017-11-08 14:46:04.914+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.915+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.915+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.915+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.916+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.916+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.916+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.917+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.917+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.917+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.918+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.918+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.919+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.919+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.919+0000 INFO [o.n.k.i.DiagnosticsManager] none\r\n2017-11-08 14:46:04.919+0000 INFO [o.n.k.i.DiagnosticsManager] Network information:\r\n2017-11-08 14:46:04.920+0000 INFO [o.n.k.i.DiagnosticsManager] Interface ens3:\r\n2017-11-08 14:46:04.921+0000 INFO [o.n.k.i.DiagnosticsManager]     address: fe80:0:0:0:f705:2eff:fea1:14f0%ens3\r\n2017-11-08 14:46:04.921+0000 INFO [o.n.k.i.DiagnosticsManager]     address: 10.1.0.92\r\n2017-11-08 14:46:04.921+0000 INFO [o.n.k.i.DiagnosticsManager] Interface lo:\r\n2017-11-08 14:46:04.921+0000 INFO [o.n.k.i.DiagnosticsManager]     address: 0:0:0:0:0:0:0:1%lo\r\n2017-11-08 14:46:04.921+0000 INFO [o.n.k.i.DiagnosticsManager]     address: 127.0.0.1\r\n2017-11-08 14:46:04.921+0000 INFO [o.n.k.i.DiagnosticsManager] --- INITIALIZED diagnostics END ---\r\n2017-11-08 14:46:05.190+0000 INFO [o.n.b.v.r.WorkerFactory] Bolt Server extension loaded.\r\n2017-11-08 14:46:05.191+0000 INFO [o.n.b.v.r.WorkerFactory] Bolt enabled on 0.0.0.0:7687.\r\n2017-11-08 14:46:05.412+0000 INFO [o.n.k.i.s.f.RecordFormatSelector] Selected RecordFormat:StandardV3_0[v0.A.7] record format from store /home/X/X/newneo4j/data/databases/X.db\r\n2017-11-08 14:46:05.413+0000 INFO [o.n.k.i.s.f.RecordFormatSelector] Selected format 'RecordFormat:StandardV3_2[v0.A.8]' for existing store with format 'RecordFormat:StandardV3_0[v0.A.7]'\r\n2017-11-08 14:46:05.450+0000 INFO [o.n.k.i.s.p.StoreMigrator] Starting upgrade of database\r\n2017-11-08 14:46:05.500+0000 INFO [o.n.k.i.s.p.StoreMigrator] Migrating Indexes (1/6):\r\n2017-11-08 14:46:05.507+0000 INFO [o.n.k.i.s.p.StoreMigrator]   10% completed\r\n2017-11-08 14:46:05.507+0000 INFO [o.n.k.i.s.p.StoreMigrator]   20% completed\r\n2017-11-08 14:46:05.507+0000 INFO [o.n.k.i.s.p.StoreMigrator]   30% completed\r\n2017-11-08 14:46:05.508+0000 INFO [o.n.k.i.s.p.StoreMigrator]   40% completed\r\n2017-11-08 14:46:05.508+0000 INFO [o.n.k.i.s.p.StoreMigrator]   50% completed\r\n2017-11-08 14:46:05.508+0000 INFO [o.n.k.i.s.p.StoreMigrator]   60% completed\r\n2017-11-08 14:46:05.508+0000 INFO [o.n.k.i.s.p.StoreMigrator]   70% completed\r\n2017-11-08 14:46:05.508+0000 INFO [o.n.k.i.s.p.StoreMigrator]   80% completed\r\n2017-11-08 14:46:05.509+0000 INFO [o.n.k.i.s.p.StoreMigrator]   90% completed\r\n2017-11-08 14:46:05.509+0000 INFO [o.n.k.i.s.p.StoreMigrator]   100% completed\r\n2017-11-08 14:46:05.509+0000 INFO [o.n.k.i.s.p.StoreMigrator] Migrating Nothing (2/6):\r\n2017-11-08 14:46:05.509+0000 INFO [o.n.k.i.s.p.StoreMigrator]   10% completed\r\n2017-11-08 14:46:05.510+0000 INFO [o.n.k.i.s.p.StoreMigrator]   20% completed\r\n2017-11-08 14:46:05.510+0000 INFO [o.n.k.i.s.p.StoreMigrator]   30% completed\r\n2017-11-08 14:46:05.510+0000 INFO [o.n.k.i.s.p.StoreMigrator]   40% completed\r\n2017-11-08 14:46:05.510+0000 INFO [o.n.k.i.s.p.StoreMigrator]   50% completed\r\n2017-11-08 14:46:05.510+0000 INFO [o.n.k.i.s.p.StoreMigrator]   60% completed\r\n2017-11-08 14:46:05.511+0000 INFO [o.n.k.i.s.p.StoreMigrator]   70% completed\r\n2017-11-08 14:46:05.511+0000 INFO [o.n.k.i.s.p.StoreMigrator]   80% completed\r\n2017-11-08 14:46:05.511+0000 INFO [o.n.k.i.s.p.StoreMigrator]   90% completed\r\n2017-11-08 14:46:05.511+0000 INFO [o.n.k.i.s.p.StoreMigrator]   100% completed\r\n2017-11-08 14:46:05.512+0000 INFO [o.n.k.i.s.p.StoreMigrator] Migrating Explicit indexes (3/6):\r\n2017-11-08 14:46:05.513+0000 INFO [o.n.k.i.s.p.StoreMigrator]   10% completed\r\n2017-11-08 14:46:05.513+0000 INFO [o.n.k.i.s.p.StoreMigrator]   20% completed\r\n2017-11-08 14:46:05.513+0000 INFO [o.n.k.i.s.p.StoreMigrator]   30% completed\r\n2017-11-08 14:46:05.513+0000 INFO [o.n.k.i.s.p.StoreMigrator]   40% completed\r\n2017-11-08 14:46:05.514+0000 INFO [o.n.k.i.s.p.StoreMigrator]   50% completed\r\n2017-11-08 14:46:05.514+0000 INFO [o.n.k.i.s.p.StoreMigrator]   60% completed\r\n2017-11-08 14:46:05.514+0000 INFO [o.n.k.i.s.p.StoreMigrator]   70% completed\r\n2017-11-08 14:46:05.514+0000 INFO [o.n.k.i.s.p.StoreMigrator]   80% completed\r\n2017-11-08 14:46:05.515+0000 INFO [o.n.k.i.s.p.StoreMigrator]   90% completed\r\n2017-11-08 14:46:05.515+0000 INFO [o.n.k.i.s.p.StoreMigrator]   100% completed\r\n2017-11-08 14:46:05.515+0000 INFO [o.n.k.i.s.p.StoreMigrator] Migrating Store files (4/6):\r\n2017-11-08 14:46:05.692+0000 INFO [o.n.k.i.s.p.StoreMigrator]   10% completed\r\n2017-11-08 14:46:05.692+0000 INFO [o.n.k.i.s.p.StoreMigrator]   20% completed\r\n2017-11-08 14:46:05.692+0000 INFO [o.n.k.i.s.p.StoreMigrator]   30% completed\r\n2017-11-08 14:46:05.693+0000 INFO [o.n.k.i.s.p.StoreMigrator]   40% completed\r\n2017-11-08 14:46:05.693+0000 INFO [o.n.k.i.s.p.StoreMigrator]   50% completed\r\n2017-11-08 14:46:05.693+0000 INFO [o.n.k.i.s.p.StoreMigrator]   60% completed\r\n2017-11-08 14:46:05.693+0000 INFO [o.n.k.i.s.p.StoreMigrator]   70% completed\r\n2017-11-08 14:46:05.694+0000 INFO [o.n.k.i.s.p.StoreMigrator]   80% completed\r\n2017-11-08 14:46:05.694+0000 INFO [o.n.k.i.s.p.StoreMigrator]   90% completed\r\n2017-11-08 14:46:05.694+0000 INFO [o.n.k.i.s.p.StoreMigrator]   100% completed\r\n2017-11-08 14:46:05.694+0000 INFO [o.n.k.i.s.p.StoreMigrator] Migrating Native label scan index (5/6):\r\n2017-11-08 14:46:07.126+0000 INFO [o.n.k.i.DiagnosticsManager] --- STOPPING diagnostics START ---\r\n2017-11-08 14:46:07.126+0000 INFO [o.n.k.i.DiagnosticsManager] --- STOPPING diagnostics END ---\r\n2017-11-08 14:46:07.127+0000 INFO [o.n.k.i.f.GraphDatabaseFacadeFactory] Shutdown started\r\n```\r\n**from neo4j.conf:**\r\n```\r\ndbms.memory.pagecache.size=24576m\r\ndbms.memory.heap.initial_size=16384m\r\ndbms.memory.heap.max_size=16384m\r\n```\r\nExpected behaviour: Database upgrades and startsup\r\nActual behaviour: Throws exception and fails"}, {"labels": ["3.3", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10387", "title": "Error with complex parameter in 3.3.0 (working in 3.2.6)", "closed": "2017-12-01 09:18:11", "commitsDetails": [], "commits": {}, "ttf": 24.00027777777778, "created": "2017-11-07 09:05:07", "user": "sgehrig", "body": "**Neo4j Version:** 3.3.0-enterprise\r\n**Operating System:** Docker Image and Ubuntu 16.04\r\n**Driver:** PHP graphaware/neo4j-bolt-php 1.10.0\r\n\r\nThe following query\r\n\r\n```\r\nMATCH (role:ROLE)\r\nWHERE role.id = $id\r\nWITH role\r\nUNWIND $permissions AS permission\r\nMATCH (realm:REALM)\r\nWHERE realm.id = permission.realmId\r\nCREATE (role)-[:HAS_PERMISSION { permissions: permission.rights }]->(realm)\r\n```\r\n\r\nwith these parameters\r\n\r\n```\r\n{\r\n\r\n    id: 'abc',\r\n    permissions: [\r\n        {\r\n            realmId: 'def',\r\n            rights: ['read']\r\n        }\r\n    ]\r\n}\r\n```\r\n\r\nfails on 3.3.0 while it's working fine on 3.2.6.\r\n\r\nThe error log shows\r\n\r\n```\r\n[o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: null, reference 9f658959-e0c0-4db7-95b1-b739b497fd30.\r\n2017-11-06 13:00:00.750+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: null, reference 9f658959-e0c0-4db7-95b1-b739b497fd30.\r\njava.lang.ArrayIndexOutOfBoundsException\r\n\u2002\u2002at java.lang.System.arraycopy(Native Method)\r\n\u2002\u2002at org.neo4j.cypher.internal.compatibility.v3_3.runtime.slotted.PrimitiveExecutionContext.copyFrom(PrimitiveExecutionContext.scala:55)\r\n\u2002\u2002at org.neo4j.cypher.internal.compatibility.v3_3.runtime.pipes.QueryState$$anonfun$copyArgumentStateTo$1.apply(QueryState.scala:77)\r\n\u2002\u2002at org.neo4j.cypher.internal.compatibility.v3_3.runtime.pipes.QueryState$$anonfun$copyArgumentStateTo$1.apply(QueryState.scala:77)\r\n\u2002\u2002at scala.Option.foreach(Option.scala:257)\r\n```\r\n\r\nRunning the same query with the same parameters in the Neo4j browser works. Same is true if the query is prefixed with `cypher runtime=interpreted ...`.\r\n\r\n### Expected behavior\r\nQuery should work as in 3.2.6.\r\n\r\n### Actual behavior\r\nQuery fails.\r\n"}, {"labels": ["3.2", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/10346", "title": "Unable to start neo4j server with server plugin jar file", "closed": "2018-01-03 10:08:52", "commitsDetails": [], "commits": {}, "ttf": 68.00027777777778, "created": "2017-10-26 12:51:15", "user": "grv1207", "body": "I have created 2 server separate server plugins and copy them one by one to start neo4j server. With one jar file I'm able to start the server, but with other I'm unable to start the server and get error on CLI.\r\n   \r\n\r\n- Neo4j version: 3.2.0\r\n- Operating system: (Ubuntu 16.04\r\n- API/Driver: Java API\r\n\r\n### Expected behavior\r\nI should be able to start the server with any jar file\r\n\r\n### Actual behavior\r\ninstead I get en error\r\nOkt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: at org.neo4j.kernel.impl.proc.ProcedureJarLoader$1.fetchNextOrNull(ProcedureJarLoader.java:146) Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: at org.neo4j.kernel.impl.proc.ProcedureJarLoader$1.fetchNextOrNull(ProcedureJarLoader.java:118) Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: at org.neo4j.collection.PrefetchingRawIterator.peek(PrefetchingRawIterator.java:50) Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: at org.neo4j.collection.PrefetchingRawIterator.hasNext(PrefetchingRawIterator.java:36) Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: at org.neo4j.kernel.impl.proc.ProcedureJarLoader.loadProcedures(ProcedureJarLoader.java:91) Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: at org.neo4j.kernel.impl.proc.ProcedureJarLoader.loadProceduresFromDir(ProcedureJarLoader.java:82) Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: at org.neo4j.kernel.impl.proc.Procedures.start(Procedures.java:275) Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:434) Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: ... 11 more Okt 26 13:01:05 gaurav-GB-BSi3-6100 neo4j[24787]: 2017-10-26 11:01:05.344+0000 INFO Neo4j Server shutdown initiated by request\r\n"}, {"labels": ["bug", "cypher", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/10132", "title": "Presence of an index corrupts query results", "closed": "2017-10-04 10:15:02", "commitsDetails": [], "commits": {}, "ttf": 11.000277777777777, "created": "2017-09-22 12:52:31", "user": "EugeneWagner", "body": "**Neo4j Version:** 3.3.0-beta02\r\n**Operating System:** Windows7\r\n\r\n## How to Reproduce\r\n###Create a small graph with 4 Nodes\r\n\r\n`create (:Person{id:1, name:'Bob', version:1});`\r\n`create (:Person{id:1, name:'Bob', version:2});`\r\n`create (:Person{id:2, name:'Sam', version:1});`\r\n`create (:Person{id:2, name:'Sam', version:2});`\r\n\r\n\r\n###Run a simple query:\r\n`match(p1:Person{id:1}), (p2:Person{id:2}) return distinct p1.id,p2.id;`\r\n(returns \"1, 2\")\r\n\r\n###Corrupt things by adding an index\r\n`create Index on:Person(id);`\r\n\r\n###Rerun the same query\r\n`match(p1:Person{id:1}), (p2:Person{id:2}) return distinct p1.id,p2.id;`\r\n(returns \"1, 2  \\n 2, 2\")\r\n\r\nA Snipit of my Browser was attached as \"Browser.PNG\"\r\n![browser](https://user-images.githubusercontent.com/32197608/30745284-c9f2b9d8-9fa5-11e7-945b-8e20c057ec9b.PNG)\r\n"}, {"labels": ["3.2", "bug", "cypher", "team-cypher"], "filteredCommits": ["c9c83f8c5be18bca5f944caf3ddd46a37405d30e"], "url": "https://github.com/neo4j/neo4j/issues/10100", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 3, "deletions": 0}, "numCommits": 1, "commits": {"c9c83f8c5be18bca5f944caf3ddd46a37405d30e": {"commitUser": "craigtaverner", "commitGHEventType": "closed"}}, "ttf": 16.00027777777778, "user": "cheerfulstoic", "changesInPackagesGIT": ["community/cypher/frontend-3.2/src/main/scala/org/neo4j/cypher/internal"], "body": "Initial report from the Neo4j.rb project: https://github.com/neo4jrb/neo4j/issues/1417\r\n\r\nSummary: Queries in the form of `... WHERE var:Label1:Label2` don't seem to work anymore\r\n\r\n- Neo4j version: 3.2.5\r\n- Operating system: Neo4j Desktop on Mac\r\n- API/Driver: Neo4j.rb (though it fails putting the Cypher into the browser query prompt)\r\n\r\n### Steps to reproduce\r\n\r\nRunning the following query on a blank database:\r\n\r\n```\r\nMATCH (account23907) WHERE (ID(account23907) = 23907) MATCH (account23907)<-[rel1:`ACCOUNT`]-(result_owners) WHERE (`result_owners`:`Persona::Superhero`:`Persona` OR `result_owners`:`Persona::Supervillian`:`Persona`) RETURN result_owners\r\n```\r\n\r\nTried on 3.2.0 through 3.2.3 and everything is fine.  3.2.5 breaks.\r\n\r\n### Expected behavior\r\n\r\nFor an empty DB, expect empty result\r\n\r\n### Actual behavior\r\n\r\nGet the following error:\r\n\r\n```\r\nExpected \r\nRegularPlannerQuery(QueryGraph(Set(PatternRelationship(IdName(rel1),(IdName(account23907),IdName(result_owners)),INCOMING,List(RelTypeName(ACCOUNT)),SimplePatternLength)),Set(IdName(account23907), IdName(result_owners)),Set(),Selections(Set(Predicate(Set(IdName(result_owners)),Ors(Set(HasLabels(Variable(result_owners),List(LabelName(Persona::Superhero), LabelName(Persona))), HasLabels(Variable(result_owners),List(LabelName(Persona::Supervillian), LabelName(Persona)))))), Predicate(Set(IdName(account23907)),In(FunctionInvocation(Namespace(List()),FunctionName(ID),false,Vector(Variable(account23907))),ListLiteral(List(Parameter(  AUTOINT0,Integer))))))),Vector(),Set(),Set(),List()),RegularQueryProjection(Map(result_owners -> Variable(result_owners)),QueryShuffle(List(),None,None)),None) \r\n\r\n\r\nInstead, got: \r\nRegularPlannerQuery(QueryGraph(Set(PatternRelationship(IdName(rel1),(IdName(account23907),IdName(result_owners)),INCOMING,List(RelTypeName(ACCOUNT)),SimplePatternLength)),Set(IdName(result_owners), IdName(account23907)),Set(),Selections(Set(Predicate(Set(IdName(account23907)),In(FunctionInvocation(Namespace(List()),FunctionName(ID),false,Vector(Variable(account23907))),ListLiteral(List(Parameter(  AUTOINT0,Integer))))), Predicate(Set(IdName(result_owners)),HasLabels(Variable(result_owners),List(LabelName(Persona)))), Predicate(Set(IdName(result_owners)),HasLabels(Variable(result_owners),List(LabelName(Persona::Superhero)))), Predicate(Set(IdName(result_owners)),Ors(Set(HasLabels(Variable(result_owners),List(LabelName(Persona::Superhero), LabelName(Persona))), HasLabels(Variable(result_owners),List(LabelName(Persona::Supervillian), LabelName(Persona)))))), Predicate(Set(IdName(result_owners)),HasLabels(Variable(result_owners),List(LabelName(Persona::Supervillian)))))),Vector(),Set(),Set(),List()),RegularQueryProjection(Map(result_owners -> Variable(result_owners)),QueryShuffle(List(),None,None)),None)\r\n```\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Reversion in multiple label syntax in `WHERE` clause in Neo4j 3.2.5", "statsSkippedReason": "", "closed": "2017-10-06 14:54:53", "commitsDetails": [{"commitUser": "craigtaverner", "commitDateTime": "2017-10-03 17:34:25", "commitHash": "c9c83f8c5be18bca5f944caf3ddd46a37405d30e", "commitParents": ["afaa5b19e1f2e9ab8027a0becbefe968107c8471"], "commitGHEventType": "closed", "nameRev": "c9c83f8c5be18bca5f944caf3ddd46a37405d30e tags/3.3.0~4^2~12^2~1", "commitGitStats": [{"insertions": 16, "lines": 16, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/cypher/features/MatchAcceptance.feature", "deletions": 0}, {"insertions": 59, "lines": 69, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/MatchAcceptanceTest.scala", "deletions": 10}, {"insertions": 17, "lines": 20, "filePath": "community/cypher/cypher-compiler-3.2/src/test/scala/org/neo4j/cypher/internal/compiler/v3_2/ast/rewriters/NormalizeComparisonsTest.scala", "deletions": 3}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/frontend-3.2/src/main/scala/org/neo4j/cypher/internal/frontend/v3_2/ast/rewriters/normalizeComparisons.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Rewrite comparison of multiple labels\n\nA HasLabels containing multiple labels will be rewritten to an Ands with\na set of HasLabels containing one label each. This fixes an issue with\nplanning an Or with multiple labels on at least side.\n\nFixes #10100\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-10-03 15:11:15"}], "created": "2017-09-19 17:45:45"}, {"labels": ["browser", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/10034", "title": "3.2 - Backslash not used as escape character", "closed": "2017-10-16 06:41:36", "commitsDetails": [], "commits": {}, "ttf": 34.000277777777775, "created": "2017-09-11 14:21:18", "user": "meilechh", "body": "I discovered that backslashes are not used as escape characters in version 3.2, tried the same thing in 3.1 and it worked as expected.\r\nI also tried it in cypher-shell and it also worked as expected.\r\n\r\n**Neo4j Version:** 3.2.3\r\n**Operating System:** Oracle Linux\r\n**API:** Javascript driver and Browser\r\n\r\n### Steps to reproduce\r\nRun this query in browser: `with \"\\\\\" as backslash return backslash;`\r\n\r\n### Expected behavior\r\nAccording to https://neo4j.com/docs/developer-manual/current/cypher/syntax/expressions/ result should be `\\`.\r\n\r\n### Actual behavior\r\nResult is double backslash `\\\\`."}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/9952", "title": "Cypher query fails with `Expected ... Instead, got: `", "closed": "2017-10-04 10:13:43", "commitsDetails": [], "commits": {}, "ttf": 33.000277777777775, "created": "2017-08-31 13:41:02", "user": "ontologiae", "body": "\r\n\r\nHi,\r\n\r\nA Cypher query fails to execute and throw an error.\r\nI got a long message with \"Expected\" followed by the scala version of the AST of the query, followed by \"Instead, I got\" with another long AST (see below).\r\n\r\n\r\n**Neo4j Version:** 3.2.3\r\n**Operating System:** Linux neo4j.dev 3.16.0-4-amd64 #1 SMP Debian 3.16.7-ckt25-1 (2016-03-06) x86_64 GNU/Linux\r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n1. Pull the image:[QueryFailedExpectedInsteadGot.zip](https://github.com/neo4j/neo4j/files/1267244/QueryFailedExpectedInsteadGot.zip)\r\n2. Unzip the file and go to the `QueryFailedExpectedInsteadGot` directory\r\n3. $ cypher-shell -a localhost -u neo4j -p YOURPASS --debug --format verbose <  CypherQueryBugDatas.cypher\r\n4. cypher-shell -a localhost -u neo4j -p YOURPASS --debug --format verbose < QueryFailed.cypher\r\n\r\n### Expected behavior\r\nThe query returns 0 or more lines\r\n\r\n### Actual behavior\r\n\r\nGot this : \r\n```\r\nExpected \r\nRegularPlannerQuery(QueryGraph(Set(PatternRelationship(IdName(  UNNAMED63),(IdName(setters),IdName(  UNNAMED74)),OUTGOING,List(RelTypeName(vBody)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED111),(IdName(  UNNAMED74),IdName(statements)),OUTGOING,List(RelTypeName(vstatements)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED151),(IdName(setters),IdName(  UNNAMED167)),OUTGOING,List(RelTypeName(vModifiers)),SimplePatternLength)),Set(IdName(setters), IdName(  UNNAMED74), IdName(statements), IdName(  UNNAMED167)),Set(),Selections(Set(Predicate(Set(IdName(  UNNAMED167)),HasLabels(Variable(  UNNAMED167),List(LabelName(Modifier)))), Predicate(Set(IdName(  UNNAMED74)),In(Property(Variable(  UNNAMED74),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING1,String))))), Predicate(Set(IdName(setters)),In(Property(Variable(setters),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING0,String))))), Predicate(Set(IdName(  UNNAMED167)),In(Property(Variable(  UNNAMED167),PropertyKeyName(isPublic)),ListLiteral(List(Parameter(  AUTOSTRING2,String))))), Predicate(Set(IdName(  UNNAMED74)),HasLabels(Variable(  UNNAMED74),List(LabelName(Block)))), Predicate(Set(IdName(setters)),HasLabels(Variable(setters),List(LabelName(MethodDeclaration)))))),Vector(),Set(),Set(),List()),AggregatingQueryProjection(Map(setters -> Variable(setters)),Map(statementsCount -> FunctionInvocation(Namespace(List()),FunctionName(count),false,Vector(Variable(statements)))),QueryShuffle(List(),None,None)),Some(RegularPlannerQuery(QueryGraph(Set(),Set(),Set(IdName(setters), IdName(statementsCount)),Selections(Set()),Vector(),Set(),Set(),List()),RegularQueryProjection(Map(setters -> Variable(setters), statementsCount -> Variable(statementsCount),   FRESHID269 -> Equals(Variable(statementsCount),Parameter(  AUTOINT3,Integer))),QueryShuffle(List(),None,None)),Some(RegularPlannerQuery(QueryGraph(Set(PatternRelationship(IdName(  UNNAMED289),(IdName(setters),IdName(  UNNAMED300)),OUTGOING,List(RelTypeName(vBody)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED337),(IdName(  UNNAMED300),IdName(  UNNAMED354)),OUTGOING,List(RelTypeName(vstatements)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED405),(IdName(  UNNAMED354),IdName(  UNNAMED408)),OUTGOING,List(),SimplePatternLength), PatternRelationship(IdName(  UNNAMED478),(IdName(setters),IdName(  UNNAMED495)),OUTGOING,List(RelTypeName(vparameters)),SimplePatternLength)),Set(IdName(  res@517), IdName(  UNNAMED495), IdName(  UNNAMED354), IdName(  UNNAMED300), IdName(  UNNAMED408), IdName(setters), IdName(  rankf@668)),Set(IdName(setters), IdName(statementsCount), IdName(  FRESHID269)),Selections(Set(Predicate(Set(IdName(  FRESHID269)),Variable(  FRESHID269)), Predicate(Set(IdName(setters), IdName(  res@517)),Equals(Property(Variable(setters),PropertyKeyName(methodName)),Property(Variable(  res@517),PropertyKeyName(methodName)))), Predicate(Set(IdName(  res@517), IdName(  rankf@668)),Equals(Property(Variable(  res@517),PropertyKeyName(uidFonctionEnglobante)),Property(Variable(  rankf@668),PropertyKeyName(uid)))), Predicate(Set(IdName(  UNNAMED289), IdName(  UNNAMED405)),Not(Equals(Variable(  UNNAMED289),Variable(  UNNAMED405)))), Predicate(Set(IdName(  UNNAMED354)),In(Property(Variable(  UNNAMED354),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING5,String))))), Predicate(Set(IdName(  rankf@668)),In(Property(Variable(  rankf@668),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING8,String))))), Predicate(Set(IdName(setters), IdName(  res@517)),Equals(Property(Variable(setters),PropertyKeyName(nomFichier)),Property(Variable(  res@517),PropertyKeyName(nomFichier)))), Predicate(Set(IdName(  UNNAMED300)),HasLabels(Variable(  UNNAMED300),List(LabelName(Block)))), Predicate(Set(IdName(  rankf@668)),HasLabels(Variable(  rankf@668),List(LabelName(MethodDeclaration)))), Predicate(Set(IdName(  res@517)),In(Property(Variable(  res@517),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING7,String))))), Predicate(Set(IdName(  UNNAMED408)),HasLabels(Variable(  UNNAMED408),List(LabelName(Assignment)))), Predicate(Set(IdName(  UNNAMED354)),HasLabels(Variable(  UNNAMED354),List(LabelName(ExpressionStatement)))), Predicate(Set(IdName(  res@517)),HasLabels(Variable(  res@517),List(LabelName(MethodInvocation)))), Predicate(Set(IdName(  UNNAMED408)),In(Property(Variable(  UNNAMED408),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING6,String))))), Predicate(Set(IdName(  UNNAMED300)),In(Property(Variable(  UNNAMED300),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING4,String))))), Predicate(Set(IdName(  UNNAMED337), IdName(  UNNAMED405)),Not(Equals(Variable(  UNNAMED337),Variable(  UNNAMED405)))))),Vector(),Set(),Set(),List()),RegularQueryProjection(Map(  res@517 -> Variable(  res@517),   rankf@668 -> Variable(  rankf@668),   ruleCoef@789 -> Parameter(  AUTOINT9,Integer)),QueryShuffle(List(),None,None)),Some(RegularPlannerQuery(QueryGraph(Set(),Set(),Set(IdName(  res@517), IdName(  rankf@668), IdName(  ruleCoef@789)),Selections(Set()),Vector(),Set(),Set(),List()),AggregatingQueryProjection(Map(res.nomFichier -> Property(Variable(  res@517),PropertyKeyName(nomFichier)), res.lineNum -> Property(Variable(  res@517),PropertyKeyName(lineNum)), 1 -> Parameter(  AUTOINT10,Integer)),Map(),QueryShuffle(List(),None,None)),None))))))) \r\n\r\n\r\nInstead, got: \r\nRegularPlannerQuery(QueryGraph(Set(PatternRelationship(IdName(  UNNAMED151),(IdName(setters),IdName(  UNNAMED167)),OUTGOING,List(RelTypeName(vModifiers)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED63),(IdName(setters),IdName(  UNNAMED74)),OUTGOING,List(RelTypeName(vBody)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED111),(IdName(  UNNAMED74),IdName(statements)),OUTGOING,List(RelTypeName(vstatements)),SimplePatternLength)),Set(IdName(setters), IdName(  UNNAMED167), IdName(  UNNAMED74), IdName(statements)),Set(),Selections(Set(Predicate(Set(IdName(  UNNAMED167)),HasLabels(Variable(  UNNAMED167),List(LabelName(Modifier)))), Predicate(Set(IdName(  UNNAMED74)),In(Property(Variable(  UNNAMED74),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING1,String))))), Predicate(Set(IdName(setters)),In(Property(Variable(setters),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING0,String))))), Predicate(Set(IdName(  UNNAMED167)),In(Property(Variable(  UNNAMED167),PropertyKeyName(isPublic)),ListLiteral(List(Parameter(  AUTOSTRING2,String))))), Predicate(Set(IdName(  UNNAMED74)),HasLabels(Variable(  UNNAMED74),List(LabelName(Block)))), Predicate(Set(IdName(setters)),HasLabels(Variable(setters),List(LabelName(MethodDeclaration)))))),Vector(),Set(),Set(),List()),AggregatingQueryProjection(Map(setters -> Variable(setters)),Map(statementsCount -> FunctionInvocation(Namespace(List()),FunctionName(count),false,Vector(Variable(statements)))),QueryShuffle(List(),None,None)),Some(RegularPlannerQuery(QueryGraph(Set(),Set(),Set(IdName(setters), IdName(statementsCount)),Selections(Set()),Vector(),Set(),Set(),List()),RegularQueryProjection(Map(setters -> Variable(setters), statementsCount -> Variable(statementsCount),   FRESHID269 -> Equals(Variable(statementsCount),Parameter(  AUTOINT3,Integer))),QueryShuffle(List(),None,None)),Some(RegularPlannerQuery(QueryGraph(Set(PatternRelationship(IdName(  UNNAMED478),(IdName(setters),IdName(  UNNAMED495)),OUTGOING,List(RelTypeName(vparameters)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED289),(IdName(setters),IdName(  UNNAMED300)),OUTGOING,List(RelTypeName(vBody)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED337),(IdName(  UNNAMED300),IdName(  UNNAMED354)),OUTGOING,List(RelTypeName(vstatements)),SimplePatternLength), PatternRelationship(IdName(  UNNAMED405),(IdName(  UNNAMED354),IdName(  UNNAMED408)),OUTGOING,List(),SimplePatternLength)),Set(IdName(  UNNAMED495), IdName(  UNNAMED354), IdName(  UNNAMED300), IdName(  UNNAMED408), IdName(setters), IdName(  rankf@668)),Set(IdName(setters), IdName(statementsCount), IdName(  FRESHID269)),Selections(Set(Predicate(Set(IdName(  FRESHID269)),Variable(  FRESHID269)), Predicate(Set(IdName(  UNNAMED289), IdName(  UNNAMED405)),Not(Equals(Variable(  UNNAMED289),Variable(  UNNAMED405)))), Predicate(Set(IdName(  UNNAMED354)),In(Property(Variable(  UNNAMED354),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING5,String))))), Predicate(Set(IdName(  rankf@668)),In(Property(Variable(  rankf@668),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING8,String))))), Predicate(Set(IdName(  UNNAMED300)),HasLabels(Variable(  UNNAMED300),List(LabelName(Block)))), Predicate(Set(IdName(  rankf@668)),HasLabels(Variable(  rankf@668),List(LabelName(MethodDeclaration)))), Predicate(Set(IdName(  UNNAMED408)),HasLabels(Variable(  UNNAMED408),List(LabelName(Assignment)))), Predicate(Set(IdName(  UNNAMED354)),HasLabels(Variable(  UNNAMED354),List(LabelName(ExpressionStatement)))), Predicate(Set(IdName(  UNNAMED408)),In(Property(Variable(  UNNAMED408),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING6,String))))), Predicate(Set(IdName(  UNNAMED300)),In(Property(Variable(  UNNAMED300),PropertyKeyName(projectID)),ListLiteral(List(Parameter(  AUTOSTRING4,String))))), Predicate(Set(IdName(  UNNAMED337), IdName(  UNNAMED405)),Not(Equals(Variable(  UNNAMED337),Variable(  UNNAMED405)))))),Vector(),Set(),Set(),List()),RegularQueryProjection(Map(  res@517 -> Variable(  res@517),   rankf@668 -> Variable(  rankf@668),   ruleCoef@789 -> Parameter(  AUTOINT9,Integer)),QueryShuffle(List(),None,None)),Some(RegularPlannerQuery(QueryGraph(Set(),Set(),Set(IdName(  res@517), IdName(  rankf@668), IdName(  ruleCoef@789)),Selections(Set()),Vector(),Set(),Set(),List()),AggregatingQueryProjection(Map(res.nomFichier -> Property(Variable(  res@517),PropertyKeyName(nomFichier)), res.lineNum -> Property(Variable(  res@517),PropertyKeyName(lineNum)), 1 -> Parameter(  AUTOINT10,Integer)),Map(),QueryShuffle(List(),None,None)),None)))))))\r\n\r\n```\r\n\r\n"}, {"labels": ["bug", "cypher", "team-cypher"], "filteredCommits": ["0036916effcfb23d3eb5218b3eedb83c542d50fa"], "url": "https://github.com/neo4j/neo4j/issues/9847", "gitStatsSummary": {"insertions": 15, "gitFilesChange": 1, "lines": 37, "deletions": 22}, "numCommits": 1, "commits": {"0036916effcfb23d3eb5218b3eedb83c542d50fa": {"commitUser": "fickludd", "commitGHEventType": "closed"}}, "ttf": 76.00027777777778, "user": "Alan-R", "changesInPackagesGIT": ["community/cypher/frontend-3.2/src/main/scala/org/neo4j/cypher/internal"], "body": "```\r\nMATCH (Hobbit1)<-[r:FriendsWith { }]-(Hobbit2) where ID(Hobbit1) = 20 AND ID(Hobbit2) = 21\r\nDELETE r\r\n```\r\n\r\nERROR\r\nNeo.DatabaseError.General.UnknownError\r\nInternal error - should have used fall back to execute query, but something went horribly wrong\r\n\r\n- **Neo4j version**:  3.2.3\r\n- **Operating system**: Ubuntu 16.04.3 LTS\r\n- **API/Driver**: Web interface\r\n- **To reproduce**: Run this query\r\n- **Expected behavior** - either does nothing, or deletes a relationship\r\n- **Actual Behavior**: Got internal error\r\n\r\nGetting rid of the empty {} makes the error go away...\r\n\r\n```\r\nNeo4j 3.2.3\r\nDistributor ID: Ubuntu\r\nDescription:    Ubuntu 16.04.3 LTS\r\nRelease:        16.04\r\nCodename:       xenial\r\n```", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Internal error - should have used fall back to execute query, but something went horribly wrong", "statsSkippedReason": "", "closed": "2017-11-02 13:33:42", "commitsDetails": [{"commitUser": "fickludd", "commitDateTime": "2017-11-01 10:17:57", "commitHash": "0036916effcfb23d3eb5218b3eedb83c542d50fa", "commitParents": ["47452f6e4716f22ea30962a6d1329a79148ea20a"], "commitGHEventType": "closed", "nameRev": "0036916effcfb23d3eb5218b3eedb83c542d50fa tags/3.4.0-alpha01~3^2^2~10^2", "commitGitStats": [{"insertions": 17, "lines": 17, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/cypher/features/MatchAcceptance.feature", "deletions": 0}, {"insertions": 15, "lines": 37, "filePath": "community/cypher/frontend-3.2/src/main/scala/org/neo4j/cypher/internal/frontend/v3_2/ast/rewriters/MatchPredicateNormalization.scala", "deletions": 22}, {"insertions": 24, "lines": 24, "filePath": "community/cypher/cypher-compiler-3.2/src/test/scala/org/neo4j/cypher/internal/compiler/v3_2/ast/rewriters/MatchPredicateNormalizerTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Properly handle filtering with empty properties map\n\nFixes #9847\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-10-05 12:28:45"}], "created": "2017-08-18 02:33:59"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/9685", "title": "FILTER inside ELSE inside shorthand CASE fails", "closed": "2017-10-20 13:09:34", "commitsDetails": [], "commits": {}, "ttf": 92.00027777777778, "created": "2017-07-19 18:24:09", "user": "splilly", "body": "When using a FILTER inside an ELSE of a CASE that is written using the shorthand version of CASE the Cypher will fail. Rewriting to either not use a ELSE or not use the shorthand version of CASE works.\r\n\r\n\r\n**Neo4j Version:** 3.2.2  \r\n**Operating System:** Windows 10, maxOS, and Ubuntu 16.04\r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n1. Execute the Cypher \r\n```\r\nMERGE (:test)<-[:rel]-(:test_rel{prop:true})\r\nMERGE (:test)<-[:rel]-(:test_rel{prop:false})\r\n\r\nWITH COUNT(*) AS JUNK\r\n\r\nMATCH (t:test)\r\nWITH DISTINCT t AS t\r\nWITH COLLECT(t) AS ts\r\nWITH\r\n    FILTER(t IN ts WHERE (t)<-[:rel]-(:test_rel)) AS all, 3 AS scenario\r\nWITH \r\nCASE scenario\r\n    WHEN 0 THEN []\r\n    ELSE FILTER(t IN all WHERE (t)<-[:rel]-(:test_rel{prop:true})) \r\nEND AS some\r\n\r\nRETURN COUNT(some)\r\n```\r\n2. Execute the Cypher\r\n```\r\nMERGE (:test)<-[:rel]-(:test_rel{prop:true})\r\nMERGE (:test)<-[:rel]-(:test_rel{prop:false})\r\n\r\nWITH COUNT(*) AS JUNK\r\n\r\nMATCH (t:test)\r\nWITH DISTINCT t AS t\r\nWITH COLLECT(t) AS ts\r\nWITH\r\n    FILTER(t IN ts WHERE (t)<-[:rel]-(:test_rel)) AS all, 3 AS scenario\r\nWITH \r\nCASE\r\n    WHEN scenario = 0 THEN []\r\n    ELSE FILTER(t IN all WHERE (t)<-[:rel]-(:test_rel{prop:true})) \r\nEND AS some\r\n\r\nRETURN COUNT(some)\r\n```\r\n3. Execute the Cypher\r\n```\r\nMERGE (:test)<-[:rel]-(:test_rel{prop:true})\r\nMERGE (:test)<-[:rel]-(:test_rel{prop:false})\r\n\r\nWITH COUNT(*) AS JUNK\r\n\r\nMATCH (t:test)\r\nWITH DISTINCT t AS t\r\nWITH COLLECT(t) AS ts\r\nWITH\r\n    FILTER(t IN ts WHERE (t)<-[:rel]-(:test_rel)) AS all, 3 AS scenario\r\nWITH \r\nCASE scenario\r\n    WHEN 0 THEN []\r\n    WHEN 3 THEN FILTER(t IN all WHERE (t)<-[:rel]-(:test_rel{prop:true})) \r\nEND AS some\r\n\r\nRETURN COUNT(some)\r\n```\r\n\r\n### Expected behavior\r\nAll three steps should return the same result.\r\n\r\n### Actual behavior\r\nStep 1 fails but steps 2 and 3 return the correct result."}, {"labels": ["2.3", "3.1", "bug", "cypher", "team-cypher"], "filteredCommits": ["101b4fa95d6a33e2f769eb91a98ff945f09e51cb"], "url": "https://github.com/neo4j/neo4j/issues/9571", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"101b4fa95d6a33e2f769eb91a98ff945f09e51cb": {"commitUser": "Lojjs", "commitGHEventType": "closed"}}, "ttf": 106.00027777777778, "user": "codeseedr", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal"], "body": "Neo4j version: 2.3.7\r\nOperating system: MacOS X 10.11.6\r\nAPI/Driver: Java driver v2.3.7\r\n\r\n** Steps to reproduce **\r\n```\r\n> CYPHER 2.3 MERGE (n {id: 0}) RETURN n\r\n> CYPHER 2.3 MERGE (n {id: 1, prop: []}) RETURN n\r\n> CYPHER 2.3 MATCH n RETURN n ORDER BY n.prop\r\n```\r\nThe last query results in `Neo.DatabaseError.Statement.ExecutionFailure` with no additional explanation of what went wrong. The key bit is that node with id = 0 does not contain the property we are trying to sort with.\r\n\r\n** Expected behavior **\r\nAssuming you can't really order by list properties, I'd expect a more descriptive error message, like if we do:\r\n```\r\n> CYPHER 2.3 MERGE (n {id: 0}) SET n.prop = [] RETURN n\r\n> CYPHER 2.3 MATCH n RETURN n ORDER BY n.prop\r\n```\r\nthen we get: `Neo.ClientError.Statement.InvalidSyntax` with: Don't know how to compare that. Left: [] (String[]); Right: [] (String[])\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "ExecutionFailure when trying to ORDER BY a list property", "statsSkippedReason": "", "closed": "2017-10-12 07:16:35", "commitsDetails": [{"commitUser": "Lojjs", "commitDateTime": "2017-10-10 17:09:38", "commitHash": "101b4fa95d6a33e2f769eb91a98ff945f09e51cb", "commitParents": ["a76f153be856d8e008d1268efc67cb967e6a726f"], "commitGHEventType": "closed", "nameRev": "101b4fa95d6a33e2f769eb91a98ff945f09e51cb tags/3.3.0~4^2~3^2^2", "commitGitStats": [{"insertions": 37, "lines": 37, "filePath": "community/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/OrderByAcceptanceTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal/compiler/v3_1/CypherSerializer.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixing error message of ORDER BY with null values\n\nchangelog: Fixes #9571 where a NullPointerException was thrown\nwhen using ORDER BY with null values. Now we give a more comprehensive\nerror message.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-10-10 17:09:38"}], "created": "2017-06-27 11:21:13"}, {"labels": ["3.2", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/9492", "title": "OPTIONAL MATCH throws NullPointerException (Neo4j 3.2.1)", "closed": "2017-11-13 15:48:58", "commitsDetails": [], "commits": {}, "ttf": 158.00027777777777, "created": "2017-06-08 09:33:46", "user": "Rosswart", "body": "When I switch from Neo4j 3.0.7 to 3.2.1 one of my queries crashes with NullPointerException in\r\norg.neo4j.cypher.internal.spi.v3_2.TransactionBoundQueryContext.getRelationshipsForIds.\r\nWith 3.0.7 the same query is running fine.\r\n\r\n**Neo4j Version:** 3.2.1\r\n**Operating System:** Windows 10\r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n\r\n- start data base and empty it\r\n- create some nodes that will show the error\r\n```\r\n  CREATE (cust :DoorsObject {eid: 1})\r\n  CREATE (cust) <-[:Links]- (req :DoorsObject {eid: 1})\r\n  CREATE (reqM :DoorsFormalModule {eid: 1}) -[:Contains]-> (req)\r\n```\r\n- create some nodes that are OK\r\n```\r\n  CREATE (cust :DoorsObject {eid: 2})\r\n  CREATE (cust) <-[:Links]- (req :DoorsObject {eid: 2})\r\n  CREATE (reqM :DoorsFormalModule {eid: 2}) -[:Contains]-> (req)\r\n  CREATE (req) <-[:Links]- (:Link) <-[:Links]- (tst :DoorsObject {eid: 2})\r\n  CREATE (tstM :DoorsFormalModule {eid: 2}) -[:Contains]-> (tst)\r\n```\r\n- run the query\r\n```\r\n  MATCH\r\n      (cust :DoorsObject)\r\n  WITH cust\r\n  OPTIONAL MATCH\r\n    (cust)\r\n       <-[:Links *1..]-\r\n    (req :DoorsObject)\r\n       <-[:Contains]-\r\n    (reqM :DoorsFormalModule)\r\n  WITH DISTINCT cust, reqM, req\r\n  // WHERE req IS NOT NULL // Uncomment so 3.2.1 doesn't crash\r\n  OPTIONAL MATCH\r\n    (req)\r\n      <-[:Links *2]-\r\n    (tst :DoorsObject)\r\n      <-[:Contains]-\r\n    (tstM :DoorsFormalModule)\r\n  WITH cust, reqM, req, tstM, tst\r\n  // WHERE tstM IS NOT NULL\r\n  RETURN DISTINCT\r\n    cust.eid,\r\n    reqM.eid,\r\n    tstM.eid\r\n```\r\n\r\n### Expected behavior\r\n\r\nNeo4j 3.0.7 returns:\r\n```\r\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2564\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\r\n\u2502cust.eid\u2502reqM.eid\u2502tstM.eid\u2502\r\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u256a\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\r\n\u25021       \u25021       \u2502(null)  \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u25021       \u2502(null)  \u2502(null)  \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u25022       \u25022       \u25022       \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u25022       \u25022       \u2502(null)  \u2502\r\n\u251c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2524\r\n\u25022       \u2502(null)  \u2502(null)  \u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n\r\n### Actual behavior\r\n\r\nNeo4j 3.2.1 crashes with\r\n```\r\njava.lang.NullPointerException: null\r\n at org.neo4j.cypher.internal.spi.v3_2.TransactionBoundQueryContext.getRelationshipsForIds (TransactionBoundQueryContext.scala:134)\r\n    org.neo4j.cypher.internal.compatibility.v3_2.ExceptionTranslatingQueryContext$$anonfun$getRelationshipsForIds$1.apply (ExceptionTranslatingQueryContext.scala:195)\r\n    org.neo4j.cypher.internal.compatibility.v3_2.ExceptionTranslatingQueryContext$$anonfun$getRelationshipsForIds$1.apply (ExceptionTranslatingQueryContext.scala:195)\r\n    org.neo4j.cypher.internal.spi.v3_2.ExceptionTranslationSupport$class.translateException (ExceptionTranslationSupport.scala:32)\r\n    org.neo4j.cypher.internal.compatibility.v3_2.ExceptionTranslatingQueryContext.translateException (ExceptionTranslatingQueryContext.scala:34)\r\n    org.neo4j.cypher.internal.compatibility.v3_2.ExceptionTranslatingQueryContext.getRelationshipsForIds (ExceptionTranslatingQueryContext.scala:195)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PruningVarLengthExpandPipe$Expandable$class.expand (PruningVarLengthExpandPipe.scala:300)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PruningVarLengthExpandPipe$PrePruningDFS.expand (PruningVarLengthExpandPipe.scala:81)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PruningVarLengthExpandPipe$PrePruningDFS.next (PruningVarLengthExpandPipe.scala:98)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PruningVarLengthExpandPipe$LoadNext.next (PruningVarLengthExpandPipe.scala:270)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PruningVarLengthExpandPipe$$anon$1.<init> (PruningVarLengthExpandPipe.scala:340)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PruningVarLengthExpandPipe.internalCreateResults (PruningVarLengthExpandPipe.scala:338)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PipeWithSource.createResults (Pipe.scala:82)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PipeWithSource.createResults (Pipe.scala:79)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PipeWithSource.createResults (Pipe.scala:79)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PipeWithSource.createResults (Pipe.scala:79)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.PipeWithSource.createResults (Pipe.scala:79)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.ApplyPipe$$anonfun$internalCreateResults$1.apply (ApplyPipe.scala:33)\r\n    org.neo4j.cypher.internal.compiler.v3_2.pipes.ApplyPipe$$anonfun$internalCreateResults$1.apply (ApplyPipe.scala:30)\r\n    scala.collection.Iterator$$anon$12.nextCur (Iterator.scala:434)\r\n    scala.collection.Iterator$$anon$12.hasNext (Iterator.scala:440)\r\n    scala.collection.Iterator$$anon$11.hasNext (Iterator.scala:408)\r\n    scala.collection.Iterator$$anon$13.hasNext (Iterator.scala:461)\r\n    scala.collection.Iterator$$anon$11.hasNext (Iterator.scala:408)\r\n    org.neo4j.cypher.internal.compiler.v3_2.ClosingIterator$$anonfun$hasNext$1.apply$mcZ$sp (ResultIterator.scala:60)\r\n    org.neo4j.cypher.internal.compiler.v3_2.ClosingIterator$$anonfun$hasNext$1.apply (ResultIterator.scala:58)\r\n    org.neo4j.cypher.internal.compiler.v3_2.ClosingIterator$$anonfun$hasNext$1.apply (ResultIterator.scala:58)\r\n    org.neo4j.cypher.internal.compiler.v3_2.ClosingIterator$$anonfun$failIfThrows$1.apply (ResultIterator.scala:94)\r\n    org.neo4j.cypher.internal.compiler.v3_2.ClosingIterator.decoratedCypherException (ResultIterator.scala:103)\r\n    org.neo4j.cypher.internal.compiler.v3_2.ClosingIterator.failIfThrows (ResultIterator.scala:92)\r\n    org.neo4j.cypher.internal.compiler.v3_2.ClosingIterator.hasNext (ResultIterator.scala:57)\r\n    org.neo4j.cypher.internal.compiler.v3_2.PipeExecutionResult.hasNext (PipeExecutionResult.scala:77)\r\n    org.neo4j.cypher.internal.compatibility.v3_2.ExecutionResultWrapper.hasNext (ExecutionResultWrapper.scala:91)\r\n    org.neo4j.cypher.internal.compatibility.ClosingExecutionResult.org$neo4j$cypher$internal$compatibility$ClosingExecutionResult$$closeIfEmpty (ClosingExecutionResult.scala:178)\r\n    org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anon$1$$anonfun$next$1.apply (ClosingExecutionResult.scala:63)\r\n    org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anon$1$$anonfun$next$1.apply (ClosingExecutionResult.scala:61)\r\n    org.neo4j.cypher.internal.compatibility.v3_2.exceptionHandler$runSafely$.apply (exceptionHandler.scala:90)\r\n    org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anon$1.next (ClosingExecutionResult.scala:61)\r\n    org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anon$1.next (ClosingExecutionResult.scala:55)\r\n    org.neo4j.cypher.internal.javacompat.ExecutionResult.next (ExecutionResult.java:242)\r\n    org.neo4j.cypher.internal.javacompat.ExecutionResult.next (ExecutionResult.java:54)\r\n    clojure.lang.RT$4.invoke (RT.java:509)\r\n    clojure.lang.LazySeq.sval (LazySeq.java:40)\r\n    clojure.lang.LazySeq.seq (LazySeq.java:49)\r\n    clojure.lang.RT.seq (RT.java:521)\r\n    clojure.core$seq__4357.invokeStatic (core.clj:137)\r\n    clojure.core/seq (core.clj:137)\r\n    com.bosch.as.metrics.graph.manager$print_execute$fn__1234.invoke (manager.clj:77)\r\n    com.bosch.as.metrics.graph.manager$print_execute.invokeStatic (manager.clj:72)\r\n    com.bosch.as.metrics.graph.manager$print_execute.invoke (manager.clj:70)\r\n    com.bosch.as.metrics.adapter.birt.data_set$CustSpecs_TestResults.invokeStatic (data_set.clj:64)\r\n    com.bosch.as.metrics.adapter.birt.data_set$CustSpecs_TestResults.invoke (data_set.clj:62)\r\n    user$eval9670.invokeStatic (NO_SOURCE_FILE:4)\r\n    user$eval9670.invoke (NO_SOURCE_FILE:4)\r\n    clojure.lang.Compiler.eval (Compiler.java:6927)\r\n    clojure.lang.Compiler.eval (Compiler.java:6890)\r\n    clojure.core$eval.invokeStatic (core.clj:3105)\r\n    clojure.core$eval.invoke (core.clj:3101)\r\n    clojure.main$repl$read_eval_print__7408$fn__7411.invoke (main.clj:240)\r\n    clojure.main$repl$read_eval_print__7408.invoke (main.clj:240)\r\n    clojure.main$repl$fn__7417.invoke (main.clj:258)\r\n    clojure.main$repl.invokeStatic (main.clj:258)\r\n    clojure.main$repl_opt.invokeStatic (main.clj:322)\r\n    clojure.main$repl_opt.invoke (main.clj:318)\r\n    clojure.main$main.invokeStatic (main.clj:421)\r\n    clojure.main$main.doInvoke (main.clj:384)\r\n    clojure.lang.RestFn.invoke (RestFn.java:436)\r\n    clojure.lang.Var.invoke (Var.java:388)\r\n    clojure.lang.AFn.applyToHelper (AFn.java:160)\r\n    clojure.lang.Var.applyTo (Var.java:700)\r\n    clojure.main.main (main.java:37)\r\n```"}, {"labels": ["3.2", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/9452", "title": "`CantHandleQueryException` in `start n=node(*) ...` queries in 3.2", "closed": "2017-06-26 16:56:16", "commitsDetails": [], "commits": {}, "ttf": 26.00027777777778, "created": "2017-05-30 18:57:30", "user": "ayosec", "body": "\r\nIn Neo4j 3.2.0 Community, with default configuration, the old syntax `start n=node(*) return count(n)` throws a `CantHandleQueryException` error.\r\n\r\n**Neo4j version**: 3.2.0\r\n**Operating system**: Linux\r\n**API/Driver**: Using HTTP interface\r\n\r\n### Steps to reproduce\r\n\r\n1. Launch a Neo4j instance\r\n\r\n2. Execute a query with `start n=node(*) ...`\r\n\r\n    ```bash\r\n    $ curl $IP:7474/db/data/cypher                        \\\r\n        -H 'content-type: application/json'               \\\r\n        -d '{\"query\": \"start n=node(*) return count(n)\"}'\r\n    ```\r\n\r\n### Expected behavior\r\n\r\nExecute the query and returns the count:\r\n\r\n    {\r\n      \"columns\" : [ \"count(n)\" ],\r\n      \"data\" : [ [ ... ] ]\r\n    }\r\n\r\n### Actual behavior\r\n\r\nResponse from Neo4j when `cypher.default_language_version` option is `3.2`:\r\n\r\n    {\r\n      \"message\": \"Internal error - should have used fall back to execute query, but something went horribly wrong\",\r\n      \"exception\": \"CantHandleQueryException\",\r\n      \"fullname\": \"org.neo4j.cypher.internal.ir.v3_2.exception.CantHandleQueryException\",\r\n      \"stackTrace\": [\r\n        \"org.neo4j.cypher.internal.compiler.v3_2.ast.convert.plannerQuery.ClauseConverters$$anonfun$addStartToLogicalPlanInput$1.apply(ClauseConverters.scala:471)\",\r\n        \"org.neo4j.cypher.internal.compiler.v3_2.ast.convert.plannerQuery.ClauseConverters$$anonfun$addStartToLogicalPlanInput$1.apply(ClauseConverters.scala:460)\",\r\n        \"org.neo4j.cypher.internal.ir.v3_2.PlannerQuery$class.amendQueryGraph(PlannerQuery.scala:66)\",\r\n        \"org.neo4j.cypher.internal.ir.v3_2.RegularPlannerQuery.amendQueryGraph(PlannerQuery.scala:179)\",\r\n        \"org.neo4j.cypher.internal.compiler.v3_2.ast.convert.plannerQuery.PlannerQueryBuilder$$anonfun$amendQueryGraph$1.apply(PlannerQueryBuilder.scala:34)\",\r\n        \"org.neo4j.cypher.internal.compiler.v3_2.ast.convert.plannerQuery.PlannerQueryBuilder$$anonfun$amendQueryGraph$1.apply(PlannerQueryBuilder.scala:34)\",\r\n        \"org.neo4j.cypher.internal.ir.v3_2.PlannerQuery$class.updateTailOrSelf(PlannerQuery.scala:81)\",\r\n        \"org.neo4j.cypher.internal.ir.v3_2.RegularPlannerQuery.updateTailOrSelf(PlannerQuery.scala:179)\",\r\n        \"org.neo4j.cypher.internal.compiler.v3_2.ast.convert.plannerQuery.PlannerQueryBuilder.amendQueryGraph(PlannerQueryBuilder.scala:34)\",\r\n    [...]\r\n\r\nThe same query works when option `cypher.default_language_version=3.1` is set in `neo4j.conf`\r\n"}, {"labels": ["3.2", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/9435", "title": "Unable to use multiple index hints in 3.2", "closed": "2017-10-04 10:16:13", "commitsDetails": [], "commits": {}, "ttf": 129.00027777777777, "created": "2017-05-27 20:27:14", "user": "InverseFalcon", "body": "In Neo4j 3.1.x versions, I could use multiple index hints to match on both starting and end nodes, then perform match operations between them. This automatically changed the query planner to RULE.\r\n\r\nIn Neo4j 3.2, since the RULE planner has been removed, this approach is no longer possible, and errors out.\r\n\r\nThis example on the :Movies graph demonstrates a query that works on 3.1.x, but fails with error in 3.2:\r\n\r\n```\r\nmatch (k:Person {name: 'Keanu Reeves'}), (t:Person {name: 'Hugo Weaving'}) \r\nusing index k:Person(name)\r\nusing index t:Person(name)\r\nmatch p=(k)-[:ACTED_IN*0..5]-(t)\r\nRETURN count(p)\r\n```\r\n\r\nError is:\r\n\r\n```\r\nERROR Neo.DatabaseError.Statement.ExecutionFailed\r\nFailed to fulfil the hints of the query.\r\nCould not solve these hints: `USING INDEX t:Person(name)\r\n```"}, {"labels": ["3.1", "bug"], "filteredCommits": ["6b119cc692ad27f3bb7f34ddbd017f321b8422d6"], "url": "https://github.com/neo4j/neo4j/issues/9390", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"6b119cc692ad27f3bb7f34ddbd017f321b8422d6": {"commitUser": "burqen", "commitGHEventType": "closed"}, "e7323ee9b0ad1a9a3cf89fe6f9e73bdf9b1b6ecd": {"commitUser": "burqen", "commitGHEventType": "referenced"}}, "ttf": 25.00027777777778, "user": "sarmbruster", "changesInPackagesSPOON": ["org.neo4j.graphdb.impl.StandardExpander.NodeFilter.exclude(org.neo4j.graphdb.Path)"], "changesInPackagesGIT": ["community/graphdb-api/src/main/java/org/neo4j/graphdb/impl"], "body": "When `GraphAlgoFactory.shortestPath()` is used with a pathexpander acquired from `PathExpanderBuilder` using a node filter, that node filter is *not* applied when left and right traversal branch collide. So the \"middle\" nodes do not get checked.", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 2, "DEL": 1, "INS": 0, "spoonFilesChanged": 1, "MOV": 1}, "title": "GraphAlgoFactory.shortestPath does not honor PathExpanderBuilder.addNodeFilter", "statsSkippedReason": "", "closed": "2017-06-14 09:43:45", "commitsDetails": [{"commitUser": "burqen", "commitDateTime": "2017-05-20 10:03:13", "commitHash": "6b119cc692ad27f3bb7f34ddbd017f321b8422d6", "commitParents": ["c1cc6dedba2f5d439027a37c603756de10bba3ea"], "commitGHEventType": "closed", "nameRev": "6b119cc692ad27f3bb7f34ddbd017f321b8422d6 tags/3.3.0-alpha02~3^2^2^2~1", "commitGitStats": [{"insertions": 32, "lines": 51, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/impl/path/TestShortestPath.java", "deletions": 19}, {"insertions": 1, "lines": 2, "filePath": "community/graphdb-api/src/main/java/org/neo4j/graphdb/impl/StandardExpander.java", "deletions": 1}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 1, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.graphdb.impl.StandardExpander.NodeFilter.exclude(org.neo4j.graphdb.Path)"}], "spoonFilePath": "StandardExpander.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.testFinderShouldNotFindAnythingBeyondLimit()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.testShortestPathFinder(org.neo4j.graphalgo.impl.path.TestShortestPath$PathFinderTester,org.neo4j.graphalgo.impl.path.PathExpander,int,java.lang.Integer)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.testSimplestGraph()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.makeSureAMaxResultCountIsObeyed()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.makeSureShortestPathsReturnsNoLoops()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.unfortunateRelationshipOrderingInTriangle()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.testAnotherSimpleGraph()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.shouldFindShortestPathWhenOneSideFindsLongerPathFirst()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.makeSureShortestPathCanBeFetchedEvenIfANodeHasLoops()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.testDirectedFinder()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.makeSureRelationshipNotConnectedIssueNotThere()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.withFilters()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.LengthCheckingExpanderWrapper.reverse()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.CountingPathExpander.expand(org.neo4j.graphdb.Path,org.neo4j.graphdb.traversal.BranchState)"}, {"UPD": 22, "TOT": 22, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.shouldAbortAsSoonAsPossible()"}, {"UPD": 2, "TOT": 4, "DEL": 1, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.CountingPathExpander"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.CountingPathExpander.reverse()"}, {"UPD": 3, "TOT": 5, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.LengthCheckingExpanderWrapper"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.LengthCheckingExpanderWrapper.expand(org.neo4j.graphdb.Path,org.neo4j.graphdb.traversal.BranchState)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.filtersTouchesAllIntermediateNodes()"}, {"UPD": 5, "TOT": 13, "DEL": 0, "INS": 4, "MOV": 4, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.makeSureDescentStopsWhenPathIsFound()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.recursiveSnowFlake(org.neo4j.graphdb.Node,int,int,int,org.neo4j.graphdb.Label[],org.neo4j.graphdb.RelationshipType)"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.makeSureDescentStopsWhenPathIsFound().1.filterNextLevelNodes(org.neo4j.graphdb.Node)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.testCrossedCircle()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.testShortestPathFinder(org.neo4j.graphalgo.impl.path.TestShortestPath$PathFinderTester,org.neo4j.graphdb.PathExpander,int)"}, {"UPD": 2, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.testShortestPathFinder(org.neo4j.graphalgo.impl.path.TestShortestPath$PathFinderTester,org.neo4j.graphdb.PathExpander,int,java.lang.Integer)"}], "spoonFilePath": "TestShortestPath.java"}], "commitMessage": "fixes #9390 apply nodefilter only on endNode\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-05-19 18:07:42"}, {"commitUser": "burqen", "commitDateTime": "2017-06-14 11:37:02", "commitHash": "e7323ee9b0ad1a9a3cf89fe6f9e73bdf9b1b6ecd", "commitParents": ["b9dab64fbdedba7a69be14bfab459359064ea911", "b148c75e65189c219a263f07d7bcb68b87c9ccea"], "commitGHEventType": "referenced", "nameRev": "e7323ee9b0ad1a9a3cf89fe6f9e73bdf9b1b6ecd tags/3.3.0-alpha02~3^2^2", "commitGitStats": [{"insertions": 65, "lines": 89, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/impl/path/TestShortestPath.java", "deletions": 24}, {"insertions": 1, "lines": 2, "filePath": "community/graphdb-api/src/main/java/org/neo4j/graphdb/impl/StandardExpander.java", "deletions": 1}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 1, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.graphdb.impl.StandardExpander.NodeFilter.exclude(org.neo4j.graphdb.Path)"}], "spoonFilePath": "StandardExpander.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.TestShortestPath.filtersTouchesAllIntermediateNodes()"}], "spoonFilePath": "TestShortestPath.java"}], "commitMessage": "Merge pull request #9393 from sarmbruster/issue-9390\n\nfixes #9390 apply nodefilter only on endNode", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-06-14 11:37:02"}], "created": "2017-05-19 13:44:18"}, {"labels": ["3.2", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/9347", "title": "Aggregation on paths with DISTINCT keyword fails with UnknownError key not found: UNNAMED*", "closed": "2017-05-17 11:39:01", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2017-05-15 15:54:28", "user": "frant-hartm", "body": "### Steps to reproduce\r\n\r\nRun cypher query:\r\n\r\n`MATCH p=(n)-[*0..1]-()\r\nRETURN COLLECT(DISTINCT p)`\r\n\r\nFails with:\r\n`MATCH p=(n)-[*0..]-()\r\n RETURN COLLECT(DISTINCT p)\r\nERROR\r\nNeo.DatabaseError.General.UnknownError\r\nkey not found: UNNAMED12`\r\n\r\nNote that it doesn't fail when the path doesn't have length limit.\r\n\r\n## Expected behaviour\r\n\r\nAs in previous versions.\r\n\r\n## Environment\r\n- Neo4j version: 3.2.0\r\n- Operating system: XUbuntu 16.04\r\n- API/Driver: Cypher/Java API/ neo4j-shell"}, {"labels": ["bug", "cypher"], "filteredCommits": ["79473ee644e2ccfb008bab92c7388ad5a4de2536"], "url": "https://github.com/neo4j/neo4j/issues/9329", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 5, "deletions": 2}, "numCommits": 1, "commits": {"79473ee644e2ccfb008bab92c7388ad5a4de2536": {"commitUser": "pontusmelke", "commitGHEventType": "closed"}}, "ttf": 39.000277777777775, "user": "Artgit", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal"], "body": "I have a following SDN 4 entities:\r\n\r\n`Decision`, `Characteristic` and `Value`:\r\n\r\n    @NodeEntity\r\n    public class Value extends Votable {\r\n    \r\n    \tprivate final static String SET_FOR = \"SET_FOR\";\r\n    \tprivate final static String SET_ON = \"SET_ON\";\r\n    \tprivate final static String CONTAINS = \"CONTAINS\";\r\n    \r\n    \t@Relationship(type = SET_FOR, direction = Relationship.OUTGOING)\r\n    \tprivate Decision decision;\r\n    \r\n    \t@Relationship(type = SET_ON, direction = Relationship.OUTGOING)\r\n    \tprivate Characteristic characteristic;\r\n    \r\n    \t@Index(unique = false)\r\n    \tprivate Object value;\r\n    \r\n        ...\r\n    }\r\n\r\nI have created 3 `Decicion`(`Decicion1`, `Decision2`, `Decisison3`) nodes and 1 `Characteristic`(`Characteristic1`).\r\nFor `Decicion1`, `Decicion2` and `Characteristic1` I have created a `Double` `Value`, for example:\r\n\r\n    Decision1 + Characteristic1 = Value(500d)\r\n    Decision2 + Characteristic1 = Value(1000d)\r\n    Decicion3 doesn't have any Value on Characteristic1\r\n\r\nI need to create a query that will return all `Decision` which have `Value` in the defined range, for example `100 <= value <= 50000`\r\n\r\nBased on the example above this query should return `Decision1` and `Decicion2` only.\r\n\r\nRight now I have a following query:\r\n\r\n    MATCH (parentD)-[:CONTAINS]->(childD:Decision)-[ru:CREATED_BY]->(u:User) \r\n        WHERE id(parentD) = {decisionId} \r\n            AND ALL(key IN keys({rangeFilters}) \r\n                WHERE size(\r\n                    [(childD)<-[:SET_FOR]-(filterValue)-[:SET_ON]->(filterCharacteristic) WHERE id(filterCharacteristic) = toInt(key) AND ({rangeFilters}[key])[0] <= filterValue.value <= ({rangeFilters}[key])[1] | 1]\r\n                ) > 0)  \r\n    RETURN ru, u, childD AS decision SKIP 0 LIMIT 100 \r\n\r\nwhere `rangeFilters` is a `Map<String, Double[]>` where key is a `Characteristic` `ID` and value `new Double[] { new Double(100.d), new Double(50000d) }`\r\n\r\nBut this query returns all 3 `Decision`, even the `Decision3` that don't have any values associated with `Characteristic1` .\r\n\r\nWhy the pattern comprehension doesn't work here as expected?\r\n\r\nThis is an example that highlights the issue: [http://console.neo4j.org/?id=6bv9y5](http://console.neo4j.org/?id=6bv9y5)\r\n\r\nWhy the only \"d1\" decision is considered there ?", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Neo4j Cypher node filtering by pattern comprehension", "statsSkippedReason": "", "closed": "2017-06-19 06:56:24", "commitsDetails": [{"commitUser": "pontusmelke", "commitDateTime": "2017-06-14 06:20:49", "commitHash": "79473ee644e2ccfb008bab92c7388ad5a4de2536", "commitParents": ["b9dab64fbdedba7a69be14bfab459359064ea911"], "commitGHEventType": "closed", "nameRev": "79473ee644e2ccfb008bab92c7388ad5a4de2536 tags/3.3.0-alpha03~3^2~13^2^2~1", "commitGitStats": [{"insertions": 31, "lines": 31, "filePath": "community/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/PatternComprehensionAcceptanceTest.scala", "deletions": 0}, {"insertions": 3, "lines": 5, "filePath": "community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal/compiler/v3_1/planner/logical/QueryGraphSolver.scala", "deletions": 2}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes bug around pattern comprehensions\n\nIn some situations, pattern comprehension patterns where not bound to\nthe already found nodes and thus produces wrong results.\n\nFixes #9329\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-06-14 06:20:49"}], "created": "2017-05-10 18:07:32"}, {"labels": ["bolt server", "bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/9233", "title": "Failed to establish secure connection to u'[SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:661)' using latest neo4j docker image", "closed": "2018-10-02 09:03:16", "commitsDetails": [], "commits": {}, "ttf": 529.0002777777778, "created": "2017-04-20 16:01:06", "user": "SimplicityGuy", "body": "When trying to use the latest `neo4j` docker image from within a Python docker container, I fail to connect. This used to work fine with older versions of the `neo4j` docker image.\r\n\r\n**Neo4j Version:** 3.1.3\r\n**Operating System:** Debian Stretch, Mac OS X, Ubuntu 16.04\r\n**API:** neo4j:latest\r\n\r\n### Steps to reproduce\r\n1. docker run -d -p 7687:7687 -p 7474:7474 -e NEO4J_AUTH=neo4j/123 --name=neo4j-test neo4j\r\n2. docker run -it --link neo4j-test python:2.7 bash\r\n3. within the Python container run: pip install neo4j-driver\r\n4. Load an interactive Python shell and use this code:\r\n```\r\nfrom neo4j.v1 import GraphDatabase, basic_auth\r\ndb = GraphDatabase.driver(\"bolt://172.17.0.2:7687\", auth=basic_auth(\"neo4j\", \"123\"))\r\n```\r\n\r\n### Expected behavior\r\nConnection to the database should work, as it did with neo4j:3.0.1\r\n\r\n### Actual behavior\r\nException thrown:\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 2, in <module>\r\n  File \"/usr/local/lib/python2.7/site-packages/neo4j/v1/api.py\", line 112, in driver\r\n    return driver_class(uri, **config)\r\n  File \"/usr/local/lib/python2.7/site-packages/neo4j/v1/direct.py\", line 63, in __init__\r\n    pool.acquire()\r\n  File \"/usr/local/lib/python2.7/site-packages/neo4j/v1/direct.py\", line 39, in acquire\r\n    connection = self.acquire_direct(address)  # should always be a resolved address\r\n  File \"/usr/local/lib/python2.7/site-packages/neo4j/bolt/connection.py\", line 386, in acquire_direct\r\n    connection = self.connector(address)\r\n  File \"/usr/local/lib/python2.7/site-packages/neo4j/v1/direct.py\", line 62, in <lambda>\r\n    pool = DirectConnectionPool(lambda a: connect(a, security_plan.ssl_context, **config), self.address)\r\n  File \"/usr/local/lib/python2.7/site-packages/neo4j/bolt/connection.py\", line 470, in connect\r\n    raise error\r\nSecurityError: Failed to establish secure connection to u'[SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:661)'\r\nFailed to establish secure connection to u'[SSL: TLSV1_ALERT_INTERNAL_ERROR] tlsv1 alert internal error (_ssl.c:661)'\r\n```\r\n\r\nNote, this works fine using neo4j:3.0.1 version of the neo4j image."}, {"labels": ["3.1", "bolt server", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/9130", "title": "\"Client triggered an unexpected error\" when loading empty CSV file", "closed": "2017-04-11 13:05:20", "commitsDetails": [], "commits": {}, "ttf": 9.000277777777777, "created": "2017-04-01 18:45:19", "user": "also", "body": "Running `LOAD CSV WITH HEADERS` with an empty CSV file causes an unexpected, unrecoverable error.\r\n\r\n**Neo4j Version:** 3.1.3  \r\n**Operating System:** macOS 10.12.3\r\n**API:** Cypher\r\n\r\n### Steps to reproduce\r\n\r\nRun this in `cypher-shell`:\r\n\r\n```\r\n// assert correct line count\r\nLOAD CSV WITH HEADERS FROM \"file:///path/to/empty.csv\" AS line\r\nRETURN count(*);\r\n```\r\n\r\n`empty.csv` is an empty (0 byte) file.\r\n\r\n### Expected behavior\r\nAn error like \"Invalid CSV\" is returned. The error is recoverable in the client session, and the server does not log an exception.\r\n\r\n### Actual behavior\r\n\r\nThe cypher-shell session shows this error, and is no longer usable:\r\n\r\n```\r\nnext on empty iterator\r\nException in thread \"Thread-0\" org.neo4j.driver.v1.exceptions.ClientException: Cannot run more statements in the current session as an unrecoverable error has happened. Please close the current session and re-run your statement in a new session.\r\n        at org.neo4j.driver.internal.NetworkSession.ensureNoUnrecoverableError(NetworkSession.java:274)\r\n        at org.neo4j.driver.internal.NetworkSession.reset(NetworkSession.java:132)\r\n        at org.neo4j.shell.state.BoltStateHandler.reset(BoltStateHandler.java:169)\r\n        at org.neo4j.shell.CypherShell.reset(CypherShell.java:183)\r\n        at org.neo4j.shell.CypherShell$1.run(CypherShell.java:190)\r\n```\r\n\r\nThis is logged in the server's `debug.log`:\r\n```\r\n2017-04-01 18:28:17.784+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: next on empty iterator. See debug.log for more details, reference a937cd46-55dd-44c6-b91a-ab0745c8cb90.\r\n2017-04-01 18:28:17.784+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: next on empty iterator, reference a937cd46-55dd-44c6-b91a-ab0745c8cb90. next on empty iterator\r\njava.util.NoSuchElementException: next on empty iterator\r\n\tat scala.collection.Iterator$$anon$2.next(Iterator.scala:39)\r\n\tat scala.collection.Iterator$$anon$2.next(Iterator.scala:37)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.spi.CSVResources$$anon$1.next(CSVResources.scala:101)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.spi.CSVResources$$anon$1.next(CSVResources.scala:79)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.pipes.LoadCSVPipe$$anonfun$internalCreateResults$1.apply(LoadCSVPipe.scala:111)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.pipes.LoadCSVPipe$$anonfun$internalCreateResults$1.apply(LoadCSVPipe.scala:103)\r\n\tat scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:893)\r\n\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.pipes.EagerAggregationPipe.internalCreateResults(EagerAggregationPipe.scala:101)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.pipes.PipeWithSource.createResults(Pipe.scala:131)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.pipes.PipeWithSource.createResults(Pipe.scala:128)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:98)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:68)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.executionplan.InterpretedExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:164)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.executionplan.InterpretedExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:148)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.executionplan.InterpretedExecutionPlanBuilder$$anon$1.run(ExecutionPlanBuilder.scala:123)\r\n\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor3_1$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor3_1.scala:277)\r\n\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor3_1$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor3_1.scala:275)\r\n\tat org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_1$runSafely$.apply(CompatibilityFor3_1.scala:192)\r\n\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor3_1$ExecutionPlanWrapper.run(CompatibilityFor3_1.scala:275)\r\n\tat org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:26)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:107)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:59)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachineSPI$1.start(TransactionStateMachineSPI.java:135)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.run(TransactionStateMachine.java:187)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.run(TransactionStateMachine.java:77)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$2.run(BoltStateMachine.java:396)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine.run(BoltStateMachine.java:196)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onRun$3(BoltMessageRouter.java:80)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.execute(RunnableBoltWorker.java:135)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.run(RunnableBoltWorker.java:89)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```\r\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/9095", "title": "neo4j 3.1.2 status should be inactive instead of failed after exec systemctl stop for centos 7 x64", "closed": "2017-03-30 09:07:01", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2017-03-24 17:00:54", "user": "ppdouble", "body": "\r\n- Neo4j version: neo4j 3.1.2 commumnity\r\n- Operating system: CentOS 7 x64\r\n- Expected behavior\r\nI'd like to use `systemctl start neo4j` or `service neo4j start` in centos 7 x64.\r\nneo4j should be inactive instead of failed after exec `systemctl stop neo4j`.\r\n- Actual behavior\r\nThat's no services starting scripts for centos 7 x64, like `systemctl` scripts or `init.d` scripts. Only several tutorial links in [doc](http://neo4j.com/docs/operations-manual/3.1/installation/linux/tarball/). I already have my scripts. But neo4j status is failed after exec `systemctl stop neo4j`.\r\n\r\n### detail\r\nI find some samples ([neo4j.service 3.1](https://raw.githubusercontent.com/neo4j/neo4j/3.1/new-packaging/src/common/neo4j.service), [neo4j.init 3.1](https://raw.githubusercontent.com/neo4j/neo4j/3.1/new-packaging/src/common/neo4j.init)) in source on github to create script by myself.\r\n\r\nAfter reading some other article, I have my scripts.\r\n\r\nneo4j.service in `/etc/systemd/system`\r\n\r\n```\r\n[Unit]\r\nDescription=Neo4j Graph Database\r\nAfter=network.target\r\n\r\n[Service]\r\nType=forking\r\nUser=neo4j\r\nGroup=neo4j\r\nExecStart=/home/software/neo4j-community-3.1.2/bin/neo4j start\r\nExecStop=/home/software/neo4j-community-3.1.2/bin/neo4j stop\r\nExecReload=/home/software/neo4j-community-3.1.2/bin/neo4j restart\r\nRemainAfterExit=no\r\nRestart=on-failure\r\nPIDFile = /home/software/neo4j-community-3.1.2/run/neo4j.pid\r\nEnvironment=\"NEO4J_CONF=/home/software/neo4j-community-3.1.2/conf\" \"NEO4J_HOME=/home/software/neo4j-community-3.1.2\"\r\nLimitNOFILE=60000\r\nTimeoutSec=600\r\n\r\n[Install]\r\nWantedBy=multi-user.target\r\n``` \r\n\r\nneo4j.init in `/etc/init.d/`\r\n\r\n```\r\n#!/bin/sh\r\n\r\n### BEGIN REDHAT INFO\r\n# chkconfig: 2345 99 20\r\n# description: Neo4j Graph Database server\r\n### END REDHAT INFO\r\n### BEGIN INIT INFO\r\n# Provides:          neo4j\r\n# Required-Start:    $remote_fs $syslog $network\r\n# Required-Stop:     $remote_fs $syslog\r\n# Default-Start:     2 3 4 5\r\n# Default-Stop:      0 1 6\r\n# Short-Description: Neo4j Graph Database server\r\n# Description:       Neo4j is a Graph Database, which is a compelling\r\n#                    alternative to an RDBMS. http://www.neo4j.org\r\n### END INIT INFO\r\n\r\n# Author: Julian Simpson <julian.simpson@neotechnology.com>\r\n#\r\n# Copyright (c) 2002-2016 \"Neo Technology,\"\r\n\r\n# Network Engine for Objects in Lund AB [http://neotechnology.com]\r\n#\r\n# This file is part of Neo4j.\r\n#\r\n# Neo4j is free software: you can redistribute it and/or modify\r\n# it under the terms of the GNU General Public License as published by\r\n# the Free Software Foundation, either version 3 of the License, or\r\n# (at your option) any later version.\r\n#\r\n# This program is distributed in the hope that it will be useful,\r\n# but WITHOUT ANY WARRANTY; without even the implied warranty of\r\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\r\n# GNU General Public License for more details.\r\n#\r\n# You should have received a copy of the GNU General Public License\r\n# along with this program.  If not, see <http://www.gnu.org/licenses/>\r\n\r\nSCRIPTNAME=$0\r\n\r\nNEO4J_CONF=/home/software/neo4j-community-3.1.2/conf\r\nNEO4J_HOME=/home/software/neo4j-community-3.1.2\r\nNEO_USER=neo4j\r\nNEO4J_ULIMIT_NOFILE=60000\r\n\r\nPATH=/sbin:/usr/sbin:/bin:/usr/bin\r\nNAME=neo4j\r\nDAEMON=${NEO4J_HOME}/bin/${NAME}\r\nPIDDIR=${NEO4J_HOME}/run\r\nPIDFILE=${PIDDIR}/neo4j.pid\r\nSCRIPTNAME=/etc/init.d/${NAME}\r\n\r\nSYSTEMCTL_SKIP_REDIRECT=1\r\n\r\n[ -x \"$DAEMON\" ] || exit 0\r\n#[ -r ${NEO4J_CONF}/${NAME}.conf ] && . ${NEO4J_CONF}/${NAME}.conf\r\n[ -n \"${NEO_USER}\" ] || NEO_USER=${NAME}\r\n\r\n# Debian distros and SUSE\r\nhas_lsb_init()\r\n{\r\n  test -f \"/lib/lsb/init-functions\"\r\n}\r\n\r\n# RedHat/Centos distros\r\nhas_init()\r\n{\r\n  test -f \"/etc/init.d/functions\"\r\n}\r\n\r\nif has_lsb_init ; then\r\n  . /lib/lsb/init-functions\r\nelif has_init ; then\r\n  . /etc/init.d/functions\r\nelse\r\n  echo \"Error: your platform is not supported by ${NAME}\" >&2\r\n  exit 1\r\nfi\r\ndo_start()\r\n{\r\n  do_ulimit\r\n  [ -d \"${PIDDIR}\" ] || mkdir -p \"${PIDDIR}\"\r\n  chown \"${NEO_USER}:\" \"${PIDDIR}\"\r\n\r\n  if has_lsb_init ; then\r\n    start-stop-daemon --chuid ${NEO_USER} --start --quiet --oknodo --pidfile ${PIDFILE} --exec ${DAEMON} -- start\r\n  else\r\n    daemon --user=\"${NEO_USER}\" --pidfile=\"${PIDFILE}\" \"${DAEMON} start > /dev/null 2>&1 &\"\r\n  fi\r\n}\r\n\r\ndo_stop()\r\n{\r\n  ${DAEMON} stop\r\n}\r\n\r\ndo_status()\r\n{\r\n  if has_lsb_init ; then\r\n    status_of_proc -p \"${PIDFILE}\" \"${DAEMON}\" \"${NAME}\"\r\n  else\r\n    status -p \"${PIDFILE}\" \"${NAME}\"\r\n  fi\r\n}\r\n\r\ndo_ulimit()\r\n{\r\n  if [ -n \"${NEO4J_ULIMIT_NOFILE}\" ]; then\r\n    ulimit -n \"${NEO4J_ULIMIT_NOFILE}\"\r\n  fi\r\n}\r\n\r\ncase \"$1\" in\r\n  start)\r\n    do_start\r\n    ;;\r\n  stop)                                                          \r\n    do_stop\r\n    ;;\r\n  status)\r\n    do_status\r\n    ;;\r\n  restart|force-reload)\r\n    do_stop && do_start\r\n    ;;\r\n  *)\r\n    echo \"Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}\" >&2\r\n    exit 3\r\n    ;;\r\nesac\r\n```\r\n\r\nSetting `SYSTEMCTL_SKIP_REDIRECT=1` to use script in `/etc/init.d` only, since centos 7 directly redirect to `systemctl` by default after `. /etc/init.d/functions`. And It is not recommended to use `/etc/init.d` scripts now.\r\n\r\n`/etc/init.d/neo4j` works lonely well for me. But `systemctl` scripts seems not perfect. I am now only using `systemctl` script. After I stop neo4j by `systemctl stop neo4j`, and then view the status `systemctl status neo4j`:\r\n\r\n```\r\n\u25cf neo4j.service - Neo4j Graph Database\r\n   Loaded: loaded (/etc/systemd/system/neo4j.service; disabled; vendor preset: disabled)\r\n   Active: failed (Result: exit-code) since Fri 2017-03-24 12:46:04 EDT; 2s ago\r\n  Process: 19846 ExecStop=/home/software/neo4j-community-3.1.2/bin/neo4j stop (code=exited, status=0/SUCCESS)\r\n Main PID: 19244 (code=exited, status=143)\r\n\r\nMar 24 12:45:22 localhost.localdomain neo4j[19194]: Starting Neo4j.\r\nMar 24 12:45:22 localhost.localdomain neo4j[19194]: Started neo4j (pid 19244)...\r\nMar 24 12:45:22 localhost.localdomain neo4j[19194]: There may be a short dela...\r\nMar 24 12:45:22 localhost.localdomain systemd[1]: Started Neo4j Graph Database.\r\nMar 24 12:45:40 localhost.localdomain systemd[1]: Started Neo4j Graph Database.\r\nMar 24 12:46:03 localhost.localdomain systemd[1]: Stopping Neo4j Graph Databa...\r\nMar 24 12:46:04 localhost.localdomain systemd[1]: neo4j.service: main process...\r\nMar 24 12:46:04 localhost.localdomain systemd[1]: Stopped Neo4j Graph Database.\r\nMar 24 12:46:04 localhost.localdomain systemd[1]: Unit neo4j.service entered ...\r\nMar 24 12:46:04 localhost.localdomain systemd[1]: neo4j.service failed.\r\nHint: Some lines were ellipsized, use -l to show in full.\r\n```\r\n\r\nAfter using `systemctl status neo4j -l` for detail:\r\n\r\n```\r\n\u25cf neo4j.service - Neo4j Graph Database\r\n   Loaded: loaded (/etc/systemd/system/neo4j.service; disabled; vendor preset: disabled)\r\n   Active: failed (Result: exit-code) since Fri 2017-03-24 12:46:04 EDT; 3min 44s ago \r\n  Process: 19846 ExecStop=/home/software/neo4j-community-3.1.2/bin/neo4j stop (code=exited, status=0/SUCCESS)\r\n Main PID: 19244 (code=exited, status=143)\r\n\r\nMar 24 12:45:22 localhost.localdomain neo4j[19194]: Starting Neo4j.\r\nMar 24 12:45:22 localhost.localdomain neo4j[19194]: Started neo4j (pid 19244). It is available at http://0.0.0.0:7474/\r\nMar 24 12:45:22 localhost.localdomain neo4j[19194]: There may be a short delay until the server is ready.\r\nMar 24 12:45:22 localhost.localdomain systemd[1]: Started Neo4j Graph Database.\r\nMar 24 12:45:40 localhost.localdomain systemd[1]: Started Neo4j Graph Database.\r\nMar 24 12:46:03 localhost.localdomain systemd[1]: Stopping Neo4j Graph Database...\r\nMar 24 12:46:04 localhost.localdomain systemd[1]: neo4j.service: main process exited, code=exited, status=143/n/a\r\nMar 24 12:46:04 localhost.localdomain systemd[1]: Stopped Neo4j Graph Database.\r\nMar 24 12:46:04 localhost.localdomain systemd[1]: Unit neo4j.service entered failed state.\r\nMar 24 12:46:04 localhost.localdomain systemd[1]: neo4j.service failed.\r\n```\r\n\r\nAnyway it works except one thing. The status should be inactive instead of failed.\r\n"}, {"labels": ["3.1", "bug", "causal clustering"], "url": "https://github.com/neo4j/neo4j/issues/9071", "title": "causal_clustering.discovery_listen_address doesn't set the IP address", "closed": "2017-04-03 09:13:47", "commitsDetails": [], "commits": {}, "ttf": 12.000277777777777, "created": "2017-03-21 22:42:44", "user": "mikernorton", "body": "- Neo4j version: 3.1.1\r\n- Operating system: Red Hat 7.3\r\n\r\nWe generally like to make sure all listening ports are bound to a specific IP for security reasons. This works for almost all neo4j configured addresses except for the discovery port. First I tried setting the connector default, \"dbms.connectors.default_listen_address=172.17.0.3\", but that did not set the address for the discovery. Nor does setting \"causal_clustering.discovery_listen_address=172.17.0.3:5000\"\r\n\r\nInstead, the discovery port is always bound to \":::5000\", meaning you can connect using any IP on the box.\r\n\r\nSteps to reproduce:\r\n1) In the neo4j.conf file set\r\ncausal_clustering.discovery_listen_address=172.17.0.3:5000\r\n(For your own IP.)\r\n2) bring up Neo4j.\r\n\r\n- Expected behavior\r\nnetstat -plnt\r\nActive Internet connections (only servers)\r\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name \r\n...   \r\ntcp6       0      0 **172.17.0.3:5000**         :::*                    LISTEN      2281/java         \r\n...\r\n\r\n- Actual behavior\r\nnetstat -plnt\r\nActive Internet connections (only servers)\r\nProto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name   \r\n... \r\ntcp6       0      0 **:::5000**                 :::*                    LISTEN      2281/java           \r\n...\r\n\r\n\r\nThe only debug output IO could find for the parameter shows it is set properly:\r\n/var/log/neo4j/debug.log:2017-03-21 22:15:38.275+0000 INFO  [o.n.k.i.DiagnosticsManager] causal_clustering.discovery_listen_address=172.17.0.3:5000\r\n\r\n\r\n"}, {"labels": ["2.3", "browser", "bug", "team-ux"], "url": "https://github.com/neo4j/neo4j/issues/9066", "title": "Query execution time in Dashboard console is wrong", "closed": "2018-11-19 07:22:00", "commitsDetails": [], "commits": {}, "ttf": 607.0002777777778, "created": "2017-03-21 12:17:54", "user": "creotiv", "body": "I found that query execution time in dashboard console calculated wrong. Instead of showing query time it shows query time + time of getting and rendering response in dashboard console, basically query time depends on the internet speed. Which makes it useless.\r\nHow to reproduce:\r\nSend any cypher query from console which has heavy response, get the query time, and then send same query instead of result return just True, and get the query time, then you will see difference, which basically shouldn't exist. Also you can check this wi limiting speed of your internet connection.\r\n\r\n- Neo4j version: 2.3\r\n- Operating system: Ubuntu 16.04"}, {"labels": ["3.1", "bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/9055", "title": "User procedure call fails to delete node: EntityNotFoundException/QueryExecutionException", "closed": "2018-08-10 11:44:21", "commitsDetails": [], "commits": {}, "ttf": 509.0002777777778, "created": "2017-03-18 15:12:15", "user": "LeBlue", "body": "**Version:** community-3.1.1 \r\n**Operating System:** arch-linux  \r\n**API:** user procedures/cypher\r\n\r\nThe following example procedure tries to delete a node (`endNode`) related to the input node. The procedure call returns, but the transaction is rolled back with the error `EntityNotFoundException` (HTTP-API) or `QueryExecutionException` (neo4j-shell).\r\n\r\nThe error occurs depending on how the input nodes are matched in the cypher query.\r\n\r\n### Example procedure\r\n```\r\npackage example;\r\nimport org.neo4j.graphdb.*;\r\nimport org.neo4j.procedure.*;\r\n\r\npublic class example {\r\n\r\n    @Procedure(mode = Mode.WRITE)\r\n    @Description(\"example.testdelete(node, relType) deletes node and related (relType) nodes\")\r\n    public void testdelete(@Name(\"node\") Node node, @Name(\"relType\") String relType) {\r\n\r\n        Iterable<Relationship> rels = node.getRelationships(RelationshipType.withName(relType), Direction.OUTGOING);\r\n        for (Relationship rel: rels) {\r\n            Node endNode = rel.getEndNode();\r\n            rel.delete();\r\n            endNode.delete(); // this succeeds but transaction with procedure call fails\r\n        }\r\n        node.delete();\r\n    }\r\n}\r\n```\r\n\r\n### Steps to reproduce\r\ncreate a node with related node that should be deleted via the procedure call.\r\n```\r\ncreate (n1:Label {name: \"test\"})-[:REL]->(n2) return n1,n2;\r\n+--------------------------------------+\r\n| n1                     | n2          |\r\n+--------------------------------------+\r\n| Node[1]{name:\"test\"}   | Node[2]{}   |\r\n+--------------------------------------+\r\n```\r\n\r\n### Fails\r\nThe procedure call fails when accessing node attributes while selecting the nodes to input into the call.\r\n```\r\nmatch (n) where n.name = \"test\" call example.testdelete(n, \"REL\") return null;\r\nQueryExecutionException: Node with id 2 has been deleted in this transaction <- neo4j-shell\r\n{ \"code\": \"Neo.ClientError.Statement.EntityNotFound\",\r\n  \"message\": \"Node with id 2 has been deleted in this transaction\"  } <- HTTP-API\r\n```\r\nSplitting match and call like this also fails.\r\n```\r\nmatch (n) where n.name = \"test\" with n as node call example.testdelete(node, \"REL\") return null;\r\n````\r\n\r\n### Works\r\nWith input nodes matched only via patterns that exclude the to be deleted node\r\n```\r\nmatch (n) where id(n)=1 call example.testdelete(n, \"REL\") return null;\r\nmatch (n)-[:REL]->() call example.testdelete(n, \"REL\") return null;\r\nmatch (n:Label) where n.name = \"test\" call example.testdelete(n, \"REL\") return null;\r\n```\r\n\r\nThe error seems to be related to the cypher execution order in matching attributes/filtering of a node list and the procedure call.\r\n\r\n### Workaround\r\nCollecting all candiate nodes prior to calling `testdelete` works.\r\n```\r\nmatch (n) where n.name = \"test\" with collect(n) as ln unwind ln as l call example.testdelete(l, \"REL\") return null;\r\n```\r\n\r\n### Question: bug or limitation\r\n\r\nShould this be considered a bug or a limitiation in mixing/interaction of cypher with procedure calls?\r\nPerhaps there is a better/correct way to do this?\r\n\r\nThanks\r\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/8996", "title": "YUM repository signature on repomd.xml is not being regenerated with repository updates", "closed": "2017-03-10 08:51:24", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2017-03-10 02:50:26", "user": "frankthetank", "body": "My bad for continuing the discussion on closed Issue #6148 (It was closed in 2015!).  I didn't check its state before piling on.\r\n\r\nMost of the details are over there but I wanted to create this new ticket as a trackable item so it doesn't fall through the cracks.\r\nMy configuration and logs are at https://github.com/neo4j/neo4j/issues/6148#issuecomment-284595532\r\n\r\nAccording to @spacecowboy : \"@frankthetank thanks for the info. I think we found the issue. It seems the repo metadata isn't signed everytime it is regenerated. I'm making some changes that hopefully will have it fixed.\"\r\n\r\nIf nothing else the research is done and closing this ticket quickly will make your average time to close go down ;-)"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8994", "title": "PERIODIC COMMIT is prohibited even though query calls an updating plugin procedure", "closed": "2017-04-04 08:09:22", "commitsDetails": [], "commits": {}, "ttf": 25.00027777777778, "created": "2017-03-09 22:54:31", "user": "cybersam", "body": "### Environment\r\n- Neo4j version: 3.1.1\r\n- Operating system: OS X 10.11.6\r\n- API/Driver: None (using browser ui)\r\n\r\n### Steps to reproduce\r\nAttempt to use the `PERIODIC COMMIT` option of `LOAD CSV` in a Cypher query that makes no updates directly, but includes a call to an APOC procedure that performs updates.\r\n\r\n### Expected behavior\r\nThe query completes normally.\r\n\r\n### Actual behavior\r\nThe query failed with an `Cannot use periodic commit in a non-updating query` error. \r\n\r\n### Suggested fix\r\nYou can add warnings to the browser UI, but otherwise allow queries that call procedures to use `PERIODIC COMMIT`. "}, {"labels": ["bug"], "filteredCommits": ["0fca85a565c0b05bace415fbf60476b66ee06f02"], "url": "https://github.com/neo4j/neo4j/issues/8929", "gitStatsSummary": {"insertions": 14, "gitFilesChange": 2, "lines": 16, "deletions": 2}, "numCommits": 1, "commits": {"0fca85a565c0b05bace415fbf60476b66ee06f02": {"commitUser": "spacecowboy", "commitGHEventType": "closed"}}, "ttf": 8.000277777777777, "user": "marijnkoolen", "changesInPackagesSPOON": ["org.neo4j.shell.impl.RmiLocation.bind(java.rmi.Remote)", "org.neo4j.shell.FreePortIT", "org.neo4j.shell.impl.RmiLocation", "org.neo4j.shell.impl.RmiLocation.unbind()", "org.neo4j.shell.impl.RemotelyAvailableServer", "org.neo4j.shell.impl.RemotelyAvailableServer.makeRemotelyAvailable(java.lang.String,int,java.lang.String)", "org.neo4j.shell.impl.RemotelyAvailableServer.shutdown()"], "changesInPackagesGIT": ["community/shell/src/main/java/org/neo4j/shell/impl"], "body": "## Guidelines\r\n\r\nI've [posted this on stackoverflow to get tips first](http://stackoverflow.com/questions/42397383/jersey-web-app-with-embedded-neo4j-doesnt-shut-down-properly-on-tomcat-server) but I'm starting to think this is a bug in Neo4J.\r\n\r\nI'm running into a shutdown issue when running a Jersey application with embedded Neo4j database on Tomcat. Deploying (using Maven 3.3.9) works fine and the database is started, but on redeploy/undeploy, I get a Tomcat warning that a thread is not closed upon undeploying the application.\r\n\r\nI need a remote shell connection to the database (I'm using port 5555), which is established upon startup, but the hanging thread causes the port not to be released after shutdown. I get the same warning if I don't open the remote shell connection. The only solution is to restart tomcat.\r\n\r\n- Neo4j version: 3.1 (also tried 2.2.3 and 2.2.5, same issue)\r\n- Operating system: Ubuntu 16.04 (also tried on local server running RedHat 6.8 and Tomcat 6)\r\n- Tomcat version: 8.0.27 and 9.0.0.M17\r\n- **Steps to reproduce**: [Simple test case on GitHub](https://github.com/marijnkoolen/java-jersey-neo4j-test)\r\n\r\n I've tried the JVMHelper that was suggested for a similar issue (https://github.com/Neo4j/Neo4j/issues/1070) which kills many threads and takes care of the ThreadLocal errors, but not the thread pool issue.\r\n\r\nMuch more detail is available in the [stackoverflow post](http://stackoverflow.com/questions/42397383/jersey-web-app-with-embedded-neo4j-doesnt-shut-down-properly-on-tomcat-server)\r\n\r\nOutput from Tomcat:\r\n\r\n<pre>\r\n\r\n    21-Feb-2017 17:37:10.242 WARNING [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [mytest] appears to have started a thread named [pool-17-thread-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:\r\n     sun.misc.Unsafe.park(Native Method)\r\n     java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\r\n     java.util.concurrent.SynchronousQueue$TransferStack.awaitFulfill(SynchronousQueue.java:460)\r\n     java.util.concurrent.SynchronousQueue$TransferStack.transfer(SynchronousQueue.java:362)\r\n     java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:941)\r\n     java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1066)\r\n     java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)\r\n     java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\r\n     java.lang.Thread.run(Thread.java:745)\r\n    21-Feb-2017 17:37:10.242 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@2c930a78]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@4c0b4554]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.242 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@1c3e6e38]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@3f71b23c]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.242 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@b05bf60]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@1d326ab1]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.242 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@72929881]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@40c024bd]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.242 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@66987d7a]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@68f1f4fa]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.242 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@e413ff5]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@4f65074c]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.242 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@6ab3d077]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@d02bfff]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.242 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@a3b973d]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@6d03be51]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@1947fbee]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@1a2527e]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@5776bf08]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@27776281]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@149750a]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@12ebf6ff]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@70078555]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@6cf882be]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@26d35b0e]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@6bc20d25]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@27a30025]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@f669b1d]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@33d1bad4]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@480122ae]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@779cb1a3]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@4c19623e]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@72206673]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@33f53ecb]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@21f680bf]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@26f91e2d]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@571bf77f]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@4d828831]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@58e40a46]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@36026f01]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.243 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@3eaac6b1]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@67300255]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@1f7e82cf]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@3a218c46]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@52d64afd]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@3513d858]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@5e104ccf]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@68e5b8f7]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@80486b4]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@237e5ef4]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@7fd41860]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@3a33256d]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@16ae35b9]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@47f65066]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@18be57e0]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@3b0501d7]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.io.pagecache.impl.muninn.CursorPool] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool@5ce1e8f3]) and a value of type [org.neo4j.io.pagecache.impl.muninn.CursorPool.CursorSets] (value [org.neo4j.io.pagecache.impl.muninn.CursorPool$CursorSets@2961f669]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.244 SEVERE [http-nio-8080-exec-6] org.apache.catalina.loader.WebappClassLoaderBase.checkThreadLocalMapForLeaks The web application [mytest] created a ThreadLocal with key of type [org.neo4j.collection.pool.MarshlandPool$1] (value [org.neo4j.collection.pool.MarshlandPool$1@438ab5f2]) and a value of type [org.neo4j.collection.pool.MarshlandPool.LocalSlot] (value [org.neo4j.collection.pool.MarshlandPool$LocalSlot@50120fed]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\r\n    21-Feb-2017 17:37:10.762 INFO [http-nio-8080-exec-6] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/mytest]\r\n\r\n</pre>\r\n\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 7, "UPD": 0, "TOT": 10, "DEL": 0, "INS": 8, "spoonFilesChanged": 3, "MOV": 2}, "title": "Embedded Neo4J doesn't close threads after redeploy on tomcat", "statsSkippedReason": "", "closed": "2017-03-10 12:57:36", "commitsDetails": [{"commitUser": "spacecowboy", "commitDateTime": "2017-03-06 12:03:57", "commitHash": "0fca85a565c0b05bace415fbf60476b66ee06f02", "commitParents": ["f5fc21139e1df53b6435f893470cacc8a6a8c123"], "commitGHEventType": "closed", "nameRev": "0fca85a565c0b05bace415fbf60476b66ee06f02 tags/3.0.9~2^2~3", "commitGitStats": [{"insertions": 6, "lines": 7, "filePath": "community/shell/src/main/java/org/neo4j/shell/impl/RemotelyAvailableServer.java", "deletions": 1}, {"insertions": 110, "lines": 110, "filePath": "community/shell/src/test/java/org/neo4j/shell/FreePortIT.java", "deletions": 0}, {"insertions": 8, "lines": 9, "filePath": "community/shell/src/main/java/org/neo4j/shell/impl/RmiLocation.java", "deletions": 1}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "DEL": 0, "INS": 2, "MOV": 1, "spoonMethodName": "org.neo4j.shell.impl.RemotelyAvailableServer.makeRemotelyAvailable(java.lang.String,int,java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.impl.RemotelyAvailableServer"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.impl.RemotelyAvailableServer.shutdown()"}], "spoonFilePath": "RemotelyAvailableServer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.FreePortIT"}], "spoonFilePath": "FreePortIT.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.shell.impl.RmiLocation.bind(java.rmi.Remote)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.impl.RmiLocation"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.impl.RmiLocation.unbind()"}], "spoonFilePath": "RmiLocation.java"}], "commitMessage": "Fixed shutdown of Neo4jShell to unbind its port\n\nPreviously the port would remain bound until the JVM was terminated.\n\nFixes #8929\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-03-06 12:02:28"}], "created": "2017-03-02 11:39:15"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/8878", "title": "Fail to upgrade neo4j from 2.2.10 to 2.3.9", "closed": "2017-02-23 04:12:12", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2017-02-23 03:24:22", "user": "hardychan", "body": "When upgrading the neo4j version from 2.2.10 to 2.3.9.\r\nWe have the following errors.\r\n\r\n    \t\t2017-02-23 11:04:15,731 [MaaiiContactsStore-akka.actor.default-dispatcher-3] ERROR com.maaii.contacts.InjectionModule - Failed starting Neo4j server\r\n\t\tjava.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.CommunityFacadeFactory, /opt/maaii/data/neo4j\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:160)\r\n        at org.neo4j.kernel.impl.factory.CommunityFacadeFactory.newFacade(CommunityFacadeFactory.java:43)\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:110)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory.newDatabase(GraphDatabaseFactory.java:129)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:117)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:185)\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:77)\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:45)\r\n        at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)\r\n        at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53)\r\n        at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)\r\n        at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n        at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)\r\n        at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)\r\n        at com.google.inject.internal.InternalInjectorCreator$1.call(InternalInjectorCreator.java:205)\r\n        at com.google.inject.internal.InternalInjectorCreator$1.call(InternalInjectorCreator.java:199)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1085)\r\n        at com.google.inject.internal.InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:199)\r\n        at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:180)\r\n        at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)\r\n        at com.google.inject.Guice.createInjector(Guice.java:99)\r\n        at com.google.inject.Guice.createInjector(Guice.java:73)\r\n        at com.google.inject.Guice.createInjector(Guice.java:62)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:125)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:120)\r\n        at akka.dispatch.Futures$$anonfun$future$1.apply(Future.scala:97)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)\r\n        at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)\r\n        at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)\r\n        at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\r\n        at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\r\n        at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\r\n        at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\r\n\t\tCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@76a4e8e5' was successfully initialized, but failed to start. Please see attached cause exception.\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:462)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:112)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:156)\r\n        ... 36 common frames omitted\r\n\t\tCaused by: org.neo4j.kernel.impl.storemigration.StoreUpgrader$UnexpectedUpgradingStoreVersionException: '/opt/maaii/data/neo4j/neostore.nodestore.db' has a store version number that we cannot upgrade from. Expected 'v0.A.3' but file is version ''.\r\n        at org.neo4j.kernel.impl.storemigration.UpgradableDatabase.checkUpgradeable(UpgradableDatabase.java:96)\r\n        at org.neo4j.kernel.impl.storemigration.StoreUpgrader.migrateIfNeeded(StoreUpgrader.java:149)\r\n        at org.neo4j.kernel.NeoStoreDataSource.upgradeStore(NeoStoreDataSource.java:650)\r\n        at org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:524)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 41 common frames omitted\r\n\t\t2017-02-23 11:04:17,424 [MaaiiContactsStore-akka.actor.default-dispatcher-3] ERROR com.maaii.contacts.InjectionModule - Failed starting Neo4j server\r\n\t\tjava.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.CommunityFacadeFactory, /opt/maaii/data/neo4j\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:160)\r\n        at org.neo4j.kernel.impl.factory.CommunityFacadeFactory.newFacade(CommunityFacadeFactory.java:43)\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:110)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory.newDatabase(GraphDatabaseFactory.java:129)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:117)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:185)\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:77)\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:45)\r\n        at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)\r\n        at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53)\r\n        at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)\r\n        at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n        at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)\r\n        at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)\r\n        at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)\r\n        at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)\r\n        at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:120)\r\n        at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:90)\r\n        at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:268)\r\n        at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n        at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)\r\n        at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)\r\n        at com.google.inject.internal.InternalInjectorCreator$1.call(InternalInjectorCreator.java:205)\r\n        at com.google.inject.internal.InternalInjectorCreator$1.call(InternalInjectorCreator.java:199)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1085)\r\n        at com.google.inject.internal.InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:199)\r\n        at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:180)\r\n        at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)\r\n        at com.google.inject.Guice.createInjector(Guice.java:99)\r\n        at com.google.inject.Guice.createInjector(Guice.java:73)\r\n        at com.google.inject.Guice.createInjector(Guice.java:62)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:125)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:120)\r\n        at akka.dispatch.Futures$$anonfun$future$1.apply(Future.scala:97)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)\r\n        at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)\r\n        at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)\r\n        at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\r\n        at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\r\n        at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\r\n        at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\r\n\t\tCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@7f655e4a' was successfully initialized, but failed to start. Please see attached cause exception.\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:462)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:112)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:156)\r\n        ... 47 common frames omitted\r\n\t\tCaused by: org.neo4j.kernel.impl.storemigration.StoreUpgrader$UnexpectedUpgradingStoreVersionException: '/opt/maaii/data/neo4j/neostore.nodestore.db' has a store version number that we cannot upgrade from. Expected 'v0.A.3' but file is version ''.\r\n        at org.neo4j.kernel.impl.storemigration.UpgradableDatabase.checkUpgradeable(UpgradableDatabase.java:96)\r\n        at org.neo4j.kernel.impl.storemigration.StoreUpgrader.migrateIfNeeded(StoreUpgrader.java:149)\r\n        at org.neo4j.kernel.NeoStoreDataSource.upgradeStore(NeoStoreDataSource.java:650)\r\n        at org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:524)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 52 common frames omitted\r\n\t\t2017-02-23 11:04:17,428 [MaaiiContactsStore-akka.actor.default-dispatcher-3] DEBUG com.maaii.common.config.ConfigModule - path no value provided, ignoring optional parameter\r\n\t\t2017-02-23 11:04:17,430 [MaaiiContactsStore-akka.actor.default-dispatcher-3] DEBUG com.maaii.common.config.ConfigModule - ssl no value provided, ignoring optional parameter\r\n\t\t2017-02-23 11:04:17,447 [MaaiiContactsStore-akka.actor.default-dispatcher-3] INFO com.maaii.contacts.HealthModule$McsHttpConnector - Starting HTTP health check service on http://0.0.0.0:80/\r\n\t\t2017-02-23 11:04:18,132 [MaaiiContactsStore-akka.actor.default-dispatcher-3] ERROR akka.actor.ActorSystemImpl - Failed performing initialization procedure. Node should not be used !!!\r\n\t\tcom.google.inject.CreationException: Unable to create injector, see the following errors:\r\n\r\n\t\t1) Error in custom provider, java.lang.RuntimeException: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.CommunityFacadeFactory, /opt/maaii/data/neo4j\r\n\t\tat com.maaii.contacts.InjectionModule.configure(InjectionModule.java:45)\r\n\t\tat com.maaii.contacts.InjectionModule.configure(InjectionModule.java:45)\r\n\t\twhile locating org.neo4j.graphdb.GraphDatabaseService\r\n\t\tCaused by: java.lang.RuntimeException: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.CommunityFacadeFactory, /opt/maaii/data/neo4j\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:112)\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:45)\r\n        at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)\r\n        at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53)\r\n        at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)\r\n        at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n        at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)\r\n        at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)\r\n        at com.google.inject.internal.InternalInjectorCreator$1.call(InternalInjectorCreator.java:205)\r\n        at com.google.inject.internal.InternalInjectorCreator$1.call(InternalInjectorCreator.java:199)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1085)\r\n        at com.google.inject.internal.InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:199)\r\n        at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:180)\r\n        at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)\r\n        at com.google.inject.Guice.createInjector(Guice.java:99)\r\n        at com.google.inject.Guice.createInjector(Guice.java:73)\r\n        at com.google.inject.Guice.createInjector(Guice.java:62)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:125)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:120)\r\n        at akka.dispatch.Futures$$anonfun$future$1.apply(Future.scala:97)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)\r\n        at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)\r\n        at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)\r\n        at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\r\n        at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\r\n        at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\r\n        at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\r\n\t\tCaused by: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.CommunityFacadeFactory, /opt/maaii/data/neo4j\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:160)\r\n        at org.neo4j.kernel.impl.factory.CommunityFacadeFactory.newFacade(CommunityFacadeFactory.java:43)\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:110)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory.newDatabase(GraphDatabaseFactory.java:129)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:117)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:185)\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:77)\r\n        ... 30 more\r\n\t\tCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@76a4e8e5' was successfully initialized, but failed to start. Please see attached cause exception.\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:462)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:112)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:156)\r\n        ... 36 more\r\n\t\tCaused by: org.neo4j.kernel.impl.storemigration.StoreUpgrader$UnexpectedUpgradingStoreVersionException: '/opt/maaii/data/neo4j/neostore.nodestore.db' has a store version number that we cannot upgrade from. Expected 'v0.A.3' but file is version ''.\r\n        at org.neo4j.kernel.impl.storemigration.UpgradableDatabase.checkUpgradeable(UpgradableDatabase.java:96)\r\n        at org.neo4j.kernel.impl.storemigration.StoreUpgrader.migrateIfNeeded(StoreUpgrader.java:149)\r\n        at org.neo4j.kernel.NeoStoreDataSource.upgradeStore(NeoStoreDataSource.java:650)\r\n        at org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:524)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 41 more\r\n\r\n\t\t2) Error in custom provider, java.lang.RuntimeException: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.CommunityFacadeFactory, /opt/maaii/data/neo4j\r\n\t\tat com.maaii.contacts.InjectionModule.configure(InjectionModule.java:45)\r\n\t\tat com.maaii.contacts.InjectionModule.configure(InjectionModule.java:45)\r\n\t\twhile locating org.neo4j.graphdb.GraphDatabaseService\r\n\t\tfor field at com.maaii.contacts.indexer.SchemaNodeIndexer.gds(SchemaNodeIndexer.java:22)\r\n\t\twhile locating com.maaii.contacts.indexer.SchemaNodeIndexer\r\n\t\tat com.maaii.contacts.InjectionModule.configure(InjectionModule.java:126)\r\n\t\twhile locating com.maaii.contacts.indexer.NodeIndexer\r\n\t\tCaused by: java.lang.RuntimeException: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.CommunityFacadeFactory, /opt/maaii/data/neo4j\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:112)\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:45)\r\n        at com.google.inject.internal.ProviderInternalFactory.provision(ProviderInternalFactory.java:81)\r\n        at com.google.inject.internal.InternalFactoryToInitializableAdapter.provision(InternalFactoryToInitializableAdapter.java:53)\r\n        at com.google.inject.internal.ProviderInternalFactory.circularGet(ProviderInternalFactory.java:61)\r\n        at com.google.inject.internal.InternalFactoryToInitializableAdapter.get(InternalFactoryToInitializableAdapter.java:45)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n        at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)\r\n        at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)\r\n        at com.google.inject.internal.SingleFieldInjector.inject(SingleFieldInjector.java:54)\r\n        at com.google.inject.internal.MembersInjectorImpl.injectMembers(MembersInjectorImpl.java:132)\r\n        at com.google.inject.internal.ConstructorInjector.provision(ConstructorInjector.java:120)\r\n        at com.google.inject.internal.ConstructorInjector.construct(ConstructorInjector.java:90)\r\n        at com.google.inject.internal.ConstructorBindingImpl$Factory.get(ConstructorBindingImpl.java:268)\r\n        at com.google.inject.internal.FactoryProxy.get(FactoryProxy.java:56)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter$1.call(ProviderToInternalFactoryAdapter.java:46)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1092)\r\n        at com.google.inject.internal.ProviderToInternalFactoryAdapter.get(ProviderToInternalFactoryAdapter.java:40)\r\n        at com.google.inject.internal.SingletonScope$1.get(SingletonScope.java:194)\r\n        at com.google.inject.internal.InternalFactoryToProviderAdapter.get(InternalFactoryToProviderAdapter.java:41)\r\n        at com.google.inject.internal.InternalInjectorCreator$1.call(InternalInjectorCreator.java:205)\r\n        at com.google.inject.internal.InternalInjectorCreator$1.call(InternalInjectorCreator.java:199)\r\n        at com.google.inject.internal.InjectorImpl.callInContext(InjectorImpl.java:1085)\r\n        at com.google.inject.internal.InternalInjectorCreator.loadEagerSingletons(InternalInjectorCreator.java:199)\r\n        at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:180)\r\n        at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)\r\n        at com.google.inject.Guice.createInjector(Guice.java:99)\r\n        at com.google.inject.Guice.createInjector(Guice.java:73)\r\n        at com.google.inject.Guice.createInjector(Guice.java:62)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:125)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:120)\r\n        at akka.dispatch.Futures$$anonfun$future$1.apply(Future.scala:97)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)\r\n        at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)\r\n        at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)\r\n        at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\r\n        at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\r\n        at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\r\n        at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\r\n\t\tCaused by: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.CommunityFacadeFactory, /opt/maaii/data/neo4j\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:160)\r\n        at org.neo4j.kernel.impl.factory.CommunityFacadeFactory.newFacade(CommunityFacadeFactory.java:43)\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:110)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory.newDatabase(GraphDatabaseFactory.java:129)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:117)\r\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:185)\r\n        at com.maaii.contacts.InjectionModule$1.get(InjectionModule.java:77)\r\n        ... 41 more\r\n\t\tCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@7f655e4a' was successfully initialized, but failed to start. Please see attached cause exception.\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:462)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:112)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\r\n        at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:156)\r\n        ... 47 more\r\n\t\tCaused by: org.neo4j.kernel.impl.storemigration.StoreUpgrader$UnexpectedUpgradingStoreVersionException: '/opt/maaii/data/neo4j/neostore.nodestore.db' has a store version number that we cannot upgrade from. Expected 'v0.A.3' but file is version ''.\r\n        at org.neo4j.kernel.impl.storemigration.UpgradableDatabase.checkUpgradeable(UpgradableDatabase.java:96)\r\n        at org.neo4j.kernel.impl.storemigration.StoreUpgrader.migrateIfNeeded(StoreUpgrader.java:149)\r\n        at org.neo4j.kernel.NeoStoreDataSource.upgradeStore(NeoStoreDataSource.java:650)\r\n        at org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:524)\r\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n        ... 52 more\r\n\r\n\t\t2 errors\r\n        at com.google.inject.internal.Errors.throwCreationExceptionIfErrorsExist(Errors.java:470)\r\n        at com.google.inject.internal.InternalInjectorCreator.injectDynamically(InternalInjectorCreator.java:184)\r\n        at com.google.inject.internal.InternalInjectorCreator.build(InternalInjectorCreator.java:110)\r\n        at com.google.inject.Guice.createInjector(Guice.java:99)\r\n        at com.google.inject.Guice.createInjector(Guice.java:73)\r\n        at com.google.inject.Guice.createInjector(Guice.java:62)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:125)\r\n        at com.maaii.contacts.Boot$1.call(Boot.java:120)\r\n        at akka.dispatch.Futures$$anonfun$future$1.apply(Future.scala:97)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.liftedTree1$1(Future.scala:24)\r\n        at scala.concurrent.impl.Future$PromiseCompletingRunnable.run(Future.scala:24)\r\n        at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:39)\r\n        at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(AbstractDispatcher.scala:415)\r\n        at scala.concurrent.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)\r\n        at scala.concurrent.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)\r\n        at scala.concurrent.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)\r\n        at scala.concurrent.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)\r\n\r\nPlease kindly support for the below failed to upgrade the neo4j db\r\n\r\n    \t\tCaused by: org.neo4j.kernel.impl.storemigration.StoreUpgrader$UnexpectedUpgradingStoreVersionException: '/opt/maaii/data/neo4j/neostore.nodestore.db' has a store version number that we cannot upgrade from. Expected 'v0.A.3' but file is version ''.\r\n\t\t\tat org.neo4j.kernel.impl.storemigration.UpgradableDatabase.checkUpgradeable(UpgradableDatabase.java:96)\r\n\t\t\tat org.neo4j.kernel.impl.storemigration.StoreUpgrader.migrateIfNeeded(StoreUpgrader.java:149)\r\n\t\t\tat org.neo4j.kernel.NeoStoreDataSource.upgradeStore(NeoStoreDataSource.java:650)\r\n\t\t\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:524)\r\n\t\t\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\r\n\t\t\t... 41 common frames omitted\r\n\r\n\r\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8869", "title": "[3.2] USING INDEX Exception", "closed": "2017-05-13 12:01:28", "commitsDetails": [], "commits": {}, "ttf": 79.00027777777778, "created": "2017-02-22 12:53:09", "user": "ikwattro", "body": "**Neo4j Version:** 3.2-alpha4\r\n**Operating System:** Ubuntu 16.10  \r\n**API:** Browser / Http\r\n\r\n### Steps to reproduce\r\n\r\nSpecify two index hints in a query : \r\n\r\n```\r\nPROFILE MATCH (n:User {login:\"jeromegamez\"}), (repo:Repository {full_name:\"php-http/HttplugBundle\"})\r\nUSING INDEX repo:Repository(full_name)\r\nUSING INDEX n:User(login)\r\nMATCH (n)-[r*1..2]-(repo)\r\nRETURN r LIMIT 10\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe query should not throw an exception\r\n\r\n### Actual behavior\r\n\r\n```\r\nExpected \r\nSet(UsingIndexHint(Variable(repo),LabelName(Repository),PropertyKeyName(full_name)), UsingIndexHint(Variable(n),LabelName(User),PropertyKeyName(login))) \r\n\r\n\r\nInstead, got: \r\nSet(UsingIndexHint(Variable(repo),LabelName(Repository),PropertyKeyName(full_name)))\r\n```\r\n\r\nMore information : \r\n\r\n```\r\nIndexes\r\n  ON :AnnotatedText(id)          ONLINE (for uniqueness constraint) \r\n  ON :Branch(id)                 ONLINE (for uniqueness constraint) \r\n  ON :Comment(id)                ONLINE (for uniqueness constraint) \r\n  ON :Commit(id)                 ONLINE (for uniqueness constraint) \r\n  ON :Event(id)                  ONLINE (for uniqueness constraint) \r\n  ON :Issue(id)                  ONLINE (for uniqueness constraint) \r\n  ON :Langugae(name)             ONLINE (for uniqueness constraint) \r\n  ON :Organization(id)           ONLINE (for uniqueness constraint) \r\n  ON :Organization(login)        ONLINE (for uniqueness constraint) \r\n  ON :PullRequest(id)            ONLINE (for uniqueness constraint) \r\n  ON :PullRequest(zid)           ONLINE (for uniqueness constraint) \r\n  ON :Push(id)                   ONLINE (for uniqueness constraint) \r\n  ON :Repository(lang_sync_time) ONLINE                             \r\n  ON :Repository(id)             ONLINE (for uniqueness constraint) \r\n  ON :Repository(full_name)      ONLINE (for uniqueness constraint) \r\n  ON :Tag(value)                 ONLINE                             \r\n  ON :User(follow_sync_time)     ONLINE                             \r\n  ON :User(id)                   ONLINE (for uniqueness constraint) \r\n  ON :User(login)                ONLINE (for uniqueness constraint) \r\n```\r\n\r\nI can provide access to the database if needed :)\r\n\r\n![screen shot 2017-02-22 at 13 56 38](https://cloud.githubusercontent.com/assets/1222009/23212399/da6c0f76-f906-11e6-8bad-135254c101dd.png)\r\n"}, {"labels": ["bolt server", "bug"], "url": "https://github.com/neo4j/neo4j/issues/8851", "title": "Exception thrown: 'Neo4j.Driver.V1.ServiceUnavailableException' in Neo4j.Driver.dll", "closed": "2017-06-14 12:41:39", "commitsDetails": [], "commits": {}, "ttf": 115.00027777777778, "created": "2017-02-18 13:31:44", "user": "mhelal", "body": "Hi,\r\n\r\nI am receiving the above exception while creating a session from .Net C# driver using the following code while the neo4j community edition 3.1.1 is running and I can connect to it from the browser on port 7474 :\r\n\r\nusing (var driver = GraphDatabase.Driver(\"bolt://localhost:7687\", AuthTokens.Basic(\"neo4j\", \"password\")))\r\nusing (var session = driver.Session())\r\n\r\n\r\nI am using Visual Studio 2015 on windows 10, and .Net driver downloaded from Nuget with runtime version v4.0.30319, and .Net framework 4.6.1. In the same project I have both the Neo4j .Net driver and the Neo4jClient to try it later on. This project where it fails to connect is created as a Solid Works Addin using references to the Solid Works APIs, which is what is needed for the project. However, I have another project without Solid Works on the same versions of VS, windows and everything and it connects fine,\r\n\r\n\r\nAny idea what I need to do to trace and solve this problem?\r\n\r\nI appreciate your support very much, thank you,\r\n\r\nManal"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/8840", "title": "It takes hours to bulk insert a node with many properties into a legacy index", "closed": "2017-04-24 16:00:27", "commitsDetails": [], "commits": {}, "ttf": 66.00027777777778, "created": "2017-02-16 21:50:57", "user": "mschwore", "body": "### Bug Report\r\n\r\nMy project uses the bulk insert interface to create an embedded neo4j database where some nodes have many properties indexed by a legacy full text index. I have found that upgrading to a neo4j version that contains #8462 will cause our database import process to stall on inserting these nodes with many properties.\r\n\r\nI have included demo code that takes many hours to insert a single node.\r\n\r\n**Neo4j Version:** 3.2.0-alpha04 (but any release with #8462 should exhibit this bug)\r\n**Operating System:** Centos 7.1\r\n**API:** Embedded Java API\r\n\r\n### Steps to reproduce\r\nThis demo exhibits the problem.\r\n\r\n```java\r\nBatchInserter batchNode = BatchInserters.inserter(new File(System.getProperty(\"java.io.tmpdir\") + File.separator + \"graph.db\"));\r\n\r\nLuceneBatchInserterIndexProvider provider = new LuceneBatchInserterIndexProvider(batchNode);\r\nBatchInserterIndex batchIndex = provider.nodeIndex(\"node_auto_index\",\r\n  MapUtil.stringMap(\r\n    IndexManager.PROVIDER, \"lucene\", \r\n      \"type\", \"fulltext\"));\r\n\r\nMap<String, Object> properties = new HashMap<>();\r\nfor(int i = 0; i < 6000; i++)\r\n{\r\n  properties.put(Integer.toString(i), RandomStringUtils.randomAlphabetic(200));\r\n}\r\n\r\nlong node = batchNode.createNode(properties, Label.label(\"NODE\"));\r\nbatchIndex.add(node, properties);\r\n\r\nprovider.shutdown();\r\nbatchNode.shutdown();\r\n```\r\n\r\nLooking at jstack, I can see that the program spends a lot of time in Document.getFields\r\n\r\n```\r\n\"main\" #1 prio=5 os_prio=0 tid=0x00002b241c00c000 nid=0xa6f runnable [0x00002b2419403000]\r\n   java.lang.Thread.State: RUNNABLE\r\n\tat org.apache.lucene.document.Document.getFields(Document.java:176)\r\n\tat org.neo4j.index.impl.lucene.legacy.IndexType.restoreSortFields(IndexType.java:397)\r\n\tat org.neo4j.index.impl.lucene.legacy.IndexType.addToDocument(IndexType.java:231)\r\n\tat org.neo4j.index.impl.lucene.legacy.LuceneBatchInserterIndex.addSingleProperty(LuceneBatchInserterIndex.java:126)\r\n\tat org.neo4j.index.impl.lucene.legacy.LuceneBatchInserterIndex.add(LuceneBatchInserterIndex.java:96)\r\n\tat neo4j_test.neo4j_test.Neo4jImport.main(Neo4jImport.java:43)\r\n```\r\n\r\nLooking through the source code, it looks like\r\n\r\n- Each property is inserted one at a time into LuceneBatchInserterIndex which calls restoreSortFields\r\n  - restoreSortFields will iterate through each already inserted field\r\n    - For each inserted field, it calls Lucene's getFields method which will again iterate through each already inserted field\r\n\r\nIn the end, inserting this one node will cause the fields array in Lucene's document to be iterated through O(n^3) times which ends up taking a very long time.\r\n\r\n### Expected behavior\r\nThe property should be bulk inserted into the index quickly.\r\n\r\n### Actual behavior\r\nA single large node can take hours to insert causing database creation to essentially never complete.\r\n"}, {"labels": ["3.2", "bug", "team-ux"], "url": "https://github.com/neo4j/neo4j/issues/8830", "title": "100% CPU on Ubuntu Server running simple query, fine on Windows Server", "closed": "2018-03-12 20:55:28", "commitsDetails": [], "commits": {}, "ttf": 389.0002777777778, "created": "2017-02-16 00:23:02", "user": "Olorin92", "body": "When running a simple (at least I think it is) query on our Neo4j server, we're met with the Neo4j browser hanging, and 1 cpu core constantly at 100% (the core at 100% changes though).\r\n\r\nThe query in question is:\r\n\r\nMATCH (p:Post)<-[:attached]-(m:Meeting)\r\nRETURN p, m\r\n\r\nThis query runs fine on a Windows Server 2016 box, but has serious issues on the Ubuntu box. The meeting node itself has a few RTF fields which make them a bit 'bulky', but the fact it runs fine on Windows yet struggles on Ubuntu suggests there's some configuration step I'm missing.\r\n\r\nNeo4j Version: 3.2\r\nOperating System: Ubuntu Server 16.10\r\nAPI: Neo4j Browser\r\n\r\nSteps to reproduce\r\n\r\nObviously reproducing would require our database, but in terms of the steps I've taken to get to this point:\r\n\r\n- Clean install Ubuntu Server 16.10\r\n- Download Ubuntu Community via link on website\r\n- Copy existing DB folder from Windows Server onto the Ubuntu machine\r\n- Run Neo4j via the start command\r\n- Execute the query mentioned above\r\n\r\nActual behavior\r\n\r\nBrowser becomes unresponsive and CPU goes to 100% on various cores\r\n\r\nExpected behavior\r\n\r\nResults are returned quickly as they are on a Windows Server box\r\n\r\nSorry if this doesn't qualify as an issue, it just didn't seem appropriate to post on StackOverflow."}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/8794", "title": "Minor logging inconsistency", "closed": "2017-03-09 16:56:44", "commitsDetails": [], "commits": {}, "ttf": 28.00027777777778, "created": "2017-02-09 16:43:42", "user": "darkshade9", "body": "Neo4j version: 3.1.1\r\nOS:  Linux - Ubuntu 14.04\r\nAPI/Driver:  C#\r\n\r\nLogging inconsistency issue (very minor)\r\n-- We use Filebeat to ship neo4j logs into Logstash and ultimately into Elasticsearch for centralized logging.  Our Logstash nodes apply Grok patterns to the logs to parse out interesting data such as exact timestamps (time the issue occurred versus time that the log was consumed), severity and other such items.  I noticed a minor logging inconsistency between severity types -- I've only seen INFO, WARN and ERROR so far, but here is the data I have:\r\n\r\n#Actual Behavior\r\nWith INFO and WARN logs:\r\n`2017-02-09 15:50:30.395+0000 INFO  [o.n.c.c.c.s.RaftLogShipper] MemberId{8cc492de}[matchIndex: 48611385, lastSentIndex: 48611380, localAppendIndex: 48611385, mode: CATCHUP]: caught up, moving to PIPELINE mode`\r\n\r\n`2017-02-09 15:50:30.395+0000 WARN  [o.n.c.c.c.s.RaftLogShipper] MemberId{8cc492de}[matchIndex: 48611385, lastSentIndex: 48611380, localAppendIndex: 48611385, mode: CATCHUP]: match index not progressing. This should be transient.`\r\n\r\nWith ERROR logs:\r\n`2017-02-09 16:30:25.045+0000 ERROR [o.n.b.t.SocketTransportHandler] Fatal error occurred when handling a client connection: Connection reset by peer Connection reset by peer`\r\n\r\n**Github comments do not seem to show the double space, but it exists**:\r\nThe **double space** after the severity in the INFO/WARN log messages and the **single space** in the ERROR log.  I haven't had the opportunity to see the other severity types, so I can't check if they also have this inconsistency.\r\n![Uploaded Photo](http://i.imgur.com/bAbjw8B.png)\r\n\r\n#Expected Behavior:\r\n\r\nAll log messages should have consistent spacing between fields for ease of log parsing.\r\n\r\nExample file:  [https://github.com/neo4j/neo4j/blob/3.2/community/logging/src/main/java/org/neo4j/logging/FormattedLog.java#L344-L347](https://github.com/neo4j/neo4j/blob/3.2/community/logging/src/main/java/org/neo4j/logging/FormattedLog.java#L344-L347)\r\n\r\n\r\nThanks\r\n\r\n"}, {"labels": ["3.1", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/8767", "title": "neo4j-import stops at \"Calculate dense nodes\"", "closed": "2017-10-19 15:16:14", "commitsDetails": [], "commits": {}, "ttf": 255.00027777777777, "created": "2017-02-06 10:04:28", "user": "chuajiesheng", "body": "# Setup\r\n- Neo4j version: Community Edition, 3.1.1\r\n- Operating system: Ubuntu 16.04\r\n- API/Driver: neo4j-import\r\n\r\n# **Steps to reproduce**\r\n1. Create a AWS instance with Ubuntu image\r\n2. Install neo4j using standard installation guide (neo4j supplied)\r\n3. Run the neo4j-import command as per screenshot\r\n\r\n- Actual behavior\r\n\r\n<img width=\"836\" alt=\"screen shot 2017-02-06 at 17 59 05\" src=\"https://cloud.githubusercontent.com/assets/1419998/22642521/033137ce-ec96-11e6-846e-50c4635a2fa4.png\">\r\n\r\n- Log\r\n\r\n<img width=\"839\" alt=\"screen shot 2017-02-06 at 18 00 17\" src=\"https://cloud.githubusercontent.com/assets/1419998/22642555/2466dbec-ec96-11e6-993f-ef9c7015714d.png\">\r\n\r\n# Bug report\r\n\r\nWhen neo4j-import is importing relation.csv, it just stops at calculating dense nodes is not able to move forward.\r\n\r\nSample of relation.csv:\r\n<img width=\"737\" alt=\"screen shot 2017-02-06 at 18 01 36\" src=\"https://cloud.githubusercontent.com/assets/1419998/22642611/64aa59f4-ec96-11e6-8bbf-7e3f2a166b36.png\">"}, {"labels": ["3.1", "bug", "cypher"], "filteredCommits": ["3a63a0026e3eed961fc922af560495e41f3d0296"], "url": "https://github.com/neo4j/neo4j/issues/8746", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"3a63a0026e3eed961fc922af560495e41f3d0296": {"commitUser": "Mats-SX", "commitGHEventType": "closed"}}, "ttf": 12.000277777777777, "user": "InverseFalcon", "changesInPackagesGIT": ["community/cypher/frontend-3.1/src/main/scala/org/neo4j/cypher/internal"], "body": "In every other usage (including list filter/extraction which has a nearly identical syntax), you can freely use lowercase 'where' without trouble.\r\n\r\nHowever, this query fails due to a lowercase 'where' (changing to uppercase causes the query to run as expected):\r\n\r\n`return [(p:Person)-[:ACTED_IN]->(m:Movie) where p.name = 'Tom Hanks' | p]`\r\n\r\nObserved in Neo4j 3.1.0 and 3.1.1, Community Edition on Mac OS through the browser interface.", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "'WHERE' keyword in pattern comprehension is case-sensitive", "statsSkippedReason": "", "closed": "2017-02-14 08:51:43", "commitsDetails": [{"commitUser": "Mats-SX", "commitDateTime": "2017-02-13 15:20:10", "commitHash": "3a63a0026e3eed961fc922af560495e41f3d0296", "commitParents": ["c3a4b454a86ea3c7ded04ce191d60caa4ee543f1"], "commitGHEventType": "closed", "nameRev": "3a63a0026e3eed961fc922af560495e41f3d0296 tags/3.2.0-alpha05~8^2~14^2", "commitGitStats": [{"insertions": 14, "lines": 14, "filePath": "community/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/PatternComprehensionAcceptanceTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/frontend-3.1/src/main/scala/org/neo4j/cypher/internal/frontend/v3_1/parser/Expressions.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Solves parsing bug for pattern comprehensions\n\nFixes #8746\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-02-13 15:20:10"}], "created": "2017-02-01 14:54:23"}, {"labels": ["3.1", "bug", "cypher", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/8701", "title": "Neo4j SET very long string", "closed": "2017-12-15 10:13:11", "commitsDetails": [], "commits": {}, "ttf": 323.0002777777778, "created": "2017-01-26 09:10:05", "user": "naisanza", "body": "**Neo4j version:** [3.1.0 community Dockerfile](https://github.com/neo4j/docker-neo4j-publish/blob/36ac547bcffcce2c7c0f249b340d062ba08e2598/3.1.0/community/Dockerfile)\r\n**Operating system:** Ubuntu 16.10 \r\n**API/Driver:** [Python Kubernetes/Cypher](https://neo4j.com/developer/python/#neo4j-python-driver)\r\n\r\nI'm trying to find out what I need to do to insert a very long string into a node property \r\n\r\nThe length of the string is 251172 characters long\r\n\r\nI'm unable to catch the error output from the debug log\r\n\r\n```\r\n...truncated...\r\nzM2QxYTc1ZWJmMTY2MjY0Y2IwYzNkOTkzYzIyYjUxPiA8NTQzZDFhNzVlYmYxNjYyNjRjYjBjM2Q5OTNjMjJiNTE+IF0KL1ByZXYgMTgyMDQ5Nwo+PgolRW5kRXhpZlRvb2xVcGRhdGUgMTgyMjMxNwpzdGFydHhyZWYKMTgyNTUwOQolJUVPRgo=', doc.updated = timestamp() CREATE UNIQUE (apt) - [r:reference] -> (doc)\"\r\n                                                                                                                                                                                                                                                                                                                                                                                                                                        ^\r\nINFO:neo4j.bolt:~~ [CLOSE]\r\n```"}, {"labels": ["3.1", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/8681", "title": "No check point found in any log file", "closed": "2017-10-19 13:06:16", "commitsDetails": [], "commits": {}, "ttf": 268.0002777777778, "created": "2017-01-23 16:55:27", "user": "mjr129", "body": "\r\n- **Neo4j version:** 3.1.0\r\n- **Operating system:** Ubuntu 16.04\r\n- **API/Driver:** Command line\r\n- **Steps to reproduce**\r\n\r\nEncountered an error \"file has been unmapped\", looks similar to issue #7249.\r\n\r\nAny attempts to run further queries resulted in the same error.\r\n\r\nStopped the server via `./neo4j stop` and restarted via `./neo4j start`.\r\n\r\nNeo4j refuses to start with the error `No check point found in any log file from version 661 to 678`.\r\n\r\n- **Expected behavior**\r\n\r\nRecovery from error condition\r\n\r\n- **Actual behavior**\r\n\r\nUnhelpful error message\r\n"}, {"labels": ["3.1", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/8677", "title": "Import data error...", "closed": "2017-02-13 09:58:53", "commitsDetails": [], "commits": {}, "ttf": 20.00027777777778, "created": "2017-01-23 14:47:09", "user": "new94", "body": "\r\n\r\n- Neo4j version: 3.1.1\r\n- Operating system: (Ubuntu 14.04)\r\n\r\nI'm trying import data from csv. (3 files. Vertexes and related):\r\n..............\r\n**Import error: Value 2570207036 is too big to be represented as int\r\nCaused by:Value 2570207036 is too big to be represented as int\r\njava.lang.ArithmeticException: Value 2570207036 is too big to be represented as int\r\n\tat org.neo4j.unsafe.impl.batchimport.Utils.safeCastLongToInt(Utils.java:36)\r\n\tat org.neo4j.unsafe.impl.batchimport.cache.NumberArrayFactory$1.newByteArray(NumberArrayFactory.java:157)\r\n\tat org.neo4j.unsafe.impl.batchimport.cache.NumberArrayFactory$Auto.newByteArray(NumberArrayFactory.java:255)\r\n\tat org.neo4j.unsafe.impl.batchimport.cache.NumberArrayFactory.newByteArray(NumberArrayFactory.java:95)\r\n\tat org.neo4j.unsafe.impl.batchimport.cache.NodeRelationshipCache.setHighNodeId(NodeRelationshipCache.java:140)\r\n\tat org.neo4j.unsafe.impl.batchimport.NodeStage.close(NodeStage.java:96)\r\n\tat org.neo4j.unsafe.impl.batchimport.staging.ExecutionSupervisors.superviseExecution(ExecutionSupervisors.java:86)\r\n\tat org.neo4j.unsafe.impl.batchimport.ParallelBatchImporter.executeStages(ParallelBatchImporter.java:325)\r\n\tat org.neo4j.unsafe.impl.batchimport.ParallelBatchImporter.doImport(ParallelBatchImporter.java:163)\r\n\tat org.neo4j.tooling.ImportTool.doImport(ImportTool.java:464)\r\n\tat org.neo4j.commandline.dbms.CsvImporter.doImport(CsvImporter.java:145)\r\n\tat org.neo4j.commandline.dbms.ImportCommand.execute(ImportCommand.java:210)\r\n\tat org.neo4j.commandline.admin.AdminTool.execute(AdminTool.java:92)\r\n\tat org.neo4j.commandline.admin.AdminTool.main(AdminTool.java:39)**\r\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["8fb83164abd84f831b15041c7d51e68e7a27ee98"], "url": "https://github.com/neo4j/neo4j/issues/8606", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 4, "deletions": 1}, "numCommits": 1, "commits": {"8fb83164abd84f831b15041c7d51e68e7a27ee98": {"commitUser": "henriknyman", "commitGHEventType": "closed"}}, "ttf": 8.000277777777777, "user": "InverseFalcon", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal"], "body": "Pattern comprehension appears to fail (null result) when an optional match is present in the query, even if mostly unrelated to the pattern used in pattern comprehension.\r\n\r\nNote that the absence or presence of DISTINCT can also affect occurrence of this bug.\r\n\r\nThis is related to [this stack overflow question](http://stackoverflow.com/questions/41596234/issue-with-new-cypher-3-1-head-function), though the problem looks like it's related to pattern comprehension rather than the head() function.\r\n\r\nBug can be replicated using the Movies example graph.\r\n\r\n```\r\nmatch (a:Person)\r\nwhere a.name in ['Ron Howard', 'Keanu Reeves', 'Tom Cruise']\r\nwith a\r\noptional match (a)-[:ACTED_IN]->(movie:Movie)\r\nwith a, movie\r\nreturn a.name as name,  [(a)-[:DIRECTED]->(dirMovie:Movie) | dirMovie.title] as dirMovie\r\n```\r\n\r\nIn the results, dirMovie is null for Ron Howard, even though he has directed movies:\r\n\r\n![screen shot 2017-01-11 at 10 00 42 am](https://cloud.githubusercontent.com/assets/8800736/21860286/d9c4dfc8-d7e4-11e6-8e7f-8eea8705e1ea.png)\r\n\r\nThe same result occurs even if we remove capture and usage of any variable in the optional match:\r\n\r\n```\r\nmatch (a:Person)\r\nwhere a.name in ['Ron Howard', 'Keanu Reeves', 'Tom Cruise']\r\nwith a\r\noptional match (a)-[:ACTED_IN]->(:Movie)\r\nwith a\r\nreturn a.name as name,  [(a)-[:DIRECTED]->(dirMovie:Movie) | dirMovie.title] as dirMovie\r\n```\r\n\r\nBut if we add DISTINCT on either the WITH or the RETURN, we get results as expected:\r\n\r\n```\r\nmatch (a:Person)\r\nwhere a.name in ['Ron Howard', 'Keanu Reeves', 'Tom Cruise']\r\nwith a\r\noptional match (a)-[:ACTED_IN]->(:Movie)\r\nwith distinct a\r\nreturn a.name as name,  [(a)-[:DIRECTED]->(dirMovie:Movie) | dirMovie.title] as dirMovie\r\n```\r\n\r\n![screen shot 2017-01-11 at 10 01 57 am](https://cloud.githubusercontent.com/assets/8800736/21860334/1c98cb70-d7e5-11e6-929e-b3cd5dae6a52.png)\r\n\r\nAnd if we remove the optional match completely, we also get results as expected:\r\n\r\n```\r\nmatch (a:Person)\r\nwhere a.name in ['Ron Howard', 'Keanu Reeves', 'Tom Cruise']\r\nwith a\r\nreturn a.name as name,  [(a)-[:DIRECTED]->(dirMovie:Movie) | dirMovie.title] as dirMovie\r\n```\r\n\r\nObserved in Neo4j 3.1.0 Community edition so far.", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Pattern comprehension fails when optional match present (Neo4j 3.1.0)", "statsSkippedReason": "", "closed": "2017-01-19 19:43:22", "commitsDetails": [{"commitUser": "henriknyman", "commitDateTime": "2017-01-18 14:29:00", "commitHash": "8fb83164abd84f831b15041c7d51e68e7a27ee98", "commitParents": ["25592d81d68c06afc5fc9b3a75a21a60ccb2c3b1"], "commitGHEventType": "closed", "nameRev": "8fb83164abd84f831b15041c7d51e68e7a27ee98 tags/3.2.0-alpha03~2^2~14^2", "commitGitStats": [{"insertions": 3, "lines": 4, "filePath": "community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal/compiler/v3_1/planner/logical/steps/PatternExpressionSolver.scala", "deletions": 1}, {"insertions": 23, "lines": 23, "filePath": "community/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/PatternComprehensionAcceptanceTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Solves bug when using pattern comprehension and OPTIONAL MATCH\n\nFixes #8606\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-01-18 14:29:00"}], "created": "2017-01-11 17:59:15"}, {"labels": ["3.1", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8587", "title": "Node returns incorrect empty array property type", "closed": "2017-10-04 12:01:53", "commitsDetails": [], "commits": {}, "ttf": 267.0002777777778, "created": "2017-01-10 09:41:28", "user": "bHacklv", "body": "When I create Node(s) with property that has *empty array value* of *any type* (long[], Long[], double[], etc.), when I read this(these) Node(s) from the store - the above properties type is *ALWAYS* empty String[] array. I would expect to receive correct initial array type...\r\n\r\n**Neo4j Version:** 3.1\r\n**Operating System:** Win7\r\n\r\n### Steps to reproduce\r\n1. Create Node with Empty Array Property Value Long[] type\r\n2. Read Node from store\r\n3. Read above property\r\n4. Assert Property's type\r\n\r\n### Expected behavior\r\ninstanceof Long[].class\r\n\r\n### Actual behavior\r\ninstanceof String[].class\r\n\r\n\r\n### 'Pseudo' test code\r\n```java\r\nfinal Transaction transaction = beginTransaction();\r\nfinal Map<String, Object> queryParam = new HashMap<>(1);\r\nqueryParam.put(\"val\", new Long[0]);\r\ntransaction.run(\"CREATE (n:`Default Label`) SET n.key = {val}\", queryParam).close()\r\nfinal Node n = (Node) execute.next().get(\"n\");\r\nassertThat(((ClientNodeWrapper) n).getProperty(\"key\")).isInstanceOf(Long[].class);\r\n\r\n===\r\n\r\nExpecting:<[]>to be an instance of: <java.lang.Long[]>but was instance of:<java.lang.String[]>\r\n```\r\n\r\n### My investigation\r\nI've investigated how the property value is being read:\r\n```java\r\n433: NodeProxy#getAllProperties -> propertyCursor.get().value()\r\n220: StorePropertyPayloadCursor#value() -> type()\r\n337: PropertyType#getPropertyTypeOrNull() -> typeIdentifier( propBlock );\r\n-> returns 10 (Array) // correct!\r\n245: StorePropertyPayloadCursor#arrayValue()\r\n215: StorePropertyPayloadCursor#arrayValue() -> readArrayFromBuffer( buffer )\r\n316: StorePropertyPayloadCursor#readArrayFromBuffer() -> buffer.get() -> returns 9\r\n320: StorePropertyPayloadCursor -> if ( typeId == PropertyType.STRING.intValue() ) -> true....\r\n```\r\nSo I assume that either the property type is incorrectly read from the store, or when empty array is written to the store, it defaults(?) or incorrectly written as empty String array...\r\n\r\nWhile investigating writes, I've got down till ``org.neo4j.cypher.internal.ExecutionEngine`` and I was not able to dl source code for it.\r\n\r\n\r\n### BOLT\r\n**API:** neo4j-java-driver 1.1.0\r\n\r\nWhen using Driver (BOLT) the problem is the same, but the return type is different: *java.util.Collections$EmptyList*.\r\n\r\nI found that the type is being 'lost' in:\r\n```\r\n182: ExplicitTransaction#run -> value(statementParameters)\r\n232: Values#value -> value( entry.getValue() )\r\n// if property was of type long[]\r\n89: Values#value -> if ( value instanceof long[] ) { return value( (long[]) value ); } // creates ListValue with Value[]\r\n// if property was of type Long[]\r\n94: Values#value -> if ( value instanceof Object[] ) { return value( Arrays.asList( (Object[]) value )); } // creates List<Object> which is then iterated over and passed into ListValue as Value[] which is returned same as with primitives.\r\n```\r\n\r\nSo both driver (bolt) and database transforms empty arrays and looses the types. Is this then design decision?\r\n\r\n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/8580", "title": "\"ERROR Failed to generate JSON output\" in Neo4j 3.1 that kills Browser", "closed": "2018-12-10 09:31:08", "commitsDetails": [], "commits": {}, "ttf": 704.0002777777778, "created": "2017-01-04 19:26:28", "user": "dhimmel", "body": "See more details and the steps to reproduce at https://github.com/dhimmel/hetionet/issues/4#issue-198788442. Here is the error message:\r\n\r\n```\r\n2017-01-04 19:07:01.093+0000 ERROR Failed to generate JSON output.\r\norg.eclipse.jetty.io.EofException\r\n\tat org.eclipse.jetty.io.ChannelEndPoint.flush(ChannelEndPoint.java:192)\r\n\tat org.eclipse.jetty.io.WriteFlusher.flush(WriteFlusher.java:408)\r\n\tat org.eclipse.jetty.io.WriteFlusher.completeWrite(WriteFlusher.java:364)\r\n\tat org.eclipse.jetty.io.SelectChannelEndPoint.onSelected(SelectChannelEndPoint.java:111)\r\n\tat org.eclipse.jetty.io.SelectorManager$ManagedSelector.processKey(SelectorManager.java:636)\r\n\tat org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(SelectorManager.java:607)\r\n\tat org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(SelectorManager.java:545)\r\n\tat org.eclipse.jetty.util.thread.NonBlockingThread.run(NonBlockingThread.java:52)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\r\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.io.IOException: Connection reset by peer\r\n\tat sun.nio.ch.FileDispatcherImpl.write0(Native Method)\r\n\tat sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47)\r\n\tat sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)\r\n\tat sun.nio.ch.IOUtil.write(IOUtil.java:65)\r\n\tat sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)\r\n\tat org.eclipse.jetty.io.ChannelEndPoint.flush(ChannelEndPoint.java:170)\r\n\t... 10 more\r\n```"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/8555", "title": "Neo4j 3.1.0 CE installed with .dmg crashes shortly after being launched on Mac OS 10.10.5", "closed": "2018-05-23 12:37:13", "commitsDetails": [], "commits": {}, "ttf": 510.0002777777778, "created": "2016-12-28 20:53:47", "user": "fbiville", "body": "I just installed Neo4j 3.1.0 Community Edition with the standard Mac OS installer.\r\nThe install runs fine but the application keeps crashing 1 or 2 seconds after startup.\r\n\r\nHere is the Mac OS report about the crash:\r\n\r\n```\r\nProcess:               JavaApplicationStub [40462]\r\nPath:                  /Applications/Neo4j Community Edition 3.1.0.app/Contents/MacOS/JavaApplicationStub\r\nIdentifier:            com.install4j.8478-6373-2628-9929.24\r\nVersion:               3.1.0 (3.1.0)\r\nCode Type:             X86-64 (Native)\r\nParent Process:        ??? [1]\r\nResponsible:           JavaApplicationStub [40462]\r\nUser ID:               293669203\r\n\r\nDate/Time:             2016-12-28 21:50:07.342 +0100\r\nOS Version:            Mac OS X 10.10.5 (14F1912)\r\nReport Version:        11\r\nAnonymous UUID:        6918F4CA-F088-DACA-0433-4D927A7EE0B1\r\n\r\nSleep/Wake UUID:       A101A77C-C2BA-4034-AA3E-C14F9DDCBEBF\r\n\r\nTime Awake Since Boot: 55000 seconds\r\nTime Since Wake:       9200 seconds\r\n\r\nCrashed Thread:        0  AppKit Thread  Dispatch queue: com.apple.main-thread\r\n\r\nException Type:        EXC_BAD_ACCESS (SIGABRT)\r\nException Codes:       KERN_INVALID_ADDRESS at 0x0000000000303620\r\n\r\nVM Regions Near 0x303620:\r\n--> \r\n    __TEXT                 0000000100000000-000000010000a000 [   40K] r-x/rwx SM=COW  /Applications/Neo4j Community Edition 3.1.0.app/Contents/MacOS/JavaApplicationStub\r\n\r\nApplication Specific Information:\r\nabort() called\r\n\r\nThread 0 Crashed:: AppKit Thread  Dispatch queue: com.apple.main-thread\r\n0   libsystem_kernel.dylib        \t0x00007fff89422286 __pthread_kill + 10\r\n1   libsystem_c.dylib             \t0x00007fff969ce9a3 abort + 129\r\n2   libjvm.dylib                  \t0x0000000104454beb os::abort(bool) + 25\r\n3   libjvm.dylib                  \t0x0000000104578a2a VMError::report_and_die() + 2304\r\n4   libjvm.dylib                  \t0x0000000104456816 JVM_handle_bsd_signal + 1131\r\n5   libjvm.dylib                  \t0x0000000104452a7b signalHandler(int, __siginfo*, void*) + 47\r\n6   libsystem_platform.dylib      \t0x00007fff92a65f1a _sigtramp + 26\r\n7   libsystem_c.dylib             \t0x00007fff96971f72 strlen + 18\r\n8   com.apple.CoreFoundation      \t0x00007fff958daa3c __CFStringAppendFormatCore + 8524\r\n9   com.apple.CoreFoundation      \t0x00007fff959d03a0 _CFStringCreateWithFormatAndArgumentsAux2 + 256\r\n10  com.apple.Foundation          \t0x00007fff89aa4701 -[NSPlaceholderString initWithFormat:locale:arguments:] + 153\r\n11  com.apple.Foundation          \t0x00007fff89abdef9 +[NSString stringWithFormat:] + 174\r\n12  com.apple.java.JavaRuntimeSupport\t0x000000011b049fce -[JRSInputMethodController availableInputMethodLocales] + 253\r\n13  libawt_lwawt.dylib            \t0x000000011bfe007f __Java_sun_lwawt_macosx_CInputMethodDescriptor_nativeGetAvailableLocales_block_invoke_1 + 124\r\n14  com.apple.Foundation          \t0x00007fff89b2cdd0 __NSThreadPerformPerform + 293\r\n15  com.apple.CoreFoundation      \t0x00007fff9591ca01 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n16  com.apple.CoreFoundation      \t0x00007fff9590eb8d __CFRunLoopDoSources0 + 269\r\n17  com.apple.CoreFoundation      \t0x00007fff9590e1bf __CFRunLoopRun + 927\r\n18  com.apple.CoreFoundation      \t0x00007fff9590dbd8 CFRunLoopRunSpecific + 296\r\n19  com.apple.HIToolbox           \t0x00007fff8de5056f RunCurrentEventLoopInMode + 235\r\n20  com.apple.HIToolbox           \t0x00007fff8de502ea ReceiveNextEventCommon + 431\r\n21  com.apple.HIToolbox           \t0x00007fff8de5012b _BlockUntilNextEventMatchingListInModeWithFilter + 71\r\n22  com.apple.AppKit              \t0x00007fff8ee3c8ab _DPSNextEvent + 978\r\n23  com.apple.AppKit              \t0x00007fff8ee3be58 -[NSApplication nextEventMatchingMask:untilDate:inMode:dequeue:] + 346\r\n24  libosxapp.dylib               \t0x000000011bd313aa -[NSApplicationAWT nextEventMatchingMask:untilDate:inMode:dequeue:] + 124\r\n25  com.apple.AppKit              \t0x00007fff8ee31af3 -[NSApplication run] + 594\r\n26  libosxapp.dylib               \t0x000000011bd3114d +[NSApplicationAWT runAWTLoopWithApp:] + 156\r\n27  libawt_lwawt.dylib            \t0x000000011c006517 -[AWTStarter starter:] + 905\r\n28  com.apple.Foundation          \t0x00007fff89b2cdd0 __NSThreadPerformPerform + 293\r\n29  com.apple.CoreFoundation      \t0x00007fff9591ca01 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 17\r\n30  com.apple.CoreFoundation      \t0x00007fff9590eb8d __CFRunLoopDoSources0 + 269\r\n31  com.apple.CoreFoundation      \t0x00007fff9590e1bf __CFRunLoopRun + 927\r\n32  com.apple.CoreFoundation      \t0x00007fff9590dbd8 CFRunLoopRunSpecific + 296\r\n33  com.oracle.java.8u60.jdk      \t0x00000001000f28fb CreateExecutionEnvironment + 871\r\n34  com.oracle.java.8u60.jdk      \t0x00000001000ee644 JLI_Launch + 1952\r\n35  com.install4j.8478-6373-2628-9929.24\t0x0000000100006cf4 -[Launcher launch] + 836\r\n36  com.install4j.8478-6373-2628-9929.24\t0x0000000100007381 launcher_main + 625\r\n37  com.install4j.8478-6373-2628-9929.24\t0x00000001000074f2 main + 34\r\n38  com.install4j.8478-6373-2628-9929.24\t0x0000000100001154 start + 52\r\n\r\nThread 1:: Dispatch queue: com.apple.libdispatch-manager\r\n0   libsystem_kernel.dylib        \t0x00007fff89423232 kevent64 + 10\r\n1   libdispatch.dylib             \t0x00007fff96ff226e _dispatch_mgr_thread + 52\r\n\r\nThread 2:\r\n0   libsystem_kernel.dylib        \t0x00007fff8942294a __workq_kernreturn + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff8e7713dd start_wqthread + 13\r\n\r\nThread 3:\r\n0   libsystem_kernel.dylib        \t0x00007fff8942294a __workq_kernreturn + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff8e7713dd start_wqthread + 13\r\n\r\nThread 4:\r\n0   libsystem_kernel.dylib        \t0x00007fff8942294a __workq_kernreturn + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff8e7713dd start_wqthread + 13\r\n\r\nThread 5:\r\n0   libsystem_kernel.dylib        \t0x00007fff8942294a __workq_kernreturn + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff8e7713dd start_wqthread + 13\r\n\r\nThread 6:\r\n0   libsystem_kernel.dylib        \t0x00007fff8942248a __semwait_signal + 10\r\n1   com.oracle.java.8u60.jdk      \t0x00000001000f1eb8 ContinueInNewThread0 + 102\r\n2   com.oracle.java.8u60.jdk      \t0x00000001000ef40b ContinueInNewThread + 201\r\n3   com.oracle.java.8u60.jdk      \t0x00000001000f1c8d JVMInit + 315\r\n4   com.oracle.java.8u60.jdk      \t0x00000001000ef189 JLI_Launch + 4837\r\n5   com.install4j.8478-6373-2628-9929.24\t0x00000001000071e9 launcher_main + 217\r\n6   com.install4j.8478-6373-2628-9929.24\t0x00000001000074f2 main + 34\r\n7   com.oracle.java.8u60.jdk      \t0x00000001000f258d apple_main + 92\r\n8   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n10  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 7:\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x000000010442e47e ParkCommon(ParkEvent*, long) + 42\r\n3   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n4   libjvm.dylib                  \t0x000000010442ef3c Monitor::wait(bool, long, bool) + 246\r\n5   libjvm.dylib                  \t0x0000000104533172 Threads::destroy_vm() + 80\r\n6   libjvm.dylib                  \t0x00000001042f2d75 jni_DestroyJavaVM + 254\r\n7   com.oracle.java.8u60.jdk      \t0x00000001000ef74a JavaMain + 805\r\n8   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n10  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 8:\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x000000010442e47e ParkCommon(ParkEvent*, long) + 42\r\n3   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n4   libjvm.dylib                  \t0x000000010442efbd Monitor::wait(bool, long, bool) + 375\r\n5   libjvm.dylib                  \t0x00000001042452e6 GCTaskManager::get_task(unsigned int) + 56\r\n6   libjvm.dylib                  \t0x00000001042463b3 GCTaskThread::run() + 349\r\n7   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n8   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n10  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 9:\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x000000010442e47e ParkCommon(ParkEvent*, long) + 42\r\n3   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n4   libjvm.dylib                  \t0x000000010442efbd Monitor::wait(bool, long, bool) + 375\r\n5   libjvm.dylib                  \t0x00000001042452e6 GCTaskManager::get_task(unsigned int) + 56\r\n6   libjvm.dylib                  \t0x00000001042463b3 GCTaskThread::run() + 349\r\n7   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n8   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n10  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 10:\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x000000010442e47e ParkCommon(ParkEvent*, long) + 42\r\n3   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n4   libjvm.dylib                  \t0x000000010442efbd Monitor::wait(bool, long, bool) + 375\r\n5   libjvm.dylib                  \t0x00000001042452e6 GCTaskManager::get_task(unsigned int) + 56\r\n6   libjvm.dylib                  \t0x00000001042463b3 GCTaskThread::run() + 349\r\n7   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n8   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n10  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 11:\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x000000010442e47e ParkCommon(ParkEvent*, long) + 42\r\n3   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n4   libjvm.dylib                  \t0x000000010442efbd Monitor::wait(bool, long, bool) + 375\r\n5   libjvm.dylib                  \t0x00000001042452e6 GCTaskManager::get_task(unsigned int) + 56\r\n6   libjvm.dylib                  \t0x00000001042463b3 GCTaskThread::run() + 349\r\n7   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n8   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n9   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n10  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 12:\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044520c0 os::PlatformEvent::park(long) + 404\r\n2   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n3   libjvm.dylib                  \t0x000000010442efbd Monitor::wait(bool, long, bool) + 375\r\n4   libjvm.dylib                  \t0x000000010457e958 VMThread::loop() + 444\r\n5   libjvm.dylib                  \t0x000000010457e3e3 VMThread::run() + 121\r\n6   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n7   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n8   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n9   libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 13:: Java: Reference Handler\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x0000000104448d62 ObjectMonitor::wait(long, bool, Thread*) + 748\r\n3   libjvm.dylib                  \t0x0000000104500dd0 ObjectSynchronizer::wait(Handle, long, Thread*) + 202\r\n4   libjvm.dylib                  \t0x000000010431e333 JVM_MonitorWait + 156\r\n5   ???                           \t0x0000000105073954 0 + 4379326804\r\n6   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n7   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n8   ???                           \t0x000000010505e7a7 0 + 4379240359\r\n9   libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n10  libjvm.dylib                  \t0x00000001042bd29c JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*) + 356\r\n11  libjvm.dylib                  \t0x00000001042bd448 JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*) + 74\r\n12  libjvm.dylib                  \t0x0000000104317965 thread_entry(JavaThread*, Thread*) + 124\r\n13  libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n14  libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n15  libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n16  libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n17  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n18  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 14:: Java: Finalizer\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x0000000104448d62 ObjectMonitor::wait(long, bool, Thread*) + 748\r\n3   libjvm.dylib                  \t0x0000000104500dd0 ObjectSynchronizer::wait(Handle, long, Thread*) + 202\r\n4   libjvm.dylib                  \t0x000000010431e333 JVM_MonitorWait + 156\r\n5   ???                           \t0x0000000105073954 0 + 4379326804\r\n6   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n7   ???                           \t0x00000001050659d0 0 + 4379269584\r\n8   ???                           \t0x00000001050659d0 0 + 4379269584\r\n9   ???                           \t0x000000010505e7a7 0 + 4379240359\r\n10  libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n11  libjvm.dylib                  \t0x00000001042bd29c JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*) + 356\r\n12  libjvm.dylib                  \t0x00000001042bd448 JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*) + 74\r\n13  libjvm.dylib                  \t0x0000000104317965 thread_entry(JavaThread*, Thread*) + 124\r\n14  libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n15  libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n16  libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n17  libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n18  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n19  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 15:: Java: Signal Dispatcher\r\n0   libsystem_kernel.dylib        \t0x00007fff8941d51a semaphore_wait_trap + 10\r\n1   libjvm.dylib                  \t0x0000000104453728 check_pending_signals(bool) + 128\r\n2   libjvm.dylib                  \t0x000000010445026f signal_thread_entry(JavaThread*, Thread*) + 57\r\n3   libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n4   libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n5   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n6   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n7   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n8   libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 16:: Java: C2 CompilerThread0\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044520c0 os::PlatformEvent::park(long) + 404\r\n2   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n3   libjvm.dylib                  \t0x000000010442ef24 Monitor::wait(bool, long, bool) + 222\r\n4   libjvm.dylib                  \t0x00000001041897f2 CompileQueue::get() + 122\r\n5   libjvm.dylib                  \t0x0000000104189a14 CompileBroker::compiler_thread_loop() + 376\r\n6   libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n7   libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n8   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n9   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n10  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n11  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 17:: Java: C2 CompilerThread1\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044520c0 os::PlatformEvent::park(long) + 404\r\n2   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n3   libjvm.dylib                  \t0x000000010442ef24 Monitor::wait(bool, long, bool) + 222\r\n4   libjvm.dylib                  \t0x00000001041897f2 CompileQueue::get() + 122\r\n5   libjvm.dylib                  \t0x0000000104189a14 CompileBroker::compiler_thread_loop() + 376\r\n6   libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n7   libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n8   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n9   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n10  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n11  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 18:: Java: C1 CompilerThread2\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044520c0 os::PlatformEvent::park(long) + 404\r\n2   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n3   libjvm.dylib                  \t0x000000010442ef24 Monitor::wait(bool, long, bool) + 222\r\n4   libjvm.dylib                  \t0x00000001041897f2 CompileQueue::get() + 122\r\n5   libjvm.dylib                  \t0x0000000104189a14 CompileBroker::compiler_thread_loop() + 376\r\n6   libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n7   libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n8   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n9   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n10  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n11  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 19:: Java: Service Thread\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x000000010442e47e ParkCommon(ParkEvent*, long) + 42\r\n3   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n4   libjvm.dylib                  \t0x000000010442efbd Monitor::wait(bool, long, bool) + 375\r\n5   libjvm.dylib                  \t0x00000001044ac8ba ServiceThread::service_thread_entry(JavaThread*, Thread*) + 132\r\n6   libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n7   libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n8   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n9   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n10  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n11  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 20:\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044520c0 os::PlatformEvent::park(long) + 404\r\n2   libjvm.dylib                  \t0x000000010442ed54 Monitor::IWait(Thread*, long) + 168\r\n3   libjvm.dylib                  \t0x000000010442efbd Monitor::wait(bool, long, bool) + 375\r\n4   libjvm.dylib                  \t0x00000001045337b0 WatcherThread::sleep() const + 126\r\n5   libjvm.dylib                  \t0x0000000104534643 WatcherThread::run() + 243\r\n6   libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n7   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n8   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n9   libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 21:: Java: Timer-0\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044520c0 os::PlatformEvent::park(long) + 404\r\n2   libjvm.dylib                  \t0x0000000104448d73 ObjectMonitor::wait(long, bool, Thread*) + 765\r\n3   libjvm.dylib                  \t0x0000000104500dd0 ObjectSynchronizer::wait(Handle, long, Thread*) + 202\r\n4   libjvm.dylib                  \t0x000000010431e333 JVM_MonitorWait + 156\r\n5   ???                           \t0x0000000105073954 0 + 4379326804\r\n6   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n7   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n8   ???                           \t0x000000010505e7a7 0 + 4379240359\r\n9   libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n10  libjvm.dylib                  \t0x00000001042bd29c JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*) + 356\r\n11  libjvm.dylib                  \t0x00000001042bd448 JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*) + 74\r\n12  libjvm.dylib                  \t0x0000000104317965 thread_entry(JavaThread*, Thread*) + 124\r\n13  libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n14  libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n15  libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n16  libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n17  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n18  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 22:: Java: AWT-Shutdown\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x0000000104448d62 ObjectMonitor::wait(long, bool, Thread*) + 748\r\n3   libjvm.dylib                  \t0x0000000104500dd0 ObjectSynchronizer::wait(Handle, long, Thread*) + 202\r\n4   libjvm.dylib                  \t0x000000010431e333 JVM_MonitorWait + 156\r\n5   ???                           \t0x0000000105073954 0 + 4379326804\r\n6   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n7   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n8   ???                           \t0x0000000105065c92 0 + 4379270290\r\n9   ???                           \t0x000000010505e7a7 0 + 4379240359\r\n10  libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n11  libjvm.dylib                  \t0x00000001042bd29c JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*) + 356\r\n12  libjvm.dylib                  \t0x00000001042bd448 JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*) + 74\r\n13  libjvm.dylib                  \t0x0000000104317965 thread_entry(JavaThread*, Thread*) + 124\r\n14  libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n15  libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n16  libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n17  libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n18  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n19  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 23:\r\n0   libsystem_kernel.dylib        \t0x00007fff8942294a __workq_kernreturn + 10\r\n1   libsystem_pthread.dylib       \t0x00007fff8e7713dd start_wqthread + 13\r\n\r\nThread 24:\r\n0   libsystem_kernel.dylib        \t0x00007fff8941d4de mach_msg_trap + 10\r\n1   libsystem_kernel.dylib        \t0x00007fff8941c64f mach_msg + 55\r\n2   com.apple.CoreFoundation      \t0x00007fff9590eeb4 __CFRunLoopServiceMachPort + 212\r\n3   com.apple.CoreFoundation      \t0x00007fff9590e37b __CFRunLoopRun + 1371\r\n4   com.apple.CoreFoundation      \t0x00007fff9590dbd8 CFRunLoopRunSpecific + 296\r\n5   com.apple.AppKit              \t0x00007fff8ef0456b _NSEventThread + 137\r\n6   libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n7   libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n8   libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 25:: Java: process reaper\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x0000000104451e9e Parker::park(bool, long) + 512\r\n2   libjvm.dylib                  \t0x00000001045494ea Unsafe_Park + 126\r\n3   ???                           \t0x0000000105073954 0 + 4379326804\r\n4   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n5   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n6   ???                           \t0x00000001050659d0 0 + 4379269584\r\n7   ???                           \t0x00000001050659d0 0 + 4379269584\r\n8   ???                           \t0x0000000105065aa4 0 + 4379269796\r\n9   ???                           \t0x00000001050659d0 0 + 4379269584\r\n10  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n11  ???                           \t0x0000000105065c92 0 + 4379270290\r\n12  ???                           \t0x000000010505e7a7 0 + 4379240359\r\n13  libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n14  libjvm.dylib                  \t0x00000001042bd29c JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*) + 356\r\n15  libjvm.dylib                  \t0x00000001042bd448 JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*) + 74\r\n16  libjvm.dylib                  \t0x0000000104317965 thread_entry(JavaThread*, Thread*) + 124\r\n17  libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n18  libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n19  libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n20  libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n21  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n22  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 26:: Java: Java2D Queue Flusher\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044520c0 os::PlatformEvent::park(long) + 404\r\n2   libjvm.dylib                  \t0x0000000104448d73 ObjectMonitor::wait(long, bool, Thread*) + 765\r\n3   libjvm.dylib                  \t0x0000000104500dd0 ObjectSynchronizer::wait(Handle, long, Thread*) + 202\r\n4   libjvm.dylib                  \t0x000000010431e333 JVM_MonitorWait + 156\r\n5   ???                           \t0x0000000105073954 0 + 4379326804\r\n6   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n7   ???                           \t0x000000010505e7a7 0 + 4379240359\r\n8   libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n9   libjvm.dylib                  \t0x00000001042bd29c JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*) + 356\r\n10  libjvm.dylib                  \t0x00000001042bd448 JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*) + 74\r\n11  libjvm.dylib                  \t0x0000000104317965 thread_entry(JavaThread*, Thread*) + 124\r\n12  libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n13  libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n14  libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n15  libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n16  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n17  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 27:: Java: Java2D Disposer\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   libjvm.dylib                  \t0x00000001044511d6 os::PlatformEvent::park() + 192\r\n2   libjvm.dylib                  \t0x0000000104448d62 ObjectMonitor::wait(long, bool, Thread*) + 748\r\n3   libjvm.dylib                  \t0x0000000104500dd0 ObjectSynchronizer::wait(Handle, long, Thread*) + 202\r\n4   libjvm.dylib                  \t0x000000010431e333 JVM_MonitorWait + 156\r\n5   ???                           \t0x0000000105073954 0 + 4379326804\r\n6   ???                           \t0x0000000105065c4d 0 + 4379270221\r\n7   ???                           \t0x00000001050659d0 0 + 4379269584\r\n8   ???                           \t0x00000001050659d0 0 + 4379269584\r\n9   ???                           \t0x0000000105065c92 0 + 4379270290\r\n10  ???                           \t0x000000010505e7a7 0 + 4379240359\r\n11  libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n12  libjvm.dylib                  \t0x00000001042bd29c JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*) + 356\r\n13  libjvm.dylib                  \t0x00000001042bd448 JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*) + 74\r\n14  libjvm.dylib                  \t0x0000000104317965 thread_entry(JavaThread*, Thread*) + 124\r\n15  libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n16  libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n17  libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n18  libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n19  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n20  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 28:: Java: AWT-EventQueue-0\r\n0   libsystem_kernel.dylib        \t0x00007fff89422136 __psynch_cvwait + 10\r\n1   com.apple.Foundation          \t0x00007fff89ad8fd8 -[NSCondition wait] + 237\r\n2   com.apple.Foundation          \t0x00007fff89ac9e6e -[NSObject(NSThreadPerformAdditions) performSelector:onThread:withObject:waitUntilDone:modes:] + 823\r\n3   com.apple.Foundation          \t0x00007fff89b4d2fe -[NSObject(NSThreadPerformAdditions) performSelectorOnMainThread:withObject:waitUntilDone:modes:] + 87\r\n4   libawt_lwawt.dylib            \t0x000000011bfe09b9 Java_sun_lwawt_macosx_CInputMethodDescriptor_nativeGetAvailableLocales + 253\r\n5   ???                           \t0x0000000105073954 0 + 4379326804\r\n6   ???                           \t0x00000001050659d0 0 + 4379269584\r\n7   ???                           \t0x00000001050659d0 0 + 4379269584\r\n8   ???                           \t0x0000000105065aa4 0 + 4379269796\r\n9   ???                           \t0x0000000105065420 0 + 4379268128\r\n10  ???                           \t0x00000001050659d0 0 + 4379269584\r\n11  ???                           \t0x0000000105065420 0 + 4379268128\r\n12  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n13  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n14  ???                           \t0x00000001050659d0 0 + 4379269584\r\n15  ???                           \t0x00000001050659d0 0 + 4379269584\r\n16  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n17  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n18  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n19  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n20  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n21  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n22  ???                           \t0x00000001050659d0 0 + 4379269584\r\n23  ???                           \t0x000000010505e7a7 0 + 4379240359\r\n24  libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n25  libjvm.dylib                  \t0x000000010431cfd8 JVM_DoPrivileged + 1208\r\n26  ???                           \t0x0000000105073954 0 + 4379326804\r\n27  ???                           \t0x00000001050659d0 0 + 4379269584\r\n28  ???                           \t0x00000001050659d0 0 + 4379269584\r\n29  ???                           \t0x0000000105065aa4 0 + 4379269796\r\n30  ???                           \t0x00000001050659d0 0 + 4379269584\r\n31  ???                           \t0x000000010505e7a7 0 + 4379240359\r\n32  libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n33  libjvm.dylib                  \t0x000000010431cfd8 JVM_DoPrivileged + 1208\r\n34  ???                           \t0x0000000105073954 0 + 4379326804\r\n35  ???                           \t0x00000001050659d0 0 + 4379269584\r\n36  ???                           \t0x0000000105065aa4 0 + 4379269796\r\n37  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n38  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n39  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n40  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n41  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n42  ???                           \t0x0000000105065c4d 0 + 4379270221\r\n43  ???                           \t0x000000010505e7a7 0 + 4379240359\r\n44  libjvm.dylib                  \t0x00000001042bcb0e JavaCalls::call_helper(JavaValue*, methodHandle*, JavaCallArguments*, Thread*) + 1710\r\n45  libjvm.dylib                  \t0x00000001042bd29c JavaCalls::call_virtual(JavaValue*, KlassHandle, Symbol*, Symbol*, JavaCallArguments*, Thread*) + 356\r\n46  libjvm.dylib                  \t0x00000001042bd448 JavaCalls::call_virtual(JavaValue*, Handle, KlassHandle, Symbol*, Symbol*, Thread*) + 74\r\n47  libjvm.dylib                  \t0x0000000104317965 thread_entry(JavaThread*, Thread*) + 124\r\n48  libjvm.dylib                  \t0x00000001045332d3 JavaThread::thread_main_inner() + 155\r\n49  libjvm.dylib                  \t0x00000001045349ce JavaThread::run() + 450\r\n50  libjvm.dylib                  \t0x000000010445543a java_start(Thread*) + 246\r\n51  libsystem_pthread.dylib       \t0x00007fff8e77405a _pthread_body + 131\r\n52  libsystem_pthread.dylib       \t0x00007fff8e773fd7 _pthread_start + 176\r\n53  libsystem_pthread.dylib       \t0x00007fff8e7713ed thread_start + 13\r\n\r\nThread 0 crashed with X86 Thread State (64-bit):\r\n  rax: 0x0000000000000000  rbx: 0x0000000000000006  rcx: 0x00007fff5fbf9bf8  rdx: 0x0000000000000000\r\n  rdi: 0x000000000000130f  rsi: 0x0000000000000006  rbp: 0x00007fff5fbf9c20  rsp: 0x00007fff5fbf9bf8\r\n   r8: 0x00007fff5fbf9bd0   r9: 0x00007fff792ec300  r10: 0x0000000008000000  r11: 0x0000000000000206\r\n  r12: 0x00000001048cd140  r13: 0x0000000000303625  r14: 0x00007fff792ec300  r15: 0x000000010445a246\r\n  rip: 0x00007fff89422286  rfl: 0x0000000000000206  cr2: 0x00007fff7a6f9fd8\r\n  \r\nLogical CPU:     0\r\nError Code:      0x02000148\r\nTrap Number:     133\r\n\r\n\r\nBinary Images:\r\n       0x100000000 -        0x100009fff +com.install4j.8478-6373-2628-9929.24 (3.1.0 - 3.1.0) <57D1FD76-316C-303E-9B11-CA09DBF7BA83> /Applications/Neo4j Community Edition 3.1.0.app/Contents/MacOS/JavaApplicationStub\r\n       0x1000ed000 -        0x1000f7fff +com.oracle.java.8u60.jdk (1.0 - 1.8.0_60) <842B8566-51A8-3842-9307-96BEC9966B8C> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/MacOS/libjli.dylib\r\n       0x100589000 -        0x100591fff +libverify.dylib (1) <8CF3F700-930A-3FF1-9EE2-37FD23BCE1B1> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libverify.dylib\r\n       0x100597000 -        0x1005bbfef +libjava.dylib (1) <D5D75A2E-64FA-35C4-8510-0AB9A769BA89> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libjava.dylib\r\n       0x1005d4000 -        0x1005d9fff +libzip.dylib (1) <DD6146B9-FFC7-3EAE-A423-48D9945DE9D7> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libzip.dylib\r\n       0x1007f3000 -        0x1007f7fff  com.apple.JavaVM (14.9.9 - 14.9.9) <ABED1FD5-07A6-3F49-9B05-03338E4A99D3> /System/Library/Frameworks/JavaVM.framework/Versions/A/JavaVM\r\n       0x103fd2000 -        0x1047d1fff +libjvm.dylib (1) <A1730E25-76BF-3E91-A3AF-E48EBA5F50D3> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/server/libjvm.dylib\r\n       0x11b045000 -        0x11b04cff7  com.apple.java.JavaRuntimeSupport (15.0.0 - 15.0.0) <8F4FDA89-F9EB-314B-A500-C7ED95B2E813> /System/Library/Frameworks/JavaVM.framework/Frameworks/JavaRuntimeSupport.framework/JavaRuntimeSupport\r\n       0x11b05b000 -        0x11b063ff7  JavaNativeFoundation (73) <B6EFB518-A594-3568-B761-CF93C994ECDC> /System/Library/Frameworks/JavaVM.framework/Versions/A/Frameworks/JavaNativeFoundation.framework/Versions/A/JavaNativeFoundation\r\n       0x11b06f000 -        0x11b073fff  JavaLaunching (40) <D84EA87F-67C6-356F-8851-985238B6E8BF> /System/Library/PrivateFrameworks/JavaLaunching.framework/Versions/A/JavaLaunching\r\n       0x11b6a8000 -        0x11b6acfff +libmanagement.dylib (1) <E19DCDF0-305F-30AF-96D4-C024CA257BC7> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libmanagement.dylib\r\n       0x11bd21000 -        0x11bd28ff7 +libosx.dylib (1) <7819AE21-CBD5-380E-9229-B17E91B47FD5> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libosx.dylib\r\n       0x11bd2f000 -        0x11bd35fff +libosxapp.dylib (1) <915C0924-3D8D-3838-BC54-C581FB1083A0> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libosxapp.dylib\r\n       0x11be4e000 -        0x11beb7fff +libawt.dylib (1) <A39C83DB-B878-37E4-9A0A-6397A7E4C703> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libawt.dylib\r\n       0x11bef6000 -        0x11bfbbfff +libmlib_image.dylib (1) <BCF2882F-8E43-3B22-A88C-C3CA57C4EE83> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libmlib_image.dylib\r\n       0x11bfc2000 -        0x11c032fff +libawt_lwawt.dylib (1) <35410A7F-CD53-3379-B0FD-4200144AD8CD> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libawt_lwawt.dylib\r\n       0x11f0c6000 -        0x11f0c6fef +cl_kernels (???) <AFA60C9C-19BC-4862-BF15-DD6ABA81BFA2> cl_kernels\r\n       0x11f0d4000 -        0x11f0d4ff5 +cl_kernels (???) <1F5DB610-4ECE-4826-B77D-ABA2D69AAB9E> cl_kernels\r\n       0x11f0d6000 -        0x11f1bcfef  unorm8_bgra.dylib (2.4.5) <9980365E-FADF-36CB-97CC-2530BB70BA8A> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib\r\n       0x12063c000 -        0x12067fff7 +libfontmanager.dylib (1) <36DDC8B0-CCDD-3A72-8EAD-6371D3534827> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libfontmanager.dylib\r\n       0x1206c9000 -        0x1206cdfff +libosxui.dylib (1) <C1D64111-AA7E-3342-A0F5-46D9916E7878> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libosxui.dylib\r\n       0x121800000 -        0x121d0afff  com.apple.driver.AppleIntelBDWGraphicsGLDriver (10.6.33 - 10.0.6) <66642235-A49D-33E2-B635-02DCB9B696DA> /System/Library/Extensions/AppleIntelBDWGraphicsGLDriver.bundle/Contents/MacOS/AppleIntelBDWGraphicsGLDriver\r\n       0x1227e6000 -        0x1227eefff +libnio.dylib (1) <D8AEF517-51A5-3824-8ACE-35E6AED9B035> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libnio.dylib\r\n       0x123880000 -        0x12388ffff +libnet.dylib (1) <4EB59609-58FC-3FEB-8ACC-97EA523E1FC6> /Applications/Neo4j Community Edition 3.1.0.app/Contents/Resources/jre.bundle/Contents/Home/jre/lib/libnet.dylib\r\n    0x7fff6f6c4000 -     0x7fff6f6fa92f  dyld (353.2.4) <708E385E-50C6-32A3-983C-42E97BEE4346> /usr/lib/dyld\r\n    0x7fff88417000 -     0x7fff88431ff3  com.apple.Ubiquity (1.3 - 313) <DF56A657-CC6E-3BE2-86A0-71F07127724C> /System/Library/PrivateFrameworks/Ubiquity.framework/Versions/A/Ubiquity\r\n    0x7fff88484000 -     0x7fff884f0fff  com.apple.framework.CoreWLAN (5.0 - 500.35.2) <03697149-1CDD-32FF-B564-1C1EF5E9E5C3> /System/Library/Frameworks/CoreWLAN.framework/Versions/A/CoreWLAN\r\n    0x7fff88533000 -     0x7fff8853eff7  com.apple.CrashReporterSupport (10.10 - 631) <C44259AC-0A1C-3EC5-99AC-48CB520A709D> /System/Library/PrivateFrameworks/CrashReporterSupport.framework/Versions/A/CrashReporterSupport\r\n    0x7fff88672000 -     0x7fff88672ff7  liblaunch.dylib (559.40.1) <4F81CA3A-D2CE-3030-A89D-42F3DAD7BA8F> /usr/lib/system/liblaunch.dylib\r\n    0x7fff88673000 -     0x7fff88942ff3  com.apple.CoreImage (10.3.5) <0224F5A6-636A-374B-B46C-13E066596725> /System/Library/Frameworks/QuartzCore.framework/Versions/A/Frameworks/CoreImage.framework/Versions/A/CoreImage\r\n    0x7fff88943000 -     0x7fff88a37ff7  libFontParser.dylib (134.10) <6CF434A2-91CA-3477-BDE2-124508EDA05D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontParser.dylib\r\n    0x7fff88a38000 -     0x7fff88a89fff  com.apple.audio.CoreAudio (4.3.0 - 4.3.0) <8E6AE326-9F3E-3182-BD9E-FDF561211E2E> /System/Library/Frameworks/CoreAudio.framework/Versions/A/CoreAudio\r\n    0x7fff88a8d000 -     0x7fff88ac4ffb  com.apple.LDAPFramework (2.4.28 - 194.5) <CAFB9695-000F-34EA-8DF5-09996929C26A> /System/Library/Frameworks/LDAP.framework/Versions/A/LDAP\r\n    0x7fff88ac5000 -     0x7fff88df8ff7  libmecabra.dylib (666.7) <0ED8AE5E-7A5B-34A6-A2EE-2B852E60E1E2> /usr/lib/libmecabra.dylib\r\n    0x7fff88df9000 -     0x7fff890fbffb  com.apple.GeoServices (1.0 - 1077.0.18) <2BBF8B44-DD46-3432-8C84-6D6AA004C233> /System/Library/PrivateFrameworks/GeoServices.framework/Versions/A/GeoServices\r\n    0x7fff890fc000 -     0x7fff89100fff  libpam.2.dylib (20) <E805398D-9A92-31F8-8005-8DC188BD8B6E> /usr/lib/libpam.2.dylib\r\n    0x7fff8910e000 -     0x7fff89116ff3  com.apple.CoreServices.FSEvents (1210.20.1 - 1210.20.1) <84F79D3E-7B5E-3C93-8479-35794A3F125E> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/FSEvents.framework/Versions/A/FSEvents\r\n    0x7fff89117000 -     0x7fff8911bfff  com.apple.TCC (1.0 - 1) <CCA42EE2-3400-3444-9486-BC454E60D944> /System/Library/PrivateFrameworks/TCC.framework/Versions/A/TCC\r\n    0x7fff893e0000 -     0x7fff8940bffb  libarchive.2.dylib (30.50.1) <C140763F-5470-3302-B3E0-651B4B5930ED> /usr/lib/libarchive.2.dylib\r\n    0x7fff8940c000 -     0x7fff89429fff  libsystem_kernel.dylib (2782.50.6) <B12EAF58-6BFD-37DB-9763-EC7F3F8B71A6> /usr/lib/system/libsystem_kernel.dylib\r\n    0x7fff8942a000 -     0x7fff89464ffb  com.apple.DebugSymbols (115 - 115) <6F03761D-7C3A-3C80-8031-AA1C1AD7C706> /System/Library/PrivateFrameworks/DebugSymbols.framework/Versions/A/DebugSymbols\r\n    0x7fff89465000 -     0x7fff89481ff7  libsystem_malloc.dylib (53.30.1) <DDA8928B-CC0D-3255-BD8A-3FEA0982B890> /usr/lib/system/libsystem_malloc.dylib\r\n    0x7fff8953f000 -     0x7fff89569fff  GLRendererFloat (11.1.6) <EB135987-0B93-393F-9139-CAB7F6FEBB12> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLRendererFloat.bundle/GLRendererFloat\r\n    0x7fff895ec000 -     0x7fff895f4fe7  libcldcpuengine.dylib (2.4.5) <CC1C07D1-21E0-36FA-87DA-351B7A8B17F9> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/libcldcpuengine.dylib\r\n    0x7fff895f5000 -     0x7fff895f7fff  libsystem_sandbox.dylib (358.20.5) <3F5E973F-C702-31AC-97BC-05F5C195683C> /usr/lib/system/libsystem_sandbox.dylib\r\n    0x7fff895f8000 -     0x7fff89681ff7  com.apple.CoreSymbolication (3.1 - 57020.2) <FDAF88F6-7D11-37BC-B758-4B835FA657BA> /System/Library/PrivateFrameworks/CoreSymbolication.framework/Versions/A/CoreSymbolication\r\n    0x7fff89682000 -     0x7fff8968ffff  libxar.1.dylib (255) <7CD69BB5-97BA-3858-8A8B-2F33F129E6E7> /usr/lib/libxar.1.dylib\r\n    0x7fff896fb000 -     0x7fff89a16fcf  com.apple.vImage (8.0 - 8.0) <1183FE6A-FDB6-3B3B-928D-50C7909F2308> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vImage.framework/Versions/A/vImage\r\n    0x7fff89a9a000 -     0x7fff89dcbfff  com.apple.Foundation (6.9 - 1154) <49EE64E1-9F53-35D1-A481-2EFE2789B254> /System/Library/Frameworks/Foundation.framework/Versions/C/Foundation\r\n    0x7fff8a72c000 -     0x7fff8a749ffb  libresolv.9.dylib (57) <26B38E61-298A-3C3A-82C1-3B5E98AD5E29> /usr/lib/libresolv.9.dylib\r\n    0x7fff8a75b000 -     0x7fff8a7fae27  com.apple.AppleJPEG (1.0 - 1) <6627DDD9-A8FE-3968-B23A-B6A29AA3919A> /System/Library/PrivateFrameworks/AppleJPEG.framework/Versions/A/AppleJPEG\r\n    0x7fff8a7fb000 -     0x7fff8a7fbfff  com.apple.Cocoa (6.8 - 21) <EAC0EA1E-3C62-3B28-A941-5D8B1E085FF8> /System/Library/Frameworks/Cocoa.framework/Versions/A/Cocoa\r\n    0x7fff8a7fc000 -     0x7fff8a89efff  com.apple.Bluetooth (4.3.6 - 4.3.6f3) <16970DB9-B0F4-3987-B751-C8702110E950> /System/Library/Frameworks/IOBluetooth.framework/Versions/A/IOBluetooth\r\n    0x7fff8a8c8000 -     0x7fff8a934ff3  com.apple.MMCS (1.3 - 327.5) <FC998246-ED60-334D-9E94-453F35EF9C78> /System/Library/PrivateFrameworks/MMCS.framework/Versions/A/MMCS\r\n    0x7fff8aa18000 -     0x7fff8ac1246f  libobjc.A.dylib (647) <759E155D-BC42-3D4E-869B-6F57D477177C> /usr/lib/libobjc.A.dylib\r\n    0x7fff8ac2f000 -     0x7fff8ac49ff7  com.apple.Kerberos (3.0 - 1) <7760E0C2-A222-3709-B2A6-B692D900CEB1> /System/Library/Frameworks/Kerberos.framework/Versions/A/Kerberos\r\n    0x7fff8ac69000 -     0x7fff8ac70fff  com.apple.NetFS (6.0 - 4.0) <C263C8F8-F284-3101-AC82-A97A81716063> /System/Library/Frameworks/NetFS.framework/Versions/A/NetFS\r\n    0x7fff8ac71000 -     0x7fff8ac9aff3  libxslt.1.dylib (13.12) <19B2D915-DC29-3F79-9756-D7EB9051FEFF> /usr/lib/libxslt.1.dylib\r\n    0x7fff8ace9000 -     0x7fff8ae98fff  GLEngine (11.1.6) <8AD12D78-85C6-3B9C-BB0A-153A66236A56> /System/Library/Frameworks/OpenGL.framework/Versions/A/Resources/GLEngine.bundle/GLEngine\r\n    0x7fff8af6d000 -     0x7fff8afe6fe7  libcorecrypto.dylib (233.30.1) <5779FFA0-4D9A-3AD4-B7F2-618227621DC8> /usr/lib/system/libcorecrypto.dylib\r\n    0x7fff8afe7000 -     0x7fff8afedfff  com.apple.speech.recognition.framework (5.0.9 - 5.0.9) <BB2D573F-0A01-379F-A2BA-3C454EDCB111> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SpeechRecognition.framework/Versions/A/SpeechRecognition\r\n    0x7fff8afee000 -     0x7fff8afffff7  libz.1.dylib (55) <88C7C7DE-04B8-316F-8B74-ACD9F3DE1AA1> /usr/lib/libz.1.dylib\r\n    0x7fff8b000000 -     0x7fff8b000fff  com.apple.CoreServices (62 - 62) <C69DA8A7-B536-34BF-A93F-1C170E2C6D58> /System/Library/Frameworks/CoreServices.framework/Versions/A/CoreServices\r\n    0x7fff8b001000 -     0x7fff8b40eff7  libLAPACK.dylib (1128) <F9201AE7-B031-36DB-BCF8-971E994EF7C1> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLAPACK.dylib\r\n    0x7fff8b429000 -     0x7fff8b4bdfff  com.apple.ink.framework (10.9 - 213) <8E029630-1530-3734-A446-13353F0E7AC5> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Ink.framework/Versions/A/Ink\r\n    0x7fff8bc43000 -     0x7fff8bc56ff7  com.apple.CoreBluetooth (1.0 - 1) <8D7BA9BA-EB36-307A-9119-0B3D9732C953> /System/Library/Frameworks/CoreBluetooth.framework/Versions/A/CoreBluetooth\r\n    0x7fff8bc57000 -     0x7fff8bc6eff7  libLinearAlgebra.dylib (1128) <E78CCBAA-A999-3B65-8EC9-06DB15E67C37> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libLinearAlgebra.dylib\r\n    0x7fff8bc6f000 -     0x7fff8bc89ff7  libextension.dylib (55.2) <3BB019CA-199A-36AC-AA22-14B562138545> /usr/lib/libextension.dylib\r\n    0x7fff8bc8a000 -     0x7fff8bc93ff7  libsystem_notify.dylib (133.1.1) <61147800-F320-3DAA-850C-BADF33855F29> /usr/lib/system/libsystem_notify.dylib\r\n    0x7fff8bc94000 -     0x7fff8bdbcff7  com.apple.coreui (2.1 - 308.6) <9E0E9C6A-68F5-34C1-A17C-96226D401D4D> /System/Library/PrivateFrameworks/CoreUI.framework/Versions/A/CoreUI\r\n    0x7fff8bdc3000 -     0x7fff8bdccfff  libGFXShared.dylib (11.1.6) <CB24B5DA-CB17-3A0B-94E1-5A58DADC3FBD> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGFXShared.dylib\r\n    0x7fff8bdcd000 -     0x7fff8bdcffff  libsystem_configuration.dylib (699.40.2) <56F94DCE-DBDE-3615-8F07-DE6270D9F8BE> /usr/lib/system/libsystem_configuration.dylib\r\n    0x7fff8bdd0000 -     0x7fff8bdd4fff  com.apple.IOAccelerator (156.17 - 156.17) <F8752EC6-E143-390C-AE58-B4926E4090DC> /System/Library/PrivateFrameworks/IOAccelerator.framework/Versions/A/IOAccelerator\r\n    0x7fff8bdd5000 -     0x7fff8be1bff7  libauto.dylib (186) <A260789B-D4D8-316A-9490-254767B8A5F1> /usr/lib/libauto.dylib\r\n    0x7fff8bf3d000 -     0x7fff8bf5efff  com.apple.framework.Apple80211 (10.3 - 1030.71.6) <C0A17391-5C8B-34B1-BD46-8D644AB57DE0> /System/Library/PrivateFrameworks/Apple80211.framework/Versions/A/Apple80211\r\n    0x7fff8bf87000 -     0x7fff8bfdbfff  libc++.1.dylib (120) <1B9530FD-989B-3174-BB1C-BDC159501710> /usr/lib/libc++.1.dylib\r\n    0x7fff8bfde000 -     0x7fff8bfdefff  libOpenScriptingUtil.dylib (162.2) <D6A2216D-ADB2-3F24-AD30-F6D00829F545> /usr/lib/libOpenScriptingUtil.dylib\r\n    0x7fff8bfdf000 -     0x7fff8bfebff7  libGPUSupportMercury.dylib (11.1.6) <42DE40D1-0C2C-3D4F-A06A-12739E552395> /System/Library/PrivateFrameworks/GPUSupport.framework/Versions/A/Libraries/libGPUSupportMercury.dylib\r\n    0x7fff8c0d9000 -     0x7fff8c125ff7  libcups.2.dylib (408.2) <E8AD18F9-61E4-3791-B840-504468C25556> /usr/lib/libcups.2.dylib\r\n    0x7fff8c126000 -     0x7fff8c128ff7  libutil.dylib (38) <471AD65E-B86E-3C4A-8ABD-B8665A2BCE3F> /usr/lib/libutil.dylib\r\n    0x7fff8c2d8000 -     0x7fff8c2e2ff7  com.apple.NetAuth (5.2 - 5.2) <2BBD749A-8E18-35B8-8E48-A90347C1CCA7> /System/Library/PrivateFrameworks/NetAuth.framework/Versions/A/NetAuth\r\n    0x7fff8c2e3000 -     0x7fff8c2e4ff7  libsystem_blocks.dylib (65) <9615D10A-FCA7-3BE4-AA1A-1B195DACE1A1> /usr/lib/system/libsystem_blocks.dylib\r\n    0x7fff8c2e5000 -     0x7fff8c2eaff7  libunwind.dylib (35.3) <BE7E51A0-B6EA-3A54-9CCA-9D88F683A6D6> /usr/lib/system/libunwind.dylib\r\n    0x7fff8c2eb000 -     0x7fff8c40fff7  com.apple.LaunchServices (644.56 - 644.56) <20AABB1C-9319-3E4D-A024-51B0DD5FCD3B> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/LaunchServices.framework/Versions/A/LaunchServices\r\n    0x7fff8c48f000 -     0x7fff8c4c2fff  com.apple.MediaKit (16 - 757.2) <2912E5C2-085F-3FE2-8531-23B6E894B0F0> /System/Library/PrivateFrameworks/MediaKit.framework/Versions/A/MediaKit\r\n    0x7fff8cd6b000 -     0x7fff8cdacfff  libGLU.dylib (11.1.6) <4BC6579D-A6D0-3A19-880E-E29FAEA698E7> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLU.dylib\r\n    0x7fff8cdad000 -     0x7fff8cebfff7  libvDSP.dylib (516) <151B3CCB-77D3-3715-A3D0-7C74CD5C7FFC> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvDSP.dylib\r\n    0x7fff8cec0000 -     0x7fff8cef0fff  libsystem_m.dylib (3086.1) <1E12AB45-6D96-36D0-A226-F24D9FB0D9D6> /usr/lib/system/libsystem_m.dylib\r\n    0x7fff8cef1000 -     0x7fff8cf0bff7  liblzma.5.dylib (7) <1D03E875-A7C0-3028-814C-3C27F7B7C079> /usr/lib/liblzma.5.dylib\r\n    0x7fff8cf0c000 -     0x7fff8cf1dfff  libcmph.dylib (1) <46EC3997-DB5E-38AE-BBBB-A035A54AD3C0> /usr/lib/libcmph.dylib\r\n    0x7fff8cf1e000 -     0x7fff8cf9cfff  com.apple.CoreServices.OSServices (640.4 - 640.4) <9D175CD9-B27F-3529-8269-66D8AA83582E> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/OSServices.framework/Versions/A/OSServices\r\n    0x7fff8cf9d000 -     0x7fff8cf9ffff  libCVMSPluginSupport.dylib (11.1.6) <F82BF8C4-12D3-3EAD-AEDE-533AC08AEB4A> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCVMSPluginSupport.dylib\r\n    0x7fff8cfc5000 -     0x7fff8d09bff3  com.apple.DiskImagesFramework (10.10.5 - 398) <37291661-BCB2-3F95-B446-5E5DB1D1E472> /System/Library/PrivateFrameworks/DiskImages.framework/Versions/A/DiskImages\r\n    0x7fff8d9e2000 -     0x7fff8da54fff  com.apple.framework.IOKit (2.0.2 - 1050.20.2) <09C0518C-90DF-3FC3-96D6-34D35F72C8EF> /System/Library/Frameworks/IOKit.framework/Versions/A/IOKit\r\n    0x7fff8da85000 -     0x7fff8dad4ff7  libcurl.4.dylib (83.40.2) <AE97ED1E-A58F-3EF0-8E88-DDC6AD409BCE> /usr/lib/libcurl.4.dylib\r\n    0x7fff8dad5000 -     0x7fff8dae6ff3  libsystem_coretls.dylib (35.40.1) <155DA0A9-2046-332E-BFA3-D7974A51F731> /usr/lib/system/libsystem_coretls.dylib\r\n    0x7fff8daf2000 -     0x7fff8daf7ffb  libheimdal-asn1.dylib (398.40.1) <7D2BE3DE-60F7-3A6E-A92E-DA0EF9D3417E> /usr/lib/libheimdal-asn1.dylib\r\n    0x7fff8db07000 -     0x7fff8db8bfff  com.apple.PerformanceAnalysis (1.0 - 1) <095E6B1C-DC20-38DC-8931-16041B0489C7> /System/Library/PrivateFrameworks/PerformanceAnalysis.framework/Versions/A/PerformanceAnalysis\r\n    0x7fff8db8c000 -     0x7fff8db8efff  com.apple.CoreDuetDebugLogging (1.0 - 1) <9A6E5710-EA99-366E-BF40-9A65EC1B46A1> /System/Library/PrivateFrameworks/CoreDuetDebugLogging.framework/Versions/A/CoreDuetDebugLogging\r\n    0x7fff8db8f000 -     0x7fff8db9cff7  libbz2.1.0.dylib (36) <2DF83FBC-5C08-39E1-94F5-C28653791B5F> /usr/lib/libbz2.1.0.dylib\r\n    0x7fff8dbcd000 -     0x7fff8dc7cfe7  libvMisc.dylib (516) <6739E390-46E7-3BFA-9B69-B278562326E6> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libvMisc.dylib\r\n    0x7fff8dc7d000 -     0x7fff8dde4ffb  com.apple.audio.toolbox.AudioToolbox (1.12 - 1.12) <5678FC94-456A-3F5F-BA9A-10EB6E462997> /System/Library/Frameworks/AudioToolbox.framework/Versions/A/AudioToolbox\r\n    0x7fff8dde5000 -     0x7fff8dde5fff  com.apple.ApplicationServices (48 - 48) <5BF7910B-C328-3BF8-BA4F-CE52B574CE01> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/ApplicationServices\r\n    0x7fff8de1e000 -     0x7fff8e123ff3  com.apple.HIToolbox (2.1.1 - 758.7) <B1188DED-5E71-3AB4-9E57-67F84C116ECE> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox\r\n    0x7fff8e161000 -     0x7fff8e18cfff  libc++abi.dylib (125) <88A22A0F-87C6-3002-BFBA-AC0F2808B8B9> /usr/lib/libc++abi.dylib\r\n    0x7fff8e18d000 -     0x7fff8e194ff7  libCGCMS.A.dylib (788.3.5) <F5193CE4-C3A8-3E77-9CB9-2F5234383600> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGCMS.A.dylib\r\n    0x7fff8e195000 -     0x7fff8e1abff7  libsystem_asl.dylib (267) <F153AC5B-0542-356E-88C8-20A62CA704E2> /usr/lib/system/libsystem_asl.dylib\r\n    0x7fff8e29d000 -     0x7fff8e2c5fff  libxpc.dylib (559.40.1) <5C829202-962E-3744-8B50-00D38CC88E84> /usr/lib/system/libxpc.dylib\r\n    0x7fff8e764000 -     0x7fff8e76ffff  libcommonCrypto.dylib (60061.30.1) <E789748D-F9A7-3CFF-B317-90DF348B1E95> /usr/lib/system/libcommonCrypto.dylib\r\n    0x7fff8e770000 -     0x7fff8e779fff  libsystem_pthread.dylib (105.40.1) <ACE90967-ECD0-3251-AEEB-461E3C6414F7> /usr/lib/system/libsystem_pthread.dylib\r\n    0x7fff8e77a000 -     0x7fff8e793ff7  com.apple.CFOpenDirectory (10.10 - 187) <F1805A0F-D5CC-35A8-9349-042D58D128B0> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/Frameworks/CFOpenDirectory.framework/Versions/A/CFOpenDirectory\r\n    0x7fff8e794000 -     0x7fff8e7c1fff  com.apple.CoreVideo (1.8 - 145.1) <18DB07E0-B927-3260-A234-636F298D1917> /System/Library/Frameworks/CoreVideo.framework/Versions/A/CoreVideo\r\n    0x7fff8e7e8000 -     0x7fff8eacfffb  com.apple.CoreServices.CarbonCore (1108.6 - 1108.6) <8953580E-7857-33B2-AA64-98296830D3A8> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/CarbonCore.framework/Versions/A/CarbonCore\r\n    0x7fff8ead0000 -     0x7fff8ead1fff  libDiagnosticMessagesClient.dylib (100) <2EE8E436-5CDC-34C5-9959-5BA218D507FB> /usr/lib/libDiagnosticMessagesClient.dylib\r\n    0x7fff8eae1000 -     0x7fff8ed57fff  com.apple.security (7.0 - 57031.40.8) <FB238FFF-AA3B-3AB3-80F8-2DA8D2ADA15A> /System/Library/Frameworks/Security.framework/Versions/A/Security\r\n    0x7fff8ed9f000 -     0x7fff8edaaff7  libkxld.dylib (2782.50.6) <8B8C4C0B-B226-3762-A478-A8403FDEA769> /usr/lib/system/libkxld.dylib\r\n    0x7fff8edab000 -     0x7fff8f92cff7  com.apple.AppKit (6.9 - 1348.17) <E485D56D-3E72-34B7-99BB-BFDEE2D07BF5> /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit\r\n    0x7fff8f92d000 -     0x7fff8f988fe7  libTIFF.dylib (1247) <43CB4BDE-84FD-3CCE-96C0-FB33BA2753BD> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libTIFF.dylib\r\n    0x7fff8fc81000 -     0x7fff8fc83fff  com.apple.ExceptionHandling (1.5 - 10) <C3A6EB3D-C0B3-371F-99D8-AF5495498091> /System/Library/Frameworks/ExceptionHandling.framework/Versions/A/ExceptionHandling\r\n    0x7fff8fc84000 -     0x7fff8fc84ff7  libunc.dylib (29) <5676F7EA-C1DF-329F-B006-D2C3022B7D70> /usr/lib/system/libunc.dylib\r\n    0x7fff8fc85000 -     0x7fff8fc93ff7  com.apple.opengl (11.1.6 - 11.1.6) <DB9F2798-F31F-335E-90A9-992C3AA7ECA8> /System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL\r\n    0x7fff8fc94000 -     0x7fff8fca6ff7  libsasl2.2.dylib (194.1) <35371406-75EF-304A-A073-956C40373555> /usr/lib/libsasl2.2.dylib\r\n    0x7fff8fca7000 -     0x7fff8fcedff7  libFontRegistry.dylib (134.1) <CE41D8C2-BEED-345C-BC4F-3775CC06C672> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libFontRegistry.dylib\r\n    0x7fff8fd04000 -     0x7fff8fd11ff3  com.apple.ProtocolBuffer (1 - 228.0.1) <3429EB06-9F0E-355F-B9AB-F72879177398> /System/Library/PrivateFrameworks/ProtocolBuffer.framework/Versions/A/ProtocolBuffer\r\n    0x7fff8fd13000 -     0x7fff8fd13fff  com.apple.audio.units.AudioUnit (1.12 - 1.12) <E5335492-7EFE-31EA-BE72-4A9CEE68D58E> /System/Library/Frameworks/AudioUnit.framework/Versions/A/AudioUnit\r\n    0x7fff8fd14000 -     0x7fff8fea2fff  libBLAS.dylib (1128) <497912C1-A98E-3281-BED7-E9C751552F61> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib\r\n    0x7fff90385000 -     0x7fff9049effb  com.apple.CoreText (454.11 - 454.11) <7E5228C8-8657-3B6C-B3A4-98B79A3041EA> /System/Library/Frameworks/CoreText.framework/Versions/A/CoreText\r\n    0x7fff9066d000 -     0x7fff906b8ff7  com.apple.CloudDocs (1.0 - 321.10) <A8221290-A2A5-3767-BB26-CC57AC18D4DC> /System/Library/PrivateFrameworks/CloudDocs.framework/Versions/A/CloudDocs\r\n    0x7fff906b9000 -     0x7fff9089eff7  libicucore.A.dylib (531.50) <CAA7ACE0-4012-3A13-864D-2B56B4B072FD> /usr/lib/libicucore.A.dylib\r\n    0x7fff9089f000 -     0x7fff90917ff7  com.apple.SystemConfiguration (1.14.4 - 1.14) <3DFFD7F7-BD23-3F4C-A209-C4A0D99F6573> /System/Library/Frameworks/SystemConfiguration.framework/Versions/A/SystemConfiguration\r\n    0x7fff9099a000 -     0x7fff9099eff7  libGIF.dylib (1247) <5EA6D19A-9922-39F6-82DB-DE7A5B8860CF> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib\r\n    0x7fff90b06000 -     0x7fff90b1fff3  com.apple.openscripting (1.6.4 - 162.2) <BF79207B-C762-346D-8FF0-3DDCECC9E9E2> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/OpenScripting.framework/Versions/A/OpenScripting\r\n    0x7fff90b20000 -     0x7fff90f50fff  com.apple.vision.FaceCore (3.1.6 - 3.1.6) <C3B823AA-C261-37D3-B4AC-C59CE91C8241> /System/Library/PrivateFrameworks/FaceCore.framework/Versions/A/FaceCore\r\n    0x7fff90f51000 -     0x7fff90f7cff7  com.apple.DictionaryServices (1.2 - 229.1) <62EC3E1B-5A28-3252-90FF-C2E9999C2A2A> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/DictionaryServices.framework/Versions/A/DictionaryServices\r\n    0x7fff9102f000 -     0x7fff911dfff3  com.apple.QuartzCore (1.10 - 361.19) <E59000AA-DC30-3F73-A103-0240576C9556> /System/Library/Frameworks/QuartzCore.framework/Versions/A/QuartzCore\r\n    0x7fff911eb000 -     0x7fff91213fff  libRIP.A.dylib (788.3.5) <0FCFD07B-9BEB-37E4-82F6-F58CD1E86745> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libRIP.A.dylib\r\n    0x7fff92a61000 -     0x7fff92a69fff  libsystem_platform.dylib (63) <64E34079-D712-3D66-9CE2-418624A5C040> /usr/lib/system/libsystem_platform.dylib\r\n    0x7fff92a6a000 -     0x7fff92a6cfff  libquarantine.dylib (76.20.1) <7AF90041-2768-378A-925A-D83161863642> /usr/lib/system/libquarantine.dylib\r\n    0x7fff92a6d000 -     0x7fff92a8cfff  com.apple.CoreDuet (1.0 - 1) <36AA9FD5-2685-314D-B364-3FA4688D86BD> /System/Library/PrivateFrameworks/CoreDuet.framework/Versions/A/CoreDuet\r\n    0x7fff92a8d000 -     0x7fff92b48ff7  com.apple.DiscRecording (9.0 - 9000.4.2) <4655B4B8-523D-3AE6-92A0-8486A2258B3B> /System/Library/Frameworks/DiscRecording.framework/Versions/A/DiscRecording\r\n    0x7fff92c7e000 -     0x7fff92ca2ff7  com.apple.Sharing (328.17 - 328.17) <AD5E243A-B79F-3D7B-800B-A2C99A1CFEF1> /System/Library/PrivateFrameworks/Sharing.framework/Versions/A/Sharing\r\n    0x7fff92d37000 -     0x7fff92d83fff  com.apple.corelocation (1486.17 - 1615.24) <8825B3E2-E053-3E01-AE31-793443962D06> /System/Library/Frameworks/CoreLocation.framework/Versions/A/CoreLocation\r\n    0x7fff92de7000 -     0x7fff92e27ff7  libGLImage.dylib (11.1.6) <D6DDC014-2C74-34B3-970A-26F211FF76EF> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLImage.dylib\r\n    0x7fff92e28000 -     0x7fff92e28fff  com.apple.Carbon (154 - 157) <9BF51672-1684-3FDE-A561-FC59A2864EF8> /System/Library/Frameworks/Carbon.framework/Versions/A/Carbon\r\n    0x7fff92e29000 -     0x7fff92e2cffb  libCGXType.A.dylib (788.3.5) <BACC8191-0745-3043-867A-76EE91F6542E> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/Resources/libCGXType.A.dylib\r\n    0x7fff92e2d000 -     0x7fff92f5dfff  com.apple.UIFoundation (1.0 - 1) <466BDFA8-0B9F-3AB0-989D-F9779422926A> /System/Library/PrivateFrameworks/UIFoundation.framework/Versions/A/UIFoundation\r\n    0x7fff92fe4000 -     0x7fff92fe8fff  libCoreVMClient.dylib (79.1) <201EF6DF-5074-3CB7-A361-398CF957A264> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libCoreVMClient.dylib\r\n    0x7fff930e1000 -     0x7fff93113ff3  com.apple.frameworks.CoreDaemon (1.3 - 1.3) <C6DB0A07-F8E4-3837-BCA9-225F460EDA81> /System/Library/PrivateFrameworks/CoreDaemon.framework/Versions/B/CoreDaemon\r\n    0x7fff935d2000 -     0x7fff9360afff  libsystem_network.dylib (412.20.3) <6105C134-6722-3C0A-A4CE-5E1261E2E1CC> /usr/lib/system/libsystem_network.dylib\r\n    0x7fff9360b000 -     0x7fff93610fff  libsystem_stats.dylib (163.30.2) <63CD5437-6C35-3024-86DB-BB2FDF269456> /usr/lib/system/libsystem_stats.dylib\r\n    0x7fff9366c000 -     0x7fff9366cff7  libkeymgr.dylib (28) <77845842-DE70-3CC5-BD01-C3D14227CED5> /usr/lib/system/libkeymgr.dylib\r\n    0x7fff9366d000 -     0x7fff936e1ffb  com.apple.securityfoundation (6.0 - 55126) <344401F5-4016-3AEB-BFDC-CE8E5546D39F> /System/Library/Frameworks/SecurityFoundation.framework/Versions/A/SecurityFoundation\r\n    0x7fff937c4000 -     0x7fff937c7fff  com.apple.IOSurface (97.4 - 97.4) <AE11CFBC-4D46-30F3-BEEC-4C8131079391> /System/Library/Frameworks/IOSurface.framework/Versions/A/IOSurface\r\n    0x7fff937d2000 -     0x7fff939e2ff7  com.apple.CFNetwork (720.5.7 - 720.5.7) <A47D7DD2-5903-39D0-8D27-5A7E2D119D84> /System/Library/Frameworks/CFNetwork.framework/Versions/A/CFNetwork\r\n    0x7fff939ee000 -     0x7fff93a5dfff  com.apple.SearchKit (1.4.0 - 1.4.0) <80883BD1-C9BA-3794-A20E-476F94DD89A9> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/SearchKit.framework/Versions/A/SearchKit\r\n    0x7fff93a61000 -     0x7fff93cdfff7  com.apple.RawCamera.bundle (6.04.1 - 798) <7988A25F-2A69-311E-929E-B70D164739F4> /System/Library/CoreServices/RawCamera.bundle/Contents/MacOS/RawCamera\r\n    0x7fff93ce0000 -     0x7fff93d00fff  com.apple.IconServices (47.1 - 47.1) <E83DFE3B-6541-3736-96BB-26DC5D0100F1> /System/Library/PrivateFrameworks/IconServices.framework/Versions/A/IconServices\r\n    0x7fff93d01000 -     0x7fff93d31ff3  com.apple.GSS (4.0 - 2.0) <97F2A028-44CF-3188-B863-F4EEB39CBDBD> /System/Library/Frameworks/GSS.framework/Versions/A/GSS\r\n    0x7fff93d8d000 -     0x7fff93e71fff  libcrypto.0.9.8.dylib (52.40.1) <D123FC57-E2EB-3E08-A51B-6C317EA83EB5> /usr/lib/libcrypto.0.9.8.dylib\r\n    0x7fff93e72000 -     0x7fff93eccff7  com.apple.LanguageModeling (1.0 - 1) <ACA93FE0-A0E3-333E-AE3C-8EB7DE5F362F> /System/Library/PrivateFrameworks/LanguageModeling.framework/Versions/A/LanguageModeling\r\n    0x7fff93ecd000 -     0x7fff93efcff7  com.apple.CoreServicesInternal (221.7.2 - 221.7.2) <B93D4775-149C-3698-B38C-9C50673D455C> /System/Library/PrivateFrameworks/CoreServicesInternal.framework/Versions/A/CoreServicesInternal\r\n    0x7fff93efd000 -     0x7fff93f21fef  libJPEG.dylib (1247) <78AA0479-176D-3C69-ADFB-4609A4A676FF> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJPEG.dylib\r\n    0x7fff93f22000 -     0x7fff93f3efff  com.apple.GenerationalStorage (2.0 - 209.11) <9FF8DD11-25FB-3047-A5BF-9415339B3EEC> /System/Library/PrivateFrameworks/GenerationalStorage.framework/Versions/A/GenerationalStorage\r\n    0x7fff93f3f000 -     0x7fff93f44fff  com.apple.DiskArbitration (2.6 - 2.6) <0DFF4D9B-2AC3-3B82-B5C5-30F4EFBD2DB9> /System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration\r\n    0x7fff93f45000 -     0x7fff93f51fff  com.apple.speech.synthesis.framework (5.3.11 - 5.3.11) <DFC7FD85-F1B0-317C-8513-722570CB8FB9> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/SpeechSynthesis.framework/Versions/A/SpeechSynthesis\r\n    0x7fff93f52000 -     0x7fff93fb1fff  com.apple.AE (681.5 - 681.7) <2BF39455-1CDD-392C-824A-9972C6B1FB57> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/AE.framework/Versions/A/AE\r\n    0x7fff93fc2000 -     0x7fff93fcfff7  com.apple.SpeechRecognitionCore (2.1.2 - 2.1.2) <551322E2-C1E4-3378-A218-F362985E3E3C> /System/Library/PrivateFrameworks/SpeechRecognitionCore.framework/Versions/A/SpeechRecognitionCore\r\n    0x7fff94068000 -     0x7fff9406eff7  libsystem_networkextension.dylib (167.40.3) <BA58B30B-8377-3B0A-8AE3-4F84021D9D4E> /usr/lib/system/libsystem_networkextension.dylib\r\n    0x7fff94077000 -     0x7fff9410cff7  com.apple.ColorSync (4.9.0 - 4.9.0) <9150C2B7-2E6E-3509-96EA-7B3F959F049E> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ColorSync.framework/Versions/A/ColorSync\r\n    0x7fff9410d000 -     0x7fff9410ffff  com.apple.EFILogin (2.0 - 2) <3BA837D8-94F5-3240-9CF7-E40DC2808446> /System/Library/PrivateFrameworks/EFILogin.framework/Versions/A/EFILogin\r\n    0x7fff9437b000 -     0x7fff943a0fff  libPng.dylib (1247) <1E8B06AA-1DC5-3845-88D9-B2F8E6E1E540> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libPng.dylib\r\n    0x7fff943ff000 -     0x7fff94430ff7  com.apple.ProtectedCloudStorage (1.0 - 1) <9D76F2E0-C28A-3DBC-A91F-E87888D46BF0> /System/Library/PrivateFrameworks/ProtectedCloudStorage.framework/Versions/A/ProtectedCloudStorage\r\n    0x7fff94431000 -     0x7fff94432fff  com.apple.TrustEvaluationAgent (2.0 - 25) <2D61A2C3-C83E-3A3F-8EC1-736DBEC250AB> /System/Library/PrivateFrameworks/TrustEvaluationAgent.framework/Versions/A/TrustEvaluationAgent\r\n    0x7fff94433000 -     0x7fff944d1fff  com.apple.Metadata (10.7.0 - 917.36) <00C4CB5D-E723-3612-84E0-439098392CDD> /System/Library/Frameworks/CoreServices.framework/Versions/A/Frameworks/Metadata.framework/Versions/A/Metadata\r\n    0x7fff94657000 -     0x7fff94677ff7  com.apple.MultitouchSupport.framework (264.6 - 264.6) <1539F1F6-6334-37F3-9C52-02EFFBF4835D> /System/Library/PrivateFrameworks/MultitouchSupport.framework/Versions/A/MultitouchSupport\r\n    0x7fff9478d000 -     0x7fff94799ff7  com.apple.OpenDirectory (10.10 - 187) <22FF4721-03D8-381B-AA83-2B07D690C777> /System/Library/Frameworks/OpenDirectory.framework/Versions/A/OpenDirectory\r\n    0x7fff9479a000 -     0x7fff947d5fff  com.apple.QD (301 - 301) <C4D2AD03-B839-350A-AAF0-B4A08F8BED77> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/QD.framework/Versions/A/QD\r\n    0x7fff947d6000 -     0x7fff947d6fff  com.apple.Accelerate (1.10 - Accelerate 1.10) <2C8AF258-4F11-3BEC-A826-22D7199B3975> /System/Library/Frameworks/Accelerate.framework/Versions/A/Accelerate\r\n    0x7fff947d7000 -     0x7fff947daff7  libdyld.dylib (353.2.4) <224F35C5-6E35-3EC4-A97C-80949CE444E7> /usr/lib/system/libdyld.dylib\r\n    0x7fff947f3000 -     0x7fff94842ff7  com.apple.opencl (2.4.2 - 2.4.2) <590504FA-E5D2-37C2-91A7-09F5F039F971> /System/Library/Frameworks/OpenCL.framework/Versions/A/OpenCL\r\n    0x7fff94843000 -     0x7fff94845ff7  com.apple.securityhi (9.0 - 55006) <15D38919-9697-3E3A-BCB9-4E3271BC2C7E> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/SecurityHI.framework/Versions/A/SecurityHI\r\n    0x7fff94846000 -     0x7fff94851fff  libGL.dylib (11.1.6) <38B3FF9A-5660-3080-9DB8-1CAE0E8CD739> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGL.dylib\r\n    0x7fff94852000 -     0x7fff95096fe3  com.apple.CoreGraphics (1.600.0 - 788.3.5) <172D4676-7C9F-39DE-81CC-A88A3EEC901E> /System/Library/Frameworks/CoreGraphics.framework/Versions/A/CoreGraphics\r\n    0x7fff950cf000 -     0x7fff951c1ff7  libiconv.2.dylib (42) <2A06D02F-8B76-3864-8D96-64EF5B40BC6C> /usr/lib/libiconv.2.dylib\r\n    0x7fff95240000 -     0x7fff95244fff  com.apple.CommonPanels (1.2.6 - 96) <F9ECC8AF-D9CA-3350-AFB4-5113A9B789A5> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/CommonPanels.framework/Versions/A/CommonPanels\r\n    0x7fff95245000 -     0x7fff95294ff7  libstdc++.6.dylib (104.1) <803F6AC8-87DC-3E24-9E80-729B551F6FFF> /usr/lib/libstdc++.6.dylib\r\n    0x7fff954fc000 -     0x7fff95504ffb  libcopyfile.dylib (118.1.2) <0C68D3A6-ACDD-3EF3-991A-CC82C32AB836> /usr/lib/system/libcopyfile.dylib\r\n    0x7fff95518000 -     0x7fff95653fff  com.apple.ImageIO.framework (3.3.0 - 1247) <F708DED7-DF04-3D82-A88C-FD85D7D29CFF> /System/Library/Frameworks/ImageIO.framework/Versions/A/ImageIO\r\n    0x7fff9589a000 -     0x7fff9589bfff  libsystem_secinit.dylib (18) <581DAD0F-6B63-3A48-B63B-917AF799ABAA> /usr/lib/system/libsystem_secinit.dylib\r\n    0x7fff9589c000 -     0x7fff95c34ff7  com.apple.CoreFoundation (6.9 - 1153.18) <5C0892B8-9691-341F-9279-CA3A74D59AA0> /System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation\r\n    0x7fff95c35000 -     0x7fff95eb4ff7  com.apple.CoreData (111 - 526.3) <5A27E0D8-5E5A-335B-B3F6-2601C7B976FA> /System/Library/Frameworks/CoreData.framework/Versions/A/CoreData\r\n    0x7fff95eb5000 -     0x7fff95ec7ff7  com.apple.ImageCapture (9.0 - 9.0) <7FB65DD4-56B5-35C4-862C-7A2DED991D1F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/ImageCapture.framework/Versions/A/ImageCapture\r\n    0x7fff95ec8000 -     0x7fff95ec9ff7  com.apple.print.framework.Print (10.0 - 265) <3BC4FE7F-78A0-3E57-8F4C-520E7EFD36FA> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Print.framework/Versions/A/Print\r\n    0x7fff95eca000 -     0x7fff95f31ffb  com.apple.datadetectorscore (6.0 - 396.1.2) <E5A147AE-66B5-3D31-A2E0-D3FAB8417E1F> /System/Library/PrivateFrameworks/DataDetectorsCore.framework/Versions/A/DataDetectorsCore\r\n    0x7fff95f4c000 -     0x7fff9605bff3  com.apple.desktopservices (1.9.3 - 1.9.3) <FEE11342-5BC4-37A7-8169-DA48BE17B9C9> /System/Library/PrivateFrameworks/DesktopServicesPriv.framework/Versions/A/DesktopServicesPriv\r\n    0x7fff9605c000 -     0x7fff9605dffb  libremovefile.dylib (35) <3485B5F4-6CE8-3C62-8DFD-8736ED6E8531> /usr/lib/system/libremovefile.dylib\r\n    0x7fff960bf000 -     0x7fff960c6ff7  libcompiler_rt.dylib (35) <BF8FC133-EE10-3DA6-9B90-92039E28678F> /usr/lib/system/libcompiler_rt.dylib\r\n    0x7fff96731000 -     0x7fff96759fff  libsystem_info.dylib (459.40.1) <2E16C4B3-A327-3957-9C41-143911979A1E> /usr/lib/system/libsystem_info.dylib\r\n    0x7fff9675a000 -     0x7fff96762ff7  com.apple.icloud.FindMyDevice (1.0 - 1) <9CE67F85-2BA8-3093-97BA-07BF5C04A5D6> /System/Library/PrivateFrameworks/FindMyDevice.framework/Versions/A/FindMyDevice\r\n    0x7fff96768000 -     0x7fff967a3fff  com.apple.Symbolication (1.4 - 56045) <D64571B1-4483-3FE2-BD67-A91360F79727> /System/Library/PrivateFrameworks/Symbolication.framework/Versions/A/Symbolication\r\n    0x7fff967a4000 -     0x7fff9683aff7  com.apple.cloudkit.CloudKit (283.67.4 - 283.67.4) <EA6E4B2C-A3AA-3636-B9C3-F61D3EFFB82B> /System/Library/Frameworks/CloudKit.framework/Versions/A/CloudKit\r\n    0x7fff9683b000 -     0x7fff9683bfff  com.apple.Accelerate.vecLib (3.10 - vecLib 3.10) <9D749502-A228-3BF1-B52F-A182DEEB2C4D> /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/vecLib\r\n    0x7fff96869000 -     0x7fff96884fff  com.apple.AppleVPAFramework (1.4.5 - 1.4.5) <B21714FD-3F2E-36D8-996E-EC74676F933F> /System/Library/PrivateFrameworks/AppleVPA.framework/Versions/A/AppleVPA\r\n    0x7fff96885000 -     0x7fff96888fff  com.apple.xpc.ServiceManagement (1.0 - 1) <A95A15CD-3B21-3513-AFF8-1D7DE3DBFA12> /System/Library/Frameworks/ServiceManagement.framework/Versions/A/ServiceManagement\r\n    0x7fff96971000 -     0x7fff969fdfef  libsystem_c.dylib (1044.40.3) <2E673D96-E334-37D2-833A-E57383BBA377> /usr/lib/system/libsystem_c.dylib\r\n    0x7fff969fe000 -     0x7fff96a04fff  libsystem_trace.dylib (72.20.1) <840F5301-B55A-3078-90B9-FEFFD6CD741A> /usr/lib/system/libsystem_trace.dylib\r\n    0x7fff96a29000 -     0x7fff96a97ff3  com.apple.Heimdal (4.0 - 2.0) <8D1667CF-D454-3E07-A58E-E15591B5A95E> /System/Library/PrivateFrameworks/Heimdal.framework/Versions/A/Heimdal\r\n    0x7fff96ad6000 -     0x7fff96bc8ffb  libxml2.2.dylib (26.11) <A9452FC8-D30D-3155-BCF0-EE548DD6A2C5> /usr/lib/libxml2.2.dylib\r\n    0x7fff96c2f000 -     0x7fff96c31fff  com.apple.loginsupport (1.0 - 1) <DAAD7013-A19D-3858-BFF7-DE1DAF664401> /System/Library/PrivateFrameworks/login.framework/Versions/A/Frameworks/loginsupport.framework/Versions/A/loginsupport\r\n    0x7fff96c32000 -     0x7fff96cc3ff7  libCoreStorage.dylib (471.30.1) <9D95399F-1AC5-325F-8337-6E13AD99E44B> /usr/lib/libCoreStorage.dylib\r\n    0x7fff96cc4000 -     0x7fff96cc5ff3  libSystem.B.dylib (1213) <4B24B5BE-45F2-355A-9A35-D438A516D140> /usr/lib/libSystem.B.dylib\r\n    0x7fff96ce6000 -     0x7fff96ce7fff  liblangid.dylib (117) <B54A4AA0-2E53-3671-90F5-AFF711C0EB9E> /usr/lib/liblangid.dylib\r\n    0x7fff96ce8000 -     0x7fff96d35ff7  com.apple.print.framework.PrintCore (10.3 - 451.1) <DE992474-0841-38A1-B4F6-46D653E454D5> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/PrintCore.framework/Versions/A/PrintCore\r\n    0x7fff96dbb000 -     0x7fff96e7bff7  com.apple.backup.framework (1.6.5 - 1.6.5) <86396038-33EA-3046-9F70-093A3D6407D4> /System/Library/PrivateFrameworks/Backup.framework/Versions/A/Backup\r\n    0x7fff96fa5000 -     0x7fff96fb5ff7  libbsm.0.dylib (34) <A3A2E56C-2B65-37C7-B43A-A1F926E1A0BB> /usr/lib/libbsm.0.dylib\r\n    0x7fff96fb6000 -     0x7fff96fb9fff  com.apple.help (1.3.3 - 46) <CA4541F4-CEF5-355C-8F1F-EA65DC1B400F> /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/Help.framework/Versions/A/Help\r\n    0x7fff96fec000 -     0x7fff97016ff7  libdispatch.dylib (442.50.1) <A61E703C-784A-3698-B513-75DD12AAD6DC> /usr/lib/system/libdispatch.dylib\r\n    0x7fff97017000 -     0x7fff9707eff7  com.apple.framework.CoreWiFi (3.0 - 300.4) <19269C1D-EB29-384A-83F3-7DDDEB7D9DAD> /System/Library/PrivateFrameworks/CoreWiFi.framework/Versions/A/CoreWiFi\r\n    0x7fff9710d000 -     0x7fff9729cfff  libGLProgrammability.dylib (11.1.6) <5A56E484-5A99-3BD7-99C0-B43D74F2C91C> /System/Library/Frameworks/OpenGL.framework/Versions/A/Libraries/libGLProgrammability.dylib\r\n    0x7fff9729d000 -     0x7fff972a5fff  libsystem_dnssd.dylib (576.50.2) <9EC5AF92-D0D2-3BDE-92B6-D3730D3865C8> /usr/lib/system/libsystem_dnssd.dylib\r\n    0x7fff972b3000 -     0x7fff972c2fff  com.apple.LangAnalysis (1.7.0 - 1.7.0) <D1E527E4-C561-352F-9457-E8C50232793C> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/LangAnalysis.framework/Versions/A/LangAnalysis\r\n    0x7fff972c3000 -     0x7fff972c5ff7  libsystem_coreservices.dylib (9) <41B7C578-5A53-31C8-A96F-C73E030B0938> /usr/lib/system/libsystem_coreservices.dylib\r\n    0x7fff9783c000 -     0x7fff97862fff  com.apple.ChunkingLibrary (2.1 - 163.6) <29D4CB95-42EF-34C6-8182-BDB6F7BB1E79> /System/Library/PrivateFrameworks/ChunkingLibrary.framework/Versions/A/ChunkingLibrary\r\n    0x7fff97863000 -     0x7fff97868ff7  libmacho.dylib (862) <126CA2ED-DE91-308F-8881-B9DAEC3C63B6> /usr/lib/system/libmacho.dylib\r\n    0x7fff97869000 -     0x7fff97871ff7  com.apple.AppleSRP (5.0 - 1) <68F0C577-ED96-34F2-B701-CE3023367D4D> /System/Library/PrivateFrameworks/AppleSRP.framework/Versions/A/AppleSRP\r\n    0x7fff97872000 -     0x7fff978bcfff  com.apple.HIServices (1.22 - 523) <99ADA325-53C8-368E-A5FA-3F913CD2245A> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices\r\n    0x7fff978cd000 -     0x7fff978d6ff3  com.apple.CommonAuth (4.0 - 2.0) <9A484EE6-0003-3AB1-AE4F-AA543BBBF53F> /System/Library/PrivateFrameworks/CommonAuth.framework/Versions/A/CommonAuth\r\n    0x7fff978d7000 -     0x7fff979c8fff  libJP2.dylib (1247) <D74A8708-C27E-3D7C-89D0-BE999596E2B1> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libJP2.dylib\r\n    0x7fff97a28000 -     0x7fff97a33ff7  libcsfde.dylib (471.30.1) <A62AE3D8-E2A6-314A-BF45-804003BE0AC9> /usr/lib/libcsfde.dylib\r\n    0x7fff97ab2000 -     0x7fff97acdff7  libCRFSuite.dylib (34) <D64842BE-7BD4-3D0C-9842-1D202F7C2A51> /usr/lib/libCRFSuite.dylib\r\n    0x7fff97acf000 -     0x7fff97c15fef  libsqlite3.dylib (168.2) <53F6A294-15D7-3804-9ABF-47D35E15CDFB> /usr/lib/libsqlite3.dylib\r\n    0x7fff97c20000 -     0x7fff97c24fff  libcache.dylib (69) <45E9A2E7-99C4-36B2-BEE3-0C4E11614AD1> /usr/lib/system/libcache.dylib\r\n    0x7fff97c69000 -     0x7fff97cdaffb  com.apple.ApplicationServices.ATS (360 - 375.4) <888FE0B1-835C-30B1-80AD-5066CADB0364> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/ATS\r\n    0x7fff97d43000 -     0x7fff97d55ff7  com.apple.CoreDuetDaemonProtocol (1.0 - 1) <CE9FABB4-1C5D-3F9B-9BB8-5CC50C3E5E31> /System/Library/PrivateFrameworks/CoreDuetDaemonProtocol.framework/Versions/A/CoreDuetDaemonProtocol\r\n    0x7fff97d8f000 -     0x7fff97d91fff  libRadiance.dylib (1247) <0028A2E3-7928-3479-9BF7-CB64234F85AF> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libRadiance.dylib\r\n    0x7fff97e8a000 -     0x7fff97ebcff7  libTrueTypeScaler.dylib (134.10) <ACB0C2DB-A167-3B59-B487-5F7F3545A27D> /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/ATS.framework/Versions/A/Resources/libTrueTypeScaler.dylib\r\n    0x7fff97f09000 -     0x7fff97f41fff  com.apple.RemoteViewServices (2.0 - 99) <C9A62691-B0D9-34B7-B71C-A48B5F4DC553> /System/Library/PrivateFrameworks/RemoteViewServices.framework/Versions/A/RemoteViewServices\r\n\r\nExternal Modification Summary:\r\n  Calls made by other processes targeting this process:\r\n    task_for_pid: 1\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by this process:\r\n    task_for_pid: 0\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n  Calls made by all processes on this machine:\r\n    task_for_pid: 63112\r\n    thread_create: 0\r\n    thread_set_state: 0\r\n\r\nVM Region Summary:\r\nReadOnly portion of Libraries: Total=213.4M resident=91.9M(43%) swapped_out_or_unallocated=121.5M(57%)\r\nWritable regions: Total=493.1M written=63.9M(13%) resident=98.1M(20%) swapped_out=108K(0%) unallocated=395.1M(80%)\r\n \r\nREGION TYPE                      VIRTUAL\r\n===========                      =======\r\nATS (font support)                 31.9M\r\nATS (font support) (reserved)         4K        reserved VM address space (unallocated)\r\nActivity Tracing                   2048K\r\nCG backing stores                  1236K\r\nCG image                           5576K\r\nCG shared images                    336K\r\nCoreAnimation                       132K\r\nCoreImage                            16K\r\nCoreServices                          8K\r\nCoreUI image data                   176K\r\nFoundation                            4K\r\nIOKit                              56.0M\r\nImage IO                             64K\r\nKernel Alloc Once                     8K\r\nMALLOC                            115.4M\r\nMALLOC (admin)                       32K\r\nMALLOC_LARGE (reserved)            15.6M        reserved VM address space (unallocated)\r\nMemory Tag 242                       12K\r\nMemory Tag 251                       32K\r\nOpenCL                               16K\r\nSTACK GUARD                        56.1M\r\nStack                              30.9M\r\nVM_ALLOCATE                         3.2G\r\nVM_ALLOCATE (reserved)            153.7M        reserved VM address space (unallocated)\r\n__DATA                             17.9M\r\n__GLSLBUILTINS                     2588K\r\n__IMAGE                             528K\r\n__LINKEDIT                         79.7M\r\n__TEXT                            133.7M\r\n__UNICODE                           552K\r\nmapped file                         1.2G\r\nshared memory                        68K\r\n===========                      =======\r\nTOTAL                               5.1G\r\nTOTAL, minus reserved VM space      4.9G\r\n \r\n\r\nModel: MacBookPro12,1, BootROM MBP121.0167.B14, 2 processors, Intel Core i5, 2.7 GHz, 8 GB, SMC 2.28f7\r\nGraphics: Intel Iris Graphics 6100, Intel Iris Graphics 6100, Built-In\r\nMemory Module: BANK 0/DIMM0, 4 GB, DDR3, 1867 MHz, 0x80AD, 0x483943434E4E4E424C54414C41522D4E5544\r\nMemory Module: BANK 1/DIMM0, 4 GB, DDR3, 1867 MHz, 0x80AD, 0x483943434E4E4E424C54414C41522D4E5544\r\nAirPort: spairport_wireless_card_type_airport_extreme (0x14E4, 0x133), Broadcom BCM43xx 1.0 (7.15.166.24.3)\r\nBluetooth: Version 4.3.6f3 16238, 3 services, 27 devices, 1 incoming serial ports\r\nNetwork Service: Wi-Fi, AirPort, en0\r\nSerial ATA Device: APPLE SSD SM0256G, 251 GB\r\nUSB Device: Internal Memory Card Reader\r\nUSB Device: Bluetooth USB Host Controller\r\nThunderbolt Bus: MacBook Pro, Apple Inc., 27.1\r\n```\r\n\r\nI hope this helps!"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/8548", "title": "non-fatal NPE on JMX websocket handshake from HTTP browser running on BOLT in wrapped EnterpriseBootstrapper around embedded mode EnterpriseGraphDatabase", "closed": "2017-01-20 10:24:25", "commitsDetails": [], "commits": {}, "ttf": 24.00027777777778, "created": "2016-12-26 23:15:42", "user": "obriensystems", "body": "- Neo4j version: 3.1.0\r\n- Operating system: MacOS (10.12.1) running Tomcat 8.0.28, Redhat RHEL 7.2 running 8.0.28 and Amazon Linux 4.4.23 running Tomcat 8.0.36 (ElasticBeanstalk)\r\n- API/Driver: java 8 embedded\r\n\r\nI get this regardless of tomcat version, OS and where it runs (locally, AWS beanstalk)\r\nWhen we run the http browser (7575) over bolt (7688) we get a nonfatal NPE on JMX handshake.\r\nThis error does not look to affect functionality - it just pollutes the logs every x seconds\r\n\r\n```\r\n2016-12-24 16:28:19.005+0000 INFO  [REQUEST] [AsyncLog @ 2016-12-24 16:28:19.004+0000]  179.99.99.99 -  [Sat Dec 24 16:28:19 UTC 2016] \"/?null\" 200 -1 \"http://biometric-nbi.us-east-1.elasticbeanstalk.com:7575/browser/\" \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.95 Safari/537.36\" 5\r\n\r\n\r\n2016-12-24 16:29:19.742+0000 DEBUG [io.netty.handler.codec.http.websocketx.WebSocket08FrameDecoder] Decoding WebSocket Frame length=40\r\n2016-12-24 16:29:19.752+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: Exception invoking method writeBufSize. See debug.log for more details, reference 0926f32f-a363-4e29-81b4-38a2fabdb51f.\r\n2016-12-24 16:29:19.753+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: Exception invoking method writeBufSize, reference 0926f32f-a363-4e29-81b4-38a2fabdb51f. Exception invoking method writeBufSize\r\njavax.management.RuntimeOperationsException: Exception invoking method writeBufSize\r\n\tat org.apache.tomcat.util.modeler.BaseModelMBean.getAttribute(BaseModelMBean.java:196)\r\n\tat com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(DefaultMBeanServerInterceptor.java:647)\r\n\tat com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(JmxMBeanServer.java:678)\r\n\tat org.neo4j.kernel.builtinprocs.JmxQueryProcedure.toNeo4jValue(JmxQueryProcedure.java:131)\r\n\tat org.neo4j.kernel.builtinprocs.JmxQueryProcedure.toNeo4jValue(JmxQueryProcedure.java:119)\r\n\tat org.neo4j.kernel.builtinprocs.JmxQueryProcedure.lambda$apply$0(JmxQueryProcedure.java:91)\r\n\tat org.neo4j.collection.RawIterator$2.fetchNextOrNull(RawIterator.java:84)\r\n\tat org.neo4j.collection.PrefetchingRawIterator.peek(PrefetchingRawIterator.java:50)\r\n\tat org.neo4j.collection.PrefetchingRawIterator.hasNext(PrefetchingRawIterator.java:36)\r\n\tat org.neo4j.kernel.impl.api.OperationsFacade$1.hasNext(OperationsFacade.java:1583)\r\n\tat org.neo4j.cypher.internal.spi.v3_1.TransactionBoundQueryContext$$anon$2.hasNext(TransactionBoundQueryContext.scala:633)\r\n\tat org.neo4j.cypher.internal.spi.v3_1.ExceptionTranslationSupport$$anon$1$$anonfun$hasNext$1.apply$mcZ$sp(ExceptionTranslationSupport.scala:47)\r\n\tat org.neo4j.cypher.internal.spi.v3_1.ExceptionTranslationSupport$$anon$1$$anonfun$hasNext$1.apply(ExceptionTranslationSupport.scala:47)\r\n\tat org.neo4j.cypher.internal.spi.v3_1.ExceptionTranslationSupport$$anon$1$$anonfun$hasNext$1.apply(ExceptionTranslationSupport.scala:47)\r\n\tat org.neo4j.cypher.internal.spi.v3_1.ExceptionTranslationSupport$class.translateException(ExceptionTranslationSupport.scala:32)\r\n\tat org.neo4j.cypher.internal.compatibility.ExceptionTranslatingQueryContextFor3_1.translateException(ExceptionTranslatingQueryContextFor3_1.scala:34)\r\n\tat org.neo4j.cypher.internal.spi.v3_1.ExceptionTranslationSupport$$anon$1.hasNext(ExceptionTranslationSupport.scala:47)\r\n\tat scala.collection.Iterator$class.foreach(Iterator.scala:893)\r\n\tat org.neo4j.cypher.internal.spi.v3_1.ExceptionTranslationSupport$$anon$1.foreach(ExceptionTranslationSupport.scala:46)\r\n\tat org.neo4j.cypher.internal.compiler.v3_1.executionplan.procs.ProcedureExecutionResult.accept(ProcedureExecutionResult.scala:69)\r\n\tat org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor3_1.accept(CompatibilityFor3_1.scala:402)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$1.apply$mcV$sp(ClosingExecutionResult.scala:169)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$1.apply(ClosingExecutionResult.scala:168)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult$$anonfun$accept$1.apply(ClosingExecutionResult.scala:168)\r\n\tat org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_1$runSafely$.apply(CompatibilityFor3_1.scala:190)\r\n\tat org.neo4j.cypher.internal.compatibility.ClosingExecutionResult.accept(ClosingExecutionResult.scala:168)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionResult.accept(ExecutionResult.java:317)\r\n\tat org.neo4j.bolt.v1.runtime.cypher.CypherAdapterStream.accept(CypherAdapterStream.java:69)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter$ResultHandler.onRecords(BoltMessageRouter.java:131)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.lambda$pullAll$0(BoltStateMachine.java:451)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine$State$1.streamResult(TransactionStateMachine.java:211)\r\n\tat org.neo4j.bolt.v1.runtime.TransactionStateMachine.streamResult(TransactionStateMachine.java:93)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine$State$3.pullAll(BoltStateMachine.java:450)\r\n\tat org.neo4j.bolt.v1.runtime.BoltStateMachine.pullAll(BoltStateMachine.java:233)\r\n\tat org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onPullAll$6(BoltMessageRouter.java:99)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.execute(RunnableBoltWorker.java:136)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.executeBatch(RunnableBoltWorker.java:123)\r\n\tat org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.run(RunnableBoltWorker.java:94)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\nCaused by: java.lang.NullPointerException\r\n\tat org.apache.tomcat.util.net.SocketProperties.getTxBufSize(SocketProperties.java:300)\r\n\tat org.apache.tomcat.util.net.NioEndpoint.getWriteBufSize(NioEndpoint.java:504)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat org.apache.tomcat.util.modeler.BaseModelMBean.getAttribute(BaseModelMBean.java:189)\r\n\t... 38 more\r\n2016-12-24 16:29:19.756+0000 DEBUG [io.netty.handler.codec.http.websocketx.WebSocket08FrameEncoder] Encoding WebSocket Frame opCode=2 length=3795\r\n```\r\n\r\nreproduction is on the standard POC at\r\n\r\ngithub example project for wrapped embedded DB\r\nhttps://github.com/obrienlabs/nbi-neo4j-embedded-aws-war\r\n\r\nendpoints\r\nhttp://neo4j.ca-central-1.elasticbeanstalk.com/FrontController?action=graph \r\n(bolt enabled) http browser - user:neo4j pass:password \r\nhttp://neo4j.ca-central-1.elasticbeanstalk.com:7575/browser\r\n\r\n\r\nsome more config state\r\n```\r\n24-Dec-2016 16:13:59.283 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server version:        Apache Tomcat/8.0.36\r\n24-Dec-2016 16:13:59.289 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server built:          Aug 12 2016 18:14:42 UTC\r\n24-Dec-2016 16:13:59.289 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Server number:         8.0.36.0\r\n24-Dec-2016 16:13:59.289 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Name:               Linux\r\n24-Dec-2016 16:13:59.290 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log OS Version:            4.4.23-31.54.amzn1.x86_64\r\n24-Dec-2016 16:13:59.290 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Architecture:          amd64\r\n24-Dec-2016 16:13:59.290 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log Java Home:             /usr/lib/jvm/java-1.8.0-openjdk-1.8.0.101-3.b13.24.amzn1.x86_64/jre\r\n24-Dec-2016 16:13:59.291 INFO [main] org.apache.catalina.startup.VersionLoggerListener.log JVM Version:           1.8.0_101-b13\r\n```"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8546", "title": "Unexpected Type mismatch error using tail() in Cypher", "closed": "2017-01-09 22:04:21", "commitsDetails": [], "commits": {}, "ttf": 17.00027777777778, "created": "2016-12-23 16:04:52", "user": "dhimmel", "body": "Run queries at https://neo4j.het.io/browser/ (which is currently running Neo4j 3.1.0 as [described here](https://thinklab.com/discussion/hosting-hetionet-in-the-cloud-creating-a-public-neo4j-instance/216), queries from [this discussion](https://thinklab.com/discussion/decomposing-the-dwpc-to-assess-intermediate-node-contributions/228#3)).\r\n\r\nThe following query works:\r\n\r\n```\r\nMATCH path = (n0:Compound)-[:BINDS_CbG]-(n1)-[:PARTICIPATES_GpPW]-\r\n  (n2)-[:PARTICIPATES_GpPW]-(n3)-[:ASSOCIATES_DaG]-(n4:Disease)\r\nUSING JOIN ON n2\r\nWHERE n0.name = 'Enalapril'\r\n  AND n4.name = 'coronary artery disease'\r\n  AND n1 <> n3\r\nWITH\r\n  path,\r\n[\r\n  size((n0)-[:BINDS_CbG]-()),\r\n  size(()-[:BINDS_CbG]-(n1)),\r\n  size((n1)-[:PARTICIPATES_GpPW]-()),\r\n  size(()-[:PARTICIPATES_GpPW]-(n2)),\r\n  size((n2)-[:PARTICIPATES_GpPW]-()),\r\n  size(()-[:PARTICIPATES_GpPW]-(n3)),\r\n  size((n3)-[:ASSOCIATES_DaG]-()),\r\n  size(()-[:ASSOCIATES_DaG]-(n4))\r\n] AS degrees, n3, n4\r\nRETURN\r\n  n4.name AS target_name,\r\n  type(relationships(path)[3]) AS target_edge_type,\r\n  n3.name AS n3_name,\r\n  sum(reduce(pdp = 1.0, d in degrees| pdp * d ^ -0.4)) AS DWPC\r\nORDER BY DWPC DESC\r\n```\r\n\r\nChanging `type(relationships(path)[3])` to `type(tail(relationships(path)))` throws the following error:\r\n\r\n```\r\nType mismatch: expected Relationship but was List<Relationship> (line 21, column 8 (offset: 590))\r\n\"  type(tail(relationships(path))) AS target_edge_type,\"\r\n```\r\n\r\nHowever, switch `tail` to `head` and this query works."}, {"labels": ["3.0", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8534", "title": "Indexed WHERE clause comparing properties of two nodes in MATCH clause being ignored in Query?", "closed": "2017-10-04 12:26:08", "commitsDetails": [], "commits": {}, "ttf": 287.0002777777778, "created": "2016-12-20 17:36:21", "user": "yourpalal", "body": "A relatively simple query is causing me some major headaches! It's easy enough to rewrite this query to get it to work, but I cannot figure out why it's returning the wrong results in the first place.\r\n\r\n- Neo4j version: 3.0.1-enterprise (via Docker)\r\n- Ubuntu 14.04\r\n- cypher query via browser interface\r\n\r\n# Steps to reproduce\r\n\r\nUnfortunately, this doesn't actually reproduce the issue :( I have no clue why not\r\n\r\n```sql\r\nCREATE p=(n:Titled {matchable_title: \"left\"})-[:of_group]->(g:Group)<-[:of_group]-(m:Titled {matchable_title: \"right\"})\r\nRETURN p;\r\n\r\nCREATE p=(n:Titled {matchable_title: \"same\"})-[:of_group]->(g:Group)<-[:of_group]-(m:Titled {matchable_title: \"same\"})\r\nRETURN p;\r\n\r\nCREATE INDEX ON :Titled(matchable_title);\r\n```\r\n\r\n```sql\r\nMATCH p=(n:Titled)-[:of_group]-(g)-[:of_group]-(m:Titled)\r\nWHERE m.matchable_title = n.matchable_title\r\nRETURN m.matchable_title, n.matchable_title, p LIMIT 25;\r\n```\r\n\r\n# Expected behavior\r\n\r\nFor each row of results, m.matchable_title will be the same as n.matchable_title\r\n\r\n# Actual behavior\r\n\r\nn.matchable_title and m.matchable_title do not match. According to PROFILE, the query starts with a NodeIndexScan to find `m`. There are multiple different values for m.matchable_title across different rows (as expected). Some of the returned nodes should be in the result set (although the row is wrong, n/m should appear in rows in the correct results) but some m/n nodes would not appear in the correct results.\r\n\r\nInterestingly, although the query plan is not the same, the rows are returned in the same order as when the WHERE clause is removed.\r\n\r\nIt seems like n is found by an index scan, but the index values are not being checked, or something like that. If I remove the index on matchable_title, then the query starts with a NodeByLabelScan and then proceeds correctly. Adding the index back again results in incorrect rows. If I try to specify to use the matchable_title index, neo4j complains that this is not allowed.\r\n\r\nThe query can be corrected in many different ways. One example is to add  a WITH clause:\r\n\r\n\r\n```sql\r\nMATCH p=(n:Titled)-[:of_group]-(g)-[:of_group]-(m:Titled)\r\nWITH p, n, m\r\nWHERE m.matchable_title = n.matchable_title\r\nRETURN m.matchable_title, n.matchable_title, p LIMIT 25;\r\n```\r\n\r\nThis causes the query plan to change, starting with NodeByLabelScan, then expanding and filtering. This query produces correct results.\r\n"}, {"labels": ["3.1", "bug"], "url": "https://github.com/neo4j/neo4j/issues/8502", "title": "Cannot start Neo4J instance with 3.1.0", "closed": "2016-12-13 10:16:27", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2016-12-12 16:04:16", "user": "rh78", "body": "- Neo4j version: 3.1.0\r\n- Operating system: Windows 10 \r\n- API/Driver: Java via Maven (enterprise)\r\n\r\nThe bug does not occur with 3.0.4 version\r\n\r\nWhen launching in HighAvailability setup:\r\n\r\n```\r\njava.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory, \\...\\Data\\db_graph\\graph.db\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:193)\r\n\tat org.neo4j.kernel.ha.HighlyAvailableGraphDatabase.<init>(HighlyAvailableGraphDatabase.java:43)\r\n\tat org.neo4j.graphdb.factory.HighlyAvailableGraphDatabaseFactory.lambda$createDatabaseCreator$0(HighlyAvailableGraphDatabaseFactory.java:54)\r\n\tat org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:183)\r\n...\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:497)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleElement.invoke(InitDestroyAnnotationBeanPostProcessor.java:366)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor$LifecycleMetadata.invokeInitMethods(InitDestroyAnnotationBeanPostProcessor.java:311)\r\n\tat org.springframework.beans.factory.annotation.InitDestroyAnnotationBeanPostProcessor.postProcessBeforeInitialization(InitDestroyAnnotationBeanPostProcessor.java:134)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:408)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1575)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:553)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:296)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:207)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1131)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1059)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor$AutowiredFieldElement.inject(AutowiredAnnotationBeanPostProcessor.java:589)\r\n\tat org.springframework.beans.factory.annotation.InjectionMetadata.inject(InjectionMetadata.java:88)\r\n\tat org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor.postProcessPropertyValues(AutowiredAnnotationBeanPostProcessor.java:370)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.populateBean(AbstractAutowireCapableBeanFactory.java:1219)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:551)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:482)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory$1.getObject(AbstractBeanFactory.java:306)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:230)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:302)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:197)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:754)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:866)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:542)\r\n\tat org.springframework.context.annotation.AnnotationConfigApplicationContext.<init>(AnnotationConfigApplicationContext.java:84)\r\n\tat com.contidio.metadataapi.SpringRunner.main(SpringRunner.java:19)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.cluster.client.ClusterJoin@3f2dc58f' was successfully initialized, but failed to start. Please see attached cause exception.\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:443)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:433)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:189)\r\n\t... 39 more\r\nCaused by: java.util.concurrent.TimeoutException: Conversation-response mapping:\r\n{1/13#=ResponseFuture{conversationId='1/13#', initiatedByMessageType=join, response=null}}\r\n\tat org.neo4j.cluster.statemachine.StateMachineProxyFactory$ResponseFuture.get(StateMachineProxyFactory.java:315)\r\n\tat org.neo4j.cluster.client.ClusterJoin.joinByConfig(ClusterJoin.java:143)\r\n\tat org.neo4j.cluster.client.ClusterJoin.start(ClusterJoin.java:82)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:433)\r\n\t... 43 more\r\n```"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/8497", "title": "Performance degrades when using multiple synchronous write statements", "closed": "2017-01-09 12:10:38", "commitsDetails": [], "commits": {}, "ttf": 27.00027777777778, "created": "2016-12-12 13:00:32", "user": "inadler", "body": "Sending 1000 synchronous write statements - \"create (n:Person {id:<id>})\" - takes several seconds.\r\nJust to be clear, sending the statements takes several msec, but consuming them takes several seconds (~3).\r\n\r\nEven more, while adding more running threads (each thread run 1000 synchronous statement), the results degrades.\r\n\r\nWe got the same result when using both the Bolt driver and an HTTP client.  \r\n \r\nTaking a look at the server threads dump, there are many threads waiting to get released from lock and some blocked. \r\nBellow is n example of what we have seen:\r\n\r\n```\r\nqtp91329346-247152\" #247152 prio=5 os_prio=0 tid=0x00007f89b8001800 nid=0x24dd runnable [0x00007f8990dfa000]\r\n   java.lang.Thread.State: TIMED_WAITING (parking)\r\n        at sun.misc.Unsafe.park(Native Method)\r\n        - parking to wait for  <0x00000000a7574320> (a java.util.concurrent.locks.ReentrantLock$NonfairSync)\r\n        at java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.doAcquireNanos(AbstractQueuedSynchronizer.java:934)\r\n        at java.util.concurrent.locks.AbstractQueuedSynchronizer.tryAcquireNanos(AbstractQueuedSynchronizer.java:1247)\r\n        at java.util.concurrent.locks.ReentrantLock.tryLock(ReentrantLock.java:442)\r\n        at org.neo4j.concurrent.WorkSync.apply(WorkSync.java:86)\r\n        at org.neo4j.kernel.impl.transaction.command.IndexBatchTransactionApplier.close(IndexBatchTransactionApplier.java:105)\r\n        at org.neo4j.kernel.impl.api.BatchTransactionApplierFacade.close(BatchTransactionApplierFacade.java:70)\r\n        at org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.apply(RecordStorageEngine.java:348)\r\n        at org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.applyToStore(TransactionRepresentationCommitProcess.java:78)\r\n        at org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.commit(TransactionRepresentationCommitProcess.java:51)\r\n        at org.neo4j.kernel.impl.api.KernelTransactionImplementation.commit(KernelTransactionImplementation.java:585)\r\n        at org.neo4j.kernel.impl.api.KernelTransactionImplementation.close(KernelTransactionImplementation.java:463)\r\n        at org.neo4j.server.rest.transactional.TransitionalTxManagementKernelTransaction.commit(TransitionalTxManagementKernelTransaction.java:94)\r\n        at org.neo4j.server.rest.transactional.TransactionHandle.closeContextAndCollectErrors(TransactionHandle.java:245)\r\n        at org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:153)\r\n        at org.neo4j.server.rest.web.TransactionalService.lambda$executeStatementsAndCommit$1(TransactionalService.java:211)\r\n        at org.neo4j.server.rest.web.TransactionalService$$Lambda$231/167727069.write(Unknown Source)\r\n        at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\r\n        at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\r\n        at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302)\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510)\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\r\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\r\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\r\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\r\n        at org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\r\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\r\n        at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:497)\r\n```\r\n\r\nCan it be the cause?\r\nOr is it a known issue you have when writing \"bulk\" of statements instead of using transactions?\r\n\r\nI am using a single node of Neo4j v3.0.7 running on a Linux OS with a 64 cores machine and 128 GB of RAM so this is not the problem..\r\nI tried both the JAVA Bolt driver and my own HTTP client. "}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8485", "title": "cypher statement failing - Unknown identifier `  INTERNAL_AGGREGATE8d07c913", "closed": "2017-10-04 12:33:20", "commitsDetails": [], "commits": {}, "ttf": 301.0002777777778, "created": "2016-12-07 10:12:39", "user": "Infiniverse", "body": "The attached statement does not run on Neo4j 2.3.x (tested on 2.3.8), and instead issues warnings:\r\n\r\n    WARNING: Unknown identifier `  INTERNAL_AGGREGATE8d07c913-1eb3-4574-b62b-b2a9dddbd42c`.\r\n    Unknown identifier `  INTERNAL_AGGREGATE4ea6739e-f25a-4f19-b099-60519ff03cd1`.\r\n    Unknown identifier `  AGGREGATION498`.\r\n    Unknown identifier `billUK`.\r\n    Unknown identifier `billMobile`.\r\n    Unknown identifier `billInternational`.\r\n    Unknown identifier `  INTERNAL_AGGREGATEca8affd6-a1f2-47a3-b395-155727b9e713`.\r\n    Unknown identifier `  INTERNAL_AGGREGATEb4bf602f-803d-474e-9362-580a25153846`.\r\n\r\nThe statement is:\r\n\r\n    WITH \"2016-11\" AS month, \"November\" as monthName\r\n    MATCH (s:Source),(p:PhoneLine)--(so:SalesOrder)--(i:Invoiceable { state: \"DRAFT\"})\r\n    WHERE s.src = p.msisdn\r\n    WITH month, monthName, so, s, i, so.phone_callingPlan = \"PAYT\" AS billUK, NOT     HAS(so.boltOns_mobile) AS billMobile, NOT HAS(so.boltOns_international) AS billInternational\r\n    WITH month, monthName, so, s, i, billUK, billMobile, billInternational\r\n    MATCH (s)--(c:Call)--(ch:Charge)--(t:Tariff)\r\n    WHERE c.start STARTS WITH month\r\n    WITH monthName, s, i, t.type AS type, COUNT(c) AS calls, SUM(ch.total) AS chargePence, SUM(c.billsec) AS seconds, ROUND(10 * SUM(TOFLOAT(c.billsec))/60)/10 AS minutes, CASE\r\n    WHEN t.type = \"UK Landline\" AND NOT billUK THEN FALSE\r\n    WHEN t.type = \"UK Mobile\" AND NOT billMobile THEN FALSE\r\n    WHEN t.type = \"International\" AND NOT billInternational THEN FALSE\r\n    ELSE true\r\n    END AS chargeable\r\n    WITH monthName, s, i, type, calls, CASE chargeable WHEN TRUE THEN chargePence ELSE 0 END AS chargePence, seconds, minutes\r\n    WITH monthName, type, i, \"0\" + RIGHT(s.src, SIZE(s.src) - 2) + \": \" + calls + \" calls, lasting \" + minutes + \" minutes.\" as desc, chargePence / 100 AS charge\r\n    CREATE (i)-[:HAS_LINEITEM]->(item:LineItem:_LineItem { title: \"Phone Calls: \" + type + \" (\" + monthName + \")\" })\r\n    SET item.id = 101\r\n    SET item.price = charge\r\n    SET item.description = desc\r\n    SET item.frequency = \"MONTHLY\"\r\n    SET item.type = \"TELEPHONY\"\r\n    RETURN item;\r\n\r\nIt does issues the same warning when run with PROFILE, and emits no profile information.\r\n\r\nWhen I remove the second WITH:\r\n\r\n        WITH month, monthName, so, s, i, so.phone_callingPlan = \"PAYT\" AS billUK, NOT     HAS(so.boltOns_mobile) AS billMobile, NOT HAS(so.boltOns_international) AS billInternational\r\n        WITH month, monthName, so, s, i, billUK, billMobile, billInternational\r\n\r\nThe statement runs fine.\r\n\r\nIs this a bug?\r\n"}, {"labels": ["3.1", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8463", "title": "USING INDEX causes error even though property value comparisons are now supported", "closed": "2017-01-11 14:22:18", "commitsDetails": [], "commits": {}, "ttf": 41.000277777777775, "created": "2016-11-30 23:23:23", "user": "astrosam", "body": "Neo4j version: 3.1.0-M13-beta3\r\nOperating system: OSX (10.11.6)\r\nUsing the neo4j browser\r\n\r\n**Steps to reproduce**\r\n1. Create an index:\r\n\r\n       CREATE INDEX ON :Foo(id)\r\n\r\n2. Execute query below, and look at profile results (you should see that the index is used when comparing the property values `f.id` and `row.id`):\r\n\r\n       PROFILE\r\n       WITH {id: 123} AS row\r\n       MATCH (f:Foo {id: row.id})\r\n       RETURN f\r\n\r\n3. Execute query below (which simply adds an appropriate `USING INDEX` clause), and observe that it causes error message:\r\n\r\n       PROFILE\r\n       WITH {id: 123} AS row\r\n       MATCH (f:Foo {id: row.id})\r\n       USING INDEX f:Foo(id)\r\n       RETURN f\r\n\r\n- Expected behavior: #2 and #3 should cause essentially same profile. Certainly, #3 should not cause error.\r\n\r\n- Actual behavior: #3 causes error, presumably because of comparison between 2 properties."}, {"labels": ["bolt server", "bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/8435", "title": "'beginning implicit transaction' cannot be done when a session is in the 'IN_TRANSACTION' state.", "closed": "2018-10-02 09:05:22", "commitsDetails": [], "commits": {}, "ttf": 675.0002777777778, "created": "2016-11-25 13:37:44", "user": "cipacda", "body": "- Neo4j version: 3.0.6\r\n- Operating system: Windows 8 and 10\r\n- API/Driver: Neo4j Javascript driver - neo4j-driver@1.1.0-M02\r\n\r\n##Steps to reproduce##\r\nRun two sessions updating the same node at the same time. \r\n\r\nWhat I am doing is having an asynchronous neo4j endpoint that returns before it finishes adding a relation to a specific node and then immediately I have another synchronous endpoint called that adds another relation to that node, both actions being executed inside a transaction.\r\n\r\n##Expected behavior##\r\nTo get a deadlock error on the second query and then when I am retrying the transaction for it to succeed.\r\n\r\n##Actual behavior##\r\nI am getting a deadlock on the 4th query inside my transaction and then when I am retrying the transaction (by creating a new one with the same queries) I get the following: {\"code\":\"Neo.ClientError.Request.Invalid\",\"message\":\"'beginning implicit transaction' cannot be done when a session is in the 'IN_TRANSACTION' state.\"}\r\n\r\n##Additional comments##\r\nThis is my code with sensitive data taken out: \r\n```\r\nfunction transactionFunction(txn: any)  {\r\n\r\n   return txn.run(query1)\r\n     .then(_ => { return txn.run(query2); })\r\n     .then(_ => { return txn.run(query3); })\r\n     .then(_ => { return txn.run(query4); })\r\n}\r\n\r\nexport function runInsideTransaction(session, runFunction: (txn) => Promise<any>): Promise<any> {\r\n    function retry(times: number): Promise<any> {\r\n        car result;\r\n        var txn = createTransaction(session);\r\n        return new Promise((resolve, reject) => {\r\n            runFunction(txn)\r\n                .then(response => {\r\n                    result = response;\r\n                    return commitTransaction(txn);\r\n                })\r\n                .then(() => {\r\n                    resolve(result);\r\n                })\r\n                .catch((error) => {\r\n                    // We should retry deadlocks\r\n                    var code = (error.fields && error.fields[0]) ? error.fields[0].code : null;\r\n                    if (times > 0 && code && code.indexOf('Neo.TransientError.Transaction.DeadlockDetected') > -1) {\r\n                            retry(times - 1)\r\n                                .then(response => {\r\n                                    resolve(response);\r\n                                })\r\n                                .catch(e => {\r\n                                    reject(e);\r\n                                });\r\n                        });\r\n                    } else {\r\n                        reject(error);\r\n                    }\r\n                });\r\n        });\r\n    }\r\n    \r\n    return retry(5);\r\n}\r\n\r\nrunInsideTransaction(session, transactionFunction);\r\n```\r\n\r\n\r\nI am creating a session that outside that is only used here and I have logged everything and the _hasTx property of the session is false when we try the transaction the second time.\r\n\r\nI have looked at the source code of the javascript driver and did not find this error which makes me believe this is actually a Neo4J bug?\r\n\r\nI have reported this on the neo4j-driver repo as well.\r\n\r\nAnyone has any thoughts?"}, {"labels": ["bug", "team-kernel", "tools"], "url": "https://github.com/neo4j/neo4j/issues/8419", "title": "Neo4j-import error", "closed": "2019-12-10 15:04:13", "commitsDetails": [], "commits": {}, "ttf": 1112.0002777777777, "created": "2016-11-22 16:12:18", "user": "Ming-Lei", "body": "## Question\r\n\r\nthere are three nodes.csv(3.5G).\r\nfollow the docs of import tool, I started importing data to neo4j(3.0.7).\r\nIt's normal to start. but when the node reaches 2.24 GB, an error has occurred.\r\n\r\n[>:2|PROPER|NODE:2.24 GB----------------|*LABEL SCAN--------------------------|v:9.24 MB/s----] 299M \r\nDone in 28m 39s 72ms \r\nImport error: null \r\nCaused by:null \r\njava.lang.NullPointerException...\r\n\r\nthe import task is not completed yet, but it has already dropped out.\r\nthe next step is prepare node index, but it occurred an error.\r\nwhat caused the problem and how to fix it.\r\n\r\neach nodes.csv is correct, because the single nodes not found the import error\r\n\r\nthe nodes like this\r\ncompany.csv\r\ncompanyId:ID(Company-ID)\r\n1\r\n2\r\n3\r\n\r\ngeti.csv\r\ngetiId:ID(Geti-ID)\r\n100\r\n101\r\n102\r\n\r\nperson.csv\r\npersonId:ID(Person-ID)\r\n1000\r\n1001\r\n1002\r\n1003\r\n\r\nall files are only ID, no other fields.\r\nall configurations are default."}, {"labels": ["3.1", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/8387", "title": "Race condition in init script first run can corrupt database", "closed": "2017-01-09 12:37:56", "commitsDetails": [], "commits": {}, "ttf": 53.000277777777775, "created": "2016-11-17 10:42:02", "user": "heavydawson", "body": "We've written a Chef cookbook to manage our Neo4J instances. There are Chef resources defined for:\r\n1. The configuration template\r\n2. The init script template\r\n3. The Neo4J service\r\n\r\nThe service is configured to start if not already running, but also to restart if the contents of the init script or configuration file change.\r\nUnder normal running operations, this isn't a problem. However, on the initial run, the following happens:\r\n1. The service is not yet started, so a service start is called\r\n2. The config is laid down for the first time (considered a content change), which triggers a service restart\r\n3. The init script is laid down for the first time (also a content change), which triggers a service restart\r\n\r\nThe service restarts triggered by (2) and (3) are condensed into a single \"restart\" operation. However, this runs immediately after the initial call to \"start\". This means the server is restarted as it is being started up for the first time. That in turn appears to corrupt the DB, leading the following error in neo4j.log:\r\n\r\n```\r\n2016-11-17 09:52:45.100+0000 INFO  Starting...\r\n2016-11-17 09:52:50.654+0000 INFO  Starting...\r\n2016-11-17 09:52:52.573+0000 ERROR Failed to start Neo4j: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@761f7aaa' was successfully initialized, but failed to start. Please see attached cause exception. Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@761f7aaa' was successfully initialized, but failed to start. Please see attached cause exception.\r\norg.neo4j.server.ServerStartupException: Starting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@761f7aaa' was successfully initialized, but failed to start. Please see attached cause exception.\r\n\tat org.neo4j.server.exception.ServerStartupErrors.translateToServerStartupError(ServerStartupErrors.java:68)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:227)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:91)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:68)\r\n\tat org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:28)\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.server.database.LifecycleManagingDatabase@761f7aaa' was successfully initialized, but failed to start. Please see attached cause exception.\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:443)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:199)\r\n\t... 3 more\r\nCaused by: java.lang.RuntimeException: Error starting org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory, /data/neo4j/data/databases/graph.db\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:193)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:124)\r\n\tat org.neo4j.server.CommunityNeoServer.lambda$static$0(CommunityNeoServer.java:57)\r\n\tat org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:89)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:433)\r\n\t... 5 more\r\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.NeoStoreDataSource@7fe9905d' was successfully initialized, but failed to start. Please see attached cause exception.\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:443)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:100)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:433)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:189)\r\n\t... 9 more\r\nCaused by: java.lang.NullPointerException\r\n\tat org.neo4j.kernel.impl.store.format.BaseRecordFormat.lambda$static$0(BaseRecordFormat.java:43)\r\n\tat org.neo4j.kernel.impl.store.format.BaseRecordFormat.getRecordSize(BaseRecordFormat.java:64)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.determineRecordSize(CommonAbstractStore.java:776)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.extractHeaderRecord(CommonAbstractStore.java:292)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.loadStorage(CommonAbstractStore.java:251)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.initialise(CommonAbstractStore.java:134)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.initialize(NeoStores.java:237)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.createDynamicArrayStore(NeoStores.java:514)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.createDynamicArrayStore(NeoStores.java:504)\r\n\tat org.neo4j.kernel.impl.store.StoreType$1.open(StoreType.java:37)\r\n\tat org.neo4j.kernel.impl.store.StoreType$1.open(StoreType.java:32)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.openStore(NeoStores.java:230)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.getOrCreateStore(NeoStores.java:275)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.<init>(NeoStores.java:142)\r\n\tat org.neo4j.kernel.impl.store.StoreFactory.openNeoStores(StoreFactory.java:169)\r\n\tat org.neo4j.kernel.impl.store.StoreFactory.openAllNeoStores(StoreFactory.java:133)\r\n\tat org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.<init>(RecordStorageEngine.java:214)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.buildStorageEngine(NeoStoreDataSource.java:587)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:451)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:433)\r\n\t... 14 more\r\n```\r\nand the following in the debug log:\r\n\r\n```\r\n2016-11-17 09:52:45.521+0000 INFO  [o.n.k.i.f.CommunityEditionModule] No locking implementation specified, defaulting to 'community'\r\n2016-11-17 09:52:46.151+0000 INFO  [o.n.k.AvailabilityGuard] Requirement makes database unavailable: Database available\r\n2016-11-17 09:52:46.284+0000 INFO  [o.n.k.i.DiagnosticsManager] --- INITIALIZED diagnostics START ---\r\n2016-11-17 09:52:46.284+0000 INFO  [o.n.k.i.DiagnosticsManager] Neo4j Kernel properties:\r\n2016-11-17 09:52:46.285+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.connector.http.enabled=true\r\n2016-11-17 09:52:46.285+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.security.auth_enabled=true\r\n2016-11-17 09:52:46.294+0000 INFO  [o.n.k.i.DiagnosticsManager] metrics.enabled=true\r\n2016-11-17 09:52:46.294+0000 INFO  [o.n.k.i.DiagnosticsManager] unsupported.dbms.directories.neo4j_home=/opt/neo4j-community\r\n2016-11-17 09:52:46.294+0000 INFO  [o.n.k.i.DiagnosticsManager] metrics.csv.interval=30s\r\n2016-11-17 09:52:46.294+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.logs.http.enabled=true\r\n2016-11-17 09:52:46.294+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.directories.data=/data/neo4j/data\r\n2016-11-17 09:52:46.294+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.logs.gc.enabled=true\r\n2016-11-17 09:52:46.295+0000 INFO  [o.n.k.i.DiagnosticsManager] unsupported.dbms.edition=community\r\n2016-11-17 09:52:46.295+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.directories.metrics=/data/neo4j/metrics\r\n2016-11-17 09:52:46.295+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.directories.logs=/var/log/neo4j\r\n2016-11-17 09:52:46.300+0000 INFO  [o.n.k.i.DiagnosticsManager] metrics.csv.enabled=true\r\n2016-11-17 09:52:46.300+0000 INFO  [o.n.k.i.DiagnosticsManager] Diagnostics providers:\r\n2016-11-17 09:52:46.301+0000 INFO  [o.n.k.i.DiagnosticsManager] org.neo4j.kernel.configuration.Config\r\n2016-11-17 09:52:46.301+0000 INFO  [o.n.k.i.DiagnosticsManager] org.neo4j.kernel.info.DiagnosticsManager\r\n2016-11-17 09:52:46.301+0000 INFO  [o.n.k.i.DiagnosticsManager] SYSTEM_MEMORY\r\n2016-11-17 09:52:46.301+0000 INFO  [o.n.k.i.DiagnosticsManager] JAVA_MEMORY\r\n2016-11-17 09:52:46.312+0000 INFO  [o.n.k.i.DiagnosticsManager] OPERATING_SYSTEM\r\n2016-11-17 09:52:46.312+0000 INFO  [o.n.k.i.DiagnosticsManager] JAVA_VIRTUAL_MACHINE\r\n2016-11-17 09:52:46.312+0000 INFO  [o.n.k.i.DiagnosticsManager] CLASSPATH\r\n2016-11-17 09:52:46.312+0000 INFO  [o.n.k.i.DiagnosticsManager] LIBRARY_PATH\r\n2016-11-17 09:52:46.312+0000 INFO  [o.n.k.i.DiagnosticsManager] SYSTEM_PROPERTIES\r\n2016-11-17 09:52:46.312+0000 INFO  [o.n.k.i.DiagnosticsManager] LINUX_SCHEDULERS\r\n2016-11-17 09:52:46.312+0000 INFO  [o.n.k.i.DiagnosticsManager] NETWORK\r\n2016-11-17 09:52:46.313+0000 INFO  [o.n.k.i.DiagnosticsManager] System memory information:\r\n2016-11-17 09:52:46.314+0000 INFO  [o.n.k.i.DiagnosticsManager] Total Physical memory: 3.75 GB\r\n2016-11-17 09:52:46.316+0000 INFO  [o.n.k.i.DiagnosticsManager] Free Physical memory: 2.24 GB\r\n2016-11-17 09:52:46.331+0000 INFO  [o.n.k.i.DiagnosticsManager] Committed virtual memory: 2.32 GB\r\n2016-11-17 09:52:46.331+0000 INFO  [o.n.k.i.DiagnosticsManager] Total swap space: 0.00 B\r\n2016-11-17 09:52:46.331+0000 INFO  [o.n.k.i.DiagnosticsManager] Free swap space: 0.00 B\r\n2016-11-17 09:52:46.332+0000 INFO  [o.n.k.i.DiagnosticsManager] JVM memory information:\r\n2016-11-17 09:52:46.333+0000 INFO  [o.n.k.i.DiagnosticsManager] Free  memory: 32.66 MB\r\n2016-11-17 09:52:46.334+0000 INFO  [o.n.k.i.DiagnosticsManager] Total memory: 58.00 MB\r\n2016-11-17 09:52:46.334+0000 INFO  [o.n.k.i.DiagnosticsManager] Max   memory: 928.00 MB\r\n2016-11-17 09:52:46.344+0000 INFO  [o.n.k.i.DiagnosticsManager] Garbage Collector: Copy: [Eden Space, Survivor Space]\r\n2016-11-17 09:52:46.344+0000 INFO  [o.n.k.i.DiagnosticsManager] Garbage Collector: MarkSweepCompact: [Eden Space, Survivor Space, Tenured Gen]\r\n2016-11-17 09:52:46.345+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Code Cache (Non-heap memory): committed=3.50 MB, used=3.48 MB, max=240.00 MB, threshold=0.00 B\r\n2016-11-17 09:52:46.346+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Metaspace (Non-heap memory): committed=11.38 MB, used=10.62 MB, max=-1.00 B, threshold=0.00 B\r\n2016-11-17 09:52:46.359+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Compressed Class Space (Non-heap memory): committed=1.63 MB, used=1.40 MB, max=1.00 GB, threshold=0.00 B\r\n2016-11-17 09:52:46.359+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Eden Space (Heap memory): committed=16.00 MB, used=11.38 MB, max=256.00 MB, threshold=?\r\n2016-11-17 09:52:46.359+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Survivor Space (Heap memory): committed=2.00 MB, used=2.00 MB, max=32.00 MB, threshold=?\r\n2016-11-17 09:52:46.360+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Tenured Gen (Heap memory): committed=40.00 MB, used=11.96 MB, max=640.00 MB, threshold=0.00 B\r\n2016-11-17 09:52:46.360+0000 INFO  [o.n.k.i.DiagnosticsManager] Operating system information:\r\n2016-11-17 09:52:46.362+0000 INFO  [o.n.k.i.DiagnosticsManager] Operating System: Linux; version: 2.6.18-308.8.2.el5xen; arch: amd64; cpus: 1\r\n2016-11-17 09:52:46.362+0000 INFO  [o.n.k.i.DiagnosticsManager] Max number of file descriptors: 159744\r\n2016-11-17 09:52:46.362+0000 INFO  [o.n.k.i.DiagnosticsManager] Number of open file descriptors: 91\r\n2016-11-17 09:52:46.376+0000 INFO  [o.n.k.i.DiagnosticsManager] Process id: 5015@ip-10-212-188-24.us-west-2.compute.internal\r\n2016-11-17 09:52:46.376+0000 INFO  [o.n.k.i.DiagnosticsManager] Byte order: LITTLE_ENDIAN\r\n2016-11-17 09:52:46.376+0000 INFO  [o.n.k.i.DiagnosticsManager] Local timezone: UTC\r\n2016-11-17 09:52:46.376+0000 INFO  [o.n.k.i.DiagnosticsManager] JVM information:\r\n2016-11-17 09:52:46.376+0000 INFO  [o.n.k.i.DiagnosticsManager] VM Name: Java HotSpot(TM) 64-Bit Server VM\r\n2016-11-17 09:52:46.376+0000 INFO  [o.n.k.i.DiagnosticsManager] VM Vendor: Oracle Corporation\r\n2016-11-17 09:52:46.376+0000 INFO  [o.n.k.i.DiagnosticsManager] VM Version: 25.92-b14\r\n2016-11-17 09:52:46.377+0000 INFO  [o.n.k.i.DiagnosticsManager] JIT compiler: HotSpot 64-Bit Tiered Compilers\r\n2016-11-17 09:52:46.377+0000 INFO  [o.n.k.i.DiagnosticsManager] VM Arguments: [-Xloggc:/var/log/neo4j/gc.log, -XX:+UseGCLogFileRotation, -XX:NumberOfGCLogFiles=5, -XX:GCLogFileSize=20m, -XX:+PrintGCDetails, -XX:+PrintGCDateStamps, -XX:+PrintGCApplicationStoppedTime, -XX:+PrintPromotionFailure, -XX:+PrintTenuringDistribution, -Dfile.encoding=UTF-8]\r\n2016-11-17 09:52:46.377+0000 INFO  [o.n.k.i.DiagnosticsManager] Java classpath:\r\n2016-11-17 09:52:46.393+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/lucene-analyzers-common-5.5.0.jar\r\n2016-11-17 09:52:46.393+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jersey-servlet-1.19.jar\r\n2016-11-17 09:52:46.394+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-configuration-1.10.jar\r\n2016-11-17 09:52:46.395+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-unsafe-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.395+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/scala-reflect-2.11.8.jar\r\n2016-11-17 09:52:46.395+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-bolt-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.395+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/jfr.jar\r\n2016-11-17 09:52:46.395+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jsr311-api-1.1.2.r612.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/jsse.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-servlet-9.2.9.v20150224.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/plugins/*\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/netty-all-4.0.40.Final.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/rhino-1.7R4.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-server-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-io-9.2.9.v20150224.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-util-9.2.9.v20150224.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/jaccess.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/zipfs.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/sunec.jar\r\n2016-11-17 09:52:46.396+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-frontend-3.0-3.0.6.jar\r\n2016-11-17 09:52:46.400+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-lang-2.6.jar\r\n2016-11-17 09:52:46.400+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-kernel-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.400+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/sunrsasign.jar\r\n2016-11-17 09:52:46.400+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-lucene-index-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.400+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-webapp-9.2.9.v20150224.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/server-api-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-io-2.4.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jersey-multipart-1.19.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/caffeine-2.3.3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/bcpkix-jdk15on-1.53.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/classes\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-beanutils-1.8.3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-csv-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-browser-2.0.0-M06.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-graph-algo-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-dbms-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/localedata.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-resource-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-frontend-3.1-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-security-9.2.9.v20150224.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/conf/\r\n2016-11-17 09:52:46.401+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-compiler-3.0-3.0.6.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/opencsv-2.3.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-udc-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jackson-mapper-asl-1.9.13.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/bcprov-jdk15on-1.53.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/jce.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/parboiled-core-1.1.7.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-frontend-2.3-2.3.7.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-codegen-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-lucene-upgrade-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-xml-9.2.9.v20150224.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-server-9.2.9.v20150224.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/lucene-queryparser-5.5.0.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/scala-library-2.11.8.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/asm-5.0.4.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-compress-1.12.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/jfxrt.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/nashorn.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/charsets.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-graphdb-api-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.402+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-command-line-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.403+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jersey-server-1.19.jar\r\n2016-11-17 09:52:46.403+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/mimepull-1.9.3.jar\r\n2016-11-17 09:52:46.403+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-compiler-2.3-2.3.7.jar\r\n2016-11-17 09:52:46.403+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-consistency-check-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.409+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-http-9.2.9.v20150224.jar\r\n2016-11-17 09:52:46.409+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/sunpkcs11.jar\r\n2016-11-17 09:52:46.409+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jline-2.12.jar\r\n2016-11-17 09:52:46.409+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-common-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.409+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/lucene-codecs-5.5.0.jar\r\n2016-11-17 09:52:46.409+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/concurrentlinkedhashmap-lru-1.4.2.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-digester-2.1.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-compiler-3.1-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/parboiled-scala_2.11-1.1.7.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-jmx-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-graph-matching-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/lucene-core-5.5.0.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-logging-1.1.1.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/rt.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/javax.servlet-api-3.1.0.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jersey-core-1.19.jar\r\n2016-11-17 09:52:46.410+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-security-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.432+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/dnsns.jar\r\n2016-11-17 09:52:46.432+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jackson-jaxrs-1.9.13.jar\r\n2016-11-17 09:52:46.434+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jackson-core-asl-1.9.13.jar\r\n2016-11-17 09:52:46.444+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-shell-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-logging-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/plugins/\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/sunjce_provider.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-collections-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-lang3-3.3.2.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/resources.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/cldrdata.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-primitive-collections-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-io-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-import-tool-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager] Library path:\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager] /usr/java/packages/lib/amd64\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager] /usr/lib64\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager] /lib64\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager] /lib\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager] /usr/lib\r\n2016-11-17 09:52:46.445+0000 INFO  [o.n.k.i.DiagnosticsManager] System.properties:\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.boot.library.path = /usr/java/jre1.8.0_92/lib/amd64\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] path.separator = :\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] file.encoding.pkg = sun.io\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] user.country = US\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.java.launcher = SUN_STANDARD\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.os.patch.level = unknown\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] user.dir = /\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.jnu.encoding = UTF-8\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.management.compiler = HotSpot 64-Bit Tiered Compilers\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] user.home = /root\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] user.timezone = UTC\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] file.encoding = UTF-8\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] user.name = root\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.java.command = org.neo4j.server.CommunityEntryPoint --home-dir=/opt/neo4j-community --config-dir=/opt/neo4j-community/conf\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.arch.data.model = 64\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] user.language = en\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] awt.toolkit = sun.awt.X11.XToolkit\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] file.separator = /\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.io.unicode.encoding = UnicodeLittle\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.cpu.endian = little\r\n2016-11-17 09:52:46.446+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.cpu.isalist =\r\n2016-11-17 09:52:46.447+0000 INFO  [o.n.k.i.DiagnosticsManager] Linux scheduler information:\r\n2016-11-17 09:52:46.467+0000 INFO  [o.n.k.i.DiagnosticsManager] [noop] anticipatory deadline cfq\r\n2016-11-17 09:52:46.467+0000 INFO  [o.n.k.i.DiagnosticsManager] [noop] anticipatory deadline cfq\r\n2016-11-17 09:52:46.467+0000 INFO  [o.n.k.i.DiagnosticsManager] Network information:\r\n2016-11-17 09:52:46.476+0000 INFO  [o.n.k.i.DiagnosticsManager] Interface eth0:\r\n2016-11-17 09:52:46.476+0000 INFO  [o.n.k.i.DiagnosticsManager]     address: 10.212.188.24\r\n2016-11-17 09:52:46.477+0000 INFO  [o.n.k.i.DiagnosticsManager] Interface lo:\r\n2016-11-17 09:52:46.477+0000 INFO  [o.n.k.i.DiagnosticsManager]     address: 127.0.0.1\r\n2016-11-17 09:52:46.477+0000 INFO  [o.n.k.i.DiagnosticsManager] --- INITIALIZED diagnostics END ---\r\n2016-11-17 09:52:47.351+0000 INFO  [o.n.k.i.s.f.RecordFormatSelector] Selected format 'RecordFormat:StandardV3_0[v0.A.7]' for the new store\r\n2016-11-17 09:52:51.196+0000 INFO  [o.n.k.i.f.CommunityEditionModule] No locking implementation specified, defaulting to 'community'\r\n2016-11-17 09:52:51.786+0000 INFO  [o.n.k.AvailabilityGuard] Requirement makes database unavailable: Database available\r\n2016-11-17 09:52:51.825+0000 INFO  [o.n.k.i.DiagnosticsManager] --- INITIALIZED diagnostics START ---\r\n2016-11-17 09:52:51.825+0000 INFO  [o.n.k.i.DiagnosticsManager] Neo4j Kernel properties:\r\n2016-11-17 09:52:51.825+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.connector.http.enabled=true\r\n2016-11-17 09:52:51.825+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.security.auth_enabled=true\r\n2016-11-17 09:52:51.825+0000 INFO  [o.n.k.i.DiagnosticsManager] metrics.enabled=true\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] unsupported.dbms.directories.neo4j_home=/opt/neo4j-community\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] metrics.csv.interval=30s\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.logs.http.enabled=true\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.directories.data=/data/neo4j/data\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.logs.gc.enabled=true\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] unsupported.dbms.edition=community\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.directories.metrics=/data/neo4j/metrics\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] dbms.directories.logs=/var/log/neo4j\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] metrics.csv.enabled=true\r\n2016-11-17 09:52:51.826+0000 INFO  [o.n.k.i.DiagnosticsManager] Diagnostics providers:\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] org.neo4j.kernel.configuration.Config\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] org.neo4j.kernel.info.DiagnosticsManager\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] SYSTEM_MEMORY\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] JAVA_MEMORY\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] OPERATING_SYSTEM\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] JAVA_VIRTUAL_MACHINE\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] CLASSPATH\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] LIBRARY_PATH\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] SYSTEM_PROPERTIES\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] LINUX_SCHEDULERS\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] NETWORK\r\n2016-11-17 09:52:51.827+0000 INFO  [o.n.k.i.DiagnosticsManager] System memory information:\r\n2016-11-17 09:52:51.837+0000 INFO  [o.n.k.i.DiagnosticsManager] Total Physical memory: 3.75 GB\r\n2016-11-17 09:52:51.838+0000 INFO  [o.n.k.i.DiagnosticsManager] Free Physical memory: 2.25 GB\r\n2016-11-17 09:52:51.838+0000 INFO  [o.n.k.i.DiagnosticsManager] Committed virtual memory: 2.32 GB\r\n2016-11-17 09:52:51.838+0000 INFO  [o.n.k.i.DiagnosticsManager] Total swap space: 0.00 B\r\n2016-11-17 09:52:51.838+0000 INFO  [o.n.k.i.DiagnosticsManager] Free swap space: 0.00 B\r\n2016-11-17 09:52:51.838+0000 INFO  [o.n.k.i.DiagnosticsManager] JVM memory information:\r\n2016-11-17 09:52:51.838+0000 INFO  [o.n.k.i.DiagnosticsManager] Free  memory: 32.74 MB\r\n2016-11-17 09:52:51.839+0000 INFO  [o.n.k.i.DiagnosticsManager] Total memory: 58.00 MB\r\n2016-11-17 09:52:51.839+0000 INFO  [o.n.k.i.DiagnosticsManager] Max   memory: 928.00 MB\r\n2016-11-17 09:52:51.840+0000 INFO  [o.n.k.i.DiagnosticsManager] Garbage Collector: Copy: [Eden Space, Survivor Space]\r\n2016-11-17 09:52:51.840+0000 INFO  [o.n.k.i.DiagnosticsManager] Garbage Collector: MarkSweepCompact: [Eden Space, Survivor Space, Tenured Gen]\r\n2016-11-17 09:52:51.841+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Code Cache (Non-heap memory): committed=3.06 MB, used=3.02 MB, max=240.00 MB, threshold=0.00 B\r\n2016-11-17 09:52:51.841+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Metaspace (Non-heap memory): committed=11.13 MB, used=10.52 MB, max=-1.00 B, threshold=0.00 B\r\n2016-11-17 09:52:51.842+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Compressed Class Space (Non-heap memory): committed=1.63 MB, used=1.40 MB, max=1.00 GB, threshold=0.00 B\r\n2016-11-17 09:52:51.842+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Eden Space (Heap memory): committed=16.00 MB, used=11.61 MB, max=256.00 MB, threshold=?\r\n2016-11-17 09:52:51.842+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Survivor Space (Heap memory): committed=2.00 MB, used=2.00 MB, max=32.00 MB, threshold=?\r\n2016-11-17 09:52:51.842+0000 INFO  [o.n.k.i.DiagnosticsManager] Memory Pool: Tenured Gen (Heap memory): committed=40.00 MB, used=11.97 MB, max=640.00 MB, threshold=0.00 B\r\n2016-11-17 09:52:51.843+0000 INFO  [o.n.k.i.DiagnosticsManager] Operating system information:\r\n2016-11-17 09:52:51.852+0000 INFO  [o.n.k.i.DiagnosticsManager] Operating System: Linux; version: 2.6.18-308.8.2.el5xen; arch: amd64; cpus: 1\r\n2016-11-17 09:52:51.852+0000 INFO  [o.n.k.i.DiagnosticsManager] Max number of file descriptors: 159744\r\n2016-11-17 09:52:51.853+0000 INFO  [o.n.k.i.DiagnosticsManager] Number of open file descriptors: 91\r\n2016-11-17 09:52:51.853+0000 INFO  [o.n.k.i.DiagnosticsManager] Process id: 5090@ip-10-212-188-24.us-west-2.compute.internal\r\n2016-11-17 09:52:51.853+0000 INFO  [o.n.k.i.DiagnosticsManager] Byte order: LITTLE_ENDIAN\r\n2016-11-17 09:52:51.853+0000 INFO  [o.n.k.i.DiagnosticsManager] Local timezone: UTC\r\n2016-11-17 09:52:51.853+0000 INFO  [o.n.k.i.DiagnosticsManager] JVM information:\r\n2016-11-17 09:52:51.853+0000 INFO  [o.n.k.i.DiagnosticsManager] VM Name: Java HotSpot(TM) 64-Bit Server VM\r\n2016-11-17 09:52:51.854+0000 INFO  [o.n.k.i.DiagnosticsManager] VM Vendor: Oracle Corporation\r\n2016-11-17 09:52:51.854+0000 INFO  [o.n.k.i.DiagnosticsManager] VM Version: 25.92-b14\r\n2016-11-17 09:52:51.854+0000 INFO  [o.n.k.i.DiagnosticsManager] JIT compiler: HotSpot 64-Bit Tiered Compilers\r\n2016-11-17 09:52:51.854+0000 INFO  [o.n.k.i.DiagnosticsManager] VM Arguments: [-Xloggc:/var/log/neo4j/gc.log, -XX:+UseGCLogFileRotation, -XX:NumberOfGCLogFiles=5, -XX:GCLogFileSize=20m, -XX:+PrintGCDetails, -XX:+PrintGCDateStamps, -XX:+PrintGCApplicationStoppedTime, -XX:+PrintPromotionFailure, -XX:+PrintTenuringDistribution, -Dfile.encoding=UTF-8]\r\n2016-11-17 09:52:51.855+0000 INFO  [o.n.k.i.DiagnosticsManager] Java classpath:\r\n2016-11-17 09:52:51.857+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/lucene-analyzers-common-5.5.0.jar\r\n2016-11-17 09:52:51.857+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jersey-servlet-1.19.jar\r\n2016-11-17 09:52:51.857+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-configuration-1.10.jar\r\n2016-11-17 09:52:51.857+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-unsafe-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.857+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/scala-reflect-2.11.8.jar\r\n2016-11-17 09:52:51.857+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-bolt-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.857+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/jfr.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jsr311-api-1.1.2.r612.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/jsse.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-servlet-9.2.9.v20150224.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/plugins/*\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/netty-all-4.0.40.Final.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/rhino-1.7R4.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-server-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-io-9.2.9.v20150224.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-util-9.2.9.v20150224.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/jaccess.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/zipfs.jar\r\n2016-11-17 09:52:51.858+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/sunec.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-frontend-3.0-3.0.6.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-lang-2.6.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-kernel-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/sunrsasign.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-lucene-index-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-webapp-9.2.9.v20150224.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/server-api-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-io-2.4.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jersey-multipart-1.19.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/caffeine-2.3.3.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/bcpkix-jdk15on-1.53.jar\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/classes\r\n2016-11-17 09:52:51.859+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-beanutils-1.8.3.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-csv-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-browser-2.0.0-M06.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-graph-algo-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-dbms-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/localedata.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-resource-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-frontend-3.1-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-security-9.2.9.v20150224.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/conf/\r\n2016-11-17 09:52:51.860+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-compiler-3.0-3.0.6.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/opencsv-2.3.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-udc-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jackson-mapper-asl-1.9.13.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/bcprov-jdk15on-1.53.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/jce.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/parboiled-core-1.1.7.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-frontend-2.3-2.3.7.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-codegen-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-lucene-upgrade-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-xml-9.2.9.v20150224.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-server-9.2.9.v20150224.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/lucene-queryparser-5.5.0.jar\r\n2016-11-17 09:52:51.873+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/scala-library-2.11.8.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/asm-5.0.4.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-compress-1.12.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/jfxrt.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/nashorn.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/charsets.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-graphdb-api-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-command-line-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jersey-server-1.19.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/mimepull-1.9.3.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-compiler-2.3-2.3.7.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-consistency-check-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jetty-http-9.2.9.v20150224.jar\r\n2016-11-17 09:52:51.874+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/sunpkcs11.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jline-2.12.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-common-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/lucene-codecs-5.5.0.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/concurrentlinkedhashmap-lru-1.4.2.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-digester-2.1.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-cypher-compiler-3.1-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/parboiled-scala_2.11-1.1.7.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-jmx-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-graph-matching-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/lucene-core-5.5.0.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-logging-1.1.1.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/rt.jar\r\n2016-11-17 09:52:51.875+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/javax.servlet-api-3.1.0.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jersey-core-1.19.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-security-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/dnsns.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jackson-jaxrs-1.9.13.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/jackson-core-asl-1.9.13.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-shell-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-logging-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/plugins/\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/sunjce_provider.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-collections-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/commons-lang3-3.3.2.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [bootstrap] /usr/java/jre1.8.0_92/lib/resources.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [loader.1] file:/usr/java/jre1.8.0_92/lib/ext/cldrdata.jar\r\n2016-11-17 09:52:51.876+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-primitive-collections-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-io-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager]  [classpath + loader.0] file:/opt/neo4j-community/lib/neo4j-import-tool-3.1.0-M13-beta3.jar\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager] Library path:\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager] /usr/java/packages/lib/amd64\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager] /usr/lib64\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager] /lib64\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager] /lib\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager] /usr/lib\r\n2016-11-17 09:52:51.877+0000 INFO  [o.n.k.i.DiagnosticsManager] System.properties:\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.boot.library.path = /usr/java/jre1.8.0_92/lib/amd64\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] path.separator = :\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] file.encoding.pkg = sun.io\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] user.country = US\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.java.launcher = SUN_STANDARD\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.os.patch.level = unknown\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] user.dir = /\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.jnu.encoding = UTF-8\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.management.compiler = HotSpot 64-Bit Tiered Compilers\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] user.home = /root\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] user.timezone = UTC\r\n2016-11-17 09:52:51.878+0000 INFO  [o.n.k.i.DiagnosticsManager] file.encoding = UTF-8\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] user.name = root\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.java.command = org.neo4j.server.CommunityEntryPoint --home-dir=/opt/neo4j-community --config-dir=/opt/neo4j-community/conf\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.arch.data.model = 64\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] user.language = en\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] awt.toolkit = sun.awt.X11.XToolkit\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] file.separator = /\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.io.unicode.encoding = UnicodeLittle\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.cpu.endian = little\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] sun.cpu.isalist =\r\n2016-11-17 09:52:51.879+0000 INFO  [o.n.k.i.DiagnosticsManager] Linux scheduler information:\r\n2016-11-17 09:52:51.901+0000 INFO  [o.n.k.i.DiagnosticsManager] [noop] anticipatory deadline cfq\r\n2016-11-17 09:52:51.901+0000 INFO  [o.n.k.i.DiagnosticsManager] [noop] anticipatory deadline cfq\r\n2016-11-17 09:52:51.901+0000 INFO  [o.n.k.i.DiagnosticsManager] Network information:\r\n2016-11-17 09:52:51.902+0000 INFO  [o.n.k.i.DiagnosticsManager] Interface eth0:\r\n2016-11-17 09:52:51.903+0000 INFO  [o.n.k.i.DiagnosticsManager]     address: 10.212.188.24\r\n2016-11-17 09:52:51.903+0000 INFO  [o.n.k.i.DiagnosticsManager] Interface lo:\r\n2016-11-17 09:52:51.903+0000 INFO  [o.n.k.i.DiagnosticsManager]     address: 127.0.0.1\r\n2016-11-17 09:52:51.903+0000 INFO  [o.n.k.i.DiagnosticsManager] --- INITIALIZED diagnostics END ---\r\n2016-11-17 09:52:52.365+0000 INFO  [o.n.k.i.s.f.RecordFormatSelector] Selected format 'RecordFormat:StandardV3_0[v0.A.7]' for the new store\r\n2016-11-17 09:52:52.564+0000 WARN  [o.n.k.NeoStoreDataSource] Exception occurred while setting up store modules. Attempting to close things down.\r\njava.lang.NullPointerException\r\n\tat org.neo4j.kernel.impl.store.format.BaseRecordFormat.lambda$static$0(BaseRecordFormat.java:43)\r\n\tat org.neo4j.kernel.impl.store.format.BaseRecordFormat.getRecordSize(BaseRecordFormat.java:64)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.determineRecordSize(CommonAbstractStore.java:776)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.extractHeaderRecord(CommonAbstractStore.java:292)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.loadStorage(CommonAbstractStore.java:251)\r\n\tat org.neo4j.kernel.impl.store.CommonAbstractStore.initialise(CommonAbstractStore.java:134)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.initialize(NeoStores.java:237)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.createDynamicArrayStore(NeoStores.java:514)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.createDynamicArrayStore(NeoStores.java:504)\r\n\tat org.neo4j.kernel.impl.store.StoreType$1.open(StoreType.java:37)\r\n\tat org.neo4j.kernel.impl.store.StoreType$1.open(StoreType.java:32)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.openStore(NeoStores.java:230)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.getOrCreateStore(NeoStores.java:275)\r\n\tat org.neo4j.kernel.impl.store.NeoStores.<init>(NeoStores.java:142)\r\n\tat org.neo4j.kernel.impl.store.StoreFactory.openNeoStores(StoreFactory.java:169)\r\n\tat org.neo4j.kernel.impl.store.StoreFactory.openAllNeoStores(StoreFactory.java:133)\r\n\tat org.neo4j.kernel.impl.storageengine.impl.recordstorage.RecordStorageEngine.<init>(RecordStorageEngine.java:214)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.buildStorageEngine(NeoStoreDataSource.java:587)\r\n\tat org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:451)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:433)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:100)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:433)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.initFacade(GraphDatabaseFacadeFactory.java:189)\r\n\tat org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:124)\r\n\tat org.neo4j.server.CommunityNeoServer.lambda$static$0(CommunityNeoServer.java:57)\r\n\tat org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:89)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:433)\r\n\tat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:107)\r\n\tat org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:199)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:91)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:68)\r\n\tat org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:28)\r\n2016-11-17 09:52:52.566+0000 INFO  [o.n.k.i.DiagnosticsManager] --- STOPPING diagnostics START ---\r\n2016-11-17 09:52:52.566+0000 INFO  [o.n.k.i.DiagnosticsManager] --- STOPPING diagnostics END ---\r\n2016-11-17 09:52:52.567+0000 INFO  [o.n.k.i.f.GraphDatabaseFacadeFactory] Shutdown started\r\n```\r\n\r\n\r\nNeo4j Version: 3.1M13-beta3\r\nOperating System: OSX 10.11.6\r\nAPI: All\r\n\r\n### Steps to reproduce\r\n1. Download neo4j 3.1.0-M13-Beta3\r\n2. Setup minimal config \r\n3. Mimic Chef behaviour with\r\n   <DIST_BIN_DIR>/neo4j start && <DIST_BIN_DIR>/neo4j restart\r\n4. Observe errors in <DIST>/logs/neo4j.log and <DIST>/logs/debug.log \r\n\r\n### Expected behavior\r\nA restart should be aware of an existing neo4j process being in the startup phase and wait for it to complete\r\n\r\n### Actual behavior\r\nThe init script restart function disregards the current state of Neo4J and can cause database corruption "}, {"labels": ["bug", "docs", "operability"], "url": "https://github.com/neo4j/neo4j/issues/8359", "title": "Complete list of configuration options missing dbms.connector.http.enabled", "closed": "2017-05-01 21:42:11", "commitsDetails": [], "commits": {}, "ttf": 168.00027777777777, "created": "2016-11-14 13:18:39", "user": "heavydawson", "body": "I was trying to reduce the neo4j.conf file to the smallest possible set of values (in order to use as many defaults as possible). I began with an empty neo4j.conf file, and I got the following error when I tried to start Neo4J:\r\n```\r\n2016-11-14 13:02:04.941+0000 WARN  Config file [/Applications/neo4j-community-3.1.0-M13-beta3/conf/neo4j.conf] does not exist.\r\n2016-11-14 13:02:04.968+0000 ERROR Failed to start Neo4j on unknown address. An HTTP connector must be configured to run the server\r\njava.lang.IllegalArgumentException: An HTTP connector must be configured to run the server\r\n\tat org.neo4j.server.AbstractNeoServer.lambda$new$0(AbstractNeoServer.java:158)\r\n\tat java.util.Optional.orElseThrow(Optional.java:290)\r\n\tat org.neo4j.server.AbstractNeoServer.<init>(AbstractNeoServer.java:157)\r\n\tat org.neo4j.server.CommunityNeoServer.<init>(CommunityNeoServer.java:69)\r\n\tat org.neo4j.server.CommunityNeoServer.<init>(CommunityNeoServer.java:63)\r\n\tat org.neo4j.server.CommunityBootstrapper.createNeoServer(CommunityBootstrapper.java:43)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:90)\r\n\tat org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:68)\r\n\tat org.neo4j.server.CommunityEntryPoint.main(CommunityEntryPoint.java:28)\r\n```\r\n\r\nLooking the shipped config file example, it was obvious the property that needed to be added was:\r\n\r\n`dbms.connector.http.enabled=true\r\n`\r\nOnce I added the line alone to my empty neo4j.conf, the server started without issue.\r\nHowever, the config property above is not listed here:\r\nhttp://neo4j.com/docs/operations-manual/beta/reference/#configuration-settings\r\n\r\n\r\n\r\n**Neo4j Version:** 3.1M13-beta3  \r\n**Operating System:** OSX 10.11.6  \r\n**API:** All\r\n\r\n### Steps to reproduce\r\n1. Download neo4j 3.1.0-M13-Beta3\r\n2. Remove (or backup) neo4j.conf from the <DIST>/conf folder\r\n3. Attempt to start neo4j with <DIST>/bin/neo4j start\r\n4. Observe errors in <DIST>/logs/neo4j.log\r\n\r\n### Expected behavior\r\n* Neo4j should default to using HTTP connector?\r\n* HTTP/HTTPS/BOLT-enabling properties should be documented here:\r\nhttp://neo4j.com/docs/operations-manual/beta/reference/#configuration-settings\r\n\r\n### Actual behavior\r\n* Neo4J doesn't use any connector by default\r\n* No documentation around enabling connectors in config reference"}, {"labels": ["3.1", "bug", "tools"], "url": "https://github.com/neo4j/neo4j/issues/8347", "title": "MacOS - Neo4j 3.1.0-M13-beta3 neo4j-import - Could not find or load main class", "closed": "2018-05-23 12:40:59", "commitsDetails": [], "commits": {}, "ttf": 558.0002777777778, "created": "2016-11-11 09:59:26", "user": "Kerruba", "body": "**Neo4j Version:**: 3.1.0-M13-beta3 Community Edition\r\n**Operating System:**: macOS Sierra 10.12.1\r\n\r\n### Steps to reproduce\r\n- Download the 3.1.0-M13-beta3 Community Edition version from neo4j site\r\n- Run neo4j-import \r\n\r\n### Expected behavior\r\n- Should start the process\r\n\r\n### Actual behavior\r\n- Got an **Error: Could not find or load main class org.neo4j.tooling.ImportTool**"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/8331", "title": "License declaration for the community edition - GPL v3 or AGPL v3 ?", "closed": "2016-11-17 17:18:45", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2016-11-09 10:46:57", "user": "sgustafsson", "body": "The NOTICE file at https://github.com/neo4j/neo4j/blob/3.1/community/NOTICE.txt says:\r\n\r\n\"If you have not executed a Commercial Agreement with Neo Technology, the\r\nSoftware is subject to the terms of the GNU AFFERO GENERAL PUBLIC LICENSE\r\nVersion 3 (http://www.fsf.org/licensing/licenses/agpl-3.0.html), included\r\nin the LICENSE.txt file.\"\r\n\r\nThe LICENSE file at https://github.com/neo4j/neo4j/blob/3.1/community/LICENSE.txt says: \r\n\r\n\"The software (\"Software\") developed and owned by Network Engine for\r\nObjects in Lund AB (referred to in this notice as \"Neo Technology\") is\r\nlicensed under the GNU GENERAL PUBLIC LICENSE Version 3 to all third\r\nparties and that license is included below.\"\r\n\r\nThe README says \r\n\r\n\"Neo4j is an open source product. We support a Community edition under the GPLv3 license. The Enterprise edition is available under the AGPLv3 license for open source projects otherwise under a commercial license\"\r\n\r\nSo I assume the reference to the AGPL v3 license in the NOTICE file of the community edition is wrong, and should be referring to the GPL v3?\r\n"}, {"labels": ["3.0", "bug", "cypher"], "filteredCommits": ["20af3d18647b9b746126ad304ab63133ebcab6fd"], "url": "https://github.com/neo4j/neo4j/issues/8324", "gitStatsSummary": {"insertions": 4, "gitFilesChange": 1, "lines": 5, "deletions": 1}, "numCommits": 1, "commits": {"20af3d18647b9b746126ad304ab63133ebcab6fd": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 118.00027777777778, "user": "pranet", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "\r\n- Neo4j version: 3.0.4\r\n- Operating system: El Capitan 10.11.13\r\n- API/Driver: Cypher\r\n\r\n- **Steps to reproduce**\r\nCreate a graph using the following commands:\r\ncreate (n)-[r:CALL]->(n)\r\ncreate (n)-[r:CALL]->(n)\r\ncreate (u)-[r:CALL]->(v)\r\n\r\n(Total 4 nodes, with 2 self loops, and one more edge)\r\n\r\nQuery A: \r\nmatch(n)-[r:CALL]->(n)\r\nreturn count(r)\r\n- Expected behavior\r\n2\r\n- Actual behavior\r\n3\r\n\r\nQuery B: \r\nmatch(n)-[r:CALL]->(n)\r\nwhere id(n) = id(n)\r\nreturn count(r)\r\n- Expected behavior\r\n2\r\n- Actual behavior\r\n2\r\n\r\nQuery C: \r\nmatch(n)-[r:CALL]->(n)\r\nreturn r\r\n- Expected behavior\r\n2 edges returned\r\n- Actual behavior\r\n2 edges returned\r\n\r\nProfiling for A gives the following \r\n<img width=\"1280\" alt=\"screen shot 2016-11-08 at 3 55 35 pm\" src=\"https://cloud.githubusercontent.com/assets/5443393/20095545/e6910cd6-a5cb-11e6-91bf-d2b925e5eaee.png\">\r\n\r\nSeems to be completely ignoring the match clause. Query B, and C work as expected however.\r\n\r\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Possibly incorrect result with count() on self loops", "statsSkippedReason": "", "closed": "2017-03-06 14:54:40", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2017-03-02 12:47:35", "commitHash": "20af3d18647b9b746126ad304ab63133ebcab6fd", "commitParents": ["e7ef847240fe5994b54b22d1fa9e6953ab191768"], "commitGHEventType": "closed", "nameRev": "20af3d18647b9b746126ad304ab63133ebcab6fd tags/3.2.0-alpha06~3^2~1^2~2^2", "commitGitStats": [{"insertions": 26, "lines": 33, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/MatchAggregationsBackedByCountStoreAcceptanceTest.scala", "deletions": 7}, {"insertions": 4, "lines": 5, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/steps/countStorePlanner.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Do not plan count store lookup for loops\n\nThe counts store call is not designed to take into account the constraint\nthat a relationship is a loop. Cypher previously returned a count of all\nrelationships that matched the label and type predicates without honoring\nthe topology constraint (loop).\n\nFixes #8324\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-03-02 12:47:20"}], "created": "2016-11-08 10:27:19"}, {"labels": ["3.0", "browser", "bug", "team-ux"], "url": "https://github.com/neo4j/neo4j/issues/8321", "title": "Neo4j 3.0.7 CE  for Mac : Socket error. is the server online and have websockets open?", "closed": "2018-11-19 07:24:01", "commitsDetails": [], "commits": {}, "ttf": 740.0002777777778, "created": "2016-11-08 08:24:56", "user": "comdotdom", "body": "- Neo4j version: 3.0.7 Community Edition\r\n- Operating system:macOS Sierra 10.12.1 \r\n- Browser interface\r\n\r\n- **Steps to reproduce**\r\n- Upgrade from 3.0.6 to 3.0.7\r\n- Start any database\r\n- Click link in Neo4J CE app to access db via http://localhost:7474/\r\n- Browser opens with 'Socket error. is the server online and have websockets open?'\r\n\r\n- Ignorantly and hopefully stopped everything, started it again, rebooted - just in case anything needed waking up - no difference.\r\n- Checked for similar issues in Stack Overflow etc - all of which point to dbms.allow_format_migration\r\n- Checked config: dbms.allow_format_migration=true\r\n\r\n- Discarded 3.0.7 and re-installed 3.0.6 - problem goes away and have full access back to my graphs\r\n"}, {"labels": ["3.0", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8287", "title": "java.lang.AssertionError: assertion failed", "closed": "2016-11-15 14:12:17", "commitsDetails": [], "commits": {}, "ttf": 14.000277777777777, "created": "2016-10-31 20:45:45", "user": "legraphista", "body": "I discovered this by accident while playing around with `NULL`\r\n\r\n- Neo4j version: 3.0.6\r\n- Operating system: Ubuntu 16.04\r\n- API/Driver: Neo4j Browser\r\n- **Steps to reproduce**\r\n```cypher\r\nUNWIND [{test: 1}] AS x WITH x\r\nWHERE \r\n  NULL = x.text OR\r\n    (\r\n      COALESCE(NULL <> x.test, true)  AND\r\n      NOT COALESCE(null, false)\r\n    )\r\nreturn x\r\n```\r\n- Expected behavior\r\n```\r\n\u2552\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2555\r\n\u2502x        \u2502\r\n\u255e\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2550\u2561\r\n\u2502{test: 1}\u2502\r\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\r\n```\r\n- Actual behavior\r\n```\r\nassertion failed\r\n```\r\n## Logs and info:\r\n\r\nSame query works on 3.0.0\r\n\r\nHere's the equivalent query that works around the bug:\r\n```\r\nUNWIND [{test: 1}] AS x WITH x\r\nWHERE \r\n\tNULL = x.text OR\r\n    (\r\n\tCOALESCE(NULL, 0) <> x.test  AND\r\n\tNOT COALESCE(null, false)\r\n\t)\r\nreturn x\r\n```\r\n\r\nHere's a stack trace: \r\n```\r\n2016-10-31 20:21:50.719+0000 ERROR [o.n.b.v.r.i.ErrorReporter] Client triggered an unexpected error [UnknownError]: assertion failed, reference 256327cb-7279-4784-a560-2c306d895070. assertion failed\r\njava.lang.AssertionError: assertion failed\r\n\tat scala.Predef$.assert(Predef.scala:156)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.SetChecker.<init>(Checker.scala:78)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.BuildUp.checkAndBuildUpCache(Checker.scala:63)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.BuildUp.contains(Checker.scala:46)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.InCheckContainer.contains(ConstantCachedIn.scala:112)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.DynamicCachedIn.isMatch(ConstantCachedIn.scala:87)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.Not.isMatch(Predicate.scala:103)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.Predicate.apply(Predicate.scala:38)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.expressions.CoalesceFunction$$anonfun$1.apply(CoalesceFunction.scala:31)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.expressions.CoalesceFunction$$anonfun$1.apply(CoalesceFunction.scala:31)\r\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:409)\r\n\tat scala.collection.Iterator$class.find(Iterator.scala:944)\r\n\tat scala.collection.AbstractIterator.find(Iterator.scala:1336)\r\n\tat scala.collection.IterableLike$class.find(IterableLike.scala:79)\r\n\tat scala.collection.SeqViewLike$AbstractTransformed.find(SeqViewLike.scala:37)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.expressions.CoalesceFunction.apply(CoalesceFunction.scala:32)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CoercedPredicate.isMatch(Predicate.scala:316)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate$$anonfun$1$$anonfun$2.apply(Predicate.scala:81)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate$$anonfun$1$$anonfun$2.apply(Predicate.scala:81)\r\n\tat scala.util.Try$.apply(Try.scala:192)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate$$anonfun$1.apply(Predicate.scala:81)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate$$anonfun$1.apply(Predicate.scala:76)\r\n\tat org.neo4j.cypher.internal.frontend.v3_0.helpers.NonEmptyList$class.foldLeftLoop(NonEmptyList.scala:256)\r\n\tat org.neo4j.cypher.internal.frontend.v3_0.helpers.NonEmptyList$class.foldLeft(NonEmptyList.scala:183)\r\n\tat org.neo4j.cypher.internal.frontend.v3_0.helpers.Fby.foldLeft(NonEmptyList.scala:302)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate.isMatch(Predicate.scala:76)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate$$anonfun$1$$anonfun$2.apply(Predicate.scala:81)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate$$anonfun$1$$anonfun$2.apply(Predicate.scala:81)\r\n\tat scala.util.Try$.apply(Try.scala:192)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate$$anonfun$1.apply(Predicate.scala:81)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate$$anonfun$1.apply(Predicate.scala:76)\r\n\tat org.neo4j.cypher.internal.frontend.v3_0.helpers.NonEmptyList$class.foldLeftLoop(NonEmptyList.scala:256)\r\n\tat org.neo4j.cypher.internal.frontend.v3_0.helpers.NonEmptyList$class.foldLeft(NonEmptyList.scala:183)\r\n\tat org.neo4j.cypher.internal.frontend.v3_0.helpers.Fby.foldLeft(NonEmptyList.scala:302)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.CompositeBooleanPredicate.isMatch(Predicate.scala:76)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.commands.predicates.Predicate.apply(Predicate.scala:38)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.pipes.ProjectionPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(ProjectionPipe.scala:48)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.pipes.ProjectionPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(ProjectionPipe.scala:46)\r\n\tat scala.collection.immutable.Map$Map2.foreach(Map.scala:137)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.pipes.ProjectionPipe$$anonfun$internalCreateResults$1.apply(ProjectionPipe.scala:46)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.pipes.ProjectionPipe$$anonfun$internalCreateResults$1.apply(ProjectionPipe.scala:45)\r\n\tat scala.collection.Iterator$$anon$11.next(Iterator.scala:409)\r\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:462)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:439)\r\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461)\r\n\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:439)\r\n\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:461)\r\n\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:408)\r\n\tat scala.collection.Iterator$class.isEmpty(Iterator.scala:330)\r\n\tat scala.collection.AbstractIterator.isEmpty(Iterator.scala:1336)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.pipes.TopNPipe.internalCreateResults(TopPipe.scala:76)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.pipes.PipeWithSource.createResults(Pipe.scala:126)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.pipes.PipeWithSource.createResults(Pipe.scala:123)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:98)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:68)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.executionplan.InterpretedExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:143)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.executionplan.InterpretedExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:127)\r\n\tat org.neo4j.cypher.internal.compiler.v3_0.executionplan.InterpretedExecutionPlanBuilder$$anon$1.run(ExecutionPlanBuilder.scala:102)\r\n\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor3_0.scala:274)\r\n\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor3_0.scala:272)\r\n\tat org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_0$.runSafely(CompatibilityFor3_0.scala:188)\r\n\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$ExecutionPlanWrapper.run(CompatibilityFor3_0.scala:272)\r\n\tat org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:27)\r\n\tat org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:111)\r\n\tat org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:65)\r\n\tat org.neo4j.bolt.v1.runtime.internal.CypherStatementRunner.run(CypherStatementRunner.java:73)\r\n\tat org.neo4j.bolt.v1.runtime.internal.StandardStateMachineSPI.run(StandardStateMachineSPI.java:110)\r\n\tat org.neo4j.bolt.v1.runtime.internal.SessionStateMachine$State$2.runStatement(SessionStateMachine.java:132)\r\n\tat org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.run(SessionStateMachine.java:725)\r\n\tat org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorkerFacade.lambda$run$1(SessionWorkerFacade.java:69)\r\n\tat org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.execute(SessionWorker.java:116)\r\n\tat org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.run(SessionWorker.java:77)\r\n\tat java.lang.Thread.run(Thread.java:745)\r\n```"}, {"labels": ["3.1", "bug", "cypher"], "filteredCommits": ["8c85eab99b86f32b270e76ec0ab906b6aec2bac4"], "url": "https://github.com/neo4j/neo4j/issues/8249", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"8c85eab99b86f32b270e76ec0ab906b6aec2bac4": {"commitUser": "boggle", "commitGHEventType": "closed"}, "14654444bed1b14472dd13c0c48172479886ac5b": {"commitUser": "boggle", "commitGHEventType": "referenced"}}, "ttf": 0.0002777777777777778, "user": "sandyplace", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal"], "body": "## New pattern comprehension fails with the following error:\n\n`An unexpected failure occurred, see details in the database logs, reference number d7b45b9f-8abf-47ec-b5a7-8b74079be924.`\n\nThe log file looks like:\n`2016-10-25 03:31:12.331+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: key not found: PatternComprehension(None,RelationshipsPattern(RelationshipChain(NodePattern(Some(Variable(e)),List(),None),RelationshipPattern(None,false,List(),None,None,OUTGOING),NodePattern(Some(Variable(t)),List(),None))),None,DesugaredMapProjection(Variable(t),List(LiteralEntry(PropertyKeyName(amount),Property(Variable(t),PropertyKeyName(amount)))),false),Set()). See debug.log for more details, reference d7b45b9f-8abf-47ec-b5a7-8b74079be924.`\n\n**Neo4j Version:** 3.1Beta2\n**Operating System:** Windows 10.1  \n### Steps to reproduce\n\nI receive the error stated above when I run the following Neo4j query:\n`MATCH (e:Employee) WITH e LIMIT 5 RETURN [(e) --> (t) | t { .amount }]`\n\nHowever the following query is successful:\n`MATCH (e:Employee) WITH e LIMIT 5 MATCH (e) --> (t) RETURN collect(t {.amount}) as result`\n### Expected behavior\n\nthe first query I believe is valid and should work.\n### Actual behavior\n\nan exception is thrown.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "Pattern Comprehension might not be working correctly in 3.1 Beta 2", "statsSkippedReason": "", "closed": "2016-10-25 23:40:35", "commitsDetails": [{"commitUser": "boggle", "commitDateTime": "2016-10-25 13:23:04", "commitHash": "8c85eab99b86f32b270e76ec0ab906b6aec2bac4", "commitParents": ["fc402e75d960a43a6224c6d3a7dc1fd25d6d3fb3"], "commitGHEventType": "closed", "nameRev": "8c85eab99b86f32b270e76ec0ab906b6aec2bac4 tags/3.1.0-M13-beta3~50^2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal/compiler/v3_1/ASTRewriter.scala", "deletions": 1}, {"insertions": 6, "lines": 6, "filePath": "community/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/PatternComprehensionAcceptanceTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Change order of rewriters - fixes #8249\n\nAfter desugaring the map projection, it was not possible to find the original\nPatternComprehension object in the recorded scopes, and the rewriter would\nfail. By just changing the order, we can record the scope before desugarind\nthe map projections.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-10-25 13:23:04"}, {"commitUser": "boggle", "commitDateTime": "2016-10-26 01:40:32", "commitHash": "14654444bed1b14472dd13c0c48172479886ac5b", "commitParents": ["6dd96b8fc736655801d4e4d4ed0afd9d048b8d5e", "8c85eab99b86f32b270e76ec0ab906b6aec2bac4"], "commitGHEventType": "referenced", "nameRev": "14654444bed1b14472dd13c0c48172479886ac5b tags/3.1.0-M13-beta3~50", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal/compiler/v3_1/ASTRewriter.scala", "deletions": 1}, {"insertions": 6, "lines": 6, "filePath": "community/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/PatternComprehensionAcceptanceTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #8252 from systay/8249\n\nChange order of rewriters - fixes #8249", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-10-26 01:40:32"}], "created": "2016-10-25 03:40:39"}, {"labels": ["3.0", "bug", "cypher"], "filteredCommits": ["c429f3f8433782e28bf64b286483cdf33e460e9c"], "url": "https://github.com/neo4j/neo4j/issues/8239", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"c429f3f8433782e28bf64b286483cdf33e460e9c": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 4.000277777777778, "user": "rationalism", "changesInPackagesSPOON": ["org.neo4j.cypher.DeleteNodeStressIT.executeInThread(java.lang.String).1.run()", "org.neo4j.cypher.DeleteNodeStressIT.executeInThread(java.lang.String)", "org.neo4j.cypher.DeleteNodeStressIT.shouldBeAbleToCheckLabelsWhileDeleting()"], "changesInPackagesGIT": ["community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal"], "body": "- Neo4j version: 3.0.5 Enterprise\n- Operating system: Ubuntu 14.04.4 LTS\n- API/Driver: neo4j-java-driver 1.0.5\n\nThe query \n\n```\nMATCH (root:`norecon`) RETURN labels(root), count(*)\n```\n\n threw a DatabaseException/NullPointerException for unknown reasons. This appears to be a transient error, so it might be harmless, but I figured I'd report it anyway just in case. Here's the stack trace in debug.log:\n\nhttps://gist.github.com/rationalism/031a7f010e43eccc13f5a0e0ed3faaa3\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 3, "UPD": 0, "TOT": 6, "DEL": 1, "INS": 2, "spoonFilesChanged": 1, "MOV": 3}, "title": "Transient NullPointerException thrown on query", "statsSkippedReason": "", "closed": "2016-10-26 06:55:02", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2016-10-25 15:59:01", "commitHash": "c429f3f8433782e28bf64b286483cdf33e460e9c", "commitParents": ["6d2d3f4cab315b0330bc8c02cc225e0b6822465f"], "commitGHEventType": "closed", "nameRev": "c429f3f8433782e28bf64b286483cdf33e460e9c tags/3.0.7~3^2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/spi/v3_0/TransactionBoundQueryContext.scala", "deletions": 1}, {"insertions": 22, "lines": 37, "filePath": "community/cypher/cypher/src/test/java/org/neo4j/cypher/DeleteNodeStressIT.java", "deletions": 15}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.DeleteNodeStressIT.shouldBeAbleToCheckLabelsWhileDeleting()"}, {"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.DeleteNodeStressIT.executeInThread(java.lang.String)"}, {"UPD": 0, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 3, "spoonMethodName": "org.neo4j.cypher.DeleteNodeStressIT.executeInThread(java.lang.String).1.run()"}], "spoonFilePath": "DeleteNodeStressIT.java"}], "commitMessage": "Don't throw NullPointerException in LabelsFunction\n\nIf the node is deleted at the same time as we are trying to access the labels\nof that node there is a significant risk that we will have a `NullPointerException`.\nInstead of an error we should just return an empty iterator for that case.\n\nFixes #8239\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-10-25 15:57:48"}], "created": "2016-10-21 16:10:33"}, {"labels": ["3.0", "3.1", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8212", "title": "UnknownError using 'WITH DISTINCT json' ", "closed": "2016-10-27 14:14:55", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2016-10-19 09:04:50", "user": "allanben13", "body": "Hi all, I'm running Neo4j on my macbook pro and i'm facing an issue on Neo4j enterprise 3.1.0 Beta. \n\nThis query fails: \n\nWITH {json} as data\nUNWIND data as q\nUNWIND q.data as posts\nUNWIND posts.from as userFroms\nMERGE (s:Status { statusId: split(posts.id,\"_\")[toInt(1)]}) ON CREATE SET s.statusName = posts.name,  s.message=posts.message, s.description=posts.description, s.link=posts.link, s.type=posts.status_type, s.createdTime=posts.created_time, s.privacy=posts.privacy.value\nFOREACH(ignoreMe IN CASE WHEN EXISTS(userFroms.id) THEN [1] ELSE [] END |\nMERGE (userFrom:UserFacebook{id:userFroms.id}) ON CREATE SET userFrom.facebookName=userFroms.name\nMERGE (userFrom)-[:HAS_POSTED_STATUS]->(s)\n)\n\n```\n  WITH distinct q, posts \n  MERGE (s:Status { statusId: split(posts.id,\"_\")[toInt(1)]})\n  MERGE (user:User {id:q.user_id})\n  MERGE (user)-[:HAS_RECEIVED_STATUS]-(s)\n```\n\nThis is the error : \n\nErreur : Client error: (400) Bad Request\nNeo.DatabaseError.General.UnknownError\nunknown value: ((data,[{created_time=2016-10-17T20:52:29+0000, from={name=Antonella Benham's, id=10152984092575861}, caption=business.lesechos.fr, link=http://business.lesechos\n\nIf I remove \"distinct\"  from \"WITH distinct q, posts\" , the query works but it takes much longer.\n\nThis query use to work on neo4j 3.0.3 enterprise.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8204", "title": " Surprising Type Error when accessing a nested list and then concatenating it to another list", "closed": "2017-10-04 12:54:13", "commitsDetails": [], "commits": {}, "ttf": 350.0002777777778, "created": "2016-10-19 01:03:24", "user": "jacknoble", "body": "Hi! I found this behavior strange enough that it should probably be considered a bug. \n\nIn Cypher lists can be concatenated\n`return [] + [1]` => `[1]`\nand the head of a list can be accessed by the `head` function\n`return head([[], 1])` => `[]`\n\nAnd naturally one expects to be able to compose these expressions. But that's a type error.\n`return head([[],1]) + [1]` => `Type mismatch: expected Collection<Any> but was Collection<Integer>`\n\nI would expect this expression to return `[1]`. Cypher users probably shouldn't ever see errors related to typed collections right?\n\n(Discovered using Neo4j 3.0.4, that's probably sufficient for reproducing)\n"}, {"labels": ["3.0", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/8201", "title": "`shortestPath()` returns strange object when used as a function in an expression", "closed": "2017-10-11 10:56:05", "commitsDetails": [], "commits": {}, "ttf": 357.0002777777778, "created": "2016-10-18 14:52:26", "user": "ToreUprising", "body": "I misapplied `shortestPath` in a `WITH` statement expression and found some very strange behavior in the resulting object; it seems to behave as a collection of Paths that do not behave like Paths _or_ Nodes/Relationships in Cypher, though in the python driver it is properly hydrated as a Path (and the individual collection items as Nodes or Relationships, respectively).\n- **Neo4j version** : 3.0.3, 3.0.6, 3.1BETA1\n- **Operating system** : Ubuntu 14.04\n- **API/Driver** : Web frontend and `neo4j-python-driver`\n## Actual Behavior\n\n![screenshot 2016-10-17 at 11 29 26 pm](https://cloud.githubusercontent.com/assets/15202973/19482235/1c972656-9516-11e6-8b54-7920dd7beed5.png)\nHere is the initial result of the \"incorrect\" but valid use of `shortestPath`; it appears to be a regular Path. However, if you try to run `Nodes()` on the object, you get this error:\n![screenshot 2016-10-17 at 11 29 51 pm](https://cloud.githubusercontent.com/assets/15202973/19482351/70100f32-9516-11e6-922c-b226852e4c6b.png)\nSo it appears to be a Collection. However, in `python`, this object is returned as a Path, not a Collection. It does support indexing in Cypher, though:\n![screenshot 2016-10-17 at 11 38 23 pm](https://cloud.githubusercontent.com/assets/15202973/19482378/91a9bee0-9516-11e6-8743-c78685135f77.png)\nIn `python`, these objects are correctly hydrated as Nodes or Relationships, so when the Collection is broken up in Cypher, it seems to be a Collection of the Path elements. However, if one attempts to use `Labels()` on one of these elements (or `Type()` if a relationship), we get an error:\n![screenshot 2016-10-17 at 11 39 46 pm](https://cloud.githubusercontent.com/assets/15202973/19482591/2a64be3c-9517-11e6-9a79-2e1e482f5f23.png)\nIt is also impossible to access the attributes of these objects, and most Path functions do not work on them (though `Length()` will return 1 for any of them). So the original object returned from `shortestPath()` in an expression operates like a collection, but the elements don't behave in Cypher like anything (though they are returned with enough data that the `python` driver can correctly identify them, turning the Collection into a Path and treating the Collection objects as Nodes or Relationships).\n## Expected behavior\n\nGiven the increase in function syntax use coming in 3.1, it seems like `shortestPath()` (whose syntax is identical to a function call) should either generate an ordinary path when used in an expression, or should throw an error so that new users know to only use them in a `MATCH` statement.\n"}, {"labels": ["3.1", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/8181", "title": "User function in a write cypher command", "closed": "2016-10-18 10:42:18", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2016-10-17 07:36:14", "user": "szenyo", "body": "**Neo4j Version:** 3.1.0-M10\n**Operating System:** macOS 10.12 Sierra\n### Steps to reproduce\n1. I created a new User function.\n\n```\n    @UserFunction\n    @Description(\"apoc.similarity.cosine([list1],[list2])\")\n    public double cosine(@Name(\"list1\") List<Double> list1, @Name(\"list2\") List<Double> list2) {\n        double dotProduct = 0.0;\n        double normA = 0.0;\n        double normB = 0.0;\n        for (int i = 0; i < list1.size(); i++) {\n            dotProduct += list1.get(i) * list2.get(i);\n            normA += Math.pow(list1.get(i), 2);\n            normB += Math.pow(list2.get(i), 2);\n        }   \n        return dotProduct / (Math.sqrt(normA) * Math.sqrt(normB));\n    }\n```\n\nBuild, put into plugins directoy, restart.\n1. My Nodes vector properties look like this:\n   `c1.vector=[0,1,0,1]`\n2. I tried this:\n   `MATCH (c1:Cetli), (c2:Cetli)\n   return apoc.similarity.cosine(c1.vector,c2.vector)\n   It works, return a double.`\n### Expected behavior\n\n\"Functions are more limited than procedures: they can\u2019t execute writes or schema operations and are expected to return a single value, not a stream of values.\nBut this makes it also easier to write and use them.\u201d\nAnd the example is:\n`CREATE (v:Value {id:{id}, data:{data}, created: apoc.date.format(timestamp()) })`\n### Actual behavior\n\nI tried this:\n`MATCH (c1:Cetli), (c2:Cetli)\nCREATE (c1)-[s:SIMILARITY {similarity:apoc.similarity.cosine(c1.vector,c2.vector)}]->(c2)`\nIt returns error:\n`Write operations are not allowed for 'neo4j overridden by OVERRIDE_READ\u2019.`\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/8166", "title": "about NEO4J.3.1.beta", "closed": "2016-10-17 20:42:35", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2016-10-14 01:15:36", "user": "GameFreedom", "body": "HI,\nDownload can't pop up, click to download, will jump to 404 pages.\n"}, {"labels": ["3.0", "bug", "operability"], "filteredCommits": ["71f99a8e3d3ea00bc8abdaec20331eefed9dc782"], "url": "https://github.com/neo4j/neo4j/issues/8149", "gitStatsSummary": {"insertions": 10, "gitFilesChange": 1, "lines": 12, "deletions": 2}, "numCommits": 1, "commits": {"71f99a8e3d3ea00bc8abdaec20331eefed9dc782": {"commitUser": "spacecowboy", "commitGHEventType": "closed"}}, "ttf": 4.000277777777778, "user": "endrec", "changesInPackagesSPOON": ["org.neo4j.helpers.collection.MapUtil.load(java.io.InputStream)"], "changesInPackagesGIT": ["community/collections/src/main/java/org/neo4j/helpers/collection"], "body": "I have discovered (took me some time...) that trailing spaces in the neo4j.conf file can cause issues.\n\n**Neo4j version:** 3.0.6\n**Operating system:** Ubuntu 16.04\n### Steps to reproduce\n1. Edit your `neo4j.conf`, and add `dbms.transaction.timeout=1m` (including trailing spaces) in the last line.\n2. Restart neo4j.\n### Expected behavior\n\nNeo4j starts without an error.\n### Actual behavior\n\nNeo4j fails to start with the following error:\n\n```\nFailed to start Neo4j on unknown address Unrecognized unit m            \njava.lang.RuntimeException: Unrecognized unit m            \n        at org.neo4j.helpers.TimeUtil.lambda$static$0(TimeUtil.java:67)\n        at org.neo4j.kernel.configuration.Settings$11.apply(Settings.java:473)\n        at org.neo4j.kernel.configuration.Settings$11.apply(Settings.java:469)\n        at org.neo4j.kernel.configuration.Settings$DefaultSetting.apply(Settings.java:1042)\n        at org.neo4j.kernel.configuration.Settings$DefaultSetting.apply(Settings.java:964)\n        at org.neo4j.kernel.configuration.ConfigurationValidator.validate(ConfigurationValidator.java:49)\n        at org.neo4j.kernel.configuration.Config.replaceSettings(Config.java:217)\n        at org.neo4j.kernel.configuration.Config.<init>(Config.java:105)\n        at org.neo4j.server.configuration.ConfigLoader.loadConfig(ConfigLoader.java:63)\n        at org.neo4j.server.ServerBootstrapper.createConfig(ServerBootstrapper.java:166)\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:76)\n        at org.neo4j.server.ServerBootstrapper.start(ServerBootstrapper.java:67)\n        at org.neo4j.server.enterprise.EnterpriseEntryPoint.main(EnterpriseEntryPoint.java:32)\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 4, "DEL": 1, "INS": 3, "spoonFilesChanged": 1, "MOV": 0}, "title": "Unrecognized unit in neo4j.conf", "statsSkippedReason": "", "closed": "2016-10-17 09:05:03", "commitsDetails": [{"commitUser": "spacecowboy", "commitDateTime": "2016-10-13 16:39:22", "commitHash": "71f99a8e3d3ea00bc8abdaec20331eefed9dc782", "commitParents": ["666d5571786a4b9afde7c6fe8bbcb5b9053de8c5"], "commitGHEventType": "closed", "nameRev": "71f99a8e3d3ea00bc8abdaec20331eefed9dc782 tags/3.1.0-M12-beta2~18^2^2", "commitGitStats": [{"insertions": 66, "lines": 66, "filePath": "community/collections/src/test/java/org/neo4j/helpers/collection/MapUtilTest.java", "deletions": 0}, {"insertions": 10, "lines": 12, "filePath": "community/collections/src/main/java/org/neo4j/helpers/collection/MapUtil.java", "deletions": 2}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.helpers.collection.MapUtilTest"}], "spoonFilePath": "MapUtilTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "DEL": 1, "INS": 3, "MOV": 0, "spoonMethodName": "org.neo4j.helpers.collection.MapUtil.load(java.io.InputStream)"}], "spoonFilePath": "MapUtil.java"}], "commitMessage": "Fixed parsing of config values with trailing spaces\n\nfixes #8149\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-10-13 16:36:31"}], "created": "2016-10-12 14:53:55"}, {"labels": ["3.0", "3.1", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/8096", "title": "java.lang.IllegalStateException from  org.neo4j.io.pagecache.impl.muninn.MuninnPagedFile.getLastPageId", "closed": "2017-10-06 09:02:51", "commitsDetails": [], "commits": {}, "ttf": 365.0002777777778, "created": "2016-10-05 19:48:55", "user": "Meatballs1", "body": "- Neo4j version: 3.0.4\n- Operating system: Ubuntu 14.04 (running in a docker container)\n- API/Driver: .Net Bolt Driver\n\nUnsure how to reproduce at the moment, will add more details if I can find anything else out. \n\n```\n2016-10-05 15:01:26.323+0000 ERROR [o.n.b.v.r.i.ErrorReporter] Client triggered an unexpected error [UnknownError]: File has been unmapped: blah/neo4j/data/databa\nses/graph.db/neostore.counts.db.b. See debug.log for more details, reference b916fb1c-5998-4cbf-a6ed-dd8e280c7159.\n2016-10-05 15:01:26.323+0000 ERROR [o.n.b.v.r.i.ErrorReporter] Client triggered an unexpected error [UnknownError]: File has been unmapped: blah/neo4j/data/databa\nses/graph.db/neostore.counts.db.b, reference b916fb1c-5998-4cbf-a6ed-dd8e280c7159. File has been unmapped: blah/neo4j/data/databases/graph.db/neostore.counts.db.b\njava.lang.IllegalStateException: File has been unmapped:blah/neo4j/data/databases/graph.db/neostore.counts.db.b\n        at org.neo4j.io.pagecache.impl.muninn.MuninnPagedFile.getLastPageId(MuninnPagedFile.java:380)\n        at org.neo4j.io.pagecache.impl.muninn.MuninnPageCursor.assertPagedFileStillMappedAndGetIdOfLastPage(MuninnPageCursor.java:369)\n        at org.neo4j.io.pagecache.impl.muninn.MuninnReadPageCursor.next(MuninnReadPageCursor.java:55)\n        at org.neo4j.kernel.impl.store.kvstore.KeyValueStoreFile.scan(KeyValueStoreFile.java:87)\n        at org.neo4j.kernel.impl.store.kvstore.ReadableState$1.lookup(ReadableState.java:67)\n        at org.neo4j.kernel.impl.store.kvstore.ConcurrentMapState.performLookup(ConcurrentMapState.java:354)\n        at org.neo4j.kernel.impl.store.kvstore.ConcurrentMapState.lookup(ConcurrentMapState.java:342)\n        at org.neo4j.kernel.impl.store.kvstore.ConcurrentMapState.performLookup(ConcurrentMapState.java:354)\n        at org.neo4j.kernel.impl.store.kvstore.ConcurrentMapState.access$300(ConcurrentMapState.java:33)\n        at org.neo4j.kernel.impl.store.kvstore.ConcurrentMapState$Prototype.lookup(ConcurrentMapState.java:277)\n        at org.neo4j.kernel.impl.store.kvstore.RotationState$Rotation.lookup(RotationState.java:201)\n        at org.neo4j.kernel.impl.store.kvstore.AbstractKeyValueStore.lookup(AbstractKeyValueStore.java:86)\n        at org.neo4j.kernel.impl.store.counts.CountsTracker.get(CountsTracker.java:165)\n        at org.neo4j.kernel.impl.store.counts.CountsTracker.nodeCount(CountsTracker.java:176)\n        at org.neo4j.kernel.impl.api.store.DiskLayer.countsForNode(DiskLayer.java:562)\n        at org.neo4j.kernel.impl.api.store.CacheLayer.countsForNode(CacheLayer.java:351)\n        at org.neo4j.kernel.impl.api.StateHandlingStatementOperations.countsForNodeWithoutTxState(StateHandlingStatementOperations.java:1193)\n        at org.neo4j.kernel.impl.api.OperationsFacade.countsForNodeWithoutTxState(OperationsFacade.java:1394)\n        at org.neo4j.cypher.internal.spi.v3_0.TransactionBoundGraphStatistics$BaseTransactionBoundGraphStatistics.indexSelectivity(TransactionBoundGraphStatistics.scala:39)\n        at org.neo4j.cypher.internal.compiler.v3_0.spi.DelegatingGraphStatistics.indexSelectivity(GraphStatistics.scala:66)\n        at org.neo4j.cypher.internal.compiler.v3_0.spi.InstrumentedGraphStatistics.indexSelectivity(InstrumentedGraphStatistics.scala:77)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.ExpressionSelectivityCalculator$$anonfun$5.apply(ExpressionSelectivityCalculator.scala:139)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.ExpressionSelectivityCalculator$$anonfun$5.apply(ExpressionSelectivityCalculator.scala:136)\n        at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\n        at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:241)\n        at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n        at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:241)\n        at scala.collection.AbstractTraversable.flatMap(Traversable.scala:104)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.ExpressionSelectivityCalculator.calculateSelectivityForPropertyEquality(ExpressionSelectivityCalcu\nlator.scala:135)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.ExpressionSelectivityCalculator.apply(ExpressionSelectivityCalculator.scala:55)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel$$anonfun$4.apply(AssumeIndependenc\neQueryGraphCardinalityModel.scala:101)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel$$anonfun$4.apply(AssumeIndependenc\neQueryGraphCardinalityModel.scala:101)\n        at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n        at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n        at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n        at scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\n        at scala.collection.AbstractTraversable.map(Traversable.scala:104)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.ExpressionSelectivityCalculator.calculateSelectivityForPropertyEquality(ExpressionSelectivityCalcu\nlator.scala:135)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.ExpressionSelectivityCalculator.apply(ExpressionSelectivityCalculator.scala:55)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel$$anonfun$4.apply(AssumeIndependenc\neQueryGraphCardinalityModel.scala:101)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel$$anonfun$4.apply(AssumeIndependenc\neQueryGraphCardinalityModel.scala:101)\n        at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n        at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n        at scala.collection.mutable.ResizableArray$class.foreach(ResizableArray.scala:59)\n        at scala.collection.mutable.ArrayBuffer.foreach(ArrayBuffer.scala:48)\n        at scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\n        at scala.collection.AbstractTraversable.map(Traversable.scala:104)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel.calculateSelectivity(AssumeIndepen\ndenceQueryGraphCardinalityModel.scala:101)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel.org$neo4j$cypher$internal$compiler\n$v3_0$planner$logical$cardinality$assumeIndependence$AssumeIndependenceQueryGraphCardinalityModel$$cardinalityForQueryGraph(AssumeIndependenceQueryGraphCardinalityModel.scala:77\n)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel$$anonfun$1.apply(AssumeIndependenc\neQueryGraphCardinalityModel.scala:46)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel$$anonfun$1.apply(AssumeIndependenc\neQueryGraphCardinalityModel.scala:46)\n        at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n        at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n        at scala.collection.immutable.List.foreach(List.scala:381)\n        at scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\n        at scala.collection.immutable.List.map(List.scala:285)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel.apply(AssumeIndependenceQueryGraph\nCardinalityModel.scala:46)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.cardinality.assumeIndependence.AssumeIndependenceQueryGraphCardinalityModel.apply(AssumeIndependenceQueryGraph\nCardinalityModel.scala:31)\n        at scala.Function3$$anonfun$tupled$1.apply(Function3.scala:35)\n        at scala.Function3$$anonfun$tupled$1.apply(Function3.scala:34)\n        at org.neo4j.cypher.internal.compiler.v3_0.helpers.CachedFunction$$anon$1$$anonfun$apply$1.apply(CachedFunction.scala:30)\n        at scala.collection.mutable.MapLike$class.getOrElseUpdate(MapLike.scala:194)\n        at scala.collection.mutable.AbstractMap.getOrElseUpdate(Map.scala:80)\n        at org.neo4j.cypher.internal.compiler.v3_0.helpers.CachedFunction$$anon$1.apply(CachedFunction.scala:30)\n        at scala.Function$$anonfun$untupled$2.apply(Function.scala:115)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.StatisticsBackedCardinalityModel.org$neo4j$cypher$internal$compiler$v3_0$planner$logical$StatisticsBackedCardi\nnalityModel$$calculateCardinalityForQueryGraph(StatisticsBackedCardinalityModel.scala:95)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.StatisticsBackedCardinalityModel$$anonfun$1.apply(StatisticsBackedCardinalityModel.scala:36)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.StatisticsBackedCardinalityModel$$anonfun$1.apply(StatisticsBackedCardinalityModel.scala:34)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.PlannerQuery$class.recurse$1(PlannerQuery.scala:145)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.PlannerQuery$class.fold(PlannerQuery.scala:153)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.RegularPlannerQuery.fold(PlannerQuery.scala:39)\n at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.StatisticsBackedCardinalityModel.apply(StatisticsBackedCardinalityModel.scala:34)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.StatisticsBackedCardinalityModel.apply(StatisticsBackedCardinalityModel.scala:31)\n        at scala.Function3$$anonfun$tupled$1.apply(Function3.scala:35)\n        at scala.Function3$$anonfun$tupled$1.apply(Function3.scala:34)\n        at org.neo4j.cypher.internal.compiler.v3_0.helpers.CachedFunction$$anon$1$$anonfun$apply$1.apply(CachedFunction.scala:30)\n        at scala.collection.mutable.MapLike$class.getOrElseUpdate(MapLike.scala:194)\n        at scala.collection.mutable.AbstractMap.getOrElseUpdate(Map.scala:80)\n        at org.neo4j.cypher.internal.compiler.v3_0.helpers.CachedFunction$$anon$1.apply(CachedFunction.scala:30)\n        at scala.Function$$anonfun$untupled$2.apply(Function.scala:115)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.steps.LogicalPlanProducer.estimatePlannerQuery(LogicalPlanProducer.scala:641)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.steps.LogicalPlanProducer$$anonfun$planStarProjection$1.apply(LogicalPlanProducer.scala:379)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.steps.LogicalPlanProducer$$anonfun$planStarProjection$1.apply(LogicalPlanProducer.scala:379)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.plans.LogicalPlan.updateSolved(LogicalPlan.scala:77)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.steps.LogicalPlanProducer.planStarProjection(LogicalPlanProducer.scala:379)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.steps.projection$.apply(projection.scala:42)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.PlanEventHorizon$.apply(PlanEventHorizon.scala:47)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.PlanEventHorizon$.apply(PlanEventHorizon.scala:31)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.PlanWithTail.apply(PlanWithTail.scala:46)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.PlanWithTail.apply(PlanWithTail.scala:29)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.PlanSingleQuery.apply(PlanSingleQuery.scala:47)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.PlanSingleQuery.apply(PlanSingleQuery.scala:30)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.DefaultQueryPlanner$$anonfun$2.apply(QueryPlanner.scala:51)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.DefaultQueryPlanner$$anonfun$2.apply(QueryPlanner.scala:51)\n        at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n        at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n        at scala.collection.immutable.List.foreach(List.scala:381)\n        at scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\n        at scala.collection.immutable.List.map(List.scala:285)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.DefaultQueryPlanner.planQueries(QueryPlanner.scala:51)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.logical.DefaultQueryPlanner.plan(QueryPlanner.scala:36)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.CostBasedExecutablePlanBuilder.produceLogicalPlan(CostBasedExecutablePlanBuilder.scala:95)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.CostBasedExecutablePlanBuilder$$anonfun$1.apply(CostBasedExecutablePlanBuilder.scala:71)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.CostBasedExecutablePlanBuilder$$anonfun$1.apply(CostBasedExecutablePlanBuilder.scala:71)\n        at org.neo4j.cypher.internal.compiler.v3_0.helpers.package$$anonfun$closing$1.apply(package.scala:29)\n        at org.neo4j.cypher.internal.compiler.v3_0.helpers.package$$anonfun$closing$1.apply(package.scala:29)\n        at org.neo4j.cypher.internal.compiler.v3_0.helpers.package$.using(package.scala:37)\n        at org.neo4j.cypher.internal.compiler.v3_0.helpers.package$.closing(package.scala:29)\n        at org.neo4j.cypher.internal.compiler.v3_0.planner.CostBasedExecutablePlanBuilder.producePlan(CostBasedExecutablePlanBuilder.scala:70)\n        at org.neo4j.cypher.internal.compiler.v3_0.executionplan.procs.DelegatingProcedureExecutablePlanBuilder.producePlan(DelegatingProcedureExecutablePlanBuilder.scala:98)\n        at org.neo4j.cypher.internal.compiler.v3_0.executionplan.FallbackBuilder$class.producePlan(SilentFallbackPlanBuilder.scala:38)\n        at org.neo4j.cypher.internal.compiler.v3_0.executionplan.SilentFallbackPlanBuilder.producePlan(SilentFallbackPlanBuilder.scala:61)\n        at org.neo4j.cypher.internal.compiler.v3_0.executionplan.ExecutionPlanBuilder.build(ExecutionPlanBuilder.scala:83)\n        at org.neo4j.cypher.internal.compiler.v3_0.CypherCompiler$$anonfun$5.apply(CypherCompiler.scala:170)\n        at org.neo4j.cypher.internal.compiler.v3_0.CypherCompiler$$anonfun$5.apply(CypherCompiler.scala:170)\n        at org.neo4j.cypher.internal.compiler.v3_0.QueryCache$$anonfun$getOrElseUpdate$1$$anonfun$apply$1.apply(CacheAccessor.scala:36)\n        at org.neo4j.cypher.internal.compiler.v3_0.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:57)\n        at org.neo4j.cypher.internal.compiler.v3_0.LRUCache.getOrElseUpdate(LRUCache.scala:34)\n        at org.neo4j.cypher.internal.compiler.v3_0.LRUCache.apply(LRUCache.scala:64)\n        at org.neo4j.cypher.internal.compiler.v3_0.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:55)\n        at org.neo4j.cypher.internal.compiler.v3_0.QueryCache$$anonfun$getOrElseUpdate$1.apply(CacheAccessor.scala:34)\n        at scala.collection.Iterator$$anon$9.next(Iterator.scala:162)\n        at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434)\n        at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n        at scala.collection.Iterator$$anon$12.next(Iterator.scala:444)\n        at org.neo4j.cypher.internal.compiler.v3_0.QueryCache.getOrElseUpdate(CacheAccessor.scala:46)\n        at org.neo4j.cypher.internal.compiler.v3_0.CypherCompiler.planPreparedQuery(CypherCompiler.scala:168)\n        at org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$$anon$3$$anonfun$plan$1.apply(CompatibilityFor3_0.scala:194)\n        at org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$$anon$3$$anonfun$plan$1.apply(CompatibilityFor3_0.scala:191)\n        at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_0$.runSafely(CompatibilityFor3_0.scala:139)\n        at org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$$anon$3.plan(CompatibilityFor3_0.scala:191)\n        at org.neo4j.cypher.internal.ExecutionEngine.org$neo4j$cypher$internal$ExecutionEngine$$producePlan$1(ExecutionEngine.scala:167)\n        at org.neo4j.cypher.internal.ExecutionEngine$$anonfun$liftedTree1$1$1.apply(ExecutionEngine.scala:170)\n        at org.neo4j.cypher.internal.ExecutionEngine$$anonfun$liftedTree1$1$1.apply(ExecutionEngine.scala:170)\n        at org.neo4j.cypher.internal.compiler.v3_0.QueryCache$$anonfun$getOrElseUpdate$1$$anonfun$apply$1.apply(CacheAccessor.scala:36)\n        at org.neo4j.cypher.internal.compiler.v3_0.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:57)\n        at org.neo4j.cypher.internal.compiler.v3_0.LRUCache.getOrElseUpdate(LRUCache.scala:34)\n        at org.neo4j.cypher.internal.compiler.v3_0.LRUCache.apply(LRUCache.scala:64)\n        at org.neo4j.cypher.internal.compiler.v3_0.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:55)\n        at org.neo4j.cypher.internal.compiler.v3_0.QueryCache$$anonfun$getOrElseUpdate$1.apply(CacheAccessor.scala:34)\n        at scala.collection.Iterator$$anon$9.next(Iterator.scala:162)\n        at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434)\n        at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n        at scala.collection.Iterator$$anon$12.next(Iterator.scala:444)\n        at org.neo4j.cypher.internal.compiler.v3_0.QueryCache.getOrElseUpdate(CacheAccessor.scala:46)\n        at org.neo4j.cypher.internal.ExecutionEngine.liftedTree1$1(ExecutionEngine.scala:170)\n        at org.neo4j.cypher.internal.ExecutionEngine.planQuery(ExecutionEngine.scala:156)\n        at org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:110)\n        at org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:65)\n        at org.neo4j.bolt.v1.runtime.internal.CypherStatementRunner.run(CypherStatementRunner.java:73)\n        at org.neo4j.bolt.v1.runtime.internal.StandardStateMachineSPI.run(StandardStateMachineSPI.java:110)\n        at org.neo4j.bolt.v1.runtime.internal.SessionStateMachine$State$2.runStatement(SessionStateMachine.java:132)\n        at org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.run(SessionStateMachine.java:725)\n        at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorkerFacade.lambda$run$1(SessionWorkerFacade.java:69)\n        at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.execute(SessionWorker.java:116)\n        at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.run(SessionWorker.java:77)\n        at java.lang.Thread.run(Thread.java:745)\n```\n"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7906", "title": "Corrupted data after cleaning the database", "closed": "2016-09-22 07:31:35", "commitsDetails": [], "commits": {}, "ttf": 12.000277777777777, "created": "2016-09-09 14:42:10", "user": "Humanitis", "body": "We have several tests that create data in the neo4j. \nBefore each test we delete all data from the database, using the query \"MATCH (n) DETACH DELETE n\". \nIn some cases, after cleaning the base, we get an error \"Property [6146, used = false, prev = -1, next = 6145, (blocks not loaded)] not in use\". \nAfter that, the deletion request always returns this error. \nRestarting the server does not help\n\n**Neo4j version:** 3.0.4 (running in the docker container)\n**Operating system:** Debian 8\n**API/Driver:** Neo4jClient 2.0 (.NET)\n"}, {"labels": ["3.0", "bug", "cypher"], "filteredCommits": ["6b107200b2e8e5750e2bfac810ab27da26f5c35c"], "url": "https://github.com/neo4j/neo4j/issues/7903", "gitStatsSummary": {"insertions": 9, "gitFilesChange": 1, "lines": 23, "deletions": 14}, "numCommits": 1, "commits": {"6b107200b2e8e5750e2bfac810ab27da26f5c35c": {"commitUser": "boggle", "commitGHEventType": "closed"}}, "ttf": 11.000277777777777, "user": "bflyblue", "changesInPackagesGIT": ["community/cypher/frontend-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "- Neo4j version: 3.0.4\n- Operating system: NixOS\n- API/Driver: haskell-neo4j-client-0.3.2.0\n\nI'm running a query that passes in a value as a parameter inside a `toInt` expression that seems to work when:\n- sending a literal floating point value\n- passing as a parameter running against Neo4j 3.0.3\n\nbut fail when:\n- passing as a parameter running against Neo4j 3.0.4 with the following error:\n  \"Type mismatch: expected Number or String but was Float, Integer\"\n\nThe statement looks something like:\n\nMATCH xxx\nWITH v1.cost AS c1\nWITH toInt(c1 / {p0} - c1) AS c3\nRETURN c3 AS result\n\nand in Haskell I'm passing a Double value:\n\nfromList [(\"p0\",ParamLiteral (ValueProperty (DoubleVal 0.85)))]\n\nI think the following change might be related:\n\nhttps://github.com/neo4j/neo4j/pull/7392/commits/7b997f30113a26df9ab8083af2e8148b754e43ab\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "toInt works on 3.0.3 but failed on 3.0.4 with: expected Number or String but was Float, Integer", "statsSkippedReason": "", "closed": "2016-09-21 08:44:04", "commitsDetails": [{"commitUser": "boggle", "commitDateTime": "2016-09-20 17:50:22", "commitHash": "6b107200b2e8e5750e2bfac810ab27da26f5c35c", "commitParents": ["5515f38aa3fbea663116cb3349f01d67c7242cca"], "commitGHEventType": "closed", "nameRev": "6b107200b2e8e5750e2bfac810ab27da26f5c35c tags/3.1.0-M10~5^2~17^2", "commitGitStats": [{"insertions": 10, "lines": 10, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/FunctionsAcceptanceTest.scala", "deletions": 0}, {"insertions": 9, "lines": 23, "filePath": "community/cypher/frontend-3.0/src/main/scala/org/neo4j/cypher/internal/frontend/v3_0/ast/functions/ToInt.scala", "deletions": 14}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix type-checking bug for `toInt()`\n\nFixes #7903\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-09-20 17:50:22"}], "created": "2016-09-09 09:44:34"}, {"labels": ["3.1", "bug", "security"], "url": "https://github.com/neo4j/neo4j/issues/7886", "title": "3.1M08 Shiro authentication timeout after 30 minutes for long-running queries", "closed": "2016-09-15 10:43:53", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2016-09-07 06:06:59", "user": "graphadvantage", "body": "Windows Server 2012 R2 Azure D15v2 Standard 140GB, 20 cores, SSD\n\nNeo4j 3.1M08 Enterprise\n\nI have a large graph and my transactions are timing out after 30 minutes, irrespective of driver. Docs indicate default REST session timeout is 60 minutes.  I see a 30 minute session timeout for REST console and for Bolt transactions using the neo4j-python driver.  I suspect this has to do with a Shiro authentication session timeout, since it is shorter than the default transaction timeout.\n\nFrom Deployment Appendix A\nTimeout for idle transactions in the REST endpoint.\ndbms.transaction_timeout is a duration (valid units are ms, s, m)\nDefault value 60000 ms  --> 60 minutes\n# \n\nlocalhost:7474\n\nSession with id [fb3e726e-e9ea-449f-b8a9-5ba721a2d5bf] has expired. Last access time: 9/7/16 2:47 AM.  Current time: 9/7/16 3:17 AM.  Session timeout is set to 1800 seconds (30 minutes)\n# \n\nApoc procedure, localhost:7474\n\nCALL apoc.warmup.run()\n\nFailed to invoke procedure `apoc.warmup.run`: Caused by: org.apache.shiro.session.ExpiredSessionException: Session with id [1d93f4ae-1b4f-403b-8534-4818462dbe19] has expired. Last access time: 9/7/16 2:43 AM.  Current time: 9/7/16 3:13 AM.  Session timeout is set to 1800 seconds (30 minutes)\n# \n\nBolt driver for python:\n\n2016-09-07 03:45:46.739+0000 ERROR Fatal, worker for session 'db8670bb-2f83-4b3a-ba11-3c1d4dc8396f' crashed. Please contact your support representative if you are unable to resolve this. The client is unauthorized due to authentication failu\nre.\norg.neo4j.bolt.v1.runtime.BoltConnectionFatality: The client is unauthorized due to authentication failure.\n        at org.neo4j.bolt.v1.runtime.BoltStateMachine$State$1.init(BoltStateMachine.java:347)\n        at org.neo4j.bolt.v1.runtime.BoltStateMachine.init(BoltStateMachine.java:117)\n        at org.neo4j.bolt.v1.messaging.BoltMessageRouter.lambda$onInit$0(BoltMessageRouter.java:64)\n        at org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.execute(RunnableBoltWorker.java:126)\n        at org.neo4j.bolt.v1.runtime.concurrent.RunnableBoltWorker.run(RunnableBoltWorker.java:87)\n        at java.lang.Thread.run(Thread.java:745)\n# \n\nDebug:\n\n2016-09-08 05:04:59.818+0000 ERROR [o.n.b.v.r.ErrorReporter] Client triggered an unexpected error [UnknownError]: Session with id [34be60ab-47cf-48e6-9e0e-37bd445e57a0] has expired. Last access time: 9/8/16 4:34 AM.  Current time: 9/8/16 5:04 AM.  Session timeout is set to 1800 seconds (30 minutes), reference 13a63b23-bfa6-421d-bedb-468762c4e20f. Session with id [34be60ab-47cf-48e6-9e0e-37bd445e57a0] has expired. Last access time: 9/8/16 4:34 AM.  Current time: 9/8/16 5:04 AM.  Session timeout is set to 1800 seconds (30 minutes)\norg.apache.shiro.session.ExpiredSessionException: Session with id [34be60ab-47cf-48e6-9e0e-37bd445e57a0] has expired. Last access time: 9/8/16 4:34 AM.  Current time: 9/8/16 5:04 AM.  Session timeout is set to 1800 seconds (30 minutes)\n    at org.apache.shiro.session.mgt.SimpleSession.validate(SimpleSession.java:292)\n    at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doValidate(AbstractValidatingSessionManager.java:186)\n    at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.validate(AbstractValidatingSessionManager.java:143)\n    at org.apache.shiro.session.mgt.AbstractValidatingSessionManager.doGetSession(AbstractValidatingSessionManager.java:120)\n    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupSession(AbstractNativeSessionManager.java:108)\n    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.lookupRequiredSession(AbstractNativeSessionManager.java:112)\n    at org.apache.shiro.session.mgt.AbstractNativeSessionManager.getAttribute(AbstractNativeSessionManager.java:209)\n    at org.apache.shiro.session.mgt.DelegatingSession.getAttribute(DelegatingSession.java:141)\n    at org.apache.shiro.session.ProxiedSession.getAttribute(ProxiedSession.java:121)\n    at org.apache.shiro.subject.support.DelegatingSubject.getRunAsPrincipalsStack(DelegatingSubject.java:469)\n    at org.apache.shiro.subject.support.DelegatingSubject.getPrincipals(DelegatingSubject.java:153)\n    at org.apache.shiro.subject.support.DelegatingSubject.hasPrincipals(DelegatingSubject.java:126)\n    at org.apache.shiro.subject.support.DelegatingSubject.isPermitted(DelegatingSubject.java:158)\n    at org.neo4j.server.security.enterprise.auth.EnterpriseAuthSubject.allowsReads(EnterpriseAuthSubject.java:112)\n# \n\nShiro Documentation\nhttp://shiro.apache.org/session-management.html#SessionManagement-SessionTimeout\n\n```\nSession Timeout\n\nBy default, Shiro's SessionManager implementations default to a 30 minute session timeout. That is, if any Session created remains idle (unused, where its lastAccessedTime isn't updated) for 30 minutes or more, the Session is considered expired and will not be allowed to be used anymore.\n\nYou can set the default SessionManager implementation's globalSessionTimeout property to define the default timeout value for all sessions. For example, if you wanted the timeout to be an hour instead of 30 minutes:\n\nSetting the Default Session Timeout in shiro.ini\n[main]\n...\n#3,600,000 milliseconds = 1 hour\nsecurityManager.sessionManager.globalSessionTimeout = 360000\n```\n# \n\n**_Steps to reproduce**_\n1. Find a large graph\n2. Run a query that takes excess of 30 minutes to complete\n3. Query can be executed through console or python Bolt driver\n\n**_Expected behavior:**_\nSetting session timeout in neo4j.conf should be inherited by Shiro.  Long running queries should be updating Shiro lastAccessedTime to prevent timeout.  Should function the same for Bolt and REST.  Sessions with queries returning results and within the neo4j.conf session timeout should not be interrupted by Shiro.  If Shiro can't inherit the neo4j.conf, then expose shiro.ini so users can configure the timeout directly.\n\nThanks Michael\n"}, {"labels": ["3.0", "bug", "desktop"], "url": "https://github.com/neo4j/neo4j/issues/7874", "title": "[Neo4j Desktop] `Plugins and Extensions` configuration is pointing to invalid directory", "closed": "2018-05-23 12:44:01", "commitsDetails": [], "commits": {}, "ttf": 624.0002777777778, "created": "2016-09-05 16:51:22", "user": "FylmTM", "body": "## Guidelines\n- Neo4j version: 3.0.4\n- Operating system: OS X El Capitan (10.11.5)\n### TL;DR;\n\nOn OS X plugins are loaded from `/Applications/Neo4j\\ Community\\ Edition.app/Contents/Resources/app/plugins/` directory only, because Neo4j Desktop installer is hardcoded to `plugin` folder inside distribution.\n\nDetailed information about this issue: https://github.com/graphaware/neo4j-framework/issues/41#issuecomment-244783975\n### Steps to reproduce\n1. Downloaded Neo4j `.dmg` installer\n2. Install Neo4j\n3. Start Neo4j application\n4. Open `Options...`\n5. Open `Plugins and extensions` folder\n6. Put any plugin here that should work (e.g. APOC procedures)\n7. Restart application & start Neo4j\n### Expected behavior\n\nPlugin will be loaded and work.\n### Actual behavior\n\nPlugin is not loaded.\n"}, {"labels": ["3.0", "browser", "bug", "team-ux"], "url": "https://github.com/neo4j/neo4j/issues/7806", "title": "\":play sysinfo\" displays tables with no values on the master of a cluster", "closed": "2018-11-19 07:17:18", "commitsDetails": [], "commits": {}, "ttf": 815.0002777777778, "created": "2016-08-25 08:42:21", "user": "fpavageau", "body": "When Neo4j is running in HA mode, the `:play sysinfo` command in the browser of the master node displays all tables without any values, like this:\n\n<img width=\"600\" alt=\"sysinfo-ha-master\" src=\"https://cloud.githubusercontent.com/assets/800088/17961739/dab08f62-6aad-11e6-82e6-9f04f08555b0.png\">\n\nThis is on a single-node cluster, configured with\n\n``` ini\ndbms.mode=HA\nha.server_id=1\nha.initial_hosts=127.0.0.1:5001\nha.host.coordination=127.0.0.1:5001\nha.host.data=127.0.0.1:6001\n```\n\nbut it's the same on a multi-node cluster. The browser of the slave nodes displays the information correctly, including the HA and cluster parts.\n\nWhen running in single mode, the same instance also displays the tables correctly:\n\n<img width=\"600\" alt=\"sysinfo-single\" src=\"https://cloud.githubusercontent.com/assets/800088/17961808/1d88f0d6-6aae-11e6-9643-38a7ca1622c5.png\">\n# Additional information\n\n**Neo4j version:** 3.0.4 Enterprise\n**Operating System:** OS X El Capitan (10.11.6)\n**Browser version:** Google Chrome 52.0.2743.116\n\nUsing the Chrome Dev Tools, an error can be seen in the console:\n\n```\nTypeError: Cannot read property 'length' of undefined\n    at cbdd8ec2.scripts.js:9\n    at processQueue (97ea0b85.components.js:11)\n    at 97ea0b85.components.js:11\n    at Scope.$eval (97ea0b85.components.js:11)\n    at Scope.$digest (97ea0b85.components.js:11)\n    at Scope.$apply (97ea0b85.components.js:11)\n    at HTMLBodyElement.<anonymous> (cbdd8ec2.scripts.js:1)\n    at HTMLBodyElement.dispatch (97ea0b85.components.js:3)\n    at HTMLBodyElement.elemData.handle (97ea0b85.components.js:3)\n```\n\nThe problem was mentioned in #7066 in May (on 3.0.0), with a comment saying it would be fixed in the next release, but it's still present in 3.0.4.\n"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7772", "title": "neo4j-import out of memory error", "closed": "2018-05-23 12:47:18", "commitsDetails": [], "commits": {}, "ttf": 638.0002777777778, "created": "2016-08-22 17:57:22", "user": "markrcosta", "body": "### bug report\n\nThe neo4j-import tool for version 3.0.4 runs of memory, and is not reading the java max heap settings set at the OS level (i.e., it is identifying a max heap of 20.98 gb when the max heap is set at 72gb)\n\n**Neo4j Version:** 3.0.4 \n**Operating System:** Ubuntu 14.10  \n**API:** neo4j-import\n### Steps to reproduce\n\nI am trying to import a set of relatively large csv files related to the Microsoft Academic Graph. When I run the neo4j-import tool, the tool arbitrarily selects a maximum Java Heap size of 20gb, even though I have the max heap size set on my machine to ~72gb. After the import tool runs for some time I get a java.lang.OutOfMemoryError: Java heap space.\n### Expected behavior\n\nThe import tool should handle large data sets without running out of memory.\n### Actual behavior\n\nThe import tool aborts when the heap space is used. I've pasted the output of the import below.\n\n> Neo4j version: 3.0.4\n> Importing the contents of these files into graph.db:\n> Nodes:\n>   :Conference\n>   /usr/share/neo4j/import/conference_header.csv\n>   /usr/share/neo4j/import/Conferences.txt\n> \n>   :Author\n>   /usr/share/neo4j/import/author_header.csv\n>   /usr/share/neo4j/import/Authors.txt\n> \n>   :FoS\n>   /usr/share/neo4j/import/fos_header.csv\n>   /usr/share/neo4j/import/fieldsofstudy.csv\n> \n>   :Journal\n>   /usr/share/neo4j/import/journal_header.csv\n>   /usr/share/neo4j/import/Journals.txt\n> \n>   :Paper\n>   /usr/share/neo4j/import/paper_header.csv\n>   /usr/share/neo4j/import/Papers.txt\n> \n>   :Affiliation\n>   /usr/share/neo4j/import/affiliation_header.csv\n>   /usr/share/neo4j/import/Affiliations.txt\n> \n>   :AuthorAffiliation\n>   /usr/share/neo4j/import/authoraffiliations.csv\n> Relationships:\n>   :parent_of\n>   /usr/share/neo4j/import/fos_hierarchy_header.csv\n>   /usr/share/neo4j/import/foshierarchy.csv\n> \n>   :about\n>   /usr/share/neo4j/import/paper_keyword_header.csv\n>   /usr/share/neo4j/import/PaperKeywords.txt\n> \n>   :cited\n>   /usr/share/neo4j/import/paper_references_header.csv\n>   /usr/share/neo4j/import/PaperReferences.txt\n> \n>   :wrote\n>   /usr/share/neo4j/import/wrote_header.csv\n>   /usr/share/neo4j/import/PaperAuthorAffiliations.txt\n> \n>   :wrote_while_at\n>   /usr/share/neo4j/import/authaffilpaper.csv\n> \n>   :affiliated_with\n>   /usr/share/neo4j/import/affiliatedwith.csv\n> \n>   :published_in\n>   /usr/share/neo4j/import/paperjournal.csv\n>   /usr/share/neo4j/import/paperconference.csv\n> \n> Available memory:\n>   Free machine memory: 65.03 GB\n>   Max heap memory : 20.98 GB\n> ....\n> *DEDUPLICATE:10.91 GB------------------------------------------------------------------------] 193M\n> Exception in thread \"Thread-581\" java.lang.OutOfMemoryError: Java heap space\n>   at java.util.Arrays.copyOf(Arrays.java:3308)\n>   at org.neo4j.unsafe.impl.batchimport.input.BadCollector.collectDuplicateNode(BadCollector.java:113)\n>   at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.detectDuplicateInputIds(EncodingIdMapper.java:589)\n>   at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.buildCollisionInfo(EncodingIdMapper.java:493)\n>   at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.prepare(EncodingIdMapper.java:281)\n>   at org.neo4j.unsafe.impl.batchimport.IdMapperPreparationStep.process(IdMapperPreparationStep.java:54)\n>   at org.neo4j.unsafe.impl.batchimport.staging.LonelyProcessingStep$1.run(LonelyProcessingStep.java:56)\n> Exception in thread \"main\" java.lang.OutOfMemoryError: Java heap space\n>   at java.util.Arrays.copyOf(Arrays.java:3308)\n>   at org.neo4j.unsafe.impl.batchimport.input.BadCollector.collectDuplicateNode(BadCollector.java:113)\n>   at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.detectDuplicateInputIds(EncodingIdMapper.java:589)\n>   at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.buildCollisionInfo(EncodingIdMapper.java:493)\n>   at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.EncodingIdMapper.prepare(EncodingIdMapper.java:281)\n>   at org.neo4j.unsafe.impl.batchimport.IdMapperPreparationStep.process(IdMapperPreparationStep.java:54)\n>   at org.neo4j.unsafe.impl.batchimport.staging.LonelyProcessingStep$1.run(LonelyProcessingStep.java:56)\n"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7771", "title": "count() caches off by after some failure", "closed": "2017-10-19 12:14:36", "commitsDetails": [], "commits": {}, "ttf": 422.0002777777778, "created": "2016-08-22 16:56:11", "user": "dotdotdotpaul", "body": "I have an instance of 3.0.3 and after monkeying around with various data, and doing \"MATCH (v) DETACH DELETE v;\" a lot, I've found that I've gotten into an odd situation where the database tells me there are -1 nodes when I do \"MATCH (v) RETURN count(v)\".  I saved off the entire database path for reference, not sure if it's appropriate to load the whole thing here (it's 2.5MB, even though it's theoretically \"empty\").\n\nI would get -1 for both MATCH (v) RETURN count(v) and for MATCH (v:Claim) RETURN count(v) but not for MATCH(v:Foobar) RETURN count(v) -- I had been monkeying with Claim nodes, so I must've managed to kill it somehow in the middle of handling those, causing the count caching to decrement prior to actually deleting the node; a subsequent delete then decremented the count again -- although I suppose it's possible that a node was created and the count wasn't incremented on create, so when it was deleted, the count was then off-by-one.\n\nSince it was just a test database, I just deleted the graph.db directory and restarted, and the new database loaded just fine and shows me a zero count.\n- Neo4j version: 3.0.3\n- Operating system: Mac OS X El Capitan\n- API/Driver: Web interface for queries, testing, using neo4j-shell -file to import data.\n- Reproduction steps:  Noted above for showing the problem, not sure how I got it into the state in the first place.\n- Expected: count() should always accurately reflect the count of nodes.\n- Actual: count() appears to be using an independent cached counter which may have been modified in a non-transactional way from the actual node creation/deletion.\n\nPlease let me know if you want me to upload the 2.5MB graph.db directory I have, or if I should email to it someone.\n"}, {"labels": ["3.0", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/7718", "title": "BUG tostring / coalesce and coalesce / tostring", "closed": "2016-10-19 07:31:15", "commitsDetails": [], "commits": {}, "ttf": 67.00027777777778, "created": "2016-08-13 00:22:22", "user": "davidhbigelow", "body": "- Neo4j version: 3.0.4\n- Operating system: ALL\n- API/Driver: Cypher\n- **Steps to reproduce**\n- Expected behavior -- Same as 2.X\n- Actual  - errors are thrown - fix requires a retooling of old cypher code generation! :(\n\n**Neo4j Version:**  3.0.4\n**Operating System:** ALL\n**API:** Cypher\n### Steps to reproduce\n\n```\n// 2.3.5 syntax - WORKS!\nwith [\"male\",\"female\",null] as gender\nunwind gender as gen\nreturn coalesce(str(gen),\"x\") as result\n```\n\n```\n// 2.3.5 syntax - WORKS!\nwith [\"male\",\"female\",null] as gender\nunwind gender as gen\nreturn str(coalesce(gen,\"x\")) as result\n```\n\n```\n// 3.0.4 syntax - FAILS!\nwith [\"male\",\"female\",null] as gender\nunwind gender as gen\nreturn coalesce(tostring(gen),\"x\") as result\n```\n\n```\n// 3.0.4 syntax - FAILS!\nwith [\"male\",\"female\",null] as gender\nunwind gender as gen\nreturn tostring(coalesce(gen,\"x\")) as result\n```\n### Expected behavior\n\nAllows a string-coalesce or a coalesce-string nesting of the function calls.\n### Actual behavior\n\n```\nType mismatch: expected Boolean, Float, Integer or String but was Any, String (line 3, column 26 (offset: 84))\n\"return coalesce(tostring(gen),\"x\") as result\"\n```\n"}, {"labels": ["3.0", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/7713", "title": "Query starts throwing exception after upgrade to Neo4j 3.0.4", "closed": "2016-09-22 10:03:42", "commitsDetails": [], "commits": {}, "ttf": 41.000277777777775, "created": "2016-08-12 05:39:19", "user": "rationalism", "body": "- Neo4j version: 3.0.4\n- Operating system: Ubuntu 16.04\n- API/Driver: Java driver version 1.0.4, but also confirmed in Neo4j browser \n\nWhen I upgraded to Neo4j 3.0.4 from 3.0.3, this query (and many other similar queries) started throwing a DatabaseException:\n\n```\nMATCH (root) WHERE ID(root) = 1110642 \nWITH root \nOPTIONAL MATCH (root)-[r:`name`]-(a0) \nWITH root, collect([ID(root), labels(root), type(r), a0.`val`, r]) AS b0 \nOPTIONAL MATCH (root)-[r:`email-addr`]-(a1) \nWITH root, b0, collect([ID(root), labels(root), type(r), a1.`val`, r]) AS b1 \nOPTIONAL MATCH (root)-[r:`phone-num`]-(a2) WITH root, b0, b1, collect([ID(root), labels(root), type(r), a2.`val`, r]) AS b2 \nOPTIONAL MATCH (root)-[:`email-from`]-(b0a3)-[r:`sent-date`]-(a3) \nWITH root, b0, b1, b2, collect([ID(b0a3), labels(b0a3), type(r), a3.`val`, r]) AS b3 \nOPTIONAL MATCH (root)-[:`email-to`]-(b0a4)-[r:`sent-date`]-(a4) \nWITH root, b0, b1, b2, b3, collect([ID(b0a4), labels(b0a4), type(r), a4.`val`, r]) AS b4 \nOPTIONAL MATCH (root)-[:`link-to`]-(b0a5)-[:`has-link`]-(b1a5)-[r:`sent-date`]-(a5) \nWITH root, b0, b1, b2, b3, b4, collect([ID(b1a5), labels(b1a5), type(r), a5.`val`, r]) AS b5 \nRETURN b0, b1, b2, b3, b4, b5\n```\n\nWhen I tried this query in the Neo4j browser, it returned this error message:\n\n(ArrayBuffer(1110642, (recon,person_user_1062118), null),null) (of class scala.Tuple2)\n\nHere is the stack trace in logs/debug.log:\n\nhttps://gist.github.com/rationalism/347a085fb9bb3ec916d04449c692976a\n\nThe problem was fixed by reverting to Neo4j version 3.0.3.\n"}, {"labels": ["3.0", "bug", "docs"], "url": "https://github.com/neo4j/neo4j/issues/7712", "title": "Link broken in neo4j text file", "closed": "2016-12-12 16:52:06", "commitsDetails": [], "commits": {}, "ttf": 122.00027777777778, "created": "2016-08-12 05:03:46", "user": "rationalism", "body": "The UPGRADE.txt file in the neo4j 3.0.4 download reads:\n\n\"For upgrade instructions, please see http://neo4j.com/docs/operations-manual/current/#upgrading.\"\n\nThis link looks broken. The appropriate link appears to be http://neo4j.com/docs/operations-manual/current/deployment/#upgrade.\n"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7690", "title": "Neo4j 3.0.4 embedded freezes when updating a legacy index", "closed": "2016-11-29 11:17:46", "commitsDetails": [], "commits": {}, "ttf": 112.00027777777778, "created": "2016-08-08 18:14:52", "user": "cmorgner", "body": "**Neo4j version:** 3.0.4 Community\n**Operating system:** Kubuntu Linux 16.04\n**API/Driver:** Embedded Core API\n### Expected behaviour\n\nCreate some nodes, add them to a legacy index, shut down the database and exit the program.\n### Actual behaviour\n\nNeo4j instance freezes and consumes 100% CPU time on a single core.\n### Steps to reproduce\n\nRun the following Java class in a Maven project with the below pom.xml.\n\n``` java\npublic class Freeze {\n\n    public static void main(final String[] args) {\n\n        try {\n\n            final File tmpDir                  = Files.createTempDirectory(\"neo4j\").toFile();\n            final GraphDatabaseService service = new GraphDatabaseFactory().newEmbeddedDatabase(tmpDir);\n\n            try (final Transaction tx = service.beginTx()) {\n\n                final Index<Node> index = service.index().forNodes(\"test\");\n                final Node node         = service.createNode();\n\n                for (int i=0; i<20; i++) {\n\n                    // create a new name for each iteration\n                    final String name = \"key\" + i;\n\n                    // remove node from index and add it again (update node with new value)\n                    index.remove(node, name);\n                    index.add(node, name, ValueContext.numeric(i));\n                }\n\n                tx.success();\n            }\n\n            service.shutdown();\n            tmpDir.deleteOnExit();\n\n        } catch (IOException ioex) {\n            ioex.printStackTrace();\n        }\n    }\n}\n```\n\n``` xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n    <modelVersion>4.0.0</modelVersion>\n    <groupId>org.structr</groupId>\n    <artifactId>neo4j-freeze-test</artifactId>\n    <version>0.1-SNAPSHOT</version>\n    <packaging>jar</packaging>\n    <dependencies>\n    <dependency>\n        <groupId>org.neo4j</groupId>\n        <artifactId>neo4j-community</artifactId>\n        <version>3.0.4</version>\n        <type>pom</type>\n    </dependency>\n    </dependencies>\n    <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <maven.compiler.source>1.7</maven.compiler.source>\n    <maven.compiler.target>1.7</maven.compiler.target>\n    </properties>\n</project>\n```\n### Observations\n\nThe method `restoreNumericFields` of class `org.neo4j.index.impl.lucene.legacy.IndexType` seems to multiply the number of numeric `fields` in the Lucene `Document`.\n\nCommenting out the line `index.remove(...)` in the above sample code fixes the issue (but prevents the previous value from being removed from the index, so subsequent index queries will return incorrect results).\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/7672", "title": "Neo4j-import is unknow (nothing in /bin)", "closed": "2018-05-23 12:55:10", "commitsDetails": [], "commits": {}, "ttf": 657.0002777777778, "created": "2016-08-04 08:30:38", "user": "ftriss", "body": "I just installed Neo4j 3.0.4 CE (.exe) and there is no import tool in the bin folder.\n\nIn v2.3, there was some .bat in the bin folder, and on the .zip version, powershell have some command.\n"}, {"labels": ["3.0", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/7665", "title": "ArrayBuffer in results window of console", "closed": "2016-10-19 11:04:21", "commitsDetails": [], "commits": {}, "ttf": 78.00027777777778, "created": "2016-08-01 14:48:00", "user": "webtic", "body": "After upgrading from 3.0.1 community to 3.0.4 a query suddenly failed while it used to work fine.\n\nThe original query:\n\n```\nMATCH (c:Company)-[r:IS_MEMBER]-(g:Group {code:'xxx'})\nOPTIONAL MATCH (u:User)-[:IS_ADMIN]-(c)\nRETURN  DISTINCT c, r.startdate as startdate,\n    r.modified as modified,\n    r.approved as approved,\n    u.email as admin_email\nORDER BY c.name\n```\n\nBy rewriting it to:\n\n```\nMATCH (c:Company)-[r:IS_MEMBER]-(g:Group {code:'xxx'}) \nOPTIONAL MATCH (u:User)-[:IS_ADMIN]-(c) \nWITH distinct c,r,u \nRETURN c, r.startdate as startdate, r.modified as modified, r.approved as approved, u.email as admin_email ORDER BY c.name\n```\n\nIt worked again.\n\n**Neo4j Version:** 3.04\n**Operating System:** Ubuntu 14.04 LTS (Amazone instance)  \n**API:** console\n### Steps to reproduce\n\nWithout the data it might be hard to reproduce. Data available on request.\n### Expected behavior\n\nThe same output as with the 3.0.1 version\n### Actual behavior\n\nThe notificaton Neo.DatabaseError.Statement.ExecutionFailed and on the location of the data-table just the text: (ArrayBuffer(null, null, null),null) (of class scala.Tuple2)\n\n![pasted_image_01_08_16_16_43](https://cloud.githubusercontent.com/assets/3658968/17297713/23c444be-5807-11e6-9f6d-9035c6ad2ecb.png)\n"}, {"labels": ["3.0", "bug"], "url": "https://github.com/neo4j/neo4j/issues/7664", "title": "neo4j.conf incorrect documentation for LOAD CSV setting", "closed": "2016-10-11 09:19:49", "commitsDetails": [], "commits": {}, "ttf": 70.00027777777778, "created": "2016-08-01 14:31:38", "user": "duncancola", "body": "This documentation in the configuration file is incorrect: \n\n```\n# This setting constrains all `LOAD CSV` import files to be under the `import` directory. Remove or uncomment it to\n# allow files to be loaded from anywhere in filesystem; this introduces possible security problems. See the `LOAD CSV`\n# section of the manual for details.\ndbms.directories.import=import\n```\n\nIt should say `Remove or comment`\n\n**Neo4j Version:** 3.0.3  \n**Operating System:** Mac OSX El Capitan\n"}, {"labels": ["3.0", "bug"], "url": "https://github.com/neo4j/neo4j/issues/7648", "title": "enterprise cluster: batch operation with rest call throw an exception with message \"No thread local value in scope for proxy...\"", "closed": "2016-08-16 13:58:01", "commitsDetails": [], "commits": {}, "ttf": 20.00027777777778, "created": "2016-07-27 12:17:55", "user": "mmeloni", "body": "- Neo4j version: 3.0.3\n- Operating system: debian 8\n- API/Driver: rest batch operation \n- To reproduce install a clean cluster ha \n- Actual behavior: throw an exception with message \"No thread local value in scope for proxy of class\"\n\nWe have installed a clean enterprise cluster and try a batch operation with rest interface.\n\nEx:\n\n```\ncurl -H \"Content-Type: application/json\" -d '[ {\"method\" : \"PUT\",\"to\" : \"/node/496/properties\",\"body\" : {\"age\" : 1},\"id\" : 0}, {\"method\" : \"GET\",\"to\" : \"/node/496\",\"id\" : 1}, {\"method\" : \"POST\",\"to\" : \"/node\",\"body\" : {\"age\" : 1},\"id\" : 2}, {\"method\" : \"POST\",\"to\" : \"/node\",\"body\" : {\"age\" : 1},\"id\" : 3}]' http://127.0.0.1:7474/db/data/batch\n```\n\nActually we have this exception:\n\n```\n{\n  \"message\" : \"No thread local value in scope for proxy of class com.sun.proxy.$Proxy72\",\n  \"exception\" : \"IllegalStateException\",\n  \"fullname\" : \"java.lang.IllegalStateException\",\n  \"stackTrace\" : [ \"com.sun.proxy.$Proxy72.getRemoteHost(Unknown Source)\", \"org.neo4j.server.rest.web.InternalJettyServletRequest.getRemoteHost(InternalJettyServletRequest.java:222)\", \"org.neo4j.server.web.AsyncRequestLog.log(AsyncRequestLog.java:69)\", \"org.neo4j.server.web.Jetty9WebServer.invokeDirectly(Jetty9WebServer.java:323)\", \"org.neo4j.server.rest.batch.NonStreamingBatchOperations.invoke(NonStreamingBatchOperations.java:56)\", \"org.neo4j.server.rest.batch.BatchOperations.performRequest(BatchOperations.java:215)\", \"org.neo4j.server.rest.batch.BatchOperations.parseAndPerform(BatchOperations.java:183)\", \"org.neo4j.server.rest.batch.NonStreamingBatchOperations.performBatchJobs(NonStreamingBatchOperations.java:49)\", \"org.neo4j.server.rest.web.BatchOperationService.batchProcess(BatchOperationService.java:155)\", \"org.neo4j.server.rest.web.BatchOperationService.performBatchOperations(BatchOperationService.java:85)\", \"java.lang.reflect.Method.invoke(Method.java:498)\", \"org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:144)\", \"org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\", \"java.lang.Thread.run(Thread.java:745)\" ],\n  \"errors\" : [ {\n    \"code\" : \"Neo.DatabaseError.General.UnknownError\",\n    \"stackTrace\" : \"java.lang.IllegalStateException: No thread local value in scope for proxy of class com.sun.proxy.$Proxy72\\n\\tat com.sun.jersey.server.impl.ThreadLocalInvoker.invoke(ThreadLocalInvoker.java:93)\\n\\tat com.sun.proxy.$Proxy72.getRemoteHost(Unknown Source)\\n\\tat org.neo4j.server.rest.web.InternalJettyServletRequest.getRemoteHost(InternalJettyServletRequest.java:222)\\n\\tat org.neo4j.server.web.AsyncRequestLog.log(AsyncRequestLog.java:69)\\n\\tat org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:113)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.neo4j.server.web.Jetty9WebServer.invokeDirectly(Jetty9WebServer.java:323)\\n\\tat org.neo4j.server.rest.batch.NonStreamingBatchOperations.invoke(NonStreamingBatchOperations.java:56)\\n\\tat org.neo4j.server.rest.batch.BatchOperations.performRequest(BatchOperations.java:215)\\n\\tat org.neo4j.server.rest.batch.BatchOperations.parseAndPerform(BatchOperations.java:183)\\n\\tat org.neo4j.server.rest.batch.NonStreamingBatchOperations.performBatchJobs(NonStreamingBatchOperations.java:49)\\n\\tat org.neo4j.server.rest.web.BatchOperationService.batchProcess(BatchOperationService.java:155)\\n\\tat org.neo4j.server.rest.web.BatchOperationService.performBatchOperations(BatchOperationService.java:85)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\\n\\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)\\n\\tat com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)\\n\\tat com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)\\n\\tat org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:144)\\n\\tat com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)\\n\\tat com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\\n\\tat com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\\n\\tat com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\\n\\tat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\\n\\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\\n\\tat org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:497)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\",\n    \"message\" : \"No thread local value in scope for proxy of class com.sun.proxy.$Proxy72\"\n  } ]\n}\n```\n\nWe have talk about that on slack channel. Maybe is a bug?\n\nOur neo4j config is:\n\n```\ndbms.directories.data=/var/lib/neo4j/data\ndbms.directories.plugins=/var/lib/neo4j/plugins\ndbms.directories.import=import\ndbms.security.auth_enabled=false\ndbms.connector.bolt.type=BOLT\ndbms.connector.bolt.enabled=true\ndbms.connector.bolt.tls_level=OPTIONAL\ndbms.connector.http.type=HTTP\ndbms.connector.http.enabled=true\ndbms.connector.http.address=0.0.0.0:7474\ndbms.connector.https.type=HTTP\ndbms.connector.https.enabled=true\ndbms.connector.https.encryption=TLS\ndbms.connector.https.address=localhost:7473\ndbms.threads.worker_count=5\ndbms.logs.http.enabled=true\ndbms.logs.query.threshold=0\ndbms.logs.query.rotation.keep_number=7\ndbms.mode=HA\nha.server_id=2\nha.initial_hosts=10.2.0.140:5001,10.2.0.122:5001,10.2.0.187:5001\nha.host.coordination=10.2.0.140:5001\nha.host.data=10.2.0.140:6001\nha.pull_interval=10\ndbms.security.ha_status_auth_enabled=false\ndbms.shell.host=0.0.0.0\ndbms.unmanaged_extension_classes=*************************\ndbms.directories.logs=/var/log/neo4j\ndbms.directories.run=/var/run/neo4j\ndbms.directories.lib=/usr/share/neo4j/lib\ndbms.directories.certificates=/var/lib/neo4j/certificates\n```\n"}, {"labels": ["2.2", "bug", "team-kernel"], "filteredCommits": ["2cdcbc66cc86fce01daae442aacccadea654cb6f"], "url": "https://github.com/neo4j/neo4j/issues/7609", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"2cdcbc66cc86fce01daae442aacccadea654cb6f": {"commitUser": "MishaDemianenko", "commitGHEventType": "closed"}}, "ttf": 5.000277777777778, "user": "astone282", "changesInPackagesSPOON": ["org.neo4j.graphalgo.impl.util.PathImpl.reverseNodes()"], "changesInPackagesGIT": ["community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/util"], "body": "When instantiating a path using PathImpl.singular, using reverseNodes is throwing an exception.\n\nNeo4j 2.3.1\n\n```\nPath myPath = PathImpl.singular(node); // somewhere in the code \nIterator<Node> reverseIterator = myPath.reverseNodes().iterator();  // used somewhere else\nif (reverseIterator.hasNext())  {  // This returns true\n     Node aNode = reverseIterator().next(); // this throws exception\n}\n```\n\nException is as follows:\n\n> java.util.NoSuchElementException: null\n>   at org.neo4j.graphalgo.impl.util.PathImpl$1$1.next(PathImpl.java:201) ~[neo4j-graph-algo-2.3.1.jar:2.3.1]\n>   at org.neo4j.graphalgo.impl.util.PathImpl$1$1.next(PathImpl.java:187) ~[neo4j-graph-algo-2.3.1.jar:2.3.1]\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "spoonFilesChanged": 1, "MOV": 0}, "title": "PathImpl.singular throws exception when calling reverseNodes()", "statsSkippedReason": "", "closed": "2016-07-25 09:36:31", "commitsDetails": [{"commitUser": "MishaDemianenko", "commitDateTime": "2016-07-21 12:43:02", "commitHash": "2cdcbc66cc86fce01daae442aacccadea654cb6f", "commitParents": ["a6ff01cbffd95770e5675b7a1bc7b87fc149c848"], "commitGHEventType": "closed", "nameRev": "2cdcbc66cc86fce01daae442aacccadea654cb6f tags/3.0.4~4^2~10^2^2", "commitGitStats": [{"insertions": 25, "lines": 25, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/impl/util/PathImplTest.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/util/PathImpl.java", "deletions": 1}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.util.PathImpl.reverseNodes()"}], "spoonFilePath": "PathImpl.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.util.PathImplTest.singularNodeWorksForwardsAndBackwards()"}], "spoonFilePath": "PathImplTest.java"}], "commitMessage": "Fix exception in PathImpl.reverseNodes()\n\nfixes #7609\n\ncl: Fixed exception thrown when iterating over `reverseNodes()` if\n`Path` was a single node long [#7609](https://github.com/neo4j/neo4j/issues/7609)\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-07-21 12:14:58"}], "created": "2016-07-19 20:00:48"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/7608", "title": "Open a Bolt connector to your embedded instance to get GUI administration and other benefits.", "closed": "2018-11-29 16:21:29", "commitsDetails": [], "commits": {}, "ttf": 863.0002777777778, "created": "2016-07-19 15:51:04", "user": "remilmi", "body": "The documentation, specifically section 2.14 of http://neo4j.com/docs/java-reference/current/#tutorials-java-embedded says that enabling a bolt connector on an embedded instance allows you to get GUI administration and other benefits. However the documentation doesn't specify to to access the embedded instance using the Neo4j Browser.\n- Neo4j version: 3.0.3\n- Operating system: Windows 7 Enterprise\n- API/Driver: Java API/Bolt\n- **Steps to reproduce**\n  1) Create an embedded database with a bolt connector enabled according to: http://neo4j.com/docs/java-reference/current/#tutorials-java-embedded section 2.14\n  2) Not sure, the documentation doesn't say how the browser is used once the bolt connector is enabled.\n- Expected behavior: Can access the embedded DB with the Neo4j browser as the documentation claims -> \"Doing so allows you to connect the services Neo4j Browser to your embedded instance.\"\n- Actual behavior: Can't access the embedded instance using the Neo4j Browser.\n"}, {"labels": ["bug", "operability"], "filteredCommits": ["6047c77ac2e0e1e41f2945c8f23200d6ea072460"], "url": "https://github.com/neo4j/neo4j/issues/7566", "gitStatsSummary": {"insertions": 4, "gitFilesChange": 1, "lines": 4, "deletions": 0}, "numCommits": 1, "commits": {"6047c77ac2e0e1e41f2945c8f23200d6ea072460": {"commitUser": "spacecowboy", "commitGHEventType": "closed"}}, "ttf": 12.000277777777777, "user": "jimbobhickville", "changesInPackagesGIT": ["packaging/neo4j-desktop/neo4j-desktop.install4j"], "body": "- Neo4j version: 3.0.3 Community Edition\n- Operating system: Mac OS:X \n- API/Driver: N/A\n- **Steps to reproduce**\n1. Install neo4j from dmg\n2. Try to run `/Applications/Neo4j Community Edition.app/Contents/Resources/app/bin/neo4j-import`\n3. Try to run `neo4j start` or `/Applications/Neo4j Community Edition.app/Contents/Resources/app/bin/neo4j start`\n- Expected behavior\n  neo4j-import should function\n  a neo4j binary to start/stop the service should exist somewhere on the filesystem\n- Actual behavior\n\nneo4j-import fails because it's expecting another file to exist:\n`/Applications/Neo4j Community Edition.app/Contents/Resources/app/bin/neo4j-import: line 26: /Applications/Neo4j Community Edition.app/Contents/Resources/app/bin/neo4j-shared.sh: No such file or directory`\n\nneo4j (the binary) does not exist, so you can't control the program via the command line at all.\n\nGoogling suggests that people have been having this problem for at least 4 months, but no solutions other than \"install from homebrew instead\".\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "neo4j community edition on mac is missing binaries", "statsSkippedReason": "", "closed": "2016-07-25 08:12:17", "commitsDetails": [{"commitUser": "spacecowboy", "commitDateTime": "2016-07-21 17:29:28", "commitHash": "6047c77ac2e0e1e41f2945c8f23200d6ea072460", "commitParents": ["1e5d2d69902d60c14138b785f27cd9f92558d1c1"], "commitGHEventType": "closed", "nameRev": "6047c77ac2e0e1e41f2945c8f23200d6ea072460 tags/3.1.0-M06~48^2~1", "commitGitStats": [{"insertions": 1, "lines": 1, "filePath": "packaging/neo4j-desktop/pom.xml", "deletions": 0}, {"insertions": 4, "lines": 4, "filePath": "packaging/neo4j-desktop/neo4j-desktop.install4j", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Include neo4j-shared.sh in mac installer\n\nFixes #7566\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-07-13 09:49:41"}], "created": "2016-07-12 14:41:41"}, {"labels": ["bug", "cypher"], "filteredCommits": ["791af8c22907bea9dd0de63510440b7a4a3a1830"], "url": "https://github.com/neo4j/neo4j/issues/7546", "gitStatsSummary": {"insertions": 4, "gitFilesChange": 1, "lines": 4, "deletions": 0}, "numCommits": 1, "commits": {"791af8c22907bea9dd0de63510440b7a4a3a1830": {"commitUser": "boggle", "commitGHEventType": "closed"}}, "ttf": 37.000277777777775, "user": "Artgit", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "- Neo4j version: 3.0.3\n- Operating system: Windows 10\n- API/Driver: Java\n- **Steps to reproduce**\n\nI have faced a following issue with Neo4j 3.0.3 http://stackoverflow.com/questions/38295786/spring-data-neo4j-neo-clienterror-statement-entitynotfound-description-unable\n\nCould you please check this ? This looks like a Neo4j issue.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Neo.ClientError.Statement.EntityNotFound; Description: Unable to load NODE with id", "statsSkippedReason": "", "closed": "2016-08-17 10:01:44", "commitsDetails": [{"commitUser": "boggle", "commitDateTime": "2016-08-15 15:22:01", "commitHash": "791af8c22907bea9dd0de63510440b7a4a3a1830", "commitParents": ["163e5909bd9a8b26becf21d47518ccdc86da1c6e"], "commitGHEventType": "closed", "nameRev": "791af8c22907bea9dd0de63510440b7a4a3a1830 tags/3.1.0-M07~4^2~1^2", "commitGitStats": [{"insertions": 9, "lines": 9, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/unnestEagerTest.scala", "deletions": 0}, {"insertions": 18, "lines": 18, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/EagerizationAcceptanceTest.scala", "deletions": 0}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/Eagerness.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Also pull `DetachDelete` operators to lhs of `Apply`\n\nFixes #7546\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-08-15 15:22:01"}], "created": "2016-07-11 09:15:22"}, {"labels": ["bug", "cypher"], "filteredCommits": ["54523e1c5432b3babb27aebd32da1fc04b657cd4"], "url": "https://github.com/neo4j/neo4j/issues/7544", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"c48ce29ee0bd0b0cc814415cf860c512fa7daf67": {"commitUser": "Mats-SX", "commitGHEventType": "referenced"}, "54523e1c5432b3babb27aebd32da1fc04b657cd4": {"commitUser": "Mats-SX", "commitGHEventType": "closed"}}, "ttf": 36.000277777777775, "user": "tomzeppenfeldt", "changesInPackagesSPOON": ["org.neo4j.server.rest.transactional.integration.TransactionIT.shouldHandleMapParametersCorrectly()"], "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.3/src/main/scala/org/neo4j/cypher/internal"], "body": "Versions    2.3.x      3.x\n\nIn Neo4j browser, doing this \n\n```\nwith [{ index:0,name: \"a\"},{ index:1,name: \"b\"}] as map\nreturn map[0]\n```\n\ncorrectly retrurns this \n\n```\n          \"row\": [\n            {\n              \"index\": 0,\n              \"name\": \"a\"\n            }\n          ],\n```\n\nWhen sending a map as a paremeter through the transaction endppoint, this \n\n```\n{\n  \"statements\" : [\n        {\n            \"statement\":\"with {map} as map return map[0]\",\n            \"parameters\" :{\n                \"map\" : [ { \"index\":0,\"name\": \"a\"},{ \"index\":1,\"name\": \"b\"} ]\n            }\n        }\n    ]\n}\n```\n\nreturns incorrect result, namely  this \n\n```\n{\n  \"results\": [\n    {\n      \"columns\": [\n        \"map[0]\"\n      ],\n      \"data\": [\n        {\n          \"row\": [\n            [\n              {\n                \"_1\": \"index\",\n                \"_2\": 0\n              },\n              {\n                \"_1\": \"name\",\n                \"_2\": \"a\"\n              }\n            ]\n          ]\n        }\n      ]\n    }\n  ],\n  \"errors\": []\n}\n```\n\nPointer by @jexp :\nIt seems to be related that the scala implementation somehow treats the map entries as tuples.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "spoonFilesChanged": 1, "MOV": 0}, "title": "Map entries treated differently in Neo4j browser and API", "statsSkippedReason": "", "closed": "2016-08-16 13:45:42", "commitsDetails": [{"commitUser": "Mats-SX", "commitDateTime": "2016-08-16 15:39:39", "commitHash": "c48ce29ee0bd0b0cc814415cf860c512fa7daf67", "commitParents": ["846ca7f740476f9e1cd697ac0f4b2236d9d3fff5", "54523e1c5432b3babb27aebd32da1fc04b657cd4"], "commitGHEventType": "referenced", "nameRev": "c48ce29ee0bd0b0cc814415cf860c512fa7daf67 tags/3.1.0-M07~4^2~4^2~1", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-2.3/src/main/scala/org/neo4j/cypher/internal/compiler/v2_3/ResultIterator.scala", "deletions": 1}, {"insertions": 21, "lines": 21, "filePath": "community/server/src/test/java/org/neo4j/server/rest/transactional/integration/TransactionIT.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.TransactionIT.shouldHandleMapParametersCorrectly()"}], "spoonFilePath": "TransactionIT.java"}], "commitMessage": "Merge pull request #7729 from boggle/2.3-return-maps\n\nFix #7544: Correctly return mutable map result values", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-08-16 15:39:39"}, {"commitUser": "Mats-SX", "commitDateTime": "2016-08-16 00:05:04", "commitHash": "54523e1c5432b3babb27aebd32da1fc04b657cd4", "commitParents": ["59d88d01d2d877810cecb8bacf16f95e13b14aff"], "commitGHEventType": "closed", "nameRev": "54523e1c5432b3babb27aebd32da1fc04b657cd4 tags/3.1.0-M07~4^2~4^2~1^2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-2.3/src/main/scala/org/neo4j/cypher/internal/compiler/v2_3/ResultIterator.scala", "deletions": 1}, {"insertions": 21, "lines": 21, "filePath": "community/server/src/test/java/org/neo4j/server/rest/transactional/integration/TransactionIT.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.TransactionIT.shouldHandleMapParametersCorrectly()"}], "spoonFilePath": "TransactionIT.java"}], "commitMessage": "Fix #7544: Correctly return mutable map result values\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-08-16 00:05:04"}], "created": "2016-07-10 15:35:29"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/7518", "title": "[3.0.3][Cypher] Use case where NodeIndexSeek produces a serious amount of db hits", "closed": "2017-10-05 14:42:01", "commitsDetails": [], "commits": {}, "ttf": 456.0002777777778, "created": "2016-07-05 19:02:06", "user": "ikwattro", "body": "## Use case where NodeIndexSeek produces a serious amount of db hits\n\n**Neo4j Version:** 3.0.3  \n**Operating System:** Ubuntu 14.10\n**API:** All\n### Steps to reproduce\n\nTake the following query : \n\n```\nPROFILE \nMATCH (cat:Category) WHERE cat.category_type IN [\"cat\",\"xx\",\"yy\"]\nWITH collect(cat) as categories\nMATCH (m:Entity)\nWHERE m.domain_id IN [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16,\"17\",\"18\",\"19\"]\nWITH m, categories\nMATCH (m)<-[r]-(n)\nRETURN count(n)\n```\n\nWorks ok and there is 38 db hits for :Entity(domain_id) NodeUniqueIndexSeek.\n\n![plan 6](https://cloud.githubusercontent.com/assets/1222009/16596314/a38c9f58-42f3-11e6-9c91-0ad2f9a8e97f.png)\n\nHowever adding a `WHERE ANY(x IN categories WHERE (n)-[:HAS_CATEGORY]->(x))` after the last match, the amount of db hits for `:Entity(domain_id)` is _4million+_ and there is nothing related to it in this WHERE clause:\n\n```\nPROFILE \nMATCH (cat:Category) WHERE cat.category_type IN [\"cat\",\"xx\",\"yy\"]\nWITH collect(cat) as categories\nMATCH (m:Entity)\nWHERE m.domain_id IN [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16,\"17\",\"18\",\"19\"]\nWITH m, categories\nMATCH (m)<-[r]-(n)\nWHERE ANY(x IN categories WHERE (n)-[:HAS_CATEGORY]->(x))\nRETURN count(n)\n```\n\n![plan 7](https://cloud.githubusercontent.com/assets/1222009/16596324/aac3ed4e-42f3-11e6-96cd-756e5f776517.png)\n### Expected behavior\n\nShould produce the same amount of db hits for :Entity(domain_id)\n### Actual behavior\n\nSerious amount of db hits\n"}, {"labels": ["3.0", "bug", "team-kernel"], "filteredCommits": ["a6f9722468f557d754c3c5d5ce7e95ef8aaab08d"], "url": "https://github.com/neo4j/neo4j/issues/7497", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"a6f9722468f557d754c3c5d5ce7e95ef8aaab08d": {"commitUser": "thobe", "commitGHEventType": "closed"}}, "ttf": 44.000277777777775, "user": "bzier", "changesInPackagesSPOON": ["org.neo4j.server.rest.domain.RelationshipExpanderBuilder.describeRelationships(java.util.Map)"], "changesInPackagesGIT": ["community/server/src/main/java/org/neo4j/server/rest/domain"], "body": "The shortest path between two nodes is not being returned properly without specifying relationship details.\n\n**Neo4j Version:** 3.0.3\n**Operating System:** Ubuntu 15.04\n**API:** HTTP REST\n### Steps to reproduce\n\nWith a completely fresh database:\n\n`merge ()-[:friend]->()-[:friend]->()`\n\nThis should generate nodes with IDs 0, 1, and 2 with `:friend` relationship IDs 0, 1.\n\n---\n\nHTTP POST to the URL:\n\n`http://localhost:7474/db/data/node/0/paths`\n\nwith the following data:\n\n``` JSON\n{\n    \"to\":\"http://localhost:7474/db/data/node/2\",\n    \"algorithm\":\"allPaths\",\n    \"max_depth\":5\n}\n```\n\nReturns the following response (as expected):\n\n``` JSON\n[\n  {\n    \"relationships\": [\n      \"http://localhost:7575/db/data/relationship/0\",\n      \"http://localhost:7575/db/data/relationship/1\"\n    ],\n    \"nodes\": [\n      \"http://localhost:7575/db/data/node/0\",\n      \"http://localhost:7575/db/data/node/1\",\n      \"http://localhost:7575/db/data/node/2\"\n    ],\n    \"directions\": [\n      \"->\",\n      \"->\"\n    ],\n    \"start\": \"http://localhost:7575/db/data/node/0\",\n    \"length\": 2,\n    \"end\": \"http://localhost:7575/db/data/node/2\"\n  }\n]\n```\n\n---\n\nHTTP POST to the URL:\n\n`http://localhost:7474/db/data/node/0/paths`\n\nwith the following data:\n\n``` JSON\n{\n    \"to\":\"http://localhost:7474/db/data/node/2\",\n    \"algorithm\":\"shortestPath\",\n    \"max_depth\":5\n}\n```\n\nReturns the following response:\n\n``` JSON\n[]\n```\n\n---\n\nHTTP POST to the URL:\n\n`http://localhost:7474/db/data/node/0/paths`\n\nwith the following data:\n\n``` JSON\n{\n    \"to\":\"http://localhost:7575/db/data/node/2\",\n    \"max_depth\":5,\n    \"relationships\" : {\n        \"type\" : \"friend\",\n        \"direction\" : \"all\"\n        },\n    \"algorithm\":\"shortestPath\"\n}\n```\n\nReturns the following response (as expected):\n\n``` JSON\n[\n  {\n    \"relationships\": [\n      \"http://localhost:7575/db/data/relationship/0\",\n      \"http://localhost:7575/db/data/relationship/1\"\n    ],\n    \"nodes\": [\n      \"http://localhost:7575/db/data/node/0\",\n      \"http://localhost:7575/db/data/node/1\",\n      \"http://localhost:7575/db/data/node/2\"\n    ],\n    \"directions\": [\n      \"->\",\n      \"->\"\n    ],\n    \"start\": \"http://localhost:7575/db/data/node/0\",\n    \"length\": 2,\n    \"end\": \"http://localhost:7575/db/data/node/2\"\n  }\n]\n```\n### Expected behavior\n\nWithout specifying the `relationships` property on the request, the shortest path should be returned regardless of relationship type and direction.\n### Actual behavior\n\nWithout specifying the `relationships` property on the request, no relationships are matched and none are returned, despite that there are paths between them. Asking for `allPaths` returns the paths appropriately with and without specifying the `relationships` property on the request.\n### Testing\n- Testing in 2.2.3, this behavior works as expected. \n- In 3.0.3, it is not working.\n\nI have tried adding relationships in varying directions, with one or more nodes between, connecting the two end nodes. I have tried giving more than one shortest path, as well as a clear single shortest path. The only case that works properly is a direct connection between the two nodes.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "spoonFilesChanged": 1, "MOV": 0}, "title": "Shortest Path without specifying relationship details over HTTP REST API", "statsSkippedReason": "", "closed": "2016-08-17 11:00:45", "commitsDetails": [{"commitUser": "thobe", "commitDateTime": "2016-08-16 15:40:28", "commitHash": "a6f9722468f557d754c3c5d5ce7e95ef8aaab08d", "commitParents": ["3ae2b022f57b0c786319b4668cc84d086a5d9a7f"], "commitGHEventType": "closed", "nameRev": "a6f9722468f557d754c3c5d5ce7e95ef8aaab08d tags/3.1.0-M07~4^2^2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/server/src/main/java/org/neo4j/server/rest/domain/RelationshipExpanderBuilder.java", "deletions": 1}, {"insertions": 107, "lines": 107, "filePath": "community/server/src/test/java/org/neo4j/server/rest/domain/RelationshipExpanderBuilderTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.domain.RelationshipExpanderBuilderTest"}], "spoonFilePath": "RelationshipExpanderBuilderTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.domain.RelationshipExpanderBuilder.describeRelationships(java.util.Map)"}], "spoonFilePath": "RelationshipExpanderBuilder.java"}], "commitMessage": "Defaults REST traversal expander to all relationships\n\nFixes #7497\n\nwhich is the case in previous versions. There was a recent mistake in\na refactoring making the default be empty instead.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-08-16 15:38:52"}], "created": "2016-07-03 19:19:42"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7458", "title": "Neo4j-import reports zero (0) relationships", "closed": "2016-09-14 09:00:37", "commitsDetails": [], "commits": {}, "ttf": 78.00027777777778, "created": "2016-06-28 00:03:43", "user": "jkaster", "body": "## Small import sets have 0 relationships\n\nThe import tool is reporting 0 relationships on small import sets. Doesn't happen with large sets.\n\n**Neo4j Version:** 3.0.3  \n**Operating System:** Windows 10 64-bit \n**API:** neo4j-import\n### Steps to reproduce\n1. Download [zero.zip](https://github.com/neo4j/neo4j/files/336028/zero.zip)\n2. run `import [destinationpath]`\n### Expected behavior\n\nSee the number of relationships created\n### Actual behavior\n\nSee\n\n```\nIMPORT DONE in 2s 151ms. Imported:\n  144 nodes\n  0 relationships\n  1726 properties\n```\n\nThe relationships are definitely created, as shown here:\n![image](https://cloud.githubusercontent.com/assets/6099714/16399630/101769b2-3c89-11e6-81a1-e78384ec6276.png)\n"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/7446", "title": "Load CSV not using available unique constraints", "closed": "2018-12-10 14:29:15", "commitsDetails": [], "commits": {}, "ttf": 897.0002777777778, "created": "2016-06-26 01:28:36", "user": "mmcauliffe", "body": "I'm getting an issue where constraints aren't getting used in a `LOAD CSV` command.  The normal behavior is shown in regular_plan.png,  but the first time that it's run I get the slow_plan.png (where it just does a `NodeIndexScan`, rather than a `NodeUniqueIndexSeek(Locking)`).  The regular command takes 9709 ms, and the slow command takes 339136 ms.  The regular plan still doesn't use all the available unique constraints, since Speaker.name also has a unique constraint on it.\n\nRegular performance plan:\n\n![regular_plan](https://cloud.githubusercontent.com/assets/2791247/16359780/e7c7ed16-3b10-11e6-9178-4d7f4e0b1d61.png)\n\nSlow performance plan:\n\n![slow_plan](https://cloud.githubusercontent.com/assets/2791247/16359783/f105bf16-3b10-11e6-931a-8f0c1f698fa5.png)\n\nThe query for both is:\n\n```\nPROFILE USING PERIODIC COMMIT 4000\nLOAD CSV WITH HEADERS FROM 'file:///path/to/csvs/s01_phone.csv' AS csvLine\nMATCH (n:phone_type {id: csvLine.type_id}), (super:word:`buckeye` {id: csvLine.word}),\n(d:Discourse:`buckeye` {name: csvLine.discourse}),\n(s:Speaker:`buckeye` { name: csvLine.speaker})\nCREATE (t:phone:`buckeye`:speech {id: csvLine.id, begin: toFloat(csvLine.begin),\n                            end: toFloat(csvLine.end), label: csvLine.label }),\n                            (t)-[:is_a]->(n),\n                            (t)-[:contained_by]->(super),\n                            (t)-[:spoken_in]->(d),\n                            (t)-[:spoken_by]->(s)\nWITH t, csvLine\nMATCH (p:phone:`buckeye`:speech {id: csvLine.previous_id})\nCREATE (p)-[:precedes]->(t)\n```\n\n[schema.txt](https://github.com/neo4j/neo4j/files/333355/schema.txt)\n\nI've uploaded the output of `:schema`. Further information, the workflow I have does a set of two interconnected CSVs that I'm loading, one for words, one for phones.  The key point is that Neo4j can't use the Unique id from the words when loading loading the phones (since loading phones requires a look up of previously loaded words).\n\nIt isn't always the first query that is slow, but sometimes the first one is fast (i.e., regular plan) and then the second one is slow.\n\n**Neo4j Version:** 3.0.3\n**Operating System:** Windows 10\n### Steps to reproduce\n1. Create constraints/indexes on relevant properties (see uploaded schema).\n2. Import words via `LOAD CSV`\n3. Import phones via `LOAD CSV`\n### Expected behavior\n\nCypher plan should use the unique constraint, rather a node index seek.\n### Actual behavior\n\nCypher plan initially uses a node index seek, and then future queries use unique index seek.  Sometimes there the first query goes quick and the second one go long (so I assume use the slow query plan).\n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/7415", "title": "BUG - Large Qty of Filters on Cross Join", "closed": "2016-08-18 12:04:26", "commitsDetails": [], "commits": {}, "ttf": 59.000277777777775, "created": "2016-06-19 15:30:47", "user": "davidhbigelow", "body": "## Guidelines\n- Neo4j version: 2.3.5 / 3.0\n- Operating system: OSX + Linux\n- API/Driver: Cypher / Java\n### Steps to Reproduce\n\nDownload the test database:\n[problem.db.zip](https://github.com/neo4j/neo4j/files/322351/problem.db.zip)\n\nNOTE: There are only **252 nodes** in this database, I deleted everything else to narrow down the problem, so that is why you see all the indexes in the database.  We do not feel it is necessary to index EVERY property for every type of node in our system -- especially since this is so LITTLE data to process for the filter operation on the cross-join to get to the results.  (I have head a TON of indexes on everything is a terrible idea for neo4j)\n\nThe following has been confirmed on multiple systems, by multiple developers across multiple versions of neo4j.\n### First Test (THIS WILL WORK)\n\n```\nmatch (chord:group{className:\"Wicks\"})\nwhere chord.propertyString=\"length_in|model\"\nand chord.all_configs=true \n\n\nmatch (jar:group{className:\"Jars\"}) \nwhere jar.propertyString=\"diameter_in|height_in\" \nand jar.all_configs=true  \n\nmatch (wax:group{className:\"Wax\"}) \nwhere wax.propertyString=\"material\" \nand wax.all_configs=true  \nwith chord,jar,wax \n\nwhere (wax.material <> 'Soy') \nand (\n    ((jar.height_in - 0.5 <= chord.length_in)  and   (chord.length_in <= jar.height_in + 0.5))\nor   (chord.length_in > jar.height_in))\nand (\n(chord.model in ['CD-4'] and (1.25 <= jar.diameter_in and jar.diameter_in <= 1.75)) \nor (chord.model in ['CD-5'] and (1.75 <= jar.diameter_in and jar.diameter_in <= 2.0)) \nor (chord.model in ['CD-6'] and (2.0 <= jar.diameter_in and jar.diameter_in <= 2.25)) \n)\n\nreturn chord, jar, wax limit 10;\n```\n### Second Test (THIS WILL FAIL!!!)\n\n```\nmatch (chord:group{className:\"Wicks\"})\nwhere chord.propertyString=\"length_in|model\"\nand chord.all_configs=true \n\nmatch (jar:group{className:\"Jars\"}) \nwhere jar.propertyString=\"diameter_in|height_in\" \nand jar.all_configs=true  \n\nmatch (wax:group{className:\"Wax\"}) \nwhere wax.propertyString=\"material\" \nand wax.all_configs=true  \nwith chord,jar,wax \n\nwhere (wax.material <> 'Soy') \nand (\n    ((jar.height_in - 0.5 <= chord.length_in)  and   (chord.length_in <= jar.height_in + 0.5))\nor   (chord.length_in > jar.height_in))\nand (\n(chord.model in ['CD-4'] and (1.25 <= jar.diameter_in and jar.diameter_in <= 1.75)) \nor (chord.model in ['CD-5'] and (1.75 <= jar.diameter_in and jar.diameter_in <= 2.0)) \nor (chord.model in ['CD-6'] and (2.0 <= jar.diameter_in and jar.diameter_in <= 2.25)) \nor (chord.model in ['44-24-18'] and (2.0 <= jar.diameter_in and jar.diameter_in <= 2.5))  \nor (chord.model in ['ECO-1'] and (1.25 <= jar.diameter_in and jar.diameter_in <= 1.5))  \nor (chord.model in ['ECO-2'] and (1.5 <= jar.diameter_in and jar.diameter_in <= 2.0)) \nor (chord.model in ['ECO-4'] and (2.0 <= jar.diameter_in and jar.diameter_in <= 2.5))  \nor (chord.model in ['HTP-31'] and (1.5 <= jar.diameter_in and jar.diameter_in <= 2.0)) \nor (chord.model in ['HTP-41'] and (2.0 <= jar.diameter_in and jar.diameter_in <= 2.25)) \nor (chord.model in ['HTP-52'] and (2.25 <= jar.diameter_in and jar.diameter_in <= 2.5)) \nor (chord.model in ['LX-8'] and (1.25 <= jar.diameter_in and jar.diameter_in <= 1.5))  \nor (chord.model in ['LX-10'] and (1.5 <= jar.diameter_in and jar.diameter_in <= 2.0))  \nor (chord.model in ['LX-12'] and (2.0 <= jar.diameter_in and jar.diameter_in <= 2.25))\n)\n\nreturn chord, jar, wax limit 10;\n```\n### Expected behavior\n\nAwesome performance -- especially for such a small amount of data.\n### Actual behavior\n\nlocks up - throws CPU to 100-600% and oscillates between them... forever... console crashes (thinks neo4j was disconnected).   Rarely does it come back with data - maybe after 20 minutes.  which is crazy for such a small database and set of relationships.\n"}, {"labels": ["3.0", "bug", "cypher"], "filteredCommits": ["aec083b10c4b5788055e54c140a0f4fea2634210"], "url": "https://github.com/neo4j/neo4j/issues/7407", "gitStatsSummary": {"insertions": 32, "gitFilesChange": 4, "lines": 51, "deletions": 19}, "numCommits": 1, "commits": {"aec083b10c4b5788055e54c140a0f4fea2634210": {"commitUser": "Mats-SX", "commitGHEventType": "closed"}, "54865c46d070187ab56d4bcd32e7831a04b1bcd1": {"commitUser": "Mats-SX", "commitGHEventType": "referenced"}}, "ttf": 25.00027777777778, "user": "vincentmooser", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "I was playing with some dummy graph and queries on neo4j 3.0.3 community. If I run queries below, the last query, which should delete the graph, runs endlessly with 100% cpu usage. It looks to me that neo4j is not able to plan the query.\n\nI know that my queries are ugly and not for production use but neo4j should not crashed. I have tried the same queries on neo4j 2.3.2 and they worked.\n- Neo4j version: 3.0.3 community\n- Operating system: Ubuntu 14.04\n- API/Driver: neo4j web console\n\n**create a graph:**\n\n```\ncreate (n1: `node1` {oid: '1'})\ncreate (n2: `node2` {oid: '2'})\ncreate (n3: `node3` {oid: '3'}) \ncreate (n4: `node4` {oid: '4'}) \ncreate (n5: `node5` {oid: '5'}) \ncreate (n6: `node6` {oid: '6'}) \ncreate (n7: `node7` {oid: '7'}) \ncreate (n8: `users` {oid: '8'}) \ncreate (n9: `user` {oid: '9'})  \ncreate (n1)-[r10:`HAS_CHILD` {oid: '10'}]->(n2) \ncreate (n1)-[r11:`HAS_CHILD` {oid: '11'}]->(n3) \ncreate (n2)-[r12:`HAS_CHILD` {oid: '12'}]->(n4) \ncreate (n2)-[r13:`HAS_CHILD` {oid: '13'}]->(n5) \ncreate (n3)-[r14:`HAS_CHILD` {oid: '14'}]->(n6)  \ncreate (n3)-[r15:`HAS_CHILD` {oid: '15'}]->(n7) \ncreate (n8)-[r16:`SECURITY` {oid: '16'}]->(n3) \ncreate (n9)-[r17:`PART_OF` {oid: '17'}]->(n8)\n```\n\n**delete all nodes and relationships (this query crashes the server):**\n`optional match(n0 { oid: '1'}) optional match(n1 { oid: '2'}) optional match(n2 { oid: '3'}) optional match(n3 { oid: '4'}) optional match(n4 { oid: '5'}) optional match(n5 { oid: '6'}) optional match(n6 { oid: '7'}) optional match(n7 { oid: '8'}) optional match(n8 { oid: '9'})  optional match( { oid : '1'})-[r0 { oid: '10'}]-( { oid : '2'}) optional match( { oid : '1'})-[r1 { oid: '11'}]-( { oid : '3'}) optional match( { oid : '2'})-[r2 { oid: '12'}]-( { oid : '4'}) optional match( { oid : '2'})-[r3 { oid: '13'}]-( { oid : '5'}) optional match( { oid : '3'})-[r4 { oid: '14'}]-( { oid : '6'}) optional match( { oid : '3'})-[r5 { oid: '15'}]-( { oid : '7'}) optional match( { oid : '8'})-[r6 { oid: '16'}]-( { oid : '3'}) optional match( { oid : '9'})-[r7 { oid: '17'}]-( { oid : '8'})  detach delete n0, n1, n2, n3, n4, n5, n6, n7, n8 delete r0, r1, r2, r3, r4, r5, r6, r7\n`\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 1, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Server endlessly stuck with 100% cpu usage", "statsSkippedReason": "", "closed": "2016-07-12 11:55:47", "commitsDetails": [{"commitUser": "Mats-SX", "commitDateTime": "2016-06-23 07:54:23", "commitHash": "aec083b10c4b5788055e54c140a0f4fea2634210", "commitParents": ["f9b6b3745b0176c84a6b867a001c198fde4b1ef2"], "commitGHEventType": "closed", "nameRev": "aec083b10c4b5788055e54c140a0f4fea2634210 tags/3.1.0-M05^2~8^2~2", "commitGitStats": [{"insertions": 5, "lines": 10, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/idp/IDPQueryGraphSolverTest.scala", "deletions": 5}, {"insertions": 10, "lines": 18, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/ast/convert/plannerQuery/StatementConvertersTest.scala", "deletions": 8}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/QueryGraphConnectedComponentsTest.scala", "deletions": 2}, {"insertions": 24, "lines": 33, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/assumeIndependence/AssumeIndependenceQueryGraphCardinalityModel.scala", "deletions": 9}, {"insertions": 4, "lines": 10, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/optional/OptionalQueryGraphCardinalityModel.scala", "deletions": 6}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/ast/convert/plannerQuery/MutatingStatementConvertersTest.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/ast/convert/plannerQuery/PlannerQueryBuilder.scala", "deletions": 1}, {"insertions": 50, "lines": 51, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/DeleteAcceptanceTest.scala", "deletions": 1}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/QueryGraph.scala", "deletions": 3}], "commitSpoonAstDiffStats": [], "commitMessage": "Cap optional matches in cardinality computation\n\nThe number of optional-match combinations to consider in the cardinality\nestimation grows exponentially meaning that the plan time also grows\nexponentially. Instead of considering all combinations - above a certain threshold\nwe only consider the combinations of the most costly optional matches.\n\nfixes #7407\nchangelog: [3.0, cypher] Improve performance for queries with many `OPTIONAL MATCH`  - [#7407](https://github.com/neo4j/neo4j/pull/7407)\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-06-22 14:31:42"}, {"commitUser": "Mats-SX", "commitDateTime": "2016-07-12 10:10:42", "commitHash": "54865c46d070187ab56d4bcd32e7831a04b1bcd1", "commitParents": ["b95bf18b41d9c55a77ec55786c0c80ab324bf665", "4ca606cc3830bf1f098c81331331b645df4ef747"], "commitGHEventType": "referenced", "nameRev": "54865c46d070187ab56d4bcd32e7831a04b1bcd1 tags/3.1.0-M05^2~8", "commitGitStats": [{"insertions": 0, "lines": 61, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/TripletQueryGraphCardinalityModelTest.scala", "deletions": 61}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/QueryGraphConnectedComponentsTest.scala", "deletions": 2}, {"insertions": 0, "lines": 132, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/NodeCardinalityEstimatorTest.scala", "deletions": 132}, {"insertions": 0, "lines": 55, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/NodeCardinalityEstimator.scala", "deletions": 55}, {"insertions": 0, "lines": 65, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/calculateOverlapCardinality.scala", "deletions": 65}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/ast/convert/plannerQuery/PlannerQueryBuilder.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/ast/convert/plannerQuery/MutatingStatementConvertersTest.scala", "deletions": 2}, {"insertions": 0, "lines": 73, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/Triplet.scala", "deletions": 73}, {"insertions": 5, "lines": 10, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/idp/IDPQueryGraphSolverTest.scala", "deletions": 5}, {"insertions": 51, "lines": 52, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/DeleteAcceptanceTest.scala", "deletions": 1}, {"insertions": 0, "lines": 172, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/SimpleTripletCardinalityEstimator.scala", "deletions": 172}, {"insertions": 0, "lines": 149, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/SimpleTripletCardinalityEstimatorTest.scala", "deletions": 149}, {"insertions": 0, "lines": 68, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/TripletTest.scala", "deletions": 68}, {"insertions": 0, "lines": 69, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/TripletConverterTest.scala", "deletions": 69}, {"insertions": 24, "lines": 33, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/assumeIndependence/AssumeIndependenceQueryGraphCardinalityModel.scala", "deletions": 9}, {"insertions": 0, "lines": 87, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/TripletQueryGraphCardinalityModel.scala", "deletions": 87}, {"insertions": 0, "lines": 43, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/optional/OptionalQueryGraphCardinalityModel.scala", "deletions": 43}, {"insertions": 10, "lines": 18, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/ast/convert/plannerQuery/StatementConvertersTest.scala", "deletions": 8}, {"insertions": 0, "lines": 72, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/cardinality/triplet/TripletConverter.scala", "deletions": 72}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/QueryGraph.scala", "deletions": 3}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #7434 from pontusmelke/3.0-gh-7407\n\nCap optional matches in cardinality computation", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-07-12 10:10:42"}], "created": "2016-06-17 06:35:34"}, {"labels": ["bolt server", "bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/7356", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"9641576829b1d439954ac158311a4e986f7cb629": {"commitUser": "zhenlineo", "commitGHEventType": "referenced"}}, "ttf": 18.00027777777778, "user": "cleishm", "changesInPackagesSPOON": [], "changesInPackagesGIT": [], "body": "After an INIT failure (e.g. due to invalid credentials) it is not possible to re-attempt INIT. Doing so results in the odd error \"initializing the session' cannot be done when a session is in the 'IDLE' state.\".\n\nExpected behavior:\n\n--> INIT (invalid credentials)\n<-- FAILURE\n--> ACK_FAILURE\n<-- SUCCESS\n--> INIT (valid credentials)\n**<-- SUCESS**\n\nActual behavior:\n\n--> INIT (invalid credentials)\n<-- FAILURE\n--> ACK_FAILURE\n<-- SUCCESS\n--> INIT (valid credentials)\n**<-- FAILURE (initializing the session' cannot be done when a session is in the 'IDLE' state)**\n\nThis behavior prevents interactively prompting a user for credentials, allowing for re-attempts.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 0, "UPD": 0, "TOT": 0, "DEL": 0, "INS": 0, "spoonFilesChanged": 0, "MOV": 0}, "title": "BOLT: \"initializing the session' cannot be done when a session is in the 'IDLE' state.\"", "statsSkippedReason": "", "closed": "2016-06-28 16:19:51", "commitsDetails": [{"commitUser": "zhenlineo", "commitDateTime": "2016-06-28 17:47:08", "commitHash": "9641576829b1d439954ac158311a4e986f7cb629", "commitParents": ["a7e676dfc3abe0f5fcffe9e97ba85ad08c76d779", "eae5394d325932762ef77df27df6e0b5e8d186e0"], "commitGHEventType": "referenced", "nameRev": "9641576829b1d439954ac158311a4e986f7cb629 tags/3.1.0-M05^2~42", "commitGitStats": [{"insertions": 153, "lines": 153, "filePath": "community/bolt/src/test/java/org/neo4j/bolt/v1/runtime/integration/SessionAuthIT.java", "deletions": 0}, {"insertions": 10, "lines": 12, "filePath": "community/bolt/src/test/java/org/neo4j/bolt/v1/runtime/internal/SessionStateMachineResetTest.java", "deletions": 2}, {"insertions": 90, "lines": 108, "filePath": "community/bolt/src/main/java/org/neo4j/bolt/v1/runtime/internal/SessionStateMachine.java", "deletions": 18}, {"insertions": 17, "lines": 23, "filePath": "community/bolt/src/test/java/org/neo4j/bolt/v1/runtime/internal/SessionStateMachineTest.java", "deletions": 6}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachineTest.shouldRemainStoppedAfterInterrupted()"}], "spoonFilePath": "SessionStateMachineTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "DEL": 0, "INS": 3, "MOV": 6, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachineResetTest.multipleInterruptsShouldBeMatchedWithMultipleResets()"}, {"UPD": 0, "TOT": 6, "DEL": 0, "INS": 3, "MOV": 3, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachineResetTest.shouldKillMessagesAheadInLine()"}], "spoonFilePath": "SessionStateMachineResetTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.integration.SessionAuthIT.shouldBeAbleToReinitializeOnAuthenticationFailureAndReset()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.integration.SessionAuthIT.shouldDisallowRunAfterAuthFailureAndReset()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.integration.SessionAuthIT.shouldIgnoreAfterRequestInvalid()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.integration.SessionAuthIT.shouldDisallowRunBeforeSuccessInit()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.integration.SessionAuthIT.shouldBeAbleToReinitializeOnAuthenticationFailureAndAck()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.integration.SessionAuthIT.shouldDisallowResetBeforeSuccessInit()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.integration.SessionAuthIT.shouldDisallowRunOnAuthenticationFailureAndAck()"}], "spoonFilePath": "SessionAuthIT.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 12, "DEL": 1, "INS": 0, "MOV": 9, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.6.reset(org.neo4j.bolt.v1.runtime.internal.SessionStateMachine)"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.6.onNoImplementation(org.neo4j.bolt.v1.runtime.internal.SessionStateMachine,java.lang.String)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.1.onNoImplementation(org.neo4j.bolt.v1.runtime.internal.SessionStateMachine,java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.reset(org.neo4j.bolt.v1.runtime.internal.SessionStateMachine,org.neo4j.bolt.v1.runtime.internal.SessionStateMachine$State)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.6.ackFailure(org.neo4j.bolt.v1.runtime.internal.SessionStateMachine)"}, {"UPD": 2, "TOT": 5, "DEL": 0, "INS": 2, "MOV": 1, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.6"}, {"UPD": 1, "TOT": 8, "DEL": 2, "INS": 3, "MOV": 2, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.1.init(org.neo4j.bolt.v1.runtime.internal.SessionStateMachine,java.lang.String,java.util.Map)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.1.interrupt(org.neo4j.bolt.v1.runtime.internal.SessionStateMachine)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.7"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.State.6.interrupt(org.neo4j.bolt.v1.runtime.internal.SessionStateMachine)"}], "spoonFilePath": "SessionStateMachine.java"}], "commitMessage": "Merge pull request #7391 from zhenlineo/3.0-auth-exception\n\nBetter handling of interrupts in INIT and STOPPED\r\n\r\nchangelog: [Bolt] Better handling of RESET message in session state machine - #7356", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-06-28 17:47:08"}], "created": "2016-06-09 17:40:16"}, {"labels": ["bug", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7250", "title": "Import does not report invalid arguments", "closed": "2018-11-07 16:56:32", "commitsDetails": [], "commits": {}, "ttf": 892.0002777777778, "created": "2016-05-28 21:30:00", "user": "jkaster", "body": "## neo4j-import in 3.0.1 and 2.3.4 don't load relationships with \"relations\"\n\n**Updated based on new info from Michael Hunger**\n\nIn my editing during testing, I changed relationships to \"relations\" in one round, then repeated the problem. If the import tool reported invalid arguments, I would have found that immediately. Please update the import tool to report invalid arguments.\n\nIf I have other issues to report, I'll make a new case.\n\n**Original report***\n\nI have found multiple issues in both versions of the importer.\n1. using `%source%` or any other variable in front of a file name reference for the path results in relationships not being loaded, even if `source` is blank\n2. Most of the relationship files in my import batch fail to establish a relationship at all even though the keys are set correctly, and csv headers and names follow conventions outlined in the documentation.\n\n**Neo4j Version:** 3.0.1 and 2.3.4\n**Operating System:** Windows 10 64-bit\n**API:** neo4j-import\n### Steps to reproduce\n1. extract the files from `test.zip` into a folder\n2. modify the variables in `imp.cmd` to work for your environment\n3. try any of the dozens of import commands in `imp.cmd` and see the results. only 1 set of files results in setting 3 relationships, and in many scenarios those 3 relationships will not be set, either\n### Expected behavior\n1. `%source%` or other variable establishing the source path in a file name should not cause issues\n2. all relationships should be set\n### Actual behavior\n1. `%source%` makes relationship linking fail\n2. only 3 relationships out of hundreds are set. (See `rem` comments in `imp.cmd` for details)\n   [test.zip](https://github.com/neo4j/neo4j/files/288018/test.zip)\n"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7249", "title": "File has been unmapped NEO4J", "closed": "2017-10-18 07:59:51", "commitsDetails": [], "commits": {}, "ttf": 507.0002777777778, "created": "2016-05-28 13:31:12", "user": "marinhojess", "body": "Hi, I'm migrating a tdatabase to Neo4J. The database is large enough, but when I was moving appeared the following error:\n\n> Traceback (most recent call last):\n>   File \"/home/mushthielv/\u00c1rea de Trabalho/bdTrmmTest.py\", line 37, in <module>\n>     results = db.query(q, returns=(client.Node))  \n>   File \"/usr/local/lib/python2.7/dist-packages/neo4jrestclient/client.py\", line 212, in query\n>     tx=tx\n>   File \"/usr/local/lib/python2.7/dist-packages/neo4jrestclient/query.py\", line 324, in **init**\n>     tx.execute()\n>   File \"/usr/local/lib/python2.7/dist-packages/neo4jrestclient/query.py\", line 936, in execute\n>     return self.commit()\n>   File \"/usr/local/lib/python2.7/dist-packages/neo4jrestclient/query.py\", line 948, in commit\n>     results = self._execute(url, results=True)\n>   File \"/usr/local/lib/python2.7/dist-packages/neo4jrestclient/query.py\", line 867, in _execute\n>     self._manage_errors(content[\"errors\"])\n>   File \"/usr/local/lib/python2.7/dist-packages/neo4jrestclient/query.py\", line 841, in _manage_errors\n>     raise TransactionException(200, message)\n> neo4jrestclient.exceptions.TransactionException: Code [200]: OK. Request fulfilled, document follows.\n> \n> Neo.DatabaseError.Statement.ExecutionFailed:\n> File has been unmapped: /var/lib/neo4j/data/databases/graph.db/neostore.counts.db.a\n> \n> [Finished in 56552.1s with exit code 1]\n> [shell_cmd: python -u \"/home/mushthielv/\u00c1rea de Trabalho/bdTrmmTest.py\"]\n> [dir: /home/mushthielv/\u00c1rea de Trabalho]\n> [path: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games]\n\nDoes anyone know what can it be?\n"}, {"labels": ["bolt server", "bug"], "url": "https://github.com/neo4j/neo4j/issues/7228", "title": "[Bolt][Cypher] Empty List<Map> parameter throws \"Property values can only be of primitive types or arrays thereof\"", "closed": "2016-06-01 21:27:43", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2016-05-26 02:25:24", "user": "ikwattro", "body": "**Neo4j Version:** 3.0.1\n**Operating System:** OSX\n**API:** Bolt Java Driver - Bolt PHP Driver\n\nTake the following query : \n\n```\nUNWIND {batches} as batch\nMERGE (p:Person {id: batch.id})\nSET p += batch.props\nWITH p, batch\nUNWIND batch.prev as prev\nMERGE (o:Person {id: prev.id})\nCREATE (p)-[:KNOWS]->(o)\n```\n\nThis query works fine if all `batch.prev` lists are not empty. However when one of them is empty, the following exception is thrown : \n\n```\nProperty values can only be of primitive types or arrays thereof\n```\n\nNote that it affects only Bolt, it works fine with http.\n\nSecond note: if `batch.prev` would be a list of integers rather than a map and the query part changed to `MERGE (o:Person {id: prev})` it works fine too.\n### Steps to reproduce\n\nHere is a reproducable java test : \n\n``` java\n@Test\n    public void shouldBeAbleToUnwindEmptyListsWithoutFailure() {\n        Map<String, Object> parameters = new HashMap<>();\n        List<Map<String, Object>> batches = new ArrayList<>();\n        for (int i = 1; i < 10; ++i) {\n            batches.add(createBatch(i));\n        }\n        parameters.put(\"batches\", batches);\n        StatementResult result = session.run(\n                    \"UNWIND {batches} as batch \" +\n                    \"CREATE (a:Node) SET a.id = batch.id, a.login = batch.login \" +\n                    \"WITH a, batch \" +\n                    \"UNWIND batch.prev as prev \" +\n                    \"MERGE (o:Person {id: prev})\" +\n                    \"MERGE (a)-[:RELATES]->(o)\", parameters\n        );\n        result.consume();\n    }\n\n    private Map<String, Object> createBatch(int i) {\n        Map<String, Object> map = new HashMap<>();\n        map.put(\"id\", i);\n        map.put(\"login\", \"login\" + i);\n        List<Map<String, Object>> prev = i > 6 ? createPrev() : new ArrayList<Map<String, Object>>();\n        map.put(\"prev\", prev);\n\n        return map;\n    }\n\n    private List<Map<String, Object>> createPrev() {\n        List<Map<String, Object>> prevs = new ArrayList<>();\n        for (int i = 1; i < 6; ++i) {\n            Map<String, Object> prev = new HashMap<>();\n            prev.put(\"id\", i);\n            prev.put(\"second\", ++i);\n            prevs.add(prev);\n        }\n\n        return prevs;\n    }\n```\n\n```\norg.neo4j.driver.v1.exceptions.ClientException: Property values can only be of primitive types or arrays thereof\n\n    at org.neo4j.driver.internal.connector.socket.SocketResponseHandler.handleFailureMessage(SocketResponseHandler.java:68)\n    at org.neo4j.driver.internal.messaging.PackStreamMessageFormatV1$Reader.unpackFailureMessage(PackStreamMessageFormatV1.java:456)\n    at org.neo4j.driver.internal.messaging.PackStreamMessageFormatV1$Reader.read(PackStreamMessageFormatV1.java:417)\n    at org.neo4j.driver.internal.connector.socket.SocketClient.receiveOne(SocketClient.java:128)\n    at org.neo4j.driver.internal.connector.socket.SocketConnection.receiveOne(SocketConnection.java:135)\n    at org.neo4j.driver.internal.connector.ConcurrencyGuardingConnection.receiveOne(ConcurrencyGuardingConnection.java:150)\n    at org.neo4j.driver.internal.pool.PooledConnection.receiveOne(PooledConnection.java:142)\n    at org.neo4j.driver.internal.InternalStatementResult.consume(InternalStatementResult.java:280)\n    at org.neo4j.driver.v1.integration.ParametersIT.shouldBeAbleToUnwindEmptyListsWithoutFailure(ParametersIT.java:70)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:239)\n    at org.neo4j.driver.v1.util.TestNeo4jSession$1.evaluate(TestNeo4jSession.java:72)\n    at org.neo4j.driver.v1.util.TestNeo4j$1.evaluate(TestNeo4j.java:64)\n    at org.junit.rules.RunRules.evaluate(RunRules.java:20)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:119)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:42)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:234)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:74)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:497)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:144)\n```\n### Expected behavior\n\nIt shouldn't fail\n### Actual behavior\n\n```\nProperty values can only be of primitive types or arrays thereof\n```\n"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7216", "title": "Numeric sort in Manual (Legacy) index in Neo4j 3 is not working correctly", "closed": "2016-06-14 01:23:31", "commitsDetails": [], "commits": {}, "ttf": 19.00027777777778, "created": "2016-05-25 05:49:20", "user": "rudisb", "body": "I'm using Legacy indexing (now called Manual indexing). After migration from Neo4j 2 to version 3 I have some problems with numeric sorting.\n\n**Neo4j Version:** 3.0.1\n**Operating System:** Win 7\n**API:** embeded local DB\n### Description\n\nExample of correct statement in Neo4j 2:\n\n`queryContext.sort(new Sort(new SortField(AGE, SortField.INT, false)));`\n\nThis stament should be changed for Neo4j 3 (Lucene 5):\n\n`queryContext.sort(new Sort(new SortField(AGE, SortField.Type.INT, false)));`\n\nBut if you use this sort statement you will get an exception:\n\n```\njava.lang.IllegalStateException: unexpected docvalues type SORTED_SET for field 'firstName' (expected=SORTED). Use UninvertingReader or index with docvalues.\nat org.apache.lucene.index.DocValues.checkField(DocValues.java:208)\nat org.apache.lucene.index.DocValues.getSorted(DocValues.java:264)\nat org.apache.lucene.search.FieldComparator$TermOrdValComparator.getSortedDocValues(FieldComparator.java:762)\nat org.apache.lucene.search.FieldComparator$TermOrdValComparator.getLeafComparator(FieldComparator.java:767)\nat org.apache.lucene.search.FieldValueHitQueue.getComparators(FieldValueHitQueue.java:183)\nat org.apache.lucene.search.TopFieldCollector$SimpleFieldCollector.getLeafCollector(TopFieldCollector.java:164)\nat org.neo4j.kernel.api.impl.index.collector.DocValuesCollector.replayTo(DocValuesCollector.java:297)\nat org.neo4j.kernel.api.impl.index.collector.DocValuesCollector.getTopDocs(DocValuesCollector.java:275)\nat org.neo4j.kernel.api.impl.index.collector.DocValuesCollector.getIndexHits(DocValuesCollector.java:150)\nat org.neo4j.index.impl.lucene.legacy.LuceneLegacyIndex.search(LuceneLegacyIndex.java:346)\nat org.neo4j.index.impl.lucene.legacy.LuceneLegacyIndex.query(LuceneLegacyIndex.java:261)\nat org.neo4j.index.impl.lucene.legacy.LuceneLegacyIndex.query(LuceneLegacyIndex.java:205)\nat org.neo4j.index.impl.lucene.legacy.LuceneLegacyIndex.query(LuceneLegacyIndex.java:217)\nat org.neo4j.kernel.impl.api.StateHandlingStatementOperations.nodeLegacyIndexQuery(StateHandlingStatementOperations.java:1440)\nat org.neo4j.kernel.impl.api.OperationsFacade.nodeLegacyIndexQuery(OperationsFacade.java:1162)\nat org.neo4j.kernel.impl.coreapi.LegacyIndexProxy$Type$1.query(LegacyIndexProxy.java:83)\nat org.neo4j.kernel.impl.coreapi.LegacyIndexProxy.query(LegacyIndexProxy.java:365)\n```\n\nI think this is caused by new added statement in Neo4j indexer class (Neo4j is indexing field for sorting automatically now?). See in:\n\n`org.neo4j.index.impl.lucene.legacy.IndexType CustomType addToDocument( Document document, String key, Object value )`\n\nnew line:\n\n`document.add( instantiateSortField( key, value ) );`\n`and method instantiateSortField is creating SortedSetDocValuesField`\n\nSo I changed my code to:\n\n`queryContext.sort(new Sort(new SortedSetSortField(AGE, false)));`\n\nThis runs OK but sorting is not working because numbers are sorted as string. I see that \"value\" parameter is String every time in method \"addToDocument\". I think the root cause is explained it this old comment:\n\nsee comment in class org.neo4j.index.impl.lucene.legacy.IndexType CustomType\n\n```\n// TODO We should honor ValueContext instead of doing value.toString() here.\n// if changing it, also change #get to honor ValueContext.\n```\n### Expected behavior\n\nNumeric data are sorted as numeric\n### Actual behavior\n\nNumeric data are sorted as strings\n\nAm I missing some new way how to index, search and sort data in Neo4j 3 or this is really problem that values are indexed as string in Neo4j?\n\nSimple unit test for Neo4j 2 and Neo4j 3 can be downloaded\n\n[SortNeo4j2SysTest.java.txt](https://github.com/neo4j/neo4j/files/281049/SortNeo4j2SysTest.java.txt)\n[SortNeo4j3SysTest.java.txt](https://github.com/neo4j/neo4j/files/281050/SortNeo4j3SysTest.java.txt)\n\n[stackoverflow question](http://stackoverflow.com/questions/37391263/numeric-sort-in-manual-legacy-index-in-neo4j-3-is-not-working-correctly)\n"}, {"labels": ["3.0", "bug", "changelog", "operability"], "filteredCommits": ["874c8da6bcb7b227b7451c06e4678924abc93800"], "url": "https://github.com/neo4j/neo4j/issues/7188", "gitStatsSummary": {"insertions": 2, "gitFilesChange": 2, "lines": 4, "deletions": 2}, "numCommits": 1, "commits": {"874c8da6bcb7b227b7451c06e4678924abc93800": {"commitUser": "benbc", "commitGHEventType": "closed"}}, "ttf": 5.000277777777778, "user": "MysterAitch", "changesInPackagesGIT": ["packaging/installer-linux/installer-debian/src/main/resources/enterprise/debian/control", "packaging/installer-linux/installer-debian/src/main/resources/community/debian/control"], "body": "Per a conversation via Slack, here is an issue describing my installation experience today . \n- Host OS: Windows 7\n- Virtualbox guest OS: Ubuntu 16.04 server (fresh standard installation + OpenSSH server + apt-get upgrade)\n- Neo4j version: v3.0.1 (via apt-get instructions at http://debian.neo4j.org/ )\n\nIn particular, note that the standard apt-get installation of neo4j is pulling in `openjdk-9-jre` and `openjdk-9-jre-headless`.\n\n```\n Followed installation instructions at http://debian.neo4j.org/ \n        wget -O - https://debian.neo4j.org/neotechnology.gpg.key | sudo apt-key add -\n        echo 'deb http://debian.neo4j.org/repo stable/' >/tmp/neo4j.list\n        sudo mv /tmp/neo4j.list /etc/apt/sources.list.d\n        sudo apt-get update\n        sudo apt-get install neo4j      \n\n            <user>@<hostname>:~$ sudo apt-get install neo4j\n            Reading package lists... Done\n            Building dependency tree\n            Reading state information... Done\n            The following additional packages will be installed:\n              at-spi2-core ca-certificates-java daemon dbus-x11 fontconfig fontconfig-config fonts-dejavu-core fonts-dejavu-extra gconf-service\n              gconf-service-backend gconf2 gconf2-common hicolor-icon-theme java-common libasound2 libasound2-data libatk-bridge2.0-0\n              libatk-wrapper-java libatk-wrapper-java-jni libatk1.0-0 libatk1.0-data libatspi2.0-0 libavahi-client3 libavahi-common-data\n              libavahi-common3 libavahi-glib1 libbonobo2-0 libbonobo2-common libcairo2 libcanberra0 libcups2 libdatrie1 libdrm-amdgpu1\n              libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libfontconfig1 libfontenc1 libgconf-2-4 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-common\n              libgif7 libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa libgnome-2-0 libgnome2-common libgnomevfs2-0 libgnomevfs2-common\n              libgraphite2-3 libgtk2.0-0 libgtk2.0-bin libgtk2.0-common libharfbuzz0b libice6 libjbig0 libjpeg-turbo8 libjpeg8 liblcms2-2\n              libllvm3.8 libltdl7 libnspr4 libnss3 libnss3-nssdb libogg0 liborbit-2-0 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0\n              libpciaccess0 libpcsclite1 libpixman-1-0 libsm6 libtdb1 libthai-data libthai0 libtiff5 libtxc-dxtn-s2tc0 libvorbis0a libvorbisfile3\n              libx11-xcb1 libxaw7 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-render0 libxcb-shape0 libxcb-shm0 libxcb-sync1\n              libxcomposite1 libxcursor1 libxdamage1 libxfixes3 libxft2 libxi6 libxinerama1 libxmu6 libxpm4 libxrandr2 libxrender1 libxshmfence1\n              libxt6 libxtst6 libxv1 libxxf86dga1 libxxf86vm1 openjdk-9-jre openjdk-9-jre-headless sound-theme-freedesktop x11-common x11-utils\n            Suggested packages:\n              gconf-defaults-service default-jre libasound2-plugins alsa-utils libbonobo2-bin libcanberra-gtk0 libcanberra-pulse cups-common\n              desktop-base libgnomevfs2-bin libgnomevfs2-extra gamin | fam gnome-mime-data librsvg2-common gvfs liblcms2-utils pcscd\n              icedtea-8-plugin libnss-mdns fonts-ipafont-gothic fonts-ipafont-mincho ttf-wqy-microhei | ttf-wqy-zenhei fonts-indic mesa-utils\n            The following NEW packages will be installed:\n              at-spi2-core ca-certificates-java daemon dbus-x11 fontconfig fontconfig-config fonts-dejavu-core fonts-dejavu-extra gconf-service\n              gconf-service-backend gconf2 gconf2-common hicolor-icon-theme java-common libasound2 libasound2-data libatk-bridge2.0-0\n              libatk-wrapper-java libatk-wrapper-java-jni libatk1.0-0 libatk1.0-data libatspi2.0-0 libavahi-client3 libavahi-common-data\n              libavahi-common3 libavahi-glib1 libbonobo2-0 libbonobo2-common libcairo2 libcanberra0 libcups2 libdatrie1 libdrm-amdgpu1\n              libdrm-intel1 libdrm-nouveau2 libdrm-radeon1 libfontconfig1 libfontenc1 libgconf-2-4 libgdk-pixbuf2.0-0 libgdk-pixbuf2.0-common\n              libgif7 libgl1-mesa-dri libgl1-mesa-glx libglapi-mesa libgnome-2-0 libgnome2-common libgnomevfs2-0 libgnomevfs2-common\n              libgraphite2-3 libgtk2.0-0 libgtk2.0-bin libgtk2.0-common libharfbuzz0b libice6 libjbig0 libjpeg-turbo8 libjpeg8 liblcms2-2\n              libllvm3.8 libltdl7 libnspr4 libnss3 libnss3-nssdb libogg0 liborbit-2-0 libpango-1.0-0 libpangocairo-1.0-0 libpangoft2-1.0-0\n              libpciaccess0 libpcsclite1 libpixman-1-0 libsm6 libtdb1 libthai-data libthai0 libtiff5 libtxc-dxtn-s2tc0 libvorbis0a libvorbisfile3\n              libx11-xcb1 libxaw7 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-render0 libxcb-shape0 libxcb-shm0 libxcb-sync1\n              libxcomposite1 libxcursor1 libxdamage1 libxfixes3 libxft2 libxi6 libxinerama1 libxmu6 libxpm4 libxrandr2 libxrender1 libxshmfence1\n              libxt6 libxtst6 libxv1 libxxf86dga1 libxxf86vm1 neo4j openjdk-9-jre openjdk-9-jre-headless sound-theme-freedesktop x11-common\n              x11-utils\n            0 upgraded, 113 newly installed, 0 to remove and 3 not upgraded.\n            Need to get 272 MB of archives.\n            After this operation, 577 MB of additional disk space will be used.\n            Do you want to continue? [Y/n] y\n\n\n            [...]\n            Setting up neo4j (3.0.1) ...\n            Adding system user `neo4j' (UID 111) ...\n            Adding new user `neo4j' (UID 111) with group `nogroup' ...\n            Not creating home directory `/var/lib/neo4j'.\n```\n\nThis was discovered because the neo4j service would not start, per this:\n\n```\n/var/log/neo4j/neo4j.log:\nError: VM option 'hashCode' is experimental and must be enabled via -XX:+UnlockExperimentalVMOptions.\nError: The unlock option must precede 'hashCode'.\nError: Could not create the Java Virtual Machine.\nError: A fatal exception has occurred. Program will exit.\n```\n\n```\n<user>@<hostname>:~$ sudo service neo4j start\nJob for neo4j.service failed because the control process exited with error code. See \"systemctl status neo4j.service\" and \"journalctl -xe\" for details.\n<user>@<hostname>:~$ sudo service neo4j status\n\u25cf neo4j.service - LSB: Neo4j Graph Database server\n   Loaded: loaded (/etc/init.d/neo4j; bad; vendor preset: enabled)\n   Active: failed (Result: exit-code) since Fri 2016-05-20 14:17:15 BST; 2s ago\n     Docs: man:systemd-sysv-generator(8)\n  Process: 1599 ExecStart=/etc/init.d/neo4j start (code=exited, status=1/FAILURE)\n    Tasks: 0 (limit: 512)\n   Memory: 22.3M\n      CPU: 504ms\n\nMay 20 14:17:14 <hostname> systemd[1]: Starting LSB: Neo4j Graph Database server...\nMay 20 14:17:15 <hostname> neo4j[1599]: Starting Neo4j.\nMay 20 14:17:15 <hostname> neo4j[1599]: WARNING: Max 1024 open files allowed, minimum of 40000 recommended. See the Neo4j manual.\nMay 20 14:17:15 <hostname> neo4j[1599]: /usr/share/neo4j/bin/neo4j: line 149: /var/run/neo4j/neo4j.pid: No such file or directory\nMay 20 14:17:15 <hostname> systemd[1]: neo4j.service: Control process exited, code=exited status=1\nMay 20 14:17:15 <hostname> systemd[1]: Failed to start LSB: Neo4j Graph Database server.\nMay 20 14:17:15 <hostname> systemd[1]: neo4j.service: Unit entered failed state.\nMay 20 14:17:15 <hostname> systemd[1]: neo4j.service: Failed with result 'exit-code'.\n<user>@<hostname>:~$\n\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Ubuntu 16.04 + Neo4j v3.0.1 -- installation via apt-get pulls in Java 9", "statsSkippedReason": "", "closed": "2016-05-26 09:07:34", "commitsDetails": [{"commitUser": "benbc", "commitDateTime": "2016-05-25 14:15:51", "commitHash": "874c8da6bcb7b227b7451c06e4678924abc93800", "commitParents": ["deb956e8e9b78b2747c56ab21d7c59509f555463"], "commitGHEventType": "closed", "nameRev": "874c8da6bcb7b227b7451c06e4678924abc93800 tags/3.0.2~10^2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "packaging/installer-linux/installer-debian/src/main/resources/enterprise/debian/control", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "packaging/installer-linux/installer-debian/src/main/resources/community/debian/control", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Workaround for OpenJDK 9 being in the Ubuntu 16.04 repos\n\nThe Ubuntu 16.04 repos include Java 9, despite its not having been\nreleased yet (see https://bugs.launchpad.net/ubuntu/+source/openjdk-9/+bug/1584118).\nBecause the Java 9 package provides java8-runtime, this results in Java\n9 being installed by default when people install our package on Ubuntu\n16.04.\n\nThis causes problems because:\n\n * We are not compatible with Java 9 because there is a change in\n   command line argument order and the JVM fails to start.\n * We don't support Java 9 and have not tested against it.\n\nThis change adds makes our package conflict with Java 9, so Java 8 is\ninstalled instead.\n\nFixes #7188.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-25 14:07:28"}], "created": "2016-05-20 14:19:09"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/7175", "title": "Cypher parser doesn't accept escaped backticks", "closed": "2016-05-30 07:51:15", "commitsDetails": [], "commits": {}, "ttf": 10.000277777777777, "created": "2016-05-19 13:20:14", "user": "tkroman", "body": "Neo4j version: any\nOS: any\n\nSteps to reproduce:\n1.From e.g. Java API:\n\n```\nNode n0 = db().createNode();\nNode n1 = db().createNode();\nn0.createRelationshipTo(n1, RelationshipType.withName(\"`RelType`\"));  // note the _`_\n```\n\n2.Open the browser, open UI, open entity explorer. In the relationship list you'll see \n\n```\n`RelType`  // note the explicit '`' \n```\n\n3.The following will be the output resulting from clicking on the `RelType` button:\n\n```\n$MATCH p=()-[r:``RelType``]->() RETURN p LIMIT 25          // one ` is a part of rel type and another ` is inserted by the browser, unescaped\nErrors\nCode\n Invalid input 'R': expected '`', whitespace, '|', a length specification, a property map or ']' (line 1, column 17 (offset: 16))\n\"MATCH p=()-[r:``RelType``]->() RETURN p LIMIT 25\"\n                 ^\n```\n\nExpected: either of:\n- don't allow '`' in relationship types, labels, etc.\n- escape '`' in the browser and accept them in parser\n"}, {"labels": ["bolt server", "bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/7155", "title": "Starting neo4j server with an existing local database dir out of installation path fails", "closed": "2016-05-19 06:42:16", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2016-05-18 07:43:02", "user": "dalanlan", "body": "### Steps to reproduce\n1. install `$ brew install neo4j`\n2. import data from legacy databse via `neo4j-import`, say the graph path is my_graph_absolute_path\n3. edit `/usr/local/Cellar/neo4j/3.0.0/libexec/conf/neo4j.conf`:  #`dbms.active_database=my_graph_absolute_path`\n4. try to connect the graph db and see what we got so far `curl --user neo4j:pass_word http://localhost:7474/db/data/node/1` and tada what a shame\n\n```\n...\n\"message\" : \"Node 1 not found\",\n    \"errors\" : [ {\n      \"code\" : \"Neo.ClientError.Statement.EntityNotFound\",\n      \"message\" : \"Node 1 not found\"\n    } ]\n  },\n  \"errors\" : [ {\n    \"code\" : \"Neo.ClientError.Statement.EntityNotFound\",\n    \"message\" : \"Cannot find node with id [1] in database.\"\n\n```\n\n5 however, this is definitely not expected because I could double-check with `neo4j-shell`\n\n```\nneo4j-sh (1)$ ls\n:Movie\n*TMSId =[MV000000020000] \n(me)<-[:ACTED_IN]-(Steven  Hill,172637)\n(me)<-[:ACTED_IN]-(Kenneth  McMillan,171072)\n(me)<-[:ACTED_IN]-(William  Hurt,163079)\n(me)<-[:ACTED_IN]-(Pamela  Reed,159909)\n(me)<-[:ACTED_IN]-(Morgan  Freeman,159717)\n(me)<-[:ACTED_IN]-(James  Woods,158002)\n(me)<-[:ACTED_IN]-(Irene  Worth,157824)\n(me)<-[:ACTED_IN]-(Christopher  Plummer,156353)\n(me)<-[:ACTED_IN]-(Sigourney  Weaver,155286)\n```\n### Platform\n- Neo4j version: 3.0.0\n- Operating system: OS X 10.11.3\n### My word\n\nThis could be a naive question(I've already put it on SO as you suggest yet with no luck), yet from my POV, I bet it should be specified more precisely. I would love to volunteer myself to that once this is settled.\n"}, {"labels": ["3.0", "bolt server", "bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/7115", "title": "[3.0][Procedure] Can't use Long safely as procedure argument type", "closed": "2018-10-02 09:13:35", "commitsDetails": [], "commits": {}, "ttf": 872.0002777777778, "created": "2016-05-12 21:06:53", "user": "ikwattro", "body": "**Neo4j Version:** 3.0.1\n**Operating System:** OSX\n**API:** Browser/PHP\n\nIn the below example, using Long as procedure argument's type is not safe, because : \n1. It is treated as long when you pass a number as procedure call argument.\n2. It is treated as integer when you pass a the same number as query parameter and use the parameter as procedure call parameter\n\nWhich means that we can't use a type of `Integer` or `Long` as procedure argument type, because the type coerced differs from Cypher inline vs Query parameter.\n### Steps to reproduce\n\n``` java\npackage proc;\n\nimport org.neo4j.procedure.Context;\nimport org.neo4j.procedure.Name;\nimport org.neo4j.procedure.Procedure;\n\nimport java.util.stream.Stream;\n\npublic class LongInt {\n\n    @Procedure\n    public Stream<Record> test(@Name(\"object\") Object object) {\n        return Stream.of(new Record(object.getClass()));\n    }\n\n    public class Record {\n\n        public final Object value;\n\n        public Record(Object value) {\n            this.value = value;\n        }\n\n    }\n}\n```\n\nProcedure parameter passed inline in the Cypher query\n\n``` java\n@Test\npublic void testIt1() {\n  Driver driver = GraphDatabase.driver( \"bolt://localhost\" );\n  Session session = driver.session();\n  StatementResult rs = session.run(\"CALL proc.test(500)\");\n  rs.consume();\n  session.close();\n  driver.close();\n\n  // Returns class java.lang.Long\n}\n```\n\nProcedure parameter passed from query parameters map // Procedure parse it as Integer\n\n``` java\n@Test\npublic void testIt2() {\n  Driver driver = GraphDatabase.driver( \"bolt://localhost\" );\n  Session session = driver.session();\n  Map<String, Object> params = new HashMap<>();\n  params.put(\"v\", 500);\n  StatementResult rs = session.run(\"CALL proc.test({v})\", params);\n  rs.consume();\n  session.close();\n  driver.close();\n\n  // Returns class java.lang.Integer\n}\n```\n"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/7106", "title": "[3.0][Store-Upgrade] OOM thrown during schema indices migration", "closed": "2016-07-14 11:15:24", "commitsDetails": [], "commits": {}, "ttf": 63.000277777777775, "created": "2016-05-12 08:52:21", "user": "ikwattro", "body": "I tried to migrate a 2.3.2 database (size 55GB, approx 1.2 billion nodes and 3 billion relationships) to 3.0.1.\n\nNote: I tried this on my laptop (macbook), the purpose was not to use it extensively, just to be able to retrieve some little informations from it.\n\nDuring the store upgrade, an OOM was thrown for the schema indices, which is unexpected imo.\n\n**Neo4j Version:** 3.0.1 \n**Operating System:** OSX \n**API:** NIL\nDefault configuration\n### Expected behavior\n\nNo exception should be thrown, it should just migrate.\n### Actual behavior\n\n```\n2016-05-12 00:50:06.430+0000 INFO  [o.n.k.i.a.i.IndexPopulationJob] Index population started: [:Langugae(name) [provider: {key=lucene, version=1.0}]]\n2016-05-12 01:13:40.470+0000 ERROR [o.n.k.i.a.i.IndexPopulationJob] Failed to populate index: [:Event(id) [provider: {key=lucene, version=1.0}]] Java heap space\njava.lang.OutOfMemoryError: Java heap space\n    at org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray.<init>(FreqProxTermsWriterPerField.java:212)\n    at org.apache.lucene.index.FreqProxTermsWriterPerField$FreqProxPostingsArray.newInstance(FreqProxTermsWriterPerField.java:232)\n    at org.apache.lucene.index.ParallelPostingsArray.grow(ParallelPostingsArray.java:48)\n    at org.apache.lucene.index.TermsHashPerField$PostingsBytesStartArray.grow(TermsHashPerField.java:251)\n    at org.apache.lucene.util.BytesRefHash.add(BytesRefHash.java:292)\n    at org.apache.lucene.index.TermsHashPerField.add(TermsHashPerField.java:150)\n    at org.apache.lucene.index.DefaultIndexingChain$PerField.invert(DefaultIndexingChain.java:682)\n    at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:365)\n    at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:321)\n    at org.apache.lucene.index.DocumentsWriterPerThread.updateDocuments(DocumentsWriterPerThread.java:273)\n    at org.apache.lucene.index.DocumentsWriter.updateDocuments(DocumentsWriter.java:413)\n    at org.apache.lucene.index.IndexWriter.updateDocuments(IndexWriter.java:1318)\n    at org.apache.lucene.index.IndexWriter.addDocuments(IndexWriter.java:1297)\n    at org.neo4j.kernel.api.impl.schema.writer.PartitionedIndexWriter.addDocuments(PartitionedIndexWriter.java:63)\n    at org.neo4j.kernel.api.impl.schema.populator.LuceneIndexPopulator.add(LuceneIndexPopulator.java:72)\n    at org.neo4j.kernel.impl.api.index.BatchingMultipleIndexPopulator.lambda$flush$190(BatchingMultipleIndexPopulator.java:243)\n    at org.neo4j.kernel.impl.api.index.BatchingMultipleIndexPopulator$$Lambda$162/1508954452.run(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n    at org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:104)\n2016-05-12 01:14:59.154+0000 ERROR [o.n.k.i.a.i.IndexPopulationJob] Failed to populate index: [:Comment(id) [provider: {key=lucene, version=1.0}]] Java heap space\njava.lang.OutOfMemoryError: Java heap space\n    at org.apache.lucene.util.BytesRefHash.rehash(BytesRefHash.java:412)\n    at org.apache.lucene.util.BytesRefHash.add(BytesRefHash.java:323)\n    at org.apache.lucene.index.TermsHashPerField.add(TermsHashPerField.java:150)\n    at org.apache.lucene.index.DefaultIndexingChain$PerField.invert(DefaultIndexingChain.java:682)\n    at org.apache.lucene.index.DefaultIndexingChain.processField(DefaultIndexingChain.java:365)\n    at org.apache.lucene.index.DefaultIndexingChain.processDocument(DefaultIndexingChain.java:321)\n    at org.apache.lucene.index.DocumentsWriterPerThread.updateDocuments(DocumentsWriterPerThread.java:273)\n    at org.apache.lucene.index.DocumentsWriter.updateDocuments(DocumentsWriter.java:413)\n    at org.apache.lucene.index.IndexWriter.updateDocuments(IndexWriter.java:1318)\n    at org.apache.lucene.index.IndexWriter.addDocuments(IndexWriter.java:1297)\n    at org.neo4j.kernel.api.impl.schema.writer.PartitionedIndexWriter.addDocuments(PartitionedIndexWriter.java:63)\n    at org.neo4j.kernel.api.impl.schema.populator.LuceneIndexPopulator.add(LuceneIndexPopulator.java:72)\n    at org.neo4j.kernel.impl.api.index.BatchingMultipleIndexPopulator.lambda$flush$190(BatchingMultipleIndexPopulator.java:243)\n    at org.neo4j.kernel.impl.api.index.BatchingMultipleIndexPopulator$$Lambda$162/1508954452.run(Unknown Source)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n    at org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:104)\n^C~\n```\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/7099", "title": "[BUG] 404 on :help query plan link", "closed": "2016-05-11 08:14:35", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2016-05-10 10:24:01", "user": "cosimosimeoneTR", "body": "in :help query plan, last \"tab\", there is a link \n\n```\nReference:  Execution Plans manual page\n```\n\nwhich references \nhttp://neo4j.com/docs/3.0.0/execution-plans.html\nwhich is 404\n"}, {"labels": ["bug", "changelog", "cypher"], "filteredCommits": ["67dd90902478f0ab31be9237bf1f1733090d60ae"], "url": "https://github.com/neo4j/neo4j/issues/7087", "gitStatsSummary": {"insertions": 6, "gitFilesChange": 1, "lines": 8, "deletions": 2}, "numCommits": 1, "commits": {"67dd90902478f0ab31be9237bf1f1733090d60ae": {"commitUser": "pontusmelke", "commitGHEventType": "closed"}, "72f4905a57daf8e61bb0af9000b2c1f752e2c97d": {"commitUser": "pontusmelke", "commitGHEventType": "referenced"}}, "ttf": 3.000277777777778, "user": "ikwattro", "changesInPackagesSPOON": ["org.neo4j.procedure.ProcedureIT.ClassWithProcedures", "org.neo4j.procedure.ProcedureIT.shouldReturnNodeListTypedAsNodeList()", "org.neo4j.procedure.ProcedureIT.ClassWithProcedures.nodeList()", "org.neo4j.procedure.ProcedureIT.NodeListRecord"], "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "- Neo4j version: 3.0.1\n- Operating system: OSX\n- API/Driver: browser\n## Issue\n\nWhen you return a collection of results from a procedure, those are not treated as collections by some functions like extract for example\n### Steps to reproduce\n\nCreate a Procedure returning a list of nodes\n\n``` java\n@Procedure\npublic Stream<NodeListResult> example() {\n  List<Node> nodesList = new ArrayList<>();\n  nodesList.add(database.createNode());\n  nodesList.add(database.createNode());\n\n  return Stream.of(new NodeListResult(nodesList));\n}\n```\n### Expected behavior\n\nWe should be able to extract the ids of the collection\n\n```\nCALL myproc.example() YIELD nodes\nRETURN extract( x IN nodes | id(x) ) as ids\n```\n\nShould return an array of node ids\n### Actual behavior\n\n```\nExpected `nodes` to be a Collection<Any> but it was a Node\n```\n\nNote that the following works fine :\n\n```\nCALL myproc.example()\nYIELD nodes\nUNWIND nodes as n\nRETURN collect( id(n) ) as ids\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 4, "UPD": 0, "TOT": 4, "DEL": 0, "INS": 3, "spoonFilesChanged": 1, "MOV": 1}, "title": "[3.0][Procedure] yielded collection of nodes is treated as a single Node", "statsSkippedReason": "", "closed": "2016-05-12 21:18:09", "commitsDetails": [{"commitUser": "pontusmelke", "commitDateTime": "2016-05-12 23:15:52", "commitHash": "72f4905a57daf8e61bb0af9000b2c1f752e2c97d", "commitParents": ["c46e38b43d2c5f5b824e6db59762b9d410f40c0d", "67dd90902478f0ab31be9237bf1f1733090d60ae"], "commitGHEventType": "referenced", "nameRev": "72f4905a57daf8e61bb0af9000b2c1f752e2c97d tags/3.1.0-M02~7^2~40", "commitGitStats": [{"insertions": 36, "lines": 38, "filePath": "integrationtests/src/test/java/org/neo4j/procedure/ProcedureIT.java", "deletions": 2}, {"insertions": 6, "lines": 8, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/pipes/ProcedureCallPipe.scala", "deletions": 2}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.ClassWithProcedures"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.shouldReturnNodeListTypedAsNodeList()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.ClassWithProcedures.nodeList()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.NodeListRecord"}], "spoonFilePath": "ProcedureIT.java"}], "commitMessage": "Merge pull request #7112 from boggle/3.0\n\nFix #7087: Procedures yielding collection of nodes are treated as sin\u2026", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-12 23:15:52"}, {"commitUser": "pontusmelke", "commitDateTime": "2016-05-12 15:25:21", "commitHash": "67dd90902478f0ab31be9237bf1f1733090d60ae", "commitParents": ["31e72727f11b170442df6d1f0f060411ed644dce"], "commitGHEventType": "closed", "nameRev": "67dd90902478f0ab31be9237bf1f1733090d60ae tags/3.1.0-M02~7^2~40^2", "commitGitStats": [{"insertions": 36, "lines": 38, "filePath": "integrationtests/src/test/java/org/neo4j/procedure/ProcedureIT.java", "deletions": 2}, {"insertions": 6, "lines": 8, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/pipes/ProcedureCallPipe.scala", "deletions": 2}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.ClassWithProcedures"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.shouldReturnNodeListTypedAsNodeList()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.ClassWithProcedures.nodeList()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.NodeListRecord"}], "spoonFilePath": "ProcedureIT.java"}], "commitMessage": "Fix #7087: Procedures yielding collection of nodes are treated as single node\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-12 15:23:05"}], "created": "2016-05-09 08:31:02"}, {"labels": ["bug", "changelog", "operability"], "filteredCommits": ["5b3076be5a8e248c2beb6fe911517056f151dae6"], "url": "https://github.com/neo4j/neo4j/issues/7086", "gitStatsSummary": {"insertions": 5, "gitFilesChange": 1, "lines": 6, "deletions": 1}, "numCommits": 1, "commits": {"5b3076be5a8e248c2beb6fe911517056f151dae6": {"commitUser": "spacecowboy", "commitGHEventType": "closed"}}, "ttf": 2.000277777777778, "user": "eranhazout", "changesInPackagesGIT": ["packaging/installer-linux/installer-debian/src/main/resources/common/neo4j"], "body": "I have noticed that a fresh install of neo4j enterprise is not creating pid file on /var/run/neo4j directory. Also if I'm creating this directory manually it's been deleted by neo4j stop procedure.\nThe result is an instance of neo4j which is not controllable by neo4j bin file.\nThis occurs after first reboot of the server and in order to stop neo4j I forced to kill -9 the process.\n\n**Neo4j Version:** 3.0M03  \n**Operating System:** Ubuntu 14.04  \n### Steps to reproduce\n1. apt-get install neo4j-enterprise\n2. reboot the server \n3. check running process - you will notice that neo4j is running by neo4j user\n4. try to stop neo4j by `#service neo4j stop / start`\n5. You will receive: /usr/share/neo4j/bin/neo4j: line 149: /var/run/neo4j/neo4j.pid: No such file or directory\n### Expected behavior\n\nneo4j start procedure should create neo4j.pid file on upstart\nneo4j stop procedure should delete neo4j.pid\n### Actual behavior\n\nneo4j start procedure is not creating neo4j.pid file on upstart\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "[3.0] Neo4j process is not creating pid file", "statsSkippedReason": "", "closed": "2016-05-11 09:04:43", "commitsDetails": [{"commitUser": "spacecowboy", "commitDateTime": "2016-05-11 10:51:59", "commitHash": "5b3076be5a8e248c2beb6fe911517056f151dae6", "commitParents": ["418baa23879d42f38ccaf998fc62a547469f69fd"], "commitGHEventType": "closed", "nameRev": "5b3076be5a8e248c2beb6fe911517056f151dae6 tags/3.1.0-M02~7^2~45^2", "commitGitStats": [{"insertions": 5, "lines": 6, "filePath": "packaging/installer-linux/installer-debian/src/main/resources/common/neo4j", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Make sure /var/run/neo4j exists\n\nIf /var/run is a tmpfs, we need to make sure the dir is created on each\nstartup.\n\nFixes #7086\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-09 15:33:59"}], "created": "2016-05-09 08:26:33"}, {"labels": ["bug", "cypher"], "filteredCommits": ["081765d261650373484688e8bb9cf624f37122ce"], "url": "https://github.com/neo4j/neo4j/issues/7085", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 5, "deletions": 2}, "numCommits": 1, "commits": {"081765d261650373484688e8bb9cf624f37122ce": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 45.000277777777775, "user": "bunkat", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "An invalid Cypher query is missing an error message.  In this case there was a null param that was being used to create a new node instead of a valid map.\n- Neo4j version: 3.0.1\n- Operating system: Ubuntu 14.04\n- API/Driver: Cypher using transaction endpoint\n### Statements to reproduce\n\nPosted to: http://localhost:7474/db/data/transaction/commit\n\n```\n{\"statements\":[{\"parameters\":{\"tObject\":\"project\",\"vals\":{\"id\":\"lsRyFHwnt5Px4\",\"object\":\"project\",\"name\":\"a1\"}},\"resultDataContents\":[\"row\"],\"statement\":\"\\nCREATE (:Project { vals })\\n\"},{\"parameters\":{\"tObject\":\"file\",\"vals\":{\"id\":\"lsRyFHwnwPQtK\",\"object\":\"file\",\"name\":\"f1\"}},\"resultDataContents\":[\"row\"],\"statement\":\"\\nCREATE (:File { vals })\\n\"},{\"parameters\":{\"tObject\":\"file\",\"vals\":{\"id\":\"lsRyFHwnwRm3t\",\"object\":\"file\",\"name\":\"f2\"}},\"resultDataContents\":[\"row\"],\"statement\":\"\\nCREATE (:File { vals })\\n\"},{\"parameters\":{\"sId\":\"lsRyFHwnt5Px4\",\"tId\":\"lsRyFHwnwPQtK\",\"vals\":null},\"resultDataContents\":[\"row\"],\"statement\":\"\\nMATCH (s:Project { id: { sId } }), (t:File { id: { tId } })\\nWITH s, t\\n\\nOPTIONAL MATCH (s)-[l:link]-\\u003e()\\nDELETE l\\n\\nCREATE UNIQUE (s)-[:link { vals }]-\\u003e(t)\\n\"},{\"parameters\":{\"id\":\"lsRyFHwnt5Px4\",\"object\":\"project\"},\"resultDataContents\":[\"row\"],\"statement\":\"\\nMATCH (n:Project { id: { id } })\\nWITH n\\n\\nOPTIONAL MATCH (n)--\\u003e(c)\\nWITH n, COLLECT(c) AS cs\\nRETURN COLLECT({\\n  id: n.id, object: n.object, name: n.name, no: n.no,\\n  links: [c IN cs | {id: c.id, object: c.object, name: c.name}]\\n})\\n\"}]}\n```\n### Expected behavior\n\n```\n {Code:\"Neo.DatabaseError.Statement.ExecutionFailed\", Message:\"Null parameter vals\"}\n```\n### Actual behavior\n\n```\n{Code:\"Neo.DatabaseError.Statement.ExecutionFailed\", Message:\"\"}\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Neo4j 3.0 Missing error message", "statsSkippedReason": "", "closed": "2016-06-23 12:12:32", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2016-06-16 10:56:37", "commitHash": "081765d261650373484688e8bb9cf624f37122ce", "commitParents": ["5600db35526ef1e2a77916e1c164750011530568"], "commitGHEventType": "closed", "nameRev": "081765d261650373484688e8bb9cf624f37122ce tags/3.1.0-M04~2^2~1^2^2", "commitGitStats": [{"insertions": 3, "lines": 5, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/mutation/GraphElementPropertyFunctions.scala", "deletions": 2}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/CreateUniqueAcceptanceTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Make `CREATE UNIQUE` handle a null property map well\n\nFixes #7085\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-06-16 10:53:59"}], "created": "2016-05-09 03:19:44"}, {"labels": ["bug", "changelog", "cypher"], "filteredCommits": ["136885fdc8d90dee11ce57034b2db343eaadccce"], "url": "https://github.com/neo4j/neo4j/issues/7084", "gitStatsSummary": {"insertions": 62, "gitFilesChange": 4, "lines": 89, "deletions": 27}, "numCommits": 1, "commits": {"136885fdc8d90dee11ce57034b2db343eaadccce": {"commitUser": "henriknyman", "commitGHEventType": "closed"}}, "ttf": 4.000277777777778, "user": "sztupy", "changesInPackagesSPOON": ["org.neo4j.shell.StartClient.ShellExecutionFailureException", "org.neo4j.shell.kernel.apps.cypher.Start.isComplete(java.lang.String)", "org.neo4j.shell.kernel.apps.cypher.Dump.execute(org.neo4j.shell.AppCommandParser,org.neo4j.shell.Session,org.neo4j.shell.Output)", "org.neo4j.shell.kernel.apps.cypher.Start.handleException(org.neo4j.shell.Output,org.neo4j.kernel.impl.query.QueryExecutionKernelException,long)", "org.neo4j.shell.kernel.apps.cypher.Start.trimQuery(java.lang.String)", "org.neo4j.shell.kernel.apps.cypher.Start.getResult(java.lang.String,org.neo4j.shell.Session)", "org.neo4j.shell.kernel.apps.cypher.Start.execute(org.neo4j.shell.AppCommandParser,org.neo4j.shell.Session,org.neo4j.shell.Output)", "org.neo4j.shell.kernel.apps.cypher.Start.getParameters(org.neo4j.shell.Session)", "org.neo4j.shell.kernel.apps.cypher.Dump.exec(org.neo4j.shell.AppCommandParser,org.neo4j.shell.Session,org.neo4j.shell.Output)"], "changesInPackagesGIT": ["community/shell/src/main/java/org/neo4j/shell/kernel/apps", "community/shell/src/main/java/org/neo4j/shell"], "body": "I'm trying to import a fairly large CSV file (~300MB) with the following structure:\n\n```\nid,type,internal,data\n1,a,true,abc\n2,b,false,def\n1,a,true,ghi\n3,a,true,jkl\n4,c,true,mno\n...\n```\n\n(note: based on the ID value there might be duplicates with different values in the data column, which we are not using)\n\nI'm using the following script:\n\n```\nCREATE CONSTRAINT ON (t:Thread) ASSERT t.id IS UNIQUE;\nCREATE INDEX ON :Thread(type);\n\nUSING PERIODIC COMMIT 1000\nLOAD CSV WITH HEADERS FROM 'file:///thread.csv' AS line\nMERGE (t:Thread{id:toint(line.id)})\nON CREATE SET\n  t.type = line.type,\n  t.internal = case line.internal WHEN 'true' THEN true ELSE false END;\n```\n\nFor some reason no matter what I try, the periodic commit doesn't seem to work, and I usually get a java out of memory error. Also none of the inserts get commited.\n\nIf I limit the csv size, for example with a `WITH line LIMIT 100000` then the code works fine, and I get the first 100k lines imported. The same code also works, and can import the whole file with neo4j 2.3 as well.\n\nI'm using the default docker versions for both 2.3 and 3.0 for testing\n\n**Neo4j Version:** neo4j docker, tag 3.0.0\n**API:** neo4j-shell, through docker exec\n### Steps to reproduce\n1. Pull the image: `docker pull neo4j:3.0.0`\n2. Create a directory on the host that will be a mount for the data: `mkdir /home/neo4j-data`\n3. Start a new container that mounts to this directory: `docker run -d --name neo4j-test -p 7474:7474 -v /home/neo4j:/data neo4j:3.0.0`\n4. Generate a large CSV file, with the above mentioned schema\n5. Copy the file and the import script over: `docker cp thread.csv neo4j:/var/lib/neo4j/import;\n   docker cp load.cyp neo4j:/var/lib/neo4j/import`\n6. Start the import process: `docker exec -ti neo4j /var/lib/neo4j/bin/neo4j-shell -file /var/lib/neo4j/import/load.cyp`\n### Expected behavior\n\nThe data should be imported\n### Actual behavior\n\n```\nERROR (-v for expanded information):\n        Error occurred in server thread; nested exception is:\n        java.lang.OutOfMemoryError: Java heap space\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 9, "UPD": 9, "TOT": 19, "DEL": 0, "INS": 3, "spoonFilesChanged": 3, "MOV": 7}, "title": "Out of memory issues when using load csv even when using periodic commit", "statsSkippedReason": "", "closed": "2016-05-13 09:34:04", "commitsDetails": [{"commitUser": "henriknyman", "commitDateTime": "2016-05-12 14:13:48", "commitHash": "136885fdc8d90dee11ce57034b2db343eaadccce", "commitParents": ["31e72727f11b170442df6d1f0f060411ed644dce"], "commitGHEventType": "closed", "nameRev": "136885fdc8d90dee11ce57034b2db343eaadccce tags/3.1.0-M02~7^2~38^2", "commitGitStats": [{"insertions": 1, "lines": 1, "filePath": "community/shell/src/main/java/org/neo4j/shell/StartClient.java", "deletions": 0}, {"insertions": 33, "lines": 41, "filePath": "community/shell/src/main/java/org/neo4j/shell/kernel/apps/cypher/Start.java", "deletions": 8}, {"insertions": 1, "lines": 3, "filePath": "community/shell/src/main/java/org/neo4j/shell/kernel/apps/TransactionProvidingApp.java", "deletions": 2}, {"insertions": 81, "lines": 81, "filePath": "community/shell/src/test/java/org/neo4j/shell/TestApps.java", "deletions": 0}, {"insertions": 27, "lines": 44, "filePath": "community/shell/src/main/java/org/neo4j/shell/kernel/apps/cypher/Dump.java", "deletions": 17}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.StartClient.ShellExecutionFailureException"}], "spoonFilePath": "StartClient.java"}, {"spoonMethods": [], "spoonFilePath": "TransactionProvidingApp.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.TestApps.shouldSupportUsingPeriodicCommitInSession()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.TestApps.getStartClient()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.TestApps.verifyNumberOfCommits(java.lang.String,long)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.TestApps.createCsvFile(long)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.TestApps.shouldSupportUsingPeriodicCommitInMultipleLine()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.TestApps.lastClosedTxId()"}], "spoonFilePath": "TestApps.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.shell.kernel.apps.cypher.Start.getResult(java.lang.String,org.neo4j.shell.Session)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.shell.kernel.apps.cypher.Start.handleException(org.neo4j.shell.Output,org.neo4j.kernel.impl.query.QueryExecutionKernelException,long)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.shell.kernel.apps.cypher.Start.trimQuery(java.lang.String)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.shell.kernel.apps.cypher.Start.isComplete(java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.kernel.apps.cypher.Start.execute(org.neo4j.shell.AppCommandParser,org.neo4j.shell.Session,org.neo4j.shell.Output)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.shell.kernel.apps.cypher.Start.getParameters(org.neo4j.shell.Session)"}], "spoonFilePath": "Start.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 11, "DEL": 0, "INS": 0, "MOV": 7, "spoonMethodName": "org.neo4j.shell.kernel.apps.cypher.Dump.exec(org.neo4j.shell.AppCommandParser,org.neo4j.shell.Session,org.neo4j.shell.Output)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.kernel.apps.cypher.Dump.execute(org.neo4j.shell.AppCommandParser,org.neo4j.shell.Session,org.neo4j.shell.Output)"}], "spoonFilePath": "Dump.java"}], "commitMessage": "Fix problem with PERIODIC COMMIT in the shell\n\nFixes #7084\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-12 13:53:46"}], "created": "2016-05-08 23:47:42"}, {"labels": ["3.0", "bolt server", "bug"], "url": "https://github.com/neo4j/neo4j/issues/7069", "title": "[3.0][Procedure] kernel should prevent procedures to return RelationshipType types", "closed": "2016-05-12 10:58:27", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2016-05-05 14:09:09", "user": "ikwattro", "body": "- Neo4j version: 3.0.0\n- Operating system: OSx Mavericks\n- API/Driver: Browser\n### **Steps to reproduce**\n\nCreate a procedure that returns a RelationshipType, for eg : \n\n``` java\npublic CallableProcedure.BasicProcedure getEvents() {\n        return new CallableProcedure.BasicProcedure(procedureSignature(getProcedureName(\"single\"))\n                .mode(ProcedureSignature.Mode.READ_WRITE)\n                .in(PARAMETER_NAME_TIME, Neo4jTypes.NTNumber)\n                .in(PARAMETER_NAME_RESOLUTION, Neo4jTypes.NTString)\n                .in(PARAMETER_NAME_TIMEZONE, Neo4jTypes.NTString)\n                .in(PARAMETER_NAME_RELATIONSHIP_TYPES, Neo4jTypes.NTList(Neo4jTypes.NTString))\n                .in(PARAMETER_NAME_DIRECTION, Neo4jTypes.NTString)\n                .out(PARAMETER_NAME_NODE, Neo4jTypes.NTNode)\n                .out(PARAMETER_NAME_RELATIONSHIP_TYPE, Neo4jTypes.NTRelationship)\n                .out(PARAMETER_NAME_DIRECTION, Neo4jTypes.NTString)\n                .build()) {\n\n            @Override\n            public RawIterator<Object[], ProcedureException> apply(CallableProcedure.Context ctx, Object[] input) throws ProcedureException {\n                List<Event> events = timedEventsLogic.getEvents((long) input[0], (String) input[1], (String) input[2], (List<String>) input[3], (String) input[4]);\n                List<Object[]> collector = getObjectArray(events);\n                return Iterators.asRawIterator(collector.iterator());\n            }\n        };\n    }\n```\n\nYield the values referred as `relationshipType` \n\n```\nCALL ga.timetree.events.single(timestamp(), null, null, null, null) YIELD node, relationshipType, direction\n```\n\nNote : \n- Not YIELDING the relationshipType works fine\n- Consuming the result with `executeCypher` in java works fine\n### Expected behavior\n\nAn exception should be thrown on the server side, even during building the packages as a `RelationshipType` type is not supported by the drivers\n### Actual behavior\n\nNo exception is thrown on the server side, however the browser hangs and output the following in the logs : \n\n```\n2016-05-05 13:57:53.137+0000 ERROR [o.n.b.v.r.i.ErrorReporter] Client triggered an unexpected error [UnknownError]: Unpackable value SENT_ON of type org.neo4j.graphdb.RelationshipType$1. See debug.log for more details, reference 7da927a2-6955-4aec-a9ee-80dbe35c051c.\n2016-05-05 13:57:53.137+0000 ERROR [o.n.b.v.r.i.ErrorReporter] Client triggered an unexpected error [UnknownError]: Unpackable value SENT_ON of type org.neo4j.graphdb.RelationshipType$1, reference 7da927a2-6955-4aec-a9ee-80dbe35c051c. Unpackable value SENT_ON of type org.neo4j.graphdb.RelationshipType$1\norg.neo4j.bolt.v1.messaging.BoltIOException: Unpackable value SENT_ON of type org.neo4j.graphdb.RelationshipType$1\n    at org.neo4j.bolt.v1.messaging.Neo4jPack$Packer.pack(Neo4jPack.java:196)\n    at org.neo4j.bolt.v1.messaging.PackStreamMessageFormatV1$Writer.handleRecordMessage(PackStreamMessageFormatV1.java:136)\n    at org.neo4j.bolt.v1.messaging.msgprocess.RecordStreamCallback$1.visit(RecordStreamCallback.java:47)\n    at org.neo4j.bolt.v1.runtime.internal.CypherAdapterStream.lambda$accept$9(CypherAdapterStream.java:65)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor3_0$$anon$3.visit(CompatibilityFor3_0.scala:386)\n    at org.neo4j.cypher.internal.compiler.v3_0.executionplan.procs.ProcedureExecutionResult$$anonfun$accept$1.apply(ProcedureExecutionResult.scala:69)\n    at org.neo4j.cypher.internal.compiler.v3_0.executionplan.procs.ProcedureExecutionResult$$anonfun$accept$1.apply(ProcedureExecutionResult.scala:69)\n    at scala.collection.Iterator$class.foreach(Iterator.scala:893)\n    at scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\n    at org.neo4j.cypher.internal.compiler.v3_0.executionplan.procs.ProcedureExecutionResult.accept(ProcedureExecutionResult.scala:69)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor3_0$$anonfun$accept$1.apply$mcV$sp(CompatibilityFor3_0.scala:381)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor3_0$$anonfun$accept$1.apply(CompatibilityFor3_0.scala:380)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor3_0$$anonfun$accept$1.apply(CompatibilityFor3_0.scala:380)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_0$.runSafely(CompatibilityFor3_0.scala:117)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor3_0.accept(CompatibilityFor3_0.scala:380)\n    at org.neo4j.cypher.internal.javacompat.ExecutionResult.accept(ExecutionResult.java:317)\n    at org.neo4j.bolt.v1.runtime.internal.CypherAdapterStream.accept(CypherAdapterStream.java:64)\n    at org.neo4j.bolt.v1.messaging.msgprocess.RecordStreamCallback.result(RecordStreamCallback.java:42)\n    at org.neo4j.bolt.v1.messaging.msgprocess.RecordStreamCallback.result(RecordStreamCallback.java:30)\n    at org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.result(SessionStateMachine.java:860)\n    at org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.access$400(SessionStateMachine.java:59)\n    at org.neo4j.bolt.v1.runtime.internal.SessionStateMachine$State$4.pullAll(SessionStateMachine.java:236)\n    at org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.pullAll(SessionStateMachine.java:664)\n    at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorkerFacade.lambda$pullAll$4(SessionWorkerFacade.java:74)\n    at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.execute(SessionWorker.java:116)\n    at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.executeBatch(SessionWorker.java:102)\n    at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.run(SessionWorker.java:82)\n    at java.lang.Thread.run(Thread.java:745)\n```\n"}, {"labels": ["3.0", "bug"], "url": "https://github.com/neo4j/neo4j/issues/7066", "title": "Can't login from browser view in HA mode", "closed": "2018-09-24 12:30:55", "commitsDetails": [], "commits": {}, "ttf": 872.0002777777778, "created": "2016-05-04 17:14:16", "user": "Masadow", "body": "Hi,\n\nUnder new neo4j 3.0.0. I'm running a HA cluster. I can properly login from master:7474 but I can't login from slave:7474.\n\nIf I check in the browser console, the following response is returned from the API :\n\n**Neo4j Version:** 3.0.0  \n**Operating System:** Debian 8 Jessie  \n### Steps to reproduce\n1. Setup a password on the master server\n2. Run the HA cluster\n3. Go to one slave member's browser interface (port 7474)\n4. Try to :server connect\n### Expected behavior\n\nI should login in\n### Actual behavior\n\nRequest takes ages to resolve and finally throw the following error :\n\n`[{code: \"Neo.ClientError.Security.Unauthorized\", message: \"No authentication header supplied.\"}]`\n"}, {"labels": ["bug", "changelog", "cypher"], "filteredCommits": ["8e9b1521eb10a952df9e15e9b0d0d0e10b8df1ed"], "url": "https://github.com/neo4j/neo4j/issues/7059", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"8e9b1521eb10a952df9e15e9b0d0d0e10b8df1ed": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 14.000277777777777, "user": "mmcauliffe", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "Hello,\n\nI've been finding that using a regex in where clause for matching is initially matching every node.\n\nSo for the a database with nodes with a `label` property, something like:\n\n```\nMATCH (n) WHERE n.label =~ '(?i)cat' RETURN n\n```\n\nReturns every node.  It's been consistently working once a database has been up and running, but usually the first couple of runs of such a query will return all nodes.  I'm not sure what changes eventually to make the same query work.  \n\nIt looks like regex clauses for other properties besides `label` are working just fine, so maybe that's the issue?\n\n**Neo4j Version:** 3.0.0\n**Operating System:** Windows 10, but also found on Travis CI (Ubuntu 12.04)  \n### Steps to reproduce\n1. Start with a fresh database\n2. Populate with some nodes with various `label` properties\n3. Run regex matching query on node's `label` property\n### Expected behavior\n\nOnly nodes that match the regex should be returned\n### Actual behavior\n\nAll nodes are returned for the first few queries, but eventually (sometimes) the expected behavior happens\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Regex clause matching everything", "statsSkippedReason": "", "closed": "2016-05-19 08:21:03", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2016-05-18 12:52:05", "commitHash": "8e9b1521eb10a952df9e15e9b0d0d0e10b8df1ed", "commitParents": ["8066343b1fb2eb6ea3b5e0ab8770458d6bfd1b79"], "commitGHEventType": "closed", "nameRev": "8e9b1521eb10a952df9e15e9b0d0d0e10b8df1ed tags/3.1.0-M02~7^2~20^2", "commitGitStats": [{"insertions": 23, "lines": 23, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/NodeIndexScanAcceptanceTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/steps/indexScanLeafPlanner.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "NodeIndexScan should not claim to solve regexp\n\nNodeIndexScan was falsely claiming to solve regexp predicates which leads\nto invalid results.\n\nFixes #7059\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-18 12:16:51"}], "created": "2016-05-04 10:59:12"}, {"labels": ["3.0", "bug", "changelog", "operability"], "filteredCommits": ["99beaf03249ade72aab4928613f07260bfe6e605"], "url": "https://github.com/neo4j/neo4j/issues/7056", "gitStatsSummary": {"insertions": 6, "gitFilesChange": 1, "lines": 7, "deletions": 1}, "numCommits": 1, "commits": {"99beaf03249ade72aab4928613f07260bfe6e605": {"commitUser": "spacecowboy", "commitGHEventType": "closed"}}, "ttf": 7.000277777777778, "user": "jimmux", "changesInPackagesGIT": ["packaging/standalone/src/main/distribution/shell-scripts/bin/neo4j-shell"], "body": "I just updated from v3.0.0-RC1 to v3.0.0, running on Linux Mint 17.3, and one of my convenience scripts broke on a call to neo4j-shell.\n\nAfter a bit of testing, it seems that the documented `-file -` to pipe from stdin is no longer an option. For example, when I run:\n\n`neo4j-shell -v -file - < foo.cql`\n\nI get error:\n\n`\nERROR (-v for expanded information):\n    File to execute does not exist: /path/to/neo4j/-\norg.neo4j.shell.ShellException: File to execute does not exist: /path/to/neo4j/-\n    at org.neo4j.shell.StartClient.grabPromptOrJustExecuteCommand(StartClient.java:402)\n    at org.neo4j.shell.StartClient.startRemote(StartClient.java:364)\n    at org.neo4j.shell.StartClient.start(StartClient.java:229)\n    at org.neo4j.shell.StartClient.main(StartClient.java:147)\n`\n\nThis worked on the previous release.\n\nIt will work if I drop the -file option completely, e.g.:\n\n`neo4j-shell -v < foo.cql`\n\nso it's easy to work around. If this is a deliberate change, it seems the documentation (--help) needs an update.\n\n**Neo4j Version:** 3.0.0\n**Operating System:** Linux Mint 17.3\n### Steps to reproduce\n\nUse the neo4j-shell option to read from stdin: `neo4j-shell -file -`\n### Expected behavior\n\nAccept input from stdin, don't throw an error.\n### Actual behavior\n\nThrows an error\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "neo4j-shell not recognising read from stdin with option \"-file -\"", "statsSkippedReason": "", "closed": "2016-05-11 08:23:39", "commitsDetails": [{"commitUser": "spacecowboy", "commitDateTime": "2016-05-09 15:06:11", "commitHash": "99beaf03249ade72aab4928613f07260bfe6e605", "commitParents": ["ffd663dbb9eb841d40df568b86884eb7c6f1969d"], "commitGHEventType": "closed", "nameRev": "99beaf03249ade72aab4928613f07260bfe6e605 tags/3.1.0-M02~7^2~48^2~2", "commitGitStats": [{"insertions": 7, "lines": 7, "filePath": "packaging/standalone/src/tests/shell-scripts/test-shell.sh", "deletions": 0}, {"insertions": 6, "lines": 7, "filePath": "packaging/standalone/src/main/distribution/shell-scripts/bin/neo4j-shell", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Do not resolve filepath '-' in neo4j-shell\n\nFixes #7056\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-09 14:55:24"}], "created": "2016-05-04 07:34:35"}, {"labels": ["bug", "changelog", "cypher"], "filteredCommits": ["b5ea0da2b915ea63c66b717997250ac2bffdbe5d"], "url": "https://github.com/neo4j/neo4j/issues/7055", "gitStatsSummary": {"insertions": 30, "gitFilesChange": 1, "lines": 39, "deletions": 9}, "numCommits": 1, "commits": {"b5ea0da2b915ea63c66b717997250ac2bffdbe5d": {"commitUser": "pontusmelke", "commitGHEventType": "closed"}}, "ttf": 15.000277777777777, "user": "tomzeppenfeldt", "changesInPackagesGIT": ["community/cypher/frontend-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "**Neo4j Version:** 2.3.1  \n**Operating System:** Ubuntu 14.10  \n### Steps to reproduce\n\nCreating a collection of collections, e.g.\n\n`Collect([TOINT(idn),STR(name),TOINT(status),TOINT(days_norm),TOINT(days_spent)]) as flowsteps`\n\nand later on adding up corresponding items\n\n`REDUCE (x=0, i IN flowsteps | x + TOINT(STRING(i[3]))) as normP`\n\nthrows an error\n\n`Cypher error: Type mismatch: expected Float, Integer or String but was Any (line 33, column 57 (offset: 1271)) \" REDUCE (x=0, i IN flowsteps | x + TOINT(TOSTRING(i[3]))) as normP`\n### Expected behavior\n\nIf I cast something WITH TOINT(), then this should work:\n\n`REDUCE (x=0, i IN flowsteps | x + i[3]) as normP`\n### Actual behavior\n\nOnly works with a workaround  by TOINT(STR()), which is no longer works in 3.0, because STR() is no longer available.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "explicitly cast items  in multi-type collections are considered as Any", "statsSkippedReason": "", "closed": "2016-05-19 10:21:16", "commitsDetails": [{"commitUser": "pontusmelke", "commitDateTime": "2016-05-19 06:35:07", "commitHash": "b5ea0da2b915ea63c66b717997250ac2bffdbe5d", "commitParents": ["77d98950fa6362f748ac040fce6a5ab59344b0df"], "commitGHEventType": "closed", "nameRev": "b5ea0da2b915ea63c66b717997250ac2bffdbe5d tags/3.1.0-M02~7^2~17^2", "commitGitStats": [{"insertions": 6, "lines": 6, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/FunctionsAcceptanceTest.scala", "deletions": 0}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/frontend-3.0/src/test/scala/org/neo4j/cypher/internal/frontend/v3_0/ast/functions/ToStringTest.scala", "deletions": 1}, {"insertions": 30, "lines": 39, "filePath": "community/cypher/frontend-3.0/src/main/scala/org/neo4j/cypher/internal/frontend/v3_0/ast/functions/ToString.scala", "deletions": 9}], "commitSpoonAstDiffStats": [], "commitMessage": "Allow ToString to defer some type checks to runtime\n\nFixes #7055\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-19 06:25:47"}], "created": "2016-05-03 21:23:01"}, {"labels": ["bug", "changelog", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/7053", "title": "TOSTRING() fails in cases where STR() worked", "closed": "2016-05-19 04:38:30", "commitsDetails": [], "commits": {}, "ttf": 15.000277777777777, "created": "2016-05-03 21:14:07", "user": "tomzeppenfeldt", "body": "TOSTRING() fails in cases where STR() worked\n\n**Neo4j Version:** 2.3.1\n**Operating System:** Ubuntu 14.10  \n### Steps to reproduce\n\nI have an collection of arrays\n\n`Collect([TOINT(idn),STR(name),TOINT(status),TOINT(days_norm),TOINT(days_spent)]) as flowsteps``\n\nThis\n\n`REDUCE (x=0, i IN flowsteps | x + TOINT(STR(i[3]))) as normP`  \n\nworks, but this  \n\nREDUCE (x=0, i IN flowsteps | x + TOINT(TOSTRING(i[3]))) as normP` \n\n throws an error\n\n`Cypher error: Type mismatch: expected Float, Integer or String but was Any (line 33, column 57 (offset: 1271)) \" REDUCE (x=0, i IN flowsteps | x + TOINT(TOSTRING(i[3]))) as normP`  \n\nSame error can be observed when running this:\n\n`UNWIND [1,\"12\",37,\"27654\"] as elt RETURN toString(elt)``\n### Expected behavior\n\nTOSTRING() should accept Any, like STR() dis\n"}, {"labels": ["bug", "team-packaging"], "url": "https://github.com/neo4j/neo4j/issues/7052", "title": "Cannot install Neo4j 3.0.0 on Xenial Docker images", "closed": "2020-02-26 09:01:39", "commitsDetails": [], "commits": {}, "ttf": 1393.0002777777777, "created": "2016-05-03 16:59:59", "user": "Alan-R", "body": "## .deb signature problem\n\nI tried to use the current Debian neo4j repository .deb packages and ran into 2 or 3 different problems with the signatures.\n\n**Neo4j Version:** 3.0.0 \n**Operating System:** Ubuntu 16.04 \n**API:** .deb Installation\n### Steps to reproduce\n1. `wget -O - http://debian.neo4j.org/neotechnology.gpg.key | apt-key add -`\n2. `apt-get update && apt-get -y install --no-install-recommends neo4j=3.0.0`\n3. `file neotechnology.gpg.key`\n### Expected behavior\n1. It should install without issues.\n2. It should be using a secure form of signature\n3. It should use a recent version of a PGP key (file should _not_ identify it is old)\n\n(those may only be 2 issues rather than 3)\n### Actual behavior\n1. It won't install due to hash sum mismatch\n2. It is using sha1 for a signature type\n3. File identifies it as a \"old\" style signature\n\n**Here are the messages from the apt-key add step**\n\n```\n2016-05-03 16:39:02--  http://debian.neo4j.org/neotechnology.gpg.key\nResolving debian.neo4j.org (debian.neo4j.org)... 52.0.233.188\nConnecting to debian.neo4j.org (debian.neo4j.org)|52.0.233.188|:80... connected.\nHTTP request sent, awaiting response... 200 OK\nLength: 1679 (1.6K) [application/octet-stream]\nSaving to: 'STDOUT'\n```\n\n**Here are the messages from the apt-get install step**\n\n```\nIgn:1 http://debian.neo4j.org/repo stable/ InRelease\nHit:2 http://archive.ubuntu.com/ubuntu xenial InRelease\nGet:3 http://debian.neo4j.org/repo stable/ Release [1479 B]\nGet:4 http://archive.ubuntu.com/ubuntu xenial-updates InRelease [93.3 kB]\nGet:5 http://debian.neo4j.org/repo stable/ Release.gpg [819 B]\nGet:6 http://debian.neo4j.org/repo stable/ Packages [27.2 kB]\nErr:6 http://debian.neo4j.org/repo stable/ Packages\n  Hash Sum mismatch\nGet:7 http://archive.ubuntu.com/ubuntu xenial-security InRelease [92.2 kB]\nFetched 215 kB in 1s (178 kB/s)\nReading package lists...\nW: http://debian.neo4j.org/repo/stable/Release.gpg: Signature by key 66D34E951A8C53D90242132B26C95CF201182252 uses weak digest algorithm (SHA1)\nE: Failed to fetch http://debian.neo4j.org/repo/stable/Packages.gz  Hash Sum mismatch\nE: Some index files failed to download. They have been ignored, or old ones used instead.\n```\n\n**Here is the output from file**\n\n```\nneotechnology.gpg.key: PGP public key block Public-Key (old)\n```\n"}, {"labels": ["3.0", "bug", "changelog", "cypher"], "filteredCommits": ["8358ecb3a702c487fc68ac5d51e4957ef704e7b2"], "url": "https://github.com/neo4j/neo4j/issues/7046", "gitStatsSummary": {"insertions": 14, "gitFilesChange": 4, "lines": 54, "deletions": 40}, "numCommits": 1, "commits": {"31e72727f11b170442df6d1f0f060411ed644dce": {"commitUser": "pontusmelke", "commitGHEventType": "referenced"}, "8358ecb3a702c487fc68ac5d51e4957ef704e7b2": {"commitUser": "boggle", "commitGHEventType": "closed"}}, "ttf": 8.000277777777777, "user": "cmkpl", "changesInPackagesSPOON": ["org.neo4j.procedure.ProcedureIT.PathOutputRecord", "org.neo4j.procedure.ProcedureIT.shouldCallProcedureReturningPaths()", "org.neo4j.procedure.ProcedureIT.ClassWithProcedures.nodePaths(org.neo4j.graphdb.Node)"], "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "I am now using \"neo4j-apoc-procedures\" for extra functions, and found that there is error when calling\n\n```\nMATCH (a:STATION {name: 'A'}), (b:STATION{name: 'D'})\nCALL apoc.algo.dijkstra(a, b, 'ROUTE', 'cost') yield path as path, weight as weight\nRETURN path, weight, rels(path)\n```\n\nIt will return an error\n\n> Expected path to be a path.\n\nAs contributor of neo4j-apoc-procedures asked to redirect the problem here. So I submit an issue here.\n\nReference: [https://github.com/neo4j-contrib/neo4j-apoc-procedures/issues/20](https://github.com/neo4j-contrib/neo4j-apoc-procedures/issues/20)\n\nVersion: 3.0.0\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 3, "UPD": 0, "TOT": 3, "DEL": 0, "INS": 3, "spoonFilesChanged": 1, "MOV": 0}, "title": "org.neo4j.cypher.internal.compiler.v3_0.helpers.ScalaCompatibility#asScalaCompatible issue", "statsSkippedReason": "", "closed": "2016-05-12 12:03:40", "commitsDetails": [{"commitUser": "pontusmelke", "commitDateTime": "2016-05-12 13:47:21", "commitHash": "31e72727f11b170442df6d1f0f060411ed644dce", "commitParents": ["de5dc5afa2677be0e443381cc4f02c83469cf003", "8358ecb3a702c487fc68ac5d51e4957ef704e7b2"], "commitGHEventType": "referenced", "nameRev": "31e72727f11b170442df6d1f0f060411ed644dce tags/3.1.0-M02~7^2~43", "commitGitStats": [{"insertions": 5, "lines": 6, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/PipeExecutionResult.scala", "deletions": 1}, {"insertions": 4, "lines": 5, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/ResultIterator.scala", "deletions": 1}, {"insertions": 0, "lines": 35, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/helpers/ScalaCompatibility.scala", "deletions": 35}, {"insertions": 14, "lines": 30, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/helpers/{ScalaCompatibilityTest.scala => RuntimeScalaValueConverterTest.scala}", "deletions": 16}, {"insertions": 50, "lines": 50, "filePath": "integrationtests/src/test/java/org/neo4j/procedure/ProcedureIT.java", "deletions": 0}, {"insertions": 5, "lines": 8, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/pipes/ProcedureCallPipe.scala", "deletions": 3}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.PathOutputRecord"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.shouldCallProcedureReturningPaths()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.ClassWithProcedures.nodePaths(org.neo4j.graphdb.Node)"}], "spoonFilePath": "ProcedureIT.java"}], "commitMessage": "Merge pull request #7105 from boggle/3.0-proc-paths\n\nFix #7046: Cannot return paths from procedures", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-12 13:47:21"}, {"commitUser": "boggle", "commitDateTime": "2016-05-11 15:49:29", "commitHash": "8358ecb3a702c487fc68ac5d51e4957ef704e7b2", "commitParents": ["de5dc5afa2677be0e443381cc4f02c83469cf003"], "commitGHEventType": "closed", "nameRev": "8358ecb3a702c487fc68ac5d51e4957ef704e7b2 tags/3.1.0-M02~7^2~43^2", "commitGitStats": [{"insertions": 5, "lines": 6, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/PipeExecutionResult.scala", "deletions": 1}, {"insertions": 4, "lines": 5, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/ResultIterator.scala", "deletions": 1}, {"insertions": 0, "lines": 35, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/helpers/ScalaCompatibility.scala", "deletions": 35}, {"insertions": 14, "lines": 30, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/helpers/{ScalaCompatibilityTest.scala => RuntimeScalaValueConverterTest.scala}", "deletions": 16}, {"insertions": 50, "lines": 50, "filePath": "integrationtests/src/test/java/org/neo4j/procedure/ProcedureIT.java", "deletions": 0}, {"insertions": 5, "lines": 8, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/pipes/ProcedureCallPipe.scala", "deletions": 3}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.PathOutputRecord"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.shouldCallProcedureReturningPaths()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.procedure.ProcedureIT.ClassWithProcedures.nodePaths(org.neo4j.graphdb.Node)"}], "spoonFilePath": "ProcedureIT.java"}], "commitMessage": "Fix #7046: Cannot return paths from procedures\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-11 15:47:46"}], "created": "2016-05-03 12:45:51"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/7044", "title": "Browser: text selections in cypher editor not visible in dark theme", "closed": "2016-09-21 09:16:55", "commitsDetails": [], "commits": {}, "ttf": 141.00027777777777, "created": "2016-05-02 22:39:11", "user": "DannyMeister", "body": "I thought text selections were broken in 3.0.0 for several days, but turns out it is just the styling in the dark theme.\n- Neo4j version: 3.0.0\n- Operating system: Windows 7\n- browser: Chrome 50.0.2661.94m\n\n*\\* Steps to reproduce\n1. In the Browser->Browser Options->Theme choose Dark.\n2. Type or open any existing cypher query.\n3. Click+drag or shift+arrow to make a text selection.\n\n*\\* Expected\nThe selected text will be visually highlighted.\n*\\* Actual behavior\nThe cursor visually disappears.\n"}, {"labels": ["browser", "bug", "docs"], "url": "https://github.com/neo4j/neo4j/issues/7034", "title": "Browser: various reference links in 3.0.0 don't work", "closed": "2016-05-04 13:54:17", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2016-04-29 14:46:36", "user": "freeeve", "body": "I was exploring the :help command in the new browser. It has several useful pages, but following any links that go to pages like `neo4j.com/docs/3.0.0/...` don't seem to work (404). I'm not sure if this is a browser issue or a docs issue, but I figured I would let you all know via this issue.\n"}, {"labels": ["bug", "changelog"], "url": "https://github.com/neo4j/neo4j/issues/7009", "title": "[3.0-RC1] Document changes of Neo4j status codes in Changelog", "closed": "2016-04-22 08:31:41", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2016-04-21 12:29:07", "user": "ikwattro", "body": "Hi,\n\nMinor stuff but it broke one of my tests.\n\nBetween M05 and RC1, the \n\n`Neo.ClientError.Statement.InvalidSyntax` status code\n\nhas been replaced by `Neo.ClientError.Statement.SyntaxError`\n\nPlease add it to the changelog for helping other devs.\n\nThanks !\n"}, {"labels": ["2.3", "bug", "cypher"], "filteredCommits": ["f139458aa952c17a71080c29beb2ba05ed6616b7"], "url": "https://github.com/neo4j/neo4j/issues/6979", "gitStatsSummary": {"insertions": 24, "gitFilesChange": 1, "lines": 30, "deletions": 6}, "numCommits": 1, "commits": {"f139458aa952c17a71080c29beb2ba05ed6616b7": {"commitUser": "Mats-SX", "commitGHEventType": "closed"}}, "ttf": 69.00027777777778, "user": "rsk700", "changesInPackagesGIT": ["community/cypher/frontend-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "In some cases min/max refuses to work with string values\n\n**Neo4j Version:** 2.3.1/2.3.3 \n### Steps to reproduce\n\n```\nunwind(['a', 'b']) as v return max(v)\n\nType mismatch: expected Float or Integer but was String (line 1, column 37 (offset: 36))\n\"unwind(['a', 'b']) as v return max(v)\"\n```\n\nwhile it works with node collection property:\n\n```\ncreate (n:somenode{v: ['a', 'b']}) with n unwind(n.v) as v return max(v)\n\nmax(v)\nb\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Neo4j 2.3.3: min/max doesn't work with strings in one edge case", "statsSkippedReason": "", "closed": "2016-06-28 10:04:29", "commitsDetails": [{"commitUser": "Mats-SX", "commitDateTime": "2016-06-23 11:28:36", "commitHash": "f139458aa952c17a71080c29beb2ba05ed6616b7", "commitParents": ["64d2a8db23b13045d2191dc32910ffbc558f190b"], "commitGHEventType": "closed", "nameRev": "f139458aa952c17a71080c29beb2ba05ed6616b7 tags/3.1.0-M05^2~44^2~1", "commitGitStats": [{"insertions": 13, "lines": 14, "filePath": "community/cypher/cypher-compiler-3.0/src/test/scala/org/neo4j/cypher/internal/compiler/v3_0/pipes/aggregation/MaxFunctionTest.scala", "deletions": 1}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/AggregationAcceptanceTest.scala", "deletions": 0}, {"insertions": 24, "lines": 30, "filePath": "community/cypher/frontend-3.0/src/main/scala/org/neo4j/cypher/internal/frontend/v3_0/ast/functions/Max.scala", "deletions": 6}], "commitSpoonAstDiffStats": [], "commitMessage": "Make `max()` work on strings properly\n\nFixes #6979\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-06-16 14:09:28"}], "created": "2016-04-19 14:15:48"}, {"labels": ["3.0", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6969", "title": "[3.0-RC1][Procedure] Write only procedures need a RETURN clause if called twice", "closed": "2016-04-19 09:12:58", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2016-04-18 21:05:09", "user": "ikwattro", "body": "**Neo4j Version:** 3.0-RC1\n### Steps to reproduce\n\n``` java\npublic class TestProcedure {\n\n    @Context\n    public GraphDatabaseService db;\n\n    @Procedure\n    @PerformsWrites\n    public void createNode() {\n        db.createNode();\n    }\n\n}\n```\n\n``` java\n@Test\n    public void testCreateNodeProcTwice() {\n        try (Transaction tx = getDatabase().beginTx()) {\n            getDatabase().execute(\n                    \"CALL generate.createNode() \" +\n                    \"CALL generate.createNode() \"\n            );\n            tx.success();\n        }\n    }\n```\n### Expected behavior\n\nTransaction success\n### Actual behavior\n\n```\norg.neo4j.graphdb.QueryExecutionException: Query cannot conclude with CALL (must be RETURN or an update clause) (line 1, column 28 (offset: 27))\n\"CALL generate.createNode() CALL generate.createNode() \"\n                            ^\n\n    at org.neo4j.kernel.impl.query.QueryExecutionKernelException.asUserException(QueryExecutionKernelException.java:35)\n    at org.neo4j.kernel.impl.factory.ClassicCoreSPI.executeQuery(ClassicCoreSPI.java:81)\n    at org.neo4j.kernel.impl.factory.GraphDatabaseFacade.execute(GraphDatabaseFacade.java:357)\n    at org.neo4j.kernel.impl.factory.GraphDatabaseFacade.execute(GraphDatabaseFacade.java:347)\n```\n"}, {"labels": ["2.3", "browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/6961", "title": "Long datatype property values displayed incorrectly in browser", "closed": "2016-04-22 13:34:55", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2016-04-17 13:38:02", "user": "eliorar", "body": "I discovered that when saving long numbers in property e.g. 708663653625634816, the value displayed in browser is incorrect, in this case, the browser displays the property as 7086636536256348**00**.\nThe problem exists only on browser (and its exports), while using the API the data retrieved correctly.\n\n**Neo4j Version:** 2.3.2 Enterprise\n**Operating System:** Ubuntu 12.04.5 LTS\n**API:** Browser, Firefox 45.0.2 / Chrome  49.0.2623.112\n### Steps to reproduce\n1. Insert new node with property, pid: 708663653625634816, `create (n:Person {pid:708663653625634816})`\n2. Match the node with query on browser, `match (n:Person {pid:708663653625634816}) return n`\n3. Review the property value - displayed 708663653625634800 instead of 708663653625634816\n   ![capture](https://cloud.githubusercontent.com/assets/18514119/14587378/b3eb5eb0-04ba-11e6-856b-ed8b4aa54172.PNG)\n### Expected behavior\n\nThe displayed property value should be the same as the value in DB.\n### Actual behavior\n\nThe displayed property value differs than the value in DB (somewhat rounded).\n"}, {"labels": ["3.0", "bolt server", "bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/6959", "title": "[3.0-RC1][Bolt] Wrong marker header returned for all types when value is between 2^15 and (2^16)-1", "closed": "2018-10-18 09:20:35", "commitsDetails": [], "commits": {}, "ttf": 915.0002777777778, "created": "2016-04-15 19:39:12", "user": "ikwattro", "body": "When a node has more than 32767 properties, the map marker header `0xda` is returned instead of `0xd9`.\n\nHow to reproduce ?\n\nThis is a bit low level, I found this because I do a check between the header and the map size produced in my php driver. I did the following step to prove it from Java side : \n- in the [unpackMapHeader()](https://github.com/neo4j/neo4j-java-driver/blob/1.1/driver/src/main/java/org/neo4j/driver/internal/packstream/PackStream.java#L474) method from the `Packstream` class in the `neo4j-java-driver`, output to the console the marker header received.\n- create an integration test creating and returning a node with 32768 properties.\n- Check the console and it will output it has received a `MAP32` header.\n\n```\npublic long unpackMapHeader() throws IOException\n        {\n            final byte markerByte = in.readByte();\n            final byte markerHighNibble = (byte) (markerByte & 0xF0);\n            final byte markerLowNibble = (byte) (markerByte & 0x0F);\n\n            if ( markerHighNibble == TINY_MAP ) { return markerLowNibble; }\n            switch(markerByte)\n            {\n            case MAP_8: return unpackUINT8();\n            case MAP_16:\n                System.out.println(\"MAP16\");\n                return unpackUINT16();\n            case MAP_32:\n                System.out.println(\"MAP32\");\n                return unpackUINT32();\n            default: throw new Unexpected( \"Expected a map, but got: \" + toHexString( markerByte ));\n            }\n        }\n```\n\n```\n@Test\n    public void testShouldReturnNodeWithHighNumberOfProps() {\n        session.run(\"MATCH (n) DETACH DELETE n\");\n        HashMap<String, Object> params = new HashMap<>();\n        HashMap<String, Object> props = new HashMap<>();\n        for (int i = 0; i < 32770; ++ i) {\n            props.put(\"key\" + i, i);\n        }\n        params.put(\"props\", props);\n        session.run(\"CREATE (n) SET n += {props} RETURN n\", params);\n    }\n```\n\n```\nStarting Neo4j.\nStarted neo4j (pid 5397). By default, it is available at http://localhost:7474/\nThere may be a short delay until the server is ready.\nSee /Users/ikwattro/dev/bugs/neo4j-java-driver/target/neo4j/3.1.0-NIGHTLY/logs/neo4j.log for current status.\nMAP32\nStopping Neo4j.. stopped\n```\n\nI have actually a branch with the steps in my fork of the neo4j-java-driver  : \n\nhttps://github.com/ikwattro/neo4j-java-driver/tree/map16\n\n/cc @nigelsmall \n"}, {"labels": ["2.3", "bug", "changelog", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6956", "title": "FOREACH DELETE query is broken on v2.3.3", "closed": "2016-04-18 13:43:27", "commitsDetails": [], "commits": {}, "ttf": 2.000277777777778, "created": "2016-04-15 16:51:33", "user": "s101d1", "body": "I just upgraded neo4j from v2.3.1 to v2.3.3, I found out this query doesn't work anymore:\n\n```\nmatch (a:Person {id: \"1\"})-[r:ACTED_IN]->(m:Movie)\nwith (case when a.id = \"1\" then [r] else [] end) as rr\nforeach (r in rr | delete r);\n```\n\nI got error:\n`MatchError: Any (of class org.neo4j.cypher.internal.frontend.v2_3.symbols.AnyType$$anon$1)`\n\nNote: the node data doesn't need to be exist to produce the error.\n\nIt seems same thing happened too with neo4j v2.2.x: https://github.com/neo4j/neo4j/issues/6876\n"}, {"labels": ["3.0", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6947", "title": "[3.0-RC1] YIELD value identifier not unbound after WITH", "closed": "2016-06-16 09:49:15", "commitsDetails": [], "commits": {}, "ttf": 61.000277777777775, "created": "2016-04-15 11:49:23", "user": "ikwattro", "body": "Hi guys,\n\n```\nCALL db.labels() YIELD label\nWITH collect(label) as lbls\nCALL db.labels() YIELD label\nRETURN lbls, collect(label) AS lbls2\n```\n\nTrigger : `An unexpected failure occurred, see details in the database logs, reference number 5449a3b4-e5fd-4619-88e4-a073a16f880d.`\n\nHowever if you alias the second YIELD, it works as exepcted : \n\n```\nCALL db.labels() YIELD label\nWITH collect(label) as lbls\nCALL db.labels() YIELD label as lbl\nRETURN lbls, collect(lbl) AS lbls2\n```\n\nDatabase logs : \n\n```\n2016-04-15 11:48:13.408+0000 ERROR [o.n.b.v.r.i.ErrorReporter] Client triggered an unexpected error: Unexpected error during late semantic checking: Unknown procedure output: `  label@23`. See debug.log for more details.\n2016-04-15 11:48:13.408+0000 ERROR [o.n.b.v.r.i.ErrorReporter] org.neo4j.kernel.impl.query.QueryExecutionKernelException: Unexpected error during late semantic checking: Unknown procedure output: `  label@23`\n    at org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:69)\n    at org.neo4j.bolt.v1.runtime.internal.CypherStatementRunner.run(CypherStatementRunner.java:69)\n    at org.neo4j.bolt.v1.runtime.internal.StandardStateMachineSPI.run(StandardStateMachineSPI.java:110)\n    at org.neo4j.bolt.v1.runtime.internal.SessionStateMachine$State$2.runStatement(SessionStateMachine.java:122)\n    at org.neo4j.bolt.v1.runtime.internal.SessionStateMachine.run(SessionStateMachine.java:653)\n    at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorkerFacade.lambda$run$3(SessionWorkerFacade.java:68)\n    at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.execute(SessionWorker.java:116)\n    at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.executeBatch(SessionWorker.java:102)\n    at org.neo4j.bolt.v1.runtime.internal.concurrent.SessionWorker.run(SessionWorker.java:82)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.neo4j.cypher.InternalException: Unexpected error during late semantic checking: Unknown procedure output: `  label@23`\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_0$.internalException(CompatibilityFor3_0.scala:79)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_0$.internalException(CompatibilityFor3_0.scala:61)\n    at org.neo4j.cypher.internal.frontend.v3_0.InternalException.mapToPublic(CypherException.scala:70)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_0$.runSafely(CompatibilityFor3_0.scala:122)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$$anon$2.plan(CompatibilityFor3_0.scala:169)\n    at org.neo4j.cypher.internal.ExecutionEngine.org$neo4j$cypher$internal$ExecutionEngine$$producePlan$1(ExecutionEngine.scala:161)\n    at org.neo4j.cypher.internal.ExecutionEngine$$anonfun$liftedTree1$1$1.apply(ExecutionEngine.scala:164)\n    at org.neo4j.cypher.internal.ExecutionEngine$$anonfun$liftedTree1$1$1.apply(ExecutionEngine.scala:164)\n    at org.neo4j.cypher.internal.compiler.v3_0.QueryCache$$anonfun$getOrElseUpdate$1$$anonfun$apply$1.apply(CacheAccessor.scala:36)\n    at org.neo4j.cypher.internal.compiler.v3_0.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:57)\n    at org.neo4j.cypher.internal.compiler.v3_0.LRUCache.getOrElseUpdate(LRUCache.scala:34)\n    at org.neo4j.cypher.internal.compiler.v3_0.LRUCache.apply(LRUCache.scala:64)\n    at org.neo4j.cypher.internal.compiler.v3_0.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:55)\n    at org.neo4j.cypher.internal.compiler.v3_0.QueryCache$$anonfun$getOrElseUpdate$1.apply(CacheAccessor.scala:34)\n    at scala.collection.Iterator$$anon$9.next(Iterator.scala:162)\n    at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n    at scala.collection.Iterator$$anon$12.next(Iterator.scala:444)\n    at org.neo4j.cypher.internal.compiler.v3_0.QueryCache.getOrElseUpdate(CacheAccessor.scala:46)\n    at org.neo4j.cypher.internal.ExecutionEngine.liftedTree1$1(ExecutionEngine.scala:164)\n    at org.neo4j.cypher.internal.ExecutionEngine.planQuery(ExecutionEngine.scala:150)\n    at org.neo4j.cypher.internal.ExecutionEngine.execute(ExecutionEngine.scala:110)\n    at org.neo4j.cypher.internal.javacompat.ExecutionEngine.executeQuery(ExecutionEngine.java:65)\n    ... 9 more\nCaused by: org.neo4j.cypher.internal.frontend.v3_0.InternalException: Unexpected error during late semantic checking: Unknown procedure output: `  label@23`\n    at org.neo4j.cypher.internal.compiler.v3_0.planner.CostBasedExecutablePlanBuilder$$anonfun$2.apply(CostBasedExecutablePlanBuilder.scala:124)\n    at org.neo4j.cypher.internal.compiler.v3_0.planner.CostBasedExecutablePlanBuilder$$anonfun$2.apply(CostBasedExecutablePlanBuilder.scala:124)\n    at org.neo4j.cypher.internal.compiler.v3_0.SemanticChecker$$anonfun$check$1.apply(SemanticChecker.scala:35)\n    at org.neo4j.cypher.internal.compiler.v3_0.SemanticChecker$$anonfun$check$1.apply(SemanticChecker.scala:35)\n    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:234)\n    at scala.collection.Iterator$class.foreach(Iterator.scala:893)\n    at scala.collection.AbstractIterator.foreach(Iterator.scala:1336)\n    at scala.collection.IterableLike$class.foreach(IterableLike.scala:72)\n    at scala.collection.AbstractIterable.foreach(Iterable.scala:54)\n    at scala.collection.TraversableLike$class.map(TraversableLike.scala:234)\n    at scala.collection.AbstractTraversable.map(Traversable.scala:104)\n    at org.neo4j.cypher.internal.compiler.v3_0.SemanticChecker.check(SemanticChecker.scala:35)\n    at org.neo4j.cypher.internal.compiler.v3_0.planner.CostBasedExecutablePlanBuilder$.rewriteStatement(CostBasedExecutablePlanBuilder.scala:124)\n    at org.neo4j.cypher.internal.compiler.v3_0.planner.CostBasedExecutablePlanBuilder.producePlan(CostBasedExecutablePlanBuilder.scala:56)\n    at org.neo4j.cypher.internal.compiler.v3_0.executionplan.procs.DelegatingProcedureExecutablePlanBuilder.producePlan(DelegatingProcedureExecutablePlanBuilder.scala:98)\n    at org.neo4j.cypher.internal.compiler.v3_0.executionplan.FallbackBuilder$class.producePlan(SilentFallbackPlanBuilder.scala:38)\n    at org.neo4j.cypher.internal.compiler.v3_0.executionplan.SilentFallbackPlanBuilder.producePlan(SilentFallbackPlanBuilder.scala:61)\n    at org.neo4j.cypher.internal.compiler.v3_0.executionplan.ExecutionPlanBuilder.build(ExecutionPlanBuilder.scala:106)\n    at org.neo4j.cypher.internal.compiler.v3_0.CypherCompiler$$anonfun$5.apply(CypherCompiler.scala:166)\n    at org.neo4j.cypher.internal.compiler.v3_0.CypherCompiler$$anonfun$5.apply(CypherCompiler.scala:166)\n    at org.neo4j.cypher.internal.compiler.v3_0.QueryCache$$anonfun$getOrElseUpdate$1$$anonfun$apply$1.apply(CacheAccessor.scala:36)\n    at org.neo4j.cypher.internal.compiler.v3_0.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:57)\n    at org.neo4j.cypher.internal.compiler.v3_0.LRUCache.getOrElseUpdate(LRUCache.scala:34)\n    at org.neo4j.cypher.internal.compiler.v3_0.LRUCache.apply(LRUCache.scala:64)\n    at org.neo4j.cypher.internal.compiler.v3_0.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:55)\n    at org.neo4j.cypher.internal.compiler.v3_0.QueryCache$$anonfun$getOrElseUpdate$1.apply(CacheAccessor.scala:34)\n    at scala.collection.Iterator$$anon$9.next(Iterator.scala:162)\n    at scala.collection.Iterator$$anon$12.nextCur(Iterator.scala:434)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:440)\n    at scala.collection.Iterator$$anon$12.next(Iterator.scala:444)\n    at org.neo4j.cypher.internal.compiler.v3_0.QueryCache.getOrElseUpdate(CacheAccessor.scala:46)\n    at org.neo4j.cypher.internal.compiler.v3_0.CypherCompiler.planPreparedQuery(CypherCompiler.scala:164)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$$anon$2$$anonfun$plan$1.apply(CompatibilityFor3_0.scala:172)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor3_0$$anon$2$$anonfun$plan$1.apply(CompatibilityFor3_0.scala:169)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor3_0$.runSafely(CompatibilityFor3_0.scala:117)\n    ... 28 more\n```\n"}, {"labels": ["2.3", "bug", "operability", "team-packaging"], "url": "https://github.com/neo4j/neo4j/issues/6941", "title": "server don't start on Win7 with Roaming profile.", "closed": "2018-11-07 16:37:16", "commitsDetails": [], "commits": {}, "ttf": 937.0002777777778, "created": "2016-04-14 14:26:50", "user": "sergzin", "body": "- Neo4j version: 2.3.3\n- Operating system: Windows 7\n- Expected behavior: After installation on Windows7 Neo4j server starts when pressing button \"start\"\n- Actual behavior: Neo4j server doesn't start.\n\nAlert popup contains the following message.\n\nStarting Neo4j failed: Component 'org.neo4j.server.database.LifecycleManagingDatabase@4dfab464' was successfully initialized, but failed to start. Please see attached cause exception.\n\n`neo4j.properties` located in the following folder. \n\\fileserver\\HQHome$\\username\\Documents\\Neo4j\\default.graphdb\\neo4j.properties\n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6926", "title": "Constraint failing to constrain on MERGE causing   More than one item in org.neo4j.helpers.collection.IteratorUtil", "closed": "2016-06-22 13:32:46", "commitsDetails": [], "commits": {}, "ttf": 70.00027777777778, "created": "2016-04-13 07:57:52", "user": "codewithcheese", "body": "Hi\n\nI am regularly using MERGE to apply data onto an existing graph. Today I am encountering a new error on a previous working MERGE. I believe this to be a bug.\n\nI am receiving error \"More than one item in org.neo4j.helpers.collection.IteratorUtil$12@44c217b1, first:55110598, second:55114825\" when trying to merge.\n\nThere is a constraint ON :Impression(hash)    ONLINE (for uniqueness constraint) \n\nTrying a MERGE as simple as \"MERGE (a:Impression {hash:'e612b20ac8dc47b1b08e1fbc67b5a3a2'}) ON CREATE SET a:Test ON MATCH SET a:Test\" Causes the issue.\n\nRunning \"MATCH (a:Impression {hash:'e612b20ac8dc47b1b08e1fbc67b5a3a2'}) RETURN a\" now returns 22 nodes. \n\nRunning 2.3.2 ENTERPRISE\n\nUbuntu 14.04\n\nUsing Cypher, testing in Neo4j browser\n\nMy database is 500GB, I could provide ssh access to a copy of it, if need be.\n\nThank for your help.\n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6918", "title": "Neo4j 2.3.3 bug : unable to distinct on null", "closed": "2016-06-16 10:35:44", "commitsDetails": [], "commits": {}, "ttf": 64.00027777777778, "created": "2016-04-12 12:02:39", "user": "agjini", "body": "Neo4j 2.3.3 seems to introduce a bug on distinct() operator on null values. The query works in 2.3.2.\n\nExample :\n\nMATCH (n:Node)\nOPTIONAL MATCH (n)-->(n2:Node2)\nRETURN n, collect(distinct(n2))\n\nWhen the n2 doesn't match and returns null column, the query execution crash on server with a NullPointerException : \n\n``` json\n{\n  \"results\": [],\n  \"errors\": [\n    {\n      \"code\": \"Neo.DatabaseError.Statement.ExecutionFailure\",\n      \"message\": null,\n      \"stackTrace\": \"java.lang.NullPointerException\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.NiceHasherValue.equals(NiceHasher.scala:70)\\n\\tat scala.collection.mutable.FlatHashTable$class.findElemImpl(FlatHashTable.scala:128)\\n\\tat scala.collection.mutable.FlatHashTable$class.containsElem(FlatHashTable.scala:121)\\n\\tat scala.collection.mutable.HashSet.containsElem(HashSet.scala:40)\\n\\tat scala.collection.mutable.HashSet.contains(HashSet.scala:57)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.aggregation.DistinctFunction.apply(DistinctFunction.scala:38)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.EagerAggregationPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(EagerAggregationPipe.scala:84)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.EagerAggregationPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(EagerAggregationPipe.scala:84)\\n\\tat scala.collection.immutable.List.foreach(List.scala:381)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.EagerAggregationPipe$$anonfun$internalCreateResults$1.apply(EagerAggregationPipe.scala:84)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.EagerAggregationPipe$$anonfun$internalCreateResults$1.apply(EagerAggregationPipe.scala:80)\\n\\tat scala.collection.Iterator$class.foreach(Iterator.scala:742)\\n\\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1194)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.EagerAggregationPipe.internalCreateResults(EagerAggregationPipe.scala:80)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.PipeWithSource.createResults(Pipe.scala:125)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.PipeWithSource.createResults(Pipe.scala:122)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:93)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:63)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:223)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:207)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anon$2.run(ExecutionPlanBuilder.scala:164)\\n\\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_3.scala:200)\\n\\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_3.scala:200)\\n\\tat org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.runSafely(CompatibilityFor2_3.scala:116)\\n\\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper.run(CompatibilityFor2_3.scala:199)\\n\\tat org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:27)\\n\\tat org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:120)\\n\\tat org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:114)\\n\\tat org.neo4j.cypher.javacompat.internal.ServerExecutionEngine.executeQuery(ServerExecutionEngine.java:62)\\n\\tat org.neo4j.server.rest.transactional.TransactionHandle.executeStatements(TransactionHandle.java:328)\\n\\tat org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:147)\\n\\tat org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:211)\\n\\tat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\\n\\tat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\\n\\tat com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\\n\\tat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\\n\\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:808)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\\n\\tat org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1127)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1061)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:497)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:257)\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:635)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:555)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\"\n    }\n  ]\n}\n```\n"}, {"labels": ["2.2", "bug", "changelog", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6876", "title": "[bug] [2.2.9] [FOREACH] Query broken since upgrade from 2.2.8", "closed": "2016-04-18 13:44:11", "commitsDetails": [], "commits": {}, "ttf": 11.000277777777777, "created": "2016-04-07 10:38:40", "user": "FelikZ", "body": "After upgrade from 2.2.8 to 2.2.9 one of my queries broken:\n- Neo4j version: 2.2.9\n- Operating system: Debian 8 (Docker)\n- API/Driver: Cypher\n### Steps to reproduce\n- Install neo4j 2.2.9 (I am using my own Dockerfile)\n\n``` Dockerfile\nFROM java:latest \n\nRUN wget -O - http://debian.neo4j.org/neotechnology.gpg.key | apt-key add - && \\\n    echo 'deb http://debian.neo4j.org/repo stable/' > /etc/apt/sources.list.d/neo4j.list && \\\n    apt-get update ; apt-get install neo4j=2.2.9 -y ; apt-get install bsdmainutils -y && \\\n    apt-get clean\n```\n- Run following query in neo4j-shell:\n\n``` bash\nMATCH (root:label1) WHERE root.uuid = '00002073-cc3b-4c44-bdcc-592926121bd1'\nWITH (root)\nMATCH (n:label1:field1)\nWHERE n.uuid = 'aaa508fe-00da-4c02-b8ca-b7a107f666a8'\nOPTIONAL MATCH (n)-[r]->()\nDELETE r WITH (root), (n)\nREMOVE n:field1\nREMOVE n.field2\nWITH (root), (n)\nOPTIONAL MATCH (n)<-[rloc:label3]-()\nFOREACH (r IN CASE WHEN rloc IS NOT NULL THEN [rloc] ELSE [] END | DELETE rloc )\nREMOVE n.`field3`\nREMOVE n.`field4`\nSET n.modified = 1460022087838\nSET root.modified = 1460022087838\nSET n:instance\nCREATE (n)-[:belongs_to]->(root)\nWITH (n), (root)\nOPTIONAL MATCH (c:instance)-[r2]->(n)\nFOREACH (r IN CASE WHEN r2 IS NOT NULL THEN [r2] ELSE [] END | DELETE r )\n```\n### Expected behavior\n\n``` bash\n+--------------------------------------------+\n| No data returned, and nothing was changed. |\n+--------------------------------------------+\n1050 ms\n```\n### Actual behavior\n\n``` bash\nMatchError: Any (of class org.neo4j.cypher.internal.compiler.v2_2.symbols.AnyType$$anon$1)\n```\n### Debug\n\nAfter a bit of investigation, I have found that problematic line is the last one:\n`FOREACH (r IN CASE WHEN r2 IS NOT NULL THEN [r2] ELSE [] END | DELETE r )`\n"}, {"labels": ["2.3", "bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/6839", "title": "Neo4j CE 2.3.3 \"TLS certificate error occurred...\" when switch to new empty folder.", "closed": "2018-11-07 16:35:53", "commitsDetails": [], "commits": {}, "ttf": 948.0002777777778, "created": "2016-04-02 19:51:55", "user": "ghost", "body": "\"TLS certificate error occurred, unable to start server: java.io.IOException:\nParse Generalized time, invalid format\" when switch to new empty folder.\n- Neo4j version: CE 2.3.3\n- OS: Windows 7 (64bit)\n- Java 8u77 (64bit)\n\nAttach image show the alert windows.\n![neo4j_2 3 3 tls error](https://cloud.githubusercontent.com/assets/5121989/14228600/0e15792a-f944-11e5-9e9a-d5131f3f0c01.jpg)\n### Steps to reproduce\n1. Start Neo4j from shortcuts\n2. Click 'Choose' and select empty folder for new 'Database Location'.\n3. Click 'Start' server., then alert show as attached image.\n   Note: no error when reproduce with Neo4j CE 2.3.2\n### Expected behavior\n\nThe server should create new database in empty folder and start server successfully.\n### Actual behavior\n\nFiles in folder after error.\nnewfolder/\n-- neo4j.properties\n-- dbms/\n---- ssl/\n-------- snakeoil.cert\n-------- snakeoil.key\n### Other question\n- Why is there 'jre' (version 1.7.0_80) folder in 'Neo4j CE 2.3.3' binary?\n  Neo4j CE 2.3.2 don't have this folder.\n"}, {"labels": ["bug", "cypher"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/6836", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"cf08d0108c65fb3e71592097fadea381f782b469": {"commitUser": "Mats-SX", "commitGHEventType": "referenced"}}, "ttf": 304.0002777777778, "user": "mcmccaleb", "changesInPackagesGIT": [], "body": "When attempting to set a property value to a two dimensional array or an array with multiple null values ([null,null]), an incorrect/unhelpful error is raised.\n\n**Neo4j Version:** enterprise-2.3.2\n**Operating System:** OSX 10.11.3\n**API:** Browser\n### Steps to reproduce\n1. Run query `MATCH (n) with n limit 1 set n.arrayProp = [['test'],['strings\u2019]]` \n2. Run query `MATCH (n) with n limit 1 set n.nullProp = [null,null]`\n### Expected behavior\n\nerror message should be `Property values can only be of primitive types or arrays thereof`\n### Actual behavior\n\nerror message is `Collections containing mixed types can not be stored in properties.`\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "Incorrect error message when creating 2-dimensional arrays", "statsSkippedReason": "", "closed": "2017-01-30 12:55:44", "commitsDetails": [{"commitUser": "Mats-SX", "commitDateTime": "2017-01-30 13:55:43", "commitHash": "cf08d0108c65fb3e71592097fadea381f782b469", "commitParents": ["a801b638d2fadf8e93fecda1221678a5a4f3dfae", "240169f4e8285466ee16ab05f362f1fe233ef3e4"], "commitGHEventType": "referenced", "nameRev": "cf08d0108c65fb3e71592097fadea381f782b469 tags/3.2.0-alpha04~49", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-3.2/src/main/scala/org/neo4j/cypher/internal/compiler/v3_2/helpers/CastSupport.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #8682 from jonasagx/3.2-fix-issue-6836\n\nFix issue #6836 about error message", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-01-30 13:55:43"}], "created": "2016-04-01 00:50:43"}, {"labels": ["3.0", "bolt server", "browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/6822", "title": "3.0.0-SNAPSHOT of Mar. 30, 2016 - browser UI fails to connect to websocket over LAN", "closed": "2016-04-22 12:40:27", "commitsDetails": [], "commits": {}, "ttf": 22.00027777777778, "created": "2016-03-31 00:45:30", "user": "astesin", "body": "![screenshot from 2016-03-31 03-21-22](https://cloud.githubusercontent.com/assets/7247555/14162273/27100894-f6f3-11e5-8153-7f237b3e02b0.png)\nBuilt 3.0.0-SNAPSHOT from sources as of Mar. 30, 2016, got .deb installer built Ok.\n\nInstalled it Ubuntu 15.10 laptop with GUI, http://localhost:7474 works fine.\n### Steps to reproduce\n\nCopied the same .deb file to an Ubuntu Server 15.10 and installed it, configured neo4j.conf parameters:\n- HTTP endpoint to listen at 0.0.0.0:7474\n- BOLT endpoint to listen at 0.0.0.0:7687\n\nFrom the same LAN segment in which server resides, pointed browser at http://servername.dom.ain:7474\n### Actual behavior\n\nHTML part of browser UI works, but it also wants to connect to ws://localhost:7687 (see screenshot) and browser fails. See screenshot.\n### Expected behavior\n\nUI respects configuration of BOLT listening address.\n### Attempted workaround \u21161 - failed\n\nIn neo4j.conf set\n- HTTP endpoint to listen at servername.dom.ain:7474\n- BOLT endpoint to listen at servername.dom.ain:7687\n\nResult: \"ERR: connection refused\" though neo4j.log tells me that HTTP interface started and available at http://servername.dom.ain:7474\n### Attempted workaround \u21162 - failed\n\nServer IP is 10.20.30.16, client box IP is 10.20.30.17 - in neo4j.conf I set server IP in numeric notation\n- HTTP endpoint to listen at 10.20.30.16:7474\n- BOLT endpoint to listen at 10.20.30.16:7687\n\nBrowser connects to HTTP UI endpoint but (similar to main case) the page tries to connect to ws://localhost:7687 instead of ws://10.20.30.16:7687 (effectively ignores config parameter).\n\nWBR,\nAndrii\n"}, {"labels": ["2.3", "bug", "desktop"], "url": "https://github.com/neo4j/neo4j/issues/6810", "title": "JVM tuning properties ignored on version 2.3.3 for mac", "closed": "2018-11-19 07:13:17", "commitsDetails": [], "commits": {}, "ttf": 964.0002777777778, "created": "2016-03-29 21:14:44", "user": "kepler16bv", "body": "This is my setting:\n- Neo4j version: 2.3.3 (EDIT: I also tried the latest 3.0.0-M05)\n- Operating system: osx 10.11.4\n- Macbook air with 8GB of RAM\n\nThrough the GUI, I press \"options\" and then under the section Java VM Tuning I press \"edit\" to edit the file /Users/user/Documents/Neo4j/.neo4j-community.vmoptions. In particular I add -Xmx4g and then I restart the application and press \"Start\". This creates a new database in the path that I specify.\n### Expected behavior\n\nThe JVM should get 4GB as maximum memory\n### Actual behavior\n\nThe JVM still gets the default value as maximum memory, which for my configuration is 1.78GB.\n\nAttached the messages.log file that clearly shows what I'm saying. This is a cut of the relevant part:\n\n2016-03-29 21:06:23.312+0000 INFO  [o.n.k.i.DiagnosticsManager] JVM memory information:\n2016-03-29 21:06:23.312+0000 INFO  [o.n.k.i.DiagnosticsManager] Free  memory: 74.25 MB\n2016-03-29 21:06:23.312+0000 INFO  [o.n.k.i.DiagnosticsManager] Total memory: 123.00 MB\n2016-03-29 21:06:23.312+0000 INFO  [o.n.k.i.DiagnosticsManager] Max   memory: 1.78 GB\n\n[messages.log.zip](https://github.com/neo4j/neo4j/files/194353/messages.log.zip)\n"}, {"labels": ["2.3", "bug", "changelog", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6809", "title": "ExecutionFailure involving OPTIONAL MATCH and COLLECT(DISTINCT)", "closed": "2016-03-31 10:15:27", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2016-03-29 17:10:23", "user": "cybersam", "body": "See [this SO question](http://stackoverflow.com/questions/36280389/why-does-distinct-within-collect-with-optional-match-lead-to-executionfailure/36290443#36290443) for a simple test case and a workaround. You have to first create an `(f:DOES_EXIST)` node to see the issue.\n\nThe ExecutionaFailuer also occurs if the `RETURN` clause is simply:\n\n```\nRETURN COLLECT(DISTINCT n.property)\n```\n"}, {"labels": ["2.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6787", "title": "Import via py2neo fails in 2.3.2 with `neostore.counts.db` getting unmapped", "closed": "2018-02-21 16:33:33", "commitsDetails": [], "commits": {}, "ttf": 698.0002777777778, "created": "2016-03-25 01:37:37", "user": "dhimmel", "body": "I am using py2neo 2.0.8 to import my network into neo4j 2.3.2. The network has ~50 thousand nodes and 3 million relationships. I am running into an intermittent error that `File has been unmapped` regarding `graph.db/neostore.counts.db.a`. The error happens in only ~20% of the imports. [Here is my notebook](https://github.com/dhimmel/integrate/blob/e5ebbec3a7b96cc05b7a01a8d5776d6d94ed192a/neo4j-import.ipynb) where I import 6 networks to 6 separate neo4j servers in parallel, with one import failing. The failure happens midway, so the final database is incomplete. Note that I specified `keep_logical_logs=false` in `neo4j.properties` to reduce space.\n\nI believe the `File has been unmapped` error must come from [this line](https://github.com/neo4j/neo4j/blob/6645e641527d32da1aefa61b80bee8c689a43b36/community/io/src/main/java/org/neo4j/io/pagecache/impl/muninn/MuninnPagedFile.java#L371) in `community/io/src/main/java/org/neo4j/io/pagecache/impl/muninn/MuninnPagedFile.java`.\n## Error in Python\n\nThe error that gets thrown in Python is:\n\n```\nFile has been unmapped: /home/dhimmels/Documents/serg/rephetio/construct/integrate/neo4j/neo4j-community-2.3.2_hetio-ind_perm-2/data/graph.db/neostore.counts.db.a\n```\n## `messages.log`\n\nThe first 3 lines in `messages.log` below are believed to be okay (making up the vast majority of the log). I believe the process starts to derail on line 4. The shutdown is called by my python script due to an error in the py2neo import. The last line before this shutdown registers in the log is `GC Monitor: Application threads blocked for 222ms.`.\n\n```\n2016-03-24 08:54:50.600+0000 INFO  [o.n.c.i.CypherCompiler] Discarded stale query from the query cache: Query(None,SingleQuery(List(Match(false,Pattern(List(EveryPath(NodePattern(Some(Identifier(n)),List(),None,false)))),List(),Some(Where(And(Equals(Property(Identifier(n),PropertyKeyName(identifier)),Parameter(V)),HasLabels(Identifier(n),List(LabelName(Disease))))))), Return(false,ReturnItems(false,List(AliasedReturnItem(Identifier(n),Identifier(n)), AliasedReturnItem(FunctionInvocation(FunctionName(labels),false,Vector(Identifier(n))),Identifier(labels(n))))),None,None,Some(Limit(SignedDecimalIntegerLiteral(1)))))))\n2016-03-24 08:54:50.656+0000 INFO  [o.n.c.i.ServerExecutionEngine] Discarded stale query from the query cache: CYPHER 2.3 MATCH (n:MolecularFunction {identifier:{V}}) RETURN n,labels(n) LIMIT 1\n2016-03-24 08:54:50.657+0000 INFO  [o.n.c.i.CypherCompiler] Discarded stale query from the query cache: Query(None,SingleQuery(List(Match(false,Pattern(List(EveryPath(NodePattern(Some(Identifier(n)),List(),None,false)))),List(),Some(Where(And(Equals(Property(Identifier(n),PropertyKeyName(identifier)),Parameter(V)),HasLabels(Identifier(n),List(LabelName(MolecularFunction))))))), Return(false,ReturnItems(false,List(AliasedReturnItem(Identifier(n),Identifier(n)), AliasedReturnItem(FunctionInvocation(FunctionName(labels),false,Vector(Identifier(n))),Identifier(labels(n))))),None,None,Some(Limit(SignedDecimalIntegerLiteral(1)))))))\n2016-03-24 08:54:51.093+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [2820]:  Starting check pointing...\n2016-03-24 08:54:51.093+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [2820]:  Starting store flush...\n2016-03-24 08:54:51.094+0000 INFO  [o.n.k.i.s.c.CountsTracker] About to rotate counts store at transaction 2820 to [/home/dhimmels/Documents/serg/rephetio/construct/integrate/neo4j/neo4j-community-2.3.2_hetio-ind_perm-2/data/graph.db/neostore.counts.db.b], from [/home/dhimmels/Documents/serg/rephetio/construct/integrate/neo4j/neo4j-community-2.3.2_hetio-ind_perm-2/data/graph.db/neostore.counts.db.a].\n2016-03-24 08:54:51.099+0000 INFO  [o.n.k.i.s.c.CountsTracker] Successfully rotated counts store at transaction 2820 to [/home/dhimmels/Documents/serg/rephetio/construct/integrate/neo4j/neo4j-community-2.3.2_hetio-ind_perm-2/data/graph.db/neostore.counts.db.b], from [/home/dhimmels/Documents/serg/rephetio/construct/integrate/neo4j/neo4j-community-2.3.2_hetio-ind_perm-2/data/graph.db/neostore.counts.db.a].\n2016-03-24 08:54:51.815+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [2820]:  Store flush completed\n2016-03-24 08:54:51.815+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [2820]:  Starting appending check point entry into the tx log...\n2016-03-24 08:54:52.041+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [2820]:  Appending check point entry into the tx log completed\n2016-03-24 08:54:52.041+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [2820]:  Check pointing completed\n2016-03-24 08:54:52.042+0000 INFO  [o.n.k.i.t.l.p.LogPruningImpl] Log Rotation [1]:  Starting log pruning.\n2016-03-24 08:54:52.042+0000 INFO  [o.n.k.i.t.l.p.LogPruningImpl] Log Rotation [1]:  Log pruning complete.\n2016-03-24 08:54:52.042+0000 WARN  [o.n.k.i.c.MonitorGc] GC Monitor: Application threads blocked for 222ms.\n2016-03-24 08:54:52.058+0000 INFO  [o.n.k.i.f.GraphDatabaseFacade] Shutdown started\n2016-03-24 08:54:52.060+0000 INFO  [o.n.k.i.f.CommunityFacadeFactory] Database is now unavailable\n2016-03-24 08:54:52.410+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by database shutdown [2820]:  Starting check pointing...\n2016-03-24 08:54:52.410+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by database shutdown [2820]:  Starting store flush...\n2016-03-24 08:54:53.106+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by database shutdown [2820]:  Store flush completed\n2016-03-24 08:54:53.106+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by database shutdown [2820]:  Starting appending check point entry into the tx log...\n2016-03-24 08:54:53.553+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by database shutdown [2820]:  Appending check point entry into the tx log completed\n2016-03-24 08:54:53.553+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by database shutdown [2820]:  Check pointing completed\n2016-03-24 08:54:53.555+0000 INFO  [o.n.k.i.t.l.p.LogPruningImpl] Log Rotation [1]:  Starting log pruning.\n2016-03-24 08:54:53.555+0000 INFO  [o.n.k.i.t.l.p.LogPruningImpl] Log Rotation [1]:  Log pruning complete.\n2016-03-24 08:54:55.496+0000 INFO  [o.n.k.NeoStoreDataSource] NeoStores closed\n2016-03-24 08:54:55.719+0000 INFO  [o.n.k.i.DiagnosticsManager] --- STOPPING diagnostics START ---\n2016-03-24 08:54:55.720+0000 INFO  [o.n.k.i.DiagnosticsManager] --- STOPPING diagnostics END ---\n```\n## Conclusion\n\n`neostore.counts.db.a` is mentioned in `messages.log` and in the python error. I am thinking the log pruning or cycling leads to a failure in a py2neo command/query/transaction. Unfortunately, I'm not exactly sure where to put error handling wrt py2neo to try again in these instances.\n\nI suspect using the default setting for `keep_logical_logs` may resolve this issue. I can always delete logs after shutting down the server, if I need to reduce the database size. I will try this next as well as upgrading to 2.3.3. Not sure if anyone will be able to help, but thought I'd share in case this can lead to a bugfix.\n"}, {"labels": ["2.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6761", "title": "Neo.DatabaseError.Statement.ExecutionFailure On 2.3.2 Enterprise", "closed": "2018-02-21 16:47:36", "commitsDetails": [], "commits": {}, "ttf": 700.0002777777778, "created": "2016-03-22 21:03:09", "user": "leunamnauj", "body": "Executing the example query: \"MATCH (n) RETURN n LIMIT 25\" I got the following:\n**\"Property record with id 6 not in use\"**\nand in the bottom: **Neo.DatabaseError.Statement.ExecutionFailure**\n\nAccording to my research this kind of issue got fixed on 2.3.1.\nI'm not quite sure whats going on here, if it is a coding problem or a Neo4j cluster problem (this is a 3 nodes cluster)\n\nAny advice or guidance?\n\nThanks in advance\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/6749", "title": " Beta version of Neo4j 3.0", "closed": "2018-11-07 16:34:13", "commitsDetails": [], "commits": {}, "ttf": 961.0002777777778, "created": "2016-03-21 05:17:11", "user": "nagashi", "body": "I\u2019m running the beta version of Neo4j 3.0 in the windows 10 environment, 64 bit.  I still have version 2.3.2 installed.  When running 3.0 and then shutting down, I notice a process is still running.  What brought it to my attention is the fact that unless I kill it in task manager, I\u2019m unable to execute 3.0 again.  I tested it with 2.3.2 and after closing down, no process remains.  \n"}, {"labels": ["3.0", "bug", "cypher"], "filteredCommits": ["ecb5c7774aaa5002ddaa4d2c07d9276a89dd2098"], "url": "https://github.com/neo4j/neo4j/issues/6716", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 5, "deletions": 2}, "numCommits": 1, "commits": {"ecb5c7774aaa5002ddaa4d2c07d9276a89dd2098": {"commitUser": "benbc", "commitGHEventType": "closed"}}, "ttf": 1.0002777777777778, "user": "brandonburkett", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal"], "body": "Running different cased cypher queries gets different query optimizations and causing (in our case) a 68ms query to be 12s.  \n\n**Neo4j version:** 3.0.0 M05\n**Operating system:** OSX 10.11.3\n**API/Driver:** Cypher through neo web browser\n### Steps to reproduce\n1. Have a large set a data for multiple labels (around 14 million rows or so for `:_IMAGE` in this case)\n2. Run `match (i:_IMAGE) return count(i)` all lowercase and it is consistently fast. Running `explain` shows that `NodeCountFromCountStore` is being used.\n3. Run `MATCH (i:_IMAGE) RETURN COUNT(i)` all uppercase and it is consistently slow. Running `explain` shows that `NodeByLabelScan` is being used.\n4. Run `MaTcH (i:_IMAGE) ReTuRn CoUnT(i)` with mixed case and it is consistently slow. Running `explain` shows that `NodeByLabelScan` is being used.\n### Expected behavior\n\nCypher to \u2764\ufe0f queries, regardless of case.\n### Actual behavior\n\nCypher \u2764\ufe0f lowercase?  Cypher \ud83d\udc94 UPPERCASE and MiXeD CaSe?\n\nWe also poked around and saw some stuff in the test suite that just uses lowercase.\n\n![lowercase](https://cloud.githubusercontent.com/assets/1877193/13797460/c0cd521c-eadb-11e5-8022-6b8d05bbdbc3.png)\n![caps](https://cloud.githubusercontent.com/assets/1877193/13797462/c2d6b80a-eadb-11e5-96f7-d9f9af74917d.png)\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "3.0.0 M05 - Cypher UPPERCASE versus lowercase has different query optimizations", "statsSkippedReason": "", "closed": "2016-03-17 14:28:28", "commitsDetails": [{"commitUser": "benbc", "commitDateTime": "2016-03-16 08:17:13", "commitHash": "ecb5c7774aaa5002ddaa4d2c07d9276a89dd2098", "commitParents": ["ccad9afcbb4decefb2e1f03332c1fb8d81921668"], "commitGHEventType": "closed", "nameRev": "ecb5c7774aaa5002ddaa4d2c07d9276a89dd2098 tags/3.0.0-RC1~110^2~2", "commitGitStats": [{"insertions": 13, "lines": 13, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/MatchAggregationsBackedByCountStoreAcceptanceTest.scala", "deletions": 0}, {"insertions": 3, "lines": 5, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/steps/countStorePlanner.scala", "deletions": 2}], "commitSpoonAstDiffStats": [], "commitMessage": "Use count store for all capitalization of `count(*)`\n\nSince we allow `COUNT(*)`, `cOuNt(*)` etc we should also be able to use\nthe count store for all these variants.\n\nfixes #6716\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-03-16 08:17:13"}], "created": "2016-03-15 23:31:04"}, {"labels": ["bug", "cypher", "docs"], "filteredCommits": ["8cc66347e0936cd9e19d9cbe323496b3b4e91a7e"], "url": "https://github.com/neo4j/neo4j/issues/6714", "gitStatsSummary": {"insertions": 5, "gitFilesChange": 1, "lines": 10, "deletions": 5}, "numCommits": 1, "commits": {"8cc66347e0936cd9e19d9cbe323496b3b4e91a7e": {"commitUser": "benbc", "commitGHEventType": "closed"}}, "ttf": 1.0002777777777778, "user": "pmbaumgartner", "changesInPackagesGIT": ["manual/cypher/cypher-docs/src/docs/graphgists/intro/getting-the-results-you-want.adoc"], "body": "Found on: \n**The Neo4j Manual v2.3.2\n3.4. Getting the Results You Want\nCollecting Aggregation**\nhttp://neo4j.com/docs/stable/cypherdoc-getting-the-results-you-want.html#_collecting_aggregation\n\nFirst sentence:\n\n> The most helpful aggregation function is collect, which, as the name says, collects all aggregated values into a real array or list. This comes very handy in many situations as you don\u2019t **loose** the detail information while aggregating.\n\nCorrect to _lose_ instead of _loose_. http://grammarist.com/usage/loose-lose/\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Collecting Aggregation Documentation - Grammar", "statsSkippedReason": "", "closed": "2016-03-17 14:28:28", "commitsDetails": [{"commitUser": "benbc", "commitDateTime": "2016-03-16 14:19:04", "commitHash": "8cc66347e0936cd9e19d9cbe323496b3b4e91a7e", "commitParents": ["cc84feb393bb0055ea566dcb4e97e9d548f5f78f"], "commitGHEventType": "closed", "nameRev": "8cc66347e0936cd9e19d9cbe323496b3b4e91a7e tags/3.0.0-RC1~109^2", "commitGitStats": [{"insertions": 5, "lines": 10, "filePath": "manual/cypher/cypher-docs/src/docs/graphgists/intro/getting-the-results-you-want.adoc", "deletions": 5}], "commitSpoonAstDiffStats": [], "commitMessage": "Correct spelling and improve grammar\n\nFixes #6714 - 'lose' misspelled.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-03-16 14:18:31"}], "created": "2016-03-15 17:48:09"}, {"labels": ["2.2", "2.3", "3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6685", "title": "Database crashes and becomes unrecoverable when indexing an object whose toString() returns null", "closed": "2016-11-28 17:53:33", "commitsDetails": [], "commits": {}, "ttf": 261.0002777777778, "created": "2016-03-12 13:31:20", "user": "amorgner", "body": "When using the embedded API, you can crash any database and make it unrecoverable by just indexing an object whose toString() method returns null.\n\nTested with Neo4j versions 2.3.2 and 2.2.8 on Ubuntu Linux 15.10.\n### Steps to reproduce\n- Create a new database service\n- Create a node\n- Create an instance of an object whose toString() method returns null\n- Index the object as an attribute of the node\n\nIt seems that the invalid value is written to the tx log but committing it to the store is prevented by an NPE thrown in Lucene.\n\nI created a simple maven project to reproduce the issue:\n\nhttps://github.com/amorgner/neo4j-lucene-npe-test\n\nMain class with all the code needed to reproduce: https://github.com/amorgner/neo4j-lucene-npe-test/blob/master/src/main/java/org/structr/test/lucene/npe/Main.java\n### Expected behavior\n\nFor the indexing action:\n- As the value to be indexed can't be converted to a valid String value, it should be ignored and the transaction should be rolled back to avoid appending invalid data to the tx log.\n\nFor the database:\n- Don't crash\n\nFor the crashed database:\n- Be recoverable\n### Actual behavior\n- Database crashes with the following stack trace:\n  \n  ```\n  [WARNING] \n  java.lang.reflect.InvocationTargetException\n      at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n      at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n      at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n      at java.lang.reflect.Method.invoke(Method.java:498)\n      at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:293)\n      at java.lang.Thread.run(Thread.java:745)\n  Caused by: org.neo4j.graphdb.TransactionFailureException: Transaction was marked as successful, but unable to commit transaction so rolled back.\n      at org.neo4j.kernel.TopLevelTransaction.close(TopLevelTransaction.java:121)\n      at org.structr.test.lucene.npe.Main.main(Main.java:27)\n      ... 6 more\n  Caused by: org.neo4j.kernel.api.exceptions.TransactionFailureException: Could not apply the transaction to the store after written to log\n      at org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.applyToStore(TransactionRepresentationCommitProcess.java:105)\n      at org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.commit(TransactionRepresentationCommitProcess.java:58)\n      at org.neo4j.kernel.impl.api.KernelTransactionImplementation.commit(KernelTransactionImplementation.java:565)\n      at org.neo4j.kernel.impl.api.KernelTransactionImplementation.close(KernelTransactionImplementation.java:458)\n      at org.neo4j.kernel.TopLevelTransaction.close(TopLevelTransaction.java:97)\n      ... 7 more\n  Caused by: java.lang.NullPointerException\n      at org.neo4j.index.impl.lucene.IndexType.instantiateField(IndexType.java:318)\n      at org.neo4j.index.impl.lucene.IndexType$1.addToDocument(IndexType.java:63)\n      at org.neo4j.index.impl.lucene.LuceneCommandApplier.visitIndexAddNodeCommand(LuceneCommandApplier.java:65)\n      at org.neo4j.kernel.impl.api.LegacyIndexApplier.visitIndexAddNodeCommand(LegacyIndexApplier.java:137)\n      at org.neo4j.kernel.impl.api.CommandApplierFacade.visitIndexAddNodeCommand(CommandApplierFacade.java:232)\n      at org.neo4j.kernel.impl.index.IndexCommand$AddNodeCommand.handle(IndexCommand.java:150)\n      at org.neo4j.kernel.impl.api.CommandApplierFacade.visit(CommandApplierFacade.java:82)\n      at org.neo4j.kernel.impl.api.CommandApplierFacade.visit(CommandApplierFacade.java:45)\n      at org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation.accept(PhysicalTransactionRepresentation.java:69)\n      at org.neo4j.kernel.impl.api.TransactionRepresentationStoreApplier.apply(TransactionRepresentationStoreApplier.java:111)\n      at org.neo4j.kernel.impl.api.TransactionRepresentationCommitProcess.applyToStore(TransactionRepresentationCommitProcess.java:100)\n      ... 11 more\n  ```\n\nWhen trying to start the database with Neo4j server, it shuts down immediately with the following output in `messages.log`:\n\n```\n2016-03-12 13:04:58.138+0000 INFO  [o.n.k.a.i.i.LuceneLabelScanStore] No lucene scan store index found, this might just be first use. Preparing to rebuild.\n2016-03-12 13:04:58.213+0000 INFO  [o.n.k.NeoStoreDataSource] Recovery required from position LogPosition{logVersion=0, byteOffset=16}\n2016-03-12 13:04:58.252+0000 ERROR [o.n.k.KernelHealth] setting TM not OK. Kernel has encountered some problem, please perform necessary action (tx recovery/restart)\njava.lang.NullPointerException\n    at org.neo4j.index.impl.lucene.IndexType.instantiateField(IndexType.java:318)\n    at org.neo4j.index.impl.lucene.IndexType$1.addToDocument(IndexType.java:63)\n    at org.neo4j.index.impl.lucene.LuceneCommandApplier.visitIndexAddNodeCommand(LuceneCommandApplier.java:65)\n    at org.neo4j.kernel.impl.api.LegacyIndexApplier.visitIndexAddNodeCommand(LegacyIndexApplier.java:137)\n    at org.neo4j.kernel.impl.api.CommandApplierFacade.visitIndexAddNodeCommand(CommandApplierFacade.java:232)\n    at org.neo4j.kernel.impl.index.IndexCommand$AddNodeCommand.handle(IndexCommand.java:150)\n    at org.neo4j.kernel.impl.api.CommandApplierFacade.visit(CommandApplierFacade.java:82)\n    at org.neo4j.kernel.impl.api.CommandApplierFacade.visit(CommandApplierFacade.java:45)\n    at org.neo4j.kernel.impl.transaction.log.PhysicalTransactionRepresentation.accept(PhysicalTransactionRepresentation.java:69)\n    at org.neo4j.kernel.impl.api.TransactionRepresentationStoreApplier.apply(TransactionRepresentationStoreApplier.java:111)\n    at org.neo4j.kernel.impl.transaction.state.RecoveryVisitor.visit(RecoveryVisitor.java:73)\n    at org.neo4j.kernel.impl.transaction.state.RecoveryVisitor.visit(RecoveryVisitor.java:37)\n    at org.neo4j.kernel.impl.transaction.log.LogFileRecoverer.visit(LogFileRecoverer.java:71)\n    at org.neo4j.kernel.impl.transaction.log.LogFileRecoverer.visit(LogFileRecoverer.java:33)\n    at org.neo4j.kernel.recovery.Recovery.init(Recovery.java:86)\n    at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:424)\n    at org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:66)\n    at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:102)\n    at org.neo4j.kernel.NeoStoreDataSource.start(NeoStoreDataSource.java:600)\n    at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\n    at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\n    at org.neo4j.kernel.impl.transaction.state.DataSourceManager.start(DataSourceManager.java:112)\n    at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\n    at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\n    at org.neo4j.kernel.impl.factory.GraphDatabaseFacadeFactory.newFacade(GraphDatabaseFacadeFactory.java:139)\n    at org.neo4j.kernel.impl.enterprise.EnterpriseFacadeFactory.newFacade(EnterpriseFacadeFactory.java:40)\n    at org.neo4j.graphdb.EnterpriseGraphDatabase.<init>(EnterpriseGraphDatabase.java:57)\n    at org.neo4j.server.enterprise.EnterpriseNeoServer$2.newGraphDatabase(EnterpriseNeoServer.java:67)\n    at org.neo4j.server.database.LifecycleManagingDatabase.start(LifecycleManagingDatabase.java:95)\n    at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:452)\n    at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:111)\n    at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:194)\n    at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:97)\n    at org.neo4j.server.CommunityBootstrapper.start(CommunityBootstrapper.java:48)\n    at org.neo4j.server.enterprise.EnterpriseBootstrapper.main(EnterpriseBootstrapper.java:32)\n2016-03-12 13:04:58.327+0000 WARN  [o.n.k.NeoStoreDataSource] Exception occurred while starting the datasource. Attempting to close things down.\n2016-03-12 13:04:58.338+0000 INFO  [o.n.k.i.s.c.CountsTracker] About to rotate counts store at transaction 3 to [/tmp/graph.db.1457787795863/neostore.counts.db.b], from [/tmp/graph.db.1457787795863/neostore.counts.db.a].\n2016-03-12 13:04:58.342+0000 INFO  [o.n.k.i.s.c.CountsTracker] Successfully rotated counts store at transaction 3 to [/tmp/graph.db.1457787795863/neostore.counts.db.b], from [/tmp/graph.db.1457787795863/neostore.counts.db.a].\n2016-03-12 13:04:58.352+0000 INFO  [o.n.k.i.DiagnosticsManager] --- STOPPING diagnostics START ---\n2016-03-12 13:04:58.352+0000 INFO  [o.n.k.i.DiagnosticsManager] --- STOPPING diagnostics END ---\n2016-03-12 13:04:58.352+0000 INFO  [o.n.g.EnterpriseGraphDatabase] Shutdown started\n```\n"}, {"labels": ["2.2", "2.3", "bug"], "filteredCommits": ["f44287b7a495e7eebc71863a05453d7bfd7285bf"], "url": "https://github.com/neo4j/neo4j/issues/6654", "gitStatsSummary": {"insertions": 20, "gitFilesChange": 2, "lines": 25, "deletions": 5}, "numCommits": 1, "commits": {"f44287b7a495e7eebc71863a05453d7bfd7285bf": {"commitUser": "tinwelint", "commitGHEventType": "closed"}}, "ttf": 12.000277777777777, "user": "tkroman", "changesInPackagesSPOON": ["org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.growTable(org.neo4j.collection.primitive.hopscotch.Table,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$Monitor,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$HashFunction,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$ResizeMonitor)", "org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.put(org.neo4j.collection.primitive.hopscotch.Table,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$Monitor,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$HashFunction,long,java.lang.Object,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$ResizeMonitor)", "org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.getLastTable()", "org.neo4j.collection.primitive.hopscotch.AbstractHopScotchCollection.getLastTable()"], "changesInPackagesGIT": ["community/primitive-collections/src/main/java/org/neo4j/collection/primitive/hopscotch"], "body": "As discussed in #6559, I'm separating two different issues. This one is about neo4j hanging while attempting to acquire lock for some write operation (e.g. deletion) in case there's an index on some property of the target entity.\n\nI created a repository containing this bug's reproduction scenario: https://github.com/tkroman/demo (run `Demo.main()`).\n\nLine of interest is https://github.com/tkroman/demo/blob/master/src/main/java/Demo.java#L44. \n\nIf it's commented, everything works fine. \nIf it's uncommented and un-comment line 43, everything works as well. \nAlso, if an `ORDER BY` clause is presented in `DETACH DELETE`, everything works fine.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 4, "UPD": 2, "TOT": 11, "DEL": 1, "INS": 6, "spoonFilesChanged": 2, "MOV": 2}, "title": "Recursive table growing in HopScotchHashingAlgorithm may lead to some table entries getting lost.", "statsSkippedReason": "", "closed": "2016-03-22 15:36:49", "commitsDetails": [{"commitUser": "tinwelint", "commitDateTime": "2016-03-22 13:44:11", "commitHash": "f44287b7a495e7eebc71863a05453d7bfd7285bf", "commitParents": ["d4187298f74a835315180b2ca3a716a6caddea0c"], "commitGHEventType": "closed", "nameRev": "f44287b7a495e7eebc71863a05453d7bfd7285bf tags/2.3.3^2^2", "commitGitStats": [{"insertions": 61, "lines": 61, "filePath": "community/primitive-collections/src/test/java/org/neo4j/collection/primitive/hopscotch/PrimitiveLongMapTest.java", "deletions": 0}, {"insertions": 14, "lines": 19, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/primitive/hopscotch/HopScotchHashingAlgorithm.java", "deletions": 5}, {"insertions": 6, "lines": 6, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/primitive/hopscotch/AbstractHopScotchCollection.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.getLastTable()"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.put(org.neo4j.collection.primitive.hopscotch.Table,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$Monitor,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$HashFunction,long,java.lang.Object,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$ResizeMonitor)"}, {"UPD": 2, "TOT": 7, "DEL": 1, "INS": 3, "MOV": 1, "spoonMethodName": "org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm.growTable(org.neo4j.collection.primitive.hopscotch.Table,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$Monitor,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$HashFunction,org.neo4j.collection.primitive.hopscotch.HopScotchHashingAlgorithm$ResizeMonitor)"}], "spoonFilePath": "HopScotchHashingAlgorithm.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.collection.primitive.hopscotch.AbstractHopScotchCollection.getLastTable()"}], "spoonFilePath": "AbstractHopScotchCollection.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.collection.primitive.hopscotch.PrimitiveLongMapTest.recursivePutGrowInterleavingShouldNotDropOriginalValues()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.collection.primitive.hopscotch.PrimitiveLongMapTest.recursivePutGrowInterleavingShouldNotDropOriginalValuesEvenWhenFirstGrowAddsMoreValuesAfterSecondGrow()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.collection.primitive.hopscotch.PrimitiveLongMapTest.verifyMapRetainsAllEntries(java.util.List)"}], "spoonFilePath": "PrimitiveLongMapTest.java"}], "commitMessage": "Fix a very rare recursive-table-growth problem in primitive collections\n\nThis fixes #6654\n\nDuring growing the table underlying a collection, the process of populating the new table could decide that the table needs to grow once more.\nIf this happened, the outer most table grows (with the smallest table) would end up installing its table last, overwriting the work of any growth caused by table population.\nThis would result in the table suddenly forgetting an arbitrary number of its entries.\nSpecifically, this could manifest as very rare permanent self-deadlocks in the Forseti (Enterprise Edition) lock manager.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-03-22 00:07:54"}], "created": "2016-03-09 19:21:00"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6615", "title": "very slow initial run of query (unless explain is used first)", "closed": "2016-03-18 08:49:48", "commitsDetails": [], "commits": {}, "ttf": 11.000277777777777, "created": "2016-03-07 08:48:49", "user": "charlieschwabacher", "body": "- Neo4j version: 2.3.0\n- Operating system: osx 10.11.3\n- API/Driver: cypher\n### Steps to reproduce\n\nstarting from an empty DB, run:\n\n```\nCREATE (:aNode)-[:aEdge]->(:bNode)-[:bEdge]->(:cNode)-[:cEdge]->(:dNode)-[:dEdge]->(:eNode)-[:eEdge]->(:fNode)-[:fEdge]->(:gNode)-[:gEdge]->(:hNode)-[:hEdge]->(:iNode)-[:iEdge]->(:jNode)-[:jEdge]->(:kNode)-[:kEdge]->(:lNode)-[:lEdge]->(:mNode)-[:mEdge]->(:zNode)\n```\n\nand then run:\n\n```\nMATCH (a:aNode)-[:aEdge]->(b:bNode)-[:bEdge]->(c:cNode)-[:cEdge]->(d:dNode)-[:dEdge]->(e:eNode)-[:eEdge]->(f:fNode)-[:fEdge]->(g:gNode)-[:gEdge]->(h:hNode)-[:hEdge]->(i:iNode)-[:iEdge]->(j:jNode)-[:jEdge]->(k:kNode)-[:kEdge]->(l:lNode)-[:lEdge]->(m:mNode)-[:mEdge]->(z:zNode) RETURN a,b,c,d,e,f,g,h,i,j,k,l,m,z\n```\n\nOR\n\n```\nMATCH (a:aNode) MATCH (a)-[:aEdge]->(b:bNode) MATCH (b)-[:bEdge]->(c:cNode) MATCH (c)-[:cEdge]->(d:dNode) MATCH (d)-[:dEdge]->(e:eNode) MATCH (e)-[:eEdge]->(f:fNode) MATCH (f)-[:fEdge]->(g:gNode) MATCH (g)-[:gEdge]->(h:hNode) MATCH (h)-[:hEdge]->(i:iNode) MATCH (i)-[:iEdge]->(j:jNode) MATCH (j)-[:jEdge]->(k:kNode) MATCH (k)-[:kEdge]->(l:lNode) MATCH (l)-[:lEdge]->(m:mNode) MATCH (m)-[:mEdge]->(z:zNode) RETURN a,b,c,d,e,f,g,h,i,j,k,l,m,z\n```\n### Expected behavior\n\nI would expect these queries to run quickly w/ only 14 nodes and 13 relationships in the db.\n### Actual behavior\n\nAs I add nodes to my chain, this runs exponentially slower - taking about 70s w/ nodes `a` through `l`, and 370s w/ nodes `a` through `m` on a newish macbook pro.  I haven't waited for anything beyond that to complete.\n\nAfter the very slow initial run, the same query will complete in around 10ms.  Interestingly, if I first run an `explain` on the query, the slow initial run can be entirely avoided.\n\nI see the same behavior whether I run from the neo4j browser, or using cypher through node-neo4j.\n"}, {"labels": ["bug", "operability"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/6613", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"4a86b597fdca3967e4fb3e4812f1ed602958daa8": {"commitUser": "spacecowboy", "commitGHEventType": "closed"}}, "ttf": 65.00027777777778, "user": "astesin", "changesInPackagesGIT": [], "body": "- Neo4j version: 3.0.0-SNAPSHOT as of Mar. 6, 2016 built locally\n- Operating system: Ubuntu 15.10 Server\n### Steps to reproduce\n\nInstall neo4j from the .deb package\n### Expected behavior\n\nMax. number of open files for neo4j user is correctly set in the system, in conformance with the documentation and we see it: for root it's 1024, for neo4j it's 60000\n\n```\nroot@n:/etc/neo4j# ulimit -n\n1024\nroot@n:/etc/neo4j# sudo -s -u neo4j\nneo4j@n:/etc/neo4j$ ulimit -n\n60000\nneo4j@n:/etc/neo4j$ exit\nroot@n:/etc/neo4j# grep neo4j /etc/security/limits.conf \nneo4j       soft    nofile      60000\nneo4j       hard    nofile      60000\nroot@n:/etc/neo4j# grep pam_limits /etc/pam.d/su\nsession    required   pam_limits.so\nroot@n:/etc/neo4j# grep pam_limits /etc/pam.d/sudo\nsession    required   pam_limits.so\nroot@n:/etc/neo4j#\n```\n### Actual behavior\n\n```\nroot@n:/etc/neo4j# date ; service neo4j-service restart\nMon Mar  7 03:18:00 EET 2016\nroot@n:/etc/neo4j# tail -10 /var/log/syslog\nMar  7 03:18:00 n systemd[1]: Stopping LSB: Neo4j Graph Database server...\nMar  7 03:18:02 n neo4j-service[8597]: Stopping Neo4j.. stopped\nMar  7 03:18:02 n systemd[1]: Stopped LSB: Neo4j Graph Database server.\nMar  7 03:18:02 n systemd[1]: Starting LSB: Neo4j Graph Database server...\nMar  7 03:18:02 n neo4j-service[8660]: Starting Neo4j.\nMar  7 03:18:02 n neo4j-service[8660]: WARNING: Max 1024 open files allowed, minimum of 40000 recommended. See the Neo4j manual.\nMar  7 03:18:02 n neo4j-service[8660]: Started at http://0.0.0.0:7474 (pid 8712).\nMar  7 03:18:02 n neo4j-service[8660]: There may be a short delay until the server is ready.\nMar  7 03:18:02 n neo4j-service[8660]: See /var/lib/neo4j/data/log/neo4j.log for current status.\nMar  7 03:18:02 n systemd[1]: Started LSB: Neo4j Graph Database server.\nroot@n:/etc/neo4j# \n```\n\nAs we see, /etc/init.d/neo4j-service actually ignores the ulimit -n 60000 setting.\n\nWBR, Andrii\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": ".deb installer fails to set up ulimit -n correctly", "statsSkippedReason": "", "closed": "2016-05-11 08:31:47", "commitsDetails": [{"commitUser": "spacecowboy", "commitDateTime": "2016-05-09 17:02:55", "commitHash": "4a86b597fdca3967e4fb3e4812f1ed602958daa8", "commitParents": ["e91b121ac836d9f251069372ae5553dadfb63dc7"], "commitGHEventType": "closed", "nameRev": "4a86b597fdca3967e4fb3e4812f1ed602958daa8 tags/2.3.4^2~1^2", "commitGitStats": [{"insertions": 8, "lines": 8, "filePath": "packaging/installer-linux/installer-debian/src/main/resources/common/neo4j-service", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Set the nofile ulimit if the appropriate environment variable is set.\n\nFixes #6613\nFixes #5849\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-09 17:01:43"}], "created": "2016-03-07 01:21:21"}, {"labels": ["bug", "cypher", "docs"], "filteredCommits": ["4cc74ea45d7001f8e774a32008daf0a8957d89f5"], "url": "https://github.com/neo4j/neo4j/issues/6587", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 64, "deletions": 63}, "numCommits": 1, "commits": {"4cc74ea45d7001f8e774a32008daf0a8957d89f5": {"commitUser": "benbc", "commitGHEventType": "closed"}}, "ttf": 14.000277777777777, "user": "cybersam", "changesInPackagesGIT": ["manual/cypher/cypher-docs/src/docs/dev/ql/functions/index.asciidoc"], "body": "I believe that the Cypher function rand() returns a random number that is >= 0.0 and < 1.0.\n\nHowever, the documentation ([here](http://neo4j.com/docs/stable/query-functions-mathematical.html#functions-rand) and [here](http://neo4j.com/docs/stable/cypher-refcard/)) incorrectly state that it returns a random number **between** 0 and 1, which would exclude the possibility of 0.0 as a result.\n\nProposal: To correct this error, and to also make it crystal clear that the upper bound does exclude 1.0, change the documentation to state that the result is \">= 0.0 and < 1.0\".\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "rand() function's result range is incorrectly documented", "statsSkippedReason": "", "closed": "2016-03-17 14:28:28", "commitsDetails": [{"commitUser": "benbc", "commitDateTime": "2016-03-16 14:14:52", "commitHash": "4cc74ea45d7001f8e774a32008daf0a8957d89f5", "commitParents": ["d90f5d141afdf033043c5f32ed19c59eef672779"], "commitGHEventType": "closed", "nameRev": "4cc74ea45d7001f8e774a32008daf0a8957d89f5 tags/3.0.0-RC1~109^2~5", "commitGitStats": [{"insertions": 2, "lines": 294, "filePath": "manual/cypher/cypher-docs/src/test/scala/org/neo4j/cypher/docgen/FunctionsTest.scala", "deletions": 292}, {"insertions": 15, "lines": 16, "filePath": "manual/cypher/cypher-docs/src/test/scala/org/neo4j/cypher/docgen/tooling/Document.scala", "deletions": 1}, {"insertions": 3, "lines": 4, "filePath": "manual/cypher/refcard-tests/src/test/scala/org/neo4j/cypher/docgen/refcard/MathematicalFunctionsTest.scala", "deletions": 1}, {"insertions": 1, "lines": 64, "filePath": "manual/cypher/cypher-docs/src/docs/dev/ql/functions/index.asciidoc", "deletions": 63}, {"insertions": 2, "lines": 2, "filePath": "manual/cypher/cypher-docs/src/test/scala/org/neo4j/cypher/docgen/tooling/DocBuilder.scala", "deletions": 0}, {"insertions": 298, "lines": 298, "filePath": "manual/cypher/cypher-docs/src/test/scala/org/neo4j/cypher/docgen/MathFunctionsTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Move math functions to new doc structure\n\nFixes #6587 - `rand()` documentation unclear.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-03-07 11:10:36"}], "created": "2016-03-03 01:16:15"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/6578", "title": "Internal error on simple paths algorithm request", "closed": "2018-11-09 16:35:24", "commitsDetails": [], "commits": {}, "ttf": 981.0002777777778, "created": "2016-03-02 16:58:26", "user": "fcofdez", "body": "It seems that there's some bug related with [shortestpath](http://neo4j.com/docs/2.2.8/rest-api-graph-algos.html#rest-api-execute-a-dijkstra-algorithm-and-get-a-single-path) algorithms. It returns 500 error even on simple scenarios as the one I'll describe later.\n- Neo4j version: 2.2.5, 2.2.8 2.3.2\n- Operating system: Linux\n- API/Driver: Curl\n### Steps to reproduce\n\n``` bash\n#!/bin/bash\nVERSION=2.3.2\nwget http://dist.neo4j.org/neo4j-community-${VERSION}-unix.tar.gz\ntar xzf neo4j-community-${VERSION}-unix.tar.gz\ncd neo4j-community-${VERSION}/\nsed -i -e 's/dbms.security.auth_enabled=true/dbms.security.auth_enabled=false/g' conf/neo4j-server.properties\n./bin/neo4j start\ncurl -H \"Content-Type: application/json\" -XPOST http://localhost:7474/db/data/transaction -d \"{\\\"statements\\\": [{\\\"statement\\\": \\\"CREATE (a:Movie {name: 'test'}) CREATE(b: Movie {name: 'test2'}) CREATE (a)-[:TEST]->(b);\\\"}]}\" | jq .commit | xargs curl -XPOST\n\n# To check that nodes exists\ncurl http://localhost:7474/db/data/node/0 | jq .\ncurl http://localhost:7474/db/data/node/1 | jq .\n\ncurl -v http://localhost:7474/db/data/node/0/path -d '{\n  \"to\" : \"http://localhost:7474/db/data/node/1/path\",\n  \"max_depth\" : 1,\n  \"relationships\" : {\n    \"type\" : \"to\",\n    \"direction\" : \"out\"\n  },\n  \"algorithm\" : \"shortestPath\"\n}'\n```\n### Expected behavior\n\nReturn a path\n### Actual behavior\n\nIt returns \n\n```\n< HTTP/1.1 500 Server Error\n< Date: Wed, 02 Mar 2016 16:47:50 GMT\n< Content-Type: text/html; charset=ISO-8859-1\n< Cache-Control: must-revalidate,no-cache,no-store\n< Content-Length: 0\n< Connection: close\n< Server: Jetty(9.2.4.v20141103)\n<\n* Closing connection 0\n```\n\nBacktrace\n\n```\n2016-03-02 17:43:33.088+0100 ERROR The RuntimeException could not be mapped to a response, re-throwing to\njava.lang.ArrayIndexOutOfBoundsException: 1\n        at org.neo4j.server.rest.repr.formats.UrlFormFormat.readMap(UrlFormFormat.java:99)\n        at org.neo4j.server.rest.web.RestfulGraphDatabase.singlePath(RestfulGraphDatabase.java:1703)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:498)\n        at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60\n        at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$Respons\n        at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(Resource\n        at org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalReques\n        at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.jav\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.jav\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.jav\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\n        at org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.Server.handle(Server.java:497)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\n        at java.lang.Thread.run(Thread.java:745)\n```\n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/6575", "title": "JsonGenerationException", "closed": "2018-11-09 16:30:31", "commitsDetails": [], "commits": {}, "ttf": 982.0002777777778, "created": "2016-03-02 15:16:17", "user": "rotten", "body": "I'm observing this exception in the console log [Community Edition 2.3.2] every now and then.  I'm not certain what is tripping it.  I occasionally have a query \"never return\",  and I suspect those queries are what causes it. (the subsequent 2 lines from the console.log indicate that may be the case)  While I'm trying to reproduce this exception consistently, I thought I'd report the issue just in case the stack trace by itself is enough of a hint to someone somewhere.  Maybe this is expected behavior?\n\nThere is nothing unusual in the messages.log from around that time.  (default logging settings)\n\n```\n2016-03-01 14:37:53.507+0000 ERROR Failed to generate JSON output. Current context not an ARRAY but OBJECT\norg.codehaus.jackson.JsonGenerationException: Current context not an ARRAY but OBJECT\n    at org.codehaus.jackson.impl.JsonGeneratorBase._reportError(JsonGeneratorBase.java:480)\n    at org.codehaus.jackson.impl.Utf8Generator.writeEndArray(Utf8Generator.java:354)\n    at org.neo4j.server.rest.transactional.RestRepresentationWriter.write(RestRepresentationWriter.java:63)\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer$1.visit(ExecutionResultSerializer.java:444)\n    at org.neo4j.cypher.internal.compiler.v2_3.helpers.iteratorToVisitable$.accept(iteratorToVisitable.scala:36)\n    at org.neo4j.cypher.internal.compiler.v2_3.PipeExecutionResult.accept(PipeExecutionResult.scala:114)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor2_3$$anonfun$accept$1.apply$mcV$sp(CompatibilityFor2_3.scala:336)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor2_3$$anonfun$accept$1.apply(CompatibilityFor2_3.scala:335)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor2_3$$anonfun$accept$1.apply(CompatibilityFor2_3.scala:335)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.runSafely(CompatibilityFor2_3.scala:116)\n    at org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor2_3.accept(CompatibilityFor2_3.scala:335)\n    at org.neo4j.cypher.javacompat.ExecutionResult.accept(ExecutionResult.java:309)\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.writeRows(ExecutionResultSerializer.java:436)\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.statementResult(ExecutionResultSerializer.java:110)\n    at org.neo4j.server.rest.transactional.TransactionHandle.executeStatements(TransactionHandle.java:330)\n    at org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:147)\n    at org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:211)\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\n    at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\n    at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\n    at org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\n    at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n    at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n    at org.eclipse.jetty.server.Server.handle(Server.java:497)\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\n    at java.lang.Thread.run(Thread.java:745)\n2016-03-01 14:37:53.517+0000 ERROR Unable to reply to request, because the client has closed the connection (Broken pipe).\n2016-03-01 14:37:53.518+0000 ERROR Unable to reply to request, because the client has closed the connection (Broken pipe).\n```\n\nmessages.log from the same time window:\n\n```\n2016-03-01 14:34:29.945+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [250859908]:  Starting check pointing...\n2016-03-01 14:34:29.946+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [250859908]:  Starting store flush...\n2016-03-01 14:34:29.946+0000 INFO  [o.n.k.i.s.c.CountsTracker] About to rotate counts store at transaction 250859908 to [/home/neo4j/neo4j-community-2.3.2/data/graph.db/neostore.counts.db.a], from [/home/neo4j/neo4j-community-2.3.2/data/graph.db/neostore.counts.db.b].\n2016-03-01 14:34:29.951+0000 INFO  [o.n.k.i.s.c.CountsTracker] Successfully rotated counts store at transaction 250859908 to [/home/neo4j/neo4j-community-2.3.2/data/graph.db/neostore.counts.db.a], from [/home/neo4j/neo4j-community-2.3.2/data/graph.db/neostore.counts.db.b].\n2016-03-01 14:34:35.782+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [250859908]:  Store flush completed\n2016-03-01 14:34:35.782+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [250859908]:  Starting appending check point entry into the tx log...\n2016-03-01 14:34:35.783+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [250859908]:  Appending check point entry into the tx log completed\n2016-03-01 14:34:35.783+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [250859908]:  Check pointing completed\n2016-03-01 14:34:35.783+0000 INFO  [o.n.k.i.t.l.p.LogPruningImpl] Log Rotation [1983]:  Starting log pruning.\n2016-03-01 14:34:35.783+0000 INFO  [o.n.k.i.t.l.p.LogPruningImpl] Log Rotation [1983]:  Log pruning complete.\n2016-03-01 14:40:35.790+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [250859909]:  Starting check pointing...\n2016-03-01 14:40:35.790+0000 INFO  [o.n.k.i.t.l.c.CheckPointerImpl] Check Pointing triggered by scheduler for time threshold [250859909]:  Starting store flush...\n2016-03-01 14:40:35.791+0000 INFO  [o.n.k.i.s.c.CountsTracker] About to rotate counts store at transaction 250859909 to [/home/neo4j/neo4j-community-2.3.2/data/graph.db/neostore.counts.db.b], from [/home/neo4j/neo4j-community-2.3.2/data/graph.db/neostore.counts.db.a].\n2016-03-01 14:40:35.792+0000 INFO  [o.n.k.i.s.c.CountsTracker] Successfully rotated counts store at transaction 250859909 to [/home/neo4j/neo4j-community-2.3.2/data/graph.db/neostore.counts.db.b], from [/home/neo4j/neo4j-community-2.3.2/data/graph.db/neostore.counts.db.a].\n```\n"}, {"labels": ["2.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6559", "title": "Integer overflow in ForsetiClient's heldCount leads to infinite loop during acquireExclusive()", "closed": "2016-03-09 20:10:18", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2016-03-01 10:51:09", "user": "tkroman", "body": "- Neo4j version: 2.3.2\n- Operating system: Ubuntu 14.04 x64\n- API/Driver: Java API 2.3.2\n\nTL;DR: here's a reproduction:\n\n```\n@Test\npublic void shouldAcquireExclusiveLock() throws Exception {\n    Locks locks = dbRule\n            .getGraphDatabaseAPI()\n            .getDependencyResolver()\n            .resolveDependency(Locks.class);\n\n    Client client = locks.newClient();\n\n    for (int i = 0; i < Integer.MAX_VALUE; i++) {\n        client.acquireExclusive(ResourceTypes.RELATIONSHIP, 0L);\n    } // heldCount = 7fffffff\n    client.acquireExclusive(ResourceTypes.RELATIONSHIP, 0L); // heldCount = 80000000\n    for (int i = 0; i < Integer.MAX_VALUE; i++) {\n        client.acquireExclusive(ResourceTypes.RELATIONSHIP, 0L);\n    } // heldCount = -1 now\n\n    // and now WHOOOOPS... BAM!\n    client.acquireExclusive(ResourceTypes.RELATIONSHIP, 0L);\n}\n```\n\nWhen heldCount reaches -1 (after overflow, from below), we are forever stuck in this loop: https://github.com/neo4j/neo4j/blob/a58e9fd60c2c4aab06d4c2cba4e729f3e0c8a82d/enterprise/kernel/src/main/java/org/neo4j/kernel/impl/enterprise/lock/forseti/ForsetiClient.java#L269\n"}, {"labels": ["2.3", "bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/6502", "title": "Cannot start Neo4j Server via Powershell", "closed": "2017-06-19 17:20:46", "commitsDetails": [], "commits": {}, "ttf": 481.0002777777778, "created": "2016-02-23 19:09:44", "user": "brunotomas", "body": "I'm having problems to start Neo4j server through PowerShell.\n\n```\nPS C:\\Users\\brunotomas> 'E:\\neo4j' | Start-Neo4jServer -Console -Wait\nException in thread \"main\" java.lang.UnsatisfiedLinkError: Can't obtain class com.sun.jna.CallbackReference.AttachOptions\n        at com.sun.jna.Native.initIDs(Native Method)\n        at com.sun.jna.Native.<clinit>(Native.java:115)\n        at com.sun.jna.Structure.<clinit>(Structure.java:132)\n        at org.rzo.yajsw.WindowsXPProcess.start(WindowsXPProcess.java:1474)\n        at org.neo4j.wrapper.ServerProcessConsole.doStart(ServerProcessConsole.java:45)\n        at org.neo4j.wrapper.ServerProcess.<init>(ServerProcess.java:115)\n        at org.neo4j.wrapper.ServerProcessConsole.<init>(ServerProcessConsole.java:31)\n        at org.neo4j.wrapper.NeoServiceWrapper.launchAsConsoleApp(NeoServiceWrapper.java:48)\n        at org.neo4j.wrapper.NeoServiceWrapper.main(NeoServiceWrapper.java:35)\n1\n```\n\nAny ideas of what is going on?\n"}, {"labels": ["3.0", "bolt server", "bug"], "url": "https://github.com/neo4j/neo4j/issues/6497", "title": "3.0.0 M04 - ResultCursor.size() throws NullPointerException when cursor is empty", "closed": "2016-04-18 08:08:47", "commitsDetails": [], "commits": {}, "ttf": 54.000277777777775, "created": "2016-02-23 14:12:03", "user": "hectorlf", "body": "Neo4j Community 3.0.0 M04.\n\nCalling size() on an empty ResultCursor throws a cryptic NullPointerException:\n\n`Exception in thread \"main\" java.lang.NullPointerException\n        at org.neo4j.driver.internal.InternalResultCursor.size(InternalResultCursor.java:234)\n        at test.Neo4jTest.main(Neo4jTest.java:24)`\n\nSee the attached test case (run with \"gradlew run\"). Did not happen in M03.\n\n[resultcursor-size-test.zip](https://github.com/neo4j/neo4j/files/142696/resultcursor-size-test.zip)\n"}, {"labels": ["2.3", "3.0", "bug", "changelog", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6488", "title": "Cypher based SET of property using a long value loses precision", "closed": "2016-04-11 09:26:56", "commitsDetails": [], "commits": {}, "ttf": 48.000277777777775, "created": "2016-02-22 19:52:13", "user": "SteveDraper", "body": "In the Neo browser UI (same applies to other vehicles, but this is illustrative) try the following:\n\ncreate (t:Test {along:92233720368547750}) return t\n\nThe value specified is several digits short of the max value for a 64-bit long, but the resulting (returned) node's property value differs from that set.\n\nHypothetically I **think** that the value is being converted to a floating point value then back to a long at some point, with loss of precision as a result.\n\nI am running 2.3.1on a Mac\n"}, {"labels": ["3.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6447", "title": "3.0.0 write.lock file not being removed after neo4j stops", "closed": "2016-02-18 16:26:19", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2016-02-16 18:17:55", "user": "tasmar", "body": "I have been testing out the 3.0.0-M03 docker image and noticed that when I mount /data to a volume on my host, then stop the container, write.lock is not removed, along with other files not being touched/cleaned up, which is preventing me from running a batch script to populate some data.\n\nTo recreate the issue I went through these steps.\n1. Pull the image `docker pull neo4j/neo4j:3.0.0-M03`\n2. Create a directory on the host that will be a mount for the data `mkdir /home/neo4j-data`\n3. Start a new container the mounts to this directory `docker run -d --name neo4j-test -p 7474:7474 -v /home/neo4j:/data neo4j/neo4j:3.0.0-M03`\n4. Navigate to the write.lock file `/data/databases/graph.db/schema/label/lucene/labelStore/1/write.lock`\n5. Stop the container `docker stop neo4j-test`\n6. The write.lock file should be gone now but it is not.  \n\nI tested this in neo4j:2.3.0 and the write.lock file does get removed after a docker stop, granted the directory locations are different from v2.3 to v3.0.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/6402", "title": "Browser: GRASS can get rearranged if the Label hierarchy is changed after style changes have been made in the Browser", "closed": "2016-04-22 13:55:46", "commitsDetails": [], "commits": {}, "ttf": 71.00027777777778, "created": "2016-02-10 19:17:13", "user": "Joshfindit", "body": "To reproduce:\n1. Start with each node type having it's own label (3-4 is helpful).\n2. Populate the database and return the graph.\n3. Change the styles for each node.\n4. Dump the database.\n5. Change the nodes to be Subclasses. Add a root class.\n6. Populate the database and return the graph.\n7. Change the style for the root class. Notice that it's subclassed nodes have changed style.\n8. Change the style for the subclassed nodes: they are now overridden.\n\n[GRASS can get rearranged.example.md.txt](https://github.com/neo4j/neo4j/files/125367/GRASS.can.get.rearranged.example.md.txt)\n"}, {"labels": ["3.0", "bolt server", "bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/6373", "title": "Packaging Bug: 3.0 M03 Community Mac DMG does not enable Bolt", "closed": "2016-05-03 14:00:45", "commitsDetails": [], "commits": {}, "ttf": 87.00027777777778, "created": "2016-02-06 09:10:37", "user": "leehericks", "body": "There are no setting options for Bolt in this package and running the database does not open the appropriate ports.\n\nI installed the Nightly Enterprise tar package and everything runs as expected.\nI have not tried the Nightly Community tar package.\n"}, {"labels": ["2.3", "bug", "team-kernel"], "filteredCommits": ["559b00e493f0ed84c67ee063ceeb207a0c97d66c"], "url": "https://github.com/neo4j/neo4j/issues/6348", "gitStatsSummary": {"insertions": 41, "gitFilesChange": 4, "lines": 49, "deletions": 8}, "numCommits": 1, "commits": {"559b00e493f0ed84c67ee063ceeb207a0c97d66c": {"commitUser": "spacecowboy", "commitGHEventType": "closed"}}, "ttf": 21.00027777777778, "user": "tkroman", "changesInPackagesSPOON": ["org.neo4j.kernel.impl.util.CappedLogger.Filter.checkDuplicate(java.lang.String,java.lang.Throwable)", "org.neo4j.kernel.impl.util.CappedLogger.info(java.lang.String)", "org.neo4j.kernel.impl.util.CappedLogger.Filter.sameMsg(java.lang.Throwable,java.lang.Throwable)", "org.neo4j.kernel.impl.util.CappedLogger.warn(java.lang.String)", "org.neo4j.kernel.impl.util.CappedLogger.error(java.lang.String)", "org.neo4j.kernel.impl.store.MetaDataStore.closedTransactionIdIsOnParWithOpenedTransactionId()", "org.neo4j.kernel.impl.util.CappedLogger.debug(java.lang.String)", "org.neo4j.kernel.ha.transaction.TransactionPropagator.committed(long,int)", "org.neo4j.kernel.impl.util.CappedLogger.Filter.sameClass(java.lang.Throwable,java.lang.Throwable)", "org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context.LearnerContextImpl.notifyLearnMiss(org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId)"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/kernel/impl/store", "enterprise/ha/src/main/java/org/neo4j/kernel/ha/transaction", "community/kernel/src/main/java/org/neo4j/kernel/impl/util", "enterprise/cluster/src/main/java/org/neo4j/cluster/protocol/atomicbroadcast"], "body": "My slave instance is permanently stuck in a loop that looks like this:\n\n```\n2016-02-03 15:44:20.964+0000 DEBUG [o.n.c.p.a.m.LearnerState$2] [AsyncLog @ 2016-02-03 15:44:20.964+0000]  LearnerState: learner-[learnTimedout]->learner conversation-id:20/13#\n2016-02-03 15:44:20.964+0000 DEBUG [o.n.c.p.h.HeartbeatState$1] [AsyncLog @ 2016-02-03 15:44:20.964+0000]  HeartbeatState: start-[reset_send_heartbeat]->start conversation-id:20/13# payload:10\n2016-02-03 15:44:20.975+0000 WARN  [o.n.c.s.StateMachine] [AsyncLog @ 2016-02-03 15:44:20.974+0000]  Exception in message handling Throwable\njava.lang.NullPointerException: Throwable\n        at java.util.Objects.requireNonNull(Objects.java:228)\n        at org.neo4j.logging.async.AsyncLogEvent.logEvent(AsyncLogEvent.java:44)\n        at org.neo4j.logging.async.AsyncLog$AsyncLogger.log(AsyncLog.java:99)\n        at org.neo4j.logging.AbstractLog.warn(AbstractLog.java:76)\n        at org.neo4j.kernel.impl.util.CappedLogger.warn(CappedLogger.java:75)\n        at org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context.LearnerContextImpl.notifyLearnMiss(LearnerContextImpl.java:178)\n        at org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.LearnerState$2.handle(LearnerState.java:223)\n        at org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.LearnerState$2.handle(LearnerState.java:58)\n        at org.neo4j.cluster.statemachine.StateMachine.handle(StateMachine.java:88)\n        at org.neo4j.cluster.StateMachines$1.handleMessage(StateMachines.java:222)\n        at org.neo4j.cluster.StateMachines$1.run(StateMachines.java:154)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n        at org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:99)\n2016-02-03 15:44:20.975+0000 DEBUG [o.n.c.p.h.HeartbeatState$1] [AsyncLog @ 2016-02-03 15:44:20.975+0000]  HeartbeatState: start-[i_am_alive]->start from:cluster://192.168.4.133:47012 conversation-id:20/13# payl\noad:i_am_alive[10]\n2016-02-03 15:44:20.975+0000 WARN  [o.n.c.s.StateMachine] [AsyncLog @ 2016-02-03 15:44:20.975+0000]  Exception in message handling Throwable\njava.lang.NullPointerException: Throwable\n        at java.util.Objects.requireNonNull(Objects.java:228)\n        at org.neo4j.logging.async.AsyncLogEvent.logEvent(AsyncLogEvent.java:44)\n        at org.neo4j.logging.async.AsyncLog$AsyncLogger.log(AsyncLog.java:99)\n        at org.neo4j.logging.AbstractLog.warn(AbstractLog.java:76)\n        at org.neo4j.kernel.impl.util.CappedLogger.warn(CappedLogger.java:75)\n        at org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context.LearnerContextImpl.notifyLearnMiss(LearnerContextImpl.java:178)\n        at org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.LearnerState$2.handle(LearnerState.java:223)\n        at org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.LearnerState$2.handle(LearnerState.java:58)\n        at org.neo4j.cluster.statemachine.StateMachine.handle(StateMachine.java:88)\n        at org.neo4j.cluster.StateMachines$1.handleMessage(StateMachines.java:222)\n        at org.neo4j.cluster.StateMachines$1.run(StateMachines.java:154)\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n        at java.lang.Thread.run(Thread.java:745)\n        at org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:99)\n```\n\n... and so on. After this the slave instance cannot connect to the master instance and no additional info on how to handle the issue isn't provided.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 10, "UPD": 0, "TOT": 18, "DEL": 4, "INS": 7, "spoonFilesChanged": 4, "MOV": 7}, "title": "NullPointerException in AsyncLogEvent#logEvent", "statsSkippedReason": "", "closed": "2016-02-25 09:38:08", "commitsDetails": [{"commitUser": "spacecowboy", "commitDateTime": "2016-02-23 16:18:01", "commitHash": "559b00e493f0ed84c67ee063ceeb207a0c97d66c", "commitParents": ["2e6bf156d51a494a381882d384378f627513bfd1"], "commitGHEventType": "closed", "nameRev": "559b00e493f0ed84c67ee063ceeb207a0c97d66c tags/3.0.0-M05^2~10^2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/MetaDataStore.java", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/transaction/TransactionPropagator.java", "deletions": 1}, {"insertions": 1, "lines": 4, "filePath": "enterprise/ha/src/test/java/org/neo4j/kernel/ha/transaction/TransactionPropagatorTest.java", "deletions": 3}, {"insertions": 38, "lines": 43, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/CappedLogger.java", "deletions": 5}, {"insertions": 1, "lines": 2, "filePath": "enterprise/cluster/src/main/java/org/neo4j/cluster/protocol/atomicbroadcast/multipaxos/context/LearnerContextImpl.java", "deletions": 1}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.store.MetaDataStore.closedTransactionIdIsOnParWithOpenedTransactionId()"}], "spoonFilePath": "MetaDataStore.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.ha.transaction.TransactionPropagator.committed(long,int)"}], "spoonFilePath": "TransactionPropagator.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context.LearnerContextImpl.notifyLearnMiss(org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.InstanceId)"}], "spoonFilePath": "LearnerContextImpl.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 7, "DEL": 1, "INS": 1, "MOV": 5, "spoonMethodName": "org.neo4j.kernel.impl.util.CappedLogger.Filter.checkDuplicate(java.lang.String,java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.util.CappedLogger.info(java.lang.String)"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.kernel.impl.util.CappedLogger.Filter.sameMsg(java.lang.Throwable,java.lang.Throwable)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.util.CappedLogger.error(java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.util.CappedLogger.debug(java.lang.String)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.util.CappedLogger.warn(java.lang.String)"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.kernel.impl.util.CappedLogger.Filter.sameClass(java.lang.Throwable,java.lang.Throwable)"}], "spoonFilePath": "CappedLogger.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.ha.transaction.TransactionPropagatorTest.shouldCapUndesiredSlaveCountPushLogging()"}], "spoonFilePath": "TransactionPropagatorTest.java"}], "commitMessage": "Fix passing null argument into NonNull parameter\n\nFixes #6348\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-02-22 12:24:04"}], "created": "2016-02-03 15:49:22"}, {"labels": ["1.9", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6342", "title": "possible bug: broken indexing?", "closed": "2018-02-21 16:31:16", "commitsDetails": [], "commits": {}, "ttf": 749.0002777777778, "created": "2016-02-02 16:56:33", "user": "chiffa", "body": "I think I have neo4j index failing to properly to match the key:value pair:\n\n![image](https://cloud.githubusercontent.com/assets/1384395/12756855/93b75a88-c9a3-11e5-8a1c-180bb764116c.png)\n\nI only got this error on a substantial amount of data. For the reasons related to a separate issue (#5785), I can only use neo4j 1.9.6.\nDoes anyone know where this error might come and how it can be mediated?\n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6337", "title": "Invalid usage of PathValueBuilder, Node must be a node in Relationship", "closed": "2016-02-17 10:07:59", "commitsDetails": [], "commits": {}, "ttf": 15.000277777777777, "created": "2016-02-02 04:27:34", "user": "luanne", "body": "[Neo4j 2.3.2]\nFor the following data,\n\n```\ncreate \n(_0:`Node` ),\n(_1:`Node` ),\n(_2:`Node` ),\n(_3:`Node` ),\n_0-[:EDGE]->_1,\n_1-[:EDGE]->_2,\n_2-[:EDGE]->_3\n```\n\nthis query\n\n```\nMATCH ()-[r:`EDGE`]-() \nWITH r \nMATCH p=(n)-[*0..1]-()-[r]-()-[*0..1]-(m) \nRETURN p\n```\n\nthrows \n\n```\nCaused by:\norg.neo4j.helpers.ThisShouldNotHappenError: Developer: pontus claims that: Invalid usage of PathValueBuilder, Node[1] must be a node in Relationship[2]\n    at org.neo4j.cypher.internal.compiler.v2_3.commands.expressions.PathValueBuilder$$anonfun$addUndirectedRelationship$1.apply(PathValueBuilder.scala:60)\n    at org.neo4j.cypher.internal.compiler.v2_3.commands.expressions.PathValueBuilder$$anonfun$addUndirectedRelationship$1.apply(PathValueBuilder.scala:58)\n    at org.neo4j.cypher.internal.compiler.v2_3.commands.expressions.PathValueBuilder.nullCheck(PathValueBuilder.scala:105)\n    at org.neo4j.cypher.internal.compiler.v2_3.commands.expressions.PathValueBuilder.addUndirectedRelationship(PathValueBuilder.scala:57)\n    at org.neo4j.cypher.internal.compiler.v2_3.commands.expressions.ProjectedPath$singleUndirectedRelationshipProjector.apply(ProjectedPath.scala:53)\n    at.......\n```\n\nHowever, limiting to a single relationship (for all values of ID(r)) works fine-\n\n```\nMATCH ()-[r:`EDGE`]-()\nWHERE ID(r)=2\nWITH r\nMATCH p=(n)-[*0..1]-()-[r]-()-[*0..1]-(m)\nRETURN p\n```\n"}, {"labels": ["bug", "team-kernel"], "filteredCommits": ["e06e0743298e541f04d572d78b17fb2b2594534d"], "url": "https://github.com/neo4j/neo4j/issues/6335", "gitStatsSummary": {"insertions": 11, "gitFilesChange": 1, "lines": 11, "deletions": 0}, "numCommits": 1, "commits": {"e06e0743298e541f04d572d78b17fb2b2594534d": {"commitUser": "burqen", "commitGHEventType": "closed"}}, "ttf": 97.00027777777778, "user": "tkroman", "changesInPackagesSPOON": ["org.neo4j.kernel.impl.store.CommonAbstractStore.getNumberOfIdsInUse()", "org.neo4j.kernel.impl.store.CommonAbstractStore.deleteIdGenerator()", "org.neo4j.kernel.impl.store.CommonAbstractStore.nextId()"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/kernel/impl/store"], "body": "```\njava.lang.NullPointerException: null\nat org.neo4j.kernel.impl.store.CommonAbstractStore.nextId(CommonAbstractStore.java:419)\nat org.neo4j.kernel.impl.api.store.DiskLayer.reserveNode(DiskLayer.java:678)\nat org.neo4j.kernel.impl.api.store.CacheLayer.reserveNode(CacheLayer.java:457)\nat org.neo4j.kernel.impl.api.StateHandlingStatementOperations.nodeCreate(StateHandlingStatementOperations.java:323)\nat org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.nodeCreate(ConstraintEnforcingEntityOperations.java:368)\nat org.neo4j.kernel.impl.api.LockingStatementOperations.nodeCreate(LockingStatementOperations.java:267)\nat org.neo4j.kernel.impl.api.OperationsFacade.nodeCreate(OperationsFacade.java:851)\nat org.neo4j.kernel.impl.factory.GraphDatabaseFacade.createNode(GraphDatabaseFacade.java:187)\n```\n\nSeeing this for the first time. \n\nmessages.log contains this:\n\n```\n2016-02-01 15:05:36.745+0000 ERROR [o.n.k.i.DiagnosticsManager] Failure while logging diagnostics for org.neo4j.kernel.info.DiagnosticsManager$ExtractedDiagnosticsProvider@53d91c95\njava.lang.NullPointerException\nat org.neo4j.kernel.impl.store.CommonAbstractStore.getNumberOfIdsInUse(CommonAbstractStore.java:701)\nat org.neo4j.kernel.impl.store.CommonAbstractStore.logIdUsage(CommonAbstractStore.java:725)\nat org.neo4j.kernel.impl.store.NeoStores.logIdUsage(NeoStores.java:648)\nat org.neo4j.kernel.NeoStoreDataSource$Diagnostics$2.dump(NeoStoreDataSource.java:276)\nat org.neo4j.kernel.NeoStoreDataSource$Diagnostics.dumpDiagnostics(NeoStoreDataSource.java:330)\nat org.neo4j.kernel.NeoStoreDataSource$Diagnostics$2.dumpDiagnostics(NeoStoreDataSource.java:271)\nat org.neo4j.kernel.info.DiagnosticsManager$ExtractedDiagnosticsProvider.dump(DiagnosticsManager.java:316)\nat org.neo4j.kernel.info.DiagnosticsManager.dump(DiagnosticsManager.java:263)\nat org.neo4j.kernel.info.DiagnosticsManager.dump(DiagnosticsManager.java:255)\nat org.neo4j.kernel.info.DiagnosticsManager.appendProvider(DiagnosticsManager.java:249)\nat org.neo4j.kernel.info.DiagnosticsManager.register(DiagnosticsManager.java:225)\nat org.neo4j.kernel.info.DiagnosticsManager.registerAll(DiagnosticsManager.java:232)\nat org.neo4j.kernel.NeoStoreDataSource.registerDiagnosticsWith(NeoStoreDataSource.java:1288)\nat org.neo4j.kernel.impl.factory.EditionModule.doAfterRecoveryAndStartup(EditionModule.java:72)\nat org.neo4j.kernel.ha.factory.HighlyAvailableEditionModule.doAfterRecoveryAndStartup(HighlyAvailableEditionModule.java:786)\nat org.neo4j.kernel.ha.factory.HighlyAvailableEditionModule$15.doAfterRecoveryAndStartup(HighlyAvailableEditionModule.java:757)\nat org.neo4j.kernel.ha.factory.HighlyAvailableEditionModule$15.masterIsAvailable(HighlyAvailableEditionModule.java:734)\nat org.neo4j.kernel.ha.cluster.HighAvailabilityMemberStateMachine$StateMachineClusterEventListener$2.notify(HighAvailabilityMemberStateMachine.java:207)\nat org.neo4j.kernel.ha.cluster.HighAvailabilityMemberStateMachine$StateMachineClusterEventListener$2.notify(HighAvailabilityMemberStateMachine.java:203)\nat org.neo4j.helpers.Listeners.notifyListeners(Listeners.java:64)\nat org.neo4j.kernel.ha.cluster.HighAvailabilityMemberStateMachine$StateMachineClusterEventListener.memberIsAvailable(HighAvailabilityMemberStateMachine.java:201)\nat org.neo4j.cluster.member.paxos.PaxosClusterMemberEvents$AtomicBroadcastListenerImpl$1.notify(PaxosClusterMemberEvents.java:372)\nat org.neo4j.cluster.member.paxos.PaxosClusterMemberEvents$AtomicBroadcastListenerImpl$1.notify(PaxosClusterMemberEvents.java:368)\nat org.neo4j.helpers.Listeners.notifyListeners(Listeners.java:64)\nat org.neo4j.cluster.member.paxos.PaxosClusterMemberEvents$AtomicBroadcastListenerImpl.receive(PaxosClusterMemberEvents.java:367)\nat org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context.AtomicBroadcastContextImpl$1.notify(AtomicBroadcastContextImpl.java:77)\nat org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.context.AtomicBroadcastContextImpl$1.notify(AtomicBroadcastContextImpl.java:73)\nat org.neo4j.helpers.Listeners$1.run(Listeners.java:87)\nat org.neo4j.cluster.DelayedDirectExecutor.drain(DelayedDirectExecutor.java:93)\nat org.neo4j.cluster.StateMachines$1.run(StateMachines.java:216)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\nat java.lang.Thread.run(Thread.java:745)\nat org.neo4j.helpers.NamedThreadFactory$2.run(NamedThreadFactory.java:99)\n\n```\n\nBut after that:\n\n```\n2016-02-01 15:05:36.822+0000 INFO  [o.n.k.h.HighAvailabilityLogger] Database available for write transactions\n2016-02-01 15:05:36.822+0000 INFO  [o.n.k.h.f.HighlyAvailableFacadeFactory] Database is now ready\n\n```\n\nAlso, :sysinfo show this:\n![err](https://i.imgur.com/c7Vp4O7.png)\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 3, "UPD": 0, "TOT": 3, "DEL": 0, "INS": 3, "spoonFilesChanged": 1, "MOV": 0}, "title": "NullPointerException in CommonAbstractStore#nextId", "statsSkippedReason": "", "closed": "2016-05-09 13:37:26", "commitsDetails": [{"commitUser": "burqen", "commitDateTime": "2016-05-03 17:12:09", "commitHash": "e06e0743298e541f04d572d78b17fb2b2594534d", "commitParents": ["b691728b8629379d1bfc023cae31221054ff20d2"], "commitGHEventType": "closed", "nameRev": "e06e0743298e541f04d572d78b17fb2b2594534d tags/3.1.0-M01^2~1^2~3^2", "commitGitStats": [{"insertions": 11, "lines": 11, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/CommonAbstractStore.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.store.CommonAbstractStore.getNumberOfIdsInUse()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.store.CommonAbstractStore.deleteIdGenerator()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.store.CommonAbstractStore.nextId()"}], "spoonFilePath": "CommonAbstractStore.java"}], "commitMessage": "Fix NPE after Recovery\n\nMark store as not OK after deleting its idGenerator, which will trigger\na rebuilding of the idGenerator once makeStoreOK is called.\n\nFixes #6335\n\nAlso adds some null checks for idGenerator to throw better exceptions\nthan NPEs.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-05-03 16:45:45"}], "created": "2016-02-01 16:34:56"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6323", "title": "Delete operation - Different behavior in CypherQuery execution vs API", "closed": "2016-02-04 09:45:08", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2016-01-28 15:55:22", "user": "bHacklv", "body": "### We've encountered different behavior in CypherQuery execution vs API for delete operation.\n## Description of the bug:\n\nWithin 1st transaction we create (node1) node, (node2) node, (node1)-[rel]->(node2) relationship.\n\nWithin 2nd transaction we want to Delete parent node, child node and then relationship (or do that in any order). \n\nThis is method call order:\n1. Node#delete() **(on node1)**\n2. Node#delete() **(on node2)**\n3. Relationship#delete() **(on (node1)-[rel]->(node2))**\n\nHowever, if we execute these cyphers:\n1. GraphDatabaseService#execute(\"match n where n.uuid = '\" + parentNodeId + \"' delete n\") **(deletes node1)**\n2. GraphDatabaseService#execute(\"match n where n.uuid = '\" + childNodeId+ \"' delete n\") **(deletes node2)**\n3. GraphDatabaseService#execute(\"match ()-[r]-() where id(r) = \" + relId + \" return r\") **(deletes (node1)-[rel]->(node2) relationship)**\n\n**It throws this exception:**\n\n```\norg.neo4j.graphdb.TransactionFailureException: Transaction was marked as successful, but unable to commit transaction so rolled back.\n    at org.neo4j.kernel.TopLevelTransaction.close(TopLevelTransaction.java:121)\n    at tests.integration.primitives.node.DeleteTest.asd(DeleteTest.java:153)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)\n    at tests.integration.util.runner.IntegrationTestRunner.gentlyRunChild(IntegrationTestRunner.java:163)\n    at tests.integration.util.runner.IntegrationTestRunner.runChild(IntegrationTestRunner.java:75)\n    at tests.integration.util.runner.IntegrationTestRunner.runChild(IntegrationTestRunner.java:42)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:363)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:137)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:78)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:212)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:68)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:140)\nCaused by: org.neo4j.kernel.api.exceptions.TransactionFailureException: Node record Node[0,used=false,rel=0,prop=-1,labels=Inline(0x0:[]),light] still has relationships\n    at org.neo4j.kernel.impl.transaction.state.IntegrityValidator.validateNodeRecord(IntegrityValidator.java:52)\n    at org.neo4j.kernel.impl.transaction.state.TransactionRecordState.extractCommands(TransactionRecordState.java:170)\n    at org.neo4j.kernel.impl.api.KernelTransactionImplementation.commit(KernelTransactionImplementation.java:539)\n    at org.neo4j.kernel.impl.api.KernelTransactionImplementation.close(KernelTransactionImplementation.java:458)\n    at org.neo4j.kernel.TopLevelTransaction.close(TopLevelTransaction.java:97)\n    ... 30 more\n```\n## Additional observations:\n- Changing cypher query deletion order to: delete node1, rel, node2 has same result (exception is thrown).\n- Printing out each execution **getQueryStatistics()** shows that:\n\n```\nNodes deleted: 1\nNodes deleted: 1\n\n```\n\nLast line is empty line for 'delete relationship' query operation (you have a bug in QueryStatistics.toString() method, where **if (result.isEmpty) \"Nothing happened\" else result** check is always false, since you create **val builder = new StringBuilder(\"\\n\")** with 'new-line', which makes it always nonEmpty.\n- If we change delete to return for relationship (the rest of the code stay the same), the relationship is returned - **System.out.println(result.next());** will print out **{r=Relationship[0]}**.\n- If we have only 2 queries - first deletes parent (or child) node, and second matches relationship and other node and deletes both within one query _\"match ()-[r]-(n) where n.uuid = '\" + childNodeId + \"' delete r, n\"_ - will return empty line too, meaning nothing was executed for this operation. Same happens if we swap **r** and **n** after **delete**. And if we return the results for this query, rather than delete - we will see both Node and Relationship objects being returned.\n## Test code we used:\n### API\n\n``` java\n@Test\n    public void deleteNodesAndRelWithApi() throws Exception {\n        final DynamicRelationshipType relType = DynamicRelationshipType.withName(\"CHILD\");\n        final String parentNodeId;\n        final String childNodeId;\n        try (final Transaction transaction = database().beginTx()) {\n            final Node parentNode = helpers().database().createUniqueNode();\n            final Node childNode = helpers().database().createUniqueNode();\n            parentNode.createRelationshipTo(childNode, relType);\n\n            parentNodeId = uuid(parentNode);\n            childNodeId = uuid(childNode);\n\n            transaction.success();\n        }\n\n        try (final Transaction transaction = database().beginTx()) {\n            database().findNode(DatabaseHelper.UNIQUE_LABEL, DatabaseHelper.UNIQUE_PROPERTY, parentNodeId).delete();\n            database().findNode(DatabaseHelper.UNIQUE_LABEL, DatabaseHelper.UNIQUE_PROPERTY,\n                    childNodeId).getRelationships().iterator().next().delete();\n            database().findNode(DatabaseHelper.UNIQUE_LABEL, DatabaseHelper.UNIQUE_PROPERTY, childNodeId).delete();\n            transaction.success();\n        }\n    }\n```\n### Cypher\n\n``` java\n@Test\n    public void deleteNodesAndRelWithCypherQuery() throws Exception {\n        final DynamicRelationshipType relType = DynamicRelationshipType.withName(\"CHILD\");\n        final String parentNodeId;\n        final String childNodeId;\n        final long relId;\n        try (final Transaction transaction = database().beginTx()) {\n            final Node parentNode = helpers().database().createUniqueNode();\n            final Node childNode = helpers().database().createUniqueNode();\n            relId = parentNode.createRelationshipTo(childNode, relType).getId();\n\n\n            parentNodeId = uuid(parentNode);\n            childNodeId = uuid(childNode);\n\n            transaction.success();\n        }\n\n        try (final Transaction transaction = database().beginTx()) {\n\n            try (Result result = database().execute(\"match n where n.uuid = '\" + parentNodeId + \"' delete n\")) {\n                System.out.println(result.getQueryStatistics());\n                while (result.hasNext()) {\n                    System.out.println(result.next());\n                }\n            }\n            try (Result result = database().execute(\"match n where n.uuid = '\" + childNodeId + \"' delete n\")) {\n                System.out.println(result.getQueryStatistics());\n                while (result.hasNext()) {\n                    System.out.println(result.next());\n                }\n            }\n\n            try (Result result = database().execute(\"match ()-[r]-() where id(r) = \" + relId + \" delete r\")) {\n                System.out.println(result.getQueryStatistics());\n                while (result.hasNext()) {\n                    System.out.println(result.next());\n                }\n            }\n\n//            try (Result result = database().execute(\"match ()-[r]-(n) where n.uuid = '\" + childNodeId + \"' delete r, n\")) {\n//                while(result.hasNext()) {\n//                    final Map<String, Object> next = result.next();\n//                    ((Node) next.get(\"n\")).delete();\n//                    ((Relationship) next.get(\"r\")).delete();\n//                    System.out.println(next);\n//                }\n//            }\n            transaction.success();\n        }\n    }\n```\n\n(@FylmTM)\n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6309", "title": "Regression in 2.3.1 - Parameterisation of query causing sever performance issue (old bug #4357)", "closed": "2016-02-02 13:34:07", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2016-01-27 08:02:50", "user": "dgem", "body": "We have an instance of about 25GB, which takes about 20 seconds to exectute a query:\n\n```\nMATCH (p:Person{uuid:{uuid}})<-[:HAS_MEMBER]-(m:Membership)\nOPTIONAL MATCH (m)-[:HAS_ORGANISATION]->(o:Organisation)\nOPTIONAL MATCH (m)-[rr:HAS_ROLE]->(r:Role)\n...\nRETURN collect ({p:p, m:m}) as rs\n```\n\nThis is despite there being a suitable index:\n\n```\nIndexes\n  ON :Concept(uuid)      ONLINE (for uniqueness constraint) \n  ON :Content(uuid)      ONLINE (for uniqueness constraint) \n  ON :Membership(uuid)   ONLINE (for uniqueness constraint) \n  ON :Organisation(uuid) ONLINE (for uniqueness constraint) \n  ON :Person(uuid)       ONLINE (for uniqueness constraint) \n  ON :Role(uuid)         ONLINE (for uniqueness constraint) \n  ON :Thing(uuid)        ONLINE (for uniqueness constraint) \n\nConstraints\n  ON (thing:Thing) ASSERT thing.uuid IS UNIQUE\n  ON (concept:Concept) ASSERT concept.uuid IS UNIQUE\n  ON (person:Person) ASSERT person.uuid IS UNIQUE\n  ON (role:Role) ASSERT role.uuid IS UNIQUE\n  ON (membership:Membership) ASSERT membership.uuid IS UNIQUE\n  ON (content:Content) ASSERT content.uuid IS UNIQUE\n  ON (organisation:Organisation) ASSERT organisation.uuid IS UNIQUE\n```\n\nCuriously we saw the same performance hit when we ran the query in the UI and subsituted a value for the query:\n\n```\nMATCH (p:Person{uuid:\"fc9817ea-41cc-31b3-bfaa-214ae3d57d88\"})<-[:HAS_MEMBER]-(m:Membership)\nOPTIONAL MATCH (m)-[:HAS_ORGANISATION]->(o:Organisation)\nOPTIONAL MATCH (m)-[rr:HAS_ROLE]->(r:Role)\n```\n\nWe fixed the literal query by telling Neo to use the `Person` index:\n\n```\nMATCH (p:Person{uuid:\"fc9817ea-41cc-31b3-bfaa-214ae3d57d88\"})<-[:HAS_MEMBER]-(m:Membership)\nUSING INDEX p:Person(uuid)\n```\n\nHowever the parameterised version was still doing a NodeScanByLabel when we added the `USING` clause. I then found issue #4357, which seemed to be a perfect match.\nAs per the work around in this issue we added a `PLANNER RULE` which has was suggested in #4357. \n\nWe can get the query to execute in less than 1 second if we modify the original to:\n\n```\nPLANNER RULE MATCH (p:Person{uuid:{uuid}})\nUSING INDEX p:Person(uuid)\nMATCH (p)<-[:HAS_MEMBER]-(m:Membership)\nOPTIONAL MATCH (m)-[:HAS_ORGANISATION]->(o:Organisation)\nOPTIONAL MATCH (m)-[rr:HAS_ROLE]->(r:Role)\n...\n```\n\n_(I split the original `MATCH` into two sepertate statements to give maximum hints to the optimiser)_\n\nIt may be that we have two bugs:\n1. Parameterised query is ignoring an index and requires a `PLANNER RULE` and `USING` to fix\n2. Literal query also ignores the index and needs a `USING` to fix\n\nThis issue is to report the bug with the parameterised query, if you'd like a seperate issue for the literal one let me know. Likewise, let me also know if you need some recreational or debug info.\n\nThanks\n"}, {"labels": ["2.3", "bug", "changelog", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6274", "title": "Returning deleted entities breaks", "closed": "2016-02-17 10:30:32", "commitsDetails": [], "commits": {}, "ttf": 26.00027777777778, "created": "2016-01-21 23:08:09", "user": "brian-gates", "body": "```\nCREATE (a)-[r:related]->(b) \nDELETE r \nRETURN *\n```\n\nResults in `Neo.DatabaseError.Statement.ExecutionFailure` with message \"Relationship not found\"\n\nI'd expect this not to fail, or at least specify _which_ relationship is unfound.\n\nSlack context: https://neo4j-users.slack.com/archives/help-cypher/p1453409530000617\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6241", "title": "Performance RelationShip Merge", "closed": "2016-01-20 15:37:25", "commitsDetails": [], "commits": {}, "ttf": 2.000277777777778, "created": "2016-01-18 13:17:23", "user": "mabelanski", "body": "Hi,\n\nWe coding a program for make an import of our sql database to neo4j. We use HTTP API and CSV import query for import all datas \n\nWe have no probleme with MERGE on nodes but with MERGE on relationships take very very long time (take 15min just for MERGE 10 000 relations ...). We replaced it by CREATE command and it's really better faster but it's a problem because all relationships are duplicate ... and clear all of them with this command crash the server \n\nMATCH (s:Ticket)-[r:AskOn]-(t:Project)\nWITH s, t, TAIL (COLLECT (r)) as rr\nFOREACH (r IN rr | DELETE r)\n\nAnd more database is big and more time MERGE command take \nWe have lots of data, few millions of relationship and nodes\n\nSo what your recommandations ? We love neo4j but it's a real problem for us and we can't wait so much time to set up to date our neo4j database\n\nWe also coded 3 process : \n- One for up to date neo database everytime that we have change in our sql database, but some time we have problem and some data missing ... \n- On for set up first time all data from sql database to neo database, and it's very very slow, we still not succeed to insert all data :(\n- On for set up to date the last week data of sql database to neo4j \n\nThanks you for your helps ans recommandations \n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6239", "title": "[2.3.1] StackOverflowError on executing large queries.", "closed": "2016-06-16 10:58:16", "commitsDetails": [], "commits": {}, "ttf": 149.00027777777777, "created": "2016-01-18 12:08:09", "user": "FylmTM", "body": "Hi,\n\nWe receiving `StackOverflowError` on executing large Cypher queries.\nError is thrown during Cypher query parsing.\n\nCode to reproduce problem:\n\n``` java\npublic class NeoBugTest {\n\n    private static final int NODE_COUNT = 2000;\n\n    @Test\n    public void testLargeCreateNodeCypherForEmbedded() throws Exception {\n        final GraphDatabaseService db = new GraphDatabaseFactory().newEmbeddedDatabase(Files.createTempDir());\n        final Map<String, Object> properties = new HashMap<>();\n        final String pattern = \"(n%s)\";\n\n        // Build large query\n        // Example: CREATE (n1),(n2),(n3),(n4)\n        final StringBuilder query = new StringBuilder(\"CREATE \");\n        for (int i = 0; i < NODE_COUNT; i++) {\n            query.append(String.format(pattern, i));\n            if (i < NODE_COUNT - 1) {\n                query.append(\",\");\n            }\n        }\n\n        try (final Transaction transaction = db.beginTx()) {\n            db.execute(query.toString(), properties); // <--- java.lang.StackOverflowError\n            transaction.success();\n        }\n    }\n}\n```\n\nStacktrace sample:\n\n```\njava.lang.StackOverflowError\n    at scala.collection.mutable.ArrayBuilder$.make(ArrayBuilder.scala:37)\n    at scala.Array$$anon$2.apply(Array.scala:64)\n    at scala.Array$$anon$2.apply(Array.scala:62)\n    at scala.collection.package$$anon$1.apply(package.scala:87)\n    at scala.collection.SeqLike$class.reverseMap(SeqLike.scala:286)\n    at scala.collection.AbstractSeq.reverseMap(Seq.scala:41)\n    at scala.collection.mutable.ArrayStack$.apply(ArrayStack.scala:27)\n    at org.neo4j.cypher.internal.frontend.v2_3.Foldable$$anonfun$org$neo4j$cypher$internal$frontend$v2_3$Foldable$$treeFoldAcc$1.apply(Foldable.scala:82)\n    at org.neo4j.cypher.internal.compiler.v2_3.ast.rewriters.literalReplacement$$anonfun$3$$anonfun$applyOrElse$12.apply(literalReplacement.scala:64)\n    at org.neo4j.cypher.internal.compiler.v2_3.ast.rewriters.literalReplacement$$anonfun$3$$anonfun$applyOrElse$12.apply(literalReplacement.scala:64)\n    at org.neo4j.cypher.internal.frontend.v2_3.Foldable$.org$neo4j$cypher$internal$frontend$v2_3$Foldable$$treeFoldAcc(Foldable.scala:82)\n    at org.neo4j.cypher.internal.frontend.v2_3.Foldable$$anonfun$org$neo4j$cypher$internal$frontend$v2_3$Foldable$$treeFoldAcc$1.apply(Foldable.scala:82)\n    at org.neo4j.cypher.internal.compiler.v2_3.ast.rewriters.literalReplacement$$anonfun$3$$anonfun$applyOrElse$12.apply(literalReplacement.scala:64)\n    at org.neo4j.cypher.internal.compiler.v2_3.ast.rewriters.literalReplacement$$anonfun$3$$anonfun$applyOrElse$12.apply(literalReplacement.scala:64)\n    at org.neo4j.cypher.internal.frontend.v2_3.Foldable$.org$neo4j$cypher$internal$frontend$v2_3$Foldable$$treeFoldAcc(Foldable.scala:82)\n    at org.neo4j.cypher.internal.frontend.v2_3.Foldable$$anonfun$org$neo4j$cypher$internal$frontend$v2_3$Foldable$$treeFoldAcc$1.apply(Foldable.scala:82)\n    at org.neo4j.cypher.internal.compiler.v2_3.ast.rewriters.literalReplacement$$anonfun$3$$anonfun$applyOrElse$12.apply(literalReplacement.scala:64)\n    at org.neo4j.cypher.internal.compiler.v2_3.ast.rewriters.literalReplacement$$anonfun$3$$anonfun$applyOrElse$12.apply(literalReplacement.scala:64)\n    at org.neo4j.cypher.internal.frontend.v2_3.Foldable$.org$neo4j$cypher$internal$frontend$v2_3$Foldable$$treeFoldAcc(Foldable.scala:82)\n    at org.neo4j.cypher.internal.frontend.v2_3.Foldable$$anonfun$org$neo4j$cypher$internal$frontend$v2_3$Foldable$$treeFoldAcc$1.apply(Foldable.scala:82)\n    at org.neo4j.cypher.internal.compiler.v2_3.ast.rewriters.literalReplacement$$anonfun$3$$anonfun$applyOrElse$12.apply(literalReplacement.scala:64)\n    at org.neo4j.cypher.internal.compiler.v2_3.ast.rewriters.literalReplacement$$anonfun$3$$anonfun$applyOrElse$12.apply(literalReplacement.scala:64)\n    at org.neo4j.cypher.internal.frontend.v2_3.Foldable$.org$neo4j$cypher$internal$frontend$v2_3$Foldable$$treeFoldAcc(Foldable.scala:82)\n...\n```\n\nSimilar errors are thrown (in other places) when query contains:\n- Labels: `(n:Label)`\n- Parameter `(n:Label {p})`\n"}, {"labels": ["2.2", "bug", "changelog", "team-kernel"], "filteredCommits": ["b15d7618364e5ff41b4a417f1014cc8e22442925"], "url": "https://github.com/neo4j/neo4j/issues/6209", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"b15d7618364e5ff41b4a417f1014cc8e22442925": {"commitUser": "MishaDemianenko", "commitGHEventType": "closed"}}, "ttf": 3.000277777777778, "user": "helt", "changesInPackagesSPOON": ["org.neo4j.tooling.ImportTool.csvConfiguration(org.neo4j.helpers.Args,boolean)"], "changesInPackagesGIT": ["community/import-tool/src/main/java/org/neo4j/tooling"], "body": "Importing CSV using `Neo4jImport --quote \\0 ...` as indicated by http://stackoverflow.com/a/34111573/978392 wont work, because `\\0` are _two_ characters, where only one single character is accepted by the converter.\n\nI forced the error by checking out branch `2.3` and creating a compiled a custom 2.3.2-SNAPSHOT, which includes #6034.\n\nIt yields this console output:\n\n```\nC:\\...\\data>Neo4jImport --quote \\0 --into xyz.db --delimiter TAB  --id-type string \n--nodes:MyNodeType MyNodes_header.txt,MyNodes.txt \n--relationships:LINKSTO MyLinks_header.txt,MyLinks.txt\n\nWARNING! This batch script has been deprecated. Please use the provided PowerShell scripts instead: http://neo4j.com/docs/stable/powershell.html\nThe system cannot find the path specified.\nInput error: Invalid delimiter '\\0', expected one character\nCaused by:Invalid delimiter '\\0', expected one character\njava.lang.IllegalArgumentException: Invalid delimiter '\\0', expected one character\n        at org.neo4j.kernel.impl.util.Converters$9.apply(Converters.java:149)\n        at org.neo4j.kernel.impl.util.Converters$9.apply(Converters.java:143)\n        at org.neo4j.helpers.Args.interpretOption(Args.java:533)\n        at org.neo4j.tooling.ImportTool.csvConfiguration(ImportTool.java:635)\n        at org.neo4j.tooling.ImportTool.main(ImportTool.java:335)\n        at org.neo4j.tooling.ImportTool.main(ImportTool.java:279)\n\n```\n\nhttps://github.com/neo4j/neo4j/blob/2.3/community/kernel/src/main/java/org/neo4j/kernel/impl/util/Converters.java#L149\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "spoonFilesChanged": 1, "MOV": 0}, "title": "`Neo4jImport --quote \\0 ...` wont work", "statsSkippedReason": "", "closed": "2016-01-17 12:30:07", "commitsDetails": [{"commitUser": "MishaDemianenko", "commitDateTime": "2016-01-14 16:07:20", "commitHash": "b15d7618364e5ff41b4a417f1014cc8e22442925", "commitParents": ["c0173e1ec2fc0bbf2a5797e1bc1a75f320b6facc"], "commitGHEventType": "closed", "nameRev": "b15d7618364e5ff41b4a417f1014cc8e22442925 tags/3.0.0-M03~3^2~5^2~2^2~2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/import-tool/src/main/java/org/neo4j/tooling/ImportTool.java", "deletions": 1}, {"insertions": 108, "lines": 108, "filePath": "community/import-tool/src/test/java/org/neo4j/tooling/ImportToolTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.tooling.ImportToolTest.shouldBeEquivalentToUseRawAsciiOrCharacterAsQuoteConfiguration2()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.tooling.ImportToolTest.shouldAcceptRawEscapedAsciiCodeAsQuoteConfiguration()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.tooling.ImportToolTest.shouldBeEquivalentToUseRawAsciiOrCharacterAsQuoteConfiguration1()"}], "spoonFilePath": "ImportToolTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.tooling.ImportTool.csvConfiguration(org.neo4j.helpers.Args,boolean)"}], "spoonFilePath": "ImportTool.java"}], "commitMessage": "Fix raw ASCII support for quote char in CSV import\n\nFixes #6209\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-01-14 16:07:20"}], "created": "2016-01-13 14:44:56"}, {"labels": ["2.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6207", "title": "Neo4j 2.3.1 Enterprise: Adding a label index on a property containing more than 16kb of data results in inconsistent online backups...", "closed": "2016-11-28 17:52:41", "commitsDetails": [], "commits": {}, "ttf": 320.0002777777778, "created": "2016-01-13 13:33:03", "user": "mikesname", "body": "Running the [attached Cypher script](https://github.com/neo4j/neo4j/files/88890/test.cypher.txt) on a fresh database (via `neo4-shell`) results in the consistency problems shown below when attempting an online backup.\n\nRemoving one character from the data string so it's less than 16Kb makes the issue go away.\n\nFor reference, the test Cypher is just this:\n\n```\nCREATE (n:Item { data: '<BIG 16Kb BLOB>');\n\nCREATE INDEX ON :Item(data);\n```\n\nI recognise that attempting to index big blobs like this isn't ideal, but I've tried to simplify the issue here from a corner case I ran into doing some experiments with the Enterprise edition.\n\nThe inconsistency report is [here](https://github.com/neo4j/neo4j/files/88898/inconsistencies-2016-01-13.13.15.45.report.txt).\n\nOracle Java version 1.8.0_45 on Ubuntu 15.10 x86_64.\n\n``` bash\nneo4j-enterprise-2.3.1/bin/neo4j-backup  -from single://localhost:6362 -to backup.graph.db\nJava HotSpot(TM) 64-Bit Server VM warning: ignoring option MaxPermSize=512m; support was removed in 8.0\nPerforming backup from 'localhost:6362'\n2016-01-13 13:15:43.846+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.relationshipstore.db\n2016-01-13 13:15:43.850+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.relationshipstore.db 0.00 B\n2016-01-13 13:15:43.850+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.labeltokenstore.db.names\n2016-01-13 13:15:43.852+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.labeltokenstore.db.names 8.00 kB\n2016-01-13 13:15:43.852+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.counts.db.b\n2016-01-13 13:15:43.852+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.counts.db.b 224.00 B\n2016-01-13 13:15:43.852+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.propertystore.db.index.keys\n2016-01-13 13:15:43.853+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.propertystore.db.index.keys 8.00 kB\n2016-01-13 13:15:43.853+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.nodestore.db\n2016-01-13 13:15:43.854+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.nodestore.db 8.00 kB\n2016-01-13 13:15:43.854+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.relationshipgroupstore.db\n2016-01-13 13:15:43.854+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.relationshipgroupstore.db 8.00 kB\n2016-01-13 13:15:43.855+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.nodestore.db.labels\n2016-01-13 13:15:43.855+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.nodestore.db.labels 8.00 kB\n2016-01-13 13:15:43.855+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.propertystore.db\n2016-01-13 13:15:43.856+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.propertystore.db 7.97 kB\n2016-01-13 13:15:43.856+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.propertystore.db.index\n2016-01-13 13:15:43.856+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.propertystore.db.index 8.00 kB\n2016-01-13 13:15:43.856+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.relationshiptypestore.db\n2016-01-13 13:15:43.857+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.relationshiptypestore.db 0.00 B\n2016-01-13 13:15:43.857+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.propertystore.db.arrays\n2016-01-13 13:15:43.857+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.propertystore.db.arrays 8.00 kB\n2016-01-13 13:15:43.858+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.schemastore.db\n2016-01-13 13:15:43.858+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.schemastore.db 8.00 kB\n2016-01-13 13:15:43.859+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.propertystore.db.strings\n2016-01-13 13:15:43.860+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.propertystore.db.strings 24.00 kB\n2016-01-13 13:15:43.860+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.relationshiptypestore.db.names\n2016-01-13 13:15:43.860+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.relationshiptypestore.db.names 8.00 kB\n2016-01-13 13:15:43.860+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.labeltokenstore.db\n2016-01-13 13:15:43.861+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.labeltokenstore.db 8.00 kB\n2016-01-13 13:15:43.861+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore.counts.db.a\n2016-01-13 13:15:43.861+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore.counts.db.a 96.00 B\n2016-01-13 13:15:43.861+0000 INFO  [o.n.c.s.StoreCopyClient] Copying neostore\n2016-01-13 13:15:43.862+0000 INFO  [o.n.c.s.StoreCopyClient] Copied neostore 8.00 kB\n2016-01-13 13:15:43.862+0000 INFO  [o.n.c.s.StoreCopyClient] Copying schema/label/lucene/_0.cfs\n2016-01-13 13:15:43.862+0000 INFO  [o.n.c.s.StoreCopyClient] Copied schema/label/lucene/_0.cfs 225.00 B\n2016-01-13 13:15:43.862+0000 INFO  [o.n.c.s.StoreCopyClient] Copying schema/label/lucene/segments_1\n2016-01-13 13:15:43.863+0000 INFO  [o.n.c.s.StoreCopyClient] Copied schema/label/lucene/segments_1 249.00 B\n2016-01-13 13:15:43.863+0000 INFO  [o.n.c.s.StoreCopyClient] Copying schema/index/lucene/1/_0.cfs\n2016-01-13 13:15:43.863+0000 INFO  [o.n.c.s.StoreCopyClient] Copied schema/index/lucene/1/_0.cfs 207.00 B\n2016-01-13 13:15:43.864+0000 INFO  [o.n.c.s.StoreCopyClient] Copying schema/index/lucene/1/segments_1\n2016-01-13 13:15:43.864+0000 INFO  [o.n.c.s.StoreCopyClient] Copied schema/index/lucene/1/segments_1 263.00 B\n2016-01-13 13:15:43.864+0000 INFO  [o.n.c.s.StoreCopyClient] Done, copied 21 files\nFull Consistency Check\n.2016-01-13 13:15:45.327+0000 ERROR [o.n.c.ConsistencyCheckService] This node was not found in the expected index.\n    Node[0,used=true,rel=-1,prop=0,labels=Inline(0x1000000000:[0]),light]\n    Inconsistent with: IndexRule[id=1, label=0, kind=INDEX_RULE, provider={key=lucene, version=1.0}, properties=0] 8DTK2gNGWQuqdwOv9ha98O/6TYuIqO9Ku/qasXOlgf3X9FaCafzQ6kUz62EkbYJ/2fFoUd/6SkxO\n65Nqwz+L6S7sjyaR3Dj/fp5mzhUe6jJy/l+tuFA2LCrjj2m2FGR6p41A7cER+SUeBJ4wT2nLPhAl\n\n==== SNIP ===\n\nDXw7JLEAKSGXdurzMW/pntC3QSMIEjItRzYNbVIKJ2Mm4zBUX2fqfomwlH+WsJENNeDIYL6eURuV\nNEPvpsWpIX8jM/qPCwNoXXSDfPdSWu/cxFMJKz4nGvzSqSJi8c2gU2dP1aeYNEkGX4l9h9jSDyIV\nTJnU3rhu76XFbZtV/LS3jxkGvRPIHif1ZAqSOrn49TSwxfDDSHNY7fFxW3m68EByFDDSUfUyXAal\nJvF8+eODjd0wFA/L2X90+hLt9kid2kqxDKNtxyAR10uTDMI4+jh4UIRLMSh5\n...................  10%\n....................  20%\n....................  30%\n....................  40%\n....................  50%\n....................  60%\n....................  70%\n....................  80%\n....................  90%\n..................Checking node and relationship counts\n....................  10%\n....................  20%\n....................  30%\n....................  40%\n....................  50%\n....................  60%\n....................  70%\n....................  80%\n....................  90%\n.................... 100%\n2016-01-13 13:15:45.374+0000 WARN  [o.n.c.ConsistencyCheckService] Inconsistencies found: ConsistencySummaryStatistics{\n    Number of errors: 1\n    Number of warnings: 0\n    Number of inconsistent NODE records: 1\n}\n2016-01-13 13:15:45.475+0000 WARN  [o.n.c.ConsistencyCheckService] See 'backup.graph.db/inconsistencies-2016-01-13.13.15.45.report' for a detailed consistency report.\nDone\nWARNING: The database is inconsistent.\n```\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6126", "title": "org.neo4j.kernel.DeadlockDetectedException: Unable to acquire exclusive lock", "closed": "2017-06-22 14:49:23", "commitsDetails": [], "commits": {}, "ttf": 554.0002777777778, "created": "2015-12-16 10:46:52", "user": "xghrbc1001", "body": "ha mode,and version is 2.2.5\n\nwhether it's an issue and fixed in 2.3.0. I found this internet url:\n\nhttps://fossies.org/diffs/neo4j/2.2.6_vs_2.3.0/enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/SlaveLocksClient.java-diff.html\n\n```\norg.neo4j.kernel.DeadlockDetectedException: Unable to acquire exclusive lock: Cannot access 'RequestContext[machineId=1, lastAppliedTransaction=158986, eventIdentifier=70, hashCode=-1441091618, epoch=564400211824458, checksum=323549473393]', because another client is currently using it.\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.receiveLockResponse(SlaveLocksClient.java:298)\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.acquireExclusiveOnMaster(SlaveLocksClient.java:287)\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.acquireExclusive(SlaveLocksClient.java:123)\n        at org.neo4j.kernel.impl.api.LockingStatementOperations$1.visit(LockingStatementOperations.java:256)\n        at org.neo4j.kernel.impl.api.store.CacheLayer.relationshipVisit(CacheLayer.java:489)\n        at org.neo4j.kernel.impl.api.StateHandlingStatementOperations.relationshipVisit(StateHandlingStatementOperations.java:1238)\n        at org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.relationshipVisit(ConstraintEnforcingEntityOperations.java:391)\n        at org.neo4j.kernel.impl.api.LockingStatementOperations.relationshipDelete(LockingStatementOperations.java:251)\n        at org.neo4j.kernel.impl.api.OperationsFacade.relationshipDelete(OperationsFacade.java:633)\n        at org.neo4j.kernel.impl.core.RelationshipProxy.delete(RelationshipProxy.java:155)\n        at com.xxx.neo4j.plugin.knitter.service.KnitterService.setOwn(KnitterService.java:395)\n        at com.xxx.neo4j.plugin.knitter.service.KnitterService.realWork(KnitterService.java:261)\n        at com.xxx.neo4j.plugin.web.resource.KnitterResource.rstart(KnitterResource.java:104)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:497)\n        at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)\n        at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)\n        at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)\n        at org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:139)\n        at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\n        at ch.qos.logback.access.servlet.TeeFilter.doFilter(TeeFilter.java:55)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.Server.handle(Server.java:497)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\n        at java.lang.Thread.run(Thread.java:745)\nERROR 2015-12-16 17:45:36 neo4j Transaction Exception!! \norg.neo4j.kernel.DeadlockDetectedException: Unable to acquire exclusive lock: Cannot access 'RequestContext[machineId=1, lastAppliedTransaction=158986, eventIdentifier=70, hashCode=-1441091618, epoch=564400211824458, checksum=323549473393]', because another client is currently using it.\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.receiveLockResponse(SlaveLocksClient.java:298)\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.acquireExclusiveOnMaster(SlaveLocksClient.java:287)\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.acquireExclusive(SlaveLocksClient.java:123)\n        at org.neo4j.kernel.impl.api.LockingStatementOperations$1.visit(LockingStatementOperations.java:256)\n        at org.neo4j.kernel.impl.api.store.CacheLayer.relationshipVisit(CacheLayer.java:489)\n        at org.neo4j.kernel.impl.api.StateHandlingStatementOperations.relationshipVisit(StateHandlingStatementOperations.java:1238)\n        at org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.relationshipVisit(ConstraintEnforcingEntityOperations.java:391)\n        at org.neo4j.kernel.impl.api.LockingStatementOperations.relationshipDelete(LockingStatementOperations.java:251)\n        at org.neo4j.kernel.impl.api.OperationsFacade.relationshipDelete(OperationsFacade.java:633)\n        at org.neo4j.kernel.impl.core.RelationshipProxy.delete(RelationshipProxy.java:155)\n        at com.xxx.neo4j.plugin.knitter.service.KnitterService.setServe(KnitterService.java:432)\n        at com.xxx.neo4j.plugin.knitter.service.KnitterService.realWork(KnitterService.java:267)\n        at com.xxx.neo4j.plugin.web.resource.KnitterResource.rstart(KnitterResource.java:104)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:497)\n        at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)\n        at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)\n        at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)\n        at org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:139)\n        at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\n        at ch.qos.logback.access.servlet.TeeFilter.doFilter(TeeFilter.java:55)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.Server.handle(Server.java:497)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\n        at java.lang.Thread.run(Thread.java:745)\n INFO 2015-12-16 17:45:36 finally  beginTx.close(): 2015-12-16 17:45:36.162 \nERROR 2015-12-16 17:45:36 realtime error !! \norg.neo4j.kernel.DeadlockDetectedException: Unable to acquire exclusive lock: Cannot access 'RequestContext[machineId=1, lastAppliedTransaction=158986, eventIdentifier=70, hashCode=-1441091618, epoch=564400211824458, checksum=323549473393]', because another client is currently using it.\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.receiveLockResponse(SlaveLocksClient.java:298)\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.acquireExclusiveOnMaster(SlaveLocksClient.java:287)\n        at org.neo4j.kernel.ha.lock.SlaveLocksClient.acquireExclusive(SlaveLocksClient.java:123)\n        at org.neo4j.kernel.impl.api.LockingStatementOperations$1.visit(LockingStatementOperations.java:256)\n        at org.neo4j.kernel.impl.api.store.CacheLayer.relationshipVisit(CacheLayer.java:489)\n        at org.neo4j.kernel.impl.api.StateHandlingStatementOperations.relationshipVisit(StateHandlingStatementOperations.java:1238)\n        at org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.relationshipVisit(ConstraintEnforcingEntityOperations.java:391)\n        at org.neo4j.kernel.impl.api.LockingStatementOperations.relationshipDelete(LockingStatementOperations.java:251)\n        at org.neo4j.kernel.impl.api.OperationsFacade.relationshipDelete(OperationsFacade.java:633)\n        at org.neo4j.kernel.impl.core.RelationshipProxy.delete(RelationshipProxy.java:155)\n        at com.xxx.neo4j.plugin.knitter.service.KnitterService.setServe(KnitterService.java:432)\n        at com.xxx.neo4j.plugin.knitter.service.KnitterService.realWork(KnitterService.java:267)\n        at com.xxx.neo4j.plugin.web.resource.KnitterResource.rstart(KnitterResource.java:104)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:497)\n        at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)\n        at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)\n        at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)\n        at org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:139)\n        at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:302)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1542)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1473)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\n        at ch.qos.logback.access.servlet.TeeFilter.doFilter(TeeFilter.java:55)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.handler.RequestLogHandler.handle(RequestLogHandler.java:95)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.Server.handle(Server.java:497)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\n        at java.lang.Thread.run(Thread.java:745)\n```\n"}, {"labels": ["2.3", "bug", "cypher", "team-ux"], "url": "https://github.com/neo4j/neo4j/issues/6108", "title": "Closing the running query window in Browser does not terminate the query (2.3.1)", "closed": "2018-11-05 07:23:57", "commitsDetails": [], "commits": {}, "ttf": 1056.0002777777777, "created": "2015-12-14 16:52:37", "user": "genemishchenko", "body": "I have some queries running indefinitely hogging the system.\n\nWhen I close the window with the running query in the Browser, it briefly says \"terminating\" and closes the window, but from the reaource utilization I can see that the query execution still takes place and the  CPU time is still being consumed.\n\nOnly after I restart the instance the resource utilization goes back to normal.\n\nThanks.\nGene.\n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/6104", "title": "Degraded query performance in 2.3.1", "closed": "2016-10-20 13:28:46", "commitsDetails": [], "commits": {}, "ttf": 310.0002777777778, "created": "2015-12-14 16:23:09", "user": "genemishchenko", "body": "Hi.\n\nAfter migrating to Neo4j version 2.3.1 from 2.2.4 for my NLP application I see that some queries now hang the system. Before they took under a second to execute on the same hardware.\nI don't see any swapping going on, so memory is probably not an issue.\n\nMoreover, when I terminate the Java program that runs these queries I see from resource utilization that the DB engine is still working. To resolve that I have to shut down everything completely. That may be a separate issue.\n\nBelow is one of the queries that the new version of Neo4j stumbles on:\nmatch (d:Document{document_ID:5})--(s:Sentence)--(e_t1:Entity{ent_type:'TERM'})--(:Token)-[:next]->({word:'of'})-[:next]->()--(e_m1:Entity{ent_type:'MONEY'})--(:Token)-[:next]->(t_c2)-[:next]->()--(e_m2:Entity{ent_type:'MONEY'})--(:Token)-[:next]->({word:'in'})-[:next]->()--(e_t2:Entity{ent_type:'TERM'}) where t_c2.word in ['and','on'] return id(e_m1),id(e_m2);\n\nAny insight would be greatly appreciated.\nGene.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/6088", "title": "Testing, please ignore #2", "closed": "2015-12-16 15:16:34", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2015-12-12 22:43:55", "user": "jakewins", "body": ""}, {"labels": ["bolt server", "bug"], "url": "https://github.com/neo4j/neo4j/issues/6086", "title": "Testing, please ignore", "closed": "2017-06-22 14:49:56", "commitsDetails": [], "commits": {}, "ttf": 557.0002777777778, "created": "2015-12-12 19:46:23", "user": "jakewins", "body": ""}, {"labels": ["2.3", "bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/6084", "title": "Shell script errors on OSX with 2.3.1 edition", "closed": "2015-12-15 09:40:39", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2015-12-12 07:54:20", "user": "ascheman", "body": "I found two bugs in the OSX 2.3.1 community edition: Both, neo4j-shell and neo4j-import refuse to run with a similar error:\n\n`Error: Could not find or load main class org.neo4j.shell.StartClient`\n\nand\n\n`Error: Could not find or load main class org.neo4j.tooling.ImportTool`\n\nBoth are due to a wrong search for jar files in the distribution. Obviously they search for a `lib` directory beyond the base dir, e.g., `/Applications/Neo4j Community Edition.app/Contents/Resources/app/lib` which does not exist. The jars live in the `bin` directory.\n\nI have attached a ZIP with patches for these files: [neo4j-diffs.zip](https://github.com/neo4j/neo4j/files/60090/neo4j-diffs.zip).\nMaybe this can make it into the regression test suite for OSX in the future? ;-)\n"}, {"labels": ["2.3", "bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/6081", "title": "Issue with neo4j when starting up service on ubuntu 15.10", "closed": "2016-02-10 14:00:31", "commitsDetails": [], "commits": {}, "ttf": 60.000277777777775, "created": "2015-12-11 15:36:38", "user": "akash3456", "body": "WARNING: Max 1024 open files allowed, minimum of 40 000 recommended. See the Neo4j manual.\nStarting Neo4j Server...WARNING: not changing user\nprocess [5325]... waiting for server to be ready.. Failed to start within 120 seconds.\nNeo4j Server may have failed to start, please check the logs.\n\nis the terminal message i am getting when i execute sudo service neo4j-service start. the jdk and java_home env variables have been set. Any ideas would be greatly appreciated.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/6078", "title": "Testing, please ignore", "closed": "2015-12-12 19:46:09", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2015-12-11 13:49:56", "user": "jakewins", "body": "Well, I told you to ignore this - but here we are. Curiosity killed the cat, you know.. \n\nWe're just trialing our new GH issue tracking system, there won't be much interesting things happening on this ticket I'm afraid. Sorry!\n"}, {"labels": ["bug", "changelog", "cypher"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/6057", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"4c96f13817462e52b3441d58621f724c7202b75f": {"commitUser": "Mats-SX", "commitGHEventType": "closed"}}, "ttf": 41.000277777777775, "user": "ikwattro", "changesInPackagesGIT": [], "body": "Hi,\n\nBetter a test case to explain : \n\nGiven the following json : \n\n```\n{\n    \"statements\": [\n        {\n            \"statement\": \"UNWIND {props} as prop MERGE (p:Person {login: prop.login}) SET p.name = prop.name\",\n            \"parameters\": {\n                \"props\": [\n                    {\n                        \"login\": \"login1\",\n                        \"name\": \"name1\"\n                    },\n                    {\n                        \"login\": \"login2\",\n                        \"name\": \"name2\"\n                    }\n                ]\n            }\n        },\n        {\n            \"statement\": \"MATCH (n:Person) RETURN n\"\n        }\n    ]\n}\n```\n\nOnly one node will be in the database, strangely with the login property of the first parameter object with the name property of the second one .\n\nSee here the result : \n\n```\nkwattro@graphaware ~/dev> http -v POST \"http://localhost:7474/db/data/transaction/commit\" < test.json\nPOST /db/data/transaction/commit HTTP/1.1\nAccept: application/json\nAccept-Encoding: gzip, deflate\nConnection: keep-alive\nContent-Length: 354\nContent-Type: application/json\nHost: localhost:7474\nUser-Agent: HTTPie/0.9.2\n\n{\n    \"statements\": [\n        {\n            \"parameters\": {\n                \"props\": [\n                    {\n                        \"login\": \"login1\",\n                        \"name\": \"name1\"\n                    },\n                    {\n                        \"login\": \"login2\",\n                        \"name\": \"name2\"\n                    }\n                ]\n            },\n            \"statement\": \"UNWIND {props} as prop MERGE (p:Person {login: prop.login}) SET p.name = prop.name\"\n        },\n        {\n            \"statement\": \"MATCH (n:Person) RETURN n\"\n        }\n    ]\n}\n\nHTTP/1.1 200 OK\nAccess-Control-Allow-Origin: *\nContent-Length: 121\nContent-Type: application/json\nDate: Wed, 09 Dec 2015 10:20:12 GMT\nServer: Jetty(9.2.4.v20141103)\n\n{\n    \"errors\": [],\n    \"results\": [\n        {\n            \"columns\": [],\n            \"data\": []\n        },\n        {\n            \"columns\": [\n                \"n\"\n            ],\n            \"data\": [\n                {\n                    \"row\": [\n                        {\n                            \"login\": \"login1\",\n                            \"name\": \"name2\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n```\n\nThe behavior is the same with bolt\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "[3.0-M01][Cypher] Behavior of MERGE inside UNWIND broken", "statsSkippedReason": "", "closed": "2016-01-20 08:25:18", "commitsDetails": [{"commitUser": "Mats-SX", "commitDateTime": "2016-01-19 19:28:22", "commitHash": "4c96f13817462e52b3441d58621f724c7202b75f", "commitParents": ["8ae00bf9e50c1ec5c8bdffdf2fa60211cd503591"], "commitGHEventType": "closed", "nameRev": "4c96f13817462e52b3441d58621f724c7202b75f tags/3.0.0-M03~81^2", "commitGitStats": [{"insertions": 14, "lines": 16, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/UnwindAcceptanceTest.scala", "deletions": 2}, {"insertions": 0, "lines": 69, "filePath": "community/cypher/cypher-compiler-3.0/src/main/scala/org/neo4j/cypher/internal/compiler/v3_0/planner/logical/PlanSingleQuery.scala", "deletions": 69}], "commitSpoonAstDiffStats": [], "commitMessage": "Add test for MERGE inside UNWIND\n\nFixes #6057\nThis test confirms that issue #6057 was fixed by PR#6222\n+ Minor cleanup\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-01-19 19:18:19"}], "created": "2015-12-09 10:23:24"}, {"labels": ["2.3", "bug"], "url": "https://github.com/neo4j/neo4j/issues/6037", "title": "Unable to use Response.Status.METHOD_NOT_ALLOWED in Neo4J 2.3.1", "closed": "2017-07-14 18:53:43", "commitsDetails": [], "commits": {}, "ttf": 585.0002777777778, "created": "2015-12-07 07:16:53", "user": "david-nossebro", "body": "When trying to return \"Response.status(Response.Status.METHOD_NOT_ALLOWED).build();\" I get the following error:\n\n``` java\njava.lang.NoSuchFieldError: METHOD_NOT_ALLOWED\n        ... my boring classes...\n        at com.sun.jersey.spi.container.ContainerResponse.mapException(ContainerResponse.java:480)\n        at com.sun.jersey.spi.container.ContainerResponse.mapMappableContainerException(ContainerResponse.java:417)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1477)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n        at org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.Server.handle(Server.java:497)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n        at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\n        at java.lang.Thread.run(Thread.java:745)\n```\n\nI think we need to upgrade from jax-rs 1.1 to jax-rs 2.\n"}, {"labels": ["2.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/6036", "title": "Unnecessary deadlocks occur when using tx.acquireReadLock(..)", "closed": "2016-01-07 21:17:20", "commitsDetails": [], "commits": {}, "ttf": 32.000277777777775, "created": "2015-12-06 12:46:54", "user": "bachmanm", "body": "Neo4j 2.3.1. \n\nSimplified scenario of a real-world use case. I would like to make sure that threads that update something in the graph peacefully co-exist with reader threads. I was under the impression that this could be achieved using locks. Consider this test, where a single node exists in the database. Some threads are updating a single property, some threads are reading it. \n\n``` java\npublic class BugTest {\n\n    private GraphDatabaseService database;\n\n    @Before\n    public void setUp() {\n        database = new TestGraphDatabaseFactory().newImpermanentDatabase();\n        try (Transaction tx = database.beginTx()) {\n            database.createNode(DynamicLabel.label(\"Test\"));\n            tx.success();\n        }\n    }\n\n    @After\n    public void tearDown() {\n        database.shutdown();\n    }\n\n    @Test\n    public void verifyConcurrentInsertsAndFetchesFromTheLinkedList() throws InterruptedException {\n        ExecutorService executor = Executors.newFixedThreadPool(50);\n        int noRequests = 1000;\n        final AtomicBoolean success = new AtomicBoolean(true);\n\n        for (int i = 0; i < noRequests; i++) {\n            executor.execute(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        increment();\n                    } catch (Exception e) {\n                        success.set(false);\n                        e.printStackTrace();\n                    }\n                }\n            });\n            executor.execute(new Runnable() {\n                @Override\n                public void run() {\n                    try {\n                        System.out.println(\"counter = \" + get());\n                    } catch (Exception e) {\n                        success.set(false);\n                        e.printStackTrace();\n                    }\n                }\n            });\n        }\n\n        long start = System.currentTimeMillis();\n\n        executor.shutdown();\n        executor.awaitTermination(120, TimeUnit.SECONDS);\n\n        System.out.println(\"Took \" + (System.currentTimeMillis() - start) + \" ms\");\n\n        assertTrue(\"At least one operation failed\", success.get());\n\n        try (Transaction tx = database.beginTx()) {\n            assertEquals(noRequests, database.getNodeById(0).getProperty(\"counter\"));\n            tx.success();\n        }\n    }\n\n    private void increment() {\n        try (Transaction tx = database.beginTx()) {\n            Node node = database.getNodeById(0);\n\n            tx.acquireWriteLock(node);\n\n            node.setProperty(\"counter\", (int) node.getProperty(\"counter\", 0) + 1);\n\n            tx.success();\n        }\n    }\n\n    private int get() {\n        int result = -1;\n\n        try (Transaction tx = database.beginTx()) {\n            Node node = database.getNodeById(0);\n            tx.acquireReadLock(node);\n            result = (int) node.getProperty(\"counter\", 0);\n            tx.success();\n        }\n\n        return result;\n    }\n}\n```\n\nThis results in `DeadlockDetectedException` where the first one always look like this:\n\n```\norg.neo4j.kernel.DeadlockDetectedException: ForsetiClient[48] can't acquire UpdateLock{objectId=1486737951, refCount=1, holder=ForsetiClient[45]} on NODE(0), because holders of that lock are waiting for ForsetiClient[48].\n Wait list:SharedLock[\nClient[45] waits for []]\n    at org.neo4j.kernel.impl.enterprise.lock.forseti.ForsetiClient.markAsWaitingFor(ForsetiClient.java:782)\n    at org.neo4j.kernel.impl.enterprise.lock.forseti.ForsetiClient.acquireExclusive(ForsetiClient.java:276)\n    at org.neo4j.kernel.impl.api.LockingStatementOperations.acquireExclusive(LockingStatementOperations.java:504)\n```\n\nFrom the message, it actually seems it should not be a deadlock, because one of the clients waits for nothing (45 in this case).\n\nNote that removing `tx.acquireReadLock(node)` makes the tests pass, but there is a point to having it for the real-world use case, which reads/writes subgraphs (trees) rooted at that node. The idea is to have that root serve as _the_ lock for the entire tree. \n\nCheers!\n"}, {"labels": ["2.2", "bug", "changelog", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5996", "title": "Calling Transaction#terminate after close() causes the next Transaction to fail.", "closed": "2015-12-11 09:44:59", "commitsDetails": [], "commits": {}, "ttf": 9.000277777777777, "created": "2015-12-01 13:35:49", "user": "tkroman", "body": "The problem is easy to reproduce:\n- create a transaction\n- close it\n- wait till the next transaction with the same backing `KernelTransaction` is opened\n- an exception is thrown saying that the transaction is already terminated.\n\nI have a couple of deterministic tests that reproduce this issue using both the API and directly `KernelTransactionImplementation`: https://github.com/neo4j/neo4j/pull/5979/files#diff-bc0520c1d02de7734e4b39cfb4ee24b2R49\n\nI had a PR (#5979) suggesting a fix, but @tinwelint argued that it might introduce some undesired side-effects. Moreover, the idea of KTI pooling might not be the best choice since it brings some complications to the codebase.\n\nThe PR contains more detailed problem description, which I'd like not to copy-paste here since it's already linked.\n"}, {"labels": ["2.3", "bug", "changelog", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/5986", "title": "Cypher Planner WHERE partly broken", "closed": "2015-12-16 09:10:09", "commitsDetails": [], "commits": {}, "ttf": 16.00027777777778, "created": "2015-11-30 00:20:28", "user": "fpieper", "body": "The following cypher query is not working in 2.3.1:\n\n```\nMATCH (a:Foo{uuid:\"9a17617b-8bee-44c3-84ff-e2c0f8562803\"})<-[]-()<-[]-(b:Bar)\nWHERE a.latest_datetime > b.datetime\nRETURN a\n```\n\nThe problem is the where statement with two identifiers.\n\nThese two queries are working:\n\n```\nMATCH (a:Foo{uuid:\"9a17617b-8bee-44c3-84ff-e2c0f8562803\"})<-[]-()<-[]-(b:Bar)\nWHERE a.latest_datetime > 5\nRETURN a\n```\n\n```\nMATCH (a:Foo{uuid:\"9a17617b-8bee-44c3-84ff-e2c0f8562803\"})<-[]-()<-[]-(b:Bar)\nWHERE 5 > b.datetime\nRETURN a\n```\n\nWith the Workaround \"dbms.cypher.planner = RULE\", everything is working properly. And in 2.2 it was working.\n\nAny ideas?\n"}, {"labels": ["2.2", "bug", "cypher"], "filteredCommits": ["550f46d1992a1c9dee9d9cf905135a066e644b1b"], "url": "https://github.com/neo4j/neo4j/issues/5921", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"550f46d1992a1c9dee9d9cf905135a066e644b1b": {"commitUser": "Mats-SX", "commitGHEventType": "closed"}}, "ttf": 15.000277777777777, "user": "tomzeppenfeldt", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal"], "body": "We have some weird behaviour with collections :(\n\nneo4j-sh (?)$ export selection=[30688,27682]```\n\nThis query runs fine:\n\nneo4j-sh (?)$ with  {selection} as collection\n\n> match p=(n)-[_..3]-(m) \n> // no paths that pass through other nodes in the selection\n> where \n>     id(n) in collection\n>     and NOT (n IN TAIL(nodes(p)))\n> with id(m) as idm,id(n) as idn,length(p) as lp, count(_) as count,collection order by idm,idn,lp asc\n> with idm,idn,collect([lp,count]) as c1,collection\n>    where NOT idm IN collection\n> // weighing of paths.. each hop further a factor 10 less\n> with idm,idn, c1,reduce (score=0.0, i in c1 | score + (i[1]*10^(3-i[0]))) as reduced\n> with idm, collect([idn,reduced]) as cr, sum(reduced) as sr \n> with idm,cr,size(cr) as lcr, sr where lcr>1\n> with idm, cr, sr order by sr desc limit 5\n> unwind cr as rel\n> with idm as from,rel[0] as to,rel[1] as relscore\n> return *;\n> +--------------------------+\n> | from  | relscore | to    |\n> +--------------------------+\n> | 30668 | 36.0     | 30688 |\n> | 30668 | 2.0      | 27682 |\n> | 30196 | 24.0     | 30688 |\n> | 30196 | 1.0      | 27682 |\n> +--------------------------+\n> 4 rows\n> 56 ms\n\nnow adding two MATCH statements at the end causes an error \n\nneo4j-sh (?)$ with  {selection} as collection\n\n> match p=(n)-[_..3]-(m) \n> // no paths that pass through other nodes in the selection\n> where \n>     id(n) in collection\n>     and NOT (n IN TAIL(nodes(p)))\n> with id(m) as idm,id(n) as idn,length(p) as lp, count(_) as count,collection order by idm,idn,lp asc\n> with idm,idn,collect([lp,count]) as c1,collection\n>    where NOT idm IN collection\n> // weighing of paths.. each hop further a factor 10 less\n> with idm,idn, c1,reduce (score=0.0, i in c1 | score + (i[1]*10^(3-i[0]))) as reduced\n> with idm, collect([idn,reduced]) as cr, sum(reduced) as sr \n> with idm,cr,size(cr) as lcr, sr where lcr>1\n> with idm, cr, sr order by sr desc limit 5\n> unwind cr as rel\n> with idm as from,rel[0] as to,rel[1] as relscore\n> \n> match (n) where id(n)=from\n> match (m) where id(m)=to\n> return id(m),id(n);\n> 57 ms\n\nWARNING: Unexpected error during late semantic checking: Type mismatch: expected Collection<Integer> but was Collection<Number>\n\nbut when I replace the {selection} by static values, it does run again.\n\nneo4j-sh (?)$ with  [30688,27682] as collection\n\n> match p=(n)-[_..3]-(m) \n> // no paths that pass through other nodes in the selection\n> where \n>     id(n) in collection\n>     and NOT (n IN TAIL(nodes(p)))\n> with id(m) as idm,id(n) as idn,length(p) as lp, count(_) as count,collection order by idm,idn,lp asc\n> with idm,idn,collect([lp,count]) as c1,collection\n>    where NOT idm IN collection\n> // weighing of paths.. each hop further a factor 10 less\n> with idm,idn, c1,reduce (score=0.0, i in c1 | score + (i[1]*10^(3-i[0]))) as reduced\n> with idm, collect([idn,reduced]) as cr, sum(reduced) as sr \n> with idm,cr,size(cr) as lcr, sr where lcr>1\n> with idm, cr, sr order by sr desc limit 5\n> unwind cr as rel\n> with idm as from,rel[0] as to,rel[1] as relscore\n> \n> match (n) where id(n)=from\n> match (m) where id(m)=to\n> return id(m),id(n);\n> +---------------+\n> | id(m) | id(n) |\n> +---------------+\n> | 30688 | 30668 |\n> | 27682 | 30668 |\n> | 27682 | 30196 |\n> | 30688 | 30196 |\n> +---------------+\n> 4 rows\n> 246 ms\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Weird behaviour/ errors in 2.3.1    (worked fine in 2.2.2)", "statsSkippedReason": "", "closed": "2015-12-04 08:19:27", "commitsDetails": [{"commitUser": "Mats-SX", "commitDateTime": "2015-12-03 10:22:58", "commitHash": "550f46d1992a1c9dee9d9cf905135a066e644b1b", "commitParents": ["dbcacd78c01c032258caf264c19c638e4dd98d1e"], "commitGHEventType": "closed", "nameRev": "550f46d1992a1c9dee9d9cf905135a066e644b1b tags/3.0.0-M02~2^2^2~6^2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/PredicateExpressions.scala", "deletions": 1}, {"insertions": 28, "lines": 28, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/SemanticErrorAcceptanceTest.scala", "deletions": 0}, {"insertions": 51, "lines": 51, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/EqualsTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Make IN always expect Collection<Any>\n\nPreviously `IN` tried to be clever and calculate its expected right-hand\nside type by deriving from the left-hand side. This does not work when\nthe right-hand side has an integer of type CTNumber. From now on, `IN`\nwill always expect its right-hand side to be any collection.\n\nFixes #5921\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-12-02 16:39:27"}], "created": "2015-11-18 15:56:02"}, {"labels": ["2.2", "bug", "changelog", "cypher"], "filteredCommits": ["9ab18a7ecd0fb4d8893c4ab14785395d654f0372"], "url": "https://github.com/neo4j/neo4j/issues/5902", "gitStatsSummary": {"insertions": 2, "gitFilesChange": 1, "lines": 4, "deletions": 2}, "numCommits": 1, "commits": {"598b1c10823f9ed56c780a95dd81363eb8fdd282": {"commitUser": "craigtaverner", "commitGHEventType": "referenced"}, "9ab18a7ecd0fb4d8893c4ab14785395d654f0372": {"commitUser": "pontusmelke", "commitGHEventType": "closed"}}, "ttf": 11.000277777777777, "user": "aseemk", "changesInPackagesSPOON": ["org.neo4j.server.rest.transactional.integration.TransactionIT.correctStatusCodeWhenUsingHintWithoutAnyIndex()"], "changesInPackagesGIT": ["community/cypher/cypher/src/main/scala/org/neo4j/cypher/CypherException.scala"], "body": "I can't seem to repro this on console.neo4j.org, but at least locally, running Neo4j 2.2.6, when I make the following query via the `/db/data/transaction` REST API:\n\n``` cypher\nMATCH (n:Test)\nUSING INDEX n:Test(foo)\nWHERE n.foo = {foo}\nRETURN n\n```\n\nI get back a `Neo.DatabaseError.Statement.ExecutionFailure` instead of what used to be a `Neo.ClientError.Schema.NoSuchIndex`.\n\nThe error message and stack trace (pretty-printed below) look like the underlying error is still the same; it maybe just isn't being properly handled?\n\n```\norg.neo4j.kernel.impl.query.QueryExecutionKernelException: No such index found.\nLabel: `Test`\nProperty name: `index_09002856723964214`\n    at org.neo4j.cypher.javacompat.internal.ServerExecutionEngine.executeQuery(ServerExecutionEngine.java:65)\n    at org.neo4j.server.rest.transactional.TransactionHandle.executeStatements(TransactionHandle.java:327)\n    at org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:146)\n    at org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:211)\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\n    at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\n    at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n    at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\n    at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:587)\n    at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\n    at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\n    at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\n    at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\n    at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\n    at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\n    at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\n    at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n    at org.eclipse.jetty.server.Server.handle(Server.java:497)\n    at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\n    at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\n    at org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\n    at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\n    at java.lang.Thread.run(Thread.java:745)\nCaused by: org.neo4j.cypher.IndexHintException: No such index found.\nLabel: `Test`\nProperty name: `index_09002856723964214`\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_2$.indexHintException(CompatibilityFor2_2.scala:102)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_2$.indexHintException(CompatibilityFor2_2.scala:53)\n    at org.neo4j.cypher.internal.compiler.v2_2.IndexHintException.mapToPublic(CypherException.scala:92)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_2$.runSafely(CompatibilityFor2_2.scala:113)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$$anon$2.plan(CompatibilityFor2_2.scala:159)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$liftedTree1$1$1$$anonfun$apply$1.apply(ExecutionEngine.scala:154)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$liftedTree1$1$1$$anonfun$apply$1.apply(ExecutionEngine.scala:151)\n    at org.neo4j.cypher.internal.compiler.v2_2.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:35)\n    at org.neo4j.cypher.internal.compiler.v2_2.helpers.LRUCache.getOrElseUpdate(LRUCache.scala:34)\n    at org.neo4j.cypher.internal.compiler.v2_2.helpers.LRUCache.apply(LRUCache.scala:64)\n    at org.neo4j.cypher.internal.compiler.v2_2.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:33)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$liftedTree1$1$1.apply(ExecutionEngine.scala:151)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$liftedTree1$1$1.apply(ExecutionEngine.scala:151)\n    at scala.collection.Iterator$$anon$9.next(Iterator.scala:162)\n    at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\n    at scala.collection.Iterator$$anon$13.next(Iterator.scala:372)\n    at org.neo4j.cypher.ExecutionEngine.liftedTree1$1(ExecutionEngine.scala:163)\n    at org.neo4j.cypher.ExecutionEngine.planQuery(ExecutionEngine.scala:143)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:107)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:102)\n    at org.neo4j.cypher.javacompat.internal.ServerExecutionEngine.executeQuery(ServerExecutionEngine.java:61)\n    ... 30 more\n```\n\nNot sure exactly when this regression happened. Also haven't tested with 2.2.7 or 2.3.x yet.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 1, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "spoonFilesChanged": 1, "MOV": 0}, "title": "Regression: NoSuchIndex is now a DatabaseError", "statsSkippedReason": "", "closed": "2015-11-27 12:13:17", "commitsDetails": [{"commitUser": "craigtaverner", "commitDateTime": "2015-11-27 11:21:48", "commitHash": "598b1c10823f9ed56c780a95dd81363eb8fdd282", "commitParents": ["293a88d12d5212bf341b74479e17725dc4e63088", "9ab18a7ecd0fb4d8893c4ab14785395d654f0372"], "commitGHEventType": "referenced", "nameRev": "598b1c10823f9ed56c780a95dd81363eb8fdd282 tags/3.0.0-M02~2^2^2~12", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/CypherException.scala", "deletions": 2}, {"insertions": 36, "lines": 36, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/UsingAcceptanceTest.scala", "deletions": 0}, {"insertions": 13, "lines": 18, "filePath": "community/server/src/test/java/org/neo4j/server/rest/transactional/integration/TransactionIT.java", "deletions": 5}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.TransactionIT.correctStatusCodeWhenUsingHintWithoutAnyIndex()"}], "spoonFilePath": "TransactionIT.java"}], "commitMessage": "Merge pull request #5925 from pontusmelke/2.2-gh-5902\n\nCorrect status code when using hint with no index", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-11-27 11:21:48"}, {"commitUser": "pontusmelke", "commitDateTime": "2015-11-20 17:35:56", "commitHash": "9ab18a7ecd0fb4d8893c4ab14785395d654f0372", "commitParents": ["2b80c27c4844e9f0c0f35e862138416ef1517955"], "commitGHEventType": "closed", "nameRev": "9ab18a7ecd0fb4d8893c4ab14785395d654f0372 tags/3.0.0-M02~2^2^2~12^2", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/CypherException.scala", "deletions": 2}, {"insertions": 36, "lines": 36, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/UsingAcceptanceTest.scala", "deletions": 0}, {"insertions": 13, "lines": 18, "filePath": "community/server/src/test/java/org/neo4j/server/rest/transactional/integration/TransactionIT.java", "deletions": 5}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.integration.TransactionIT.correctStatusCodeWhenUsingHintWithoutAnyIndex()"}], "spoonFilePath": "TransactionIT.java"}], "commitMessage": "Correct status code when using hint with no index\n\nWhen using `USING INDEX` without there being any index the returned status\ncode should be a `Neo.ClientError.Schema.NoSuchIndex`\n\nfixes #5902\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-11-19 09:15:36"}], "created": "2015-11-16 05:12:16"}, {"labels": ["bug", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5901", "title": "neo4j-shell should honor line breaks in statements in a file", "closed": "2018-11-06 14:06:58", "commitsDetails": [], "commits": {}, "ttf": 1086.0002777777777, "created": "2015-11-15 21:33:56", "user": "obfischer", "body": "Given the following Cypher statement, which is valid and can be executed via `neo4j-shell`:\n\n```\nMATCH       (a)-[r]->(b)                // <1>\nRETURN     type(r)  AS relation, // <2>\n                    count(r) AS count    // <3>\nORDER BY count DESC            // <4>\nLIMIT           5;                            // <5>\n```\n\nIf I put this statement into a file and run it `neo4-j-shell -f statement.cypher` I will get the following error message from `neo4j-shell`:\n\n```\nWarning: Exiting with unterminated multi-line input.\n```\n\nIt seems so that `neo4j-shell` does not honor the line breaks in a statement file. \n\nI would expect that `neo4j-shell` will process the statment in the file as it does it if I enter the statment in the same form in `neo4j-shell`.\n"}, {"labels": ["bug", "team-kernel"], "filteredCommits": ["1f55804621348c5ec4ea0a436435ea9d353dcd2a"], "url": "https://github.com/neo4j/neo4j/issues/5880", "gitStatsSummary": {"insertions": 20, "gitFilesChange": 1, "lines": 25, "deletions": 5}, "numCommits": 1, "commits": {"1f55804621348c5ec4ea0a436435ea9d353dcd2a": {"commitUser": "chrisvest", "commitGHEventType": "closed"}}, "ttf": 736.0002777777778, "user": "kit-tolma", "changesInPackagesSPOON": ["org.neo4j.shell.kernel.GraphDatabaseShellServer.interpretLine(java.io.Serializable,java.lang.String,org.neo4j.shell.Output)", "org.neo4j.shell.kernel.GraphDatabaseShellServer.bindTransaction(java.io.Serializable)", "org.neo4j.shell.AppsIT.travMustRunCommandForAllPaths()", "org.neo4j.shell.AppsIT.travMustListAllPathsWithinDistance()"], "changesInPackagesGIT": ["community/shell/src/main/java/org/neo4j/shell/kernel"], "body": "Any trav -c \"...\" will rise a error. For example:\n\n```\nneo4j-sh (0)$ trav -d 2 -c \"ls $i\"\nThread[main,5,main] already has a transaction bound\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 4, "UPD": 3, "TOT": 11, "DEL": 0, "INS": 6, "spoonFilesChanged": 2, "MOV": 2}, "title": "neo4j-shell traversal with command on nodes (trav -c) is not working", "statsSkippedReason": "", "closed": "2017-11-15 16:22:06", "commitsDetails": [{"commitUser": "chrisvest", "commitDateTime": "2017-11-13 17:54:43", "commitHash": "1f55804621348c5ec4ea0a436435ea9d353dcd2a", "commitParents": ["d368ca1862d9ddb7d75d97a6e8d8370ed7d7f496"], "commitGHEventType": "closed", "nameRev": "1f55804621348c5ec4ea0a436435ea9d353dcd2a tags/3.4.0-alpha02~2^2~2^2~15^2~1", "commitGitStats": [{"insertions": 20, "lines": 25, "filePath": "community/shell/src/main/java/org/neo4j/shell/kernel/GraphDatabaseShellServer.java", "deletions": 5}, {"insertions": 70, "lines": 70, "filePath": "community/shell/src/test/java/org/neo4j/shell/AppsIT.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.AppsIT.travMustRunCommandForAllPaths()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.AppsIT.travMustListAllPathsWithinDistance()"}], "spoonFilePath": "AppsIT.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "DEL": 0, "INS": 2, "MOV": 2, "spoonMethodName": "org.neo4j.shell.kernel.GraphDatabaseShellServer.interpretLine(java.io.Serializable,java.lang.String,org.neo4j.shell.Output)"}, {"UPD": 3, "TOT": 5, "DEL": 0, "INS": 2, "MOV": 0, "spoonMethodName": "org.neo4j.shell.kernel.GraphDatabaseShellServer.bindTransaction(java.io.Serializable)"}], "spoonFilePath": "GraphDatabaseShellServer.java"}], "commitMessage": "Allow shell commands to execute sub-commands within their transactional context\n\nThis allows commands such as `trav -c` to work, which fixes #5880.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-11-13 17:54:43"}], "created": "2015-11-10 10:35:27"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/5851", "title": "All identifiers become unbound after UNWIND of [ ] or NULL", "closed": "2015-11-16 11:52:39", "commitsDetails": [], "commits": {}, "ttf": 10.000277777777777, "created": "2015-11-06 02:58:26", "user": "cybersam", "body": "This bug is a special case of https://github.com/neo4j/neo4j/issues/4315, which has been marked fixed.\n\nIn this special case, if a query unwinds an empty collection or a `NULL` value, then all identifiers become unbound.\n\n[Here is a console](http://console.neo4j.org/?id=fyt931) that show this bug when unwinding a `NULL`.\n\nThis is a serious bug. For instance, it would cause queries that UNWIND a collection obtained from an OPTIONAL MATCH to become unreliable -- as sometimes the collection may be `NULL`, and all identifiers would become unbound.\n"}, {"labels": ["2.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5811", "title": "Neo.DatabaseError.Statement.ExecutionFailure on match relationship", "closed": "2015-11-12 23:03:18", "commitsDetails": [], "commits": {}, "ttf": 10.000277777777777, "created": "2015-11-02 12:37:33", "user": "DigitalResonance", "body": "This problem started happening after we upgraded from 2.2.5 to 2.3.0\n\nWe have (:User) and (:Product) Nodes in our database.\nThere are 3 kinds of relationships between them\n[:View], [:Share], [:Buy]\n\nWe deleted the view relationships in order to recreate them from another data source.\n\nNow I get this error \"Neo.DatabaseError.Statement.ExecutionFailure\" when i execute the following statements\n\n\"match (:User)-[r]->(:Product) return count(r)\"      this query would previously return the count of the other relationships. This statement is used in our c# api code and fails. it also fails in the browser console.\n\nI also get the same error when I try \n\n\"match (:User)-[r:View]->(:Product) return count(r)\"   this query would previously return 0\nand \n\"match (u:User)-[r]->(p:Product) return u,r,p\" \nand\n\"optional match (:User)-[r]->(:Product) return r\"\n\nThis is the error data I receive on the console. was there a problem with the upgrade and what do i do to fix it\n\n{\n  \"results\": [\n    {\n      \"columns\": [\n        \"r\"\n      ],\n      \"data\": []\n    }\n  ],\n  \"errors\": [\n    {\n      \"code\": \"Neo.DatabaseError.Statement.ExecutionFailure\",\n      \"message\": null,\n      \"stackTrace\": \"java.lang.IndexOutOfBoundsException\\n\\tat org.neo4j.io.pagecache.impl.muninn.MuninnPageCursor.setOffset(MuninnPageCursor.java:419)\\n\\tat org.neo4j.kernel.impl.store.RelationshipGroupStore.readRecord(RelationshipGroupStore.java:143)\\n\\tat org.neo4j.kernel.impl.store.RelationshipGroupStore.forceGetRecord(RelationshipGroupStore.java:106)\\n\\tat org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.init(StoreNodeRelationshipCursor.java:89)\\n\\tat org.neo4j.kernel.impl.api.store.StoreAbstractNodeCursor.relationships(StoreAbstractNodeCursor.java:196)\\n\\tat org.neo4j.kernel.api.cursor.NodeItem$NodeItemHelper.getRelationships(NodeItem.java:87)\\n\\tat org.neo4j.kernel.impl.api.OperationsFacade.nodeGetRelationships(OperationsFacade.java:330)\\n\\tat org.neo4j.cypher.internal.spi.v2_3.TransactionBoundQueryContext.getRelationshipsForIds(TransactionBoundQueryContext.scala:143)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.spi.DelegatingQueryContext.getRelationshipsForIds(DelegatingQueryContext.scala:63)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.ExpandAllPipe$$anonfun$internalCreateResults$1.apply(ExpandAllPipe.scala:43)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.pipes.ExpandAllPipe$$anonfun$internalCreateResults$1.apply(ExpandAllPipe.scala:40)\\n\\tat scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:396)\\n\\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:413)\\n\\tat scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:369)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.ClosingIterator$$anonfun$next$1.apply(ResultIterator.scala:77)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.ClosingIterator$$anonfun$next$1.apply(ResultIterator.scala:72)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.ClosingIterator$$anonfun$failIfThrows$1.apply(ResultIterator.scala:121)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.ClosingIterator.decoratedCypherException(ResultIterator.scala:130)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.ClosingIterator.failIfThrows(ResultIterator.scala:119)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.ClosingIterator.next(ResultIterator.scala:72)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.ClosingIterator.next(ResultIterator.scala:50)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.PipeExecutionResult.next(PipeExecutionResult.scala:77)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.PipeExecutionResult.next(PipeExecutionResult.scala:40)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.helpers.iteratorToVisitable$.accept(iteratorToVisitable.scala:35)\\n\\tat org.neo4j.cypher.internal.compiler.v2_3.PipeExecutionResult.accept(PipeExecutionResult.scala:114)\\n\\tat org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor2_3$$anonfun$accept$1.apply$mcV$sp(CompatibilityFor2_3.scala:328)\\n\\tat org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor2_3$$anonfun$accept$1.apply(CompatibilityFor2_3.scala:327)\\n\\tat org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor2_3$$anonfun$accept$1.apply(CompatibilityFor2_3.scala:327)\\n\\tat org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.runSafely(CompatibilityFor2_3.scala:114)\\n\\tat org.neo4j.cypher.internal.compatibility.ExecutionResultWrapperFor2_3.accept(CompatibilityFor2_3.scala:327)\\n\\tat org.neo4j.cypher.javacompat.ExecutionResult.accept(ExecutionResult.java:309)\\n\\tat org.neo4j.server.rest.transactional.ExecutionResultSerializer.writeRows(ExecutionResultSerializer.java:436)\\n\\tat org.neo4j.server.rest.transactional.ExecutionResultSerializer.statementResult(ExecutionResultSerializer.java:110)\\n\\tat org.neo4j.server.rest.transactional.TransactionHandle.executeStatements(TransactionHandle.java:330)\\n\\tat org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:147)\\n\\tat org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:211)\\n\\tat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\\n\\tat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\\n\\tat com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\\n\\tat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:558)\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:733)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\\n\\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669)\\n\\tat org.neo4j.server.rest.dbms.AuthorizationFilter.doFilter(AuthorizationFilter.java:116)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.neo4j.server.rest.web.CollectUserAgentFilter.doFilter(CollectUserAgentFilter.java:69)\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\n\\tat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:497)\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\\n\\tat java.lang.Thread.run(Thread.java:745)\\n\"\n    }\n  ]\n}\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5804", "title": "Upgrade from 2.2.5 to 2.3.1: Embedded HA cluster slave \"Join timeout\"", "closed": "2016-01-14 16:04:53", "commitsDetails": [], "commits": {}, "ttf": 73.00027777777778, "created": "2015-11-02 07:27:18", "user": "ttiurani", "body": "Upgrading to 2.3.0 from 2.2.5 with three embedded servers failed with odd \"Join timeout\" on slaves. When I reverted back to 2.2.5, the cluster formed as before. I followed the HA upgrade instructions very closely.\n\nHere's what I did:\n1. Upgraded the master node to 2.3.0 in single server mode. Database worked correctly after upgrade.\n2. Started master node in 2.3.0 in HA mode. Database worked in HA mode on the master node correctly.\n3. Attempted to join slave both with empty database (as instructed) and with a copy of the migrated master node. In both cases got infinite \"Join timeout\".\n\nMaster node messages.log had the following:\n\n```\n2015-11-01 21:37:49.375+0000 DEBUG [o.n.c.p.a.m.AcceptorState$2] AcceptorState: acceptor-[prepare]->acceptor from:cluster://f37f932ea4c3:5001 instance:2 conversation-id:1/18# payload:PrepareState{ballot=1001}\n\n2015-11-01 21:37:49.377+0000 DEBUG [o.n.c.p.a.m.ProposerState$2] ProposerState: proposer-[promise]->proposer from:cluster://f37f932ea4c3:5001 instance:2 conversation-id:1/18# payload:PromiseState{ballot=1001, value=null}\n\n2015-11-01 21:37:49.382+0000 DEBUG [o.n.c.p.a.m.AcceptorState$2] AcceptorState: acceptor-[accept]->acceptor from:cluster://f37f932ea4c3:5001 instance:2 conversation-id:1/18# payload:AcceptState{ballot=1001, value=MemberIsAvailable[ Role: backup, InstanceId: 1, Role URI: backup://f37f932ea4c3:6362, Cluster URI: cluster://f37f932ea4c3:5001]}\n\n2015-11-01 21:37:49.384+0000 DEBUG [o.n.c.p.a.m.ProposerState$2] ProposerState: proposer-[accepted]->proposer from:cluster://f37f932ea4c3:5001 instance:2 conversation-id:1/18# payload:org.neo4j.cluster.protocol.atomicbroadcast.multipaxos.ProposerMessage$AcceptedState@0\n\n2015-11-01 21:37:49.393+0000 DEBUG [o.n.c.p.a.m.LearnerState$2] Learned and closed instance 2 from conversation 1/18# and the content was MemberIsAvailable[ Role: backup, InstanceId: 1, Role URI: backup://f37f932ea4c3:6362, Cluster URI: cluster://f37f932ea4c3:5001]\n\n2015-11-01 21:37:49.394+0000 DEBUG [o.n.c.p.a.m.LearnerState$2] LearnerState: learner-[learn]->learner from:cluster://f37f932ea4c3:5001 instance:2 conversation-id:1/18# payload:MemberIsAvailable[ Role: backup, InstanceId: 1, Role URI: backup://f37f932ea4c3:6362, Cluster URI: cluster://f37f932ea4c3:5001]\n\n2015-11-01 21:37:49.394+0000 DEBUG [o.n.c.p.a.m.AtomicBroadcastState$3] AtomicBroadcastState: broadcasting-[broadcastResponse]->broadcasting instance:2 conversation-id:1/18# payload:MemberIsAvailable[ Role: backup, InstanceId: 1, Role URI: backup://f37f932ea4c3:6362, Cluster URI: cluster://f37f932ea4c3:5001]\n\n2015-11-01 21:37:49.394+0000 INFO  [o.n.c.m.p.PaxosClusterMemberEvents] Snapshot:[MemberIsAvailable[ Role: master, InstanceId: 1, Role URI: ha://10.1.3.32:6001?serverId=1, Cluster URI: cluster://f37f932ea4c3:5001], MemberIsAvailable[ Role: backup, InstanceId: 1, Role URI: backup://f37f932ea4c3:6362, Cluster URI: cluster://f37f932ea4c3:5001]]\n\n2015-11-01 21:37:49.394+0000 INFO  [o.n.k.h.HighAvailabilityLogger] Instance 1 (this server)  is available as backup at backup://f37f932ea4c3:6362 with StoreId{creationTime=1379695447309, randomId=7646361417826440422, storeVersion=15250506225055238, upgradeTime=1446410229094, upgradeId=155530}\n\n2015-11-01 21:40:14.381+0000 INFO  [o.n.c.c.NetworkReceiver] cluster://10.1.75.92:38407 connected to me at cluster://f37f932ea4c3:5001\n\n2015-11-01 21:40:14.398+0000 DEBUG [o.n.c.p.c.ClusterState$4] ClusterState: entered-[configurationRequest]->entered from:cluster://10.1.75.92:5001 conversation-id:2/13# payload:ConfigurationRequestState{joiningId=2, joiningUri=cluster://4904f8bc473c:5001}\n\n2015-11-01 21:40:14.400+0000 INFO  [o.n.c.c.NetworkSender] cluster://f37f932ea4c3:5001 opened a new channel to /10.1.75.92:5001\n\n```\n\nAnd the slave node has the following:\n\n```\n015-11-01 21:40:14.387+0000 INFO  [o.n.c.m.p.PaxosClusterMemberAvailability] Listening at:cluster://4904f8bc473c:5001\n\n2015-11-01 21:40:14.394+0000 INFO  [o.n.c.c.ClusterJoin] Attempting to join cluster of [10.1.3.32:5001, 10.1.75.92:5001]\n\n2015-11-01 21:40:14.395+0000 DEBUG [o.n.c.p.c.ClusterState$1] ClusterState: start-[addClusterListener]->start conversation-id:2/12# payload:org.neo4j.cluster.client.ClusterJoin$UnknownJoiningMemberWarning@224694cf\n\n2015-11-01 21:40:14.396+0000 DEBUG [o.n.c.p.c.ClusterState$1] ClusterState: start-[join]->discovery conversation-id:2/13# payload:[mycluster, [cluster://10.1.3.32:5001, cluster://10.1.75.92:5001]]\n\n2015-11-01 21:40:14.397+0000 DEBUG [o.n.c.p.h.HeartbeatState$1] HeartbeatState: start-[reset_send_heartbeat]->start conversation-id:2/13#\n\n2015-11-01 21:40:14.431+0000 INFO  [o.n.c.c.NetworkReceiver] cluster://4904f8bc473c:57815 connected to me at cluster://4904f8bc473c:5001\n\n2015-11-01 21:40:14.436+0000 INFO  [o.n.c.c.NetworkSender] cluster://4904f8bc473c:5001 opened a new channel to /10.1.75.92:5001\n\n2015-11-01 21:40:14.438+0000 INFO  [o.n.c.c.NetworkSender] cluster://4904f8bc473c:5001 opened a new channel to /10.1.3.32:5001\n\n2015-11-01 21:40:14.457+0000 DEBUG [o.n.c.p.c.ClusterState$2] ClusterState: discovery-[configurationRequest]->discovery from:cluster://4904f8bc473c:5001 conversation-id:2/13# payload:ConfigurationRequestState{joiningId=2, joiningUri=cluster://4904f8bc473c:5001}\n\n2015-11-01 21:40:14.458+0000 INFO  [o.n.c.c.NetworkReceiver] cluster://10.1.3.32:60667 connected to me at cluster://4904f8bc473c:5001\n\n2015-11-01 21:40:14.462+0000 INFO  [o.n.c.p.c.ClusterState] Joining cluster mycluster\n\n2015-11-01 21:40:14.463+0000 INFO  [o.n.c.p.c.ClusterState] 2 joining:Name:mycluster Nodes:{1=cluster://f37f932ea4c3:5001} Roles:{coordinator=1}, last delivered:2\n\n2015-11-01 21:40:14.463+0000 DEBUG [o.n.c.p.c.ClusterState] Setup join timeout for 2/13#\n\n2015-11-01 21:40:14.463+0000 DEBUG [o.n.c.p.c.ClusterState$2] ClusterState: discovery-[configurationResponse]->joining from:cluster://10.1.3.32:5001 conversation-id:2/13# payload:ConfigurationResponseState{nodes={1=cluster://f37f932ea4c3:5001}, latestReceivedInstanceId=2, roles={coordinator=1}, clusterName='mycluster'}\n\n2015-11-01 21:40:14.463+0000 DEBUG [o.n.c.p.h.HeartbeatState$1] HeartbeatState: start-[reset_send_heartbeat]->start conversation-id:2/13# payload:1\n\n2015-11-01 21:40:14.464+0000 DEBUG [o.n.c.p.a.m.AtomicBroadcastState$1] AtomicBroadcastState: start-[join]->joining conversation-id:2/13#\n\n2015-11-01 21:40:14.464+0000 DEBUG [o.n.c.p.a.m.LearnerState$1] LearnerState: start-[join]->learner conversation-id:2/13#\n\n2015-11-01 21:40:14.465+0000 DEBUG [o.n.c.p.a.m.AcceptorState$1] AcceptorState: start-[join]->acceptor conversation-id:2/13#\n\n2015-11-01 21:40:14.522+0000 WARN  [o.n.c.c.NetworkSender] Client could not connect to f37f932ea4c3:5001\n\n2015-11-01 21:40:44.468+0000 INFO  [o.n.c.p.c.ClusterState] Join timeout for 2/13#\n\n2015-11-01 21:40:44.468+0000 DEBUG [o.n.c.p.c.ClusterState$3] ClusterState: joining-[joiningTimeout]->discovery conversation-id:2/13# payload:cluster://10.1.3.32:5001\n\n2015-11-01 21:40:44.469+0000 DEBUG [o.n.c.p.h.HeartbeatState$1] HeartbeatState: start-[reset_send_heartbeat]->start conversation-id:2/13#\n\n2015-11-01 21:40:44.469+0000 DEBUG [o.n.c.p.h.HeartbeatState$1] HeartbeatState: start-[i_am_alive]->start from:cluster://10.1.3.32:5001 conversation-id:2/13# payload:i_am_alive[1]\n\n2015-11-01 21:40:44.473+0000 DEBUG [o.n.c.p.c.ClusterState$2] ClusterState: discovery-[configurationRequest]->discovery from:cluster://4904f8bc473c:5001 conversation-id:2/13# payload:ConfigurationRequestState{joiningId=2, joiningUri=cluster://4904f8bc473c:5001}\n\n2015-11-01 21:40:44.476+0000 INFO  [o.n.c.p.c.ClusterState] Joining cluster mycluster\n\n2015-11-01 21:40:44.476+0000 INFO  [o.n.c.p.c.ClusterState] 2 joining:Name:mycluster Nodes:{1=cluster://f37f932ea4c3:5001} Roles:{coordinator=1}, last delivered:2\n\n2015-11-01 21:40:44.476+0000 DEBUG [o.n.c.p.c.ClusterState] Setup join timeout for 2/13#\n\n2015-11-01 21:40:44.476+0000 DEBUG [o.n.c.p.c.ClusterState$2] ClusterState: discovery-[configurationResponse]->joining from:cluster://10.1.3.32:5001 conversation-id:2/13# payload:ConfigurationResponseState{nodes={1=cluster://f37f932ea4c3:5001}, latestReceivedInstanceId=2, roles={coordinator=1}, clusterName='mycluster'}\n\n2015-11-01 21:40:44.476+0000 DEBUG [o.n.c.p.h.HeartbeatState$1] HeartbeatState: start-[reset_send_heartbeat]->start conversation-id:2/13# payload:1\n\n2015-11-01 21:40:44.476+0000 DEBUG [o.n.c.p.a.m.AtomicBroadcastState$2] AtomicBroadcastState: joining-[join]->joining conversation-id:2/13#\n\n2015-11-01 21:40:44.477+0000 DEBUG [o.n.c.p.a.m.LearnerState$2] LearnerState: learner-[join]->learner conversation-id:2/13#\n\n2015-11-01 21:40:44.477+0000 DEBUG [o.n.c.p.a.m.AcceptorState$2] AcceptorState: acceptor-[join]->acceptor conversation-id:2/13#\n\n2015-11-01 21:40:44.477+0000 DEBUG [o.n.c.p.h.HeartbeatState$1] HeartbeatState: start-[i_am_alive]->start from:cluster://10.1.3.32:5001 conversation-id:2/13# payload:i_am_alive[1]\n\n2015-11-01 21:41:14.477+0000 INFO  [o.n.c.p.c.ClusterState] Join timeout for 2/13#\n\n```\n\n\"Join timeout\" continued infinitely. Notice how connection is accepted between the master and the slave, and a port is opened. So this is not a simple network issue. Also with the exact same setup, but with Neo4j 2.2.5, slaves connect normally, without any join timeouts.\n\nDid something relating to this change from 2.2.5->3.0.0? It would seem that this is not a problem with the upgrade, as connecting to the cluster fails before any upgrade can take place. I also verified that the database files on the slave did not change, i.e. syncing did not start.\n"}, {"labels": ["2.2", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/5799", "title": "Variable length relationships with length 1 can fail", "closed": "2015-11-09 13:10:53", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2015-10-31 17:01:08", "user": "cybersam", "body": "See http://stackoverflow.com/questions/33447234/cypher-linkedlist-match-by-index-but-dont-know-how-to-compare-that-instead/33453990#33453990\n\n[Here is a console](http://console.neo4j.org/r/v1htg0) that shows the problem.\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5785", "title": "Java heap space out of memory error with neo4j 1.9.9 and Oracle java 8", "closed": "2017-11-13 11:23:03", "commitsDetails": [], "commits": {}, "ttf": 745.0002777777778, "created": "2015-10-29 13:01:17", "user": "chiffa", "body": "I have had a code I have been running in production for two years that has been miserably failing with neo4j 1.9.9 and latest Oracle java 8 on the a new machine\n\nI am performing an inserting of a dataset from python code using bulbflow adapters, it seems that neo4j keeps all the data in the memory (no garbage collection?)\n\nWith 4 Gb of RAM allocated to neo4j java process, this amount of data saturates the machine and leads to failure:\n\n25 k nodes\n35 k relationships\n122k properties. \n\nWe are nowhere near 100 M nodes limit claimed by the doc for that amount of allocated RAM. \nWhat steps could I perform to figure out where is the problem and debug it? \n"}, {"labels": ["2.3", "bug", "cypher"], "filteredCommits": ["f7f0daf6a73474bff5a1436d173a87f88e6f93c5"], "url": "https://github.com/neo4j/neo4j/issues/5745", "gitStatsSummary": {"insertions": 6, "gitFilesChange": 1, "lines": 7, "deletions": 1}, "numCommits": 1, "commits": {"f7f0daf6a73474bff5a1436d173a87f88e6f93c5": {"commitUser": "Mats-SX", "commitGHEventType": "closed"}}, "ttf": 6.000277777777778, "user": "jonathancrosmer", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.3/src/main/scala/org/neo4j/cypher/internal"], "body": "We had a Cypher 2.1 query that included a clause like `ORDER BY n.bool DESC` where `n.bool` is a Boolean property.  After upgrading to 2.3, the query throws an exception.  I didn't test 2.2.\n\n```\nCaused by: org.neo4j.cypher.IncomparableValuesException: Don't know how to compare that. Left: false (Boolean); Right: false (Boolean)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.incomparableValuesException(CompatibilityFor2_3.scala:67) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.incomparableValuesException(CompatibilityFor2_3.scala:58) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.frontend.v2_3.IncomparableValuesException.mapToPublic(CypherException.scala:115) ~[org.neo4j.neo4j-cypher-frontend-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.runSafely(CompatibilityFor2_3.scala:119) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper.run(CompatibilityFor2_3.scala:191) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:27) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:118) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:104) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:87) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.springframework.data.neo4j.support.query.CypherQueryEngineImpl.parseAndExecuteQuery(CypherQueryEngineImpl.java:71) ~[org.springframework.data.spring-data-neo4j-3.4.0.RELEASE.jar:na]\n    ... 41 common frames omitted\nCaused by: org.neo4j.cypher.internal.frontend.v2_3.IncomparableValuesException: null\n    at org.neo4j.cypher.internal.compiler.v2_3.Comparer$class.compare(Comparer.scala:38) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.TopPipe.compare(TopPipe.scala:35) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.TopPipe$LessThanComparator.compare(TopPipe.scala:50) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.TopPipe$LessThanComparator.compare(TopPipe.scala:44) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at java.util.TimSort.countRunAndMakeAscending(TimSort.java:324) ~[na:1.7.0_79]\n    at java.util.TimSort.sort(TimSort.java:189) ~[na:1.7.0_79]\n    at java.util.TimSort.sort(TimSort.java:173) ~[na:1.7.0_79]\n    at java.util.Arrays.sort(Arrays.java:659) ~[na:1.7.0_79]\n    at scala.collection.SeqLike$class.sorted(SeqLike.scala:648) ~[org.scala-lang.scala-library-2.11.7.jar:na]\n    at scala.collection.mutable.ArrayOps$ofRef.sorted(ArrayOps.scala:186) ~[org.scala-lang.scala-library-2.11.7.jar:na]\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.TopPipe.internalCreateResults(TopPipe.scala:96) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.PipeWithSource.createResults(Pipe.scala:125) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.PipeWithSource.createResults(Pipe.scala:122) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.PipeWithSource.createResults(Pipe.scala:122) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.PipeWithSource.createResults(Pipe.scala:122) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:93) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:63) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:230) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:214) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anon$3.run(ExecutionPlanBuilder.scala:172) ~[org.neo4j.neo4j-cypher-compiler-2.3-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_3.scala:192) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_3.scala:192) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.runSafely(CompatibilityFor2_3.scala:114) ~[org.neo4j.neo4j-cypher-2.3.0.jar:2.3.0]\n    ... 47 common frames omitted\n```\n\nWorkaround:\n\n`ORDER BY (CASE my.bool WHEN TRUE THEN 0 ELSE 1 END)`\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Regression: cannot order by boolean in 2.3", "statsSkippedReason": "", "closed": "2015-11-02 15:47:16", "commitsDetails": [{"commitUser": "Mats-SX", "commitDateTime": "2015-11-02 13:36:39", "commitHash": "f7f0daf6a73474bff5a1436d173a87f88e6f93c5", "commitParents": ["aff3eaed716d5a055ba75b4bc401c399c6dd34c6"], "commitGHEventType": "closed", "nameRev": "f7f0daf6a73474bff5a1436d173a87f88e6f93c5 tags/2.3.1~38^2", "commitGitStats": [{"insertions": 33, "lines": 34, "filePath": "community/cypher/acceptance/src/test/scala/org/neo4j/internal/cypher/acceptance/OrderByAcceptanceTest.scala", "deletions": 1}, {"insertions": 6, "lines": 7, "filePath": "community/cypher/cypher-compiler-2.3/src/main/scala/org/neo4j/cypher/internal/compiler/v2_3/Comparer.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix a bug where ORDER BY couldn't order booleans\n\nFixes #5745\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-11-02 13:14:56"}], "created": "2015-10-27 12:29:56"}, {"labels": ["2.3", "bug", "cypher", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5735", "title": "DELETE statement fails", "closed": "2016-01-15 14:26:33", "commitsDetails": [], "commits": {}, "ttf": 80.00027777777778, "created": "2015-10-26 16:36:38", "user": "djvs", "body": "```\nneo4j-sh (?)$ MATCH (node)-[n]-() WHERE ID(n) = 255393 DELETE n;\nnull\nneo4j-sh (?)$ MATCH (node)-[n]-() WHERE ID(n) = 255393 RETURN n;\n+----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| n                                                                                                                                                              |\n+----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| :routes[255393]{...} |\n| :routes[255393]{...} |\n+----------------------------------------------------------------------------------------------------------------------------------------------------------------+\n```\n\nMaybe my database is corrupted?  I really have no idea at this point.  I have done neo4j-backup and neo4j-import in the last week to try to resolve any corruption, but am experiencing all kinds of problems like this.  Why is it returning \"null\"?\n\nThese same types of queries - deletes and I believe also updates - are failing on _all_ rels. \n\nThis is urgent for us...please help!!!\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/5682", "title": "Change configuration to start binding 0.0.0.0 keep sayng localhost on console", "closed": "2016-01-07 10:23:50", "commitsDetails": [], "commits": {}, "ttf": 78.00027777777778, "created": "2015-10-21 03:08:11", "user": "antonini", "body": "I changed my `neo4j-server.properties` to bind the server listening to `0.0.0.0`.\n\nWhen I execute: `$ neo4j start`, Neo4J keeps me saying that it is available over `http://localhost:7474`.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/5653", "title": "[2.3.0-RC1][Cypher] Unable to load node with ID 1 When deleting node", "closed": "2016-01-19 12:25:29", "commitsDetails": [], "commits": {}, "ttf": 95.00027777777778, "created": "2015-10-16 12:00:39", "user": "ikwattro", "body": "Hi,\n\nFresh Install of RC1.\n\nExecute Cypher : \n\n```\nCREATE (:Person {name:'Michal'})-[:FRIEND_OF {since:2007}]->(:Person {name:'Daniela'})\n```\n\nThen try to MATCH the whole pattern and delete it : \n\n```\nMATCH (p1:Person {name:'Michal'})-[r:FRIEND_OF {since:2007}]->(p2:Person {name:'Daniela'}) DELETE r, p1, p2\n```\n\nResult in the following error : \n\n```\nUnable to load NODE with id 1.\n```\n\nResult is same in the browser and in our testing suite.\n\nSeems related to issue #5598 \n\nStacktrace : \n\n```\norg.neo4j.kernel.api.exceptions.EntityNotFoundException: Unable to load NODE with id 1.\n    at org.neo4j.kernel.impl.api.StateHandlingStatementOperations.nodeCursorById(StateHandlingStatementOperations.java:138)\n    at org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.nodeCursorById(ConstraintEnforcingEntityOperations.java:394)\n    at org.neo4j.kernel.impl.api.OperationsFacade.nodeGetRelationships(OperationsFacade.java:317)\n    at org.neo4j.cypher.internal.spi.v2_3.TransactionBoundQueryContext.getRelationshipsForIds(TransactionBoundQueryContext.scala:146)\n    at org.neo4j.cypher.internal.compiler.v2_3.spi.DelegatingQueryContext.getRelationshipsForIds(DelegatingQueryContext.scala:63)\n    at org.neo4j.cypher.internal.compiler.v2_3.spi.DelegatingQueryContext.getRelationshipsForIds(DelegatingQueryContext.scala:63)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.matching.SingleStep$$anonfun$1.apply(SingleStep.scala:46)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.matching.SingleStep$$anonfun$1.apply(SingleStep.scala:45)\n    at org.neo4j.cypher.internal.compiler.v2_3.helpers.DynamicIterable$$anon$1.iterator(DynamicIterable.scala:29)\n    at org.neo4j.cypher.internal.compiler.v2_3.helpers.DynamicJavaIterable$$anon$3.iterator(DynamicIterable.scala:39)\n    at org.neo4j.kernel.impl.traversal.TraversalBranchWithState.expandRelationshipsWithoutChecks(TraversalBranchWithState.java:71)\n    at org.neo4j.kernel.impl.traversal.TraversalBranchImpl.expandRelationships(TraversalBranchImpl.java:104)\n    at org.neo4j.kernel.impl.traversal.StartNodeTraversalBranch.next(StartNodeTraversalBranch.java:47)\n    at org.neo4j.kernel.impl.traversal.AsOneStartBranch.next(AsOneStartBranch.java:109)\n    at org.neo4j.graphdb.traversal.PreorderDepthFirstSelector.next(PreorderDepthFirstSelector.java:49)\n    at org.neo4j.kernel.impl.traversal.MonoDirectionalTraverserIterator.fetchNextOrNull(MonoDirectionalTraverserIterator.java:65)\n    at org.neo4j.kernel.impl.traversal.MonoDirectionalTraverserIterator.fetchNextOrNull(MonoDirectionalTraverserIterator.java:36)\n    at org.neo4j.helpers.collection.PrefetchingIterator.peek(PrefetchingIterator.java:60)\n    at org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:46)\n    at scala.collection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:396)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:396)\n    at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:413)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:396)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.EmptyResultPipe.internalCreateResults(EmptyResultPipe.scala:30)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.PipeWithSource.createResults(Pipe.scala:127)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:93)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:63)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:230)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:214)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anon$3.run(ExecutionPlanBuilder.scala:172)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_3.scala:192)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_3.scala:192)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.runSafely(CompatibilityFor2_3.scala:114)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper.run(CompatibilityFor2_3.scala:191)\n    at org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:27)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:118)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:112)\n    at org.neo4j.cypher.javacompat.internal.ServerExecutionEngine.executeQuery(ServerExecutionEngine.java:62)\n    at org.neo4j.kernel.impl.factory.GraphDatabaseFacade.execute(GraphDatabaseFacade.java:333)\n    at org.neo4j.kernel.impl.factory.GraphDatabaseFacade.execute(GraphDatabaseFacade.java:323)\n```\n"}, {"labels": ["2.3", "bug", "cypher"], "filteredCommits": ["b970d68071efbe264c771d0c31096ab763021705"], "url": "https://github.com/neo4j/neo4j/issues/5598", "gitStatsSummary": {"insertions": 2, "gitFilesChange": 1, "lines": 4, "deletions": 2}, "numCommits": 1, "commits": {"b970d68071efbe264c771d0c31096ab763021705": {"commitUser": "craigtaverner", "commitGHEventType": "closed"}}, "ttf": 99.00027777777778, "user": "jotomo", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.3/src/main/scala/org/neo4j/cypher/internal"], "body": "In the hopes that the ability to delete paths is here to stay :-)\nThe error in the subject is from the browser, which is reproduced below with the shell.\n\n```\n$ cat del-path.cql \nmatch (n) return count(*);\ncreate (:Test)-[:R]->(:Test);\nmatch p=(n:Test)-[*]-() delete p;\nmatch p=(n:Test)-[*]-() detach delete p; // isn't executed due to previous error, yields same result\n\n$ neo4j-shell -path test.db -v -file del-path.cql \n\n+----------+\n| count(*) |\n+----------+\n| 0        |\n+----------+\n1 row\n984 ms\n+-------------------+\n| No data returned. |\n+-------------------+\nNodes created: 2\nRelationships created: 1\nLabels added: 2\n102 ms\nERROR (-v for expanded information):\n    EntityNotFoundException: Unable to load NODE with id 1.\norg.neo4j.kernel.api.exceptions.EntityNotFoundException: Unable to load NODE with id 1.\n    at org.neo4j.kernel.impl.api.StateHandlingStatementOperations.nodeCursorById(StateHandlingStatementOperations.java:138)\n    at org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.nodeCursorById(ConstraintEnforcingEntityOperations.java:394)\n    at org.neo4j.kernel.impl.api.OperationsFacade.nodeGetRelationships(OperationsFacade.java:328)\n    at org.neo4j.cypher.internal.spi.v2_3.TransactionBoundQueryContext.getRelationshipsForIds(TransactionBoundQueryContext.scala:135)\n    at org.neo4j.cypher.internal.compiler.v2_3.spi.DelegatingQueryContext.getRelationshipsForIds(DelegatingQueryContext.scala:59)\n    at org.neo4j.cypher.internal.compiler.v2_3.spi.DelegatingQueryContext.getRelationshipsForIds(DelegatingQueryContext.scala:59)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.matching.VarLengthStep$$anonfun$1.apply(VarLengthStep.scala:87)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.matching.VarLengthStep$$anonfun$1.apply(VarLengthStep.scala:87)\n    at org.neo4j.cypher.internal.compiler.v2_3.helpers.DynamicIterable$$anon$1.iterator(DynamicIterable.scala:29)\n    at scala.collection.IterableLike$class.isEmpty(IterableLike.scala:81)\n    at org.neo4j.cypher.internal.compiler.v2_3.helpers.DynamicIterable$$anon$1.isEmpty(DynamicIterable.scala:28)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.matching.VarLengthStep.expand(VarLengthStep.scala:90)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.matching.TraversalPathExpander.expand(TraversalPathExpander.scala:37)\n    at org.neo4j.kernel.impl.traversal.TraversalBranchWithState.expandRelationshipsWithoutChecks(TraversalBranchWithState.java:70)\n    at org.neo4j.kernel.impl.traversal.TraversalBranchImpl.expandRelationships(TraversalBranchImpl.java:104)\n    at org.neo4j.kernel.impl.traversal.StartNodeTraversalBranch.next(StartNodeTraversalBranch.java:47)\n    at org.neo4j.kernel.impl.traversal.AsOneStartBranch.next(AsOneStartBranch.java:109)\n    at org.neo4j.graphdb.traversal.PreorderDepthFirstSelector.next(PreorderDepthFirstSelector.java:49)\n    at org.neo4j.kernel.impl.traversal.MonoDirectionalTraverserIterator.fetchNextOrNull(MonoDirectionalTraverserIterator.java:65)\n    at org.neo4j.kernel.impl.traversal.MonoDirectionalTraverserIterator.fetchNextOrNull(MonoDirectionalTraverserIterator.java:36)\n    at org.neo4j.helpers.collection.PrefetchingIterator.peek(PrefetchingIterator.java:60)\n    at org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:46)\n    at scala.collection.convert.Wrappers$JIteratorWrapper.hasNext(Wrappers.scala:42)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:396)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:396)\n    at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:369)\n    at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:396)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.EmptyResultPipe.internalCreateResults(EmptyResultPipe.scala:30)\n    at org.neo4j.cypher.internal.compiler.v2_3.pipes.PipeWithSource.createResults(Pipe.scala:125)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:93)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:63)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:230)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:214)\n    at org.neo4j.cypher.internal.compiler.v2_3.executionplan.ExecutionPlanBuilder$$anon$3.run(ExecutionPlanBuilder.scala:172)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_3.scala:192)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_3.scala:192)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_3$.runSafely(CompatibilityFor2_3.scala:114)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_3$ExecutionPlanWrapper.run(CompatibilityFor2_3.scala:191)\n    at org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:27)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:118)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:112)\n    at org.neo4j.cypher.javacompat.internal.ServerExecutionEngine.executeQuery(ServerExecutionEngine.java:62)\n    at org.neo4j.shell.kernel.apps.cypher.Start.getResult(Start.java:87)\n    at org.neo4j.shell.kernel.apps.cypher.Start.exec(Start.java:68)\n    at org.neo4j.shell.kernel.apps.TransactionProvidingApp.execute(TransactionProvidingApp.java:253)\n    at org.neo4j.shell.impl.AbstractAppServer.interpretLine(AbstractAppServer.java:126)\n    at org.neo4j.shell.kernel.GraphDatabaseShellServer.interpretLine(GraphDatabaseShellServer.java:96)\n    at org.neo4j.shell.impl.AbstractClient.evaluate(AbstractClient.java:149)\n    at org.neo4j.shell.impl.AbstractClient.evaluate(AbstractClient.java:133)\n    at org.neo4j.shell.StartClient.executeCommandStream(StartClient.java:394)\n    at org.neo4j.shell.StartClient.grabPromptOrJustExecuteCommand(StartClient.java:373)\n    at org.neo4j.shell.StartClient.tryStartLocalServerAndClient(StartClient.java:274)\n    at org.neo4j.shell.StartClient.startLocal(StartClient.java:247)\n    at org.neo4j.shell.StartClient.start(StartClient.java:180)\n    at org.neo4j.shell.StartClient.main(StartClient.java:135)\n\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "[2.3.0-M03] Neo.ClientError.Statement.EntityNotFound when attempting to delete a path", "statsSkippedReason": "", "closed": "2016-01-19 12:23:47", "commitsDetails": [{"commitUser": "craigtaverner", "commitDateTime": "2016-01-18 11:39:08", "commitHash": "b970d68071efbe264c771d0c31096ab763021705", "commitParents": ["b7d0bcb766025f274a3d6600a2326b5471a7d0f3"], "commitGHEventType": "closed", "nameRev": "b970d68071efbe264c771d0c31096ab763021705 tags/3.0.0-M03~3^2~8^2", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-compiler-2.3/src/main/scala/org/neo4j/cypher/internal/compiler/v2_3/mutation/DeleteEntityAction.scala", "deletions": 2}, {"insertions": 20, "lines": 20, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/EagerizationAcceptanceTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix issue with deleting paths\n\nFixes #5598\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-01-18 11:39:08"}], "created": "2015-10-11 12:38:42"}, {"labels": ["2.2", "2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/5545", "title": "`Neo.DatabaseError.Statement.ExecutionFailure` on combination of ORDER BY and LIMIT 0", "closed": "2015-10-10 15:01:45", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2015-10-05 19:34:54", "user": "s101d1", "body": "I found this bug on Neo4j v2.2.5.\n\nFirst, insert some sample nodes like:\n\n```\nmerge (a1:Actor {id: \"1\", name: \"A\"})\nmerge (a2:Actor {id: \"2\", name: \"B\"})\nmerge (a3:Actor {id: \"3\", name: \"C\"})\nmerge (a4:Actor {id: \"4\", name: \"D\"})\n```\n\nThen run this query:\n\n```\nmatch (a:Actor)\nreturn a\norder by a.name\nlimit 0;\n```\n\nI got `Neo.DatabaseError.Statement.ExecutionFailure = 0` error message after running the query.\n\nThis bug only occur if there are `ORDER BY` and `LIMIT 0` on the query.\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5542", "title": "InvalidRecordException while traversing relationships", "closed": "2018-05-08 12:50:02", "commitsDetails": [], "commits": {}, "ttf": 945.0002777777778, "created": "2015-10-05 15:02:22", "user": "tkroman", "body": "Encountered this while our app was running tests. \n\n```\norg.neo4j.kernel.impl.store.InvalidRecordException: While loading relationships for Node[2] a Relationship[942038] was encountered that had startNode: 477342 and endNode: 668973, i.e. which had neither start nor end node as the node we're loading relationships for\nat org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.next(StoreNodeRelationshipCursor.java:172) ~[bochka-latest-jar-with-dependencies.jar:na]\nat org.neo4j.kernel.impl.api.store.CursorRelationshipIterator.nextCursor(CursorRelationshipIterator.java:52) ~[bochka-latest-jar-with-dependencies.jar:na]\nat org.neo4j.kernel.impl.api.store.CursorRelationshipIterator.<init>(CursorRelationshipIterator.java:45) ~[bochka-latest-jar-with-dependencies.jar:na]\nat org.neo4j.kernel.api.cursor.NodeItem$NodeItemHelper.getRelationships(NodeItem.java:81) ~[bochka-latest-jar-with-dependencies.jar:na]\nat org.neo4j.kernel.impl.api.OperationsFacade.nodeGetRelationships(OperationsFacade.java:319) ~[bochka-latest-jar-with-dependencies.jar:na]\nat org.neo4j.kernel.impl.core.NodeProxy$2.iterator(NodeProxy.java:201) ~[bochka-latest-jar-with-dependencies.jar:na]\nat org.neo4j.kernel.impl.core.NodeProxy$2.iterator(NodeProxy.java:193) ~[bochka-latest-jar-with-dependencies.jar:na]\n...\n```\n\nAs I understand, this is quite weird. Are there any ways I could provide you with more information?\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/5433", "title": "RPM incorrectly removes user/group on upgrade", "closed": "2017-01-19 08:42:00", "commitsDetails": [], "commits": {}, "ttf": 483.0002777777778, "created": "2015-09-23 22:05:06", "user": "wcooley", "body": "The RPMs incorrectly removes the _neo4j_ user & group on upgrade, which breaks upgrades by leaving all of the files without an owner and group:\n\n```\n$ ls -l /var/lib/neo4j/\ntotal 20340\n-rw-r--r--. 1 496 497       11 Sep  8  2014 active_tx_log\ndrwxr-xr-x. 2 496 497     4096 Mar 11  2015 index/\n-rw-r--r--. 1 496 497 20661455 Mar 26 11:53 messages.log\n-rw-r--r--. 1 496 497       96 Mar 11  2015 neostore\n-rw-r--r--. 1 496 497        9 Mar 11  2015 neostore.id\n...\n```\n\nThis is due to unconditionally removing the user & group in the _postuninstall_ scriptlet:\n\n```\n$ rpm -qp --scripts neo4j-2.2.5-1.noarch.rpm\n...\npostuninstall scriptlet (using /bin/sh):\n/usr/bin/getent group neo4j > /dev/null 2>&1 && /usr/sbin/userdel neo4j\n```\n\nThis should be conditional upon `$1 == 0`, which indicates a complete removal; see\nhttps://fedoraproject.org/wiki/Packaging:ScriptletSnippets#Syntax\n\nAlternatively, just don't remove the user & group automatically, as advised here:\nhttps://fedoraproject.org/wiki/Packaging:UsersAndGroups?rd=Packaging/UsersAndGroups#Allocation_Strategies\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/5388", "title": "Neo4j RPM repo defaults to non-working version...", "closed": "2015-11-03 14:57:07", "commitsDetails": [], "commits": {}, "ttf": 46.000277777777775, "created": "2015-09-17 19:10:44", "user": "Alan-R", "body": "Why does the repo default to an unsupported, pre-release version? This should not happen when installing according to the directions at http://yum.neo4j.org/. When you follow those directions, you should get the latest, greatest stable version...\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5368", "title": "Creating a large number of indexes causes out of memory error.", "closed": "2018-01-10 15:08:55", "commitsDetails": [], "commits": {}, "ttf": 847.0002777777778, "created": "2015-09-16 08:10:22", "user": "mmmmmrob", "body": "Creating a large number of indexes in one query (~1,400) causes the server to attempt to populate them at the same time, causing a Java out of memory error.\n"}, {"labels": ["bug", "cypher", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5367", "title": "CREATE INDEX does nothing", "closed": "2017-10-05 12:40:04", "commitsDetails": [], "commits": {}, "ttf": 750.0002777777778, "created": "2015-09-16 08:09:03", "user": "mmmmmrob", "body": "After creating a large number of indexes (~1,450) CREATE INDEX statements start to return with \"nothing changed\" and the index is not created.\n\nMacbook Pro, OS X 10.10.5, 8GB\njava version \"1.7.0_71\"\nJava(TM) SE Runtime Environment (build 1.7.0_71-b14)\nJava HotSpot(TM) 64-Bit Server VM (build 24.71-b01, mixed mode)\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5261", "title": "neo4j csv import \"hangs\" in version v2.2.4", "closed": "2017-07-14 18:07:35", "commitsDetails": [], "commits": {}, "ttf": 682.0002777777778, "created": "2015-09-01 08:32:08", "user": "zukomgwili", "body": "We have created an application that imports csv files into neo4j using neo4jshell scripts. We have been experiencing problems with importing in the latest version (v2.2.4) of neo4j. \nNeo4j \u201changs\u201d after importing  approximately 130 csv files. In previous versions of neo4j (v2.1.5) we did not experience this problem, only in the latest version has this issue surfaced. Our neo4j server has 128GB of memory (the entire graph is in memory).\nWe have been able to resolve the issue by changing the PERIODIC COMMIT size in our shell scripts to 10000 (from the default 1000). This is a cause of concern for us because in our production environment (neo4j 2.1.5), the default value 1000 has worked since we went live without any issues.\n\nWe have created a pack with data for reproducing the problem. Please can we have a private email address to send relevant instructions(for reproducing the issue) and links to the data.\n"}, {"labels": ["bug", "operability", "team-packaging"], "url": "https://github.com/neo4j/neo4j/issues/5246", "title": "PowerShell scripts should return non-zero when commands fail", "closed": "2018-11-07 19:08:22", "commitsDetails": [], "commits": {}, "ttf": 1164.0002777777777, "created": "2015-08-31 08:23:18", "user": "lassewesth", "body": "Currently, a command can fail and the only way to know is to parse stdout/ stderr. It would be much easier for users to first query the exit status for whether the command worked, and then subsequently try parsing stderr for a detailed explanation.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/5190", "title": "[Browser] Unable to connect with the slash character", "closed": "2016-04-22 12:42:46", "commitsDetails": [], "commits": {}, "ttf": 245.00027777777777, "created": "2015-08-21 02:52:29", "user": "ikwattro", "body": "If you have a password like `AC/DC`, you can not log in through the browser because the `/` character is a shortcut for quick access to the code editor.\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5142", "title": "Silently skip erroneous records while iterating through primitives.", "closed": "2017-07-14 18:09:22", "commitsDetails": [], "commits": {}, "ttf": 701.0002777777778, "created": "2015-08-13 10:35:21", "user": "tkroman", "body": "This is similar to https://github.com/jexp/batch-import/issues/65.\n\nHere's an excerpt from the log:\n\n```\nCaused by: org.neo4j.kernel.impl.store.InvalidRecordException: RelationshipRecord[227] not in use\n    at org.neo4j.kernel.impl.store.RelationshipStore.fillRecord(RelationshipStore.java:145) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.kernel.impl.api.StoreRelationshipIterable$DenseIterator.fetchNext(StoreRelationshipIterable.java:250) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.collection.primitive.PrimitiveLongCollections$PrimitiveLongBaseIterator.hasNext(PrimitiveLongCollections.java:55) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.kernel.impl.api.StateHandlingStatementOperations$RelationshipCursor.next(StateHandlingStatementOperations.java:972) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.kernel.impl.core.RelationshipConversion.hasNext(RelationshipConversion.java:51) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.kernel.impl.traversal.TraversalBranchImpl.next(TraversalBranchImpl.java:136) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.kernel.impl.traversal.TraversalBranchWithState.next(TraversalBranchWithState.java:32) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.graphdb.traversal.PreorderDepthFirstSelector.next(PreorderDepthFirstSelector.java:49) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.kernel.impl.traversal.MonoDirectionalTraverserIterator.fetchNextOrNull(MonoDirectionalTraverserIterator.java:70) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.kernel.impl.traversal.MonoDirectionalTraverserIterator.fetchNextOrNull(MonoDirectionalTraverserIterator.java:36) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.helpers.collection.PrefetchingIterator.peek(PrefetchingIterator.java:60) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:46) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.kernel.impl.traversal.DefaultTraverser$ResourcePathIterableWrapper$1.fetchNextOrNull(DefaultTraverser.java:140) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.helpers.collection.PrefetchingIterator.peek(PrefetchingIterator.java:60) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:46) ~[bochka-latest-jar-with-dependencies.jar:na]\n    at java.lang.Iterable.forEach(Iterable.java:74) ~[na:1.8.0_45]\n```\n\nCalling the same code again resulted in normal execution (no exceptions, integrity is preserved).\n\nI'm not sure what's causing this, but in any case, wouldn't it be more convenient if those records were just skipped without failing the whole transaction?\n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/5106", "title": "[2.3M02] UNWIND combined with IN not using indexes", "closed": "2016-07-14 10:37:29", "commitsDetails": [], "commits": {}, "ttf": 340.0002777777778, "created": "2015-08-08 20:32:58", "user": "ikwattro", "body": "Hi,\n\nThis is related to this closed issue : https://github.com/neo4j/neo4j/issues/4693\n\nThe following will not use schema indexes on `:Item(className)` : \n\n```\nPROFILE\nUNWIND [\"nose\",\"head\",\"eye\"] as elt\nMATCH (n:Item) WHERE n.className = elt\nRETURN elt, count(*)\n```\n\n![noindex](https://cloud.githubusercontent.com/assets/1222009/9152150/46914708-3e1d-11e5-8ae4-ab10dad6a84c.png)\n\nAnother thing to note, there was 303 db hits, while there are only 100 nodes in the db.\n\nPrefixing the query with `CYPHER planner=rule` use schema indexes : \n\n```\nPROFILE\nCYPHER planner=rule\nUNWIND [\"nose\",\"head\",\"eye\"] as elt\nMATCH (n:Item) WHERE n.className = elt\nRETURN elt, count(*)\n```\n\n![index_used](https://cloud.githubusercontent.com/assets/1222009/9152153/6a04aa18-3e1d-11e5-9944-e98f6001448c.png)\n"}, {"labels": ["2.3", "bug"], "url": "https://github.com/neo4j/neo4j/issues/5100", "title": "RPM packages incorrectly depend on a specific version of Java", "closed": "2017-01-19 08:42:00", "commitsDetails": [], "commits": {}, "ttf": 531.0002777777778, "created": "2015-08-07 00:15:11", "user": "esplinr", "body": "I am trying to installing neo4j RPMS from http://yum.neo4j.org\nI am running Fedora 21\n\nThe install fails because of an explicit dependency on OpenJDK 1.7. It should depend on any JDK greater than or equal to 1.7.\n\nThe shell transcript makes it clear.\n\n```\n[root@richs:~]% cat <<EOF>  /etc/yum.repos.d/neo4j.repo\n[neo4j]\nname=Neo4j Yum Repo\nbaseurl=http://yum.neo4j.org\nenabled=1\ngpgcheck=1\nEOF\n[root@richs:~]% yum install neo4j\n<snip yum cache refresh>\nResolving Dependencies\n--> Running transaction check\n---> Package neo4j.noarch 0:2.3.0-M02_1 will be installed\n--> Processing Dependency: java-1.7.0-openjdk for package: neo4j-2.3.0-M02_1.noarch\n--> Finished Dependency Resolution\nError: Package: neo4j-2.3.0-M02_1.noarch (neo4j)\n           Requires: java-1.7.0-openjdk\n You could try using --skip-broken to work around the problem\n You could try running: rpm -Va --nofiles --nodigest\n[root@richs:~]% yum search openjdk\nLoaded plugins: langpacks\n================================== N/S matched: openjdk ==================================\njava-1.8.0-openjdk.i686 : OpenJDK Runtime Environment\n<snip other packages>\n```\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5091", "title": "Cypher locking regression in 2.2", "closed": "2018-02-21 16:23:20", "commitsDetails": [], "commits": {}, "ttf": 930.0002777777778, "created": "2015-08-05 16:57:36", "user": "jonathancrosmer", "body": "See: https://stackoverflow.com/questions/31755509/neo4j-2-2-cypher-locking-regression\nThis seems likely to be a bug, where a lock can be released between queries in the same transaction.\nAny possible explanation?\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5086", "title": "path.reverseNodes bug", "closed": "2017-11-13 10:52:23", "commitsDetails": [], "commits": {}, "ttf": 831.0002777777778, "created": "2015-08-04 22:21:02", "user": "glemmon", "body": "I am using Neo4j 2.2.1. I am trying to use the reverseNodes method of the path class. Running this code:\n\n``` java\nlogger.info(\"Path1: \"+path.toString());\nfor(Node node : path.reverseNodes()){\n   logger.info(\"Node1: \"+node.toString());\n}\n```\n\nLogger output:\n\n``` java\nINFO: Path1: (469383)--[is_a,722474]-->(469384)--[is_a,732353]-->(469382)--[is_a,722473]-->(469089)--[is_a,722737]-->(468447)--[is_a,722237]-->(467769)--[is_a,721025]-->(467627)\n```\n\nWe never get inside the for loop. An NotFoundException is thrown first:\n\n``` java\nmessage: \"Node[467627J not connected to this relationship[722474]\"\nexception: \"NotFound.Exception\"\nfullname: \"org.neo4j.graphdb.NotFound.Exception\"\nstackTrace:\n0: \"org.neo4j.kernel.impl.core.RelationshipProxy.getOtherNode(RelationshipProxy.java:189)'\n1: \"org. neo4j. graphalgo. impl. util. Pathlmpl$1$1. next(Pathlmpl. java: 205)\"\n2: \"org. neo4j. graphalgo. impl. util. Pathlmpl$1$1. next(Pathlmpl. java: 187)\"\n3: \"org.eihg.phevor.plugins.TextQuery.path_to_json(TextQuery.java:85)\"\n```\n\nIt looks as though we are starting from the end node but trying to go through the first relationship instead of the last.\n\nSeems like a bug in Neo4j. Am I missing something here?\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5055", "title": "InvalidRecordException: DynamicRecord Not in use", "closed": "2015-12-16 09:55:51", "commitsDetails": [], "commits": {}, "ttf": 139.00027777777777, "created": "2015-07-29 13:46:29", "user": "arikan", "body": "Hi there,\n\nWe're on Neo4j 2.2.1 on Ubuntu EC2 instance.\n\nWe're stuck with `InvalidRecordException: DynamicRecord Not in use` error. This is extremely urgent as it is a live database. \n\nAmong our User records, two of them somehow got corrupt property `user.encrypted_password`, any time we try to access them we get the error below: \n\n```\norg.neo4j.kernel.impl.store.InvalidRecordException: DynamicRecord Not in use, blockId[54752]\n```\n\nTo demonstrate: \n\n```\nMATCH (u:User)\nWHERE u.email IN ['...@gmail.com', '...@hotmail.com']\nRETURN u.email\n```\n\nreturns: \n\n```\nu.email\n...@gmail.com\n...@hotmail.com\n```\n\n```\nMATCH (u:User)\nWHERE u.email IN ['...@gmail.com', '...@hotmail.com']\nRETURN u.encrypted_password\n```\n\nreturns:\n\n```\norg.neo4j.kernel.impl.store.InvalidRecordException: DynamicRecord Not in use, blockId[85070]\n Neo.DatabaseError.Statement.ExecutionFailure\n```\n\nWe cannot delete this node, change its fault property, or remove its label: \n\n```\nMATCH (u:User)\nWHERE u.email IN ['...@gmail.com', '...@hotmail.com']\nSET u:UserFault\n```\n\nreturns:\n\n```\norg.neo4j.kernel.api.exceptions.TransactionFailureException: Validation of index updates failed\n Neo.DatabaseError.Transaction.CouldNotCommit\n```\n\nWhen we look at the `graph.db/messages.log` we see this error is caused by the `DynamicRecord Not in Use` as well. \n\nWe also restarted the database incase it recovers, no luck. \n\nWe opened the database in  Neo4j 2.2.3, no luck, getting the same errors. \n\nIt seems a relevant issue is also not closed here https://github.com/neo4j/neo4j/issues/4391\n\nThis is urgent, so any help to recover from this is appretiated. Thanks!\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5019", "title": "BatchInserterImpl does not add its page cache to the lifecycle", "closed": "2015-08-05 12:03:47", "commitsDetails": [], "commits": {}, "ttf": 14.000277777777777, "created": "2015-07-22 11:21:33", "user": "mdoering", "body": "When creating and closing a BatchInserter for many small embedded neo4j dbs (version 2.2.3) I noticed that the MunninPageCache background threads were not shutdown and kept accumulating in the JVM, eventually bringing it down.\n\nWhen I patched the BatchInsertImpl in line 235 as follows to add a PageCacheLifecycle the issue was resolved:\n`life.add( new PageCacheLifecycle( pageCache ) );`\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/5011", "title": "Neo4j 2.2.3 update query bug", "closed": "2017-07-14 18:13:38", "commitsDetails": [], "commits": {}, "ttf": 724.0002777777778, "created": "2015-07-21 09:01:39", "user": "yuriy-oak", "body": "**We have a query that updates relationship props :**\n\n```\nMATCH (body_id:BodyId{body_id : 126414})<-[to_body_id:TO_BODY_ID{end : 99999999999999}]-(body:Body)\n  -[body_to_target:BODY_TO_TARGET{end : 99999999999999}]-(target:Target)\n  -[to_target_id:TO_TARGET_ID{end : 99999999999999}]->(target_id:TargetId{target_id : 126414}) \nWHERE ((id(body) = 28888220)) \nwith body_to_target \nSET body_to_target.start = 1434535407147\n```\n\n**And sometimes we get this error:**\n\n> Neo.DatabaseError.Statement.ExecutionFailure: java.lang.Long cannot be\n> cast to org.neo4j.index.impl.lucene.RelationshipId\n\n**A piece of stack when running from Java:**\n\n```\nCaused by: java.lang.RuntimeException: Error executing cypher statement(s) [{code=Neo.DatabaseError.Statement.ExecutionFailure, message=java.lang.Long cannot be cast to org.neo4j.index.impl.lucene.RelationshipId, stackTrace=java.lang.ClassCastException: java.lang.Long cannot be cast to org.neo4j.index.impl.lucene.RelationshipId\nat org.neo4j.index.impl.lucene.RelationshipId.equals(RelationshipId.java:43)\nat java.util.HashMap.removeNode(HashMap.java:819)\nat java.util.HashMap.remove(HashMap.java:798)\nat java.util.HashSet.remove(HashSet.java:235)\nat org.neo4j.index.impl.lucene.ExactTxData.remove(ExactTxData.java:158)\nat org.neo4j.index.impl.lucene.TxDataHolder.remove(TxDataHolder.java:48)\nat org.neo4j.index.impl.lucene.LuceneTransactionState.insert(LuceneTransactionState.java:86)\nat org.neo4j.index.impl.lucene.LuceneTransactionState.add(LuceneTransactionState.java:41)\nat org.neo4j.index.impl.lucene.LuceneIndex$RelationshipIndex.addRelationship(LuceneIndex.java:452)\nat org.neo4j.kernel.impl.api.StateHandlingStatementOperations$3.visit(StateHandlingStatementOperations.java:1379)\nat org.neo4j.kernel.impl.api.store.CacheLayer.relationshipVisit(CacheLayer.java:489)\nat org.neo4j.kernel.impl.api.StateHandlingStatementOperations.relationshipVisit(StateHandlingStatementOperations.java:1238)\nat org.neo4j.kernel.impl.api.StateHandlingStatementOperations.relationshipAddToLegacyIndex(StateHandlingStatementOperations.java:1373)\nat org.neo4j.kernel.impl.api.OperationsFacade.relationshipAddToLegacyIndex(OperationsFacade.java:881)\nat org.neo4j.kernel.impl.coreapi.LegacyIndexProxy$Type$2.add(LegacyIndexProxy.java:169)\nat org.neo4j.kernel.impl.coreapi.LegacyIndexProxy.internalAdd(LegacyIndexProxy.java:517)\nat org.neo4j.kernel.impl.coreapi.LegacyIndexProxy.add(LegacyIndexProxy.java:383)\nat org.neo4j.kernel.impl.coreapi.AbstractAutoIndexerImpl.propertyChanged(AbstractAutoIndexerImpl.java:70)\nat org.neo4j.kernel.impl.api.LegacyPropertyTrackers.relationshipChangeStoreProperty(LegacyPropertyTrackers.java:98)\nat org.neo4j.kernel.impl.api.StateHandlingStatementOperations.relationshipSetProperty(StateHandlingStatementOperations.java:648)\nat org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.relationshipSetProperty(ConstraintEnforcingEntityOperations.java:171)\nat org.neo4j.kernel.impl.api.LockingStatementOperations.relationshipSetProperty(LockingStatementOperations.java:340)\nat org.neo4j.kernel.impl.api.OperationsFacade.relationshipSetProperty(OperationsFacade.java:665)\nat org.neo4j.cypher.internal.spi.v2_2.TransactionBoundQueryContext$RelationshipOperations.setProperty(TransactionBoundQueryContext.scala:216)\nat org.neo4j.cypher.internal.compiler.v2_2.spi.DelegatingOperations.setProperty(DelegatingQueryContext.scala:126)\nat org.neo4j.cypher.internal.compatibility.ExceptionTranslatingQueryContext$ExceptionTranslatingOperations.org$neo4j$cypher$internal$compatibility$ExceptionTranslatingQueryContext$ExceptionTranslatingOperations$$super$setProperty(ExceptionTranslatingQueryContext.scala:151)\nat org.neo4j.cypher.internal.compatibility.ExceptionTranslatingQueryContext$ExceptionTranslatingOperations$$anonfun$setProperty$1.apply$mcV$sp(ExceptionTranslatingQueryContext.scala:151)\nat org.neo4j.cypher.internal.compatibility.ExceptionTranslatingQueryContext$ExceptionTranslatingOperations$$anonfun$setProperty$1.apply(ExceptionTranslatingQueryContext.scala:151)\nat org.neo4j.cypher.internal.compatibility.ExceptionTranslatingQueryContext$ExceptionTranslatingOperations$$anonfun$setProperty$1.apply(ExceptionTranslatingQueryContext.scala:151)\nat org.neo4j.cypher.internal.compatibility.ExceptionTranslatingQueryContext.org$neo4j$cypher$internal$compatibility$ExceptionTranslatingQueryContext$$translateException(ExceptionTranslatingQueryContext.scala:182)\nat org.neo4j.cypher.internal.compatibility.ExceptionTranslatingQueryContext$ExceptionTranslatingOperations.setProperty(ExceptionTranslatingQueryContext.scala:151)\nat org.neo4j.cypher.internal.compiler.v2_2.spi.UpdateCountingQueryContext$CountingOps.setProperty(UpdateCountingQueryContext.scala:132)\nat org.neo4j.cypher.internal.compiler.v2_2.mutation.PropertySetAction.exec(PropertySetAction.scala:52)\nat org.neo4j.cypher.internal.compiler.v2_2.pipes.ExecuteUpdateCommandsPipe.org$neo4j$cypher$internal$compiler$v2_2$pipes$ExecuteUpdateCommandsPipe$$exec(ExecuteUpdateCommandsPipe.scala:56)\nat org.neo4j.cypher.internal.compiler.v2_2.pipes.ExecuteUpdateCommandsPi$$$$3fd0ddfab96df657454927b510aaae$$$$ands$1$$anonfun$apply$2.apply(ExecuteUpdateCommandsPipe.scala:45)\nat org.neo4j.cypher.internal.compiler.v2_2.pipes.ExecuteUpdateCommandsPi$$$$3fd0ddfab96df657454927b510aaae$$$$ands$1$$anonfun$apply$2.apply(ExecuteUpdateCommandsPipe.scala:45)\nat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\nat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\nat org.neo4j.cypher.internal.compiler.v2_2.pipes.EmptyResultPipe.internalCreateResults(EmptyResultPipe.scala:29)\nat org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:122)\nat org.neo4j.cypher.internal.compiler.v2_2.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:92)\nat org.neo4j.cypher.internal.compiler.v2_2.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:64)\nat org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:121)\nat org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:105)\nat org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anon$1.run(ExecutionPlanBuilder.scala:69)\nat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_2.scala:173)\nat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper$$anonfun$run$1.apply(CompatibilityFor2_2.scala:173)\nat org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_2$.runSafely(CompatibilityFor2_2.scala:105)\nat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper.run(CompatibilityFor2_2.scala:172)\nat org.neo4j.cypher.internal.PreparedPlanExecution.execute(PreparedPlanExecution.scala:28)\nat org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:108)\nat org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:102)\nat org.neo4j.cypher.javacompat.internal.ServerExecutionEngine.executeQuery(ServerExecutionEngine.java:61)\nat org.neo4j.server.rest.transactional.TransactionHandle.executeStatements(TransactionHandle.java:327)\nat org.neo4j.server.rest.transactional.TransactionHandle.execute(TransactionHandle.java:258)\nat org.neo4j.server.rest.transactional.TransactionHandle.execute(TransactionHandle.java:103)\nat org.neo4j.server.rest.web.TransactionalService$1.write(TransactionalService.java:192)\nat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\nat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\nat com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302)\nat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510)\nat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\nat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\nat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\nat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:540)\nat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:715)\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\nat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800)\nat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:587)\nat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221)\nat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125)\nat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515)\nat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185)\nat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059)\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\nat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\nat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\nat org.eclipse.jetty.server.Server.handle(Server.java:497)\nat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310)\nat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248)\nat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540)\nat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620)\nat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540)\nat java.lang.Thread.run(Thread.java:745)\n}]\nat org.neo4j.jdbc.rest.StreamingParser.handleErrors(StreamingParser.java:359)\nat org.neo4j.jdbc.rest.StreamingParser.skipTo(StreamingParser.java:333)\nat org.neo4j.jdbc.rest.StreamingParser.nextResult(StreamingParser.java:148)\nat org.neo4j.jdbc.rest.StreamingParser$2.hasNext(StreamingParser.java:283)\nat org.neo4j.jdbc.rest.TransactionalQueryExecutor.executeQuery(TransactionalQueryExecutor.java:209)\nat org.neo4j.jdbc.Neo4jConnection.executeQuery(Neo4jConnection.java:388)\n... 8 more\n```\n\n**How can we solve this**\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4977", "title": "Empty CSV file causes neo4j-import to infinite loop and fill the disk", "closed": "2017-06-22 14:41:56", "commitsDetails": [], "commits": {}, "ttf": 710.0002777777778, "created": "2015-07-13 13:57:10", "user": "jimbobhickville", "body": "I am working on a program to convert a gedcom file into a neo4j database.  I generate a series of CSV files, one for each node type and relationship type, then pass all those along to neo4j-import to generate the database.  Due to some poor bounds-checking on my end, one of the generated CSV files was empty, but rather than either erroring out or ignoring it, neo4j-import went into an infinite loop and repeatedly imported the remaining node files until my disk was full.  It never made it to the relationships.  What should have been a 170MB database ended up filling up nearly 300GB of disk before it crashed.  I fixed the bug in my csv exporter, but neo4j-import should probably behave in a more sane fashion should this happen.\n"}, {"labels": ["2.2", "bug", "cypher"], "filteredCommits": ["14df173cfb0b399a610850c7634798bfa480f3ce"], "url": "https://github.com/neo4j/neo4j/issues/4937", "gitStatsSummary": {"insertions": 9, "gitFilesChange": 1, "lines": 11, "deletions": 2}, "numCommits": 1, "commits": {"14df173cfb0b399a610850c7634798bfa480f3ce": {"commitUser": "pontusmelke", "commitGHEventType": "closed"}}, "ttf": 50.000277777777775, "user": "aseemk", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal"], "body": "Using http://console.neo4j.org/ as an example...\n\nThis query works:\n\n``` cypher\nMATCH (crew:Crew {name: 'Neo'})\nWITH crew, 0 AS relevance\nRETURN crew\nORDER BY relevance\n```\n\nBut this query (just added another clause to the `ORDER BY`) doesn't:\n\n``` cypher\nMATCH (crew:Crew {name: 'Neo'})\nWITH crew, 0 AS relevance\nRETURN crew\nORDER BY relevance, crew.name\n```\n\nThis is the `Neo.ClientError.Statement.InvalidSyntax` error that's thrown:\n\n```\nError: relevance not defined (line 1, column 85 (offset: 84))\n\"MATCH (crew:Crew { name: 'Neo' })  WITH crew, 0 AS relevance  RETURN crew  ORDER BY relevance, crew.name\"\n                                                                                     ^\n```\n\nThe query used to work in 2.1.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "2.2 ORDER BY \"not defined\" regression", "statsSkippedReason": "", "closed": "2015-08-21 09:00:41", "commitsDetails": [{"commitUser": "pontusmelke", "commitDateTime": "2015-08-20 16:24:56", "commitHash": "14df173cfb0b399a610850c7634798bfa480f3ce", "commitParents": ["ac4c258f2be081ef6383354032a8673cda90607b"], "commitGHEventType": "closed", "nameRev": "14df173cfb0b399a610850c7634798bfa480f3ce tags/2.2.5~15^2", "commitGitStats": [{"insertions": 9, "lines": 11, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/normalizeWithClauses.scala", "deletions": 2}, {"insertions": 20, "lines": 20, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/OrderByAcceptanceTest.scala", "deletions": 0}, {"insertions": 16, "lines": 16, "filePath": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/NormalizeWithClausesTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Rewriter should take the scope of ORDER BY into account\n\nRewriter `normalizedWithClauses` was not considering identifiers needed in the inner scope of\n`ORDER BY` when doing rewriting.\n\nFixes #4937\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-08-20 16:16:57"}], "created": "2015-07-01 16:57:04"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4935", "title": "neo4j-import fails on \"Prepare node index phase\" (java.lang.StackOverflowError)", "closed": "2015-07-07 13:31:04", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2015-07-01 15:22:15", "user": "0xNacho", "body": "Hi There,\n\nI'm trying to import 130M~ nodes and 200M~ relationships using the **neo4-import** tool.\n\nThe problem is that neo4j-import gets stuck on the process (after more than 1'30'').\n\nThe output of the process:\n\n```\nNodes [>:3.35 MB/s---|PROPERTIES(2)======|*NODE:1007.08 MB------|LABEL SCAN-----|v:7.46 MB/s(2)======]131M\nDone in 1h 35m 47s 332ms\nPrepare node index\n[*SORT:1.47 GB---------------------------------------------------------------------------------] 87M\n```\n\nAnd the messages.log content is:\n\n```\n2015-06-15 10:38:56.423+0000 INFO  [org.neo4j]: Import starting\n2015-06-15 10:38:56.537+0000 INFO  [org.neo4j]: Creating new db @ /var/user/neo/graph22.db/neostore\n2015-06-15 10:38:57.264+0000 INFO  [org.neo4j]: Missing counts store, rebuilding it.\n2015-06-15 10:38:57.536+0000 INFO  [org.neo4j]: No lucene scan store index found, this might just be first use. Preparing to rebuild.\n2015-06-15 10:38:57.581+0000 INFO  [org.neo4j]: No lucene scan store index found, this might just be first use. Preparing to rebuild.\n2015-06-15 10:38:57.793+0000 INFO  [org.neo4j]: Rebuilding lucene scan store, this may take a while\n2015-06-15 10:38:57.796+0000 INFO  [org.neo4j]: Lucene scan store rebuilt (roughly -1 nodes)\n2015-06-15 18:29:33.509+0000 INFO  [org.neo4j]: About to rotate counts store at transaction 1 to [/var/user/neo/graph22.db/neostore.counts.db.b], from [/var/user/neo/graph22.db/neostore.counts.db.a].\n2015-06-15 18:29:33.516+0000 INFO  [org.neo4j]: Successfully rotated counts store at transaction 1 to [/var/user/neo/graph22.db/neostore.counts.db.b], from [/var/user/neo/graph22.db/neostore.counts.db.a].\n2015-06-15 18:29:33.771+0000 ERROR [org.neo4j]: Error during import null\njava.lang.StackOverflowError\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.partition(ParallelSort.java:193)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:243)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n        at org.neo4j.unsafe.impl.batchimport.cache.idmapping.string.ParallelSort.recursiveQsort(ParallelSort.java:246)\n```\n\nIt sounds like a recursion bug. What can I do?\n\nIm using **neo4j-community-2.2.2** version.\n\nThanks in advance.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/4926", "title": "Neo4jInstaller.bat still checks for Java 7", "closed": "2015-12-16 10:19:45", "commitsDetails": [], "commits": {}, "ttf": 168.00027777777777, "created": "2015-06-30 14:24:33", "user": "dnauck", "body": "Neo4jInstaller.bat [1] still check for java 7 and refuse to start with java 8 (that should be now fully supported)\n\n[1] https://github.com/neo4j/neo4j/blob/2.3/packaging/standalone/src/main/distribution/shell-scripts/bin/Neo4jInstaller.bat#L147\n"}, {"labels": ["2.1", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4921", "title": "Neo4j 2.1.7 - 70x Increase in database accesses, 1000x slowdown when traversing a path of length 10 vs a length of 9.", "closed": "2016-10-21 06:36:58", "commitsDetails": [], "commits": {}, "ttf": 479.0002777777778, "created": "2015-06-30 00:30:25", "user": "bunkat", "body": "I posed this earlier in the Google Groups but got no reply.  This is now becoming a blocking issue for our deployment.  This is with 2.1.7, I'm unable to move to 2.2.x due to blocking index and query issues.\n\nI have a list of history nodes attached to various objects that are connected together in a history hierarchy.  I traverse the list for a particular object by following HISTORY relationships with the corresponding object id.  I recently noticed that the queries are timing out and ran into the following during my investigation.\n\nMy query is as follows:\n\n```\n  MATCH (i:file { id: \"foobar\" })\n  WITH i\n\n  MATCH (i)-[:HISTORY*1..10 {id: i.id}]->(a:activity)\n  WITH DISTINCT i, a SKIP 0 LIMIT 10\n\n  RETURN a\n```\n\nThis query is just locating a particular starting node by schema index and then trying to follow the history chain, collecting up all of the activity nodes that it finds. If I look for a chain with a maximum of 2 nodes ([:HISTORY*1..2]) it returns quickly.  Same for 3, 4, 5, 6, 7, 8, and 9.  However, if I try to run the query above, it takes over 200s to actually complete. The crazy part is that this particular case only has two total activities in the chain.\n\n**_Why does looking for a maximum of 9 return instantly but 10 take over 200s?  Especially since there is only a maximum of 2 to be found in either case?**_\n\n**_How should I be writing this query to be more perfomant?**_\n\nI haven't tested with Neo4j 2.2.1 yet since I can't deploy that to production yet.  I'm looking for a solution for 2.1.7.\n\n**PROFILE WITH 9**\n\n```\n>   MATCH (i:file { id: \"foobar\" })\n>   WITH i\n> \n>   MATCH (i)-[:HISTORY*1..9 {id: \"foobar\"}]->(a:activity)\n>   WITH DISTINCT i, a SKIP 0 LIMIT 9\n> \n>   RETURN COUNT(a);\n+----------+\n| COUNT(a) |\n+----------+\n| 2        |\n+----------+\n1 row\n\nColumnFilter\n  |\n  +EagerAggregation\n    |\n    +Slice\n      |\n      +Distinct\n        |\n        +Filter\n          |\n          +PatternMatcher\n            |\n            +SchemaIndex\n\n+------------------+------+--------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|         Operator | Rows | DbHits |       Identifiers |                                                                                                                                                                     Other |\n+------------------+------+--------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|     ColumnFilter |    1 |      0 |                   |                                                                                                                                                     keep columns COUNT(a) |\n| EagerAggregation |    1 |      0 |                   |                                                                                                                                                                           |\n|            Slice |    2 |      0 |                   |                                                                                                                                                {  AUTOINT2}; {  AUTOINT3} |\n|         Distinct |    2 |      0 |                   |                                                                                                                                                                           |\n|           Filter |    2 |      8 |                   | (hasLabel(a:activity(18)) AND all(  UNNAMED-7541039006321584207 in   UNNAMED-2669272078697603796 where Property(  UNNAMED-7541039006321584207,id(6)) == {  AUTOSTRING1})) |\n|   PatternMatcher |    2 |  72838 | i, a,   UNNAMED60 |                                                                                                                                                                           |\n|      SchemaIndex |    1 |      2 |              i, i |                                                                                                                                                {  AUTOSTRING0}; :file(id) |\n+------------------+------+--------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nTotal database accesses: 72848\n```\n\n**PROFILE WITH 10**\n\n```\n>   MATCH (i:file { id: \"foobar\" })\n>   WITH i\n> \n>   MATCH (i)-[:HISTORY*1..10 {id: \"foobar\"}]->(a:activity)\n>   WITH DISTINCT i, a SKIP 0 LIMIT 10\n> \n>   RETURN COUNT(a);\n+----------+\n| COUNT(a) |\n+----------+\n| 2        |\n+----------+\n1 row\n\nColumnFilter\n  |\n  +EagerAggregation\n    |\n    +Slice\n      |\n      +Distinct\n        |\n        +Filter\n          |\n          +PatternMatcher\n            |\n            +SchemaIndex\n\n+------------------+------+---------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|         Operator | Rows |  DbHits |       Identifiers |                                                                                                                                                                     Other |\n+------------------+------+---------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n|     ColumnFilter |    1 |       0 |                   |                                                                                                                                                     keep columns COUNT(a) |\n| EagerAggregation |    1 |       0 |                   |                                                                                                                                                                           |\n|            Slice |    2 |       0 |                   |                                                                                                                                                {  AUTOINT2}; {  AUTOINT3} |\n|         Distinct |    2 |       0 |                   |                                                                                                                                                                           |\n|           Filter |    2 |       8 |                   | (hasLabel(a:activity(18)) AND all(  UNNAMED-6855841532423436547 in   UNNAMED-4126485615317615815 where Property(  UNNAMED-6855841532423436547,id(6)) == {  AUTOSTRING1})) |\n|   PatternMatcher |    2 | 5084198 | i, a,   UNNAMED60 |                                                                                                                                                                           |\n|      SchemaIndex |    1 |       2 |              i, i |                                                                                                                                                {  AUTOSTRING0}; :file(id) |\n+------------------+------+---------+-------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\nTotal database accesses: 5084208\n```\n"}, {"labels": ["2.3", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4907", "title": "BUG in Result::columnAs(String name) - NotFoundException is never raised.", "closed": "2015-08-12 08:37:56", "commitsDetails": [], "commits": {}, "ttf": 46.000277777777775, "created": "2015-06-26 15:03:46", "user": "bHacklv", "body": "Hi,\n`Result::columnAs(String name)` JavaDocs point out that it has to throw **org.neo4j.graphdb.NotFoundException** _when the column name does not appear in the original query_.\n\nI've tested multiple times and it's not the case.. \nThis is my Cypher query i've used - `\"MATCH (n)-[r]->() RETURN n,r\"`.\nIf I try to do\n\n```\npublic ResourceIterator<Object> executeTypedCypher(String query, String column) {\n        Result queryResult = db.execute(query, new HashMap<String, Object>());\n        return queryResult.columnAs(column);\n    }\n\nwhere [column] is set as \"m\"\n```\n\nit returns empty iterator instead. The bug must be somewhere in **scala** after `ExecutionResult::columnAs(String n)` call, as it is transforming scala object to java...\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4847", "title": "EigenVector Centrality is giving null, if first node's degree is 0", "closed": "2017-10-18 08:20:01", "commitsDetails": [], "commits": {}, "ttf": 853.0002777777778, "created": "2015-06-17 21:44:18", "user": "iandecks45", "body": "Hi there,\n\nI am using neo4j-graph-algo-2.2.2 library for EigenVector centrality. But, I guess there is a bug. For example, if your first node (or vertex) is not connected to others (degree is 0), the calculation is giving null exception. There is something with first node's degree.\n\nPlease help me\n\nNodeID Degree\n1  0\n2  1\n4  3\nException in thread \"main\" java.lang.NullPointerException\n    at org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower.runIterations(EigenvectorCentralityPower.java:180)\n    at org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower.calculate(EigenvectorCentralityPower.java:126)\n    at org.neo4j.graphalgo.impl.centrality.EigenvectorCentralityPower.getCentrality(EigenvectorCentralityPower.java:93)\n    at neo4j.Neo4jEssentials.getEigenVectorCentralityForAllNodes(Neo4jEssentials.java:304)\n    at neo4j.ShortestPathTest.runEverythingResults(ShortestPathTest.java:124)\n    at neo4j.ShortestPathTest.main(ShortestPathTest.java:50)\n"}, {"labels": ["2.3", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4751", "title": "How to recover from EntityNotFound Error", "closed": "2017-10-18 08:46:05", "commitsDetails": [], "commits": {}, "ttf": 868.0002777777778, "created": "2015-06-03 03:40:32", "user": "mboedigh", "body": "I am experimenting with a large database with SNP annotations (among other things) and was going to change my desgin.  I wanted to delete all data from the :SNP nodes. The database had 100s of millions of nodes and I was forced to delete small segments at a time in a somewhat painful attempt to keep the database from crashing. I had queries like this:\nmatch (s:SNP)-[r]-() where s.name< 'rs01' delete r, s\nmatch (s:SNP)-[r]-() where s.name< 'rs02' delete r, s\netc. \nBut sometimes the database would crash anyway. Cypher front end thought the database was unplugged. (funny for awhile). And the Neo4j Community app was non-responsive. \nEventually I got into a state where\nmatch (s:SNP)-[r]-() where s.name > 'rs55' delete r, s\nNode with id 15244864\nNeo.ClientError.Statement.EntityNotFound\n\nOR\nmatch (s:SNP)-[r]-() where s.name< 'rs55' delete r, s\nNode with id 15244864\nNeo.ClientError.Statement.EntityNotFound\n\nOR even \nmatch (s:SNP) return count(s)\nNode with id 15244864\nNeo.ClientError.Statement.EntityNotFound\n\nI'm note sure what is wrong but if anyone has suggestions to either delete all SNPs or otherwise recover please let me know. There is still a lot of data in the database that I'd like to keep\n"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/4697", "title": "CREATE UNIQUE race condition", "closed": "2017-07-18 06:52:49", "commitsDetails": [], "commits": {}, "ttf": 783.0002777777778, "created": "2015-05-26 13:54:31", "user": "area", "body": "I am using the REST endpoint for making Cypher queries. I have encountered an issue that if I have two nodes (a `user` node and a `decision` node) with no relationship between them, and then fire two identical queries in quick succession to the endpoint:\n\n```\nMATCH (u:user {id:{userid}}), (a:decision {id:{decisionid}}) CREATE UNIQUE (u)-[r:VOTES]->(a)\n```\n\nThen I end up with two VOTES relationships, which is obviously undesired if I am using `CREATE UNIQUE`. I cannot put a constraint on a relationship, so I'm not sure how to guarantee uniqueness in this situation. Is there a recommended solution?\n\nOf course, if I POST to the endpoint with some amount of time between the requests, I end up with only one relationship, as desired. However, as users will ultimately be able to trigger these requests, this isn't really a useful solution!\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4693", "title": "Can't use a \"seek by id\" operator when using unwind", "closed": "2015-06-22 07:40:14", "commitsDetails": [], "commits": {}, "ttf": 27.00027777777778, "created": "2015-05-25 22:20:30", "user": "telaviv", "body": "I have the following query:\n\n``` cypher\nprofile\nunwind [83, 84] as record\nmatch (m:match)\nwhere id(m) = record\nreturn m\n```\n\nand this is the query plan it gives for me:\n\n![Query Plan showing a seek by label](http://s4.postimg.org/p8gwsbxhp/Screen_Shot_2015_05_25_at_3_15_31_PM.png)\n\nAs you can see it chooses to scan by label instead of seeking by id. Outside of an unwind it works as expected. Since I need the unwind, I think my workaround for this will be to use my own uuid as a property and put an index on it. Hopefully that works too.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4692", "title": "Improper binding while executing query in neo4j 2.2.2 - bug", "closed": "2017-07-14 18:36:41", "commitsDetails": [], "commits": {}, "ttf": 781.0002777777778, "created": "2015-05-25 13:21:48", "user": "ernestoe", "body": "Refer to this [graphgist](http://gist.neo4j.org/?85a5301ff283fd95e19a) which contains steps for reproducing the bug. \n\nThis is what the data looks visually:\n\n![visual data](http://i57.tinypic.com/2ms4h3c.png)\n\nThis is the pattern I'm matching:\n\n![duplicate relationship pattern](http://i60.tinypic.com/258nuvb.png)\n\nThe following query doesn't return anything in Neo4j 2.1 (expected result) as you can see in the graphgist, however it returns the following while browsing in version 2.2.2\n- [Node[0]{name:\"Category\"},:META_RELATIONSHIP[1]{name:\"GROUPED_BY\"},Node[1]{name:\"Review\"},:META_RELATIONSHIP[3]{name:\"GROUPED_BY\"},Node[1]{name:\"Review\"}]\n- [Node[0]{name:\"Category\"},:META_RELATIONSHIP[0]{name:\"GROUPED_BY\"},Node[2]{name:\"Ambiguous\"},:META_RELATIONSHIP[7]{name:\"GROUPED_BY\"},Node[2]{name:\"Ambiguous\"}]\n- [Node[2]{name:\"Ambiguous\"},:META_RELATIONSHIP[8]{name:\"GROUPED_BY\"},Node[3]{name:\"GlobalTemplateCategory\"},:META_RELATIONSHIP[11]{name:\"GROUPED_BY\"},Node[3]{name:\"GlobalTemplateCategory\"}]\n- [Node[1]{name:\"Review\"},:META_RELATIONSHIP[4]{name:\"GROUPED_BY\"},Node[3]{name:\"GlobalTemplateCategory\"},:META_RELATIONSHIP[13]{name:\"GROUPED_BY\"},Node[3]{name:\"GlobalTemplateCategory\"}]\n- [Node[3]{name:\"GlobalTemplateCategory\"},:META_RELATIONSHIP[12]{name:\"GROUPED_BY\"},Node[4]{name:\"MappingReview\"},:META_RELATIONSHIP[15]{name:\"GROUPED_BY\"},Node[4]{name:\"MappingReview\"}]\n- [Node[3]{name:\"GlobalTemplateCategory\"},:META_RELATIONSHIP[10]{name:\"GROUPED_BY\"},Node[5]{name:\"ClassificationReview\"},:META_RELATIONSHIP[16]{name:\"GROUPED_BY\"},Node[5]{name:\"ClassificationReview\"}]\n\nLet me know if this is the right format for chasing this \"bug\". \n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4688", "title": "Scalar function on returned String failed (null)", "closed": "2016-10-20 12:47:56", "commitsDetails": [], "commits": {}, "ttf": 514.0002777777778, "created": "2015-05-25 10:08:08", "user": "fcauchois", "body": "... toInt(myattribute) => work as espected\n... toInt(str(myattribute)) => null value returned (every time !)\n\nExemple 1 :\n\nmyattribute : \"< 152\"\ntoInt(replace(myattribute, \"< \", \"\")) => 152\ntoInt(replace(str(myattribute), \"< \", \"\")) => null\n\nExemple 2 (even simplier) :\n\ntoInt(\"4\") => 4\ntoInt(str(\"4\")) => null\n"}, {"labels": ["2.2", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4542", "title": "Cypher query returning nodes it shouldn't on 2.2.1", "closed": "2016-01-06 00:45:52", "commitsDetails": [], "commits": {}, "ttf": 252.00027777777777, "created": "2015-04-28 13:00:41", "user": "ricardojmendez", "body": "Hi,\n\nI've tried this against several 2.2.x installs, including the [recent 2.2.1 docker container](https://github.com/neo4j-contrib/docker-neo4j).\n\nFor the following Geoff data:\n\n```\n(n1) {\"code\":\"TestNode/N1\"}\n(n2) {\"code\":\"TestNode/N2\"}\n(n3) {\"code\":\"TestNode/N3\"}\n(n4) {\"code\":\"TestNode/N4\"}\n(n5) {\"code\":\"TestNode/N5\"}\n(n6) {\"code\":\"TestNode/N6\"}\n(n7) {\"code\":\"TestNode/N7\"}\n(n8) {\"code\":\"TestNode/N8\"}\n(n9) {\"code\":\"TestNode/N9\"}\n(n1)-[:LINKSTO]->(n2)\n(n1)-[:LINKSTO]->(n3)\n(n1)-[:LINKSTO]->(n5)\n(n1)-[:LINKSTO]->(n7)\n(n2)-[:LINKSTO]->(n3)\n(n2)-[:LINKSTO]->(n4)\n(n3)-[:LINKSTO]->(n4)\n(n3)-[:LINKSTO]->(n5)\n(n4)-[:LINKSTO]->(n5)\n(n4)-[:LINKSTO]->(n7)\n(n6)-[:LINKSTO]->(n7)\n(n8)-[:LINKSTO]->(n9)\n(n1)-[:DIFFREL]->(n4)\n(n1)-[:DIFFREL]->(n3)\n(n3)-[:DIFFREL]->(n4)\n```\n\nThis query:\n\n```\nMATCH (a {code:\"TestNode/N1\"})-[:LINKSTO]-b WITH  collect(DISTINCT b) as coll \nUNWIND coll as b1 \nUNWIND coll as b2 \nMATCH b1-[:LINKSTO]->b2 RETURN DISTINCT b1.code, b2.code;\n```\n\nShould return the following pairs:  \n\n[TestNode/N2, TestNode/N3]\n[TestNode/N3, TestNode/N5]\n\nInstead it returns\n\n[TestNode/N2, TestNode/N3]\n[TestNode/N3, TestNode/N5]\n[TestNode/N3, TestNode/N2]\n[TestNode/N5, TestNode/N3]\n\nThe query works as expected when testing against a 2.1.2 install.\n\nResults are also different on console.neo4j.org: http://console.neo4j.org/r/hv9nyb  That response will include N4 and N6, which aren't among the list of nodes that N1 is related to with relationship :LINKSTO, so they should not be among \"b\".\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/4538", "title": "Windows Installer failes privilege escalation", "closed": "2015-12-16 10:36:59", "commitsDetails": [], "commits": {}, "ttf": 232.00027777777777, "created": "2015-04-28 08:05:34", "user": "tbaum", "body": "I downloaded the x64 windows installer.\nStarted the installation, it fails writing to programm-files directory.\nI'm not running my desktop with admin privileges.\n\nThe installer should ask for admin-credentials and escalate if the user is trying to install into an admin-only directory.\n"}, {"labels": ["2.2", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/4492", "title": "Different aggregated results between 2.2.0 and 2.2.1", "closed": "2017-10-06 14:48:30", "commitsDetails": [], "commits": {}, "ttf": 898.0002777777778, "created": "2015-04-22 09:50:27", "user": "dthomas62", "body": "I've been running the following query on 2.17 through to 2.2.0:\n\nMATCH (e:Event {eventType: \"14\", timeslot: 5}) \nWITH e \nMATCH (Serial {id: e.serial})-[:INSEGMENT]-(seg:Segment {id: 4}), \npath = (e)-[:PREV_3]->(pe:Event) \nRETURN [node in nodes(path)[1..] | node.eventType] as et, count(_) as count \nORDER by count desc\n\nI get a list of aggregated results as expected:\n\net          count\n[14, 7, 14] 9\n[12, 8, 7]      8\n[14, 14, 14]    8\n[14, 14, 7] 6\n[8, 14, 8]      6\netc \n\nreturns 154 rows\n\nWhen I run the same query on 2.2.1 I get 1 for each count, i.e. no aggregation takes place.\n\net              count\n[8, 7, 14]      1\n[16, 16, 14]    1\n[14, 7, 14] 1\n[8, 14, 8]      1\n[14, 14, 14]    1\netc \n\nreturns 279 rows \n\nManual aggregation returns the correct results.\n\nAdditionally on 2.2.1 when I precede the query with PLANNER RULE I get the expected results as in 2.2.0.\n\nNot sure if there is a problem with my query but thought I should report this result anyway.\n"}, {"labels": ["2.2", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4465", "title": "Unable to execute Neo4j 2.2 Cypher Queries from Scala", "closed": "2016-10-20 12:49:36", "commitsDetails": [], "commits": {}, "ttf": 549.0002777777778, "created": "2015-04-20 00:04:37", "user": "anindya-saha", "body": "Hello Experts\n\nRecently I upgraded to Neo4j 2.2 and I am trying to run Neo4j's examples JavaQuery.java from the reference manual http://neo4j.com/docs/stable/tutorials-cypher-java.html I am getting the below exception. All necessary jars are in classpath.\n\nI could run cypher queries from Java very well in 2.1.7. Please suggest a workaround. I have already upgraded my graph database and cannot go back to 2.1.7. I am running on Windows 7.\n\nException in thread \"main\" java.lang.UnsupportedOperationException: No query engine installed.\nat org.neo4j.kernel.impl.query.NoQueryEngine.noQueryEngine(NoQueryEngine.java:56)\nat org.neo4j.kernel.impl.query.NoQueryEngine.executeQuery(NoQueryEngine.java:33)\nat org.neo4j.kernel.InternalAbstractGraphDatabase.execute(InternalAbstractGraphDatabase.java:953)\nat org.neo4j.kernel.InternalAbstractGraphDatabase.execute(InternalAbstractGraphDatabase.java:944)\nat JavaQuery.run(JavaQuery.java:67)\nat JavaQuery.main(JavaQuery.java:47)\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4462", "title": "Neo4j 2.2.1: COST and RULE planners produce different results when using HEAD, TAIL, and LAST operations", "closed": "2015-12-16 13:12:01", "commitsDetails": [], "commits": {}, "ttf": 241.00027777777777, "created": "2015-04-18 22:58:25", "user": "bunkat", "body": "I have a query that is calculating a minimum value across a set of related nodes. I was running into some odd results and it turns out that the two query planners produce different results for the following query:\n\n```\n  MATCH (p:project { id: \"foobar\" })\n  WITH p\n\n  MATCH (p)-[:MATERIAL]->(:materials)-[:MATERIAL]->(m:material)\n  WITH m, [s IN (:schedule)<-[:SCHEDULE]-(:task)-[:MATERIAL]->(m) | HEAD(NODES(s))] AS schedules\n  RETURN m, schedules\n```\n\nThe COST planner decides that the `schedule` nodes are the HEAD elements while the RULE planner decides that the `task` nodes are the HEAD elements.  This causes queries to fail since unexpected nodes are being returned.\n\nRewriting the query this way makes both planners agree.\n\n```\n  WITH m, [s IN (m)<-[:MATERIAL]-(:task)-[:SCHEDULE]->(:schedule) | LAST(NODES(s))] AS schedules\n```\n\nAlthough the query is slightly ambiguous, the COST planner and RULE planner should always return the same results especially since the engine can decide to bail out of the COST planner based on previous statements in the query.\n"}, {"labels": ["2.2", "bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/4430", "title": "HTTP transactionnal Endpoint fails on SharedBlockingCallback$BlockerTimeoutException", "closed": "2018-10-02 10:45:14", "commitsDetails": [], "commits": {}, "ttf": 1266.0002777777777, "created": "2015-04-14 11:11:20", "user": "davidrapin", "body": "While **streaming** a large amount of edges from neo4j 2.2.0 (using the \"rows\" result format) we got this error (which breaks the JSON stream):\n\n```\n2015-04-03 22:57:17.320+0000 ERROR [o.n.s.r.t.TransactionFacade]: Failed to generate JSON output.\njava.io.IOException: org.eclipse.jetty.util.SharedBlockingCallback$BlockerTimeoutException\nat org.eclipse.jetty.util.SharedBlockingCallback$Blocker.block(SharedBlockingCallback.java:234) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.HttpOutput.write(HttpOutput.java:133) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.HttpOutput.write(HttpOutput.java:347) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.spi.container.servlet.WebComponent$Writer.write(WebComponent.java:300) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(ContainerResponse.java:135) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.web.TransactionalService$InterruptingOutputStream.write(TransactionalService.java:303) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.codehaus.jackson.impl.Utf8Generator._flushBuffer(Utf8Generator.java:1754) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.codehaus.jackson.impl.Utf8Generator.flush(Utf8Generator.java:1088) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.codehaus.jackson.map.ObjectMapper.writeValue(ObjectMapper.java:1615) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.transactional.Neo4jJsonCodec.writeValue(Neo4jJsonCodec.java:66) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.codehaus.jackson.impl.JsonGeneratorBase.writeObject(JsonGeneratorBase.java:314) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.codehaus.jackson.JsonGenerator.writeObjectField(JsonGenerator.java:1090) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.transactional.Neo4jJsonCodec.writePropertyContainer(Neo4jJsonCodec.java:128) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.transactional.Neo4jJsonCodec.writeValue(Neo4jJsonCodec.java:46) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.codehaus.jackson.impl.JsonGeneratorBase.writeObject(JsonGeneratorBase.java:314) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.transactional.RowWriter.write(RowWriter.java:37) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.transactional.ExecutionResultSerializer.writeRows(ExecutionResultSerializer.java:378) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.transactional.ExecutionResultSerializer.statementResult(ExecutionResultSerializer.java:108) ~[neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.transactional.TransactionHandle.executeStatements(TransactionHandle.java:329) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:146) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:211) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:540) [neo4j-desktop-2.2.0.jar:2.2.0]\nat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:715) [neo4j-desktop-2.2.0.jar:2.2.0]\nat javax.servlet.http.HttpServlet.service(HttpServlet.java:790) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:800) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1669) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.neo4j.server.rest.dbms.AuthorizationFilter.doFilter(AuthorizationFilter.java:120) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1652) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:585) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:221) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1125) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:515) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:185) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1059) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.Server.handle(Server.java:497) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:310) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:248) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:540) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:620) [neo4j-desktop-2.2.0.jar:2.2.0]\nat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:540) [neo4j-desktop-2.2.0.jar:2.2.0]\nat java.lang.Thread.run(Unknown Source) [na:1.7.0_45]\nCaused by: org.eclipse.jetty.util.SharedBlockingCallback$BlockerTimeoutException: null\nat org.eclipse.jetty.util.SharedBlockingCallback$Blocker.block(SharedBlockingCallback.java:216) ~[neo4j-desktop-2.2.0.jar:2.2.0]\n... 50 common frames omitted\n```\n"}, {"labels": ["3.0", "bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/4402", "title": "Neo4j 2.2 Cypher - Poor query performance with multiple OPTIONAL MATCH statements", "closed": "2018-09-24 08:39:10", "commitsDetails": [], "commits": {}, "ttf": 1263.0002777777777, "created": "2015-04-09 19:26:51", "user": "bunkat", "body": "I'm running into an issue with quickly degrading performance on queries that use multiple OPTIONAL MATCH statements, especially with the COST planner.\n\nIf the query only has a single OPTIONAL MATCH statement, the query planner creates an appropriate `OptionalExpand(All)` query term.  However, when multiple OPTIONAL MATCH statements are used the query planner starts creating `NodeByLabelScan` query terms with large parallel branches that then get merged.  I would have expected that the multiple OPTIONAL MATCH statement query would have looked more similar to the single OPTIONAL MATCH query with just multiple `OptionalExpand(All)` terms.\n\nI believe that this issue exists in previous versions of Neo4j as well, but I'm only noticing it now as my database grows in size (30k nodes and 100k relationships, not even that large).  Queries that used to take 100ms are now taking 2+ minutes to complete.\n\nThe following query concerns 670 contacts that are associated with approximately 1800 phone, address, tag, and invite nodes.  I'm trying to create a query that will return the contacts along with the associated nodes if any exist.\n\n**Example 1:  Query with a single OPTIONAL MATCH STATEMENT**\n\n```\n  PROFILE\n  MATCH (:user { id:\"foobar\" })-[:CONTACT]->(uc:contact)-[:CONTACT]->(ur:role)\n  WHERE HAS(ur.teamid)\n  WITH uc, ur\n\n  MATCH (c:contact {teamid: uc.teamid})\n  WITH DISTINCT c, {accessedby: uc.id, accessedrole: ur.name} AS r\n\n  OPTIONAL MATCH (c)-[:TAG]->(t:tag)\n  WITH c, {\n    accessedrole: r.accessedrole, accessedby: r.accessedby,\n    isinvited: r.isinvited,\n    tags: EXTRACT(x IN COLLECT(t) | {id: x.id, object: x.object, name: x.name})\n    } AS r\n\n  RETURN c, r LIMIT 10\n```\n\n**Result:** Cypher version: CYPHER 2.2, planner: COST. 8364 total db hits in 70 ms.\nFull plan available at http://i.imgur.com/QAPvO39.png.\n\n**Example 2:  Query with a multiple OPTIONAL MATCH STATEMENTs**\n\n```\n  PROFILE\n  MATCH (:user { id:\"foobar\" })-[:CONTACT]->(uc:contact)-[:CONTACT]->(ur:role)\n  WHERE HAS(ur.teamid)\n  WITH uc, ur\n\n  MATCH (c:contact {teamid: uc.teamid})\n  WITH DISTINCT c, {accessedby: uc.id, accessedrole: ur.name} AS r\n\n  OPTIONAL MATCH (c)-[:INVITE]->(i:invite)\n  WITH c, {\n    accessedrole: r.accessedrole, accessedby: r.accessedby,\n    isinvited: NOT i IS NULL\n    } AS r\n\n  OPTIONAL MATCH (c)-[:PHONE]->(p:phone)\n  WITH c, {\n    accessedrole: r.accessedrole, accessedby: r.accessedby,\n    isinvited: r.isinvited,\n    phones: EXTRACT(x IN COLLECT(p) | { id: x.id, object: x.object })\n    } AS r\n\n  OPTIONAL MATCH (c)-[:ADDRESS]->(a:address)\n  WITH c, {\n    accessedrole: r.accessedrole, accessedby: r.accessedby,\n    isinvited: r.isinvited, phones: r.phones,\n    addresses: EXTRACT(x IN COLLECT(a) | { id: x.id, object: x.object, street: x.street, locality: x.locality,\n        region: x.region, postcode: x.postcode, country: x.country, description: x.description, neighborhood: x.neighborhood, latlnglocation: x.latlnglocation\n      })\n    } AS r\n\n  OPTIONAL MATCH (c)-[:TAG]->(t:tag)\n  WITH c, {\n    accessedrole: r.accessedrole, accessedby: r.accessedby,\n    isinvited: r.isinvited, phones: r.phones, addresses: r.addresses,\n    tags: EXTRACT(x IN COLLECT(t) | {id: x.id, object: x.object, name: x.name})\n    } AS r\n\n  RETURN c, r LIMIT 10\n```\n\n**Result:** Cypher version: CYPHER 2.2, planner: RULE. 99988 total db hits in 731 ms.\nFull expanded query plan available at http://i.imgur.com/dvvEt48.png.\n\n**Result:** Cypher version: CYPHER 2.2, planner: COST. 5620191 total db hits in 4821 ms.\nFull expanded query plan available at http://i.imgur.com/L0nAJlB.png.\n"}, {"labels": ["2.2", "bug"], "filteredCommits": ["70136ede9ee5e11fbd6170a3d77478ea2c4de044"], "url": "https://github.com/neo4j/neo4j/issues/4342", "gitStatsSummary": {"insertions": 12, "gitFilesChange": 1, "lines": 13, "deletions": 1}, "numCommits": 1, "commits": {"6b5ec32950db5e6d4a71c10f0c7be38b6bd5f29a": {"commitUser": "systay", "commitGHEventType": "referenced"}, "70136ede9ee5e11fbd6170a3d77478ea2c4de044": {"commitUser": "davidegrohmann", "commitGHEventType": "closed"}}, "ttf": 1.0002777777777778, "user": "Deevian", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal"], "body": "We've also ran into this issue while trying out 2.2.0, and although somewhat esoteric, it's applicable to some of our queries. Consider this one:\n\n```\nSTART root=node:Person(id='deevian')\nRETURN ID(root) as id\n\nUNION \n\nSTART root=node:Person(id='retophy')\nRETURN ID(root) as id\n```\n\nExecuting it, Neo4j returns `key not found: SymbolUse(id@23)`, with a `Neo.DatabaseError.Statement.ExecutionFailure`message.\n\nThis only occurs if the statements have at least one `UNION`, and if one the parameters (in this case, `id`) is named the same as one of return aliases.\n\nIt does not occur when executed separately (without the `UNION`), when replacing `(id='deev')` with `('id:deev')`, or when changing the return alias to whatever else.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "2.2.0 Cypher Bug - Parameterized Legacy Index query with UNION exception", "statsSkippedReason": "", "closed": "2015-04-02 05:31:36", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2015-04-02 07:15:04", "commitHash": "6b5ec32950db5e6d4a71c10f0c7be38b6bd5f29a", "commitParents": ["b0bdf0210cdee5b6a012788aa87dac68cfec0955", "32cc782d0f6f4225ea48924e866f6e253368899f"], "commitGHEventType": "referenced", "nameRev": "6b5ec32950db5e6d4a71c10f0c7be38b6bd5f29a tags/2.2.1~39", "commitGitStats": [{"insertions": 2, "lines": 5, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/MatchAcceptanceTest.scala", "deletions": 3}, {"insertions": 12, "lines": 13, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/Namespacer.scala", "deletions": 1}, {"insertions": 11, "lines": 12, "filePath": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/NamespacerTest.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #4353 from davidegrohmann/2.2-namespace-and-start\n\nFixes #4342 - NameSpacing Identifiers in StartItem which are not in scope", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-04-02 07:15:04"}, {"commitUser": "davidegrohmann", "commitDateTime": "2015-04-01 16:45:27", "commitHash": "70136ede9ee5e11fbd6170a3d77478ea2c4de044", "commitParents": ["d1db7df9d14de72f0f464eaf580542c092ae4c9c"], "commitGHEventType": "closed", "nameRev": "70136ede9ee5e11fbd6170a3d77478ea2c4de044 tags/2.2.1~39^2~1", "commitGitStats": [{"insertions": 12, "lines": 13, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/Namespacer.scala", "deletions": 1}, {"insertions": 11, "lines": 12, "filePath": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/rewriters/NamespacerTest.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #4342 - NameSpacing Identifiers in StartItem which are not in scope\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-04-01 16:45:27"}], "created": "2015-03-31 11:40:58"}, {"labels": ["2.2", "bug"], "url": "https://github.com/neo4j/neo4j/issues/4341", "title": "2.2.0 Cypher Bug - Simple node by legacy index query ignores filtering", "closed": "2015-03-31 22:19:05", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2015-03-31 11:23:20", "user": "Deevian", "body": "Starting in Neo4j 2.2.0, we've noticed an issue with some of the legacy query results of our existing application. An example:\n\n```\nSTART root=node:Person('id:deev*')\nWHERE root.id = 'deevian'\nRETURN root\n```\n\nThis query will return every `Person` matched by the `START`, completely ignoring the following filter. Indeed, the `EXPLAIN` shows no filter being executed.\n\n<img src=\"http://i.imgur.com/uBe0z8q.png\"/>\n\nBy adding a `MATCH (root)` clause (or changing the `START` to `root=node(*)`, or adding whatever else, really), it starts working.\n\n```\nSTART root=node:Person('id:deev*')\nMATCH (root)\nWHERE root.id = 'deevian'\nRETURN root\n```\n\n<img src=\"http://i.imgur.com/E9IC2FA.png\"/>\n"}, {"labels": ["2.2", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4331", "title": "Alleged duplicate result column names in 2.2", "closed": "2015-12-16 12:59:22", "commitsDetails": [], "commits": {}, "ttf": 260.0002777777778, "created": "2015-03-30 16:28:46", "user": "area", "body": "I just upgraded from 2.1.7 to 2.2, and I've found an apparent regression in some cypher queries. I have only managed to test on 2.1.5, but I believe I saw this behaviour on 2.1.7 also. The following query works in 2.1.5, using the Movie stars sample data.\n\n```\nMATCH (p:Person {name:\"Tom Hanks\"}) with p, 10 as prop RETURN sum(p.born)*prop as a, sum(p.born)*prop as b\n```\n\nBut on 2.2, I get the error\n\n```\nMultiple result columns with the same name are not supported (line 1, column 75 (offset: 74))\n\"MATCH (p:Person {name:\"Tom Hanks\"}) with p, 10 as prop RETURN sum(p.born)*prop as a, sum(p.name)*prop as b\"\n```\n\nI note that this error remains even if the field being sum is different in these two cases. For example:\n\n```\nMATCH (p:Person {name:\"Tom Hanks\"}) with p, 10 as prop RETURN sum(p.born)*prop as a, sum(p.name)*prop as b\n```\n\nI know that such a query makes no sense with this dataset, but it is sufficient to show that on 2.2.0, you get the same 'multiple result columns' error, and on 2.1.5 you get\n\n```\nSUM(Property(p,name(3))) can only handle numerical values, or null.\n```\n\ni.e. indicating this query has still passed the check for duplicate result columns.\n\nThe query\n\n```\nMATCH (p:Person {name:\"Tom Hanks\"}) with p RETURN sum(p.born) as a, sum(p.born) as b\n```\n\nreturns correctly.\n"}, {"labels": ["2.2", "bug", "cypher"], "filteredCommits": ["f71c213a31395068396b6b83a0304d8aae3f858c"], "url": "https://github.com/neo4j/neo4j/issues/4315", "gitStatsSummary": {"insertions": 12, "gitFilesChange": 3, "lines": 28, "deletions": 16}, "numCommits": 1, "commits": {"0cb2632c79af0b190b51f880d5a7e4144ab64273": {"commitUser": "davidegrohmann", "commitGHEventType": "referenced"}, "f71c213a31395068396b6b83a0304d8aae3f858c": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 1.0002777777777778, "user": "nicolewhite", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal"], "body": "I was having trouble with a 2.2 cypher query and I was able to reproduce it with the movie dataset:\n\n```\nMATCH (tom:Person {name:'Tom Hanks'})-[:ACTED_IN]->(m:Movie)\nWITH tom, COLLECT(m) AS movies\nUNWIND movies AS movie\nMATCH (tom)-[:DIRECTED]->(movie)\nRETURN tom.name, movie.title\n```\n\nIn Neo4j 2.1.7, the results are as expected; I only get the movies that Tom Hanks has acted in and directed:\n\n```\n+-----------------------------------+\n| tom.name    | movie.title         |\n+-----------------------------------+\n| \"Tom Hanks\" | \"That Thing You Do\" |\n+-----------------------------------+\n```\n\nIn Neo4j 2.2.0, however, the `tom` identifier becomes unbounded and it matches on any person who's directed the movies:\n\n```\n+---------------------------------------------------+\n| tom.name               | movie.title              |\n+---------------------------------------------------+\n| \"Mike Nichols\"         | \"Charlie Wilson's War\"   |\n| \"Robert Zemeckis\"      | \"The Polar Express\"      |\n| \"Penny Marshall\"       | \"A League of Their Own\"  |\n| \"Robert Zemeckis\"      | \"Cast Away\"              |\n| \"Ron Howard\"           | \"Apollo 13\"              |\n| \"Frank Darabont\"       | \"The Green Mile\"         |\n| \"Ron Howard\"           | \"The Da Vinci Code\"      |\n| \"Andy Wachowski\"       | \"Cloud Atlas\"            |\n| \"Lana Wachowski\"       | \"Cloud Atlas\"            |\n| \"Tom Tykwer\"           | \"Cloud Atlas\"            |\n| \"Tom Hanks\"            | \"That Thing You Do\"      |\n| \"John Patrick Stanley\" | \"Joe Versus the Volcano\" |\n| \"Nora Ephron\"          | \"Sleepless in Seattle\"   |\n| \"Nora Ephron\"          | \"You've Got Mail\"        |\n+---------------------------------------------------+\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "2.2 Cypher bug - identifiers unbound after UNWIND", "statsSkippedReason": "", "closed": "2015-03-31 11:58:46", "commitsDetails": [{"commitUser": "davidegrohmann", "commitDateTime": "2015-03-31 13:47:25", "commitHash": "0cb2632c79af0b190b51f880d5a7e4144ab64273", "commitParents": ["0c75e15a2ae4ddfeeb66944c2922bfb3e7b124c6", "f71c213a31395068396b6b83a0304d8aae3f858c"], "commitGHEventType": "referenced", "nameRev": "0cb2632c79af0b190b51f880d5a7e4144ab64273 tags/2.2.1~55", "commitGitStats": [{"insertions": 30, "lines": 36, "filePath": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/convert/plannerQuery/StatementConvertersTest.scala", "deletions": 6}, {"insertions": 36, "lines": 36, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/UnwindAcceptanceTest.scala", "deletions": 0}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/QueryProjection.scala", "deletions": 4}, {"insertions": 8, "lines": 16, "filePath": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/PlannerQueryTest.scala", "deletions": 8}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 5, "lines": 10, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/convert/plannerQuery/PlannerQueryBuilder.scala", "deletions": 5}, {"insertions": 3, "lines": 10, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/PlannerQuery.scala", "deletions": 7}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #4336 from systay/unwind-bug\n\nFixes #4315 - UNWIND not passing through identifiers", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-03-31 13:47:25"}, {"commitUser": "systay", "commitDateTime": "2015-03-31 09:05:10", "commitHash": "f71c213a31395068396b6b83a0304d8aae3f858c", "commitParents": ["e3d733d6497ce985dd3d3c686ac7c54c997f5bed"], "commitGHEventType": "closed", "nameRev": "f71c213a31395068396b6b83a0304d8aae3f858c tags/2.2.1~55^2", "commitGitStats": [{"insertions": 30, "lines": 36, "filePath": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/convert/plannerQuery/StatementConvertersTest.scala", "deletions": 6}, {"insertions": 36, "lines": 36, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/UnwindAcceptanceTest.scala", "deletions": 0}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/QueryProjection.scala", "deletions": 4}, {"insertions": 8, "lines": 16, "filePath": "community/cypher/cypher-compiler-2.2/src/test/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/PlannerQueryTest.scala", "deletions": 8}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 5, "lines": 10, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/ast/convert/plannerQuery/PlannerQueryBuilder.scala", "deletions": 5}, {"insertions": 3, "lines": 10, "filePath": "community/cypher/cypher-compiler-2.2/src/main/scala/org/neo4j/cypher/internal/compiler/v2_2/planner/PlannerQuery.scala", "deletions": 7}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #4315 - UNWIND not binding to identifier\n\nThe way argument ids was being calculated was wrong, and\nso when planning expands, something that should have\nbeen a Expand(Into) was instead an Expand(All), and the\nwrong results were being produced.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-03-31 09:04:50"}], "created": "2015-03-29 18:06:14"}, {"labels": ["2.1", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4294", "title": "Removing and readding a relationship to a RelationshipIndex in a single transaction corrupts later queries using the node as a starting point", "closed": "2017-10-18 11:52:03", "commitsDetails": [], "commits": {}, "ttf": 936.0002777777778, "created": "2015-03-26 16:34:34", "user": "JohnButterworth", "body": "I am using Neo4j version 2.1.7 embedded in my Java application using JRE 1.8.0_32\n\nI've written a short test that seems to indicate that once a Relationship is removed and readded to a RelationshipIndex queries against that index that specify the relationship's starting node as a starting node in the query no longer return the correct results.\n\nI would appreciate if anyone can shed some light on this or if I have written the code incorrectly in the test.\n\nThank you.\n\nHere is the output of the test:\n\n```\nUpdate 1: Create 2 nodes and index their relationship\nCreated a left node with nickname 1\nCreated a right node with nickname 2\nCreated a relationship from left node 1 to right node 2\nIndexed the relationship from 1 to 2 with timestamp 1001\nThe relationship was returned by the query when the start node was NOT specified\nThe relationship was returned by the query when the start node was specified\n\nUpdate 2: Reindex the relationship\nUnindexed the relationship from 1 to 2\nIndexed the relationship from 1 to 2 with timestamp 1002\nThe relationship was returned by the query when the start node was NOT specified\nThe relationship was NOT returned by the query when the start node was specified\n```\n\nHere is the code for the test:\n\n``` java\npackage sample;\n\nimport org.neo4j.graphdb.Direction;\nimport org.neo4j.graphdb.DynamicLabel;\nimport org.neo4j.graphdb.GraphDatabaseService;\nimport org.neo4j.graphdb.Label;\nimport org.neo4j.graphdb.Node;\nimport org.neo4j.graphdb.Relationship;\nimport org.neo4j.graphdb.RelationshipType;\nimport org.neo4j.graphdb.ResourceIterable;\nimport org.neo4j.graphdb.Transaction;\nimport org.neo4j.graphdb.index.IndexManager;\nimport org.neo4j.graphdb.index.RelationshipIndex;\nimport org.neo4j.graphdb.schema.ConstraintDefinition;\nimport org.neo4j.graphdb.schema.IndexDefinition;\nimport org.neo4j.index.lucene.QueryContext;\nimport org.neo4j.index.lucene.ValueContext;\nimport org.neo4j.test.TestGraphDatabaseFactory;\nimport org.neo4j.tooling.GlobalGraphOperations;\n\npublic class SampleApp {\n    GraphDatabaseService graphDatabaseService;\n    final Label leftLabel = DynamicLabel.label(\"left\");\n    final Label rightLabel = DynamicLabel.label(\"right\");\n    final String nicknameProperty = \"nickname\";\n    final String relationshipIndexProperty = \"timestamp\";\n    RelationshipIndex leftToRightIndex;\n    long currentTime = 1000;\n\n    static enum SampleRelationshipType implements RelationshipType {\n        LEFT_TO_RIGHT\n    }\n\n    void createANode(Label label, int nickname) {\n        Node node = graphDatabaseService.createNode(label);\n        node.setProperty(nicknameProperty, nickname);\n        System.out.println(\"Created a \" + label.toString()\n                + \" node with nickname \" + nickname + \"\");\n    }\n\n    Node findNodeByLabelAndProperty(Label label, String propertyName, int value) {\n        final ResourceIterable<Node> results = graphDatabaseService\n                .findNodesByLabelAndProperty(label, propertyName, value);\n        return results.iterator().hasNext() ? results.iterator().next() : null;\n    }\n\n    Relationship createRelationship(int leftNickname, int rightNickname) {\n        final Node leftNode = findNodeByLabelAndProperty(leftLabel,\n                nicknameProperty, leftNickname);\n        final Node rightNode = findNodeByLabelAndProperty(rightLabel,\n                nicknameProperty, rightNickname);\n\n        Relationship relationship = leftNode.createRelationshipTo(rightNode,\n                SampleRelationshipType.LEFT_TO_RIGHT);\n        System.out.println(\"Created a relationship from \" + leftLabel + \" node \" \n                + leftNickname + \" to \" + rightLabel + \" node \"\n                + rightNickname + \"\");\n        return relationship;\n    }\n\n    Relationship getRelationship(int leftNickname, int rightNickname) {\n        final Node leftNode = findNodeByLabelAndProperty(leftLabel,\n                nicknameProperty, leftNickname);\n        final Node rightNode = findNodeByLabelAndProperty(rightLabel,\n                nicknameProperty, rightNickname);\n\n        for (final Relationship relationship : leftNode.getRelationships(\n                Direction.OUTGOING, SampleRelationshipType.LEFT_TO_RIGHT)) {\n            if (relationship.getEndNode().getId() == rightNode.getId()) {\n                return relationship;\n            }\n        }\n\n        return null;\n    }\n\n    void indexRelationship(Relationship relationship) {\n        ++currentTime;\n        leftToRightIndex.add(relationship, relationshipIndexProperty,\n                new ValueContext(currentTime).indexNumeric());\n\n        System.out.println(\"Indexed the relationship from \"\n                + relationship.getStartNode().getProperty(nicknameProperty)\n                + \" to \"\n                + relationship.getEndNode().getProperty(nicknameProperty)\n                + \" with timestamp \" + currentTime);\n    }\n\n    void unindexRelationship(Relationship relationship) {\n        leftToRightIndex.remove(relationship);\n\n        System.out\n                .println(\"Unindexed the relationship from \"\n                        + relationship.getStartNode().getProperty(\n                                nicknameProperty)\n                        + \" to \"\n                        + relationship.getEndNode().getProperty(\n                                nicknameProperty));\n    }\n\n    void createEmptyDb() {\n        graphDatabaseService = new TestGraphDatabaseFactory()\n                .newImpermanentDatabase();\n\n        try (Transaction tx = graphDatabaseService.beginTx()) {\n            for (ConstraintDefinition constraint : graphDatabaseService\n                    .schema().getConstraints()) {\n                constraint.drop();\n            }\n\n            for (IndexDefinition index : graphDatabaseService.schema()\n                    .getIndexes()) {\n                index.drop();\n            }\n\n            for (Relationship relationship : GlobalGraphOperations.at(\n                    graphDatabaseService).getAllRelationships()) {\n                relationship.delete();\n            }\n\n            for (Node node : GlobalGraphOperations.at(graphDatabaseService)\n                    .getAllNodes()) {\n                node.delete();\n            }\n\n            graphDatabaseService.schema().indexFor(leftLabel)\n                    .on(nicknameProperty).create();\n            graphDatabaseService.schema().indexFor(rightLabel)\n                    .on(nicknameProperty).create();\n            final IndexManager indexManager = graphDatabaseService.index();\n            leftToRightIndex = indexManager.forRelationships(\"LEFT_TO_RIGHT\");\n            tx.success();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    void createAndIndexRelationship(int leftNickname, int rightNickname) {\n        try (Transaction tx = graphDatabaseService.beginTx()) {\n            createANode(leftLabel, leftNickname);\n            createANode(rightLabel, rightNickname);\n            Relationship relationship = createRelationship(leftNickname,\n                    rightNickname);\n            indexRelationship(relationship);\n            tx.success();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    void reindexRelationship(int leftNickname, int rightNickname) {\n        try (Transaction tx = graphDatabaseService.beginTx()) {\n            Relationship relationship = getRelationship(leftNickname,\n                    rightNickname);\n            unindexRelationship(relationship);\n            indexRelationship(relationship);\n            tx.success();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    void verifyReturnedByQuery(int leftNickname, int rightNickname, boolean specifyStartNode) {\n        try (Transaction tx = graphDatabaseService.beginTx()) {\n            final Node leftNode = findNodeByLabelAndProperty(leftLabel,\n                    nicknameProperty, leftNickname);\n            final Node rightNode = findNodeByLabelAndProperty(rightLabel,\n                    nicknameProperty, rightNickname);\n\n            boolean theRelationshipWasFound = false;\n            for (final Relationship relationship : leftToRightIndex.query(\n                    QueryContext.numericRange(relationshipIndexProperty,\n                            Long.MIN_VALUE, Long.MAX_VALUE).sortNumeric(\n                            relationshipIndexProperty, true), specifyStartNode ? leftNode : null, null)) {\n                if (relationship.getStartNode().getId() == leftNode.getId() &&\n                    relationship.getEndNode().getId() == rightNode.getId()) {\n                    theRelationshipWasFound = true;\n                    break;\n                }\n            }\n\n            System.out.println(\"The relationship was \" + (theRelationshipWasFound ? \"\" : \"NOT \") + \"returned by the query when the start node was \" + (specifyStartNode ? \"\" : \"NOT \") + \"specified\");\n            tx.success();\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    void go() {\n        createEmptyDb();\n        int leftNickname = 1, rightNickname = 2;\n\n        System.out.println(\"\\nUpdate 1: Create 2 nodes and index their relationship\");\n        createAndIndexRelationship(leftNickname, rightNickname);\n        verifyReturnedByQuery(leftNickname, rightNickname, false);\n        verifyReturnedByQuery(leftNickname, rightNickname, true);\n\n        System.out.println(\"\\nUpdate 2: Reindex the relationship\");\n        reindexRelationship(leftNickname, rightNickname);\n        verifyReturnedByQuery(leftNickname, rightNickname, false);\n        verifyReturnedByQuery(leftNickname, rightNickname, true);\n    }\n\n    public static void main(String[] args) {\n        new SampleApp().go();\n        System.exit(0);\n    }\n}\n```\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/4231", "title": "2.2.0-RC1 query difference", "closed": "2015-12-06 19:23:36", "commitsDetails": [], "commits": {}, "ttf": 264.0002777777778, "created": "2015-03-16 20:17:46", "user": "cheerfulstoic", "body": "This seems like a bug to me, but I'll let you be the judge:\n\nRun these two commands in 2.1.7 and 2.2.0-RC01 and you get different results.\n\nThe setup:\n\n``` cypher\nCREATE (a:Foo)-[:HAS]->(b:Bar)<-[:HAS]-(c:Foo), (d:Foo)-[:HAS]->(e:Bar)\n```\n\nThe query:\n\n``` cypher\nMATCH (a:Foo) OPTIONAL MATCH a--(b:Bar) WHERE NOT(a--(b:Bar)--()) RETURN b\n```\n\nIn 2.1.7, one `Bar` object is returned.  In 2.2.0-RC01 three `null` rows are returned\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/4187", "title": "Not sure if bug: No help text or log on browser UI on 2.2", "closed": "2015-03-18 17:16:17", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2015-03-12 04:51:52", "user": "whatSocks", "body": "Old versions had logo and help text:\n![46_open_the_browser_chrome](https://cloud.githubusercontent.com/assets/2731744/6612386/de329e64-c851-11e4-8e05-a2d3625907d2.png)\n\n2.2 has no logo or help text:\n![screenshot 2015-03-12 00 50 27](https://cloud.githubusercontent.com/assets/2731744/6612388/f1848054-c851-11e4-86ba-74493a1e1c3d.png)\n"}, {"labels": ["bug", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4157", "title": "Pressing tab in neo4j-shell with invalid command started causes shell to emit stack trace", "closed": "2018-11-07 19:05:37", "commitsDetails": [], "commits": {}, "ttf": 1339.0002777777777, "created": "2015-03-09 14:53:51", "user": "MikeBenza", "body": "If you start the shell and enter an invalid command, a space, and then hit tab any time in a query after that, you get a stack dump in the console.\n\n`moo[tab]` -> ok\n`moo [tab]` -> stack dump in console\n`moo cow[tab]` -> stack dump in console\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4066", "title": "NullPointerException @ CloseableThreadLocal.set (2.2.0-M4)", "closed": "2015-03-05 04:51:16", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2015-02-24 14:40:52", "user": "tkroman", "body": "During the stress testing of our application this bug appears under a highly concurrent number of requests involving neo4j: \n\n```\n    java.lang.NullPointerException\n    at org.apache.lucene.util.CloseableThreadLocal.set(CloseableThreadLocal.java:98)\n    at org.apache.lucene.index.TermInfosReader.getThreadResources(TermInfosReader.java:164)\n    at org.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:184)\n    at org.apache.lucene.index.TermInfosReader.get(TermInfosReader.java:172)\n    at org.apache.lucene.index.SegmentReader.docFreq(SegmentReader.java:539)\n    at org.apache.lucene.search.TermQuery$TermWeight$1.add(TermQuery.java:56)\n    at org.apache.lucene.util.ReaderUtil$Gather.run(ReaderUtil.java:81)\n    at org.apache.lucene.util.ReaderUtil$Gather.run(ReaderUtil.java:87)\n    at org.apache.lucene.util.ReaderUtil$Gather.run(ReaderUtil.java:70)\n    at org.apache.lucene.search.TermQuery$TermWeight.<init>(TermQuery.java:53)\n    at org.apache.lucene.search.TermQuery.createWeight(TermQuery.java:199)\n    at org.apache.lucene.search.Searcher.createNormalizedWeight(Searcher.java:168)\n    at org.apache.lucene.search.IndexSearcher.createNormalizedWeight(IndexSearcher.java:664)\n    at org.apache.lucene.search.IndexSearcher.searchAfter(IndexSearcher.java:319)\n    at org.apache.lucene.search.IndexSearcher.searchAfter(IndexSearcher.java:305)\n    at org.neo4j.kernel.api.impl.index.PageOfRangesIterator.fetchNextOrNull(PageOfRangesIterator.java:67)\n    at org.neo4j.kernel.api.impl.index.PageOfRangesIterator.fetchNextOrNull(PageOfRangesIterator.java:35)\n    at org.neo4j.helpers.collection.PrefetchingIterator.peek(PrefetchingIterator.java:60)\n    at org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:46)\n    at org.neo4j.collection.primitive.PrimitiveLongCollections$PrimitiveLongConcatingIterator.fetchNext(PrimitiveLongCollections.java:194)\n    at org.neo4j.collection.primitive.PrimitiveLongCollections$PrimitiveLongBaseIterator.hasNext(PrimitiveLongCollections.java:54)\n    at org.neo4j.kernel.InternalAbstractGraphDatabase$PropertyValueFilteringNodeIdIterator.fetchNext(InternalAbstractGraphDatabase.java:1360)\n    at org.neo4j.collection.primitive.PrimitiveLongCollections$PrimitiveLongBaseIterator.hasNext(PrimitiveLongCollections.java:54)\n    at org.neo4j.collection.primitive.PrimitiveLongCollections$13.hasNext(PrimitiveLongCollections.java:708)\n    at org.neo4j.helpers.collection.ResourceClosingIterator.hasNext(ResourceClosingIterator.java:61)\n    at ontrack.bush.util.stream.TxSpliterator.tryAdvance(TxSpliterator.java:51)\n    at ontrack.bush.util.stream.TxSpliterator.forEachRemaining(TxSpliterator.java:35)\n    at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:512)\n    at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:502)\n    at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)\n    at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\n    at java.util.stream.LongPipeline.reduce(LongPipeline.java:438)\n    at java.util.stream.LongPipeline.sum(LongPipeline.java:396)\n    at dnet.controller.services.files.Allocate.rpc(Allocate.java:41)\n    at fw.network.BeeServiceInvoker.invokeRpc(BeeServiceInvoker.java:70)\n    at fw.network.BeeServiceInvoker.invoke(BeeServiceInvoker.java:46)\n    at fw.network.BeeServiceInvoker.invoke(BeeServiceInvoker.java:36)\n    at fw.hive.invoker.InvocationChain.submit(InvocationChain.java:114)\n    at fw.network.server.BeeNetworkMessageProcessor.process(BeeNetworkMessageProcessor.java:103)\n    at fw.network.server.BeeNetworkMessageProcessor.handlePayload(BeeNetworkMessageProcessor.java:69)\n    at fw.network.server.AbstractNetworkMessageProcessor.run(AbstractNetworkMessageProcessor.java:134)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\nThe code is something like this (not exactly, just the gist), so there is really not so much place to fail for me:\n\n```\n    try (Transaction tx = db.beginTx()) {\n        long sum = 0L;\n        for (Node node : loop(db.findNodes(label, key, value))) {\n            sum += node.getProperty(\"prop\", 0L);\n        }\n        return sum;\n    }\n```\n\nWe also experience periodic index misses from time to time (I believe this has something to do with 'eventual' consistency). If there is anything I can do to help to resolve this issue, I'd be glad to.\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4051", "title": "Missing indices for the available constraints", "closed": "2017-10-18 14:11:31", "commitsDetails": [], "commits": {}, "ttf": 968.0002777777778, "created": "2015-02-23 09:50:06", "user": "srivastavarobin", "body": "#### Quick Intro\n\nThe DB is in a state where the indices are missing for certain constraints. Trying to delete those constraints are giving error related to system's transaction.\n#### Details\n\nAn attempt to set unique constraint (from the browser) on `id` property of `X` label resulted in a wait for over 10 minutes and ultimately resulted with an `Unknown Exception`. Another attempt was made for the same thing, however this time it lead to Neo4j not able to honour other incoming requests and it ultimately lead to a freeze. An attempt to restart Neo4j also went into a really long wait. Finally the machine had to be restarted to bring the system live again.\n\nAfter the restart, Neo4j detected improper shutdown and recovered from it. However, upon checking the `schema` it showed the constraint on `id` of `X` is created but there is no index available for it. Upon trying to create a node with label `X` and some value to property `id` resulted in errors. An attempt to drop the constraint gives the following error:\n\n`SystemException: Kernel has encountered some problem, please perform necessary action (tx recovery/restart)`\n\nFortunately an index created manually on `id` of `X` resumed the normal process of creation of nodes with that label.\n\nHow to bring back sanity to the system?\n##### Environment Details\n- Primary Server: Hosted on Amazon (m3.large)\n- Replication Server: Hosted on Amazon (m3.large)\n- The label X already had over 2 million nodes in the database\n"}, {"labels": ["bug", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/4050", "title": "Neo4jshell doesn't show cursor when pressing left or right arrow key in Neo4j Windows", "closed": "2018-11-07 19:04:41", "commitsDetails": [], "commits": {}, "ttf": 1355.0002777777777, "created": "2015-02-21 17:05:01", "user": "s101d1", "body": "For neo4j windows version (I'm using v2.1.7), in the neo4jshell session, you can't see the cursor when the cursor is moved by pressing or holding left or right arrow key. In this case it's very hard for me to position the cursor.\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3917", "title": "Labels created with the BatchInserter don't obey set semantics", "closed": "2017-10-18 13:58:17", "commitsDetails": [], "commits": {}, "ttf": 991.0002777777778, "created": "2015-01-30 22:37:56", "user": "ccondit", "body": "`BatchInserter` should defensively respect set semantics of node labels. Having duplicate labels on nodes isn't logical. \n\nWhen adding labels using the embedded API the following holds:\n\n```\nnode.addLabel(LABEL);\nnode.addLabel(LABEL);\nnode.getLabels(); // equals {LABEL}\n```\n\nhowever `BatchInserter` allows the following:\n\n```\ninserter.setNodeLabels(nodeId, LABEL, LABEL);\ninserter.getNodeLabels(); // equals {LABEL, LABEL}\n```\n\nand further, after the resulting graph has been loaded by the embedded API:\n\n```\nnode.getLabels(); // equals {LABEL, LABEL}\n```\n\nDuplicate labels should be ignored by the batch inserter.\n"}, {"labels": ["bug", "build", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/3911", "title": "Build failure (org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters.InlineProjectionsTest)", "closed": "2017-10-06 15:03:45", "commitsDetails": [], "commits": {}, "ttf": 980.0002777777778, "created": "2015-01-30 10:33:27", "user": "antonio-castellon", "body": "I'm trying to build the code (with tests) into a new Linux environment (Ubuntu 32 bits, OpenJDK 1.7) because at the moment I can't do it on Windows environment (Build failure in Cypher Documentation module #3883)  and I found this error:\n\n```\nmatch n where id(n) IN [0,1,2,3] with n.division AS `n.division`, max(n.age) AS `max(n.age)` with `n.division` AS `n.division`, `max(n.age)` AS `max(n.age)` RETURN `n.division` AS `n.division`, `max(n.age)` AS `max(n.age)` order by `max(n.age)`(org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters.InlineProjectionsTest)  Time elapsed: 0.027 sec  <<< ERROR!\norg.scalatest.exceptions.TestFailedException: Query(None,SingleQuery(List(Match(false,Pattern(List(EveryPath(NodePattern(Some(Identifier(n)),List(),None,true)))),List(),Some(Where(In(FunctionInvocation(FunctionName(id),false,Vector(Identifier(n))),Collection(List(SignedDecimalIntegerLiteral(0), SignedDecimalIntegerLiteral(1), SignedDecimalIntegerLiteral(2), SignedDecimalIntegerLiteral(3))))))), With(false,ReturnItems(false,Vector(AliasedReturnItem(Property(Identifier(n),PropertyKeyName(division)),Identifier(n.division)), AliasedReturnItem(FunctionInvocation(FunctionName(max),false,Vector(Property(Identifier(n),PropertyKeyName(age)))),Identifier(max(n.age))))),None,None,None,None), With(false,ReturnItems(false,Vector(AliasedReturnItem(Identifier(n.division),Identifier(n.division)), AliasedReturnItem(Identifier(max(n.age)),Identifier(max(n.age))))),None,None,None,None), With(false,ReturnItems(false,Vector(AliasedReturnItem(Identifier(n.division),Identifier(n.division)), AliasedReturnItem(Identifier(max(n.age)),Identifier(  FRESHID197)))),Some(OrderBy(List(AscSortItem(Identifier(  FRESHID197))))),None,None,None), Return(false,ReturnItems(false,List(AliasedReturnItem(Identifier(n.division),Identifier(n.division)), AliasedReturnItem(Identifier(  FRESHID197),Identifier(max(n.age))))),None,None,None)))) did not equal Query(None,SingleQuery(List(Match(false,Pattern(List(EveryPath(NodePattern(Some(Identifier(n)),List(),None,true)))),List(),Some(Where(In(FunctionInvocation(FunctionName(id),false,Vector(Identifier(n))),Collection(List(SignedDecimalIntegerLiteral(0), SignedDecimalIntegerLiteral(1), SignedDecimalIntegerLiteral(2), SignedDecimalIntegerLiteral(3))))))), With(false,ReturnItems(false,Vector(AliasedReturnItem(Property(Identifier(n),PropertyKeyName(division)),Identifier(n.division)), AliasedReturnItem(FunctionInvocation(FunctionName(max),false,Vector(Property(Identifier(n),PropertyKeyName(age)))),Identifier(max(n.age))))),None,None,None,None), With(false,ReturnItems(false,Vector(AliasedReturnItem(Identifier(n.division),Identifier(n.division)), AliasedReturnItem(Identifier(max(n.age)),Identifier(max(n.age))))),None,None,None,None), With(false,ReturnItems(false,Vector(AliasedReturnItem(Identifier(n.division),Identifier(n.division)), AliasedReturnItem(Identifier(max(n.age)),Identifier(  FRESHID194)))),Some(OrderBy(List(AscSortItem(Identifier(  FRESHID194))))),None,None,None), Return(false,ReturnItems(false,List(AliasedReturnItem(Identifier(n.division),Identifier(n.division)), AliasedReturnItem(Identifier(  FRESHID194),Identifier(max(n.age))))),None,None,None))))\n        at org.scalatest.MatchersHelper$.newTestFailedException(MatchersHelper.scala:160)\n        at org.scalatest.Matchers$ShouldMethodHelper$.shouldMatcher(Matchers.scala:5980)\n        at org.scalatest.Matchers$AnyShouldWrapper.should(Matchers.scala:6026)\n        at org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters.InlineProjectionsTest$$anonfun$26.apply$mcV$sp(InlineProjectionsTest.scala:376)\n        at org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters.InlineProjectionsTest$$anonfun$26.apply(InlineProjectionsTest.scala:366)\n        at org.neo4j.cypher.internal.compiler.v2_2.ast.rewriters.InlineProjectionsTest$$anonfun$26.apply(InlineProjectionsTest.scala:366)\n        at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)\n        at org.scalatest.Transformer$$anonfun$apply$1.apply(Transformer.scala:22)\n        at org.scalatest.OutcomeOf$class.outcomeOf(OutcomeOf.scala:85)\n        at org.scalatest.OutcomeOf$.outcomeOf(OutcomeOf.scala:104)\n        at org.scalatest.Transformer.apply(Transformer.scala:22)\n        at org.scalatest.Transformer.apply(Transformer.scala:20)\n        at org.scalatest.FunSuiteLike$$anon$1.apply(FunSuiteLike.scala:158)\n        at org.scalatest.Suite$class.withFixture(Suite.scala:1121)\n        at org.neo4j.cypher.internal.commons.CypherFunSuite.withFixture(CypherFunSuite.scala:28)\n        at org.scalatest.FunSuiteLike$class.invokeWithFixture$1(FunSuiteLike.scala:155)\n        at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:167)\n        at org.scalatest.FunSuiteLike$$anonfun$runTest$1.apply(FunSuiteLike.scala:167)\n        at org.scalatest.SuperEngine.runTestImpl(Engine.scala:306)\n        at org.scalatest.FunSuiteLike$class.runTest(FunSuiteLike.scala:167)\n        at org.neo4j.cypher.internal.commons.CypherFunSuite.org$scalatest$BeforeAndAfterEach$$super$runTest(CypherFunSuite.scala:28)\n        at org.scalatest.BeforeAndAfterEach$class.runTest(BeforeAndAfterEach.scala:255)\n        at org.neo4j.cypher.internal.commons.CypherFunSuite.runTest(CypherFunSuite.scala:28)\n        at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:199)\n        at org.scalatest.FunSuiteLike$$anonfun$runTests$1.apply(FunSuiteLike.scala:199)\n        at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:413)\n        at org.scalatest.SuperEngine$$anonfun$traverseSubNodes$1$1.apply(Engine.scala:401)\n        at scala.collection.immutable.List.foreach(List.scala:318)\n        at org.scalatest.SuperEngine.traverseSubNodes$1(Engine.scala:401)\n        at org.scalatest.SuperEngine.org$scalatest$SuperEngine$$runTestsInBranch(Engine.scala:396)\n        at org.scalatest.SuperEngine.runTestsImpl(Engine.scala:483)\n        at org.scalatest.FunSuiteLike$class.runTests(FunSuiteLike.scala:199)\n        at org.neo4j.cypher.internal.commons.CypherFunSuite.runTests(CypherFunSuite.scala:28)\n        at org.scalatest.Suite$class.run(Suite.scala:1423)\n        at org.neo4j.cypher.internal.commons.CypherFunSuite.org$scalatest$FunSuiteLike$$super$run(CypherFunSuite.scala:28)\n        at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:203)\n        at org.scalatest.FunSuiteLike$$anonfun$run$1.apply(FunSuiteLike.scala:203)\n        at org.scalatest.SuperEngine.runImpl(Engine.scala:545)\n        at org.scalatest.FunSuiteLike$class.run(FunSuiteLike.scala:203)\n        at org.neo4j.cypher.internal.commons.CypherFunSuite.run(CypherFunSuite.scala:28)\n        at org.scalatest.junit.JUnitRunner.run(JUnitRunner.scala:99)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)\n        at org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)\n        at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)\n        at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)\n        at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)\n\n```\n\n```\n[INFO] Neo4j - Cypher Compiler 2.2 ....................... FAILURE [3:50.376s]\n[INFO] Neo4j - Cypher .................................... SKIPPED\n```\n\nAfter this error log also appears more test errors ... \n\nAny ideas? because I checked the same source folder compiling with other Windows Environment and I have no Test Case errors on `Cypher-Compiler-2.2`.\n\n```\nResults :\n\nTests run: 2236, Failures: 0, Errors: 0, Skipped: 0\n\n[INFO]\n[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ neo4j-cypher-compiler-2.2 ---\n```\n"}, {"labels": ["bug", "build", "docs"], "url": "https://github.com/neo4j/neo4j/issues/3883", "title": "Build failure in Cypher Documentation module", "closed": "2016-10-27 14:52:21", "commitsDetails": [], "commits": {}, "ttf": 638.0002777777778, "created": "2015-01-28 08:18:02", "user": "antonio-castellon", "body": "Dear Developers,\n\nI'm trying to compile from the last changes in the master repository and now it throws an exception just when it try to compile the _Cypher Documentation_. \n\n```\n[ERROR] Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.3.2:java (parse-graphgist) on project neo4j-cypher-docs: An exception occured while executing the Java class. null: InvocationTarge\ntException: Failed while executing file: import-csv-with-cypher.asciidoc in the directory C:\\DEV\\github\\fork\\neo4j\\community\\cypher\\docs\\cypher-docs\\target\\docs\\parsed-graphgists: java.sql.SQLExceptio\nn: No suitable driver found for jdbc:hsqldb:mem:graphgist;shutdown=true -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.codehaus.mojo:exec-maven-plugin:1.3.2:java (parse-graphgist) on project neo4j-cypher-docs: An exception occured while\n executing the Java class. null\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:216)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)\n        at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)\n        at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)\n        at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120)\n        at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:347)\n        at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:154)\n        at org.apache.maven.cli.MavenCli.execute(MavenCli.java:582)\n        at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:214)\n        at org.apache.maven.cli.MavenCli.main(MavenCli.java:158)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)\n        at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)\n        at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)\n        at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)\nCaused by: org.apache.maven.plugin.MojoExecutionException: An exception occured while executing the Java class. null\n        at org.codehaus.mojo.exec.ExecJavaMojo.execute(ExecJavaMojo.java:345)\n        at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)\n        ... 19 more\nCaused by: java.lang.reflect.InvocationTargetException\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n        at java.lang.reflect.Method.invoke(Unknown Source)\n        at org.codehaus.mojo.exec.ExecJavaMojo$1.run(ExecJavaMojo.java:293)\n        at java.lang.Thread.run(Unknown Source)\nCaused by: java.lang.RuntimeException: Failed while executing file: import-csv-with-cypher.asciidoc in the directory C:\\DEV\\github\\fork\\neo4j\\community\\cypher\\docs\\cypher-docs\\target\\docs\\parsed-graph\ngists\n        at org.neo4j.doc.cypherdoc.Main.executeDirectory(Main.java:100)\n        at org.neo4j.doc.cypherdoc.Main.executeDirectory(Main.java:90)\n        at org.neo4j.doc.cypherdoc.Main.main(Main.java:68)\n        ... 6 more\nCaused by: java.lang.RuntimeException: java.sql.SQLException: No suitable driver found for jdbc:hsqldb:mem:graphgist;shutdown=true\n        at org.neo4j.doc.cypherdoc.CypherDoc.parse(CypherDoc.java:89)\n        at org.neo4j.doc.cypherdoc.Main.executeFile(Main.java:129)\n        at org.neo4j.doc.cypherdoc.Main.executeDirectory(Main.java:96)\n        ... 8 more\nCaused by: java.sql.SQLException: No suitable driver found for jdbc:hsqldb:mem:graphgist;shutdown=true\n        at java.sql.DriverManager.getConnection(Unknown Source)\n        at java.sql.DriverManager.getConnection(Unknown Source)\n        at org.neo4j.doc.cypherdoc.CypherDoc.parse(CypherDoc.java:78)\n        ... 10 more\n\n```\n\nI see that the driver version was not indicated into the `pom.xml` from the cypher documents, but if I put it by hand the error persist. :/\n\nIt was fine few days ago, but not now.... maybe will be fine if someone introduce something like `-Ddocuments.skip` in order to skip this build from Windows environments.\n\nThanks in advance,\nAntonio\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/3877", "title": "(2.2.0M02, bug) Browser: query output panels bugged in Firefox", "closed": "2015-02-05 15:28:22", "commitsDetails": [], "commits": {}, "ttf": 9.000277777777777, "created": "2015-01-27 09:06:13", "user": "mindrones", "body": "After doing the same query in Chrome and Firefox I get two completely different result panels.\nEven if the one in Firefox is evidently bugged, it also shows features that are not present in Chrome, like a green label \"Cypher\" before the query string.\n\nThe most prominent bug is that the result panel is too wide, hence **I can't delete it**.\n\nAlso, the graphs in the 2 browsers have different styles.\n\n**Chrome**\n![neo4j_browser_chrome40_ok](https://cloud.githubusercontent.com/assets/1309648/5915906/6990404c-a60b-11e4-9df1-afb370bb04d0.png)\n\n**Firefox**\n![neo4j_browser_firefox35_bug](https://cloud.githubusercontent.com/assets/1309648/5915917/82829abe-a60b-11e4-8c0d-19db5d622eb1.png)\n\n_System_\n- Neo4j 2.2.0 M02\n- Mac OS X 10.7.5\n- Chrome 40.0.2214.91\n- Firefox 35.0.1\n"}, {"labels": ["2.2", "browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/3875", "title": "(2.2.0M02, bug) Browser / Saved scripts: only adds the first of dragged files", "closed": "2016-04-22 13:52:56", "commitsDetails": [], "commits": {}, "ttf": 451.0002777777778, "created": "2015-01-27 08:32:33", "user": "mindrones", "body": "In the Neo4j browser, \"Saved scripts\" tab:\n- add own folder\n- switch to the Finder\n- drag 2 .cql files to \"Drag Cypher script to import\"\n- -> I get only one in scripts listed in my folder\n\nThe same happens in Chrome and Firefox.\n\n_System_\n- Neo4j 2.2.0 M02\n- Mac OS X 10.7.5\n- Chrome 40.0.2214.91\n- Firefox 35.0.1\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/3823", "title": "Neo4jnstaller.BAT does not return a non-zero error code if it Java is not detected", "closed": "2016-02-10 11:32:34", "commitsDetails": [], "commits": {}, "ttf": 389.0002777777778, "created": "2015-01-17 04:59:25", "user": "glennsarti", "body": "The Neo4jnstaller.BAT returns exit code 0 if Java is not installed.  This makes automating Neo4j installation difficult as you can't depend on the exit code to indicate that the installation was successful.\n\nThis is package I'm creating;\nhttps://chocolatey.org/packages/neo4j-community/2.1.6\n\nWhen the correct version of Java is installed the exitcode will come from the last SC.EXE command that's executed.\n\nEnvironment:\nNeo4j-community-windows.zip version 2.1.6 and 2.2.0-M2\nJava - Not installed\nWindows 8 or 8.1 - 64bit\n\nPossible resolution:\nhttps://github.com/neo4j/neo4j/blob/master/packaging/standalone/src/main/distribution/shell-scripts/bin/Neo4jInstaller.bat\n\nAs an example, Line 51 - replace\n\n```\n  if not \"%javaHomeError%\" == \"\" (\n    echo %javaHomeError%\n    call:instructions\n    goto:eof\n  )\n```\n\nwith\n\n```\n  if not \"%javaHomeError%\" == \"\" (\n    echo %javaHomeError%\n    call:instructions\n    exit /B 255\n  )\n```\n\nThis would return error code 255 to the caller\n"}, {"labels": ["2.2", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/3780", "title": "`SyntaxException: Unknown identifier `  AGGREGATION279` in 2.2.0.M02 with 2.2-cost", "closed": "2016-10-20 19:54:26", "commitsDetails": [], "commits": {}, "ttf": 649.0002777777778, "created": "2015-01-09 23:13:34", "user": "subvertallchris", "body": "This query works:\n\n```\nMATCH (c:Composer)-[r:CREATED_BY]-(w:Work)<-[*..2]-(prog:Program)\nWHERE c.lastname =~ '(?i).*stravinsky.*'\nWITH LEFT(prog.date, 3)+\"0\" AS Decade, w.title AS Title, COUNT(prog.title) AS Total\nORDER BY Decade, Total DESC, Title\nWITH Decade, Title, Total, HEAD(COLLECT(Total)) AS PerformedTotal\nWITH Decade, [title in COLLECT(Title) WHERE Total = PerformedTotal] as Title, Total, PerformedTotal\nORDER BY PerformedTotal DESC\nreturn Decade, HEAD(COLLECT(PerformedTotal)) as Totals, HEAD(COLLECT(Title)) as Titles\nORDER BY Decade\n```\n\nThis does not:\n\n```\nMATCH (c:Composer)-[r:CREATED_BY]-(w:Work)<-[:PERFORMED]-(prog:Program)\nWHERE c.lastname =~ '(?i).*stravinsky.*'\nWITH LEFT(prog.date, 3)+\"0\" AS Decade, w.title AS Title, COUNT(prog.title) AS Total\nORDER BY Decade, Total DESC, Title\nWITH Decade, Title, Total, HEAD(COLLECT(Total)) AS PerformedTotal\nWITH Decade, [title in COLLECT(Title) WHERE Total = PerformedTotal] as Title, Total, PerformedTotal\nORDER BY PerformedTotal DESC\nreturn Decade, HEAD(COLLECT(PerformedTotal)) as Totals, HEAD(COLLECT(Title)) as Titles\nORDER BY Decade\n```\n\nThe only difference between the two is changing `[*..2]` to `[:PERFORMED]` on the first line. It does work with 2.2-rule and 2.1.\n\nFound this while working on Found this while working on http://stackoverflow.com/questions/27850600/how-to-return-max-counts-per-another-nodes-properties/.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/3774", "title": "Browser: result window expands on long property values", "closed": "2015-03-02 14:04:25", "commitsDetails": [], "commits": {}, "ttf": 51.000277777777775, "created": "2015-01-09 15:21:34", "user": "mtomala", "body": "Neo4j 2.2.0-M02 - browser.\n\nWhen nodes have properties with long values (text width is greater than result window width) the status block in result window expands horizontally with result window itself so nodes moves outside the screen. \nAfter that hovered node is no more hovered and status is changed back to \"Displaying 25 nodes, 0 relationships\" and it shrinks to original size. And after it shrinks and if mouse pointer is in the same place node gets hover again, and so on...\n"}, {"labels": ["2.2", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3727", "title": "Neo4j 2.2M02 returns Java error for LOAD CSV cypher script working in previous version", "closed": "2016-01-14 16:21:47", "commitsDetails": [], "commits": {}, "ttf": 386.0002777777778, "created": "2014-12-23 17:57:26", "user": "danielcor", "body": "This error recommends the use of tryExtract appears to be a Java error message rather than a cypher one...   The CSV File does have empty strings.\n\n{\"results\":[],\"errors\":[{\"code\":\"Neo.DatabaseError.Statement.ExecutionFailure\",\"message\":\"String didn't extract value for Mark[line:2, from:191, to:191]. For values which are optional please use tryExtract method instead\",\"stackTrace\":\"java.lang.IllegalStateException: String didn't extract value for Mark[line:2, from:191, to:191]. For values which are optional please use tryExtract method instead\\r\\n\\tat org.neo4j.csv.reader.BufferedCharSeeker.extract(BufferedCharSeeker.java:197)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.spi.CSVResources$$anon$1$$anonfun$readNextRow$1.apply$mcV$sp(CSVResources.scala:58)\\r\\n\\tat scala.util.control.Breaks.breakable(Breaks.scala:37)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.spi.CSVResources$$anon$1.readNextRow(CSVResources.scala:56)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.spi.CSVResources$$anon$1.next(CSVResources.scala:76)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.spi.CSVResources$$anon$1.next(CSVResources.scala:53)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.LoadCSVPipe$$anonfun$internalCreateResults$1.apply(LoadCSVPipe.scala:70)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.LoadCSVPipe$$anonfun$internalCreateResults$1.apply(LoadCSVPipe.scala:62)\\r\\n\\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\\r\\n\\tat scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\\r\\n\\tat scala.collection.Iterator$class.foreach(Iterator.scala:727)\\r\\n\\tat scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\\r\\n\\tat scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)\\r\\n\\tat scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:176)\\r\\n\\tat scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:45)\\r\\n\\tat scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)\\r\\n\\tat scala.collection.AbstractIterator.to(Iterator.scala:1157)\\r\\n\\tat scala.collection.TraversableOnce$class.toList(TraversableOnce.scala:257)\\r\\n\\tat scala.collection.AbstractIterator.toList(Iterator.scala:1157)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.EagerPipe.internalCreateResults(EagerPipe.scala:32)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:119)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:116)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:116)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:116)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:116)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:116)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:116)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:92)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:64)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:121)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:106)\\r\\n\\tat org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anon$1.execute(ExecutionPlanBuilder.scala:70)\\r\\n\\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper$$anonfun$execute$1.apply(CompatibilityFor2_2.scala:141)\\r\\n\\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper$$anonfun$execute$1.apply(CompatibilityFor2_2.scala:141)\\r\\n\\tat org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_2$.runSafely(CompatibilityFor2_2.scala:97)\\r\\n\\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper.execute(CompatibilityFor2_2.scala:140)\\r\\n\\tat org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper.execute(CompatibilityFor2_2.scala:127)\\r\\n\\tat org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:84)\\r\\n\\tat org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:79)\\r\\n\\tat org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:87)\\r\\n\\tat org.neo4j.cypher.javacompat.internal.ServerExecutionEngine.executeQuery(ServerExecutionEngine.java:59)\\r\\n\\tat org.neo4j.server.rest.transactional.TransactionHandle.executeStatements(TransactionHandle.java:320)\\r\\n\\tat org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:139)\\r\\n\\tat org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:204)\\r\\n\\tat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\\r\\n\\tat com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\\r\\n\\tat com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:302)\\r\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1510)\\r\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1419)\\r\\n\\tat com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1409)\\r\\n\\tat com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:409)\\r\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:540)\\r\\n\\tat com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:715)\\r\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:751)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1666)\\r\\n\\tat org.neo4j.server.guard.GuardingRequestFilter.doFilter(GuardingRequestFilter.java:68)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1636)\\r\\n\\tat org.neo4j.server.guard.GuardingRequestFilter.doFilter(GuardingRequestFilter.java:68)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1636)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:564)\\r\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:219)\\r\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1111)\\r\\n\\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:498)\\r\\n\\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:183)\\r\\n\\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1045)\\r\\n\\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:141)\\r\\n\\tat org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\\r\\n\\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:98)\\r\\n\\tat org.eclipse.jetty.server.Server.handle(Server.java:461)\\r\\n\\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:284)\\r\\n\\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:244)\\r\\n\\tat org.eclipse.jetty.io.AbstractConnection$2.run(AbstractConnection.java:534)\\r\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:607)\\r\\n\\tat org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:536)\\r\\n\\tat java.lang.Thread.run(Unknown Source)\\r\\n\"}]}\n"}, {"labels": ["2.1", "bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/3720", "title": "Neo4j 2.1.6 Cypher UNWIND throws Neo.ClientError.Statement.InvalidSyntax error", "closed": "2015-12-06 00:57:30", "commitsDetails": [], "commits": {}, "ttf": 348.0002777777778, "created": "2014-12-22 21:22:26", "user": "bunkat", "body": "I have queries that worked in Neo4j 2.1.5 that are now broken in 2.1.6. I checked the release notes but didn't see any mention about a change in functionality for UNWIND.\n\n```\n[{Neo.ClientError.Statement.InvalidSyntax Invalid input 'W': expected 'i/I' (line 14, column 43)\n\"  WITH COLLECT(p) + COLLECT(sp) AS coll UNWIND coll AS p\"}]\n```\n\nDid UNWIND get replaced with something else?\n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/3718", "title": "Groovy shell script does not have access to database", "closed": "2018-02-19 12:15:33", "commitsDetails": [], "commits": {}, "ttf": 1155.0002777777777, "created": "2014-12-22 09:54:18", "user": "dmontag", "body": "When running Groovy scripts with the \"gsh\" command from the shell, there is no variable exposed for the database. It is missing a line like so:\n\n`session.set(\"db\", getServer().getDb());`\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3712", "title": "Unable to LOAD CSV file with blank cell (2.2.0-M02)", "closed": "2016-01-14 16:11:58", "commitsDetails": [], "commits": {}, "ttf": 390.0002777777778, "created": "2014-12-19 16:29:50", "user": "cheerfulstoic", "body": "Error and stack trace below.\n\n[Import script](https://github.com/neo4jrb/lapd_incidents/blob/cc82f5f83e4f45ebc51e5d908f11d12c572bd9c5/load_csv.cql)\n\n[first 10 lines CSV which replicate the issue](https://github.com/neo4jrb/lapd_incidents/blob/cc82f5f83e4f45ebc51e5d908f11d12c572bd9c5/db/test.csv)\n\nIt gets through the indexes/constraints and then fails as soon as it tries to import CSV.  This PR seems to be related:\n\nhttps://github.com/neo4j/neo4j/pull/3612\n\n```\n    String didn't extract value for Mark[line:4, from:524, to:524]. For values which are optional please use tryExtract method instead\njava.lang.IllegalStateException: String didn't extract value for Mark[line:4, from:524, to:524]. For values which are optional please use tryExtract method instead\n    at org.neo4j.csv.reader.BufferedCharSeeker.extract(BufferedCharSeeker.java:197)\n    at org.neo4j.cypher.internal.compiler.v2_2.spi.CSVResources$$anon$1$$anonfun$readNextRow$1.apply$mcV$sp(CSVResources.scala:58)\n    at scala.util.control.Breaks.breakable(Breaks.scala:37)\n    at org.neo4j.cypher.internal.compiler.v2_2.spi.CSVResources$$anon$1.readNextRow(CSVResources.scala:56)\n    at org.neo4j.cypher.internal.compiler.v2_2.spi.CSVResources$$anon$1.next(CSVResources.scala:76)\n    at org.neo4j.cypher.internal.compiler.v2_2.spi.CSVResources$$anon$1.next(CSVResources.scala:53)\n    at org.neo4j.cypher.internal.compiler.v2_2.executionplan.LoadCsvIterator.next(LoadCsvIterator.scala:30)\n    at org.neo4j.cypher.internal.compiler.v2_2.executionplan.LoadCsvIterator.next(LoadCsvIterator.scala:24)\n    at scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\n    at scala.collection.Iterator$$anon$13.next(Iterator.scala:372)\n    at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\n    at org.neo4j.cypher.internal.compiler.v2_2.pipes.EmptyResultPipe.internalCreateResults(EmptyResultPipe.scala:29)\n    at org.neo4j.cypher.internal.compiler.v2_2.pipes.PipeWithSource.createResults(Pipe.scala:119)\n    at org.neo4j.cypher.internal.compiler.v2_2.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.createResults(DefaultExecutionResultBuilderFactory.scala:92)\n    at org.neo4j.cypher.internal.compiler.v2_2.executionplan.DefaultExecutionResultBuilderFactory$ExecutionWorkflowBuilder.build(DefaultExecutionResultBuilderFactory.scala:64)\n    at org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:121)\n    at org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:106)\n    at org.neo4j.cypher.internal.compiler.v2_2.executionplan.ExecutionPlanBuilder$$anon$1.execute(ExecutionPlanBuilder.scala:70)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper$$anonfun$execute$1.apply(CompatibilityFor2_2.scala:141)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper$$anonfun$execute$1.apply(CompatibilityFor2_2.scala:141)\n    at org.neo4j.cypher.internal.compatibility.exceptionHandlerFor2_2$.runSafely(CompatibilityFor2_2.scala:97)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper.execute(CompatibilityFor2_2.scala:140)\n    at org.neo4j.cypher.internal.compatibility.CompatibilityFor2_2$ExecutionPlanWrapper.execute(CompatibilityFor2_2.scala:127)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:84)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:79)\n    at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:87)\n    at org.neo4j.cypher.javacompat.internal.ServerExecutionEngine.executeQuery(ServerExecutionEngine.java:59)\n    at org.neo4j.shell.kernel.apps.cypher.Start.getResult(Start.java:85)\n    at org.neo4j.shell.kernel.apps.cypher.Using.getResult(Using.java:53)\n    at org.neo4j.shell.kernel.apps.cypher.Start.exec(Start.java:67)\n    at org.neo4j.shell.kernel.apps.TransactionProvidingApp.execute(TransactionProvidingApp.java:223)\n    at org.neo4j.shell.impl.AbstractAppServer.interpretLine(AbstractAppServer.java:117)\n    at org.neo4j.shell.kernel.GraphDatabaseShellServer.interpretLine(GraphDatabaseShellServer.java:93)\n    at org.neo4j.shell.impl.RemotelyAvailableServer.interpretLine(RemotelyAvailableServer.java:60)\n    at sun.reflect.GeneratedMethodAccessor7.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:483)\n    at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:323)\n    at sun.rmi.transport.Transport$1.run(Transport.java:178)\n    at sun.rmi.transport.Transport$1.run(Transport.java:175)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at sun.rmi.transport.Transport.serviceCall(Transport.java:174)\n    at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:557)\n    at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:812)\n    at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:671)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n    at java.lang.Thread.run(Thread.java:745)\n```\n\n[load_csv.cql | uploaded via ZenHub](https://files.zenhub.io/549451305db8bc2b388578c6)\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/3660", "title": "Bug in 2.2 web console", "closed": "2014-12-17 15:47:24", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2014-12-12 21:11:24", "user": "cheerfulstoic", "body": "When there is a property called `type` on a relationship, it's not possible to get the UI to display the relationship type.  It only displays the `type` property value\n\n![screen shot 2014-12-12 at 10 10 57 pm](https://cloud.githubusercontent.com/assets/301415/5419421/c6f7b6f4-824b-11e4-94c6-c75f0e10b3ee.png)\n"}, {"labels": ["2.2", "bug", "build", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3650", "title": "neo4j-io test-jar required for ImpermanentGraphStore with 2.2", "closed": "2017-10-18 08:33:14", "commitsDetails": [], "commits": {}, "ttf": 1041.0002777777777, "created": "2014-12-11 16:03:02", "user": "jotomo", "body": "With 2.1, running unit tests using the _ImpermanentGraphStore_ required the _test-jar_ of the _neo4j-kernel_ artifact as described in the _Basic unit testing_ section of the docs.\n\nWith 2.2.0-M01, I get a _ClassNotFoundExepction_ for _EphemeralFileSystemAbstraction_, which (now) lives in the _neo4j-io_ artifact. Adding the _neo4j-io_ artifact, with the _test-jar_ classifier unbreaks my tests. \nIs this intended? If so, the docs should be updated and the changelog should probably add a note about this, no?\n"}, {"labels": ["bug", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3585", "title": "[Cluster] Strange displayed size, when instance fetch store from master", "closed": "2016-01-14 16:49:23", "commitsDetails": [], "commits": {}, "ttf": 408.0002777777778, "created": "2014-12-02 11:45:57", "user": "FylmTM", "body": "See last line:\n\n```\n2014-12-02 11:36:38.794+0000 INFO  [Cluster] Checking store consistency with master                                                                                                                                                          \n2014-12-02 11:36:38.922+0000 INFO  [Cluster] The store is inconsistent. Will treat it as branched and fetch a new one from the master                                                                                                        \n2014-12-02 11:36:40.196+0000 INFO  [Cluster] ServerId 2, moving to slave for master ha://10.133.234.120:6001?serverId=3                                                                                                                      \n2014-12-02 11:36:40.294+0000 INFO  [Cluster] Copying store from master                                                                                                                                                                       \n2014-12-02 11:36:40.496+0000 INFO  [Cluster] Copying index/lucene-store.db                                                                                                                                                                   \n2014-12-02 11:36:40.498+0000 INFO  [Cluster] Copied  index/lucene-store.db 40.00 B                                                                                                                                                           \n2014-12-02 11:36:40.499+0000 INFO  [Cluster] Copying neostore.propertystore.db.strings                                                                                                                                                       \n2014-12-02 11:37:17.614+0000 INFO  [Cluster] Copied  neostore.propertystore.db.strings -1609969152.00 B                                                                                                                                      \n```\n\nStore in filesystem looks like this:\n\n```\n[root@neo4j-db-3 neo4j-database]# ls -lah | grep neostore\n-rw-rw-r-- 1 neo4j neo4j   81 2014-12-02 06:42 neostore\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.id\n-rw-rw-r-- 1 neo4j neo4j   15 2014-12-01 04:35 neostore.labeltokenstore.db\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.labeltokenstore.db.id\n-rw-rw-r-- 1 neo4j neo4j  152 2014-12-01 04:35 neostore.labeltokenstore.db.names\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.labeltokenstore.db.names.id\n-rw-rw-r-- 1 neo4j neo4j 129M 2014-12-01 04:53 neostore.nodestore.db\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.nodestore.db.id\n-rw-rw-r-- 1 neo4j neo4j   68 2014-12-01 04:35 neostore.nodestore.db.labels\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.nodestore.db.labels.id\n-rw-rw-r-- 1 neo4j neo4j 1,3G 2014-12-02 06:42 neostore.propertystore.db\n-rw-rw-r-- 1 neo4j neo4j 416M 2014-12-01 04:35 neostore.propertystore.db.arrays\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.propertystore.db.arrays.id\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.propertystore.db.id\n-rw-rw-r-- 1 neo4j neo4j  24K 2014-12-01 04:42 neostore.propertystore.db.index\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.propertystore.db.index.id\n-rw-rw-r-- 1 neo4j neo4j 101K 2014-12-01 04:42 neostore.propertystore.db.index.keys\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.propertystore.db.index.keys.id\n-rw-rw-r-- 1 neo4j neo4j 2,6G 2014-12-02 06:42 neostore.propertystore.db.strings\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.propertystore.db.strings.id\n-rw-rw-r-- 1 neo4j neo4j 2,7M 2014-12-01 04:35 neostore.relationshipgroupstore.db\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.relationshipgroupstore.db.id\n-rw-rw-r-- 1 neo4j neo4j 357M 2014-12-01 04:35 neostore.relationshipstore.db\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.relationshipstore.db.id\n-rw-rw-r-- 1 neo4j neo4j   20 2014-12-01 04:35 neostore.relationshiptypestore.db\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.relationshiptypestore.db.id\n-rw-rw-r-- 1 neo4j neo4j  190 2014-12-01 04:35 neostore.relationshiptypestore.db.names\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.relationshiptypestore.db.names.id\n-rw-rw-r-- 1 neo4j neo4j  256 2014-12-01 04:35 neostore.schemastore.db\n-rw-r--r-- 1 neo4j neo4j    9 2014-12-02 06:35 neostore.schemastore.db.id\n```\n"}, {"labels": ["bug", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3538", "title": "tx.close() causing \"FileNotFound exception: Too many open files in system\"", "closed": "2017-10-18 14:27:35", "commitsDetails": [], "commits": {}, "ttf": 1058.0002777777777, "created": "2014-11-25 10:25:05", "user": "jerdeb", "body": "I am noticing that over 10K transactions, the tx.close() function is throwing a \"FileNotFound exception...: (Too many open files in system)\". My initial thought is that lucene files are not being closed after a transection, but I could be wrong.\n\nI am running my test application locally using a Mac (10.9.5) and Eclipse Kepler.\n\nCode:\n\n```\npublic void compute(Quad quad){\n        try ( Transaction tx = graphDb.beginTx() )\n        {\n               // check if quad.subject exists as a node and return it, else create a new one\n               // check if quad.object exists as a node and return it, else create a new one\n               // create relationship between quad.subject and quad.object\n               tx.success();\n               tx.close(); // added this just to check if this would actually work, but made no difference\n        }\n}\n```\n\nI am using maven and the Neo4j version I'm using is 2.1.5.\n\nMessage.log can be found here: https://gist.github.com/jerdeb/410b00b7f67cfa0e0d7a\n\nFor testing purposes, I can also provide access to the current code as it can be found in a public github.\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3537", "title": "Neo4j hangs up on simultaneous write & delete.", "closed": "2014-12-01 09:36:23", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2014-11-25 08:29:06", "user": "FylmTM", "body": "We have database with ~7.000.000 nodes.\nIn this database we have 10.000 nodes, which we are going to delete. \n\nSo, we run Cypher query, to delete them. \n\n```\nMATCH (o:Object) \nWHERE LEFT(o.identifier, 6) = '_temp_'\nDELETE m\n```\n\nThis will run database \"fullscan\".\n\nWhile cypher execution is in process, we start creating nodes, which we delete now. Nodes are created via Java API in extension. So, now we have:\n- Running Cypher query, that deletes nodes\n- Extension, that creates nodes same nodes, which we delete. \n\nAnd, after some time we notice that database became unresponsive (on 7474 port). Cluster doesn't notice anything, it continues think that database is OK.\n\n---\n\nIf we look into java thread dump, then can find a lot of stacktraces, like this:\n\n```\nThread 18569: (state = BLOCKED)\n - java.lang.Thread.sleep(long) @bci=0 (Compiled frame; information may be imprecise)\n - java.lang.Thread.sleep(long, int) @bci=57, line=340 (Compiled frame)\n - org.neo4j.kernel.impl.util.concurrent.LockWaitStrategies$3.apply(long) @bci=43, line=69 (Compiled frame)\n - org.neo4j.kernel.ha.lock.forseti.ForsetiClient.acquireExclusive(org.neo4j.kernel.impl.locking.Locks$ResourceType, long[]) @bci=180, line=189 (Compiled frame)\n - org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.validateNoExistingNodeWithLabelAndProperty(org.neo4j.kernel.impl.api.KernelStatement, int, org.neo4j.kernel.api\n.properties.DefinedProperty, long) @bci=54, line=109 (Compiled frame)\n - org.neo4j.kernel.impl.api.ConstraintEnforcingEntityOperations.nodeSetProperty(org.neo4j.kernel.impl.api.KernelStatement, long, org.neo4j.kernel.api.properties.DefinedPropert\ny) @bci=72, line=94 (Compiled frame)\n - org.neo4j.kernel.impl.api.LockingStatementOperations.nodeSetProperty(org.neo4j.kernel.impl.api.KernelStatement, long, org.neo4j.kernel.api.properties.DefinedProperty) @bci=4\n8, line=280 (Compiled frame)\n - org.neo4j.kernel.impl.api.OperationsFacade.nodeSetProperty(long, org.neo4j.kernel.api.properties.DefinedProperty) @bci=17, line=551 (Compiled frame)\n - org.neo4j.kernel.impl.core.NodeProxy.setProperty(java.lang.String, java.lang.Object) @bci=46, line=254 (Compiled frame)\n - com.extension.rest.ImportResource.createNode(java.lang.String, java.lang.String) @bci=33, line=152 (Compiled frame)\n - com.extension.rest.ImportResource.processLine(java.lang.String) @bci=107, line=138 (Compiled frame)\n - com.extension.rest.ImportResource.synchronizedJob(boolean, int, java.lang.String) @bci=70, line=112 (Compiled frame)\n...\n```\n\n---\n\nNeo4j: 2.1.5 Enterprise\nOS: CentOS 6.5\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/3535", "title": "UnableToSampleException - when master fails in cluster.", "closed": "2015-10-30 08:23:19", "commitsDetails": [], "commits": {}, "ttf": 339.0002777777778, "created": "2014-11-25 08:16:34", "user": "FylmTM", "body": "We have Neo4j cluster:\nA - Master instance\nB - Slave instance\nC - Slave instance\n\nIf master (`A`) was killed (e.g. `kill -9 <pid>`), then new master election was performed. After awhile `B` becomes master instance.\nThen, we try to bootup A instance. So, this instance was master before and now joins cluster as slave.\n`A` instance decides that he has wrong database version and downloads up-to-date version from master (`B`).\n\nAnd there is where error occurs. \n\n```\norg.neo4j.server.rrd.UnableToSampleException\n    at org.neo4j.server.rrd.sampler.NodeIdsInUseSampleable.getValue(NodeIdsInUseSampleable.java:47)\n    at org.neo4j.server.rrd.RrdSamplerImpl.updateSample(RrdSamplerImpl.java:59)\n    at org.neo4j.server.rrd.RrdJob.run(RrdJob.java:43)\n    at org.neo4j.server.rrd.ScheduledJob$1.run(ScheduledJob.java:41)\n    at java.util.TimerThread.mainLoop(Timer.java:555)\n    at java.util.TimerThread.run(Timer.java:505)\n```\n\nWe see this when log download is in process/finished. And this error continues to show endlessly:\n\n```\n2014-11-13 12:11:50.147+0000 INFO  [Cluster] Checking store consistency with master\n2014-11-13 12:11:50.853+0000 INFO  [Cluster] The store is inconsistent. Will treat it as branched and fetch a new one from the master\n2014-11-13 12:11:52.030+0000 INFO  [Cluster] Copying store from master\n... copying store\n... copying schema\n... copying logs\n2014-11-13 12:13:57.768+0000 INFO  [API] Server started on: http://0.0.0.0:7474/\n// it starts server, while logs download is in progress\n... org.neo4j.server.rrd.UnableToSampleException error loop\n```\n\nIf we restart this instance, then everything is OK. \n\nSo, in summary: we get `UnableToSampleException` error when try to bootup instance, that was master before, for first time.\n\nAny suggestions?\n\n---\n\nNeo4j: 2.1.5 Enterprise\nOS: CentOS 6.5\n"}, {"labels": ["bug", "build", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/3506", "title": "neo4j-cypher-compiler-2.1 artifacts on maven.org use wrong qualified name for ComponentVersion.", "closed": "2017-06-22 14:26:30", "commitsDetails": [], "commits": {}, "ttf": 944.0002777777778, "created": "2014-11-20 16:38:20", "user": "trebon", "body": "All `neo4j-cypher-compiler-2.1` artifacts deployed to http://www.maven.org include ComponentVersion.java under the hierarchy **org\\neo4j\\cypher\\internal\\compiler\\v2_0\\ComponentVersion.java** instead of **org\\neo4j\\cypher\\internal\\compiler\\v2_1\\ComponentVersion.java**  . This may have been caused by the wrong `version-dir` being passed during maven build time. \n\nThis causes a conflict if a user includes `neo4j-cypher` inside of a execution of the maven-shade-plugin. `neo4j-cypher` brings in both `neo4j-cypher-compiler-2.0` and `neo4j-cypher-compiler-2.1` which both contain **org.neo4j.cypher.internal.compiler.v2_0.ComponentVersion** . This class is generated at build time by the maven-antrun-plugin in /pom.xml\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3466", "title": "ConsistencyCheckTool outputs progress to stderr instead of stdout", "closed": "2017-10-17 15:43:38", "commitsDetails": [], "commits": {}, "ttf": 1068.0002777777777, "created": "2014-11-14 03:43:10", "user": "bradnussbaum", "body": "Why does the ConsistencyCheckTool output to stderr?\n\norg.neo4j.consistency.ConsistencyCheckTool.java (49)\n\nConsistencyCheckTool tool = new ConsistencyCheckTool( new ConsistencyCheckService(), System.err );\n\nI would like to submit a pull request to update this to stdout but wanted to get some feedback here first.\n\nIs there a reason for this being stderr by default?\n\nFor reference, the BackupTool uses stdout by default:\norg.neo4j.backup.BackupTool (87)\nBackupTool tool = new BackupTool( new BackupService( new DefaultFileSystemAbstraction() ), System.out );\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3424", "title": "Neo4j 2.1.5 shutdown in low memory condition corrupted database", "closed": "2015-01-08 11:03:57", "commitsDetails": [], "commits": {}, "ttf": 59.000277777777775, "created": "2014-11-10 00:23:37", "user": "bunkat", "body": "I left the Neo4j browser window up on my Dev machine and it eventually consumed all available memory including swap space (I think it was component.js).  I then attempted to shutdown Neo4j using `./neo4j stop` and it seemed to work but I got the message `forced shutdown` at the end of the stop procedure. \n\nI then rebooted the machine and started Neo4j back up with `./neo4j start` and it started without any errors.  However, when I started trying to use the database I found that there is a lot of missing data (data for entire users is just gone).  I'm also getting lots of errors like this one:\n\n```\n{Code:\"Neo.ClientError.Statement.EntityNotFound\", Message:\"Node with id 116694\"},\n```\n\nI would have expected some error on startup or something in the logs but I don't see anything. Shouldn't the operator get warned if data has been corrupted or could not be written safely to disk?\n"}, {"labels": ["bug", "build", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/3325", "title": "Only one version of the required dependencies should be included in the pom", "closed": "2016-10-20 12:53:01", "commitsDetails": [], "commits": {}, "ttf": 729.0002777777778, "created": "2014-10-21 16:43:36", "user": "DavideD", "body": "See discussion at https://groups.google.com/forum/#!topic/neo4j/fDLiKEnKnAM\n"}, {"labels": ["bug", "team-cluster"], "url": "https://github.com/neo4j/neo4j/issues/3267", "title": "Backup instance fails to leave cluster in 2.1.5", "closed": "2017-11-06 12:12:12", "commitsDetails": [], "commits": {}, "ttf": 1121.0002777777777, "created": "2014-10-12 05:35:14", "user": "bradnussbaum", "body": "My backup instance reported a failure to leave the cluster. I saw this message in the backup logs.\n\n2014-10-12 04:51:38.249+0000 WARN  [o.n.c.p.c.ClusterState]: Failed to leave. Cluster may consider this instance still a member\n\nA cluster slave instance reported the following:\n\n2014-10-12 04:51:08.253+0000 INFO  [o.n.c.p.c.ClusterConfiguration]: Instance -1 is leaving the cluster\n2014-10-12 04:51:08.254+0000 WARN  [o.n.c.p.e.ClusterLeaveReelectionListener]: Demoting member -1 because it left the cluster\n2014-10-12 04:51:08.254+0000 INFO  [o.n.k.h.HighAvailabilityConsoleLogger]: Instance -1  has left the cluster\n\nAnd the master instance was tracing out errors:\n\n2014-10-12 04:51:52.452+0000 WARN  [o.n.b.BackupServer]: Exception from Netty\njava.nio.channels.ClosedChannelException: null\n        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.cleanUpWriteBuffer(AbstractNioWorker.java:381) ~[netty-3.6.3.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.close(AbstractNioWorker.java:349) ~[netty-3.6.3.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:93) ~[netty-3.6.3.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:107) ~[netty-3.6.3.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312) ~[netty-3.6.3.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:88) ~[netty-3.6.3.Final.jar:na]\n        at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178) ~[netty-3.6.3.Final.jar:na]\n        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_67]\n        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_67]\n        at java.lang.Thread.run(Thread.java:745) [na:1.7.0_67]\n\nTrying the backup, the backup tool reported the following:\nAnother backup client is currently performing backup; concurrent backups are not allowed\n\nWhile the master instance showed the following message in the logs:\n2014-10-12 05:29:02.103+0000 INFO  [o.n.c.p.c.ClusterState]: Denying entry to instance -1 because another instance is currently joining with the same id.\n"}, {"labels": ["1.9", "2.0", "bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/3169", "title": "Need Urgent help  : Neo4j stop runnin at production", "closed": "2016-01-14 16:54:30", "commitsDetails": [], "commits": {}, "ttf": 472.0002777777778, "created": "2014-09-29 08:30:28", "user": "dppatel03", "body": "I am getting following error while I start my neo4j in my production environment.\nIt was working fine just y'day and today my users complain that my production server is down.\nI just check in realized that neo4j is down, and when I am trying to start server I am getting following error.\n\n(1) message.log (found under database folder structure)\n\n2014-09-29 08:19:49.946+0000 INFO  [o.n.k.i.n.s.StoreFactory]: [/data/gd/graph.db/neostore.schemastore.db] brickCount=0 brickSize=0b mappedMem=0b (storeSize=64b)\n2014-09-29 08:19:49.947+0000 INFO  [o.n.k.i.n.s.StoreFactory]: [/data/gd/graph.db/neostore] brickCount=0 brickSize=0b mappedMem=0b (storeSize=63b)\n2014-09-29 08:19:49.978+0000 INFO  [o.n.k.i.t.x.XaLogicalLog]: Opened logical log [/data/gd/graph.db/nioneo_logical.log.1] version=7, lastTxId=35049 (clean)\n2014-09-29 08:19:49.981+0000 INFO  [o.n.k.i.t.TxManager]: TM opening log: /data/gd/graph.db/tm_tx_log.1\n## 2014-09-29 08:19:49.982+0000 INFO  [o.n.k.i.t.KernelHealth]: Kernel health set to OK\n\n2014-09-29 08:21:57.515+0000 ERROR [o.n.k.i.t.XaDataSourceManager]: Failed when notifying registering listener\norg.neo4j.kernel.impl.nioneo.store.UnderlyingStorageException: Unable to load position[1] @[9]\n        at org.neo4j.kernel.impl.nioneo.store.PersistenceRow.readFullWindow(PersistenceRow.java:162) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.nioneo.store.PersistenceRow$State$1.transition(PersistenceRow.java:114) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.nioneo.store.PersistenceRow.lock(PersistenceRow.java:58) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.nioneo.store.PersistenceWindowPool.acquire(PersistenceWindowPool.java:197) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.nioneo.store.CommonAbstractStore.acquireWindow(CommonAbstractStore.java:430) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.nioneo.store.NeoStore.getRecord(NeoStore.java:501) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.nioneo.store.NeoStore.getRandomNumber(NeoStore.java:414) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource.getRandomIdentifier(NeoStoreXaDataSource.java:643) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.ext.udc.impl.DefaultUdcInformationCollector$1.registeredDataSource(DefaultUdcInformationCollector.java:81) ~[neo4j-udc-2.0.3.jar:na]\n        at org.neo4j.kernel.impl.transaction.XaDataSourceManager.addDataSourceRegistrationListener(XaDataSourceManager.java:128) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.ext.udc.impl.DefaultUdcInformationCollector.<init>(DefaultUdcInformationCollector.java:73) [neo4j-udc-2.0.3.jar:na]\n        at org.neo4j.ext.udc.impl.UdcKernelExtension.start(UdcKernelExtension.java:71) [neo4j-udc-2.0.3.jar:na]\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:507) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:115) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.extension.KernelExtensions.start(KernelExtensions.java:118) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:507) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:115) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.run(InternalAbstractGraphDatabase.java:328) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:56) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:90) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:199) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.server.database.CommunityDatabase.createDb(CommunityDatabase.java:66) [neo4j-server-2.0.3.jar:2.0.3]\n        at org.neo4j.server.database.CommunityDatabase.start(CommunityDatabase.java:130) [neo4j-server-2.0.3.jar:2.0.3]\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:166) [neo4j-server-2.0.3.jar:2.0.3]\n        at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:103) [neo4j-server-2.0.3.jar:2.0.3]\n        at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:57) [neo4j-server-2.0.3.jar:2.0.3]\nCaused by: java.nio.channels.ClosedByInterruptException: null\n        at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202) ~[na:1.7.0_65]\n        at sun.nio.ch.FileChannelImpl.readInternal(FileChannelImpl.java:706) ~[na:1.7.0_65]\n        at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:685) ~[na:1.7.0_65]\n        at org.neo4j.kernel.impl.nioneo.store.StoreFileChannel.read(StoreFileChannel.java:83) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.nioneo.store.PersistenceRow.readFullWindow(PersistenceRow.java:157) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        ... 25 common frames omitted\n2014-09-29 08:21:57.531+0000 ERROR [o.n.k.i.t.TxManager]: Unable to close tx log[/data/gd/graph.db/tm_tx_log.1]\njava.nio.channels.ClosedByInterruptException: null\n        at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202) ~[na:1.7.0_65]\n        at sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:744) ~[na:1.7.0_65]\n        at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:724) ~[na:1.7.0_65]\n        at org.neo4j.kernel.impl.nioneo.store.StoreFileChannel.write(StoreFileChannel.java:51) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.transaction.xaframework.DirectMappedLogBuffer.writeOut(DirectMappedLogBuffer.java:164) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.transaction.xaframework.DirectMappedLogBuffer.force(DirectMappedLogBuffer.java:178) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.transaction.TxLog.close(TxLog.java:166) ~[neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.transaction.TxManager.closeLog(TxManager.java:276) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.impl.transaction.TxManager.stop(TxManager.java:233) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:123) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.run(InternalAbstractGraphDatabase.java:328) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:56) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:90) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:199) [neo4j-kernel-2.0.3.jar:2.0.3]\n        at org.neo4j.server.database.CommunityDatabase.createDb(CommunityDatabase.java:66) [neo4j-server-2.0.3.jar:2.0.3]\n        at org.neo4j.server.database.CommunityDatabase.start(CommunityDatabase.java:130) [neo4j-server-2.0.3.jar:2.0.3]\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:166) [neo4j-server-2.0.3.jar:2.0.3]\n        at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:103) [neo4j-server-2.0.3.jar:2.0.3]\n        at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:57) [neo4j-server-2.0.3.jar:2.0.3]\n2014-09-29 08:21:57.532+0000 INFO  [o.n.k.i.t.TxManager]: TM shutting down\n2014-09-29 08:21:57.538+0000 INFO  [o.n.k.i.DiagnosticsManager]: --- STOPPING diagnostics START ---\n2014-09-29 08:21:57.538+0000 INFO  [o.n.k.i.DiagnosticsManager]: --- STOPPING diagnostics END ---\n2014-09-29 08:21:57.552+0000 ERROR [o.n.k.EmbeddedGraphDatabase]: Startup failed: Component 'org.neo4j.kernel.impl.transaction.XaDataSourceManager@2bab3b6a' failed to stop. Please see attached cause exception.: Component 'org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource@497f6a92' failed to stop. Please see attached cause exception.: java.nio.channels.ClosedByInterruptException: null: Component 'org.neo4j.kernel.extension.KernelExtensions@703601d7' was successfully initialized, but failed to start. Please see attached cause exception.: Component 'org.neo4j.index.lucene.LuceneKernelExtension@52b2093d' was successfully initialized, but failed to start. Please see attached cause exception.: Component 'org.neo4j.index.impl.lucene.LuceneDataSource@5d6fbc47' was successfully initialized, but failed to start. Please see attached cause exception.: java.nio.channels.ClosedByInterruptException: null\n2014-09-29 08:21:57.552+0000 INFO  [o.n.k.EmbeddedGraphDatabase]: Shutdown started\n\n(2) consol.log\n\n08:26:03.537 [main] WARN  org.neo4j.kernel.info.JvmChecker - You are using an unsupported Java runtime. Please use Oracle(R) Java(TM) Runtime Environment 7.\n08:26:03.886 [main] INFO  org.neo4j.server.CommunityNeoServer - Setting startup timeout to: 120000ms based on -1\nDetected incorrectly shut down database, performing recovery..\n08:26:04.127 [main] WARN  o.neo4j.kernel.EmbeddedGraphDatabase - You are using an unsupported Java runtime. Please use Oracle(R) Java(TM) Runtime Environment 7.\n2014-09-29 08:28:14.639+0000 ERROR [org.neo4j]: Exception when stopping org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource@497f6a92 java.nio.channels.ClosedByInterruptException\njava.lang.RuntimeException: java.nio.channels.ClosedByInterruptException\n        at org.neo4j.kernel.impl.transaction.xaframework.LogBackedXaDataSource.stop(LogBackedXaDataSource.java:73)\n        at org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource.stop(NeoStoreXaDataSource.java:468)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n        at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155)\n        at org.neo4j.kernel.impl.transaction.XaDataSourceManager.stop(XaDataSourceManager.java:185)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n        at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155)\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:123)\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.run(InternalAbstractGraphDatabase.java:328)\n        at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:56)\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:90)\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:199)\n        at org.neo4j.server.database.CommunityDatabase.createDb(CommunityDatabase.java:66)\n        at org.neo4j.server.database.CommunityDatabase.start(CommunityDatabase.java:130)\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:166)\n        at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:103)\n        at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:57)\nCaused by: java.nio.channels.ClosedByInterruptException\n        at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)\n        at sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:744)\n        at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:724)\n        at org.neo4j.kernel.impl.nioneo.store.StoreFileChannel.write(StoreFileChannel.java:51)\n        at org.neo4j.kernel.impl.transaction.xaframework.DirectMappedLogBuffer.writeOut(DirectMappedLogBuffer.java:164)\n        at org.neo4j.kernel.impl.transaction.xaframework.DirectMappedLogBuffer.force(DirectMappedLogBuffer.java:178)\n        at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.releaseCurrentLogFile(XaLogicalLog.java:706)\n        at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.close(XaLogicalLog.java:731)\n        at org.neo4j.kernel.impl.transaction.xaframework.LogBackedXaDataSource.stop(LogBackedXaDataSource.java:69)\n        ... 16 more\n2014-09-29 08:28:14.643+0000 ERROR [org.neo4j]: Exception when stopping org.neo4j.kernel.impl.transaction.XaDataSourceManager@76c9c28b Component 'org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource@497f6a92' failed to stop. Please see attached cause exception.\norg.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource@497f6a92' failed to stop. Please see attached cause exception.\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:532)\n        at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155)\n        at org.neo4j.kernel.impl.transaction.XaDataSourceManager.stop(XaDataSourceManager.java:185)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n        at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155)\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:123)\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.run(InternalAbstractGraphDatabase.java:328)\n        at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:56)\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:90)\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:199)\n        at org.neo4j.server.database.CommunityDatabase.createDb(CommunityDatabase.java:66)\n        at org.neo4j.server.database.CommunityDatabase.start(CommunityDatabase.java:130)\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:166)\n        at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:103)\n        at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:57)\nCaused by: java.lang.RuntimeException: java.nio.channels.ClosedByInterruptException\n        at org.neo4j.kernel.impl.transaction.xaframework.LogBackedXaDataSource.stop(LogBackedXaDataSource.java:73)\n        at org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource.stop(NeoStoreXaDataSource.java:468)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n        ... 14 more\nCaused by: java.nio.channels.ClosedByInterruptException\n        at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)\n        at sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:744)\n        at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:724)\n        at org.neo4j.kernel.impl.nioneo.store.StoreFileChannel.write(StoreFileChannel.java:51)\n        at org.neo4j.kernel.impl.transaction.xaframework.DirectMappedLogBuffer.writeOut(DirectMappedLogBuffer.java:164)\n        at org.neo4j.kernel.impl.transaction.xaframework.DirectMappedLogBuffer.force(DirectMappedLogBuffer.java:178)\n        at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.releaseCurrentLogFile(XaLogicalLog.java:706)\n        at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.close(XaLogicalLog.java:731)\n        at org.neo4j.kernel.impl.transaction.xaframework.LogBackedXaDataSource.stop(LogBackedXaDataSource.java:69)\n        ... 16 more\n2014-09-29 08:28:14.661+0000 ERROR [org.neo4j]: Lifecycle exception Component 'org.neo4j.kernel.impl.transaction.XaDataSourceManager@76c9c28b' failed to stop. Please see attached cause exception.\norg.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.impl.transaction.XaDataSourceManager@76c9c28b' failed to stop. Please see attached cause exception.\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:532)\n        at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155)\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:123)\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.run(InternalAbstractGraphDatabase.java:328)\n        at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:56)\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:90)\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:199)\n        at org.neo4j.server.database.CommunityDatabase.createDb(CommunityDatabase.java:66)\n        at org.neo4j.server.database.CommunityDatabase.start(CommunityDatabase.java:130)\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:166)\n        at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:103)\n        at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:57)\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource@497f6a92' failed to stop. Please see attached cause exception.\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:532)\n        at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155)\n        at org.neo4j.kernel.impl.transaction.XaDataSourceManager.stop(XaDataSourceManager.java:185)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n        ... 11 more\nCaused by: java.lang.RuntimeException: java.nio.channels.ClosedByInterruptException\n        at org.neo4j.kernel.impl.transaction.xaframework.LogBackedXaDataSource.stop(LogBackedXaDataSource.java:73)\n        at org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource.stop(NeoStoreXaDataSource.java:468)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n        ... 14 more\nCaused by: java.nio.channels.ClosedByInterruptException\n        at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)\n        at sun.nio.ch.FileChannelImpl.writeInternal(FileChannelImpl.java:744)\n        at sun.nio.ch.FileChannelImpl.write(FileChannelImpl.java:724)\n        at org.neo4j.kernel.impl.nioneo.store.StoreFileChannel.write(StoreFileChannel.java:51)\n        at org.neo4j.kernel.impl.transaction.xaframework.DirectMappedLogBuffer.writeOut(DirectMappedLogBuffer.java:164)\n        at org.neo4j.kernel.impl.transaction.xaframework.DirectMappedLogBuffer.force(DirectMappedLogBuffer.java:178)\n        at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.releaseCurrentLogFile(XaLogicalLog.java:706)\n        at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.close(XaLogicalLog.java:731)\n        at org.neo4j.kernel.impl.transaction.xaframework.LogBackedXaDataSource.stop(LogBackedXaDataSource.java:69)\n        ... 16 more\n2014-09-29 08:28:14.664+0000 ERROR [org.neo4j]: Chained lifecycle exception Component 'org.neo4j.kernel.extension.KernelExtensions@703601d7' was successfully initialized, but failed to start. Please see attached cause exception.\norg.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.kernel.extension.KernelExtensions@703601d7' was successfully initialized, but failed to start. Please see attached cause exception.\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:513)\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:115)\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.run(InternalAbstractGraphDatabase.java:328)\n        at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:56)\n        at org.neo4j.graphdb.factory.GraphDatabaseFactory$1.newDatabase(GraphDatabaseFactory.java:90)\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:199)\n        at org.neo4j.server.database.CommunityDatabase.createDb(CommunityDatabase.java:66)\n        at org.neo4j.server.database.CommunityDatabase.start(CommunityDatabase.java:130)\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:166)\n        at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:103)\n        at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:57)\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.index.lucene.LuceneKernelExtension@267cae35' was successfully initialized, but failed to start. Please see attached cause exception.\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:513)\n        at org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:115)\n        at org.neo4j.kernel.extension.KernelExtensions.start(KernelExtensions.java:118)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:507)\n        ... 10 more\nCaused by: org.neo4j.kernel.lifecycle.LifecycleException: Component 'org.neo4j.index.impl.lucene.LuceneDataSource@52b2093d' was successfully initialized, but failed to start. Please see attached cause exception.\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:513)\n        at org.neo4j.kernel.lifecycle.LifeSupport.bringToState(LifeSupport.java:415)\n        at org.neo4j.kernel.lifecycle.LifeSupport.add(LifeSupport.java:326)\n        at org.neo4j.kernel.impl.transaction.XaDataSourceManager.registerDataSource(XaDataSourceManager.java:236)\n        at org.neo4j.index.lucene.LuceneKernelExtension.start(LuceneKernelExtension.java:79)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:507)\n        ... 13 more\nCaused by: java.lang.RuntimeException: java.nio.channels.ClosedByInterruptException\n        at org.neo4j.kernel.impl.index.IndexProviderStore.<init>(IndexProviderStore.java:85)\n        at org.neo4j.index.impl.lucene.LuceneDataSource.newIndexStore(LuceneDataSource.java:302)\n        at org.neo4j.index.impl.lucene.LuceneDataSource.start(LuceneDataSource.java:215)\n        at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.start(LifeSupport.java:507)\n        ... 18 more\nCaused by: java.nio.channels.ClosedByInterruptException\n        at java.nio.channels.spi.AbstractInterruptibleChannel.end(AbstractInterruptibleChannel.java:202)\n        at sun.nio.ch.FileChannelImpl.read(FileChannelImpl.java:155)\n        at org.neo4j.kernel.impl.nioneo.store.StoreFileChannel.read(StoreFileChannel.java:95)\n        at org.neo4j.kernel.impl.index.IndexProviderStore.readRecordsWithNullDefaults(IndexProviderStore.java:130)\n        at org.neo4j.kernel.impl.index.IndexProviderStore.<init>(IndexProviderStore.java:65)\n        ... 21 more\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/3030", "title": "Browser doesn't render visual result, when browser zoom < 100%", "closed": "2015-03-02 14:04:58", "commitsDetails": [], "commits": {}, "ttf": 172.00027777777777, "created": "2014-09-10 19:42:12", "user": "jexp", "body": "Query is executed but no result is rendered.\n\n```\nError: Invalid value for <svg> attribute preserveAspectRatio=\"xMidyMid\" \ncomponents.js:3(anonymous function) components.js:3jQuery.extend.access components.js:1jQuery.fn.extend.html components.js:3removePatch components.js:7(anonymous function) components.js:11(anonymous function) components.js:8wrappedCallback components.js:9wrappedCallback components.js:9(anonymous function) components.js:9Scope.$eval components.js:9Scope.$digest components.js:9Scope.$apply components.js:9(anonymous function) scripts.js:1jQuery.event.dispatch components.js:3elemData.handle\n```\n"}, {"labels": ["bug", "changelog", "team-kernel"], "filteredCommits": ["b270d9e0e71e8fa4e4dbce0e79c9a3e8eed6e3bc"], "url": "https://github.com/neo4j/neo4j/issues/2987", "gitStatsSummary": {"insertions": 18, "gitFilesChange": 1, "lines": 26, "deletions": 8}, "numCommits": 1, "commits": {"b270d9e0e71e8fa4e4dbce0e79c9a3e8eed6e3bc": {"commitUser": "benbc", "commitGHEventType": "closed"}}, "ttf": 501.0002777777778, "user": "purijatin", "changesInPackagesSPOON": ["org.neo4j.graphalgo.impl.path.AStar.findSinglePath(org.neo4j.graphdb.Node,org.neo4j.graphdb.Node)"], "changesInPackagesGIT": ["community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/path"], "body": "When you try finding singlePath from a node to itself `GraphAlgoFactory#..`. Then the behavior is:\n## Expected Behavior:\n\nAs per [documentation](http://docs.neo4j.org/chunked/stable/javadocs/org/neo4j/graphalgo/PathFinder.html#findSinglePath%28org.neo4j.graphdb.Node, org.neo4j.graphdb.Node%29) it should return `null`\n## Behavior in case of astar:\n\nFor code:\n\n```\n            Node  firstNode = graphDb.createNode();\n            PathFinder<WeightedPath> finder2 = GraphAlgoFactory.aStar(\n                    PathExpanders.forTypeAndDirection(RelTypes.KNOWS, Direction.BOTH),\n                    new CostEvaluator<Double>() {\n                        @Override\n                        public Double getCost(Relationship relationship, Direction direction) {\n                            return 1d;\n                        }\n                    },\n                    new EstimateEvaluator<Double>() {\n                        @Override\n                        public Double getCost(Node node, Node goal) {\n                            return 1d;\n                        }\n                    });\n\n            WeightedPath path = finder2.findSinglePath(firstNode, firstNode);\n```\n\nIt throws:\n\n```\nException in thread \"main\" org.neo4j.graphdb.NotFoundException: Relationship -1 not found\nat     org.neo4j.kernel.InternalAbstractGraphDatabase.getRelationshipById(InternalAbstractGraphDatabase.java:1175)\nat org.neo4j.graphalgo.impl.path.AStar.findSinglePath(AStar.java:85)\nat org.neo4j.graphalgo.impl.path.AStar.findSinglePath(AStar.java:50)\nat neo4jPrac.Main.createDb(Main.java:50)\nat neo4jPrac.Main.main(Main.java:25)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:483)\nat com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\n```\n## Behavior in case of dijkstra:\n\nIn above code, instead of using `GraphAlgoFactory.aStar` use `GraphAlgoFactory.dijkstra`.\nIt returns a Path from node to itself with length being `0`\n## Version:\n\nThis behavior can be found since neo4j 1.9.8. (not sure before that) till current version.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 6, "DEL": 0, "INS": 2, "spoonFilesChanged": 1, "MOV": 4}, "title": "Shortest Path (single & all) from node to itself works unexpected - Bug", "statsSkippedReason": "", "closed": "2016-01-18 16:54:07", "commitsDetails": [{"commitUser": "benbc", "commitDateTime": "2016-01-14 18:30:45", "commitHash": "b270d9e0e71e8fa4e4dbce0e79c9a3e8eed6e3bc", "commitParents": ["470fac32e68ed79318ddfe1e711d6880359bc06d"], "commitGHEventType": "closed", "nameRev": "b270d9e0e71e8fa4e4dbce0e79c9a3e8eed6e3bc tags/3.0.0-M03~3^2~12^2", "commitGitStats": [{"insertions": 37, "lines": 37, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/path/TestAStar.java", "deletions": 0}, {"insertions": 18, "lines": 26, "filePath": "community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/path/AStar.java", "deletions": 8}, {"insertions": 38, "lines": 38, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/path/DijkstraTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 6, "DEL": 0, "INS": 2, "MOV": 4, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.findSinglePath(org.neo4j.graphdb.Node,org.neo4j.graphdb.Node)"}], "spoonFilePath": "AStar.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.path.TestAStar.allPathsToSelfReturnsZero()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.path.TestAStar.pathToSelfReturnsZero()"}], "spoonFilePath": "TestAStar.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.path.DijkstraTest.allPathsToSelfReturnsZero()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.path.DijkstraTest.pathToSelfReturnsZero()"}], "spoonFilePath": "DijkstraTest.java"}], "commitMessage": "Fix AStar result in case End equals Start\n\nFixes #2987\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2016-01-14 18:30:45"}], "created": "2014-09-03 17:30:56"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/2837", "title": "Neo4J's Rest API returns 404 Not Found on relationship url for existing node in Batch.", "closed": "2018-02-19 12:17:51", "commitsDetails": [], "commits": {}, "ttf": 1286.0002777777777, "created": "2014-08-12 12:25:37", "user": "skormos", "body": "I'm writing a batch job to POST to /db/data/batch in Neo4J a la the documentation here: http://docs.neo4j.org/chunked/2.0.4/rest-api-batch-ops.html.\n\nI'm creating a Node via a POST operation, then creating a relationship via POST from a previously existing node, to the one created in the batch. Neo4J returns a 404 - Not Found on the relationship URL for the previously existing Node.\n\nHere's the request:\n\n``` javascript\n[ {\n    \"method\" : \"POST\",\n    \"to\"     : \"/node\",\n    \"id\"     : 0,\n    \"body\"   : {\n      \"entityType\"  : \"TimeOff\",\n      \"start\"       : \"2014-08-13\",\n      \"end\"         : \"2014-08-13\",\n      \"status\"      : \"Approve\",\n      \"reqId\"       : 13579\n    }\n  }, {\n    \"method\" : \"POST\",\n    \"to\"     : \"/node/1234/relationships\",\n    \"id\"     : 1,\n    \"body\"   : {\n      \"to\"   : \"{0}\",\n      \"type\" : \"REQUEST\"\n    }\n  }\n]\n```\n\nIf I repeat this via SSH and cURL, it works without issue. Same database server, and same application server. The 404 seems to result from \"/node/1234/relationships\", even though cURL GETs to \"/node/1234\" and \"/node/1234/relationships/all\" work fine, as well as a POST via cURL.\n\nI feel like there is something wrong with the server that is causing a 404, maybe due to a time-out or similar. Is this possible?\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/2804", "title": "Inconsistent Messages and Stack Traces when Tx Deliberately Rolled Back", "closed": "2017-06-29 12:28:21", "commitsDetails": [], "commits": {}, "ttf": 1057.0002777777777, "created": "2014-08-06 13:32:04", "user": "bachmanm", "body": "When a TransactionEventHandler decides to thrown an exception in beforeCommit(), the transaction is correctly rolled back. However, the exception message and the stack trace depend on whether there has been an attempt to create a label in the tx or not. \n\nIn cases where the attempt has been made, the whole exception looks like the database is broken, rather than revealing the real cause of the rollback. Also, there's a Neo4j NPE in the stack trace, which looks like a bug.\n\n```\n@Test\npublic void shouldProduceClearMessageAndTraceForTxFailure() throws InterruptedException {\n    final GraphDatabaseService database = new TestGraphDatabaseFactory().newImpermanentDatabase();\n\n    database.registerTransactionEventHandler(new TransactionEventHandler.Adapter<Object>() {\n        @Override\n        public Object beforeCommit(TransactionData data) throws Exception {\n            throw new RuntimeException(\"I'd like this tx to be rolled back!\");\n        }\n    });\n\n    try (Transaction tx = database.beginTx()) {\n        database.createNode();\n        tx.success();\n    } catch (Exception e) {\n        assertEquals(\"Unable to commit transaction\", e.getMessage());\n        //from the following stacktrace, I can clearly see what happened\n        e.printStackTrace();\n    }\n\n    try (Transaction tx = database.beginTx()) {\n        database.createNode(DynamicLabel.label(\"test\"));\n        tx.success();\n    } catch (Exception e) {\n        //this is inconsistent with the above\n        assertEquals(\"Unable to resume or suspend running transaction\", e.getMessage());\n        //this stacktrace doesn't give me any idea what happened and looks like something's wrong with the DB:\n        e.printStackTrace();\n    }\n}\n```\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/2771", "title": "2.1.3 RPM looks broken from the py2neo / Assimilation perspective", "closed": "2015-12-18 18:02:20", "commitsDetails": [], "commits": {}, "ttf": 505.0002777777778, "created": "2014-07-31 01:34:25", "user": "Alan-R", "body": "I've mentioned this on the mailing list - but it looks more and more like something is wrong with Neo4j.  I don't think this is a @nigelsmall issue.\n\nThe assimilation bug report for this is here: https://trello.com/c/B41LtH8K  You can reproduce this in a clean-room environment by using this Dockerfile:  http://hg.linux-ha.org/assimilation/file/tip/docker/testNeo/Dockerfile\n\nthe DEB package of 2.1.0 works fine on all Ubuntu, but the RPM of 2.1.3 fails on CentOS6.  Same versions of Python, same version of Py2neo.\n\nInstalling 2.0.1 on CentOS6 also works fine.  The only thing different between the versions that work and those that don't is neo4j.  \n\nThis looks more like a Neo4j problem than a py2neo problem...\n\nAlso: Why is the .DEB unstable package so far behind the .RPM package?\n\nMore details below:\n\nThis combination fails with CentOS6 under Docker:\n\nPython 2.7.5\nUSING PYTHON VERSION 2.7.5 (default, Oct 29 2013, 22:46:38)\n[GCC 4.4.7 20120313 (Red Hat 4.4.7-3)]\nUSING NEO4J VERSION (2, 1, 3, u'')\nUSING py2neo VERSION 1.6.4\n\n3 minutes ago - Edit - Delete\nAlan Robertson (ossalanr)\nAlan Robertson\n\nThis combination of versions works fine with Ubuntu under Docker: USING PYTHON VERSION 2.7.6 (default, Mar 22 2014, 22:59:56)\n[GCC 4.8.2]\nUSING NEO4J VERSION (2, 1, 0, u'RC2')\nUSING py2neo VERSION 1.6.4\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/2713", "title": "Saved Scripts in Web UI Issue", "closed": "2016-04-22 13:51:15", "commitsDetails": [], "commits": {}, "ttf": 640.0002777777778, "created": "2014-07-22 00:29:56", "user": "edschembor", "body": "So I'm not sure if this would could as a feature request or an issue. \n\nIf you run a saved script in the Web UI and then cntrl-up to grab it from your history of searches, it no longer appears as a saved search. ie) the star is no longer gold and saving it creates a copy as opposed to overwriting. \n\nPretty new to Neo4j, but I want to get involved with development so I'll try to look into the issue myself\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/2676", "title": "relationships(path) showing empty results in the browser text results", "closed": "2016-04-22 13:50:56", "commitsDetails": [], "commits": {}, "ttf": 648.0002777777778, "created": "2014-07-14 13:46:19", "user": "whatSocks", "body": "Here is the same query run in the browser and the webadmin console:\n\nIn the graphical display you can see the two relationships as expected:\n\n![screen shot 2014-07-14 at 9 41 13 am](https://cloud.githubusercontent.com/assets/2731744/3571393/f6a336b4-0b5c-11e4-8de8-06a25736003e.png)\n\nBut there's nothing when you want to see the text version:\n\n![screen shot 2014-07-14 at 9 41 21 am](https://cloud.githubusercontent.com/assets/2731744/3571404/0a50910c-0b5d-11e4-830c-3094f06f292c.png)\n\nDouble-checking to see if there is in fact a text version, the same query has results in the webadmin:\n\n![screen shot 2014-07-14 at 9 41 59 am](https://cloud.githubusercontent.com/assets/2731744/3571407/15f0b32a-0b5d-11e4-980e-5c43ef21a3d7.png)\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/2660", "title": "afterRollback not always called when TX tolls back", "closed": "2017-07-01 05:39:12", "commitsDetails": [], "commits": {}, "ttf": 1086.0002777777777, "created": "2014-07-10 09:46:35", "user": "bachmanm", "body": "When a transaction rolls back due to constraint violations, afterRollback() on TransactionEventHandler is called, as illustrated by this passing test:\n\n```\n@Test\npublic void afterRollbackShouldBeCalledOnHandlers() {\n    GraphDatabaseService database = new TestGraphDatabaseFactory().newImpermanentDatabase();\n\n    try (Transaction tx = database.beginTx()) {\n        Node node1 = database.createNode();\n        Node node2 = database.createNode();\n        node1.createRelationshipTo(node2, DynamicRelationshipType.withName(\"TEST\"));\n        tx.success();\n    }\n\n    final AtomicBoolean called = new AtomicBoolean(false);\n\n    database.registerTransactionEventHandler(new TransactionEventHandler.Adapter<Void>() {\n        @Override\n        public void afterRollback(TransactionData data, Void state) {\n            called.set(true);\n        }\n    });\n\n    try {\n        try (Transaction tx = database.beginTx()) {\n            database.getNodeById(0).delete();\n            tx.success();\n        }\n\n        fail(\"This tx should not succeed\");\n    } catch (RuntimeException e) {\n        //ok\n    }\n\n    assertTrue(\"Handler wasn't called!\", called.get());\n}\n```\n\nHowever, when the client code throws a RuntimeException in the middle of a transaction or in beforeCommit(), afterRollback() isn't called, although the transaction is rolled back. Illustrated by the following failing test:\n\n```\n@Test\npublic void afterRollbackShouldBeCalledOnHandlers2() {\n    GraphDatabaseService database = new TestGraphDatabaseFactory().newImpermanentDatabase();\n\n    final AtomicBoolean called = new AtomicBoolean(false);\n\n    database.registerTransactionEventHandler(new TransactionEventHandler.Adapter<Void>() {\n        @Override\n        public Void beforeCommit(TransactionData data) throws Exception {\n            throw new RuntimeException();\n        }\n\n        @Override\n        public void afterRollback(TransactionData data, Void state) {\n            called.set(true);\n        }\n    });\n\n    try {\n        try (Transaction tx = database.beginTx()) {\n            database.createNode();\n            tx.success();\n        }\n\n        fail(\"This tx should not succeed\");\n    } catch (RuntimeException e) {\n        //ok\n    }\n\n    assertTrue(\"Handler wasn't called!\", called.get());\n}\n```\n\nNeo4j 2.1.2\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/2625", "title": "Cypher exporter / shell's dump command improvements", "closed": "2016-09-24 22:39:17", "commitsDetails": [], "commits": {}, "ttf": 816.0002777777778, "created": "2014-07-01 09:56:40", "user": "jotomo", "body": "This issue ties together all bugs related to the shell's dump command.\n## Schema support\n- [ ] Constraints using indexes during import: there needs a way to wait for indexes to become available after creating them, otherwise the import takes forever.\n  - [ ] The shell could be extended with a command to achieve the above, but this functionality might be better introduced in Cypher, some discussion occurred here: https://github.com/neo4j/neo4j/issues/2491#issuecomment-44791266. Edit: there actually already is the _schema await_ command which can be used for that purpose.\n- [x] Currently indexes and schema creation statements aren't properly generated, they need to be separate statements. Issue: https://github.com/neo4j/neo4j/issues/2491\n  - [x] @nawroth raised the question whether this change will break the integrated live console in the manual here: https://github.com/neo4j/neo4j/pull/2576#issuecomment-46100875 So this needs to be tested.\n## Robustness\n- [ ] Newline characters need to be properly escaped (also: tab, ...). Issue: https://github.com/neo4j/neo4j/issues/2577\n- [ ] Strings containing _&&_ confuse the shell. There might be more problems if the shell attempts to parse something inside a string. Issue: https://github.com/neo4j/neo4j/issues/2579\n- [ ] Byte arrays are exported as int arrays. Does Cypher support byte arrays? Should it? Issue: https://github.com/neo4j/neo4j/issues/2491\n- [ ] Maybe (no personal experience with large data sets): scaling to allow inserting more data than fitting a single transaction. This depends on what the goal of the _dump_ command is, whether it shall be usable the same way SQL people dump DBs to SQL scripts to load them into another DB or whether dump is designed for smaller data sets (this should also be documented, so people will know what to expect from the command).\n- [ ] Cosmetics: there shouldn't be a BEGIN/COMMIT pair for schema creation if no schema is created\n- [x] Order of dumped statements (esp. index/constrains), discussion: https://github.com/neo4j/neo4j/issues/4437\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/2618", "title": "Neo4j 2.1.2 Nested collection function doesn't work with parameters", "closed": "2016-10-20 12:59:09", "commitsDetails": [], "commits": {}, "ttf": 844.0002777777778, "created": "2014-06-28 20:34:07", "user": "MatAtBread", "body": "The following query:\n\n```\nmatch (g:TagGroup)<-[t:TAGGED]-(p:Product)-[:OFFERED]->(o:Offer)<-[offers:OFFERS]-(u:User) \nwhere not has(g.hidden) and g.numProducts>3 \nwith distinct g,u, sum(o.mass)^1.6/g.numProducts^0.6 as n order by n desc \nwith g.name as tag,collect(u.fingerprint)[0..4] as fps,collect(u)[0..4] as user \nwith tag,fps,user,filter(fp in [\"I5aJXcRLfqx\"] where fp in fps) as inter\nwhere length(inter)>0\nreturn tag,user\n\n```\n\n....doesn't parse when the hard-coded array in the filter statement is replaced with a (correctly supplied) array of strings as a map parameter. The environment is an embedded Java instance. The full trace is:\n\n```\n\nError: Error running instance method\n...Unknown identifier `  AGGREGATION459`\n...Unknown identifier `tag`.\n...Unknown identifier `user`.\n... at org.neo4j.cypher.internal.compiler.v2_1.executionplan.LegacyPipeBuilder.produceAndThrowException(LegacyPipeBuilder.scala:109)\n... at org.neo4j.cypher.internal.compiler.v2_1.executionplan.LegacyPipeBuilder.buildQuery(LegacyPipeBuilder.scala:78)\n... at org.neo4j.cypher.internal.compiler.v2_1.executionplan.LegacyPipeBuilder.producePlan(LegacyPipeBuilder.scala:42)\n... at org.neo4j.cypher.internal.compiler.v2_1.executionplan.ExecutionPlanBuilder.build(ExecutionPlanBuilder.scala:62)\n... at org.neo4j.cypher.internal.compiler.v2_1.CypherCompiler$$anonfun$3.apply(CypherCompiler.scala:110)\n... at org.neo4j.cypher.internal.compiler.v2_1.CypherCompiler$$anonfun$3.apply(CypherCompiler.scala:110)\n... at org.neo4j.cypher.internal.compiler.v2_1.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:36)\n... at org.neo4j.cypher.internal.LRUCache.getOrElseUpdate(LRUCache.scala:35)\n... at org.neo4j.cypher.internal.LRUCache.apply(LRUCache.scala:61)\n... at org.neo4j.cypher.internal.LRUCache.apply(LRUCache.scala:25)\n... at org.neo4j.cypher.internal.compiler.v2_1.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:34)\n... at org.neo4j.cypher.internal.compiler.v2_1.CypherCompiler.prepare(CypherCompiler.scala:109)\n... at org.neo4j.cypher.internal.CypherCompiler.prepare(CypherCompiler.scala:73)\n... at org.neo4j.cypher.ExecutionEngine$$anonfun$liftedTree1$1$1.apply(ExecutionEngine.scala:95)\n... at org.neo4j.cypher.ExecutionEngine$$anonfun$liftedTree1$1$1.apply(ExecutionEngine.scala:93)\n... at org.neo4j.cypher.internal.compiler.v2_1.MonitoringCacheAccessor$$anonfun$1.apply(CacheAccessor.scala:36)\n... at org.neo4j.cypher.internal.LRUCache.getOrElseUpdate(LRUCache.scala:35)\n... at org.neo4j.cypher.internal.LRUCache.apply(LRUCache.scala:61)\n... at org.neo4j.cypher.internal.LRUCache.apply(LRUCache.scala:25)\n... at org.neo4j.cypher.internal.compiler.v2_1.MonitoringCacheAccessor.getOrElseUpdate(CacheAccessor.scala:34)\n... at org.neo4j.cypher.ExecutionEngine.liftedTree1$1(ExecutionEngine.scala:93)\n... at org.neo4j.cypher.ExecutionEngine.prepare(ExecutionEngine.scala:87)\n... at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:74)\n... at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:69)\n... at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:84)\n... at Neo4jWrapper.execMapQuery(Neo4jWrapper.java:278)\n... at Neo4jWrapper.cypher(Neo4jWrapper.java:258)\n... at sun.reflect.GeneratedMethodAccessor125.invoke(Unknown Source)\n... at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n... at java.lang.reflect.Method.invoke(Method.java:606)\n\n```\n"}, {"labels": ["bolt server", "bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/2585", "title": "Location header for transaction not containing port", "closed": "2018-02-19 13:53:36", "commitsDetails": [], "commits": {}, "ttf": 1344.0002777777777, "created": "2014-06-15 21:42:12", "user": "hhariri", "body": "I'm getting a strange behaviour in that the location header returned on the transactional endpoint does not contain the port. \n\nExpected: http://localhost:7474/db/data/transaction/3\n\nActual: http://localhost/db/data/transaction/3\n\nWhat am I missing? Just upgraded to 2.1.2 and same behaviour.\n"}, {"labels": ["bug", "team-cypher"], "filteredCommits": ["3464afe70760d9620b267f404f7b0563ac647499"], "url": "https://github.com/neo4j/neo4j/issues/2556", "gitStatsSummary": {"insertions": 2, "gitFilesChange": 1, "lines": 2, "deletions": 0}, "numCommits": 1, "commits": {"3464afe70760d9620b267f404f7b0563ac647499": {"commitUser": "Lojjs", "commitGHEventType": "closed"}}, "ttf": 1218.0002777777777, "user": "davidegrohmann", "changesInPackagesGIT": ["community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal"], "body": "To reproduce just try to parse:\n\nRETURN true = not(42 = 32)\n\nit will fail since NOT is parsed as a function invocation rather than the boolean negation operator.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "NOT is not parsed properly when nested inside expressions without parentheses", "statsSkippedReason": "", "closed": "2017-10-12 10:31:56", "commitsDetails": [{"commitUser": "Lojjs", "commitDateTime": "2017-10-11 14:59:36", "commitHash": "3464afe70760d9620b267f404f7b0563ac647499", "commitParents": ["aa9af78dcf1f72d9108f2f52d07f990b8c65bff2"], "commitGHEventType": "closed", "nameRev": "3464afe70760d9620b267f404f7b0563ac647499 tags/3.3.0~4^2~2^2^2", "commitGitStats": [{"insertions": 10, "lines": 10, "filePath": "community/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ExpressionAcceptanceTest.scala", "deletions": 0}, {"insertions": 2, "lines": 2, "filePath": "community/cypher/cypher-compiler-3.1/src/main/scala/org/neo4j/cypher/internal/compiler/v3_1/ast/ResolvedFunctionInvocation.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Better error message when not is parsed as a function.\n\nFixes #2556\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-10-11 14:30:27"}], "created": "2014-06-11 18:05:54"}, {"labels": ["bug", "team-cypher", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/2548", "title": "Problem using LOAD CSV with custom FIELDTERMINATOR (2.1.1)", "closed": "2017-10-03 14:59:56", "commitsDetails": [], "commits": {}, "ttf": 1210.0002777777777, "created": "2014-06-10 17:46:38", "user": "DenysVuika", "body": "When using LOAD CSV with custom FIELDTERMINATOR (for instance | symbol) execution crashes when any of the row values contains double quotes symbol. Should I expect neo4j doing character escaping transparently or this is something for client application to handle?\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/2501", "title": "Neo4j browser interface causes high CPU usage", "closed": "2014-06-03 08:18:26", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2014-06-03 08:07:53", "user": "FrankLo", "body": "On all systems I tried Neo4j, the web interface is causing high CPU usage, even if nothing is happen. On a Mac Mini 5.1 with OS X 10.9.3 in Safari this leads to 70-75% CPU usage, on a Windows 8 PC with AMD Phenom II X4 it reaches 35%. The same on my notebook with Intel Core 7. The java server process itself has not high usage.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/2495", "title": "Stackoverflow on long cypher create query.", "closed": "2014-06-03 22:29:01", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2014-06-02 08:33:54", "user": "jmatsushita", "body": "Hi there,\n\nI created [a dump from neo4j 2.1](http://gist.neo4j.org/?bb29230790bad3359a14) with the neo4j-shell and tried to import this in Structr. It has about 2500 statements (more than 1000 nodes).\n\nIn both structr (1.0.0-RC2) and gist.neo4j.org it generates very similar stackoverflow error:\n\nIn gist.neo4j.org:\n\n```\njava.lang.StackOverflowError\n    at org.neo4j.cypher.internal.compiler.v2_1.ReattachAliasedExpressions$$anonfun$2.apply(ReattachAliasedExpressions.scala:36)\n    at org.neo4j.cypher.internal.compiler.v2_1.ReattachAliasedExpressions$$anonfun$2.apply(ReattachAliasedExpressions.scala:36)\n    at scala.Option.map(Option.scala:145)\n    at org.neo4j.cypher.internal.compiler.v2_1.ReattachAliasedExpressions$.apply(ReattachAliasedExpressions.scala:36)\n    at org.neo4j.cypher.internal.compiler.v2_1.ReattachAliasedExpressions$$anonfun$2.apply(ReattachAliasedExpressions.scala:36)\n    at org.neo4j.cypher.internal.compiler.v2_1.ReattachAliasedExpressions$$anonfun$2.apply(ReattachAliasedExpressions.scala:36)\n    at scala.Option.map(Option.scala:145)\n\n[Repeated many times]\n```\n\nI also get an `Neo.DatabaseError.General.UnknownFailure` when trying to import this directly from the /browser. When importing the same dataset with a [LOAD CSV](https://gist.github.com/jmatsushita/0fc1b6ce96d1dbfe240a) statement in 2.1 things work smoothly!\n\nLooks like there is some limit on the number of aliases that can be used in a single statement. Is there a way to change the configuration to allow more of them to be used? I'd like to avoid having to split these statement!\n\nAlso posted an issue on the structr repo.\n\nCheers,\n\nJun\n"}, {"labels": ["bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/2492", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"1979941d5b606491b74308f43943f8e110249e5d": {"commitUser": "chrisvest", "commitGHEventType": "referenced"}}, "ttf": 2.000277777777778, "user": "lbuczkow", "changesInPackagesSPOON": [], "changesInPackagesGIT": [], "body": "It seems that transactions are left not fully commited (?) when database has not been properly closed. Such a situation is common under Eclipse where shutdown hook does not work. A workaround is to open the database, shutdown immediately and open again after the application start:\n\n```\n    new GraphDatabaseFactory().newEmbeddedDatabaseBuilder(locationPath)\n            .loadPropertiesFromFile(propertiesPath).newGraphDatabase().shutdown();\n\n    graphDb = new GraphDatabaseFactory().newEmbeddedDatabaseBuilder(locationPath)\n            .loadPropertiesFromFile(propertiesPath).newGraphDatabase();\n```\n\nIn such a case changes made previously become effective.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 0, "UPD": 0, "TOT": 0, "DEL": 0, "INS": 0, "spoonFilesChanged": 0, "MOV": 0}, "title": "transactions left not fully commited (?) when database is not properly closed", "statsSkippedReason": "", "closed": "2014-06-04 13:42:04", "commitsDetails": [{"commitUser": "chrisvest", "commitDateTime": "2014-06-04 15:41:32", "commitHash": "1979941d5b606491b74308f43943f8e110249e5d", "commitParents": ["2a2d88f38f69fee0b48e7795be92c1c99d269dcb", "57dda33184d6820a1753978968e943a16aefcfa8"], "commitGHEventType": "referenced", "nameRev": "1979941d5b606491b74308f43943f8e110249e5d tags/2.1.2~30", "commitGitStats": [{"insertions": 19, "lines": 20, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/xaframework/LogMatchers.java", "deletions": 1}, {"insertions": 5, "lines": 5, "filePath": "community/kernel/CHANGES.txt", "deletions": 0}, {"insertions": 6, "lines": 12, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/xaframework/XaLogicalLog.java", "deletions": 6}, {"insertions": 1, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/xaframework/InMemoryLogBuffer.java", "deletions": 1}, {"insertions": 98, "lines": 98, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/recovery/KernelRecoveryTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.LogMatchers.commandEntry(int)"}], "spoonFilePath": "LogMatchers.java"}, {"spoonMethods": [], "spoonFilePath": "XaLogicalLog.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.recovery.KernelRecoveryTest"}], "spoonFilePath": "KernelRecoveryTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 0, "INS": 2, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.InMemoryLogBuffer.asByteBuffer()"}], "spoonFilePath": "InMemoryLogBuffer.java"}], "commitMessage": "Merge pull request #2509 from jakewins/2.1-recovery\n\nResolves a 2.1.1 recovery issue. Fixes #2492", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-06-04 15:41:32"}], "created": "2014-06-01 20:46:26"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/2491", "title": "dump issues", "closed": "2017-07-14 17:10:01", "commitsDetails": [], "commits": {}, "ttf": 1138.0002777777777, "created": "2014-06-01 20:27:12", "user": "lbuczkow", "body": "The following dump from a database (neo4j v.2.1):\n\n```\nbegin\ncreate constraint on (n:`Device`) assert n.`id` is unique\ncreate constraint on (n:`User`) assert n.`id` is unique\ncreate (_0:`Device` {`created`:1401616258184, `createdFrom`:\"/192.168.1.21\", `exchangeKey`:[-17, -114, 72, 100, -45, -62, 18, 122, 26, -10, -97, 71, 45, 89, -52, 8, 79, 77, -102, 14, -20, 104, -66, -46, -2, 24, -2, 60, 64, 14, -10, -39], ...\n;\ncommit\n\n\n```\n\nis not a valid shell script. It should be:\n\n```\nbegin\ncreate constraint on (n:`Device`) assert n.`id` is unique;\ncreate constraint on (n:`User`) assert n.`id` is unique;\ncommit\nbegin\ncreate (_0:`Device` {`created`:1401616258184, `createdFrom`:\"/192.168.1.21\", `exchangeKey`:[-17, -114, 72, 100, -45, -62, 18, 122, 26, -10, -97, 71, 45, 89, -52, 8, 79, 77, -102, 14, -20, 104, -66, -46, -2, 24, -2, 60, 64, 14, -10, -39], ...\n;\ncommit\n\n```\n\nAnother issue is that exchangeKey originally of byte[] type cannot be cast into byte[] again after restoring database from the dump. \n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/2490", "title": "NullPointerException in castOrFail(CastSupport.scala:41)", "closed": "2017-01-31 08:27:56", "commitsDetails": [], "commits": {}, "ttf": 974.0002777777778, "created": "2014-06-01 20:22:24", "user": "lbuczkow", "body": "The following query against neo4j 2.1 database embedded in a Java app raises an exception:\n\nOPTIONAL MATCH (friend:FacebookFriend {id: {id}})\nSET friend:User\n\n({id} is a string like '100001234567890')\n\n```\njava.lang.NullPointerException\n    at org.neo4j.cypher.internal.helpers.CastSupport$.castOrFail(CastSupport.scala:41)\n    at org.neo4j.cypher.internal.compiler.v2_1.commands.LabelAction.exec(LabelAction.scala:46)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.ExecuteUpdateCommandsPipe.org$neo4j$cypher$internal$compiler$v2_1$pipes$ExecuteUpdateCommandsPipe$$exec(ExecuteUpdateCommandsPipe.scala:55)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.ExecuteUpdateCommandsPi$$$$1019fdff8b266d7d9d5647386930b3d8$$$$ands$1$$anonfun$apply$2.apply(ExecuteUpdateCommandsPipe.scala:44)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.ExecuteUpdateCommandsPi$$$$1019fdff8b266d7d9d5647386930b3d8$$$$ands$1$$anonfun$apply$2.apply(ExecuteUpdateCommandsPipe.scala:44)\n    at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\n    at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\n    at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\n    at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\n    at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:327)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.builders.QueryStateSettingIterator.hasNext(QueryStateSettingIterator.scala:27)\n    at scala.collection.Iterator$class.isEmpty(Iterator.scala:256)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.builders.QueryStateSettingIterator.isEmpty(QueryStateSettingIterator.scala:25)\n    at scala.collection.TraversableOnce$class.nonEmpty(TraversableOnce.scala:109)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.builders.QueryStateSettingIterator.nonEmpty(QueryStateSettingIterator.scala:25)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.builders.IfElseIterator.fillBuffer(IfElseIterator.scala:56)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.builders.IfElseIterator.hasNext(IfElseIterator.scala:37)\n    at scala.collection.Iterator$class.foreach(Iterator.scala:727)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.builders.IfElseIterator.foreach(IfElseIterator.scala:28)\n    at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:176)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:45)\n    at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.builders.IfElseIterator.to(IfElseIterator.scala:28)\n    at scala.collection.TraversableOnce$class.toList(TraversableOnce.scala:257)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.builders.IfElseIterator.toList(IfElseIterator.scala:28)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.EagerPipe.internalCreateResults(EagerPipe.scala:31)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.PipeWithSource.createResults(Pipe.scala:98)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.PipeWithSource.createResults(Pipe.scala:95)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.PipeWithSource.createResults(Pipe.scala:95)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.PipeWithSource.createResults(Pipe.scala:95)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.PipeWithSource.createResults(Pipe.scala:95)\n    at org.neo4j.cypher.internal.compiler.v2_1.pipes.PipeWithSource.createResults(Pipe.scala:95)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1$$anonfun$apply$2.apply(ExecutionPlanBuilder.scala:119)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1$$anonfun$apply$2.apply(ExecutionPlanBuilder.scala:118)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.ExecutionWorkflowBuilder.runWithQueryState(ExecutionPlanBuilder.scala:169)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:117)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.ExecutionPlanBuilder$$anonfun$getExecutionPlanFunction$1.apply(ExecutionPlanBuilder.scala:102)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.ExecutionPlanBuilder$$anon$1.execute(ExecutionPlanBuilder.scala:68)\n    at org.neo4j.cypher.internal.compiler.v2_1.executionplan.ExecutionPlanBuilder$$anon$1.execute(ExecutionPlanBuilder.scala:67)\n    at org.neo4j.cypher.internal.ExecutionPlanWrapperForV2_1.execute(CypherCompiler.scala:126)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:75)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:69)\n    at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:84)\n```\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/2489", "title": "Browser: racing heartbeat", "closed": "2014-06-02 07:04:42", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2014-06-01 19:52:17", "user": "jotomo", "body": "Neo4j 2.1.1 maxes out (uses 100% CPU) my clean-profile Firefox 29.0.1 on Linux.\n\nJust opening the UI I get thousands of these calls in the console:\n\n```\nOPTIONS http://localhost:7474/db/data/ [HTTP/1.1 204 No Content 0ms]\nOPTIONS http://localhost:7474/db/data [HTTP/1.1 302 Found 0ms]\n```\n\n@akollegger According to a commit of yours: https://github.com/neo4j/neo4j/commit/e2ca2134b4fa09d29ec12118a111db68f3bd2bc8#diff-90b92f3f35373f42ed86bcd004ce1a55R55\nThe above calls steam from server status pings and the commit extracted the timeout value as the heartbeart parameter to make it configurable. Seems there's something wrong, and I'm suspecting it's Neo4j at this time (tried with a clean Firefox profile, without any fancy addons and whatnot).\nEdit: outdated speculation removed.\n"}, {"labels": ["bug", "team-kernel"], "filteredCommits": ["15ef925607e171ade675c1bf6850bf98f283fcdf"], "url": "https://github.com/neo4j/neo4j/issues/2483", "gitStatsSummary": {"insertions": 54, "gitFilesChange": 3, "lines": 56, "deletions": 2}, "numCommits": 1, "commits": {"15ef925607e171ade675c1bf6850bf98f283fcdf": {"commitUser": "tinwelint", "commitGHEventType": "closed"}, "69729fae020c1253f8bab4bb3c4c2f8d087741fb": {"commitUser": "tinwelint", "commitGHEventType": "referenced"}}, "ttf": 1127.0002777777777, "user": "bachmanm", "changesInPackagesSPOON": ["org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removeProperty(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess,org.neo4j.kernel.impl.store.record.PrimitiveRecord,long)", "org.neo4j.unsafe.batchinsert.internal.BatchInserterImpl.removeNodeProperty(long,java.lang.String)", "org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removeProperty(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess)", "org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removePropertyIfExists(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess)", "org.neo4j.unsafe.batchinsert.internal.BatchInserterImpl.removeRelationshipProperty(long,java.lang.String)"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/kernel/impl/transaction", "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/internal"], "body": "```\n@Test\npublic void shouldBeAbleToRemovePropertyTwiceInBatchInserter() {\n    String dir = \"/tmp/\" + System.currentTimeMillis();\n    BatchInserter batchInserter = BatchInserters.inserter(dir);\n\n    long id = batchInserter.createNode(Collections.<String, Object>emptyMap());\n    batchInserter.removeNodeProperty(id, \"non-existent\");\n}\n```\n\nfails with \n\n```\njava.lang.IllegalStateException: No property record in property chain for Node[0,used=true,rel=-1,prop=-1,labels=Inline(0x0:[]),light] contained property with key 0\n    at org.neo4j.kernel.impl.nioneo.xa.PropertyTraverser.findPropertyRecordContaining(PropertyTraverser.java:51)\n    at org.neo4j.kernel.impl.nioneo.xa.PropertyDeleter.removeProperty(PropertyDeleter.java:83)\n    at org.neo4j.unsafe.batchinsert.BatchInserterImpl.removeNodeProperty(BatchInserterImpl.java:326)\n    at com.graphaware.neo4j.experiment.Neo4jBugsTests.shouldBeAbleToRemovePropertyTwiceInBatchInserter(Neo4jBugsTests.java:73)\n```\n\nThis used to pass in 2.0.3 but behaves as above in 2.1.0.\n\nCheers\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 5, "UPD": 2, "TOT": 10, "DEL": 0, "INS": 5, "spoonFilesChanged": 2, "MOV": 3}, "title": "Batch Inserter failing with an ugly message when removing non-existing property", "statsSkippedReason": "", "closed": "2017-06-30 10:23:41", "commitsDetails": [{"commitUser": "tinwelint", "commitDateTime": "2017-06-29 09:27:33", "commitHash": "15ef925607e171ade675c1bf6850bf98f283fcdf", "commitParents": ["71afa4af49178e4945787667e8b99bb10e9f761a"], "commitGHEventType": "closed", "nameRev": "15ef925607e171ade675c1bf6850bf98f283fcdf tags/3.2.2^2~1^2", "commitGitStats": [{"insertions": 29, "lines": 29, "filePath": "community/kernel/src/test/java/org/neo4j/unsafe/batchinsert/internal/BatchInsertTest.java", "deletions": 0}, {"insertions": 13, "lines": 13, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/state/PropertyTraverser.java", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/internal/BatchInserterImpl.java", "deletions": 2}, {"insertions": 39, "lines": 39, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/state/PropertyDeleter.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchInserterImpl.removeNodeProperty(long,java.lang.String)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchInserterImpl.removeRelationshipProperty(long,java.lang.String)"}], "spoonFilePath": "BatchInserterImpl.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "DEL": 0, "INS": 1, "MOV": 3, "spoonMethodName": "org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removeProperty(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess)"}, {"UPD": 0, "TOT": 3, "DEL": 0, "INS": 3, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removeProperty(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess,org.neo4j.kernel.impl.store.record.PrimitiveRecord,long)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removePropertyIfExists(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess)"}], "spoonFilePath": "PropertyDeleter.java"}, {"spoonMethods": [], "spoonFilePath": "PropertyTraverser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchInsertTest.shouldIgnoreRemovingNonExistentRelationshipProperty()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchInsertTest.shouldIgnoreRemovingNonExistentNodeProperty()"}], "spoonFilePath": "BatchInsertTest.java"}], "commitMessage": "Fixes #2483\n\nDoesn't throw on removing non existent property in batch inserter.\n\nThis to mimic behavior of GraphDatabaseService. It seems that this behaviour was\nchanged by accident in a previous version to throw exception instead of\njust ignoring.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-06-29 09:26:12"}, {"commitUser": "tinwelint", "commitDateTime": "2017-06-30 12:02:32", "commitHash": "69729fae020c1253f8bab4bb3c4c2f8d087741fb", "commitParents": ["2e8ea2f652307d69f2736ff6a5e67ec799ecc5ef", "15ef925607e171ade675c1bf6850bf98f283fcdf"], "commitGHEventType": "referenced", "nameRev": "69729fae020c1253f8bab4bb3c4c2f8d087741fb tags/3.2.2^2~1", "commitGitStats": [{"insertions": 29, "lines": 29, "filePath": "community/kernel/src/test/java/org/neo4j/unsafe/batchinsert/internal/BatchInsertTest.java", "deletions": 0}, {"insertions": 13, "lines": 13, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/state/PropertyTraverser.java", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/internal/BatchInserterImpl.java", "deletions": 2}, {"insertions": 39, "lines": 39, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/state/PropertyDeleter.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchInserterImpl.removeNodeProperty(long,java.lang.String)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchInserterImpl.removeRelationshipProperty(long,java.lang.String)"}], "spoonFilePath": "BatchInserterImpl.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "DEL": 0, "INS": 1, "MOV": 3, "spoonMethodName": "org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removeProperty(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess)"}, {"UPD": 0, "TOT": 3, "DEL": 0, "INS": 3, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removeProperty(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess,org.neo4j.kernel.impl.store.record.PrimitiveRecord,long)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.state.PropertyDeleter.removePropertyIfExists(org.neo4j.kernel.impl.transaction.state.RecordAccess.RecordProxy,int,org.neo4j.kernel.impl.transaction.state.RecordAccess)"}], "spoonFilePath": "PropertyDeleter.java"}, {"spoonMethods": [], "spoonFilePath": "PropertyTraverser.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchInsertTest.shouldIgnoreRemovingNonExistentRelationshipProperty()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchInsertTest.shouldIgnoreRemovingNonExistentNodeProperty()"}], "spoonFilePath": "BatchInsertTest.java"}], "commitMessage": "Merge pull request #9587 from tinwelint/3.1-bi-remove-property-silent\n\nFixes #2483", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-06-30 12:02:32"}], "created": "2014-05-29 21:19:20"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/2447", "title": "Diffset memory leak", "closed": "2015-12-05 23:54:42", "commitsDetails": [], "commits": {}, "ttf": 561.0002777777778, "created": "2014-05-23 06:12:43", "user": "akollegger", "body": "As explained in detail on [stack overflow](https://stackoverflow.com/questions/23707321/concurrent-query-and-delete-leads-to-memory-leak-in-neo4j-2-0-3-community).\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/2444", "title": "Passing variable through WITH even if it shouldn't?", "closed": "2014-06-10 08:41:27", "commitsDetails": [], "commits": {}, "ttf": 19.00027777777778, "created": "2014-05-22 06:42:13", "user": "sqreept", "body": "On Neo4j community edition 2.0.3:\n\nThis query:\n\n```\nCREATE (n) WITH {id:id(n)} AS m WITH {x:m.id} AS m RETURN m\n```\n\nreturns `{id:68}` where `68` was the newly created node id\n\nBut this query:\n\n```\nCREATE (m) WITH {id:id(m)} AS m WITH {x:m.id} AS m RETURN m\n```\n\nreturns `{id:null}`\n\nWhy is this happening? Is this a bug? Is it fixable?\n\nThanks a lot,\nAdrian\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/2440", "title": "neo4j 2.0.3 - Queries fail on read-only database with schema indexes", "closed": "2015-04-23 13:48:01", "commitsDetails": [], "commits": {}, "ttf": 337.0002777777778, "created": "2014-05-21 13:19:50", "user": "alessandro-guido", "body": "When opening a database containing schema indexes in read-only mode, neo4j fails to find indexes and throws an exception during query execution\n## Test case\n\ncreate a new database with a schema index and a node\n\n```\n$ neo4j-shell -path /tmp/test.db\nNOTE: Local Neo4j graph database service at '/tmp/test.db'\nWelcome to the Neo4j Shell! Enter 'help' for a list of commands\n\n\nneo4j-sh (?)$ CREATE INDEX ON :Person(name);\n+-------------------+\n| No data returned. |\n+-------------------+\nIndexes added: 1\n507 ms\nneo4j-sh (?)$ MERGE (p:Person {name: 'John Doe'}) return p;\n+--------------------------+\n| p                        |\n+--------------------------+\n| Node[0]{name:\"John Doe\"} |\n+--------------------------+\n1 row\nNodes created: 1\nProperties set: 1\nLabels added: 1\n354 ms\nneo4j-sh (?)$ MATCH (p:Person {name: 'John Doe'}) return p;\n+--------------------------+\n| p                        |\n+--------------------------+\n| Node[0]{name:\"John Doe\"} |\n+--------------------------+\n1 row\n91 ms\nneo4j-sh (?)$ quit\n```\n\nnow re-open the database in read-only\n\n```\n$ neo4j-shell -readonly -path /tmp/test.db\nNOTE: Local Neo4j graph database service at '/tmp/test.db'\nWelcome to the Neo4j Shell! Enter 'help' for a list of commands\n\n\nneo4j-sh[readonly] (?)$ MATCH (p:Person {name: 'John Doe'}) return p;\nIndexNotFoundKernelException: No index with id 1 exists.\nneo4j-sh[readonly] (?)$ quit\n```\n\nreopening the database in read-write makes the query succeed\n\n```\n$ neo4j-shell -path /tmp/test.db\nNOTE: Local Neo4j graph database service at '/tmp/test.db'\nWelcome to the Neo4j Shell! Enter 'help' for a list of commands\n\n\nneo4j-sh (?)$ MATCH (p:Person {name: 'John Doe'}) return p;\n+--------------------------+\n| p                        |\n+--------------------------+\n| Node[0]{name:\"John Doe\"} |\n+--------------------------+\n1 row\n687 ms\n```\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/2425", "title": "Bug in arranging of saved queries", "closed": "2015-03-02 14:01:48", "commitsDetails": [], "commits": {}, "ttf": 290.0002777777778, "created": "2014-05-16 07:59:59", "user": "dmontag", "body": "When moving a query into an expanded folder, the other queries in that folder disappear until the page is refreshed.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/2423", "title": "Inconsistent behaviour when missing cypher parameters", "closed": "2016-10-20 13:05:24", "commitsDetails": [], "commits": {}, "ttf": 888.0002777777778, "created": "2014-05-15 15:01:04", "user": "jayniz", "body": "The responses when a parameter of a cypher query is missing are a little confusing. In all of the three following cases I would expect a `ParameterNotFoundException`, but I'm getting a different response for each query.\n\nLet's take a query that uses `ORDER BY` but with a parameter missing:\n\n``` shell\ncurl -XPOST -d'{\"query\":\"MATCH n WHERE n.foo={missing_param} RETURN n ORDER BY n.bar\",\"params\":{}}' -H'Content-Type:application/json' -H'Accept:application/json;xxstream=true;charset=UTF-8'  http://localhost:7474/db/data/cypher\n```\n\nThrows a `ParameterNotFoundException` as expected.\n\nNow, if I take the same query but leave out the `ORDER BY` clause, I get a `BadInputException`:\n\n``` shell\ncurl -XPOST -d'{\"query\":\"MATCH n WHERE n.foo={missing_param} RETURN n\",\"params\":{}}' -H'Content-Type:application/json' -H'Accept:application/json;xxstream=true;charset=UTF-8'  http://localhost:7474/db/data/cypher\n```\n\nIf, however, I express the query differently:\n\n``` shell\ncurl -XPOST -d'{\"query\":\"MATCH (n:Foo{bar:{missing_param}}) RETURN n ORDER BY n.bar\",\"params\":{}}' -H'Content-Type:application/json' -H'Accept:application/json;xxstream=true;charset=UTF-8'  http://localhost:7474/db/data/cypher\n```\n\nI just get an empty result set with _no exception_ whatsoever (tried it with 2.0.3).\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/2382", "title": "case insensitive regex match at UTF-8 patterns?", "closed": "2014-05-22 14:37:39", "commitsDetails": [], "commits": {}, "ttf": 15.000277777777777, "created": "2014-05-07 14:05:25", "user": "astesin", "body": "Neo4j 2.1.0-M02, case insensitive regex match does not work with UTF-8 Ukrainian words, neither from Java nor from web-interface browser. Say I have node with a word '\u041b\u0456\u0433\u0430' somewhere.\n\nMATCH (n) WHERE n.payload =~ '(?i)._\u043b\u0456\u0433\u0430._' does not match\n\nMATCH (n) WHERE n.payload =~ '(?i)._\u043b\u0406\u0413\u0430._' does not match\n\nMATCH (n) WHERE n.payload =~ '(?i)._\u041b\u0456\u0433\u0430._' match Ok\n\nDo I need some deep magic to get it working as expected? Thanks in advance!\n\nWBR, Andrii\n"}, {"labels": ["bug", "team-cluster"], "url": "https://github.com/neo4j/neo4j/issues/2369", "title": "Arbiter shows as role UNKNOWN in jmx", "closed": "2017-11-06 12:10:46", "commitsDetails": [], "commits": {}, "ttf": 1280.0002777777777, "created": "2014-05-05 14:52:16", "user": "wouterv", "body": "Master and slave have a nice name in High Availability attribute haRole in array InstancesInCluster, but arbiter is UNKNOWN instead of just \"arbiter\".\n\nSee screenshot.\n\n![screenshot from 2014-05-05 16 51 01](https://cloud.githubusercontent.com/assets/616997/2879030/b170aa38-d464-11e3-9953-6c0265402709.png)\n\nMaster is shown correctly:\n![screenshot from 2014-05-05 16 52 33](https://cloud.githubusercontent.com/assets/616997/2879051/e9783bda-d464-11e3-8c6f-5843a07b4304.png)\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/2367", "title": "Cannot get high availability info via proxy mbean", "closed": "2014-06-02 07:47:17", "commitsDetails": [], "commits": {}, "ttf": 27.00027777777778, "created": "2014-05-05 14:09:29", "user": "wouterv", "body": "Running this program:\n\n```\npublic static void main(String[] args) {\n    JMXServiceURL url =\n            null;\n    try {\n        url = new JMXServiceURL(\"service:jmx:rmi:///jndi/rmi://localhost:3637/jmxrmi\");\n        JMXConnector jmxConnector = JMXConnectorFactory.connect(url, null);\n        MBeanServerConnection mbeanServerConnection = jmxConnector.getMBeanServerConnection();\n\n        ObjectName mbeanName = new ObjectName(\"org.neo4j:instance=kernel#0,name=High Availability\");\n\n        //Get MBean proxy instance that will be used to make calls to registered MBean\n        HighAvailability mbeanProxy =\n                MBeanServerInvocationHandler.newProxyInstance(\n                        mbeanServerConnection, mbeanName, HighAvailability.class, true);\n        ClusterMemberInfo[] instancesInCluster = mbeanProxy.getInstancesInCluster();\n\n        for (ClusterMemberInfo info: instancesInCluster){\n            System.out.println(info.getInstanceId());\n        }\n    } catch (Exception e) {\n        e.printStackTrace();\n    }\n```\n\nGives me this exception:\n\n```\njava.lang.ClassCastException: [Ljavax.management.openmbean.CompositeData; cannot be cast to [Lorg.neo4j.management.ClusterMemberInfo;\nat com.sun.proxy.$Proxy0.getInstancesInCluster(Unknown Source)\nat NeoJmx.main(NeoJmx.java:30)\nat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\nat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\nat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\nat java.lang.reflect.Method.invoke(Method.java:606)\nat com.intellij.rt.execution.application.AppMain.main(AppMain.java:134)\n```\n\nCalling it like this works:\n\n```\n       CompositeData[] instancesInCluster = (CompositeData[]) mbeanServerConnection.getAttribute(mbeanName, \"InstancesInCluster\");\n        for (CompositeData info: instancesInCluster){\n            System.out.println(info.get(\"instanceId\"));\n        }\n```\n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/2364", "title": "DB recovery (inactivity) -> Timeout", "closed": "2018-02-19 14:36:58", "commitsDetails": [], "commits": {}, "ttf": 1386.0002777777777, "created": "2014-05-05 09:36:58", "user": "petamem", "body": "Neo4j 2.0.3, JDK 1.7.0.55, Gentoo 64bit, big iron machine\n# bin/neo4j start\n\nUsing additional JVM arguments:  -server -XX:+DisableExplicitGC -Dorg.neo4j.server.properties=conf/neo4j-server.properties -Djava.util.logging.config.file=conf/logging.properties -Dlog4j.configuration=file:conf/log4j.properties -XX:+UseConcMarkSweepGC -XX:+CMSClassUnloadingEnabled\nStarting Neo4j Server...process [5318]... waiting for server to be ready............................................................................................................................................................................................................................................................. Failed to start within 120 seconds.\nNeo4j Server may have failed to start, please check the logs.\n\n11:20:04.236 [main] INFO  org.neo4j.server.CommunityNeoServer - Setting startup timeout to: 120000ms based on -1\nDetected incorrectly shut down database, performing recovery..\n2014-05-05 09:24:20.311+0000 ERROR [org.neo4j]: Exception when stopping org.neo4j.kernel.impl.nioneo.xa.NeoStoreXaDataSource@54db08f1 java.nio.channels.ClosedByInterruptException\njava.lang.RuntimeException: java.nio.channels.ClosedByInterruptException\n\n...\n\nThe interesting part is, that during these 120seconds neo4j isn't doing anything. I see no disk activity, no CPU activity. Seems to be just sitting there and waiting for its demise.\n\nLittle bit frustrating after 2 hours of evaluation (download, set up Oracle JDK, set ulimit, set correct URL where neo4j should listen to, pierced the right Firewall hole,...).\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/2308", "title": "'identifier unknown' in ORDER BY when using UNION", "closed": "2017-10-11 09:55:30", "commitsDetails": [], "commits": {}, "ttf": 1265.0002777777777, "created": "2014-04-24 14:11:11", "user": "jimading", "body": "I have a graph with TAG-nodes and PERSON-nodes and run the following two queries:\n\n```\nMATCH (p:Person)-[r_ptq]->(tq:Tag)\nWHERE tq.name IN [\"soccer\", \"tennis\", \"basketball\"]\nRETURN DISTINCT (p) AS person, count(r_ptq) AS score, collect(tq.name) AS tags\nORDER BY score DESC \nLIMIT 10\n```\n\nand\n\n```\nMATCH (tq:Tag)-[r_tqt]->(t:Tag)\nWHERE tq.name IN [\"soccer\", \"tennis\", \"basketball\"]\nWITH DISTINCT t, sum(r_tqt.weight) AS weight\nORDER BY weight DESC\nLIMIT 10\nMATCH (t)<--(p:Person)\nRETURN DISTINCT p AS person, sum(weight) AS score, collect(t.name) AS tags\nORDER BY score DESC\nLIMIT 10\n```\n\neach of them runs without any error and returns 'person', 'score' and 'tags'.\nNow, if i want to combine the results of both queries using UNION, i.e.\n\n```\nMATCH (tq:Tag)-[r_tqt]->(t:Tag)\nWHERE tq.name IN [\"soccer\", \"tennis\", \"basketball\"]\nWITH DISTINCT t, sum(r_tqt.weight) AS weight\nORDER BY weight DESC\nLIMIT 10\nMATCH (t)<--(p:Person)\nRETURN DISTINCT p AS person, sum(weight) AS score, collect(t.name) AS tags\nORDER BY score DESC\nLIMIT 10\nUNION\nMATCH (p:Person)-[r_ptq]->(tq:Tag)\nWHERE tq.name IN [\"soccer\", \"tennis\", \"basketball\"]\nRETURN DISTINCT (p) AS person, count(r_ptq) AS score, collect(tq.name) AS tags\nORDER BY score DESC \nLIMIT 10\n```\n\nI get \n\n```\nUnknown identifier `weight`.\n```\n\nIt seems like the identifier is only unknown within the ORDER BY statement. If I comment the ORDER BY statements, the combined query works but of course without ordering I don't get the desired results. It's really strange to me that this only happens when using the UNION statement but not for the individual queries when run independently.\n\nAny clue on how to resolve this?\n\n(by the way: in the second query I have to use a nested MATCH since I have a fairly large clustering coefficient and it would take too long without restricting the first MATCH results prior to the second MATCH condition.)\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/2305", "title": "java.lang.IllegalArgumentException: Can not set java.util.Set field", "closed": "2017-11-02 19:20:26", "commitsDetails": [], "commits": {}, "ttf": 1289.0002777777777, "created": "2014-04-23 18:00:48", "user": "terrafant", "body": "Having two layer hierarchy and the same Neo4j node for multiple java types gives java.lang.IllegalArgumentException. \n\nThe bug has been described in detail on \nhttp://stackoverflow.com/questions/23094160/how-can-i-make-a-node-to-be-of-multiple-types\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/2296", "title": "backup not writing to stderr when a connection cannot be made", "closed": "2016-09-15 16:47:50", "commitsDetails": [], "commits": {}, "ttf": 876.0002777777778, "created": "2014-04-23 06:24:11", "user": "wouterv", "body": "We have a backup script that checks whether there are any errors during backup and it does so by looking at stderr. However when neo4j-backup cannot connect to the host it needs to backup from, it does not output anything to stderr, instead it dumps a stacktrace to stdout.\n\nSo something like:\n\n```\n# bin/neo4j-backup -from single://foobar -to /tmp/foo 2> /tmp/testerror\nPerforming full backup from 'single://foobar'\nCouldn't connect to 'single://foobar'\norg.neo4j.com.ComException: BackupClient could not connect to foobar:6362\n    at org.neo4j.com.Client$1.create(Client.java:143)\n    at org.neo4j.com.Client$1.create(Client.java:125)\n    at org.neo4j.com.ResourcePool.acquire(ResourcePool.java:175)\n    at org.neo4j.com.Client.getChannel(Client.java:308)\n    at org.neo4j.com.Client.sendRequest(Client.java:211)\n    at org.neo4j.com.Client.sendRequest(Client.java:198)\n    at org.neo4j.backup.BackupClient.fullBackup(BackupClient.java:50)\n    at org.neo4j.backup.BackupService.doFullBackup(BackupService.java:110)\n    at org.neo4j.backup.BackupTool.doBackupFull(BackupTool.java:230)\n    at org.neo4j.backup.BackupTool.doBackup(BackupTool.java:217)\n    at org.neo4j.backup.BackupTool.run(BackupTool.java:156)\n    at org.neo4j.backup.BackupTool.main(BackupTool.java:70)\n# cat /tmp/testerror \n```\n\nnothing is shown\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/2284", "title": "ThisShouldNotHappenError on passing a collection with literal maps inside through the params argument for the REST interface", "closed": "2017-10-03 15:06:18", "commitsDetails": [], "commits": {}, "ttf": 1264.0002777777777, "created": "2014-04-17 23:43:13", "user": "arturosevilla", "body": "If you execute the following Cypher query through the REST interface:\n\n```\n{ \"query\": \"return {stuff}.data\", \"params\": {\"stuff\": [{\"data\": 3}]}}\n```\n\nYou would get the following stack trace:\n\n```\n{\n  \"message\" : \"Developer: Andres claims that: Need something with properties\",\n  \"exception\" : \"ThisShouldNotHappenError\",\n  \"fullname\" : \"org.neo4j.helpers.ThisShouldNotHappenError\",\n  \"stacktrace\" : [ \n\"org.neo4j.cypher.internal.compiler.v2_1.commands.expressions.Property.apply(Property.scala:42)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.pipes.ExtractPipe$$anonfun$3$$anonfun$apply$2.apply(ExtractPipe.scala:63)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.pipes.ExtractPipe$$anonfun$3$$anonfun$apply$2.apply(ExtractPipe.scala:61)\", \n\"scala.collection.immutable.Map$Map1.foreach(Map.scala:109)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.pipes.ExtractPipe$$anonfun$3.apply(ExtractPipe.scala:61)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.pipes.ExtractPipe$$anonfun$3.apply(ExtractPipe.scala:60)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.pipes.ExtractPipe$$anonfun$internalCreateResults$1.apply(ExtractPipe.scala:83)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.pipes.ExtractPipe$$anonfun$internalCreateResults$1.apply(ExtractPipe.scala:83)\", \n\"scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.ClosingIterator$$anonfun$next$1.apply(ClosingIterator.scala:51)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.ClosingIterator$$anonfun$next$1.apply(ClosingIterator.scala:48)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.ClosingIterator.failIfThrows(ClosingIterator.scala:118)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.ClosingIterator.next(ClosingIterator.scala:48)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.PipeExecutionResult.next(PipeExecutionResult.scala:168)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.PipeExecutionResult.next(PipeExecutionResult.scala:34)\", \n\"scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\", \n\"scala.collection.convert.Wrappers$IteratorWrapper.next(Wrappers.scala:30)\", \n\"org.neo4j.cypher.internal.compiler.v2_1.PipeExecutionResult$$anon$1.next(PipeExecutionResult.scala:76)\", \n\"org.neo4j.helpers.collection.ExceptionHandlingIterable$1.next(ExceptionHandlingIterable.java:53)\", \n\"org.neo4j.helpers.collection.IteratorWrapper.next(IteratorWrapper.java:47)\", \n\"org.neo4j.server.rest.repr.ListRepresentation.serialize(ListRepresentation.java:64)\",\n \"org.neo4j.server.rest.repr.Serializer.serialize(Serializer.java:75)\", \n\"org.neo4j.server.rest.repr.MappingSerializer.putList(MappingSerializer.java:61)\", \n\"org.neo4j.server.rest.repr.CypherResultRepresentation.serialize(CypherResultRepresentation.java:83)\", \n\"org.neo4j.server.rest.repr.MappingRepresentation.serialize(MappingRepresentation.java:41)\", \n\"org.neo4j.server.rest.repr.OutputFormat.assemble(OutputFormat.java:219)\", \n\"org.neo4j.server.rest.repr.OutputFormat.formatRepresentation(OutputFormat.java:151)\",\n \"org.neo4j.server.rest.repr.OutputFormat.response(OutputFormat.java:134)\", \n\"org.neo4j.server.rest.repr.OutputFormat.ok(OutputFormat.java:71)\", \n\"org.neo4j.server.rest.web.CypherService.cypher(CypherService.java:122)\", \n\"java.lang.reflect.Method.invoke(Unknown Source)\", \n\"org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:139)\", \n\"org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\", \n\"java.lang.Thread.run(Unknown Source)\" \n]\n}\n```\n\nNote that you can do:\n\n```\n    { \"query\": \"return {stuff}.data\", \"params\": {\"stuff\": {\"data\": 3}}}\n```\n"}, {"labels": ["bug", "team-cluster"], "url": "https://github.com/neo4j/neo4j/issues/2280", "title": "Can't start a slave in Read-Only mode (ServerStartupException in neo4j-enterprise 2.0.1)", "closed": "2017-10-06 08:47:55", "commitsDetails": [], "commits": {}, "ttf": 1268.0002777777777, "created": "2014-04-16 15:25:33", "user": "dcolebatch", "body": "We need to be able to easily mark a slave in a cluster as Read Only, to support the typical use-case of a reporting / ad-hoc query server. When we set one of the slave instances in the cluster to `read_only=true`, it bombs on startup with the below exception.  \n\nOf course we have also tried with the combination of `slave_only=true` AND `read_only=true`, but to no avail.\n\n```\norg.neo4j.server.ServerStartupException: Starting Neo4j Server failed: org.neo4j.kernel.impl.transaction.ReadOnlyTxManager cannot be cast to org.neo4j.kernel.impl.transaction.TxManager\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:218) ~[neo4j-server-2.0.1.jar:2.0.1]\n        at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:87) [neo4j-server-2.0.1.jar:2.0.1]\n        at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:50) [neo4j-server-2.0.1.jar:2.0.1]\nCaused by: java.lang.ClassCastException: org.neo4j.kernel.impl.transaction.ReadOnlyTxManager cannot be cast to org.neo4j.kernel.impl.transaction.TxManager\n        at org.neo4j.kernel.ha.HighlyAvailableGraphDatabase.create(HighlyAvailableGraphDatabase.java:153) ~[neo4j-ha-2.0.1.jar:2.0.1]\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.run(InternalAbstractGraphDatabase.java:301) ~[neo4j-kernel-2.0.1.jar:2.0.1]\n        at org.neo4j.kernel.ha.HighlyAvailableGraphDatabase.<init>(HighlyAvailableGraphDatabase.java:140) ~[neo4j-ha-2.0.1.jar:2.0.1]\n        at org.neo4j.graphdb.factory.HighlyAvailableGraphDatabaseFactory$1.newDatabase(HighlyAvailableGraphDatabaseFactory.java:47) ~[neo4j-ha-2.0.1.jar:2.0.1]\n        at org.neo4j.graphdb.factory.GraphDatabaseBuilder.newGraphDatabase(GraphDatabaseBuilder.java:198) ~[neo4j-kernel-2.0.1.jar:2.0.1]\n        at org.neo4j.server.enterprise.EnterpriseDatabase$DatabaseMode$2.createDatabase(EnterpriseDatabase.java:52) ~[neo4j-server-enterprise-2.0.1.jar:2.0.1]\n        at org.neo4j.server.enterprise.EnterpriseDatabase.createDb(EnterpriseDatabase.java:74) ~[neo4j-server-enterprise-2.0.1.jar:2.0.1]\n        at org.neo4j.server.database.CommunityDatabase.start(CommunityDatabase.java:120) ~[neo4j-server-2.0.1.jar:2.0.1]\n        at org.neo4j.server.AbstractNeoServer.start(AbstractNeoServer.java:158) ~[neo4j-server-2.0.1.jar:2.0.1]\n        ... 2 common frames omitted\n```\n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/2272", "title": "Remove or upgrade dependancy on jersey REST library", "closed": "2018-02-19 14:59:07", "commitsDetails": [], "commits": {}, "ttf": 1405.0002777777777, "created": "2014-04-15 22:11:37", "user": "mangrish", "body": "For some reason the neo4j community server has a dependancy on a REST library which I feel is problematic for two reasons:\n1) The core server should be able to be wrapped by a REST interface rather than forcing the option.\n2) Upgrades to the wrapping library (in this case the neo4j-rest-binding) now have to make compatible upgrades to both itself and this library creating a circular dependancy.\n\nMy proposal would be to remove the dependancy on jersey 1.x from the java-server project and migrate the code to the rest binding project. This code could then be governed under the same project and kept in line with upgrades (in this case to the new improved jax-rs 2.0 libraries).\n\nThe problematic pom is: https://github.com/neo4j/neo4j/blob/master/community/server/pom.xml\n\nUpgrade of jersey library to 2.7 can be found on my fork of the 2.0 branch of the java-rest-binding project here: https://github.com/inner-loop/java-rest-binding/commit/3b6b4e06bc7205c651e15386d040cb8f0772ec56\n\nThe thread on upgrading the java-rest-binding is here: https://github.com/neo4j/java-rest-binding/issues/69\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/2270", "title": "TransactionEventHandler changed in 2.1.0-M01", "closed": "2014-12-06 05:51:34", "commitsDetails": [], "commits": {}, "ttf": 234.00027777777777, "created": "2014-04-15 19:53:05", "user": "tbaum", "body": "after updating from 2.0.2 to 2.1.0-M01 I'm getting strange exceptions inside the tx-handler\n\nthe handler is updating some Lucene indexes in the `TransactionEventHandler::beforeCommit` method.  the javadoc says \n\n> ...The transaction is still open when this method is invoked, making it possible to perform mutating operations in this method...\n\nthanks for your help, cheers Thomas\n\n``` java\npublic class Test {\n    private GraphDatabaseService graphDatabaseService;\n    @Before public void setup() {\n        graphDatabaseService = new TestGraphDatabaseFactory().newImpermanentDatabase();\n        Index<Node> index;\n        try (Transaction tx = graphDatabaseService.beginTx()) {\n            index = graphDatabaseService.index().forNodes(\"external\");\n        }\n        graphDatabaseService.registerTransactionEventHandler(new TransactionEventHandler.Adapter<Object>() {\n            @Override public Object beforeCommit(TransactionData data) throws Exception {\n                data.createdNodes().forEach((node) -> index.add(node, \"key\", node.getProperty(\"name\",\"\")));\n                return null;\n            }\n        });\n    }\n\n\n    @Test public void txEventHookCypher() {\n        new ExecutionEngine(graphDatabaseService).execute(\"CYPHER 2.0 CREATE (:Test {name: 'foo'})\");\n    }\n\n    @Test public void txEventHookJavaApi() {\n        try (Transaction tx = graphDatabaseService.beginTx()) {\n            Node node = graphDatabaseService.createNode();\n            node.setProperty(\"name\", \"foo\");\n            tx.success();\n        }\n    }\n}\n\n```\n\n```\norg.neo4j.graphdb.TransactionFailureException: Unable to commit transaction\n    at org.neo4j.kernel.TopLevelTransaction.close(TopLevelTransaction.java:140)\n    at com.google.inject.extensions.neo4j.Test1.txEventHookJavaApi(Test1.java:47)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.junit.runner.JUnitCore.run(JUnitCore.java:160)\n    at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:74)\n    at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:211)\n    at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:67)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n    at com.intellij.rt.execution.application.AppMain.main(AppMain.java:120)\nCaused by: javax.transaction.HeuristicRollbackException: Failed to commit transaction Transaction(4, owner:\"main\")[STATUS_NO_TRANSACTION,Resources=1], transaction rolled back ---> javax.transaction.xa.XAException\n    at org.neo4j.kernel.impl.transaction.TxManager.commit(TxManager.java:574)\n    at org.neo4j.kernel.impl.transaction.TxManager.commit(TxManager.java:403)\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.commit(TransactionImpl.java:123)\n    at org.neo4j.kernel.TopLevelTransaction.close(TopLevelTransaction.java:124)\n    ... 28 more\nCaused by: javax.transaction.xa.XAException\n    at org.neo4j.kernel.api.exceptions.TransactionFailureException.unBoxedForCommit(TransactionFailureException.java:86)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaResourceManager.prepareKernelTx(XaResourceManager.java:900)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaResourceManager.commit(XaResourceManager.java:498)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaResourceHelpImpl.commit(XaResourceHelpImpl.java:64)\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.doCommit(TransactionImpl.java:544)\n    at org.neo4j.kernel.impl.transaction.TxManager.commit(TxManager.java:464)\n    ... 31 more\nCaused by: org.neo4j.kernel.api.exceptions.TransactionHookException: Transaction handler failed.\n    at org.neo4j.kernel.impl.api.TransactionHooks$TransactionHooksState.add(TransactionHooks.java:100)\n    at org.neo4j.kernel.impl.api.TransactionHooks.beforeCommit(TransactionHooks.java:59)\n    at org.neo4j.kernel.impl.api.KernelTransactionImplementation.prepare(KernelTransactionImplementation.java:114)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaResourceManager.prepareKernelTx(XaResourceManager.java:896)\n    ... 35 more\nCaused by: java.lang.IllegalStateException: Tx status is: STATUS_COMMITING\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.enlistResource(TransactionImpl.java:193)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaConnectionHelpImpl.enlistResource(XaConnectionHelpImpl.java:105)\n    at org.neo4j.kernel.impl.index.IndexConnectionBroker.acquireResourceConnection(IndexConnectionBroker.java:56)\n    at org.neo4j.index.impl.lucene.LuceneIndex.getConnection(LuceneIndex.java:92)\n    at org.neo4j.index.impl.lucene.LuceneIndex.add(LuceneIndex.java:148)\n    at com.google.inject.extensions.neo4j.Test1$1.lambda$beforeCommit$0(Test1.java:28)\n    at com.google.inject.extensions.neo4j.Test1$1$$Lambda$1/1727361096.accept(Unknown Source)\n    at java.lang.Iterable.forEach(Iterable.java:75)\n    at com.google.inject.extensions.neo4j.Test1$1.beforeCommit(Test1.java:28)\n    at org.neo4j.kernel.TransactionEventHandlers.beforeCommit(TransactionEventHandlers.java:136)\n    at org.neo4j.kernel.TransactionEventHandlers.beforeCommit(TransactionEventHandlers.java:49)\n    ... 38 more\n```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/2268", "title": "Feature request: Build-in authentication", "closed": "2017-06-22 13:40:48", "commitsDetails": [], "commits": {}, "ttf": 1164.0002777777777, "created": "2014-04-15 12:18:29", "user": "hoffmaaxe", "body": "I wish a authentication feature for the Neo4j server. Without authentication I only can restrict the access to the database, so that only daemons on the localhost has access. I can't serve the database to other host in the local network or internet.\n\nAt the beginning it would be nice to integrate a simple authentication like in the authentication plugin, which doesn't work anymore with Neo4j 2.0.2 (see neo4j-contrib/authentication-extension#25 and #2264). \n"}, {"labels": ["bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/2265", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"b02b8e7cff33b8e0e157808173cdc6776c113920": {"commitUser": "chrisvest", "commitGHEventType": "referenced"}}, "ttf": 17.00027777777778, "user": "wouterv", "changesInPackagesSPOON": [], "changesInPackagesGIT": [], "body": "After upgrading and running my migration script, I get the following exception, which I do not get when upgrading to 2.0.1:\n\n```\n2014-04-15 07:28:25.555+0000 ERROR [org.neo4j]: Exception when stopping org.neo4j.index.impl.lucene.LuceneDataSource@5779e710 org.neo4j.kernel.impl.transaction.xaframework.IllegalLogFormatException: Invalid log format version found, expected 3 but was 2. To be able to upgrade from an older log format version there must have been a clean shutdown of the database\njava.lang.RuntimeException: org.neo4j.kernel.impl.transaction.xaframework.IllegalLogFormatException: Invalid log format version found, expected 3 but was 2. To be able to upgrade from an older log format version there must have been a clean shutdown of the database\n    at org.neo4j.kernel.impl.transaction.xaframework.LogPruneStrategies$TransactionTimeSpanPruneStrategy$1.reached(LogPruneStrategies.java:250)\n    at org.neo4j.kernel.impl.transaction.xaframework.LogPruneStrategies$AbstractPruneStrategy.prune(LogPruneStrategies.java:78)\n    at org.neo4j.kernel.impl.transaction.xaframework.LogPruneStrategies$TransactionTimeSpanPruneStrategy.prune(LogPruneStrategies.java:222)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.close(XaLogicalLog.java:739)\n    at org.neo4j.kernel.impl.transaction.xaframework.LogBackedXaDataSource.stop(LogBackedXaDataSource.java:69)\n    at org.neo4j.index.impl.lucene.LuceneDataSource.stop(LuceneDataSource.java:310)\n    at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n    at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.shutdown(LifeSupport.java:547)\n    at org.neo4j.kernel.lifecycle.LifeSupport.remove(LifeSupport.java:339)\n    at org.neo4j.kernel.impl.transaction.XaDataSourceManager.unregisterDataSource(XaDataSourceManager.java:272)\n    at org.neo4j.index.lucene.LuceneKernelExtension.stop(LuceneKernelExtension.java:92)\n    at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n    at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155)\n    at org.neo4j.kernel.extension.KernelExtensions.stop(KernelExtensions.java:124)\n    at org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.stop(LifeSupport.java:527)\n    at org.neo4j.kernel.lifecycle.LifeSupport.stop(LifeSupport.java:155)\n    at org.neo4j.kernel.lifecycle.LifeSupport.shutdown(LifeSupport.java:185)\n    at org.neo4j.kernel.InternalAbstractGraphDatabase.shutdown(InternalAbstractGraphDatabase.java:801)\n    at org.springframework.data.neo4j.support.DelegatingGraphDatabase.shutdown(DelegatingGraphDatabase.java:270)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:606)\n    at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:327)\n    at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:253)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:510)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:486)\n    at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:742)\n    at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:455)\n    at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1090)\n    at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:487)\n    at org.springframework.web.context.ContextLoader.configureAndRefreshWebApplicationContext(ContextLoader.java:410)\n    at org.springframework.web.context.ContextLoader.initWebApplicationContext(ContextLoader.java:306)\n    at org.springframework.web.context.ContextLoaderListener.contextInitialized(ContextLoaderListener.java:112)\n    at org.eclipse.jetty.server.handler.ContextHandler.callContextInitialized(ContextHandler.java:787)\n    ....\nCaused by: org.neo4j.kernel.impl.transaction.xaframework.IllegalLogFormatException: Invalid log format version found, expected 3 but was 2. To be able to upgrade from an older log format version there must have been a clean shutdown of the database\n    at org.neo4j.kernel.impl.transaction.xaframework.LogIoUtils.readLogHeader(LogIoUtils.java:70)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.getFirstStartRecordTimestamp(XaLogicalLog.java:1701)\n    at org.neo4j.kernel.impl.transaction.xaframework.LogPruneStrategies$TransactionTimeSpanPruneStrategy$1.reached(LogPruneStrategies.java:246)\n    ... 53 more\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 0, "UPD": 0, "TOT": 0, "DEL": 0, "INS": 0, "spoonFilesChanged": 0, "MOV": 0}, "title": "Exception when upgrading directly to 2.0.2 from 1.9.5", "statsSkippedReason": "", "closed": "2014-05-02 13:01:00", "commitsDetails": [{"commitUser": "chrisvest", "commitDateTime": "2014-05-02 15:00:44", "commitHash": "b02b8e7cff33b8e0e157808173cdc6776c113920", "commitParents": ["35ff76e0b8d4ea42263048ad00507e28f4ec59cb", "37371aabcab006ab409a898b3f0f0205c394fea6"], "commitGHEventType": "referenced", "nameRev": "b02b8e7cff33b8e0e157808173cdc6776c113920 tags/2.0.4-20140514-PREVIEW1~5^2~4", "commitGitStats": [{"insertions": 40, "lines": 50, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/xaframework/LogPruneStrategies.java", "deletions": 10}, {"insertions": 72, "lines": 72, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/xaframework/TransactionCountPruneStrategyTest.java", "deletions": 0}, {"insertions": 11, "lines": 11, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/xaframework/IllegalLogFormatException.java", "deletions": 0}, {"insertions": 73, "lines": 73, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/xaframework/TransactionTimeSpanPruneStrategyTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.TransactionTimeSpanPruneStrategyTest"}], "spoonFilePath": "TransactionTimeSpanPruneStrategyTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "DEL": 3, "INS": 1, "MOV": 5, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.LogPruneStrategies.TransactionCountPruneStrategy.newThreshold().1.reached(java.io.File,long,org.neo4j.kernel.impl.transaction.xaframework.LogExtractor.LogLoader)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.LogPruneStrategies.decidePruneForIllegalLogFormat(org.neo4j.kernel.impl.transaction.xaframework.IllegalLogFormatException)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.LogPruneStrategies.TransactionTimeSpanPruneStrategy.newThreshold().1.reached(java.io.File,long,org.neo4j.kernel.impl.transaction.xaframework.LogExtractor.LogLoader)"}, {"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.LogPruneStrategies"}], "spoonFilePath": "LogPruneStrategies.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.TransactionCountPruneStrategyTest"}], "spoonFilePath": "TransactionCountPruneStrategyTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.IllegalLogFormatException.wasNewerLogVersion()"}, {"UPD": 0, "TOT": 4, "DEL": 0, "INS": 4, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.xaframework.IllegalLogFormatException"}], "spoonFilePath": "IllegalLogFormatException.java"}], "commitMessage": "Merge pull request #2343 from jakewins/1.9-prune-oldlogs\n\nHandle pruning old format logs, Fixes #2265", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-05-02 15:00:44"}], "created": "2014-04-15 07:31:19"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/2250", "title": "2.1.0-M01 fails badly with tree graph of 8,3 millions leaves", "closed": "2017-11-06 12:03:37", "commitsDetails": [], "commits": {}, "ttf": 1306.0002777777777, "created": "2014-04-09 12:37:41", "user": "kholovnych", "body": "The story. We have a dataset which is just a tree with\r\n- a single root node at level 0 (occasionally it has ID(root) = 0 because we start with empty database)\r\n- about 250 nodes at  level 1\r\n- about 100 nodes at level 2\r\n- about 10k nodes at level 3\r\n- about 50k nodes at level 4\r\n- about 800k nodes at level 5\r\n- about 8340k nodes we want to load to level 6.\r\n  We are loading data with LOAD CSV where each line creates a node and a relationship to a previous level node. Neo4j is a 2.1.0-M01 Enterprise-for-Startups, cluster with 3 nodes, 8Gb memory at each instance, JVM is told to use 7Gb.\r\n\r\nPart I. We discovered that at levels 4 and 5 it takes some considerable (minutes) time until loaded level becomes visible from Cypher queries. We wrote a simple script which just dumps all possible paths in a tree:\r\n\r\n```\r\nstart root = node(0) match path = (root)-[r*]->(b) WITH length(path) as len, path RETURN len, extract( n IN NODES(path) | n.payload ) AS payload_chain  ORDER BY len DESC\r\n```\r\nYou can easily guess that it returns the quantity of path exactly equal to the quantity of relationships in database.\r\nImmediately after LOAD CSV completion at level 4, web system monitor says that we have 49432 relationships and 49433 nodes which is what expected. But script above reports some 26k+ paths in the first immediate run, some 35k+ in second run and step by step it shows exactly what was expected: 49432. Ok so far, but we are USING PERIODIC COMMIT 5000 so supposedly all the transactions should be commited before the first run of the script?\r\nThe same story was at level 5: first run gave 223641 paths, second 293872, third 294482, fourth 476334, fifth gave 794482 which is what was intended.\r\nAnyway we concluded that script is a good diagnostic tool to make sure that prevoius level is complete before starting import of the next level.\r\n\r\nPart II. We are loading 8340k+ nodes to level 6 (it takes some time). Import wents fine with no errors, nothing bad to suspect.\r\nThan we start our test script and here the horror begins.\r\nThe first attempt to run the script cause master instance to fail (log is atteched below).\r\nCluster told us that one of the slaves has become master, and didn't signal any errors.\r\nBut all of a sudden, at the next run our script returned... 0 (zero!) paths immediately.\r\nQuery which counts relationships (root)-[r]->() returns correct value 249.\r\nOk I tried to change the script to\r\n{code}\r\nmatch path = (root:MyLabel {payload: 'root_payload'})-[r*]->(b) WITH length(path) as len, path RETURN len, extract( n IN NODES(path) | n.payload ) AS payload_chain  ORDER BY len DESC\r\n{code}\r\nit also returned 0 (zero) but after some time of thinking.\r\n\r\nSo we are stuck with (supposedly) corrupted database - at restart, instances say that datastores are Ok and consistent - and we are unable to complete this simple import of the tree into Neo4j. What are we doing wrong? Or maybe it is a known issue which is already solved in M02?\r\n\r\nWould you mind suggesting us some solution, please?\r\n\r\nThanks in advance!\r\nWBR, Konstantin\r\nUkraine\r\n\r\n------ 8< log follows 8<  -----\r\n13:25:41.361 [qtp1312809772-7217] WARN  o.e.jetty.servlet.ServletHandler - /db/manage/server/monitor/fetch\r\njavax.ws.rs.WebApplicationException: javax.ws.rs.WebApplicationException: org.eclipse.jetty.io.EofException\r\n        at org.neo4j.server.rest.repr.OutputFormat$1.write(OutputFormat.java:178) ~[neo4j-server-2.1.0-M01.jar:2.1.0-M01]\r\n        at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) ~[jersey-core-1.9.jar:1.9]\r\n        at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) ~[jersey-core-1.9.jar:1.9]\r\n        at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) ~[jersey-server-1.9.jar:1.9]\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) ~[jersey-server-1.9.jar:1.9]\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) ~[jersey-server-1.9.jar:1.9]\r\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) ~[jersey-server-1.9.jar:1.9]\r\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) ~[jersey-server-1.9.jar:1.9]\r\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) ~[jersey-server-1.9.jar:1.9]\r\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) ~[jersey-server-1.9.jar:1.9]\r\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) ~[javax.servlet-3.0.0.v201112011016.jar:na]\r\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698) ~[jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1506) ~[jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) ~[neo4j-server-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1477) ~[jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503) [jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:211) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1096) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432) [jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1030) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.Server.handle(Server.java:445) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:268) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:229) [jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358) [jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601) [jetty-util-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532) [jetty-util-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at java.lang.Thread.run(Thread.java:744) [na:1.7.0_51]\r\nCaused by: javax.ws.rs.WebApplicationException: org.eclipse.jetty.io.EofException\r\n        at org.neo4j.server.rest.repr.formats.StreamingJsonFormat$StreamingListWriter.writeValue(StreamingJsonFormat.java:316) ~[neo4j-server-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.ListWriter.writeValue(ListWriter.java:75) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.ValueRepresentation.addTo(ValueRepresentation.java:49) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.ListRepresentation.serialize(ListRepresentation.java:65) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.Serializer.serialize(Serializer.java:75) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.MappingSerializer.putList(MappingSerializer.java:61) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.webadmin.rest.representations.RrdDataRepresentation$1.serialize(RrdDataRepresentation.java:68) ~[neo4j-server-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.Serializer.serialize(Serializer.java:40) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.MappingSerializer.putMapping(MappingSerializer.java:56) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.MappingRepresentation.putTo(MappingRepresentation.java:57) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.ObjectRepresentation$PropertyGetter.putTo(ObjectRepresentation.java:133) ~[neo4j-server-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.ObjectRepresentation.serialize(ObjectRepresentation.java:144) ~[neo4j-server-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.MappingRepresentation.serialize(MappingRepresentation.java:41) ~[server-api-2.1.0-M01.jar:2.1.0-M01]\r\n        at org.neo4j.server.rest.repr.OutputFormat$1.write(OutputFormat.java:164) ~[neo4j-server-2.1.0-M01.jar:2.1.0-M01]\r\n        ... 30 common frames omitted\r\nCaused by: org.eclipse.jetty.io.EofException: null\r\n        at org.eclipse.jetty.io.ChannelEndPoint.flush(ChannelEndPoint.java:186) ~[jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.io.WriteFlusher.completeWrite(WriteFlusher.java:400) ~[jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.io.SelectChannelEndPoint.onSelected(SelectChannelEndPoint.java:111) ~[jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.io.SelectorManager$ManagedSelector.processKey(SelectorManager.java:498) ~[jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.io.SelectorManager$ManagedSelector.select(SelectorManager.java:455) ~[jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        at org.eclipse.jetty.io.SelectorManager$ManagedSelector.run(SelectorManager.java:420) ~[jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        ... 3 common frames omitted\r\nCaused by: java.io.IOException: \u041e\u0431\u0440\u044b\u0432 \u043a\u0430\u043d\u0430\u043b\u0430\r\n        at sun.nio.ch.FileDispatcherImpl.write0(Native Method) ~[na:1.7.0_51]\r\n        at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:47) ~[na:1.7.0_51]\r\n        at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.7.0_51]\r\n        at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.7.0_51]\r\n        at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:487) ~[na:1.7.0_51]\r\n        at org.eclipse.jetty.io.ChannelEndPoint.flush(ChannelEndPoint.java:165) ~[jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\r\n        ... 8 common frames omitted\r\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/2247", "title": "Browser - the \"Fullscreen\" tooltip appears over the button when going back from fullscreen", "closed": "2015-03-17 18:09:40", "commitsDetails": [], "commits": {}, "ttf": 342.0002777777778, "created": "2014-04-09 07:46:19", "user": "gcolbert", "body": "There's an annoying glitch regarding the \"Fullscreen\" tooltip when going back from fullscreen mode: it basically hides the button.\n\nThe problem is easy to reproduce:\n- click on the \"fullscreen\" button which is above any result box, it should toggle fullscreen mode\n- click on the down arrow to get back from fullscreen mode to normal\n- try to click on the \"fullscreen\" button again: the \"Fullscreen\" tooltip appears over the button, preventing to go in fullscreen mode more than once per result.\n\nA simple solution would be to remove the tooltip.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/2219", "title": "http.log is empty", "closed": "2015-01-28 21:11:34", "commitsDetails": [], "commits": {}, "ttf": 302.0002777777778, "created": "2014-04-01 20:14:40", "user": "timmsc", "body": "While the http.log gets created when configured, nothing is written to it with neo4j 2.0.x. Several folks have confirmed this behavior on StackOverflow with no resolution.\n\nhttp://stackoverflow.com/questions/20942686/neo4j-http-log-empty\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/2215", "title": "Browser Cache Refresh Required for 2.0.1 to 2.1.0-M01 Upgrade", "closed": "2014-11-28 07:28:18", "commitsDetails": [], "commits": {}, "ttf": 240.00027777777777, "created": "2014-04-01 17:48:46", "user": "kbastani", "body": "When upgrading Neo4j 2.0.1 to 2.1.0-M01 the JS file containing the client-side validation for Cypher is returning as a cached version of the previous release. Because of this, users trying to use the LOAD CSV feature by either start word \"LOAD\" or \"USING\" will receive a red alert that says \":help\". To prevent this issue, the reference URI of the JS files should contain a query string key-value pair \"...?version=2.1.0-M06\" or the file name should be changed for each release to include the release version.\n\nCurrent work-around: Refresh your browser cache for the page (CTRL+F5 on Windows, SHIFT+F5 on Mac OSX).\n\nSee Stack Overflow Question for details: http://stackoverflow.com/questions/22755289/cypher-query-load-csv-not-responding-in-neo4j-2-1\n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/2197", "title": "Bug: /db/data/cypher doesn't return error for failed deletion", "closed": "2018-02-19 15:00:07", "commitsDetails": [], "commits": {}, "ttf": 1421.0002777777777, "created": "2014-03-30 23:48:48", "user": "aseemk", "body": "Though the new /db/data/transaction/commit endpoint does. Neo4j 2.0.1.\n\nSetup: create a node that's connected to one or more other nodes. Mine happens to be labeled `User`.\n\nHere's the Cypher query I'm running to attempt to delete this node while it's still connected to others:\n\n``` cypher\nMATCH (user:User)\nWHERE ID(user) = {id}\nDELETE user\n```\n\nIf I simply paste this into the Neo4j browser (replacing `{id}`), I properly get back an error:\n\n```\njavax.transaction.HeuristicRollbackException: Failed to commit transaction Transaction(633, owner:\"qtp841090834-124\")[STATUS_NO_TRANSACTION,Resources=1], transaction rolled back ---> javax.transaction.xa.XAException\nNeo.DatabaseError.Transaction.CouldNotCommit\n```\n\nAnd I can replicate this by going to the underlying transaction endpoint myself:\n\n```\n:POST /db/data/transaction/commit {\"statements\": [{\"statement\": \"MATCH (user:User) WHERE ID(user) = {id} DELETE user\", \"parameters\": {\"id\": 63}}]}\n```\n\nBut if I go to the old(er) Cypher endpoint, it claims to succeed:\n\n```\n:POST /db/data/cypher {\"query\": \"MATCH (user:User) WHERE ID(user) = {id} DELETE user\", \"params\": {\"id\": 63}}\n```\n\n```\n{\n  \"columns\": [],\n  \"data\": []\n}\n```\n\nIs this a known issue with Neo4j 2.0? Is the old `/db/data/cypher` endpoint beyond deprecated and known to actually not work in some cases? Or is this just a bug that just slipped through the cracks?\n\nThanks!\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/2185", "title": "Lucene index query exceptions not caught or described by ExecutionEngine", "closed": "2017-10-11 09:54:19", "commitsDetails": [], "commits": {}, "ttf": 1293.0002777777777, "created": "2014-03-27 16:37:35", "user": "moxious", "body": "ExecutionEngine and its execute method generally has the contract that it will return an ExecutionResult, or it will throw a CypherException.\n\nWhen working with lucene indexes though, many different things can go wrong; certain malformed lucene query strings will result in NullPointerExceptions that propagate all the way up; this leaves the developer in a situation where there is no explanation why the query failed.  An example query which displays this behavior is when this query \n\n<pre>start n=node:node_auto_index({query}) return n limit 10;</pre>\n\n\nWhen {query} is bound to the string 'name:foo~' (including the single ticks) this gets interpolated incorrectly, which seems to create a parse error, and a resulting NullPointerException.  Without the single ticks, it would work fine (reference/example:  https://stackoverflow.com/questions/22637914/overcoming-nullpointerexception-on-cypher-lucene-query) \n\nIn other situations, when there is a known legitimate error in the lucene query syntax, the result is an org.apache.lucene.queryParser.ParseException, which gets re-thrown somewhere as a RuntimeException.\n\nIn both of these cases, I think a more appropriate behavior would be to throw a CypherException with an explanation of what went wrong.\n\nMore details and stack trace examples can be found here: https://groups.google.com/forum/#!topic/neo4j/viNBYECmg34 \n"}, {"labels": ["browser", "bug"], "filteredCommits": ["71aa3ed67d7d7bac1bf5b0a95a83dd84b3afb40a"], "url": "https://github.com/neo4j/neo4j/issues/2139", "gitStatsSummary": {"insertions": 23, "gitFilesChange": 2, "lines": 27, "deletions": 4}, "numCommits": 1, "commits": {"71aa3ed67d7d7bac1bf5b0a95a83dd84b3afb40a": {"commitUser": "oskarhane", "commitGHEventType": "referenced"}, "708f76e2c8ade8f2b6a0a736991cbac97398171c": {"commitUser": "oskarhane", "commitGHEventType": "referenced"}}, "ttf": 170.00027777777777, "user": "fbiville", "changesInPackagesGIT": ["community/browser/app/scripts/directives/neoTable.coffee", "community/browser/test/spec/directives/neoTable.coffee"], "body": "Steps to reproduce:\n1. start Neo4j browser\n2. execute Cypher statement `CREATE (n:HACKER {hack: '<script>alert(\"hacked!\")</script>'}) RETURN n`\n3. `<script>alert(\"hacked!\")</script>` gets executed\n\nI tried debugging the execution, however sources are minified and not source-mapped :/\n", "filteredCommitsReason": {"duplicated": 1, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "[browser] XSS issue", "statsSkippedReason": "", "closed": "2014-09-05 13:20:41", "commitsDetails": [{"commitUser": "oskarhane", "commitDateTime": "2014-09-05 14:08:51", "commitHash": "71aa3ed67d7d7bac1bf5b0a95a83dd84b3afb40a", "commitParents": ["faadc70b699068f97e41e17b8b3a49c678698b26"], "commitGHEventType": "referenced", "nameRev": "71aa3ed67d7d7bac1bf5b0a95a83dd84b3afb40a tags/2.1.5~45", "commitGitStats": [{"insertions": 13, "lines": 17, "filePath": "community/browser/app/scripts/directives/neoTable.coffee", "deletions": 4}, {"insertions": 10, "lines": 10, "filePath": "community/browser/test/spec/directives/neoTable.coffee", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Browser: escape server response to prevent XSS.\n\nFixes #2139\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-05-23 14:16:57"}, {"commitUser": "oskarhane", "commitDateTime": "2014-09-05 14:12:35", "commitHash": "708f76e2c8ade8f2b6a0a736991cbac97398171c", "commitParents": ["8e9a7227b25a831b7078e9efc062910d5e8d173b"], "commitGHEventType": "referenced", "nameRev": "708f76e2c8ade8f2b6a0a736991cbac97398171c tags/2.1.5~1^2~14", "commitGitStats": [{"insertions": 13, "lines": 17, "filePath": "community/browser/app/scripts/directives/neoTable.coffee", "deletions": 4}, {"insertions": 10, "lines": 10, "filePath": "community/browser/test/spec/directives/neoTable.coffee", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Browser: escape server response to prevent XSS.\n\nFixes #2139\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-05-23 14:16:57"}], "created": "2014-03-19 10:43:49"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/2115", "title": "Ghost node", "closed": "2017-10-04 09:44:01", "commitsDetails": [], "commits": {}, "ttf": 1299.0002777777777, "created": "2014-03-14 10:47:28", "user": "atorgfr", "body": "I got a problem that i don't really understand why this is happen.\n\nMATCH (n:USER) where n.email = 'email@hotmail.com' return count(n);\nThis return me 1.\n\nMATCH (n:USER{email:'email@hotmail.com'}) return count(n);\nThis return me 1.\n\nMATCH (n:USER) return count(n);\nThis return me 1150012.\n\nMATCH (n:USER) where n.email <> 'email@hotmail.com' return count(n);\nThis return me 1150012.\n\nHave you any idea why this can happen ?\n\nThx\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/2112", "title": "Stylesheet doesn't honor cascading of style rules", "closed": "2015-03-02 13:59:49", "commitsDetails": [], "commits": {}, "ttf": 354.0002777777778, "created": "2014-03-12 19:58:36", "user": "akollegger", "body": "In Neo4j's graph visualization, the grass style rules aren't all considered when computing the resulting style of a node or relationship. The styling should honor the expected cascading, which includes specificity and order or rule matching based on node label and relationship type. \n"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/2074", "title": "Unable to create and delete a node in the same transaction with the REST API", "closed": "2018-02-19 15:02:09", "commitsDetails": [], "commits": {}, "ttf": 1449.0002777777777, "created": "2014-03-02 19:05:39", "user": "fredericnowak", "body": "4 requests are sent the REST transactional endpoint :\n- A transaction creation request\n- A create node request\n- A delete node request\n- A read node request\n\nThe last request return a node whereas it as been deleted in the current transaction.\nIs that a bug or a desired behavior ? Do I need to commit the transaction to effectively delete the node and read the node by i in an other transaction ?\n\n```\nrequest: {\"statements\":[]}\nresponse: {\"commit\":\"http://localhost:7475/db/data/transaction/1/commit\",\"results\":[],\"transaction\":{\"expires\":\"Sun, 02 Mar 2014 18:48:11 +0000\"},\"errors\":[]}\nrequest: {\"statements\":[{\"statement\":\"CREATE (vertex {properties}) RETURN ID(vertex), LABELS(vertex), vertex\",\"parameters\":{\"properties\":{}},\"resultDataContents\":[]}]}\nresponse: {\"commit\":\"http://localhost:7475/db/data/transaction/1/commit\",\"results\":[{\"columns\":[\"ID(vertex)\",\"LABELS(vertex)\",\"vertex\"],\"data\":[{\"row\":[0,[],{}]}]}],\"transaction\":{\"expires\":\"Sun, 02 Mar 2014 18:48:13 +0000\"},\"errors\":[]}\nrequest: {\"statements\":[{\"statement\":\"START vertex=node({vertexId}) MATCH vertex DELETE vertex\",\"parameters\":{\"vertexId\":0},\"resultDataContents\":[]}]}\nresponse: {\"commit\":\"http://localhost:7475/db/data/transaction/1/commit\",\"results\":[{\"columns\":[],\"data\":[]}],\"transaction\":{\"expires\":\"Sun, 02 Mar 2014 18:48:13 +0000\"},\"errors\":[]}\nrequest: {\"statements\":[{\"statement\":\"MATCH vertex WHERE (ID(vertex) = 0) RETURN ID(vertex), LABELS(vertex), vertex\",\"parameters\":{},\"resultDataContents\":[]}]}\nresponse: {\"commit\":\"http://localhost:7475/db/data/transaction/1/commit\",\"results\":[{\"columns\":[\"ID(vertex)\",\"LABELS(vertex)\",\"vertex\"],\"data\":[{\"row\":[0,[],{}]}]}],\"transaction\":{\"expires\":\"Sun, 02 Mar 2014 18:48:13 +0000\"},\"errors\":[]}\n```\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/2009", "title": "Cypher Arithmatic Errors on Long Integers", "closed": "2014-06-10 08:42:48", "commitsDetails": [], "commits": {}, "ttf": 110.00027777777778, "created": "2014-02-19 11:37:51", "user": "ThingsHybrid", "body": "When doing arithmetic operations on big integers, particularly 64 bit long integer, there seems to be random errors on results. Examples are as follows:\n\n23367415295377408 + 4294967295000  = 23371710262672410\n1392806488 \\* 16777216 = 23367415295377410\n\nBizarrely, 1392806488 \\* 16777217 = 23367416688183896 gives the correct answer. \n"}, {"labels": ["bug", "operability", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/1877", "title": "Unable to `ls` a relationship in neo4j-shell 2.0.0", "closed": "2018-02-19 15:03:08", "commitsDetails": [], "commits": {}, "ttf": 1482.0002777777777, "created": "2014-01-28 21:59:02", "user": "TreeRex", "body": "I'm unable to list the contents of a relationship using neo4j-shell 2.0.0:\n\n```\nneo4j-sh (3941248)$ ls -vr\n(me)-[:HAS_SUBJECT,7509]->(2543867)\n(me)-[:HAS_SUBJECT,7508]->(2867089)\n(me)-[:HAS_SUBJECT,7507]->(3931268)\n(me)-[:HAS_SUBJECT,7506]->(412527)\n(me)-[:HAS_SUBJECT,7505]->(2152053)\n\nneo4j-sh (3941248)$ cd -r 7505\nneo4j-sh [:HAS_SUBJECT,7505]$ ls\norg.neo4j.kernel.impl.core.RelationshipProxy cannot be cast to org.neo4j.graphdb.Node\n\nneo4j-sh [:HAS_SUBJECT,7505]$ ls -p\norg.neo4j.kernel.impl.core.RelationshipProxy cannot be cast to org.neo4j.graphdb.Node\nneo4j-sh [:HAS_SUBJECT,7505]$ ls -r\n(3941248) --[:HAS_SUBJECT,7505]-> (2152053)\n```\n\nPer Stefan Armbruster on Stack Overflow I'm filing this. http://stackoverflow.com/questions/21414292/listing-relationship-properties-in-neo4j-shell\n"}, {"labels": ["bug", "build", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/1820", "title": "Neo4j - Generic shell - TEST FAIL", "closed": "2018-11-07 19:03:28", "commitsDetails": [], "commits": {}, "ttf": 1760.0002777777777, "created": "2014-01-12 18:34:49", "user": "lc3t35", "body": "mvn -v\nApache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)\nMaven home: /usr/share/maven\nJava version: 1.7.0_45, vendor: Oracle Corporation\nJava home: /Library/Java/JavaVirtualMachines/jdk1.7.0_45.jdk/Contents/Home/jre\nDefault locale: fr_FR, platform encoding: UTF-8\nOS name: \"mac os x\", version: \"10.8.5\", arch: \"x86_64\", family: \"mac\"\n\ncommand:\nmvn clean install -DfullBuild\n\n```\n[INFO] Building Neo4j - Generic shell 2.0-SNAPSHOT\n/.../\n-------------------------------------------------------\n T E S T S\n-------------------------------------------------------\nRunning org.neo4j.shell.impl.BashVariableInterpreterTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.398 sec - in org.neo4j.shell.impl.BashVariableInterpreterTest\nRunning org.neo4j.shell.impl.ShellBootstrapTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 sec - in org.neo4j.shell.impl.ShellBootstrapTest\nRunning org.neo4j.shell.impl.TestShellServerExtension\nTests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.633 sec - in org.neo4j.shell.impl.TestShellServerExtension\nRunning org.neo4j.shell.kernel.apps.CdTest\nTests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.144 sec - in org.neo4j.shell.kernel.apps.CdTest\nRunning org.neo4j.shell.OutputAsWriterTest\nTests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.neo4j.shell.OutputAsWriterTest\nRunning org.neo4j.shell.ServerClientInteractionTest\nTests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.238 sec <<< FAILURE! - in org.neo4j.shell.ServerClientInteractionTest\nshouldConsiderAndInterpretCustomClientPrompt(org.neo4j.shell.ServerClientInteractionTest)  Time elapsed: 0.238 sec  <<< FAILURE!\njava.lang.AssertionError: Prompt from server 'MyPrompt dim. janv. 12 19:14:04$ ' didn't match pattern 'MyPrompt .{1,3} .{1,3} \\d{1,2} \\d{2}:\\d{2}:\\d{2}\\$'\n    at org.junit.Assert.fail(Assert.java:88)\n    at org.junit.Assert.assertTrue(Assert.java:41)\n    at org.neo4j.shell.ServerClientInteractionTest.shouldConsiderAndInterpretCustomClientPrompt(ServerClientInteractionTest.java:55)\n\nRunning org.neo4j.shell.SessionTest\nTests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 sec - in org.neo4j.shell.SessionTest\nRunning org.neo4j.shell.ShellDocTest\nTests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.262 sec - in org.neo4j.shell.ShellDocTest\nRunning org.neo4j.shell.StartClientTest\n+-------------------+\n| No data returned. |\n+-------------------+\n/.../\nResults :\n\nFailed tests: \n  ServerClientInteractionTest.shouldConsiderAndInterpretCustomClientPrompt:55 Prompt from server \n'MyPrompt dim. janv. 12 19:14:04$ ' didn't match pattern 'MyPrompt .{1,3} .{1,3} \\d{1,2} \\d{2}:\\d{2}:\\d{2}\\$'\n\nTests run: 109, Failures: 1, Errors: 0, Skipped: 1\n/.../\n[INFO] Reactor Summary:\n[INFO] \n[INFO] Neo4j ............................................. SUCCESS [2.004s]\n[INFO] Licensing configuration ........................... SUCCESS [0.884s]\n[INFO] Neo4j - Graph Database Kernel ..................... SUCCESS [2:25.109s]\n[INFO] Neo4j - JMX support ............................... SUCCESS [9.738s]\n[INFO] Neo4j - Usage Data Collection ..................... SUCCESS [29.262s]\n[INFO] Neo4j - Graphviz generation ....................... SUCCESS [9.557s]\n[INFO] Neo4j - Lucene Index .............................. SUCCESS [1:39.615s]\n[INFO] Neo4j - Graph Algorithms .......................... SUCCESS [10.482s]\n[INFO] Neo4j - Graph Matching ............................ SUCCESS [6.846s]\n[INFO] Neo4j Community Cypher Build ...................... SUCCESS [4:23.114s]\n[INFO] Neo4j - Cypher Commons ............................ SUCCESS [32.610s]\n[INFO] Neo4j - Cypher Compiler 1.9 ....................... SUCCESS [1:38.046s]\n[INFO] Neo4j - Cypher Compiler 2.0 ....................... SUCCESS [2:18.120s]\n[INFO] Neo4j - Cypher .................................... SUCCESS [2:54.849s]\n[INFO] Neo4j - Cypher Documentation ...................... SUCCESS [1:43.396s]\n[INFO] Neo4j Community ................................... SUCCESS [2:07.265s]\n[INFO] Neo4j Community ................................... SUCCESS [16.164s]\n[INFO] Neo4j - Generic shell ............................. FAILURE [22.216s]\n```\n"}, {"labels": ["bug", "team-clg", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/1807", "title": "Full text indexing using the REST server: IOException: Response header too large", "closed": "2018-02-20 10:12:32", "commitsDetails": [], "commits": {}, "ttf": 1502.0002777777777, "created": "2014-01-09 15:34:18", "user": "leosoto", "body": "We are using a lucene fulltext search within neo4j (v2.0.0 enterprise) mostly successfully, except for relatively large text content (observed cases range from 5k to 27k). When posting to `/db/data/index/node/<index_name>` and such large values we are getting 500 errors and the following exception is logged on console.log:\n\n```\njava.io.IOException: Response header too large\n        at org.eclipse.jetty.http.HttpGenerator.generateResponse(HttpGenerator.java:382) ~[jetty-http-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.HttpConnection$CommitCallback.process(HttpConnection.java:636) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.util.IteratingCallback.iterate(IteratingCallback.java:79) ~[jetty-util-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.HttpConnection.send(HttpConnection.java:349) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.HttpChannel.sendResponse(HttpChannel.java:626) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.HttpChannel.write(HttpChannel.java:661) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.HttpOutput.write(HttpOutput.java:210) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at java.io.OutputStream.write(OutputStream.java:75) ~[na:1.7.0_25]\n        at com.sun.jersey.spi.container.servlet.WebComponent$Writer.write(WebComponent.java:299) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.ContainerResponse$CommittingOutputStream.write(ContainerResponse.java:128) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.core.impl.provider.entity.ByteArrayProvider.writeTo(ByteArrayProvider.java:95) ~[jersey-core-1.9.jar:1.9]\n        at com.sun.jersey.core.impl.provider.entity.ByteArrayProvider.writeTo(ByteArrayProvider.java:59) ~[jersey-core-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) ~[jersey-server-1.9.jar:1.9]\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:848) ~[javax.servlet-3.0.0.v201112011016.jar:na]\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698) ~[jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1506) ~[jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) ~[neo4j-server-2.0.0.jar:2.0.0]\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1477) ~[jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503) ~[jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:211) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1096) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432) ~[jetty-servlet-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1030) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.Server.handle(Server.java:445) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:268) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:229) ~[jetty-server-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358) ~[jetty-io-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601) ~[jetty-util-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532) ~[jetty-util-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at java.lang.Thread.run(Thread.java:724) ~[na:1.7.0_25]\nCaused by: java.nio.BufferOverflowException: null\n        at java.nio.HeapByteBuffer.put(HeapByteBuffer.java:183) ~[na:1.7.0_25]\n        at java.nio.ByteBuffer.put(ByteBuffer.java:832) ~[na:1.7.0_25]\n        at org.eclipse.jetty.http.HttpField.putTo(HttpField.java:213) ~[jetty-http-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.http.HttpGenerator.generateHeaders(HttpGenerator.java:680) ~[jetty-http-9.0.5.v20130815.jar:9.0.5.v20130815]\n        at org.eclipse.jetty.http.HttpGenerator.generateResponse(HttpGenerator.java:367) ~[jetty-http-9.0.5.v20130815.jar:9.0.5.v20130815]\n        ... 39 common frames omitted\n```\n\n[Seems like this is related to #1232, but I wonder why 5kb of indexed text still trigger the problem given that the fix for #1232 commited in cd0cc83b6d0700f553dad127860c9ad543d1754a sets a 20kb limit on the buffer ]\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1799", "title": "open file descriptors leak (somehow related to lucene schema-index)", "closed": "2014-10-26 22:13:03", "commitsDetails": [], "commits": {}, "ttf": 291.0002777777778, "created": "2014-01-08 14:54:59", "user": "tbaum", "body": "During load (a mixture of Cypher + Java API calls) the number of open file handles increase drastically and finally stops the process (limit 10k)\n\nRunning the same code on a Linux-64 box works. The open file handle count is not exceeding 1k.\n- Neo4J 2.0.0, embedded\n- Mac-OS 10.9.1\n- JDK1.7 or JDK1.8\n\nThe application creates a database '/tmp/db3'\n\n```\n# lsof -p *jvm-pid* | grep /tmp/db3 | tr -s ' ' ' ' | cut -d' ' -f9 | cut -c 1-37 | sort | uniq -c | sort -r\n6519 /private/tmp/db3/schema/index/lucene/\n  43 /private/tmp/db3/schema/label/lucene/\n  12 /private/tmp/db3/neostore.propertysto\n  12 /private/tmp/db3/index/lucene/node/fu\n   7 /private/tmp/db3/neostore.relationshi\n   5 /private/tmp/db3/neostore.nodestore.d\n   4 /private/tmp/db3/neostore.labeltokens\n   2 /private/tmp/db3/neostore.schemastore\n   1 /private/tmp/db3/tm_tx_log.2\n   1 /private/tmp/db3/store_lock\n   1 /private/tmp/db3/nioneo_logical.log.2\n   1 /private/tmp/db3/neostore.id\n   1 /private/tmp/db3/neostore\n   1 /private/tmp/db3/messages.log\n   1 /private/tmp/db3/lock\n   1 /private/tmp/db3/index/lucene.log.2\n   1 /private/tmp/db3/index/lucene-store.d\n\n```\n\nmessages.log: https://gist.github.com/tbaum/e746a3cf83ba4ddbc806\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1789", "title": "Return map from Cypher works only from neo4j-sh", "closed": "2014-03-06 04:39:18", "commitsDetails": [], "commits": {}, "ttf": 58.000277777777775, "created": "2014-01-06 13:50:28", "user": "oskarhane", "body": "When trying to return maps like `RETURN {node:n, user:o}` I get `IllegalArgumentException Unsupported value type: class org.neo4j.kernel.impl.core.NodeProxy` from the _Data Browser_ in webadmin. ![Screenshot >>](http://f.cl.ly/items/1m1n0M0W251h1D420Y0z/orreMBA%202014-01-06%20kl.%2014.46.40.PNG)\n\nAnd I get `Unknown Error` from _localhost:7474/browser_. ![Screenshot >>](http://f.cl.ly/items/223t0o0g2j3i0Z2K2w3V/orreMBA%202014-01-06%20kl.%2014.43.49.PNG)\n\nWhen executing the same query through _neo4j-sh/console_ I get the expected result. ![Screenshot >>](http://f.cl.ly/items/3j3s2G180r2q2A2E240P/orreMBA%202014-01-06%20kl.%2014.44.59.PNG)\n\nKernel version is `Neo4j - Graph Database Kernel (neo4j-kernel), version: 2.0.0`.\n\nPlease let me know if you need some more info.\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["466fda4925951f82f220d4647bed31c4f67822b7"], "url": "https://github.com/neo4j/neo4j/issues/1785", "gitStatsSummary": {"insertions": 35, "gitFilesChange": 1, "lines": 41, "deletions": 6}, "numCommits": 1, "commits": {"466fda4925951f82f220d4647bed31c4f67822b7": {"commitUser": "systay", "commitGHEventType": "closed"}, "a76bdf9a101a5eed36ae323dae74af920d3a7cd8": {"commitUser": "chrisvest", "commitGHEventType": "referenced"}}, "ttf": 19.00027777777778, "user": "dbercht", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal"], "body": "Running neo4j community edition with AnormCyper (Play2! module for Neo4jRest interaction).\n\nThe query I run looks like this:\n\n```\n     Cypher (\"\"\"\n         START log=node( { logId } )\n         MATCH (user:User { userId : { userId }, providerId : { providerId }  } )\n         OPTIONAL MATCH log<-[:INTERACTED]-(x:User)\n         CREATE UNIQUE user-[rel:INTERACTED]->log\n         RETURN id(log) as id, log.log as log, user.username as author, collect(x.username) as interacts\n      \"\"\").on(\n           \"userId\" -> identity.userId,\n           \"providerId\" -> identity.providerId,\n           \"logId\" -> log.id\n  )\n```\n\nWhen I run the query in the web-console (not-parameterized), it runs successfully, however, when I run it in the REST client, I get the following error:\n\n```\n[RuntimeException: {\"message\":\"Developer: Andres claims that: Need something with properties\",\"exception\":\"ThisShouldNotHappenError\",\"fullname\":\"org.neo4j.helpers.ThisShouldNotHappenError\",\"stacktrace\":[\"org.neo4j.cypher.internal.compiler.v2_0.commands.expressions.Property.apply(Property.scala:42)\",\"org.neo4j.cypher.internal.compiler.v2_0.pipes.ExtractPipe$$anonfun$internalCreateResults$1$$anonfun$apply$2.apply(ExtractPipe.scala:51)\",\"org.neo4j.cypher.internal.compiler.v2_0.pipes.ExtractPipe$$anonfun$internalCreateResults$1$$anonfun$apply$2.apply(ExtractPipe.scala:49)\",\"scala.collection.immutable.Map$Map4.foreach(Map.scala:181)\",\"org.neo4j.cypher.internal.compiler.v2_0.pipes.ExtractPipe$$anonfun$internalCreateResults$1.apply(ExtractPipe.scala:49)\",\"org.neo4j.cypher.internal.compiler.v2_0.pipes.ExtractPipe$$anonfun$internalCreateResults$1.apply(ExtractPipe.scala:48)\",\"scala.collection.Iterator$$anon$11.next(Iterator.scala:328)\",\"scala.collection.Iterator$class.foreach(Iterator.scala:727)\",\"scala.collection.AbstractIterator.foreach(Iterator.scala:1157)\",\"org.neo4j.cypher.internal.compiler.v2_0.pipes.EagerAggregationPipe.internalCreateResults(EagerAggregationPipe.scala:76)\",\"org.neo4j.cypher.internal.compiler.v2_0.pipes.PipeWithSource.createResults(Pipe.scala:71)\",\"org.neo4j.cypher.internal.compiler.v2_0.pipes.PipeWithSource.createResults(Pipe.scala:68)\",\"org.neo4j.cypher.internal.compiler.v2_0.executionplan.ExecutionPlanBuilder.org$neo4j$cypher$internal$compiler$v2_0$executionplan$ExecutionPlanBuilder$$prepareStateAndResult(ExecutionPlanBuilder.scala:149)\",\"org.neo4j.cypher.internal.compiler.v2_0.executionplan.ExecutionPlanBuilder$$anonfun$3.apply(ExecutionPlanBuilder.scala:136)\",\"org.neo4j.cypher.internal.compiler.v2_0.executionplan.ExecutionPlanBuilder$$anonfun$3.apply(ExecutionPlanBuilder.scala:135)\",\"org.neo4j.cypher.internal.compiler.v2_0.executionplan.ExecutionPlanBuilder$$anon$6.execute(ExecutionPlanBuilder.scala:50)\",\"org.neo4j.cypher.internal.ExecutionPlanWrapperForV2_0.execute(CypherCompiler.scala:93)\",\"org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:61)\",\"org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:65)\",\"org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:78)\",\"org.neo4j.server.rest.web.CypherService.cypher(CypherService.java:100)\",\"java.lang.reflect.Method.invoke(Method.java:606)\",\"org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:132)\",\"org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\",\"java.lang.Thread.run(Thread.java:744)\"]}]\n```\n\nAny idea why this could be happening, I can't seem to find a reference to this Exception anywhere else.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "ThisShouldNotHappenError", "statsSkippedReason": "", "closed": "2014-01-24 12:28:40", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2014-01-24 11:48:20", "commitHash": "466fda4925951f82f220d4647bed31c4f67822b7", "commitParents": ["b912f70a6eb0ce5f5455b65fe6fb150d8be34835"], "commitGHEventType": "closed", "nameRev": "466fda4925951f82f220d4647bed31c4f67822b7 tags/2.0.1~30^2", "commitGitStats": [{"insertions": 35, "lines": 41, "filePath": "community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/pipes/ExtractPipe.scala", "deletions": 6}, {"insertions": 7, "lines": 7, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #1785\n\nMakes sure that expressions depending on identifiers that might\nget overwritten only see the incoming execution context\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-01-10 13:40:47"}, {"commitUser": "chrisvest", "commitDateTime": "2014-01-24 04:28:39", "commitHash": "a76bdf9a101a5eed36ae323dae74af920d3a7cd8", "commitParents": ["b912f70a6eb0ce5f5455b65fe6fb150d8be34835", "466fda4925951f82f220d4647bed31c4f67822b7"], "commitGHEventType": "referenced", "nameRev": "a76bdf9a101a5eed36ae323dae74af920d3a7cd8 tags/2.0.1~30", "commitGitStats": [{"insertions": 35, "lines": 41, "filePath": "community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/pipes/ExtractPipe.scala", "deletions": 6}, {"insertions": 7, "lines": 7, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #1814 from systay/1785\n\nFixes #1785", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-01-24 04:28:39"}], "created": "2014-01-05 00:54:43"}, {"labels": ["bug"], "filteredCommits": ["11362ed667339e51d67923b0c307cfc77051b8d7"], "url": "https://github.com/neo4j/neo4j/issues/1781", "gitStatsSummary": {"insertions": 4, "gitFilesChange": 1, "lines": 4, "deletions": 0}, "numCommits": 1, "commits": {"11362ed667339e51d67923b0c307cfc77051b8d7": {"commitUser": "chrisvest", "commitGHEventType": "closed"}, "6deaa8d1740e012916c9f4d8cafe8dbaf6d68e38": {"commitUser": "chrisvest", "commitGHEventType": "referenced"}}, "ttf": 3.000277777777778, "user": "protheusfr", "changesInPackagesSPOON": ["org.neo4j.cypher.export.SubGraphExporter.toString(java.lang.Object)"], "changesInPackagesGIT": ["community/cypher/cypher/src/main/java/org/neo4j/cypher/export"], "body": "__Copied from : http://stackoverflow.com/questions/20905726/neo4j-2-0-dump-with-double-type __\n\nOn Neo4j 2.0 (community) when I dump a db with some nodes with Double type properties, I obtain a file with value in scientific notation : ex 1.43524185E8\n\nOn import of this file, the neo4j-shell fail with the following error :\n\nInvalid input 'E': expected Digit, whitespace, '.', node labels, '[', \"=~\", IN, IS, '*', '/', '%', '^', '+', '-', '<', '>', \"<=\", \">=\", '=', \"<>\", \"!=\", AND, XOR, OR, ',' or '}' (line 167, column 153)\n\"create (_30015:`organization`:`fr` {`capital`:1.43524185E8, })\"\n                                                         ^\n    at org.neo4j.cypher.internal.compiler.v2_0.parser.CypherParser$$anonfun$parse$1.apply(CypherParser.scala:53)\n    at org.neo4j.cypher.internal.compiler.v2_0.parser.CypherParser$$anonfun$parse$1.apply(CypherParser.scala:43)\nIt seem Double type are not correctly parsed.\n\nCommand used for dumping the db :\n\n$ neo4j-shell -c \"dump\" > ito3.graph\nCommand used to import them (in an empty graph.db) :\n\n$ neo4j-shell -file ito3.graph\nDetail of affected properties :\n\nneo4j-sh (**value_deleted**,30015)$ ls -v\n...\n*capital                  =[1.43524185E8](double)  \n...\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "spoonFilesChanged": 1, "MOV": 0}, "title": "Issue in dump / import function", "statsSkippedReason": "", "closed": "2014-01-07 10:35:51", "commitsDetails": [{"commitUser": "chrisvest", "commitDateTime": "2014-01-05 23:36:23", "commitHash": "11362ed667339e51d67923b0c307cfc77051b8d7", "commitParents": ["93b8e01aa126e5059b42d475224f6128595d8302"], "commitGHEventType": "closed", "nameRev": "11362ed667339e51d67923b0c307cfc77051b8d7 tags/2.0.1~91^2", "commitGitStats": [{"insertions": 18, "lines": 18, "filePath": "community/cypher/cypher/src/test/java/org/neo4j/cypher/export/ExportTest.java", "deletions": 0}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/cypher/src/main/java/org/neo4j/cypher/export/SubGraphExporter.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.export.SubGraphExporter.toString(java.lang.Object)"}], "spoonFilePath": "SubGraphExporter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.export.ExportTest.testNodeWithDoubleProperty()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.export.ExportTest.testNodeWithFloatProperty()"}], "spoonFilePath": "ExportTest.java"}], "commitMessage": "Export float/double values in decimal notation. Fixes #1781.\n\nThis aligns the representation of double values with the format used\nin the browser, as well as producing a notation that can be feed back\nto Cypher.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-01-04 11:36:27"}, {"commitUser": "chrisvest", "commitDateTime": "2014-01-07 02:35:51", "commitHash": "6deaa8d1740e012916c9f4d8cafe8dbaf6d68e38", "commitParents": ["560abc86a5349b29c9028192f876494b9a6da889", "11362ed667339e51d67923b0c307cfc77051b8d7"], "commitGHEventType": "referenced", "nameRev": "6deaa8d1740e012916c9f4d8cafe8dbaf6d68e38 tags/2.0.1~91", "commitGitStats": [{"insertions": 18, "lines": 18, "filePath": "community/cypher/cypher/src/test/java/org/neo4j/cypher/export/ExportTest.java", "deletions": 0}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/cypher/src/main/java/org/neo4j/cypher/export/SubGraphExporter.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.export.SubGraphExporter.toString(java.lang.Object)"}], "spoonFilePath": "SubGraphExporter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.export.ExportTest.testNodeWithDoubleProperty()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.export.ExportTest.testNodeWithFloatProperty()"}], "spoonFilePath": "ExportTest.java"}], "commitMessage": "Merge pull request #1792 from jotomo/1781-exporter-double-to-string\n\nExport float/double values in decimal notation. Fixes #1781.", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-01-07 02:35:51"}], "created": "2014-01-03 15:02:43"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1778", "title": "REST action that violates a 2.0 constraint causes server hang", "closed": "2014-01-23 09:49:27", "commitsDetails": [], "commits": {}, "ttf": 21.00027777777778, "created": "2014-01-02 00:33:03", "user": "majensen", "body": "All-\nI'm adding the constraint functionality described at http://docs.neo4j.org/chunked/stable/rest-api-schema-constraints.html to REST::Neo4p (https://metacpan.org/pod/REST::Neo4p).\n\n(CAUTION - the following may corrupt the db)\n\nHere's one version of the issue : each action is done via the REST API (not query endpts):\n\n```\nI create a unique constraint for label \"Lbl\" on property \"name\"\nI create a node:Lbl with name = 'Fred' (node 1)\nI create a node:Lbl with name = 'Wilma' (node 2)\nI attempt to set name = 'Fred' on node 2 ( via PUT to REST endpt )\n```\n\nI expect to get a nice error message. Instead, the first PUT immediately returns a 500 error. A second PUT hangs. In this state, if I go to the shell and do \"cd 2; set name Fred\", shell hangs as well. Minutes go by without recovery. I stop the server, wipe the db, and restart.\n\nNOW- if for Step 4, I execute a query to \"SET n.name = 'Fred'\", in REST via the Cypher endpoint, all is well. I get the nice error and the db is happy.\n\nI'm using the stable community-2.0 distro, with Oracle JDK/JRE 1.7.0_45-b18 on Ubuntu 12.04.\n\nThanks - MAJ\n"}, {"labels": ["browser", "bug"], "filteredCommits": ["1022f99c85573d1404a1d30a0260a7446e30fe23"], "url": "https://github.com/neo4j/neo4j/issues/1777", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"1022f99c85573d1404a1d30a0260a7446e30fe23": {"commitUser": "apcj", "commitGHEventType": "closed"}}, "ttf": 20.00027777777778, "user": "jexp", "changesInPackagesGIT": ["community/browser/app/scripts/init/commandInterpreters.coffee"], "body": "Works in the webadmin shell, probably something with the json sending from browser\n\n```\n{message:Unexpectedcharacter('p'(code112)):expectedavalidvalue(number,String,array,object,'true','false'or'null')\nat[Source:java.io.StringReader@3639347e;line:1, column:2]\nexception:BadInputException\nfullname:org.neo4j.server.rest.repr.BadInputException\nstacktrace:[org.neo4j.server.rest.repr.formats.JsonFormat.readValue(JsonFormat.java:124)\norg.neo4j.server.rest.web.RestfulGraphDatabase.addNodeLabel(RestfulGraphDatabase.java:435)\njava.lang.reflect.Method.invoke(Method.java:606)\norg.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:132)\norg.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\njava.lang.Thread.run(Thread.java:744)]\ncause:{message:Unexpectedcharacter('p'(code112)):expectedavalidvalue(number,String,array,object,'true','false'or'null')\nat[Source:java.io.StringReader@3639347e;line:1\ncolumn:2]\nexception:JsonParseException\nfullname:org.neo4j.server.rest.domain.JsonParseException\nstacktrace:[org.neo4j.server.rest.domain.JsonHelper.readJson(JsonHelper.java:70)\norg.neo4j.server.rest.domain.JsonHelper.jsonToSingleValue(JsonHelper.java:76)\norg.neo4j.server.rest.repr.formats.JsonFormat.readValue(JsonFormat.java:120)\norg.neo4j.server.rest.web.RestfulGraphDatabase.addNodeLabel(RestfulGraphDatabase.java:435)\njava.lang.reflect.Method.invoke(Method.java:606)\norg.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:132)\norg.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\njava.lang.Thread.run(Thread.java:744)]\ncause:{Unexpectedcharacter('p'(code112)):expectedavalidvalue(number,String,array,object,'true','false'or'null')\nat[Source:java.io.StringReader@3639347e;line:1\ncolumn:2]\nexception:JsonParseException\nfullname:org.codehaus.jackson.JsonParseException\nstacktrace:[org.codehaus.jackson.JsonParser._constructError(JsonParser.java:1433)\norg.codehaus.jackson.impl.JsonParserMinimalBase._reportError(JsonParserMinimalBase.java:521)\norg.codehaus.jackson.impl.JsonParserMinimalBase._reportUnexpectedChar(JsonParserMinimalBase.java:442)\norg.codehaus.jackson.impl.ReaderBasedParser._handleUnexpectedValue(ReaderBasedParser.java:1198)\norg.codehaus.jackson.impl.ReaderBasedParser.nextToken(ReaderBasedParser.java:485)\norg.codehaus.jackson.map.ObjectMapper._initForReading(ObjectMapper.java:2770)\norg.codehaus.jackson.map.ObjectMapper._readMapAndClose(ObjectMapper.java:2718)\norg.codehaus.jackson.map.ObjectMapper.readValue(ObjectMapper.java:1863)\norg.neo4j.server.rest.domain.JsonHelper.readJson(JsonHelper.java:66)\norg.neo4j.server.rest.domain.JsonHelper.jsonToSingleValue(JsonHelper.java:76)\norg.neo4j.server.rest.repr.formats.JsonFormat.readValue(JsonFormat.java:120)\norg.neo4j.server.rest.web.RestfulGraphDatabase.addNodeLabel(RestfulGraphDatabase.java:435)\njava.lang.reflect.Method.invoke(Method.java:606)\norg.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:132)\norg.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\njava.lang.Thread.run(Thread.java:744)]}}}\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": ":POST http://localhost:7474/db/data/node/122436/labels \"person\" fails with HTTP 400", "statsSkippedReason": "", "closed": "2014-01-22 13:08:42", "commitsDetails": [{"commitUser": "apcj", "commitDateTime": "2014-01-22 13:08:21", "commitHash": "1022f99c85573d1404a1d30a0260a7446e30fe23", "commitParents": ["21239a98e1e95c914b87c9ac2245bc2fa3b621f6"], "commitGHEventType": "closed", "nameRev": "1022f99c85573d1404a1d30a0260a7446e30fe23 tags/2.0.1~46", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/browser/app/scripts/init/commandInterpreters.coffee", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Send raw JSON to server.\n\nParsing and re-serialising JSON doesn't work properly for some content,\nspecifically it doesn't work for passing single quoted strings that\nlose their quotes when sent to the server.\n\nFixes #1777.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-01-22 13:08:21"}], "created": "2014-01-01 23:19:46"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/1771", "title": "problem using @query in spring neo4j", "closed": "2018-11-09 11:29:59", "commitsDetails": [], "commits": {}, "ttf": 1774.0002777777777, "created": "2013-12-31 05:57:36", "user": "Amitosh1", "body": "Hi all,\ni am experimenting with neo4j spring to create a message dash board.\nthis is more like a email box view.\nto get a person inbox view i was trying to execute below query\n\n@Query(value = \"start n=node({0}) match (n)-[r]->(inbox)  where r.relation in {1} return inbox  \")\n    Set<Email> getFolderMails(Person person,Set<String> strings);\nwhere the Set of strings contains->(\"To\",\"cc\",\"bcc\").\nbut this query always fail with below exception\n\n[DEBUG] [http-bio-8080-exec-10 11:21:31](TraceInterceptor.java:writeToLog:19) Exception thrown in method 'getPersonInBox' of class [org.test.spring.neo.controller.PersonController]\norg.springframework.dao.InvalidDataAccessResourceUsageException: Error executing statement start n=node({0}) match (n)-[r]->(inbox)  where r.relation in {1} return inbox  ; nested exception is org.springframework.dao.InvalidDataAccessResourceUsageException: Error executing statement start n=node({0}) match (n)-[r]->(inbox)  where r.relation in {1} return inbox  ; nested exception is expected return clause\n\"start n=node({0}) match (n)-[r]->(inbox)  where r.relation in {1} return inbox  \"\n                                                            ^\n    at org.springframework.data.neo4j.support.query.CypherQueryEngine.query(CypherQueryEngine.java:56)\n    at org.springframework.data.neo4j.repository.query.GraphRepositoryQuery.dispatchQuery(GraphRepositoryQuery.java:91)\n    at org.springframework.data.neo4j.repository.query.GraphRepositoryQuery.execute(GraphRepositoryQuery.java:70)\n    at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:302)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n    at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:110)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n    at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:155)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n    at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)\n    at com.sun.proxy.$Proxy21.getFolderMails(Unknown Source)\n    at org.test.spring.neo.controller.PersonController.getPersonInBox(PersonController.java:80)\n    at org.test.spring.neo.controller.PersonController$$FastClassByCGLIB$$8631769e.invoke(<generated>)\n    at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)\n    at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:698)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:150)\n    at org.springframework.aop.interceptor.CustomizableTraceInterceptor.invokeUnderTrace(CustomizableTraceInterceptor.java:257)\n    at org.springframework.aop.interceptor.AbstractTraceInterceptor.invoke(AbstractTraceInterceptor.java:111)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n    at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:91)\n    at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:172)\n    at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:631)\n    at org.test.spring.neo.controller.PersonController$$EnhancerByCGLIB$$c4ac7aea.getPersonInBox(<generated>)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:219)\n    at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:132)\n    at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:104)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod(RequestMappingHandlerAdapter.java:745)\n    at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:686)\n    at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:80)\n    at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:925)\n    at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:856)\n    at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:920)\n    at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:816)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:621)\n    at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:801)\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:728)\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:305)\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:210)\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:222)\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:123)\n    at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:472)\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:171)\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:99)\n    at org.apache.catalina.valves.AccessLogValve.invoke(AccessLogValve.java:936)\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:118)\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:407)\n    at org.apache.coyote.http11.AbstractHttp11Processor.process(AbstractHttp11Processor.java:1004)\n    at org.apache.coyote.AbstractProtocol$AbstractConnectionHandler.process(AbstractProtocol.java:589)\n    at org.apache.tomcat.util.net.JIoEndpoint$SocketProcessor.run(JIoEndpoint.java:312)\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)\n    at java.lang.Thread.run(Thread.java:722)\nCaused by: org.springframework.dao.InvalidDataAccessResourceUsageException: Error executing statement start n=node({0}) match (n)-[r]->(inbox)  where r.relation in {1} return inbox  ; nested exception is expected return clause\n\"start n=node({0}) match (n)-[r]->(inbox)  where r.relation in {1} return inbox  \"\n                                                            ^\n    at org.springframework.data.neo4j.support.query.CypherQueryEngine.parseAndExecuteQuery(CypherQueryEngine.java:67)\n    at org.springframework.data.neo4j.support.query.CypherQueryEngine.query(CypherQueryEngine.java:53)\n    ... 55 more\nCaused by: expected return clause\n\"start n=node({0}) match (n)-[r]->(inbox)  where r.relation in {1} return inbox  \"\n                                                            ^\n    at org.neo4j.cypher.internal.parser.v1_6.CypherParserImpl.parse(CypherParserImpl.scala:65)\n    at org.neo4j.cypher.CypherParser.parse(CypherParser.scala:42)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$prepare$1.apply(ExecutionEngine.scala:60)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$prepare$1.apply(ExecutionEngine.scala:60)\n    at org.neo4j.cypher.internal.LRUCache.getOrElseUpdate(LRUCache.scala:31)\n    at org.neo4j.cypher.ExecutionEngine.prepare(ExecutionEngine.scala:60)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:54)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:57)\n    at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:86)\n    at org.springframework.data.neo4j.support.query.CypherQueryEngine.parseAndExecuteQuery(CypherQueryEngine.java:65)\n    ... 56 more\n\nplease help me to resolve this issue.\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["7d232076aba3804eb65c4957dfb4c5ed9ae2e944"], "url": "https://github.com/neo4j/neo4j/issues/1735", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"cc44ebb46028ae0a8353006435c450217140e1e4": {"commitUser": "chrisvest", "commitGHEventType": "referenced"}, "7d232076aba3804eb65c4957dfb4c5ed9ae2e944": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 20.00027777777778, "user": "freeeve", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal"], "body": "I typed this accidentally, meaning to type `OR`, but was surprised to get results back:\n\nMinimal script to recreate...\n\n```\nneo4j-sh (?)$ CREATE (_0:Matrix { name:\"The Architect\" }),(_1:Matrix { name:\"Agent Smith\" }),(_2:Matrix:Crew { name:\"Cypher\" }),(_3:Crew { name:\"Trinity\" }),(_4:Crew { name:\"Morpheus\" }),(_5:Crew { name:\"Neo\" }), _1-[:CODED_BY]->_0, _2-[:KNOWS]->_1, _4-[:KNOWS]->_3, _4-[:KNOWS]->_2, _5-[:KNOWS]->_4, _5-[:LOVES]->_3;\n+-------------------+\n| No data returned. |\n+-------------------+\nNodes created: 6\nRelationships created: 6\nProperties set: 6\nLabels added: 7\n256 ms\nneo4j-sh (?)$ MATCH (n:Crew)\n> WHERE n.name = \"Neo\" AND n.name= \"Morpheus\"\n> RETURN n;\n+---+\n| n |\n+---+\n+---+\n0 row\n261 ms\n\nneo4j-sh (?)$ CREATE INDEX ON :Crew(name);\n+-------------------+\n| No data returned. |\n+-------------------+\nIndexes added: 1\n17 ms\n\nneo4j-sh (?)$ MATCH (n:Crew)\n> WHERE n.name = \"Neo\" AND n.name= \"Morpheus\"\n> RETURN n;\n+--------------------------------+\n| n                              |\n+--------------------------------+\n| Node[1852510]{name:\"Morpheus\"} |\n+--------------------------------+\n1 row\n31 ms\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "Cypher 2.0.0 Unexpected results: indexes and AND on the same property", "statsSkippedReason": "", "closed": "2014-01-07 13:29:46", "commitsDetails": [{"commitUser": "chrisvest", "commitDateTime": "2014-01-07 05:29:46", "commitHash": "cc44ebb46028ae0a8353006435c450217140e1e4", "commitParents": ["3c4ba3ccf92e8091d7354f7853971537ae7d8115", "7d232076aba3804eb65c4957dfb4c5ed9ae2e944"], "commitGHEventType": "referenced", "nameRev": "cc44ebb46028ae0a8353006435c450217140e1e4 tags/2.0.1~88", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/executionplan/builders/NodeFetchStrategy.scala", "deletions": 1}, {"insertions": 37, "lines": 37, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/IndexUsageAcceptanceTest.scala", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #1793 from systay/1735\n\nFixes #1735", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-01-07 05:29:46"}, {"commitUser": "systay", "commitDateTime": "2014-01-07 11:50:27", "commitHash": "7d232076aba3804eb65c4957dfb4c5ed9ae2e944", "commitParents": ["ea90869e5903701bf0af3f5da500a7d7eff1b757"], "commitGHEventType": "closed", "nameRev": "7d232076aba3804eb65c4957dfb4c5ed9ae2e944 tags/2.0.1~88^2", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/executionplan/builders/NodeFetchStrategy.scala", "deletions": 1}, {"insertions": 37, "lines": 37, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/IndexUsageAcceptanceTest.scala", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #1735\n\nThe fetch strategy does not mark predicates as solved until at the last point. This\nway, we know we are not marking predicates as solved prematurely.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2014-01-07 11:50:27"}], "created": "2013-12-17 20:26:47"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1734", "title": "Cypher SyntaxException thrown on aggregate function / n1 / n2 where n2 is the same as n1", "closed": "2014-06-10 08:44:08", "commitsDetails": [], "commits": {}, "ttf": 174.00027777777777, "created": "2013-12-17 18:47:16", "user": "symonsjo", "body": "Release 2.0.0 stable.\n\nUsing the same number twice to divide the results of an aggregate function causes a syntax exception:\n\nneo4j-sh (?)$ START n=node(0) RETURN count(n) AS count;\n+-------+\n| count |\n+-------+\n| 1     |\n+-------+\n1 row\n10 ms\nneo4j-sh (?)$ START n=node(0) RETURN count(n) / 60;  \n+---------------+\n| count(n) / 60 |\n+---------------+\n| 0             |\n+---------------+\n1 row\n16 ms\nneo4j-sh (?)$ START n=node(0) RETURN count(n) / 60 / 60;\nSyntaxException: Unknown identifier `n`.\nUnknown identifier `UNNAMED????????`.\nneo4j-sh (?)$ START n=node(0) RETURN count(n) / 60 / 25;\n+--------------------+\n| count(n) / 60 / 25 |\n+--------------------+\n| 0                  |\n+--------------------+\n1 row\n14 ms\nneo4j-sh (?)$ START n=node(0) RETURN 1 / 60 / 60;\n+-------------+\n| 1 / 60 / 60 |\n+-------------+\n| 0           |\n+-------------+\n1 row\n7 ms\nneo4j-sh (?)$ START n=node(0) RETURN count(n) / 1;  \n+--------------+\n| count(n) / 1 |\n+--------------+\n| 1            |\n+--------------+\n1 row\n13 ms\n\nWes provided workaround as:\n\nSTART n=node(0)\nWITH count(n) as count\nRETURN count/60/60\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1714", "title": "2.0 - underlying getAllNodes / Cypher \"match n\" very slow after many deletes", "closed": "2016-04-28 21:35:05", "commitsDetails": [], "commits": {}, "ttf": 864.0002777777778, "created": "2013-12-16 10:17:14", "user": "freeeve", "body": "After some benchmarking, where I create a lot (millions) of nodes and then delete them, I shut down the server, started it back up, and...\n\n```\nneo4j-sh (?)$ match n return n limit 1;\n+---+\n| n |\n+---+\n+---+\n0 row\n11901 ms\nneo4j-sh (?)$ create n return n;\n+-----------+\n| n         |\n+-----------+\n| Node[0]{} |\n+-----------+\n1 row\nNodes created: 1\n236 ms\nneo4j-sh (?)$ match n return n limit 1;\n+-----------+\n| n         |\n+-----------+\n| Node[0]{} |\n+-----------+\n1 row\n9 ms\n```\n\nIf you want a longer script, see https://gist.github.com/wfreeman/94ff8ea17637b2b3f6a9\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1687", "title": "Broken in RC1: Add an existing node to unique index (not indexed)", "closed": "2013-12-19 10:58:23", "commitsDetails": [], "commits": {}, "ttf": 8.000277777777777, "created": "2013-12-11 01:43:44", "user": "jexp", "body": "Reported by @Alan-R\n\nnodes passed in to the function are not added to the index as before (M06 and earlier Neo4j versions) but new, anemic nodes are created\n\nProblematic result also visible in the manual:\n\nhttp://docs.neo4j.org/chunked/2.0.0-RC1/rest-api-unique-indexes.html#rest-api-add-an-existing-node-to-unique-index-not-indexed\n\nJSON posted to the server `/db/data/batch`\n\n```\n[{ \"body\" :\n      { \"designation\": \"sevenofnine\",\n        \"domain\": \"global\",\n        \"nodetype\": \"TestDrone\",\n        \"roles\": [ \"Borg\", \"host\", \"Drone\"],\n        \"time_create_iso8601\": \"2013-12-10 23:39:18\",\n        \"time_create_ms\": 1386718758099\n  },\n  \"id\" : 0,\n  \"method\" : \"POST\",\n  \"to\" : \"node\"\n}\n,\n{ \"body\": {\n         \"to\": \"node/942\",\n         \"type\": \"IS_A\"\n  },\n  \"id\": 1,\n  \"method\": \"POST\",\n  \"to\": \"{0}/relationships\"\n}\n,\n{ \"body\": {\n      \"key\": \"sevenofnine\",\n      \"uri\": \"{0}\",\n      \"value\": \"global\"\n  },\n  \"id\": 2,\n  \"method\": \"POST\",\n  \"to\": \"index/node/TestDrone?uniqueness=create_or_fail\"\n}]\n```\n\nresults:\n\n```\n[{\"id\":0,\"location\":\"http://localhost:7474/db/data/node/1048576\",\"body\":{\n  \"extensions\" : {\n  },\n  \"paged_traverse\" : \"http://localhost:7474/db/data/node/1048576/paged/traverse/{returnType}{?pageSize,leaseTime}\",\n  \"labels\" : \"http://localhost:7474/db/data/node/1048576/labels\",\n  \"outgoing_relationships\" : \"http://localhost:7474/db/data/node/1048576/relationships/out\",\n  \"traverse\" : \"http://localhost:7474/db/data/node/1048576/traverse/{returnType}\",\n  \"all_typed_relationships\" : \"http://localhost:7474/db/data/node/1048576/relationships/all/{-list|&|types}\",\n  \"property\" : \"http://localhost:7474/db/data/node/1048576/properties/{key}\",\n  \"all_relationships\" : \"http://localhost:7474/db/data/node/1048576/relationships/all\",\n  \"self\" : \"http://localhost:7474/db/data/node/1048576\",\n  \"properties\" : \"http://localhost:7474/db/data/node/1048576/properties\",\n  \"outgoing_typed_relationships\" : \"http://localhost:7474/db/data/node/1048576/relationships/out/{-list|&|types}\",\n  \"incoming_relationships\" : \"http://localhost:7474/db/data/node/1048576/relationships/in\",\n  \"incoming_typed_relationships\" : \"http://localhost:7474/db/data/node/1048576/relationships/in/{-list|&|types}\",\n  \"create_relationship\" : \"http://localhost:7474/db/data/node/1048576/relationships\",\n  \"data\" : {\n    \"time_create_iso8601\" : \"2013-12-10 23:39:18\",\n    \"nodetype\" : \"TestDrone\",\n    \"roles\" : [ \"Borg\", \"host\", \"Drone\" ],\n    \"designation\" : \"sevenofnine\",\n    \"domain\" : \"global\",\n    \"time_create_ms\" : 1386718758099\n  }\n},\"from\":\"node\"},{\"id\":1,\"location\":\"http://localhost:7474/db/data/relationship/1048575\",\"body\":{\n  \"extensions\" : {\n  },\n  \"start\" : \"http://localhost:7474/db/data/node/1048576\",\n  \"property\" : \"http://localhost:7474/db/data/relationship/1048575/properties/{key}\",\n  \"self\" : \"http://localhost:7474/db/data/relationship/1048575\",\n  \"properties\" : \"http://localhost:7474/db/data/relationship/1048575/properties\",\n  \"type\" : \"IS_A\",\n  \"end\" : \"http://localhost:7474/db/data/node/942\",\n  \"data\" : {\n  }\n},\"from\":\"http://localhost:7474/db/data/node/1048576/relationships\"},{\"id\":2,\"location\":\"http://localhost:7474/db/data/index/node/TestDrone/sevenofnine/global/1048577\",\"body\":{\n  \"extensions\" : {\n  },\n  \"paged_traverse\" : \"http://localhost:7474/db/data/node/1048577/paged/traverse/{returnType}{?pageSize,leaseTime}\",\n  \"labels\" : \"http://localhost:7474/db/data/node/1048577/labels\",\n  \"outgoing_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/out\",\n  \"traverse\" : \"http://localhost:7474/db/data/node/1048577/traverse/{returnType}\",\n  \"all_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/all/{-list|&|types}\",\n  \"property\" : \"http://localhost:7474/db/data/node/1048577/properties/{key}\",\n  \"all_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/all\",\n  \"self\" : \"http://localhost:7474/db/data/node/1048577\",\n  \"properties\" : \"http://localhost:7474/db/data/node/1048577/properties\",\n  \"outgoing_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/out/{-list|&|types}\",\n  \"incoming_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/in\",\n  \"incoming_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/in/{-list|&|types}\",\n  \"create_relationship\" : \"http://localhost:7474/db/data/node/1048577/relationships\",\n  \"data\" : {\n    \"sevenofnine\" : \"global\"\n  },\n  \"indexed\" : \"http://localhost:7474/db/data/index/node/TestDrone/sevenofnine/global/1048577\"\n},\"from\":\"index/node/TestDrone?uniqueness=create_or_fail\"}]wuqour:trash mh$ curl http://localhost:7474/db/data/index/node/TestDrone/sevenofnine/global/1048577\n{\n  \"extensions\" : {\n  },\n  \"paged_traverse\" : \"http://localhost:7474/db/data/node/1048577/paged/traverse/{returnType}{?pageSize,leaseTime}\",\n  \"labels\" : \"http://localhost:7474/db/data/node/1048577/labels\",\n  \"outgoing_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/out\",\n  \"traverse\" : \"http://localhost:7474/db/data/node/1048577/traverse/{returnType}\",\n  \"all_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/all/{-list|&|types}\",\n  \"property\" : \"http://localhost:7474/db/data/node/1048577/properties/{key}\",\n  \"all_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/all\",\n  \"self\" : \"http://localhost:7474/db/data/node/1048577\",\n  \"properties\" : \"http://localhost:7474/db/data/node/1048577/properties\",\n  \"outgoing_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/out/{-list|&|types}\",\n  \"incoming_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/in\",\n  \"incoming_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/in/{-list|&|types}\",\n  \"create_relationship\" : \"http://localhost:7474/db/data/node/1048577/relationships\",\n  \"data\" : {\n    \"sevenofnine\" : \"global\"\n  },\n  \"indexed\" : \"http://localhost:7474/db/data/index/node/TestDrone/sevenofnine/global/1048577\"\n}wuqour:trash mh$ curl http://localhost:7474/db/data/index/node/TestDrone/sevenofnine/global\n[ {\n  \"indexed\" : \"http://localhost:7474/db/data/index/node/TestDrone/sevenofnine/global/1048577\",\n  \"labels\" : \"http://localhost:7474/db/data/node/1048577/labels\",\n  \"outgoing_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/out\",\n  \"data\" : {\n    \"sevenofnine\" : \"global\"\n  },\n  \"traverse\" : \"http://localhost:7474/db/data/node/1048577/traverse/{returnType}\",\n  \"all_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/all/{-list|&|types}\",\n  \"property\" : \"http://localhost:7474/db/data/node/1048577/properties/{key}\",\n  \"self\" : \"http://localhost:7474/db/data/node/1048577\",\n  \"properties\" : \"http://localhost:7474/db/data/node/1048577/properties\",\n  \"outgoing_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/out/{-list|&|types}\",\n  \"incoming_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/in\",\n  \"extensions\" : {\n  },\n  \"create_relationship\" : \"http://localhost:7474/db/data/node/1048577/relationships\",\n  \"paged_traverse\" : \"http://localhost:7474/db/data/node/1048577/paged/traverse/{returnType}{?pageSize,leaseTime}\",\n  \"all_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/all\",\n  \"incoming_typed_relationships\" : \"http://localhost:7474/db/data/node/1048577/relationships/in/{-list|&|types}\"\n} ]\n\n```\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1673", "title": "Syntax highlighting issue in browser", "closed": "2016-04-22 13:47:42", "commitsDetails": [], "commits": {}, "ttf": 865.0002777777778, "created": "2013-12-09 10:47:43", "user": "jakewins", "body": "From @akollegger \n\nIn this query:\n\n```\nMATCH (a)-->(b:B) RETURN a, b\n```\n\nthe `a` is green, but the `b:B` is purple.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1671", "title": "Nodes behind legend become inacessible", "closed": "2014-09-12 11:09:43", "commitsDetails": [], "commits": {}, "ttf": 277.0002777777778, "created": "2013-12-09 10:43:06", "user": "jakewins", "body": "From @redapple\n\nWhen dragging nodes in the viewport, if some end up behind the legend sidebar, one cannot select them anymore.\n\nHere, I have Billy Joel and Alexa Ray Joel on the left, and both can't be selected and dragged anywhere else\n![neo4j__legend](https://f.cloud.github.com/assets/886296/1419296/1521c0b2-3fc8-11e3-9734-23be79ba365e.png)\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1670", "title": "Syntax highlighting: Keywords are highlighted if encountered in escaped identifier", "closed": "2016-04-22 13:47:26", "commitsDetails": [], "commits": {}, "ttf": 865.0002777777778, "created": "2013-12-09 10:42:21", "user": "jakewins", "body": "From @jotomo\n\nE.g.\n\n```\nCREATE (`Neo4j in Action merge`:`Book` {name:\"Neo4j in Action\"})\n```\n\nNote how _in_ is coloured black and _merge_ is coloured blue.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1666", "title": "Cannot set style of node with multiple labels", "closed": "2015-03-02 13:50:16", "commitsDetails": [], "commits": {}, "ttf": 448.0002777777778, "created": "2013-12-09 10:37:52", "user": "jakewins", "body": "From @npryce\n\nMy graph has nodes with multiple labels.  E.g. {Object} (represents an object) and {Object,Array} (represents an object that is an array).  I'd like to style {Object,Array } nodes differently from {Object} nodes.  However...\n\nIf I define a stylesheet rule for node.Array, the rule for node.Object takes precedence and the Array rule is not applied.\n\nIf I define a stylesheet rule for node.Object.Array (CSS-like syntax for an element with multiple classes), the \".Array\" part is discarded -- the rule is parsed as node.Object.\n\nThis problem occurs if I have the rule for node.Object before node.Array or vice versa.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1665", "title": "Syntax highlighting of \"id\"", "closed": "2016-04-22 13:47:12", "commitsDetails": [], "commits": {}, "ttf": 865.0002777777778, "created": "2013-12-09 10:37:13", "user": "jakewins", "body": "From @akollegger @alexaverbuch \n\nProperties named \"id\" are syntax highlighted in black, whereas all other properties are in green\n\n![neo4jbrowser__id__highlight](https://f.cloud.github.com/assets/53756/1502259/10e904d2-4898-11e3-849a-31a4dce86577.png)\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1663", "title": "Tap to paste not supported on Safari Mobile / Chrome", "closed": "2015-03-02 13:43:58", "commitsDetails": [], "commits": {}, "ttf": 448.0002777777778, "created": "2013-12-09 10:35:08", "user": "jakewins", "body": "From @albertoperdomo\n\nHi,\n\na user of GrapheneDB has reported an issue. He can't paste content. I've double checked and it doesn't work.\n\nThe tap event seems to be blocked and the paste option does not show up.\n\nNot really sure this is really a bug, but I wanted to report it just in case.\nI've tested with 2.0.0-M06 on iPad, iOS 6 with Safari Mobile and Chrome.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1662", "title": "Multiline commands are not recognized", "closed": "2015-03-04 14:31:51", "commitsDetails": [], "commits": {}, "ttf": 450.0002777777778, "created": "2013-12-09 10:32:41", "user": "jakewins", "body": "From @jexp \n\nLike\n`:help\n cypher\n`\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1661", "title": "Cypher statement without a space after keyword are not recognized", "closed": "2014-09-11 20:15:39", "commitsDetails": [], "commits": {}, "ttf": 276.0002777777778, "created": "2013-12-09 10:31:35", "user": "jakewins", "body": "From @jexp \n\nlike, so perhaps use non-word character as separator of the command not space\n`MATCH(n) RETURN n`\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1660", "title": "Make Neo4j Browser work in IE 10", "closed": "2016-04-22 13:24:31", "commitsDetails": [], "commits": {}, "ttf": 865.0002777777778, "created": "2013-12-09 10:30:56", "user": "jakewins", "body": "From @jexp \n\nBroken UI in:\n- Labels, Properties, Rel-Types Tab\n- Label color circles viz in graph-viz\n- Styling Popup -> only a row of even sized gray circles no colors and no different sizes\n\nProbably more, we stopped using IE after that. Might not be possible on locked down enterprise user machines.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1657", "title": "Representation of arrays and nested arrays in tables is broken", "closed": "2015-03-02 14:09:15", "commitsDetails": [], "commits": {}, "ttf": 448.0002777777778, "created": "2013-12-09 10:27:54", "user": "jakewins", "body": "From @jexp\n\nMisses the distinction of the nestedness (just a flat comma list) and also no square brackets to indicate an array / list -> could also just be a comma separated string.\n\nSee:\n`return [1,2,3]`\n\n`return [[1,2,3],[4,5,6]]`\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1656", "title": "Browser CSV export doubles the number of quotes for strings", "closed": "2015-01-26 14:46:02", "commitsDetails": [], "commits": {}, "ttf": 413.0002777777778, "created": "2013-12-09 10:27:00", "user": "jakewins", "body": "From @jexp \n\n```\nn\n\"{\"\"title\"\":\"\"The Matrix\"\",\"\"released\"\":1999,\"\"tagline\"\":\"\"Welcome to the Real World\"\"}\"\n\"{\"\"name\"\":\"\"Keanu Reeves\"\",\"\"born\"\":1964}\"\n```\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1649", "title": "Obsolete labels remain in local storage", "closed": "2014-01-22 16:37:37", "commitsDetails": [], "commits": {}, "ttf": 44.000277777777775, "created": "2013-12-09 10:20:13", "user": "jakewins", "body": "From @pekrau\n\nWhen displaying graphs, the label representations include labels that no longer exist in the data. I traced the cause to the local browser storage for the Neo4j browser app page, which I cleared \"by hand\" using the Chrome developer tools. Then the obsolete labels disappeared as I redisplayed the page.\n\nIt was not sufficient to delete browser data (\"Cache\", and \"\"Data from hosted apps\").\n\nNot sure how to fix it, but when experimenting with labels, it's annoying to have old labels hang around for ever.\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1645", "title": "Browser :help, multiple issues", "closed": "2016-04-22 13:20:54", "commitsDetails": [], "commits": {}, "ttf": 865.0002777777778, "created": "2013-12-09 10:17:25", "user": "jakewins", "body": "From @jexp \n- [ ] `:help <unknown keyword>` yields an \"Unknown Error\"\n- [ ] `:help remove` is linked but unknown\n- [ ]  `:help index` is hidden under `:help create index on`\n- [ ]  `:help delete` has incorrect links for `:help return` and `:help remove`\n- [ ]  no help on constraints\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1643", "title": "Ant exception compiling neo4j-browser", "closed": "2015-03-02 13:27:09", "commitsDetails": [], "commits": {}, "ttf": 448.0002777777778, "created": "2013-12-08 17:15:21", "user": "mauriff", "body": "When run mvn  package on neo4j-browser project an exception occurs:\n\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-antrun-plugin:1.6:run (default) on project neo4j-browser: An Ant BuildException has occured: unless=cmdsuccess -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-antrun-plugin:1.6:run (default) on project neo4j-browser: An Ant BuildException has occured: unless=cmdsuccess\n\nNotice that I'm running on Windows OS and And task is for unix SO:\n\n```\n            <exec executable=\"node_modules/.bin/grunt\" dir=\"${project.basedir}\" osfamily=\"unix\" resultproperty=\"cmdresult\">\n              <arg line=\"no-color build\" />\n            </exec>\n```\n\nOutput for \ncommunity\\browser>mvn package -Dlicensing.skip -DskipTests -e -X\n\nApache Maven 3.0.5 (r01de14724cdef164cd33c7c8c2fe155faf9602da; 2013-02-19 10:51:28-0300)\nMaven home: C:\\software\\apache-maven-3.0.5-bin\\apache-maven-3.0.5\\bin..\nJava version: 1.7.0_17, vendor: Oracle Corporation\nJava home: C:\\Program Files\\Java\\jdk1.7.0_17\\jre\nDefault locale: en_US, platform encoding: Cp1252\nOS name: \"windows 7\", version: \"6.1\", arch: \"amd64\", family: \"windows\"\n[INFO] Error stacktraces are turned on.\n.....[INFO logs]....\nSetting project property: settings.localRepository -> C:\\Users\\fbqn87.m2\\repository\nSetting project property: org.neo4j:neo4j-kernel:jar -> C:\\Users\\fbqn87.m2\\repository\\org\\neo4j\\neo4j-kernel\\2.0-SNAPSHOT\\neo4j-kernel-2.0-SNAPSHOT.jar\nSetting project property: org.apache.geronimo.specs:geronimo-jta_1.1_spec:jar -> C:\\Users\\fbqn87.m2\\repository\\org\\apache\\geronimo\\specs\\geronimo-jta_1.1_spec\\1.1.1\\geronimo-jta_1.1_spec-1.1.1.jar\nSetting project property: com.sun.tools:tools:jar -> C:\\Program Files\\Java\\jdk1.7.0_17\\jre..\\lib\\tools.jar\nSetting project property: maven.project.dependencies.versions -> 2.0-20131206.154632-39;1.1.1;1.7;\nSetting project property: maven.dependency.org.neo4j.neo4j-kernel.jar.path -> C:\\Users\\fbqn87.m2\\repository\\org\\neo4j\\neo4j-kernel\\2.0-SNAPSHOT\\neo4j-kernel-2.0-SNAPSHOT.jar\nSetting project property: maven.dependency.org.apache.geronimo.specs.geronimo-jta_1.1_spec.jar.path -> C:\\Users\\fbqn87.m2\\repository\\org\\apache\\geronimo\\specs\\geronimo-jta_1.1_spec\\1.1.1\\geronimo-jta_1.1_spec-1.1.1.jar\nSetting project property: maven.dependency.com.sun.tools.tools.jar.path -> C:\\Program Files\\Java\\jdk1.7.0_17\\jre..\\lib\\tools.jar\n[INFO] Executing tasks\nBuild sequence for target(s) `hipster build' is [hipster build]\nComplete build sequence is [hipster build, ]\n\nhipster build:\nClass org.apache.tools.ant.taskdefs.condition.Equals loaded from parent loader (parentFirst)\nProperty \"cmdresult\" has not been set\nCondition false; not setting cmdsuccess\n     [fail] failing due to unless=cmdsuccess\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time: 2.672s\n[INFO] Finished at: Sun Dec 08 14:04:22 GMT-03:00 2013\n[INFO] Final Memory: 9M/309M\n[INFO] ------------------------------------------------------------------------\n[ERROR] Failed to execute goal org.apache.maven.plugins:maven-antrun-plugin:1.6:run (default) on project neo4j-browser: An Ant BuildException has occured: unless=cmdsuccess -> [Help 1]\norg.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-antrun-plugin:1.6:run (default) on project neo4j-browser: An Ant BuildException has occured: unless=cmdsuccess\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:217)\n        at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1642", "title": "Problem with MATCH Cypher Query", "closed": "2013-12-10 11:11:11", "commitsDetails": [], "commits": {}, "ttf": 1.0002777777777778, "created": "2013-12-08 15:28:57", "user": "atorgfr", "body": "Don't know if it's only me but when i do :\n\nMATCH(n:User) RETURN n\n\nI got an error but with :\n\nMATCH (n:User) RETURN n\n\nIt's working. Any reason for that ?\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1634", "title": "2.0-RC1: IllegalStateException accessing TransactionData/createdRelationships", "closed": "2015-12-05 18:58:52", "commitsDetails": [], "commits": {}, "ttf": 729.0002777777778, "created": "2013-12-05 22:04:04", "user": "rakvat", "body": "I wrote a ServerPlugin that registers TransactionEventHandler. In afterCommit I access transactionData.createdRelationships(). When iterating over the created relationships and accessing e.g. relationship.getType() or relationship.getStartNode() I get \"java.lang.IllegalStateException: Tx status is: STATUS_COMMITED\".\n\nI was able to do that in 2.0-M06 without catching an Exception.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1625", "title": "TransactionEventHandler - Deleted Nodes missing Labels", "closed": "2014-08-26 14:12:13", "commitsDetails": [], "commits": {}, "ttf": 264.0002777777778, "created": "2013-12-05 09:10:39", "user": "MairS", "body": "I delete a Node with a Label. In the TransactionEventHandler the deleted Nodes misses this Label. Is this intended or a bug?\n\nI send you a short Testcase\n\n``` java\nimport java.util.Set;\nimport java.util.TreeSet;\n\nimport org.junit.Assert;\nimport org.junit.Test;\nimport org.neo4j.graphdb.DynamicLabel;\nimport org.neo4j.graphdb.GraphDatabaseService;\nimport org.neo4j.graphdb.Label;\nimport org.neo4j.graphdb.Node;\nimport org.neo4j.graphdb.Transaction;\nimport org.neo4j.graphdb.TransactionFailureException;\nimport org.neo4j.graphdb.event.TransactionData;\nimport org.neo4j.graphdb.event.TransactionEventHandler;\nimport org.neo4j.test.TestGraphDatabaseFactory;\n\n/**\n * A deleted Node misses his Labels in TransactionEventHandler\n */\npublic class WhereIsMyLabelTest {\n\n    private static String asString(final Iterable<Label> iterable) {\n        final Set<String> set = new TreeSet<>();\n        for (final Label label : iterable) {\n            set.add(label.name());\n        }\n        return set.toString();\n    }\n\n    @Test\n    public void test() throws Exception {\n        final GraphDatabaseService databaseService = new TestGraphDatabaseFactory().newImpermanentDatabase();\n        databaseService.registerTransactionEventHandler(new TransactionEventHandler<Long>() {\n            @Override\n            public Long beforeCommit(final TransactionData arg0) throws Exception {\n                for (final Node node : arg0.createdNodes()) {\n                    Assert.assertEquals(\"[ABC]\", asString(node.getLabels()));\n                }\n                for (final Node node : arg0.deletedNodes()) {\n                    Assert.assertEquals(\"[ABC]\", asString(node.getLabels())); // this will fail, because the Label is missing\n                }\n                return null;\n            }\n\n            @Override\n            public void afterCommit(final TransactionData arg0, final Long arg1) {\n            }\n\n            @Override\n            public void afterRollback(final TransactionData arg0, final Long arg1) {\n            }\n        });\n\n        // ADD NODE\n        final long id;\n        try(final Transaction beginTx = databaseService.beginTx()) {\n            final Node node = databaseService.createNode(DynamicLabel.label(\"ABC\"));\n            beginTx.success();\n            id = node.getId();\n        }\n\n        // REMOVE NODE\n        try(final Transaction beginTx = databaseService.beginTx()) {\n            final Node node = databaseService.getNodeById(id);\n            node.delete();\n            beginTx.success();\n        }\n        catch(final TransactionFailureException ex) {\n            // Here comes an Exception because the deleted Node misses his Label\n            ex.printStackTrace();\n            Assert.fail(ex.getMessage());\n        }\n\n        databaseService.shutdown();\n    }\n\n}\n```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1623", "title": "ConstraintViolation when creating a node that does exist, but can't be read (2.0.0-RC1)", "closed": "2014-01-22 16:47:23", "commitsDetails": [], "commits": {}, "ttf": 48.000277777777775, "created": "2013-12-04 20:31:23", "user": "MatAtBread", "body": "In my DB a \"CREATE\" fails with a ConstrantViolation. The code should not reach this path as it is previously read by unique key, but the node is irretrievable even if every node is matched. The node itself should exist (i.e. it has not been DELETEd), so in this instance the index is correct, but the data incorrect.\n\nThe DB was originally created in M06 but was manually updated using the instructions in the changelog/2.0.0-RC1 README.\n\nI have a snapshot of the DB if you want it.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1614", "title": "Windows neo4j-shell is not taking parameters like `-file test.cyp`", "closed": "2013-12-16 13:03:43", "commitsDetails": [], "commits": {}, "ttf": 12.000277777777777, "created": "2013-12-04 11:02:03", "user": "peterneubauer", "body": "Seems the %COMMAND_ARGS% is wrong in `neo4j.bat`\n"}, {"labels": ["bug", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/1588", "title": "neo4j-enterprise-2.0.0-RC1: shell not responding", "closed": "2018-11-07 19:01:14", "commitsDetails": [], "commits": {}, "ttf": 1804.0002777777777, "created": "2013-11-29 13:45:53", "user": "galliva", "body": "I have a remote neo4j installation, shell is enabled on port 1337:\n\n$ telnet MYIP 1337\nTrying MYIP...\nConnected to MYIP\n\nWhen I try to start the shell the connection seem to work (it is not refused), but nothing happens. The console just hangs on a blank line and nothing happens.\n\nAny idea?\n\nThanks and best!\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1560", "title": "Cypher Runtime Exception with CREATE UNIQUE: \"Need a Tx\"", "closed": "2013-12-07 19:06:25", "commitsDetails": [], "commits": {}, "ttf": 11.000277777777777, "created": "2013-11-25 22:46:42", "user": "jexp", "body": "http://console.neo4j.org/r/5e6ifc\n\nException is:\n\n```\njava.lang.RuntimeException: I need a transaction!\n    at org.neo4j.cypher.internal.compiler.v1_9.mutation.UniqueLink$$anonfun$2.apply(UniqueLink.scala:67)\n    at org.neo4j.cypher.internal.compiler.v1_9.mutation.UniqueLink$$anonfun$2.apply(UniqueLink.scala:67)\n    at scala.Option.getOrElse(Option.scala:120)\n    at org.neo4j.cypher.internal.compiler.v1_9.mutation.UniqueLink.twoNodes$1(UniqueLink.scala:67)\n    at org.neo4j.cypher.internal.compiler.v1_9.mutation.UniqueLink.exec(UniqueLink.scala:130)\n    at org.neo4j.cypher.internal.compiler.v1_9.mutation.CreateUniqueAction$$anonfun$executeAllRemainingPatterns$1.apply(CreateUniqueAction.scala:165)\n    at org.neo4j.cypher.internal.compiler.v1_9.mutation.CreateUniqueAction$$anonfun$executeAllRemainingPatterns$1.apply(CreateUniqueAction.scala:165)\n    at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:251)\n    at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:251)\n    at scala.collection.immutable.List.foreach(List.scala:318)\n    at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:251)\n    at scala.collection.AbstractTraversable.flatMap(Traversable.scala:105)\n    at org.neo4j.cypher.internal.compiler.v1_9.mutation.CreateUniqueAction.executeAllRemainingPatterns(CreateUniqueAction.scala:165)\n    at org.neo4j.cypher.internal.compiler.v1_9.mutation.CreateUniqueAction.exec(CreateUniqueAction.scala:37)\n    at org.neo4j.cypher.internal.compiler.v1_9.pipes.ExecuteUpdateCommandsPipe.org$neo4j$cypher$internal$compiler$v1_9$pipes$ExecuteUpdateCommandsPipe$$exec(ExecuteUpdateCommandsPipe.scala:56)\n    at org.neo4j.cypher.internal.compiler.v1_9.pipes.ExecuteUpdateCommandsPipe$$anonfun$org$neo4j$cypher$internal$compiler$v1_9$pipes$ExecuteUpdateCommandsPipe$$executeMutationCommands$1$$anonfun$apply$1.apply(ExecuteUpdateCommandsPipe.scala:47)\n    at org.neo4j.cypher.internal.compiler.v1_9.pipes.ExecuteUpdateCommandsPipe$$anonfun$org$neo4j$cypher$internal$compiler$v1_9$pipes$ExecuteUpdateCommandsPipe$$executeMutationCommands$1$$anonfun$apply$1.apply(ExecuteUpdateCommandsPipe.scala:47)\n    at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:251)\n    at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:251)\n    at scala.collection.immutable.List.foreach(List.scala:318)\n    at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:251)\n    at scala.collection.AbstractTraversable.flatMap(Traversable.scala:105)\n    at org.neo4j.cypher.internal.compiler.v1_9.pipes.ExecuteUpdateCommandsPipe$$anonfun$org$neo4j$cypher$internal$compiler$v1_9$pipes$ExecuteUpdateCommandsPipe$$executeMutationCommands$1.apply(ExecuteUpdateCommandsPipe.scala:47)\n    at org.neo4j.cypher.internal.compiler.v1_9.pipes.ExecuteUpdateCommandsPipe$$anonfun$org$neo4j$cypher$internal$compiler$v1_9$pipes$ExecuteUpdateCommandsPipe$$executeMutationCommands$1.apply(ExecuteUpdateCommandsPipe.scala:47)\n    at scala.collection.immutable.Stream.foldLeft(Stream.scala:563)\n    at org.neo4j.cypher.internal.compiler.v1_9.pipes.ExecuteUpdateCommandsPipe.org$neo4j$cypher$internal$compiler$v1_9$pipes$ExecuteUpdateCommandsPipe$$executeMutationCommands(ExecuteUpdateCommandsPipe.scala:47)\n    at org.neo4j.cypher.internal.compiler.v1_9.pipes.ExecuteUpdateCommandsPipe$$anonfun$internalCreateResults$1.apply(ExecuteUpdateCommandsPipe.scala:40)\n    at org.neo4j.cypher.internal.compiler.v1_9.pipes.ExecuteUpdateCommandsPipe$$anonfun$internalCreateResults$1.apply(ExecuteUpdateCommandsPipe.scala:39)\n    at scala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\n    at org.neo4j.cypher.internal.compiler.v1_9.profiler.ProfilingIterator.hasNext(Profiler.scala:170)\n    at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:327)\n    at org.neo4j.cypher.internal.compiler.v1_9.profiler.ProfilingIterator.hasNext(Profiler.scala:170)\n    at org.neo4j.cypher.internal.compiler.v1_9.ClosingIterator$$anonfun$hasNext$1.apply$mcZ$sp(ClosingIterator.scala:35)\n    at org.neo4j.cypher.internal.compiler.v1_9.ClosingIterator$$anonfun$hasNext$1.apply(ClosingIterator.scala:34)\n    at org.neo4j.cypher.internal.compiler.v1_9.ClosingIterator$$anonfun$hasNext$1.apply(ClosingIterator.scala:34)\n    at org.neo4j.cypher.internal.compiler.v1_9.ClosingIterator.failIfThrows(ClosingIterator.scala:85)\n    at org.neo4j.cypher.internal.compiler.v1_9.ClosingIterator.hasNext(ClosingIterator.scala:34)\n    at scala.collection.Iterator$class.foreach(Iterator.scala:727)\n    at org.neo4j.cypher.internal.compiler.v1_9.ClosingIterator.foreach(ClosingIterator.scala:30)\n    at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:176)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:45)\n    at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:273)\n    at org.neo4j.cypher.internal.compiler.v1_9.ClosingIterator.to(ClosingIterator.scala:30)\n    at scala.collection.TraversableOnce$class.toList(TraversableOnce.scala:257)\n    at org.neo4j.cypher.internal.compiler.v1_9.ClosingIterator.toList(ClosingIterator.scala:30)\n    at org.neo4j.cypher.internal.compiler.v1_9.executionplan.EagerPipeExecutionResult.<init>(EagerPipeExecutionResult.scala:35)\n    at org.neo4j.cypher.internal.compiler.v1_9.executionplan.ExecutionPlanImpl$$anonfun$6.apply(ExecutionPlanImpl.scala:154)\n    at org.neo4j.cypher.internal.compiler.v1_9.executionplan.ExecutionPlanImpl$$anonfun$6.apply(ExecutionPlanImpl.scala:151)\n    at org.neo4j.cypher.internal.compiler.v1_9.executionplan.ExecutionPlanImpl.profile(ExecutionPlanImpl.scala:46)\n    at org.neo4j.cypher.internal.ExecutionPlanWrapperForV1_9.profile(CypherCompiler.scala:102)\n    at org.neo4j.cypher.ExecutionEngine.profile(ExecutionEngine.scala:44)\n    at org.neo4j.cypher.ExecutionEngine.profile(ExecutionEngine.scala:51)\n    at org.neo4j.cypher.javacompat.ExecutionEngine.profile(ExecutionEngine.java:94)\n```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1551", "title": "Unit testing in version 2", "closed": "2015-12-05 19:00:58", "commitsDetails": [], "commits": {}, "ttf": 740.0002777777778, "created": "2013-11-25 01:24:32", "user": "aramk", "body": "I was following the basic unit testing tutorial here:\n\nhttp://docs.neo4j.org/chunked/stable/tutorials-java-unit-testing.html\n\nWhen I noticed that the dependencies listed don't work if I specify `2.0.0-M6` or `2.0.0-RC1`. I had to roll back to `1.9.4` to prevent any issues. The working configuration I'm using for Maven is:\n\n```\n<properties>\n    <neo4j.version>1.9.4</neo4j.version>\n  </properties>\n\n<dependency>\n      <groupId>org.neo4j</groupId>\n      <artifactId>neo4j</artifactId>\n      <version>${neo4j.version}</version>\n</dependency>\n\n<dependency>\n      <groupId>org.neo4j</groupId>\n      <artifactId>neo4j-kernel</artifactId>\n      <version>${neo4j.version}</version>\n      <type>test-jar</type>\n      <scope>test</scope>\n</dependency>\n```\n\nThe issues revolve around missing classes such as `org.neo4j.tooling.Clock` (which is in a different package in version 2). I'm guessing this is expected as the new version is being developed, but thought I'd mention it here for others.\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/1525", "title": "MATCH with properties inconsistency in REST API", "closed": "2017-10-16 10:43:25", "commitsDetails": [], "commits": {}, "ttf": 1424.0002777777777, "created": "2013-11-21 11:17:34", "user": "ducky427", "body": "Hi,\nI was trying the new MATCH with properties cypher feature in Neo4j 2.0 RC1 using the REST API. \n\nI noticed that if I explicitly hard coded the properties in the cypher query it worked as expected. But I passed the properties as a parameter it doesn't work. This behaviour seems to be inconsistent with the way other cypher queries and params work.\n\nA very basic program in Python to illustrate the issue and the output is [here](https://gist.github.com/ducky427/7579861).\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/1488", "title": "Webadmin doesn't works behind HTTPS", "closed": "2015-03-18 22:30:24", "commitsDetails": [], "commits": {}, "ttf": 488.0002777777778, "created": "2013-11-15 12:17:07", "user": "ayosec", "body": "Webadmin interface doesn't use the `X-Forwarded-Host` and `X-Forwarded-Proto` headers to generate URLs. The URLs are correctly generated in the REST interface.\n### With 1.9.4\n\nA basic query\n\n```\n$ curl -i -H 'X-Forwarded-Host: external.foo.bar:1234' -H 'X-Forwarded-Proto: https' localhost:7474/db/data/\nHTTP/1.1 200 OK\nContent-Length: 876\nContent-Type: application/json; charset=UTF-8\nAccess-Control-Allow-Origin: *\nServer: Jetty(6.1.25)\n\n{\n  \"extensions\" : {\n    \"CypherPlugin\" : {\n      \"execute_query\" : \"https://external.foo.bar:1234/db/data/ext/CypherPlugin/graphdb/execute_query\"\n    },\n    \"GremlinPlugin\" : {\n      \"execute_script\" : \"https://external.foo.bar:1234/db/data/ext/GremlinPlugin/graphdb/execute_script\"\n    }\n  },\n  \"node\" : \"https://external.foo.bar:1234/db/data/node\",\n  \"reference_node\" : \"https://external.foo.bar:1234/db/data/node/0\",\n  \"node_index\" : \"https://external.foo.bar:1234/db/data/index/node\",\n  \"relationship_index\" : \"https://external.foo.bar:1234/db/data/index/relationship\",\n  \"extensions_info\" : \"https://external.foo.bar:1234/db/data/ext\",\n  \"relationship_types\" : \"https://external.foo.bar:1234/db/data/relationship/types\",\n  \"batch\" : \"https://external.foo.bar:1234/db/data/batch\",\n  \"cypher\" : \"https://external.foo.bar:1234/db/data/cypher\",\n  \"neo4j_version\" : \"1.9.4\"\n}\n```\n\nA request simulating a browser\n\n```\n$ curl -i -H 'Accept: text/html' -H 'X-Forwarded-Host: external.foo.bar:1234' -H 'X-Forwarded-Proto: https' localhost:7474/db/data/\nHTTP/1.1 200 OK\nContent-Length: 1195\nContent-Type: text/html; charset=UTF-8\nAccess-Control-Allow-Origin: *\nServer: Jetty(6.1.25)\n\n<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<html><head><title>Root</title><meta content=\"text/html; charset=utf-8\" http-equiv=\"Content-Type\">\n<link href='http://resthtml.neo4j.org/style/rest.css' rel='stylesheet' type='text/css'>\n<script type='text/javascript' src='/webadmin/htmlbrowse.js'></script>\n</head>\n<body onload='javascript:neo4jHtmlBrowse.start();' id='root'>\n<div id='content'><div id='header'><h1><a title='Neo4j REST interface' href='/'><span>Neo4j REST interface</span></a></h1></div>\n<div id='page-body'>\n<table class=\"root\"><caption>Root</caption>\n<tr class='odd'><th>relationship_index</th><td><a href=\"https://external.foo.bar:1234/db/data/index/relationship\">https://external.foo.bar:1234/db/data/index/relationship</a></td></tr>\n<tr><th>node_index</th><td><a href=\"https://external.foo.bar:1234/db/data/index/node\">https://external.foo.bar:1234/db/data/index/node</a></td></tr>\n<tr class='odd'><th>reference_node</th><td><a href=\"https://external.foo.bar:1234/db/data/node/0\" class=\"node\">https://external.foo.bar:1234/db/data/node/0</a></td></tr>\n</table>\n<div class='break'>&nbsp;</div></div></div></body></html>\n```\n\nIn both cases, the URLs are `https://external.foo.bar:1234/...`\n\nHowever, if we try to get the webadmin interface:\n\n```\n$ curl -i -H 'Accept: text/html' -H 'X-Forwarded-Host: external.foo.bar:1234' -H 'X-Forwarded-Proto: https' localhost:7474\nHTTP/1.1 303 See Other\nLocation: http://localhost:7474/webadmin\nContent-Type: text/html\nAccess-Control-Allow-Origin: *\nContent-Length: 0\nServer: Jetty(6.1.25)\n\n$ curl -i -H 'Accept: text/html' -H 'X-Forwarded-Host: external.foo.bar:1234' -H 'X-Forwarded-Proto: https' localhost:7474/webadmin\nHTTP/1.1 302 Found\nLocation: http://localhost:7474/webadmin/\nContent-Length: 0\nServer: Jetty(6.1.25)\n```\n\nIn both cases, the generated URL is `http://localhost:7474/`\n### With 2.0.0-M06\n\nThe same behaviour is found in 2.0.0-M06\n\n```\n$ curl -i -H 'Accept: text/html' -H 'X-Forwarded-Host: external.foo.bar:1234' -H 'X-Forwarded-Proto: https' localhost:7474/\nHTTP/1.1 303 See Other\nLocation: http://localhost:7474/browser\nContent-Type: text/html\nAccess-Control-Allow-Origin: *\nContent-Length: 0\nServer: Jetty(9.0.5.v20130815)\n\n$ curl -i -H 'Accept: text/html' -H 'X-Forwarded-Host: external.foo.bar:1234' -H 'X-Forwarded-Proto: https' localhost:7474/db/data/\nHTTP/1.1 200 OK\nContent-Type: text/html; charset=UTF-8\nAccess-Control-Allow-Origin: *\nContent-Length: 1195\nServer: Jetty(9.0.5.v20130815)\n\n[...] <a href=\"https://external.foo.bar:1234/db/data/node/0\" class=\"node\">https://external.foo.bar:1234/db/data/node/0</a></td></tr>\n</table>\n```\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1479", "title": "(1.9.5) Next on empty iterator on cypher query with non matching relations", "closed": "2013-12-11 14:32:33", "commitsDetails": [], "commits": {}, "ttf": 27.00027777777778, "created": "2013-11-14 09:09:25", "user": "marcojahn", "body": "With an empty database the following example will work in 1.9.4 but not in 1.9.5.\n\n```\nCREATE (n{name: 'first'}), (t{name: 'a tag'})\nWITH n\nMATCH n<-[?:tags]-(tag)\nWITH n, tag\nMATCH (tag)-[?:tags]-()\nWITH n, tag, count(*) AS tagcount\nRETURN n, COLLECT(tag) AS tags, COLLECT(tagcount) AS tagscount\n```\n\nResults in the following stack trace\n\n```\nNoSuchElementException\n\nnext on empty iterator\n\nStackTrace:\nscala.collection.Iterator$$anon$2.next(Iterator.scala:39)\nscala.collection.Iterator$$anon$2.next(Iterator.scala:37)\nscala.collection.IterableLike$class.head(IterableLike.scala:91)\nscala.collection.AbstractIterable.head(Iterable.scala:54)\norg.neo4j.cypher.internal.pipes.matching.PatternMatcher.traverseNode(PatternMatcher.scala:75)\norg.neo4j.cypher.internal.pipes.matching.PatternMatcher.foreach(PatternMatcher.scala:41)\nscala.collection.TraversableLike$class.flatMap(TraversableLike.scala:251)\norg.neo4j.cypher.internal.pipes.matching.PatternMatcher.flatMap(PatternMatcher.scala:29)\norg.neo4j.cypher.internal.pipes.matching.PatterMatchingBuilder.getMatches(PatterMatchingBuilder.scala:48)\norg.neo4j.cypher.internal.pipes.matching.MatchingContext.getMatches(MatchingContext.scala:53)\norg.neo4j.cypher.internal.pipes.MatchPipe$$anonfun$internalCreateResults$1.apply(MatchPipe.scala:34)\norg.neo4j.cypher.internal.pipes.MatchPipe$$anonfun$internalCreateResults$1.apply(MatchPipe.scala:34)\nscala.collection.Iterator$$anon$13.hasNext(Iterator.scala:371)\nscala.collection.Iterator$class.foreach(Iterator.scala:727)\nscala.collection.AbstractIterator.foreach(Iterator.scala:1156)\norg.neo4j.cypher.internal.pipes.EagerAggregationPipe.internalCreateResults(EagerAggregationPipe.scala:76)\norg.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:69)\norg.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:66)\norg.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:66)\norg.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:66)\norg.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.org$neo4j$cypher$internal$executionplan$ExecutionPlanImpl$$prepareStateAndResult(ExecutionPlanImpl.scala:164)\norg.neo4j.cypher.internal.executionplan.ExecutionPlanImpl$$anonfun$getLazyReadonlyQuery$1.apply(ExecutionPlanImpl.scala:139)\norg.neo4j.cypher.internal.executionplan.ExecutionPlanImpl$$anonfun$getLazyReadonlyQuery$1.apply(ExecutionPlanImpl.scala:138)\norg.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.execute(ExecutionPlanImpl.scala:38)\norg.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:72)\norg.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:76)\norg.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:79)\norg.neo4j.server.rest.web.CypherService.cypher(CypherService.java:94)\njava.lang.reflect.Method.invoke(Method.java:606)\norg.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\n```\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1477", "title": "Cypher can go over same relationship twice in AllShortestPaths!", "closed": "2013-11-26 13:22:27", "commitsDetails": [], "commits": {}, "ttf": 12.000277777777777, "created": "2013-11-13 23:52:36", "user": "maxdemarzi", "body": "This this query on the sample movie dataset:\n\n```\nMATCH p=allshortestPaths((charlize:Person)-[:ACTED_IN|ACTED_IN*]-(bacon:Person))\nWHERE charlize.name=\"Clint Eastwood\" AND\n      bacon.name=\"Kevin Bacon\"\nRETURN [n in nodes(p) | COALESCE(n.name, n.title)] AS names;\n```\n\nThe \"ACTED_IN|ACTED_IN\" should be treated as \"ACTED_IN or ACTED_IN\" which really just equals \"ACTED_IN\" but the implementation is allowing the same relationship to be traversed twice.... Feature or Bug!\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["f269fa7ef189e3e0eabf39da587ab2e37c9edd6e"], "url": "https://github.com/neo4j/neo4j/issues/1471", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 2, "lines": 6, "deletions": 3}, "numCommits": 1, "commits": {"932be349c9a54c808ea8f5f9ab7b8c4ce28765cf": {"commitUser": "jakewins", "commitGHEventType": "referenced"}, "f269fa7ef189e3e0eabf39da587ab2e37c9edd6e": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 1.0002777777777778, "user": "monolar", "changesInPackagesGIT": ["community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal"], "body": "via console.neo4j.org:\n\nQuery:\nSTART n=node:node_auto_index(name='Neo') \nMATCH n-[r:KNOWS]-m \nSET r={properties}\nError: Type mismatch: r already defined with conflicting type Relationship (expected Node) (line 3, column 5)\n\"SET r={properties}\"\n\n![screen shot 2013-11-13 at 14 59 51](https://f.cloud.github.com/assets/640910/1531757/e75b1a38-4c6b-11e3-8a17-825430eb9cd1.png)\n\nIf i understood section 15.4.5. \"Set all properties using a parameter\" of the manual (http://docs.neo4j.org/chunked/milestone/query-set.html#set-set-all-properties-using-a-parameter) correctly this should work and i have reason to believe this worked with M03 (unit test).\n\nEDIT: I realize that the parameter 'properties' cannot be resolved in the query but the cypher engine does not seem to even get this far.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "2.0.0-M06 : SETting all properties of a relationship via parameter fails", "statsSkippedReason": "", "closed": "2013-11-14 20:50:12", "commitsDetails": [{"commitUser": "jakewins", "commitDateTime": "2013-11-14 12:50:12", "commitHash": "932be349c9a54c808ea8f5f9ab7b8c4ce28765cf", "commitParents": ["f1342d5d6027b6f0aeb7a264d0e61291eb177896", "f269fa7ef189e3e0eabf39da587ab2e37c9edd6e"], "commitGHEventType": "referenced", "nameRev": "932be349c9a54c808ea8f5f9ab7b8c4ce28765cf tags/2.0.0-RC1~48", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/ast/SetItem.scala", "deletions": 2}, {"insertions": 11, "lines": 13, "filePath": "community/cypher/cypher-compiler-2.0/src/test/scala/org/neo4j/cypher/internal/compiler/v2_0/parser/CypherParserTest.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/parser/Clauses.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #1485 from systay/1471\n\nFixed #1471 - SETting a relationship to a map value fails", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-11-14 12:50:12"}, {"commitUser": "systay", "commitDateTime": "2013-11-14 20:29:54", "commitHash": "f269fa7ef189e3e0eabf39da587ab2e37c9edd6e", "commitParents": ["fa380d51ef27b7840b66512164b86e1f599ecede"], "commitGHEventType": "closed", "nameRev": "f269fa7ef189e3e0eabf39da587ab2e37c9edd6e tags/2.0.0-RC1~48^2", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/ast/SetItem.scala", "deletions": 2}, {"insertions": 11, "lines": 13, "filePath": "community/cypher/cypher-compiler-2.0/src/test/scala/org/neo4j/cypher/internal/compiler/v2_0/parser/CypherParserTest.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-compiler-2.0/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/parser/Clauses.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixed #1471 - SETting a relationship to a map value fails\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-11-14 18:22:02"}], "created": "2013-11-13 14:02:01"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1437", "title": "INTERNAL_BEGIN_TRANSACTION_ERROR", "closed": "2015-12-05 18:59:29", "commitsDetails": [], "commits": {}, "ttf": 758.0002777777778, "created": "2013-11-06 21:15:12", "user": "bmayes", "body": "After a series of additions to my DB (via py2neo and cypher) all queries (insert or read) result in \"INTERNAL_BEGIN_TRANSACTION_ERROR\".  Restarting the DB does not clear up the issue and I've only been able to recover by deleting the data directory.\n\nI'm not able to share the DB but can provide other details if someone needs it:\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1436", "title": "Node becomes queryable before a property from the same transaction", "closed": "2015-12-05 19:01:54", "commitsDetails": [], "commits": {}, "ttf": 758.0002777777778, "created": "2013-11-06 20:16:20", "user": "jzarrelli", "body": "During a transaction:\n1) I start a transaction.\n2) I create a node object with db.createNode().\n3) I add various properties to the node, and add some of them to indexes.\n4) I commit the transaction.\nPotentially in a different thread:\n1) I query the index and receive the node created above\n2) I attempt to access a different property on the node.\n3) The property is not present, causing an error.\n\nI have noticed that at least usually (and possibly always, but I am not certain), the .setProperty call for the missing property was made after the index.add call of the index that the node was retrieved from, although they are both contained in the same transaction. The node is never modified in subsequent transactions.\n\nI currently work around this by doing the following:\nwhile (!node.hasProperty(property)) {\n            try {\n                Thread.sleep(40);\n            }\n\nThis happens only occasionally, but often enough to happen once every ten minutes or so under heavy load. This is done using embedded mode of Neo4j 1.9.4.\n"}, {"labels": ["bug", "operability", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/1432", "title": "neo4j-shell \"-host\" argument not honored/working", "closed": "2018-11-07 18:58:54", "commitsDetails": [], "commits": {}, "ttf": 1827.0002777777777, "created": "2013-11-06 08:12:20", "user": "robertklep", "body": "Trying to connect to a remote server using Neo4J shell.\n\nServer is Linux (@192.168.23.12) running Neo4j 2.0.0-M06 (Community edition), client is Mac OS X running the same Neo4J version.\n\nThis is what I'm trying on the client:\n\n```\n$ ./neo4j-shell -host 192.168.23.12 -port 1337 -v\nERROR (-v for expanded information):\n    Connection refused\njava.rmi.ConnectException: Connection refused to host: 127.0.0.1; nested exception is: \n    java.net.ConnectException: Connection refused\n    at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:619)\n    at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:216)\n    at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:202)\n    at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:128)\n        ...\n```\n\n(the `127.0.0.1` seems a bit strange...)\n\nI _can_ telnet to 192.168.23.12:1337:\n\n```\n$ telnet 192.168.23.12 1337\nTrying 192.168.23.12...\nConnected to lserver.lan.\nEscape character is '^]'.\n...\n```\n\nI'm running Neo4J in a [Docker](http://www.docker.io/) container on Linux, so I have to explicitly forward ports from the host to the container. I'm forwarding 1337 (as shown by being able to connect using telnet) and 7474. Do I need to forward any other ports maybe?\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/1430", "title": "2.0.0.M6 - inconsistent behavior when deleting multiple relationships in a merge", "closed": "2017-10-11 09:56:19", "commitsDetails": [], "commits": {}, "ttf": 1435.0002777777777, "created": "2013-11-06 01:33:34", "user": "billw1955", "body": "You have to run this query twice to replicate. The first time is clean as everything is new. The second time through is when existing pieces, like multiple predecessor nodes, get removed, triggering the 'error'.\n\nBTW, this query is for repeated sync into neo4j from another source (think rsync --delete). I'm running in parallel with a legacy job scheduler. The ongoing edits to host assignment, predecessor jobs and the various process details still happen over there. However, I need to keep the process node ids constant over here as I'm going to hang considerable new schema off of them. The basic idea is that rather than trying to compute what's different, I just strip off the existing 'from over there' state for each n:Process and replace. Relationships I've added over here don't get touched. So far, I haven't had to add properties over here, so I can still get away with set = {map}.\n\n// Is there an 'if exists' on constraints to avoid error noise on subsequent runs?\nCREATE CONSTRAINT ON (n:Process) assert n.appname is unique;\nCREATE CONSTRAINT ON (n:Category) assert n.name is unique;\n\n// uncomment the following 4 lines to 'pre-delete' n-ary relationship and it works on subsequent passes.\n//merge (proc:Process {appname:'dep1and2'})\n//with proc\n//match proc-[_4?:DEPENDS_ON]->(_d:Process)\n//delete _4;\n// first run is fine, but subsequent runs with\n// 2 or more DEPENDS_ON, fail with CypherExecutionException: Node nnn already exists with label Process and property \"appname\"=[dep1and2] \nmerge (proc:Process {appname:'dep1and2'})\nmerge (cat:Category {name:'cat1'}) \nmerge (_dep0:Process {appname:'pred1'})\nmerge (_dep1:Process {appname:'pred2'})\nwith proc, cat, _dep0, _dep1\nmatch \nproc-[_1?:MEMBER_OF]->(_a:Category)\n,proc-[_4?:DEPENDS_ON]->(_d:Process)\nremove proc:Process\nset proc = {appname:'dep1and2', autoexit : 'Y', dayschedule :'Ex,Mo,Tu,We,Th,Fr' }\nset proc:Process\ndelete _1, _4\ncreate unique proc-[:MEMBER_OF]->cat\ncreate unique proc-[:DEPENDS_ON]->_dep0\ncreate unique proc-[:DEPENDS_ON]->_dep1\n;\n\n// 0 or 1 DEPENDS_ON works\nmerge (proc:Process {appname:'doubledep'})\nmerge (cat:Category {name:'cat1'}) \nmerge (_dep0:Process {appname:'d12'})\nwith proc, cat, _dep0\nmatch \nproc-[_1?:MEMBER_OF]->(_a:Category)\n,proc-[_4?:DEPENDS_ON]->(_d:Process)\nremove proc:Process\nset proc = {appname:'doubledep', autoexit : 'Y', dayschedule :'Ex,Mo,Tu,We,Th,Fr' }\nset proc:Process\ndelete _1, _4\ncreate unique proc-[:MEMBER_OF]->cat\ncreate unique proc-[:DEPENDS_ON]->_dep0\n;\n\n// 0 or 1 DEPENDS_ON works\nmerge (proc:Process {appname:'deponly1'})\nmerge (cat:Category {name:'cat1'}) \nmerge (_dep0:Process {appname:'pred1'})\nwith proc, cat, _dep0\nmatch \nproc-[_1?:MEMBER_OF]->(_a:Category)\n,proc-[_4?:DEPENDS_ON]->(_d:Process)\nremove proc:Process\nset proc = {appname:'deponly1', autoexit : 'Y', dayschedule :'Ex,Mo,Tu,We,Th,Fr' }\nset proc:Process\ndelete _1, _4\ncreate unique proc-[:MEMBER_OF]->cat\ncreate unique proc-[:DEPENDS_ON]->_dep0\n;\n\nmerge (proc:Process {appname:'pred1'})\nmerge (cat:Category {name:'cat1'})\nwith proc, cat\nmatch \nproc-[_1?:MEMBER_OF]->(_a:Category)\n,proc-[_4?:DEPENDS_ON]->(_d:Process)\nremove proc:Process\nset proc = {appname:'pred1', starttime : '111111', autoexit : 'Y', dayschedule :'Ex,Mo,Tu,We,Th,Fr' }\nset proc:Process\ndelete _1, _4\ncreate unique proc-[:MEMBER_OF]->cat\n;\n\nmerge (proc:Process {appname:'pred2'})\nmerge (cat:Category {name:'cat1'})\nwith proc, cat\nmatch \nproc-[_1?:MEMBER_OF]->(_a:Category)\n,proc-[_4?:DEPENDS_ON]->(_d:Process)\nremove proc:Process\nset proc = {appname:'pred2', starttime : '222222', autoexit : 'Y', dayschedule :'Ex,Mo,Tu,We,Th,Fr' }\nset proc:Process\ndelete _1, _4\ncreate unique proc-[:MEMBER_OF]->cat\n;\nstart n=node(_) return id(n), n.appname, labels(n);\nstart n=node(_) match p=(n:Process)-->() return p;\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1429", "title": "2.0.0-M06 CREATE requires directional relationships and isn't a syntax error", "closed": "2014-06-02 06:14:25", "commitsDetails": [], "commits": {}, "ttf": 208.00027777777777, "created": "2013-11-05 22:29:51", "user": "freeeve", "body": "I'm not sure I like the behavior of the new CREATE in M06. I'm actually ok with requiring a direction, but I think it should be a syntax error rather than a \"pattern exception\". I just spent an embarrassing amount of time trying to find the undirected relationship in my large CREATE statement, and it sure would have been nice to have a syntax error with a location, pointing out exactly where the problem was. Anyway, if this is easy to do, that would be great.\n"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/1428", "title": "2.0.0-M06 MERGE doesn't ALWAYS work with Constrains", "closed": "2017-10-04 07:29:50", "commitsDetails": [], "commits": {}, "ttf": 1428.0002777777777, "created": "2013-11-05 19:12:15", "user": "GoSkyLine", "body": "Hello everybody, I'm having issue with MERGE with Constrains in 2.0.0-M06\nBasically, I need to insert buge amount of tweets with relationships between them into Neo4j via REST API's Batch endpoint, approx 5k/s\nSometime, it's a single node creation for a tweet; sometime, I need to create both parent and child nodes first and then create relationship.\n\n---\n\nMy Schema\n[code]\nneo4j-sh (0)$ schema\n==> Indexes\n==>   ON :REPLY(created_at)   ONLINE  \n==>   ON :REPLY(ids)          ONLINE (for uniqueness constraint) \n==>   ON :RETWEET(created_at) ONLINE  \n==>   ON :RETWEET(ids)        ONLINE (for uniqueness constraint) \n==>   ON :Status(userId)      ONLINE  \n==>   ON :Status(statusId)    ONLINE (for uniqueness constraint) \n==> \n==> Constraints\n==>   ON (status:Status) ASSERT status.statusId IS UNIQUE\n==>   ON (retweet:RETWEET) ASSERT retweet.ids IS UNIQUE\n==>   ON (reply:REPLY) ASSERT reply.ids IS UNIQUE\n[/code]\n\n---\n\nISSUE #ONE: MERGE doesn't ALWAYS work with Constrains properly (or Constrains doesn't work with MERGE properly). (random exception)\n\nHere are my test cases:\n1. Two MERGE's and one CREATE UNIQUE\nWhen I tried to add two tweets with one relationship between them, I got a exception, which complaining existing node for the child\nneo4j-sh (0)$ MERGE (parent:Status {statusId:385813052047626240, userId:466042117}) MERGE (child:Status {statusId:385814827270017024, userId:1130050117}) CREATE UNIQUE parent-[relationship:REPLY {ids:'385813052047626240_385814827270017024', created_at:'Thu Oct 03 14:13:17 ADT 2013' }]->child;\n==> CypherExecutionException: Node 270100 already exists with label Status and property \"statusId\"=[385814827270017024]\n1. Then, I broke down my joint query to small pieces. So first, I tried to create the parent node with a single MERGE, it works as expected\n   neo4j-sh (0)$ MERGE (parent:Status {statusId:385813052047626240, userId:466042117}) RETURN parent;\n   ==> +------------------------------------------------------------+\n   ==> | parent                                                     |\n   ==> +------------------------------------------------------------+\n   ==> | Node[284599]{userId:466042117,statusId:385813052047626240} |\n   ==> +------------------------------------------------------------+\n   ==> 1 row\n   ==> Nodes created: 1\n   ==> Properties set: 2\n   ==> Labels added: 1\n   ==> 4 ms\n   neo4j-sh (0)$ MERGE (parent:Status {statusId:385813052047626240, userId:466042117}) RETURN parent;\n   ==> +------------------------------------------------------------+\n   ==> | parent                                                     |\n   ==> +------------------------------------------------------------+\n   ==> | Node[284599]{statusId:385813052047626240,userId:466042117} |\n   ==> +------------------------------------------------------------+\n   ==> 1 row\n   ==> 1 ms\n2. Next, I tried to create the child node with a single MERGE, but it failed like step 1.\n   neo4j-sh (0)$ MERGE (child:Status {statusId:385814827270017024, userId:1130050117}) RETURN child;\n   ==> CypherExecutionException: Node 270100 already exists with label Status and property \"statusId\"=[385814827270017024]\n3. I tried MERGE on few more exsting nodes, some worked, some failed.\n   I thought it may cased by existing relationship, so I checked both direction of a problemtic node, which turns out it doesn't have any existing relationship in place.\n   neo4j-sh (0)$ MERGE (child:Status {statusId:385814902293553153, userId:1725656978});\n   ==> CypherExecutionException: Node 301777 already exists with label Status and property \"statusId\"=[385814902293553153]\n   neo4j-sh (0)$ START a = node(301777) MATCH a-[r]->b RETURN b;\n   ==> +---+\n   ==> | b |\n   ==> +---+\n   ==> +---+\n   ==> 0 row\n   ==> 1 ms\n   neo4j-sh (0)$ START a = node(301777) MATCH b-[r]->a RETURN b;\n   ==> +---+\n   ==> | b |\n   ==> +---+\n   ==> +---+\n   ==> 0 row\n   ==> 0 ms\n\n---\n\nISSUE #TWO: Constrained property on relationship doesn't work with CREATE UNIQUE properly, I was able to create duplicate reltionships with same constrained property.\n1. First, I have created two nodes and one relationship between them. (MERGE with Constrains worked this time :)), the results below is to show I have them in DB\n   neo4j-sh (0)$ MERGE (parent:Status {statusId:1001, userId:901}) MERGE (child:Status {statusId:1002, userId:902}) CREATE UNIQUE parent-[relationship:RETWEET {ids:'1001_1002', created_at:'Mon Nov 04 14:37:56 AST 2013' }]->child RETURN parent, relationship, child;\n   ==> +------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> | parent                            | relationship                                                           | child                             |\n   ==> +------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> | Node[1]{statusId:1001,userId:901} | :RETWEET[0]{ids:\"1001_1002\",created_at:\"Mon Nov 04 14:37:56 AST 2013\"} | Node[2]{statusId:1002,userId:902} |\n   ==> +------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> 1 row\n   ==> 13 ms\n2. Then, I modified the script a bit, where I changed year in created_at from 2013 to 2019, and I expect this to fail, coz the unique constrain is on ids, but the script created a new relationship between same nodes, so it ends up I have two relationships with same constrained ids between two same nodes.\n   neo4j-sh (0)$ MERGE (parent:Status {statusId:1001, userId:901}) MERGE (child:Status {statusId:1002, userId:902}) CREATE UNIQUE parent-[relationship:RETWEET {ids:'1001_1002', created_at:'Mon Nov 04 14:37:56 AST 2019' }]->child RETURN parent, relationship, child;\n   ==> +-----------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> | parent                            | relationship                                                                | child                             |\n   ==> +-----------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> | Node[1]{statusId:1001,userId:901} | :RETWEET[224428]{ids:\"1001_1002\",created_at:\"Mon Nov 04 14:37:56 AST 2019\"} | Node[2]{statusId:1002,userId:902} |\n   ==> +-----------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> 1 row\n   ==> Relationships created: 1\n   ==> Properties set: 2\n   ==> 12 ms\n   neo4j-sh (0)$ START parent=node(1) MATCH parent-[relationship]->(child) WHERE child.statusId=1002 RETURN parent,relationship,child;\n   ==> +-----------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> | parent                            | relationship                                                                | child                             |\n   ==> +-----------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> | Node[1]{statusId:1001,userId:901} | :RETWEET[0]{ids:\"1001_1002\",created_at:\"Mon Nov 04 14:37:56 AST 2013\"}      | Node[2]{statusId:1002,userId:902} |\n   ==> | Node[1]{statusId:1001,userId:901} | :RETWEET[224428]{ids:\"1001_1002\",created_at:\"Mon Nov 04 14:37:56 AST 2019\"} | Node[2]{statusId:1002,userId:902} |\n   ==> +-----------------------------------------------------------------------------------------------------------------------------------------------------+\n   ==> 2 rows\n   ==> 7 ms\n\nAny help would be much appreciated!!!!! Thank you!\n- Jack\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1421", "title": "sometimes! loss of identifiers on WHERE ... IN with collections", "closed": "2015-12-06 00:17:36", "commitsDetails": [], "commits": {}, "ttf": 760.0002777777778, "created": "2013-11-05 10:24:54", "user": "bossie", "body": "The example at http://console.neo4j.org/?id=f9ltpb throws this exception: org.neo4j.graphdb.NotFoundException: Unknown identifier `user`, but only when there is an actual user in the database.\n\nA workaround is a WITH clause, as witnessed here: http://console.neo4j.org/r/b1yyhp\n\nThe original question on stackoverflow.com is here: http://stackoverflow.com/questions/19632504/neo4j-similar-queries-one-works-one-fails-with-notfoundexception-unknown-id\n"}, {"labels": ["bug"], "filteredCommits": ["6905f76005b480459ef8e95ea2b10c2a8ad82bef"], "url": "https://github.com/neo4j/neo4j/issues/1406", "gitStatsSummary": {"insertions": 9, "gitFilesChange": 2, "lines": 11, "deletions": 2}, "numCommits": 1, "commits": {"6905f76005b480459ef8e95ea2b10c2a8ad82bef": {"commitUser": "jakewins", "commitGHEventType": "closed"}, "5f95e03723b8c2c50bf678dc176cbca4790b64ce": {"commitUser": "jakewins", "commitGHEventType": "referenced"}}, "ttf": 18.00027777777778, "user": "technige", "changesInPackagesSPOON": ["org.neo4j.server.rest.transactional.TransactionFacade"], "changesInPackagesGIT": ["community/server/src/docs/dev/rest-api/transactional.asciidoc", "community/server/src/main/java/org/neo4j/server/rest/transactional"], "body": "I'm currently testing the transaction endpoint against 2.0.0-M06. It appears that when asking for results in traditional REST format, the URIs returned are missing the **/db/data** portion.\n\nThis can be seen with a quick cURL:\n\n```\n$ curl -X POST http://localhost:7474/db/data/transaction/commit -H 'Content-Type: application/json' -d '{\"statements\":[{\"statement\":\"CREATE (a) RETURN a\",\"resultDataContents\":[\"REST\"]}]}'\n\n{\n    \"errors\": [], \n    \"results\": [\n        {\n            \"columns\": [\n                \"a\"\n            ], \n            \"data\": [\n                {\n                    \"rest\": [\n                        {\n                            \"all_relationships\": \"http://localhost:7474/node/9/relationships/all\", \n                            \"all_typed_relationships\": \"http://localhost:7474/node/9/relationships/all/{-list|&|types}\", \n                            \"create_relationship\": \"http://localhost:7474/node/9/relationships\", \n                            \"data\": {}, \n                            \"incoming_relationships\": \"http://localhost:7474/node/9/relationships/in\", \n                            \"incoming_typed_relationships\": \"http://localhost:7474/node/9/relationships/in/{-list|&|types}\", \n                            \"labels\": \"http://localhost:7474/node/9/labels\", \n                            \"outgoing_relationships\": \"http://localhost:7474/node/9/relationships/out\", \n                            \"outgoing_typed_relationships\": \"http://localhost:7474/node/9/relationships/out/{-list|&|types}\", \n                            \"paged_traverse\": \"http://localhost:7474/node/9/paged/traverse/{returnType}{?pageSize,leaseTime}\", \n                            \"properties\": \"http://localhost:7474/node/9/properties\", \n                            \"property\": \"http://localhost:7474/node/9/properties/{key}\", \n                            \"self\": \"http://localhost:7474/node/9\", \n                            \"traverse\": \"http://localhost:7474/node/9/traverse/{returnType}\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n}\n```\n\nHere, self should be **http://localhost:7474/db/data/node/9**, not **http://localhost:7474/node/9**.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 3, "DEL": 1, "INS": 1, "spoonFilesChanged": 1, "MOV": 1}, "title": "Transaction endpoint: broken URIs in traditional REST output", "statsSkippedReason": "", "closed": "2013-11-20 13:18:20", "commitsDetails": [{"commitUser": "jakewins", "commitDateTime": "2013-11-20 02:10:54", "commitHash": "6905f76005b480459ef8e95ea2b10c2a8ad82bef", "commitParents": ["b75312862ad14e94a8960b60449bcabebdebd348"], "commitGHEventType": "closed", "nameRev": "6905f76005b480459ef8e95ea2b10c2a8ad82bef tags/2.0.0~61^2~71^2", "commitGitStats": [{"insertions": 2, "lines": 2, "filePath": "community/server/src/docs/dev/rest-api/transactional.asciidoc", "deletions": 0}, {"insertions": 30, "lines": 30, "filePath": "community/server/src/test/java/org/neo4j/server/rest/transactional/TransactionDocTest.java", "deletions": 0}, {"insertions": 7, "lines": 9, "filePath": "community/server/src/main/java/org/neo4j/server/rest/transactional/TransactionFacade.java", "deletions": 2}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "DEL": 1, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.transactional.TransactionFacade"}], "spoonFilePath": "TransactionFacade.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.TransactionDocTest.execute_statements_in_an_open_transaction_using_REST()"}], "spoonFilePath": "TransactionDocTest.java"}], "commitMessage": "Fixes #1406\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-11-20 02:10:54"}, {"commitUser": "jakewins", "commitDateTime": "2013-11-20 05:18:20", "commitHash": "5f95e03723b8c2c50bf678dc176cbca4790b64ce", "commitParents": ["f6af993b32bd73e3c0416ba5ebd2a332de2daf4f", "6905f76005b480459ef8e95ea2b10c2a8ad82bef"], "commitGHEventType": "referenced", "nameRev": "5f95e03723b8c2c50bf678dc176cbca4790b64ce tags/2.0.0~61^2~71", "commitGitStats": [{"insertions": 2, "lines": 2, "filePath": "community/server/src/docs/dev/rest-api/transactional.asciidoc", "deletions": 0}, {"insertions": 30, "lines": 30, "filePath": "community/server/src/test/java/org/neo4j/server/rest/transactional/TransactionDocTest.java", "deletions": 0}, {"insertions": 7, "lines": 9, "filePath": "community/server/src/main/java/org/neo4j/server/rest/transactional/TransactionFacade.java", "deletions": 2}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 3, "DEL": 1, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.transactional.TransactionFacade"}], "spoonFilePath": "TransactionFacade.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.TransactionDocTest.execute_statements_in_an_open_transaction_using_REST()"}], "spoonFilePath": "TransactionDocTest.java"}], "commitMessage": "Merge pull request #1511 from peterneubauer/master\n\nFixes #1406", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-11-20 05:18:20"}], "created": "2013-11-01 15:27:09"}, {"labels": ["bug"], "filteredCommits": ["e5aa8717ad1a584f83b9cea1ee81e6a79f94588d"], "url": "https://github.com/neo4j/neo4j/issues/1395", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 1, "lines": 6, "deletions": 3}, "numCommits": 1, "commits": {"e5aa8717ad1a584f83b9cea1ee81e6a79f94588d": {"commitUser": "tinwelint", "commitGHEventType": "closed"}, "ee5bf325fe9b6feaa0257038ffe45c0288d07f31": {"commitUser": "tinwelint", "commitGHEventType": "referenced"}}, "ttf": 48.000277777777775, "user": "jotomo", "changesInPackagesSPOON": ["org.neo4j.shell.impl.JLineConsole.newConsoleOrNullIfNotFound(org.neo4j.shell.ShellClient)"], "changesInPackagesGIT": ["community/shell/src/main/java/org/neo4j/shell/impl"], "body": "The shell writes the history file to $PWD/.shell_history. This creates this file in all sorts of places and can be somewhat annoying as well as breaking the shell when the user has no write permission in the current directorp (as experienced here https://groups.google.com/forum/#!topic/neo4j/4RVKnET9nlc).\n\nWould a patch to change this behaviour to write to ~/.neo4j_shell_history instead be welcome? There might be an issue with multiple shells open at the same time, writing into the same history file, but that problem also exists when multiple shells are started from the same directory.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "spoonFilesChanged": 1, "MOV": 0}, "title": "Shell: move history file to user directory", "statsSkippedReason": "", "closed": "2013-12-19 08:46:21", "commitsDetails": [{"commitUser": "tinwelint", "commitDateTime": "2013-11-01 18:30:12", "commitHash": "e5aa8717ad1a584f83b9cea1ee81e6a79f94588d", "commitParents": ["85cbda6c0d62ac4689fea6d8102358bc1cec9baf"], "commitGHEventType": "closed", "nameRev": "e5aa8717ad1a584f83b9cea1ee81e6a79f94588d tags/2.0.1~124^2", "commitGitStats": [{"insertions": 3, "lines": 6, "filePath": "community/shell/src/main/java/org/neo4j/shell/impl/JLineConsole.java", "deletions": 3}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.impl.JLineConsole.newConsoleOrNullIfNotFound(org.neo4j.shell.ShellClient)"}], "spoonFilePath": "JLineConsole.java"}], "commitMessage": "Shell: save history in home dir. Closes #1395.\n\nSpecifically, $PWD/.shell_history is now ~/.neo4j_shell_history.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-10-31 18:04:15"}, {"commitUser": "tinwelint", "commitDateTime": "2013-12-19 00:46:19", "commitHash": "ee5bf325fe9b6feaa0257038ffe45c0288d07f31", "commitParents": ["1a5d2a10c6f1c89cc14079a0a97e328e949d7ea0", "e5aa8717ad1a584f83b9cea1ee81e6a79f94588d"], "commitGHEventType": "referenced", "nameRev": "ee5bf325fe9b6feaa0257038ffe45c0288d07f31 tags/2.0.1~124", "commitGitStats": [{"insertions": 3, "lines": 6, "filePath": "community/shell/src/main/java/org/neo4j/shell/impl/JLineConsole.java", "deletions": 3}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.shell.impl.JLineConsole.newConsoleOrNullIfNotFound(org.neo4j.shell.ShellClient)"}], "spoonFilePath": "JLineConsole.java"}], "commitMessage": "Merge pull request #1726 from jotomo/shell-history-to-home-dir\n\nShell: save history in home dir. Closes #1395.", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-12-19 00:46:19"}], "created": "2013-10-31 08:59:30"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1354", "title": "Returning json array from cypher query through rest api is giving [Ljava.lang.String;@1817218 - 2.0.0 M06", "closed": "2013-10-29 10:18:00", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2013-10-24 00:35:43", "user": "ghost", "body": "I have a simple string array - items [\"one\",\"two\",\"three\"]\n\nwhen I try the following cypher query through the rest api ...\nMATCH .... RETURN {items:n.items}\n\nI get {items: '[Ljava.lang.String;@1817218'}. \n\nThis should be [\"one\",\"two\",\"three\"]\n"}, {"labels": ["bug", "build"], "filteredCommits": ["36e971777dda19d3441c13f1d8e0ba8ec54f248c"], "url": "https://github.com/neo4j/neo4j/issues/1348", "gitStatsSummary": {"insertions": 8, "gitFilesChange": 3, "lines": 279, "deletions": 271}, "numCommits": 1, "commits": {"36e971777dda19d3441c13f1d8e0ba8ec54f248c": {"commitUser": "digitalstain", "commitGHEventType": "closed"}}, "ttf": 36.000277777777775, "user": "neoecos", "changesInPackagesGIT": ["packaging/installer-linux/installer-debian/src/main/resources/enterprise/debian/neo4j-service", "packaging/installer-linux/installer-debian/src/main/resources/{advanced/debian => common}/neo4j-service", "packaging/installer-linux/installer-debian/src/main/resources/community/debian/neo4j-service"], "body": "With the last update of the debian package, neo4j is running under the root user, not neo4j as it was doing in the previous version.\n\n```\nps aux | grep neo4j\nroot      9122 50.2  3.2 3329940 129676 ?      Sl   16:02   0:09 /usr/bin/java -cp /var/lib/neo4j/lib/concurrentlinkedhashmap-lru-1.3.1.jar:/var/lib/neo4j/lib/geronimo-jta_1.1_spec-1.1.1.jar:/var/lib/neo4j/lib/lucene-core-3.6.2.jar:/var/lib/neo4j/lib/neo4j-backup-1.9.4.jar:/var/lib/neo4j/lib/neo4j-cluster-1.9.4.jar:/var/lib/neo4j/lib/neo4j...\n\napt-cache show neo4j-enterprise\nPackage: neo4j-enterprise\nPriority: optional\nSection: misc\nInstalled-Size: 61158\nMaintainer: Admins <admins@neotechnology.com>\nArchitecture: all\nVersion: 1.9.4\nReplaces: neo4j, neo4j-advanced\nDepends: daemon, adduser, psmisc, lsof, default-jre, lsb-base\nFilename: stable/neo4j-enterprise_1.9.4_all.deb\nSize: 40603278\nMD5sum: e27bbeb9e526e4552a27cacb335ce911\nSHA1: 689c39482a662671702acfb6a64c92bd9a562af3\nSHA256: \n719a052013a3003021f2d45b4d73365264d7e7044692df56b15a44b4b952e1b9\nSHA512:\n0ca8ad3a6e4591dc1329c9d88db2e20030c7e2a1ce16ca7a79c48aa2dd37fb502d27f84    960875d0d608af906a26aec735dad71be6eba4054bb20ec5f501b12de\nDescription: graph database server\nNeo4j server is a database that stores data as graphs rather than tables.\nDescription-md5: c4d9bdf1a9a0f5a06cbfb8656b30f12f\nHomepage: http://neo4j.org/\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Debian service running with privileged user with neo4j-enterprise 1.9.4", "statsSkippedReason": "", "closed": "2013-11-28 20:00:05", "commitsDetails": [{"commitUser": "digitalstain", "commitDateTime": "2013-11-15 13:13:25", "commitHash": "36e971777dda19d3441c13f1d8e0ba8ec54f248c", "commitParents": ["202cebb93def0b0c54054e1462595f4e31e464b7"], "commitGHEventType": "closed", "nameRev": "36e971777dda19d3441c13f1d8e0ba8ec54f248c tags/2.0.0~56^2~1^2~1^2~22", "commitGitStats": [{"insertions": 10, "lines": 12, "filePath": "packaging/installer-linux/installer-debian/build.xml", "deletions": 2}, {"insertions": 8, "lines": 15, "filePath": "packaging/installer-linux/installer-debian/src/main/resources/{advanced/debian => common}/neo4j-service", "deletions": 7}, {"insertions": 0, "lines": 132, "filePath": "packaging/installer-linux/installer-debian/src/main/resources/community/debian/neo4j-service", "deletions": 132}, {"insertions": 0, "lines": 132, "filePath": "packaging/installer-linux/installer-debian/src/main/resources/enterprise/debian/neo4j-service", "deletions": 132}], "commitSpoonAstDiffStats": [], "commitMessage": "Changes the user under which the neo4j service runs as, under Debian\n\nThe file /etc/default/neo4j will be sourced and the NEO_USER variable\n discovered, defaulting to the value \"neo4j\". That is the user that\n the postinstall scripts assigns ownership of the installation files\n and now this is the user that the start-stop-daemon will start the\n process as.\n\n Also with refactorings in the init script, and removal of duplicate\n copies of the init script.\n\nFixes #1348 (https://github.com/neo4j/neo4j/issues/1348)\n\nRefactorings to init script.\n\nRefactoring: remove duplicate init scripts.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-11-14 15:35:15"}], "created": "2013-10-22 21:09:08"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1346", "title": "Allow custom Analyzers for indexing in Neo4j 2+", "closed": "2015-08-07 19:19:35", "commitsDetails": [], "commits": {}, "ttf": 654.0002777777778, "created": "2013-10-22 16:52:59", "user": "ccondit", "body": "Neo4j 1.x allowed clients to supply a custom Lucene Analyzer class providing tremendous flexibility for searching Neo4j graphs. As of 2.0.0M6 there's no way to specify such a custom analyzer with the new schema indexes. It would be a great benefit to re-enable this feature.\n\nSee also:\nhttp://stackoverflow.com/questions/19455802/custom-analyzer-with-neo4js-automatic-indexing\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1320", "title": "Tx event handlers called multiple times upon a single commit", "closed": "2013-11-01 15:44:13", "commitsDetails": [], "commits": {}, "ttf": 15.000277777777777, "created": "2013-10-16 16:41:01", "user": "bachmanm", "body": "Transaction event handlers in Neo4j 2.0.0-M06 get called multiple times, sometimes reporting no modifications, upon success. See failing test below.\n\n```\n@Test\npublic void handlerShouldBeCalledOnceUponSuccess() {\n    GraphDatabaseService database = new TestGraphDatabaseFactory().newImpermanentDatabase();\n\n    final AtomicInteger numberOfInvocations = new AtomicInteger(0);\n\n    database.registerTransactionEventHandler(new TransactionEventHandler<Void>() {\n        @Override\n        public Void beforeCommit(TransactionData data) throws Exception {\n            numberOfInvocations.incrementAndGet();\n            return null;\n        }\n\n        @Override\n        public void afterCommit(TransactionData data, Void state) {\n        }\n\n        @Override\n        public void afterRollback(TransactionData data, Void state) {\n        }\n    });\n\n    try (Transaction tx = database.beginTx()) {\n        database.getNodeById(0).setProperty(\"test\", \"test\");\n        tx.success();\n    }\n\n    assertEquals(1, numberOfInvocations.get());\n}\n```\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["fef03d3a2b7d6887f8e4558f2c1251496140f33c"], "url": "https://github.com/neo4j/neo4j/issues/1313", "gitStatsSummary": {"insertions": 6, "gitFilesChange": 1, "lines": 8, "deletions": 2}, "numCommits": 1, "commits": {"fef03d3a2b7d6887f8e4558f2c1251496140f33c": {"commitUser": "systay", "commitGHEventType": "closed"}, "1b0423b710a06fe7c549d096e9af52cf09e5dfaf": {"commitUser": "boggle", "commitGHEventType": "referenced"}}, "ttf": 12.000277777777777, "user": "freeeve", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/compiler"], "body": "```\nWITH 1 AS x \nRETURN 1 + x\nError: Unknown identifier `x`.\n```\n\nworkaround:\n\n```\nWITH -1 AS y \nWITH 1 AS x \nRETURN 1 + x\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "Cypher 2.0.0-M06: identifiers lost when starting with WITH", "statsSkippedReason": "", "closed": "2013-10-28 16:04:08", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-10-25 14:27:50", "commitHash": "fef03d3a2b7d6887f8e4558f2c1251496140f33c", "commitParents": ["4002328b87493cfad96884080ea3d18e3ddb7fc1"], "commitGHEventType": "closed", "nameRev": "fef03d3a2b7d6887f8e4558f2c1251496140f33c tags/2.0.0-RC1~169^2", "commitGitStats": [{"insertions": 5, "lines": 5, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/CHANGES.txt", "deletions": 1}, {"insertions": 6, "lines": 8, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/pipes/ExtractPipe.scala", "deletions": 2}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #1313 - identifiers lost when starting with WITH\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-10-25 14:27:50"}, {"commitUser": "boggle", "commitDateTime": "2013-10-28 09:04:06", "commitHash": "1b0423b710a06fe7c549d096e9af52cf09e5dfaf", "commitParents": ["60ae5cc9773fe78158b093b307ba97e4a4d2c0d1", "fef03d3a2b7d6887f8e4558f2c1251496140f33c"], "commitGHEventType": "referenced", "nameRev": "1b0423b710a06fe7c549d096e9af52cf09e5dfaf tags/2.0.0-RC1~169", "commitGitStats": [{"insertions": 5, "lines": 5, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/CHANGES.txt", "deletions": 1}, {"insertions": 6, "lines": 8, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/compiler/v2_0/pipes/ExtractPipe.scala", "deletions": 2}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #1360 from systay/1313\n\nFixes #1313 - identifiers lost when starting with WITH", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-10-28 09:04:06"}], "created": "2013-10-16 04:14:49"}, {"labels": ["bug"], "filteredCommits": ["463c1020e25304b18f99c1246be56f5eb24989fe"], "url": "https://github.com/neo4j/neo4j/issues/1304", "gitStatsSummary": {"insertions": 24, "gitFilesChange": 1, "lines": 33, "deletions": 9}, "numCommits": 1, "commits": {"463c1020e25304b18f99c1246be56f5eb24989fe": {"commitUser": "rickardoberg", "commitGHEventType": "referenced"}}, "ttf": 35.000277777777775, "user": "bachmanm", "changesInPackagesSPOON": ["org.neo4j.unsafe.batchinsert.BatchInserterImpl.setPrimitiveProperty(org.neo4j.kernel.impl.nioneo.store.PrimitiveRecord,java.lang.String,java.lang.Object)", "org.neo4j.unsafe.batchinsert.BatchInserterImpl"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/unsafe/batchinsert"], "body": "```\n@Test\npublic void craftedFailingTestCase() {\n    String dir = \"/tmp/\" + System.currentTimeMillis();\n    BatchInserter batchInserter = BatchInserters.inserter(dir);\n\n    long nodeId = batchInserter.createNode(Collections.<String, Object>emptyMap());\n    batchInserter.setNodeProperty(nodeId, \"array\", new byte[]{-46,1,70,43,50,3,33,51,55,116,-16,23,56,9,-10,1,3,9,23,57,2,4,12,58,12,2,70});\n    batchInserter.setNodeProperty(nodeId, \"array\", new byte[]{1});\n    batchInserter.setNodeProperty(nodeId, \"array\", new byte[]{-110,3,-122,1,43,50,3,33,51,55,-16,23,56,9,-10,1,3,9,23,57,2,4,12,58,12,2,-122,1});\n    batchInserter.setNodeProperty(nodeId, \"array\", new byte[]{2,3,-98,1,43,50,3,33,51,55,116,-16,23,56,9,-10,1,3,9,23,57,2,4,12,58,12,2,-98,1});\n\n    batchInserter.getNodeProperties(nodeId);   //fails here\n}\n```\n\nfails with \n\norg.neo4j.kernel.impl.nioneo.store.InvalidRecordException: DynamicRecord Not in use, blockId[1]\n    at org.neo4j.kernel.impl.nioneo.store.AbstractDynamicStore.getRecord(AbstractDynamicStore.java:338)\n    at org.neo4j.kernel.impl.nioneo.store.AbstractDynamicStore.getLightRecords(AbstractDynamicStore.java:283)\n    at org.neo4j.kernel.impl.nioneo.store.PropertyStore.getRecord(PropertyStore.java:368)\n    at org.neo4j.unsafe.batchinsert.BatchInserterImpl.getPropertyChain(BatchInserterImpl.java:855)\n    at org.neo4j.unsafe.batchinsert.BatchInserterImpl.getNodeProperties(BatchInserterImpl.java:590)\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 2, "UPD": 1, "TOT": 6, "DEL": 0, "INS": 4, "spoonFilesChanged": 1, "MOV": 1}, "title": "\"DynamicRecord Not in use\" when using BatchInserter", "statsSkippedReason": "", "closed": "2013-11-19 03:45:43", "commitsDetails": [{"commitUser": "rickardoberg", "commitDateTime": "2013-11-19 11:45:19", "commitHash": "463c1020e25304b18f99c1246be56f5eb24989fe", "commitParents": ["8987e8f50fa8f15574420b8ceb88e23c2ae1a48a"], "commitGHEventType": "referenced", "nameRev": "463c1020e25304b18f99c1246be56f5eb24989fe tags/2.0.0~56^2~1^2~1^2~14", "commitGitStats": [{"insertions": 24, "lines": 33, "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/BatchInserterImpl.java", "deletions": 9}, {"insertions": 51, "lines": 51, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/lifecycle/GitHub1304Test.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 5, "DEL": 0, "INS": 3, "MOV": 1, "spoonMethodName": "org.neo4j.unsafe.batchinsert.BatchInserterImpl.setPrimitiveProperty(org.neo4j.kernel.impl.nioneo.store.PrimitiveRecord,java.lang.String,java.lang.Object)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.BatchInserterImpl"}], "spoonFilePath": "BatchInserterImpl.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.lifecycle.GitHub1304Test"}], "spoonFilePath": "GitHub1304Test.java"}], "commitMessage": "Fix for https://github.com/neo4j/neo4j/issues/1304\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-11-19 11:44:58"}], "created": "2013-10-14 23:49:13"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1286", "title": "Windows Desktop: Can't edit the vmoptions file", "closed": "2015-12-05 19:02:37", "commitsDetails": [], "commits": {}, "ttf": 790.0002777777778, "created": "2013-10-06 17:16:17", "user": "luanne", "body": "If you try to edit the neo4j-community.vmoptions file via the Edit button on the Settings dialog, you get an error message that the file couldn't be edited. Stacktrace from the log below.\nNote: It worked fine later. The only thing I did was double click the actual file and select a program to open with- not sure if that helped [Windows 7]\n\njava.io.IOException: Failed to edit file:/C:/Users/admin/AppData/Roaming/neo4j-community.vmoptions. Error message: Access is denied.\n\n```\nat sun.awt.windows.WDesktopPeer.ShellExecute(WDesktopPeer.java:77)\nat sun.awt.windows.WDesktopPeer.edit(WDesktopPeer.java:58)\nat java.awt.Desktop.edit(Desktop.java:304)\nat org.neo4j.desktop.config.Environment.editFile(Environment.java:83)\nat org.neo4j.desktop.ui.EditFileActionListener.actionPerformed(EditFileActionListener.java:62)\nat javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2018)\nat javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2341)\nat javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)\nat javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)\nat javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:252)\nat java.awt.Component.processMouseEvent(Component.java:6505)\nat javax.swing.JComponent.processMouseEvent(JComponent.java:3321)\nat java.awt.Component.processEvent(Component.java:6270)\nat java.awt.Container.processEvent(Container.java:2229)\nat java.awt.Component.dispatchEventImpl(Component.java:4861)\nat java.awt.Container.dispatchEventImpl(Container.java:2287)\nat java.awt.Component.dispatchEvent(Component.java:4687)\nat java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4832)\nat java.awt.LightweightDispatcher.processMouseEvent(Container.java:4492)\nat java.awt.LightweightDispatcher.dispatchEvent(Container.java:4422)\nat java.awt.Container.dispatchEventImpl(Container.java:2273)\nat java.awt.Window.dispatchEventImpl(Window.java:2713)\nat java.awt.Component.dispatchEvent(Component.java:4687)\nat java.awt.EventQueue.dispatchEventImpl(EventQueue.java:707)\nat java.awt.EventQueue.access$000(EventQueue.java:101)\nat java.awt.EventQueue$3.run(EventQueue.java:666)\nat java.awt.EventQueue$3.run(EventQueue.java:664)\nat java.security.AccessController.doPrivileged(Native Method)\nat java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)\nat java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:87)\nat java.awt.EventQueue$4.run(EventQueue.java:680)\nat java.awt.EventQueue$4.run(EventQueue.java:678)\nat java.security.AccessController.doPrivileged(Native Method)\nat java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)\nat java.awt.EventQueue.dispatchEvent(EventQueue.java:677)\nat java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:211)\nat java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:128)\nat java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:121)\nat java.awt.WaitDispatchSupport$2.run(WaitDispatchSupport.java:182)\nat java.awt.WaitDispatchSupport$4.run(WaitDispatchSupport.java:221)\nat java.security.AccessController.doPrivileged(Native Method)\nat java.awt.WaitDispatchSupport.enter(WaitDispatchSupport.java:219)\nat java.awt.Dialog.show(Dialog.java:1072)\nat java.awt.Component.show(Component.java:1651)\nat java.awt.Component.setVisible(Component.java:1603)\nat java.awt.Window.setVisible(Window.java:1013)\nat java.awt.Dialog.setVisible(Dialog.java:1003)\nat org.neo4j.desktop.ui.MainWindow$1.actionPerformed(MainWindow.java:156)\nat javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:2018)\nat javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2341)\nat javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:402)\nat javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:259)\nat javax.swing.plaf.basic.BasicButtonListener.mouseReleased(BasicButtonListener.java:252)\nat java.awt.Component.processMouseEvent(Component.java:6505)\nat javax.swing.JComponent.processMouseEvent(JComponent.java:3321)\nat java.awt.Component.processEvent(Component.java:6270)\nat java.awt.Container.processEvent(Container.java:2229)\nat java.awt.Component.dispatchEventImpl(Component.java:4861)\nat java.awt.Container.dispatchEventImpl(Container.java:2287)\nat java.awt.Component.dispatchEvent(Component.java:4687)\nat java.awt.LightweightDispatcher.retargetMouseEvent(Container.java:4832)\nat java.awt.LightweightDispatcher.processMouseEvent(Container.java:4492)\nat java.awt.LightweightDispatcher.dispatchEvent(Container.java:4422)\nat java.awt.Container.dispatchEventImpl(Container.java:2273)\nat java.awt.Window.dispatchEventImpl(Window.java:2713)\nat java.awt.Component.dispatchEvent(Component.java:4687)\nat java.awt.EventQueue.dispatchEventImpl(EventQueue.java:707)\nat java.awt.EventQueue.access$000(EventQueue.java:101)\nat java.awt.EventQueue$3.run(EventQueue.java:666)\nat java.awt.EventQueue$3.run(EventQueue.java:664)\nat java.security.AccessController.doPrivileged(Native Method)\nat java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)\nat java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:87)\nat java.awt.EventQueue$4.run(EventQueue.java:680)\nat java.awt.EventQueue$4.run(EventQueue.java:678)\nat java.security.AccessController.doPrivileged(Native Method)\nat java.security.ProtectionDomain$1.doIntersectionPrivilege(ProtectionDomain.java:76)\nat java.awt.EventQueue.dispatchEvent(EventQueue.java:677)\nat java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:211)\nat java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:128)\nat java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:117)\nat java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:113)\nat java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:105)\nat java.awt.EventDispatchThread.run(EventDispatchThread.java:90)\n```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1279", "title": "Label REST endpoint strange behavior with duplicate labels", "closed": "2013-10-29 15:17:12", "commitsDetails": [], "commits": {}, "ttf": 26.00027777777778, "created": "2013-10-03 04:52:25", "user": "jadell", "body": "Setting the collection of labels on a node can duplicate labels\n\n```\n> curl -i -H \"Content-Type:application/json\" -H \"Accept:application/json\" -X POST 'http://localhost:7474/db/data/node/'\n```\n\nCreates a new node with id 7\n\n```\n> curl -i -H \"Content-Type:application/json\" -H \"Accept:application/json\" -X POST 'http://localhost:7474/db/data/node/7/labels' -d '\"FOOBAR\"'\n```\n\nAdds a new label \"FOOBAR\", which succeeds and can be verified by GETting the labels for node 7\n\n```\n> curl -i -H \"Content-Type:application/json\" -H \"Accept:application/json\" -X POST 'http://localhost:7474/db/data/node/7/labels' -d '[\"BAZQUX\"]'\n```\n\nAdds a new label \"BAZQUX\", which succeeds. GETting the labels for node 7 shows '[ \"FOOBAR\", \"BAZQUX\" ]'\n\n```\n> curl -i -H \"Content-Type:application/json\" -H \"Accept:application/json\" -X PUT 'http://localhost:7474/db/data/node/7/labels' -d '[\"BAZQUX\"]'\n```\n\nAlso succeeds, but GETting the labels shows a duplicate label:\n\n```\n> curl -i -H \"Content-Type:application/json\" -H \"Accept:application/json\" -X GET 'http://localhost:7474/db/data/node/7/labels'\n```\n\n'[ \"BAZQUX\", \"BAZQUX\" ]'\n\nDeleting the label only deletes one copy of it\n\n```\n> curl -i -H \"Content-Type:application/json\" -H \"Accept:application/json\" -X DELETE 'http://localhost:7474/db/data/node/7/labels/BAZQUX'\n\n> curl -i -H \"Content-Type:application/json\" -H \"Accept:application/json\" -X GET 'http://localhost:7474/db/data/node/7/labels'\n```\n\n'[ \"BAZQUX\" ]'\n\nAttempting to delete the label gives a 500 server error and leaves the following stack trace in the log:\n\n```\n==> data/log/neo4j.0.0.log <==\nOct 03, 2013 12:57:00 AM com.sun.jersey.spi.container.ContainerResponse mapMappableContainerException\nSEVERE: The RuntimeException could not be mapped to a response, re-throwing to the HTTP container\njava.lang.IllegalStateException: Label 0 not found.\n        at org.neo4j.kernel.impl.nioneo.store.labels.LabelIdArray.filter(LabelIdArray.java:60)\n        at org.neo4j.kernel.impl.nioneo.store.labels.InlineNodeLabels.remove(InlineNodeLabels.java:82)\n        at org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.removeLabelFromNode(WriteTransaction.java:2165)\n        at org.neo4j.kernel.impl.persistence.PersistenceManager.removeLabelFromNode(PersistenceManager.java:411)\n        at org.neo4j.kernel.impl.api.state.TxStateImpl.nodeDoRemoveLabel(TxStateImpl.java:378)\n        at org.neo4j.kernel.impl.api.StateHandlingStatementOperations.nodeRemoveLabel(StateHandlingStatementOperations.java:168)\n        at org.neo4j.kernel.api.operations.ConstraintEnforcingEntityOperations.nodeRemoveLabel(ConstraintEnforcingEntityOperations.java:144)\n        at org.neo4j.kernel.impl.api.LockingStatementOperations.nodeRemoveLabel(LockingStatementOperations.java:82)\n        at org.neo4j.kernel.api.OperationsFacade.nodeRemoveLabel(OperationsFacade.java:454)\n        at org.neo4j.kernel.impl.core.NodeProxy.removeLabel(NodeProxy.java:531)\n        at org.neo4j.server.rest.web.DatabaseActions.removeLabelFromNode(DatabaseActions.java:369)\n        at org.neo4j.server.rest.web.RestfulGraphDatabase.removeNodeLabel(RestfulGraphDatabase.java:510)\n        at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n        at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n        at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n        at java.lang.reflect.Method.invoke(Method.java:606)\n        at com.sun.jersey.spi.container.JavaMethodInvokerFactory$1.invoke(JavaMethodInvokerFactory.java:60)\n        at com.sun.jersey.server.impl.model.method.dispatch.AbstractResourceMethodDispatchProvider$ResponseOutInvoker._dispatch(AbstractResourceMethodDispatchProvider.java:205)\n        at com.sun.jersey.server.impl.model.method.dispatch.ResourceJavaMethodDispatcher.dispatch(ResourceJavaMethodDispatcher.java:75)\n        at org.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:132)\n        at com.sun.jersey.server.impl.uri.rules.HttpMethodRule.accept(HttpMethodRule.java:288)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.ResourceClassRule.accept(ResourceClassRule.java:108)\n        at com.sun.jersey.server.impl.uri.rules.RightHandPathRule.accept(RightHandPathRule.java:147)\n        at com.sun.jersey.server.impl.uri.rules.RootResourceClassesRule.accept(RootResourceClassesRule.java:84)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1469)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1400)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339)\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:848)\n        at org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:698)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1506)\n        at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\n        at org.eclipse.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1477)\n        at org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:503)\n        at org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:211)\n        at org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1096)\n        at org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:432)\n        at org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:175)\n        at org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1030)\n        at org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:136)\n        at org.eclipse.jetty.server.handler.HandlerList.handle(HandlerList.java:52)\n        at org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:97)\n        at org.eclipse.jetty.server.Server.handle(Server.java:445)\n        at org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:268)\n        at org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:229)\n        at org.eclipse.jetty.io.AbstractConnection$ReadCallback.run(AbstractConnection.java:358)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:601)\n        at org.eclipse.jetty.util.thread.QueuedThreadPool$3.run(QueuedThreadPool.java:532)\n        at java.lang.Thread.run(Thread.java:724)\n```\n"}, {"labels": ["bug"], "filteredCommits": ["e77cee57aa63fd2aa48c7a2541b263defdda2062"], "url": "https://github.com/neo4j/neo4j/issues/1275", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 1, "lines": 1, "deletions": 1}, "numCommits": 1, "commits": {"e77cee57aa63fd2aa48c7a2541b263defdda2062": {"commitUser": "rickardoberg", "commitGHEventType": "referenced"}}, "ttf": 43.000277777777775, "user": "justfalter", "changesInPackagesSPOON": ["org.neo4j.index.impl.lucene.LuceneTransaction.doCommit()"], "changesInPackagesGIT": ["community/lucene-index/src/main/java/org/neo4j/index/impl/lucene"], "body": "Hi there, \nI posted on the neo4j mailing list about a behavior I observed when deleting indexes in an HA cluster: [Index create/deletion replication in HA Cluster\n](https://groups.google.com/d/msg/neo4j/rYuLKAzF1lU/bWMAT27V4ewJ). Michael Hunger had said that the team was aware of this issue, but I can't find a ticket that describes the problem I'm experiencing.\n\nThe short story is that when I create an index on one neo4j cluster member (master or slave), it replicates to the other cluster members. However, when I delete that same index on a cluster member (master or slave), the index remains on the other cluster members.  I also observe the number of rolled-back transactions incrementing on the master server. \nAt the time I initially submitted my question to the mailing list, I was using Neo4j 1.9.3, but it seems to exist in 1.9.4 as well as 2.0.0 M05. \n\nHere are the steps I use to reproduce:\n1. Create an index on the master:\n   `curl -v -XPOST -H\"Content-Type: application/json\" http://localhost:7474/db/data/index/node/ -d'{\n   \"name\":\"testindex\",\n   \"config\":{\n   \"type\":\"fulltext\",\n   \"provider\":\"lucene\"\n   }\n   }'`\n2. Observe the index on all cluster members:\n   `curl -XGET http://localhost:7474/db/data/index/node/` - Present\n   `curl -XGET http://localhost:7475/db/data/index/node/` - Present\n   `curl -XGET http://localhost:7476/db/data/index/node/` - Present\n3. Delete the index from the master\n   `curl -X DELETE http://localhost:7474/db/data/index/node/testindex`\n4. Observe that the index remains on two of the three members:\n   `curl -XGET http://localhost:7474/db/data/index/node/` - Not present\n   `curl -XGET http://localhost:7475/db/data/index/node/` - Present\n   `curl -XGET http://localhost:7476/db/data/index/node/` - Present\n\nBelow is my configuration for the three services. They are all running on localhost, just different ports. \n\n```\nneo4j.properties on server #1:\nkeep_logical_logs=true\n# Enable online backups to be taken from this database.\nonline_backup_enabled=true\n# Port to listen to for incoming backup requests.\nonline_backup_server=127.0.0.1:6361\nha.server_id=1\nha.initial_hosts=localhost:5001,localhost:5002,localhost:5003\nha.server=localhost:6001\nha.cluster_server=localhost:5001\nha.pull_interval=1\n\nneo4j.properties on server #2:\nkeep_logical_logs=true\n# Enable online backups to be taken from this database.\nonline_backup_enabled=true\n# Port to listen to for incoming backup requests.\nonline_backup_server=127.0.0.1:6362\nha.server_id=2\nha.initial_hosts=localhost:5001,localhost:5002,localhost:5003\nha.server=localhost:6002\nha.cluster_server=localhost:5002\nha.pull_interval=1\n\nneo4j.properties on server #3:\nkeep_logical_logs=true\n# Enable online backups to be taken from this database.\nonline_backup_enabled=true\n# Port to listen to for incoming backup requests.\nonline_backup_server=127.0.0.1:6363\nha.server_id=3\nha.initial_hosts=localhost:5001,localhost:5002,localhost:5003\nha.server=localhost:6003\nha.cluster_server=localhost:5003\nha.pull_interval=1\n```\n\nThanks!\n\nMike\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "spoonFilesChanged": 1, "MOV": 0}, "title": "Index deletion not replicating to other cluster nodes", "statsSkippedReason": "", "closed": "2013-11-15 03:17:27", "commitsDetails": [{"commitUser": "rickardoberg", "commitDateTime": "2013-11-15 11:15:42", "commitHash": "e77cee57aa63fd2aa48c7a2541b263defdda2062", "commitParents": ["36e971777dda19d3441c13f1d8e0ba8ec54f248c"], "commitGHEventType": "referenced", "nameRev": "e77cee57aa63fd2aa48c7a2541b263defdda2062 tags/2.0.0~56^2~1^2~1^2~21", "commitGitStats": [{"insertions": 84, "lines": 84, "filePath": "enterprise/ha/src/test/java/org/neo4j/ha/TestClusterIndexDeletion.java", "deletions": 0}, {"insertions": 0, "lines": 1, "filePath": "community/lucene-index/src/main/java/org/neo4j/index/impl/lucene/LuceneTransaction.java", "deletions": 1}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.ha.TestClusterIndexDeletion"}], "spoonFilePath": "TestClusterIndexDeletion.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.index.impl.lucene.LuceneTransaction.doCommit()"}], "spoonFilePath": "LuceneTransaction.java"}], "commitMessage": "Fix for https://github.com/neo4j/neo4j/issues/1275 (delete index does not replicate to other cluster nodes)\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-11-15 11:15:42"}], "created": "2013-10-02 20:35:03"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1266", "title": "Cypher query crashes server", "closed": "2013-10-07 22:01:31", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2013-10-01 19:57:33", "user": "joeycon", "body": "When I run the following Cypher query against Neo4j 2.0\n\nMatch n:Resource where n.Id = '5' SET n :snap delete n;\n\nIt repeatably crashes the server!!\n\nYes I know - the query doesnt make sense. The 'delete n' bit was a copy paste error, and should not have been included.\n\nThe point is it crashed the server. Which is not good!!\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1261", "title": "Cypher 2.0-SNAPSHOT: multiple MERGE with UNIQUE CONSTRAINT acts weird.", "closed": "2013-10-04 08:16:34", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2013-10-01 01:50:53", "user": "freeeve", "body": "```\nneo4j-sh (0)$ CREATE CONSTRAINT ON (p:Person) ASSERT p.id IS UNIQUE;\n+-------------------+\n| No data returned. |\n+-------------------+\nConstraints added: 1\n815 ms\nneo4j-sh (0)$ MERGE (i:Item {id:1})\n>  MERGE (p:Person {id:1});\n+-------------------+\n| No data returned. |\n+-------------------+\nNodes created: 2\nProperties set: 2\nLabels added: 2\n268 ms\nneo4j-sh (0)$ MERGE (i:Item {id:2})\n>  MERGE (p:Person {id:1});\nCypherExecutionException: Node 2 already exists with label Person and property \"id\"=[1]\n```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1259", "title": "Literal map serializes boolean value to string (Cypher over REST Neo4j 2.0.0 M5+)", "closed": "2013-10-17 09:19:35", "commitsDetails": [], "commits": {}, "ttf": 16.00027777777778, "created": "2013-09-30 22:38:48", "user": "bunkat", "body": "Here is a simple `curl` example that shows setting a property with a boolean value and then getting a string back when using a literal map.\n\n```\ncurl -H Content-Type:application/json -H Accept:application/json -d '{\"params\":{\"param0\":true},\"query\":\"CREATE (u:User {test: {param0}}) RETURN {test: u.test}\"}' localhost:7474/db/data/cypher\n\n{\n  \"columns\" : [ \"{test: u.test}\" ],\n  \"data\" : [ [ {\n    \"test\" : \"true\"\n  } ] ]\n}\n```\n\nIf instead the result is returned directly, it is correctly returned as a boolean.\n\n```\ncurl -H Content-Type:application/json -H Accept:application/json -d '{\"params\":{\"param0\":true},\"query\":\"CREATE (u:User {test: {param0}}) RETURN u.test\"}' localhost:7474/db/data/cypher\n\n{\n  \"columns\" : [ \"u.test\" ],\n  \"data\" : [ [ true ] ]\n}\n```\n\nLooks like the serializer is missing a case to handle booleans correctly.\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["dfca9f26942d3e3cf1e397a36b34f4a9873f395f"], "url": "https://github.com/neo4j/neo4j/issues/1254", "gitStatsSummary": {"insertions": 113, "gitFilesChange": 3, "lines": 158, "deletions": 45}, "numCommits": 1, "commits": {"3483dc70103166165b00d4ccf0bf708f3138399d": {"commitUser": "boggle", "commitGHEventType": "referenced"}, "dfca9f26942d3e3cf1e397a36b34f4a9873f395f": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 22.00027777777778, "user": "tobycraig", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan", "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes"], "body": "I'm trying to get a query to find connections between the mutual friends of two people. I'm trying the following query on Neo4j 1.9.3, but get <null> instead of the second id:\n\nstart h=node(1),g=node(58) match h--n--g--o--h, n-[r]-o return id(n), r, id(o);\n\nsample output line from neo4j-shell:\n\n| 963   | :CONNECTED[4685] {} | <null> |\n\nDemonstration of bug: http://console.neo4j.org/?id=1ft5e4\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "Cypher returning null instead of actual value", "statsSkippedReason": "", "closed": "2013-10-21 11:56:42", "commitsDetails": [{"commitUser": "boggle", "commitDateTime": "2013-10-14 07:33:01", "commitHash": "3483dc70103166165b00d4ccf0bf708f3138399d", "commitParents": ["eab0ec10037dc934258fcd66b9289db0fb9ed0cf", "dfca9f26942d3e3cf1e397a36b34f4a9873f395f"], "commitGHEventType": "referenced", "nameRev": "3483dc70103166165b00d4ccf0bf708f3138399d tags/1.9.5~35", "commitGitStats": [{"insertions": 8, "lines": 16, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/PatternGraphTest.scala", "deletions": 8}, {"insertions": 99, "lines": 99, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/PatternGraphBuilder.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/SemanticErrorTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/PipeLazynessTest.scala", "deletions": 1}, {"insertions": 57, "lines": 57, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/PatternGraphBuilderTest.scala", "deletions": 0}, {"insertions": 20, "lines": 20, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 4, "lines": 42, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/MatchBuilder.scala", "deletions": 38}, {"insertions": 10, "lines": 16, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/MatchBuilderTest.scala", "deletions": 6}, {"insertions": 10, "lines": 17, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/PatternGraph.scala", "deletions": 7}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #1273 from systay/1254\n\nFixes #1254", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-10-14 07:33:01"}, {"commitUser": "systay", "commitDateTime": "2013-10-02 09:01:01", "commitHash": "dfca9f26942d3e3cf1e397a36b34f4a9873f395f", "commitParents": ["ecebd8c73f7b294eadec42d344cbcaf7dc49af69"], "commitGHEventType": "closed", "nameRev": "dfca9f26942d3e3cf1e397a36b34f4a9873f395f tags/1.9.5~35^2", "commitGitStats": [{"insertions": 8, "lines": 16, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/PatternGraphTest.scala", "deletions": 8}, {"insertions": 99, "lines": 99, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/PatternGraphBuilder.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/SemanticErrorTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/PipeLazynessTest.scala", "deletions": 1}, {"insertions": 57, "lines": 57, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/PatternGraphBuilderTest.scala", "deletions": 0}, {"insertions": 20, "lines": 20, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 4, "lines": 42, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/MatchBuilder.scala", "deletions": 38}, {"insertions": 10, "lines": 16, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/MatchBuilderTest.scala", "deletions": 6}, {"insertions": 10, "lines": 17, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/PatternGraph.scala", "deletions": 7}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #1254\n\nWhen breaking up a pattern into parts that can be solved\nby different matchers, we sometimes produces patterns\nthat are disconnected. This is a problem for some\nmatchers. This commit changes this to make sure only\nconnected patterns are solved for each step.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-10-01 17:25:12"}], "created": "2013-09-28 20:49:24"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1253", "title": "GraphDatabaseService create node multi labels only adding first one", "closed": "2013-10-02 15:00:28", "commitsDetails": [], "commits": {}, "ttf": 4.000277777777778, "created": "2013-09-28 14:47:37", "user": "alexfrieden", "body": "Using Neo4j-2.0.0-M3 Community\nNeo only is adding in first label\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1251", "title": "Nested literal collections in cypher (2.0.0-MD5) don't get correct type", "closed": "2013-10-17 09:28:48", "commitsDetails": [], "commits": {}, "ttf": 19.00027777777778, "created": "2013-09-27 21:13:09", "user": "rob12", "body": "This contrived example works (nested collections made using collect()):\n\nWITH collect([0,0]) as t, collect([1,2]) as u, collect([3,4]) as v, collect([5,6]) as w\nWITH t, u + v + w as z\nRETURN t, z, TAIL(REDUCE(a = t, item in z| a + [[item[0]+last(a)[0],item[1]+last(a)[1]]]))\n\nReplacing any of the nested collections with a literal fails:\n\nWITH collect([0,0]) as t, collect([1,2]) as u, collect([3,4]) as v, collect([5,6]) as w\nWITH t, u + v + w as z\nRETURN t, z, TAIL(REDUCE(a = [[0,0]], item in z| a + [[item[0]+last(a)[0],item[1]+last(a)[1]]]))\n\nClassCastException\n\norg.neo4j.cypher.internal.symbols.AnyType cannot be cast to org.neo4j.cypher.internal.symbols.CollectionType\n\nor\n\nWITH collect([0,0]) as t, collect([1,2]) as u, collect([3,4]) as v, collect([5,6]) as w\nWITH t, u + v + w as z\nRETURN t, z, TAIL(REDUCE(a = t, item in [ [1,2],[2,3],[4,5] ]| a + [[item[0]+last(a)[0],item[1]+last(a)[1]]]))\n\nClassCastException\n\norg.neo4j.cypher.internal.symbols.AnyType cannot be cast to org.neo4j.cypher.internal.symbols.CollectionType\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1243", "title": "2.0.0-M5 /db/data/label/<label>/nodes doesn't seem to work", "closed": "2015-12-05 19:03:16", "commitsDetails": [], "commits": {}, "ttf": 799.0002777777778, "created": "2013-09-27 10:15:43", "user": "gcolbert", "body": "According to http://docs.neo4j.org/chunked/milestone/rest-api-node-labels.html#rest-api-get-all-nodes-with-a-label it is possible to get all nodes with a given label.\n\nBut this doesn't seem to work with 2.0.0-M5 :\n\nhttp> get /db/data/node/3/labels\n==> 200 OK\n==> [ \"organisation\", \"\u00e9tablissement\" ]\n\nhttp> get /db/data/label/organisation/nodes\n==> 200 OK\n==> [ ]\n\nI expected to get all nodes with label \"organisation\", and so to get node 3, why does it return an empty array?\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1232", "title": "Full text index http POST gives \"invalid header\" and 500 error", "closed": "2013-11-22 04:26:23", "commitsDetails": [], "commits": {}, "ttf": 57.000277777777775, "created": "2013-09-25 16:48:10", "user": "jonam", "body": "We were not able to post larger size text to neo4j full text index in versions 1.8+ and 1.9.3. It looks like around 3900 characters or so, it starts breaking. Initially for 3871 and higher, there is a delay, and after a long pause, it comes back with invalid header message. For lengths of size 3900+ it returns back quickly with a status 500. Below 3870, it works just fine. We were able to reproduce it in a few lines of code.\n\nhttps://github.com/jonam/Neo4JExample/blob/master/src/main/java/com/redbasin/neotest/Neo4JPostFullTextTest.java\n\nWe have put the error messages in the above source. The whole project is on github, and there is a pom.xml, which can be changed to use different versions of Neo4J.\n\nLet me know if there is something we are doing wrong? As we have many entries that are larger than 3780 for the full text index.\n\nFor POST request, we are gettting back the response status code, but now processing the response otherwise. Not yet, at least.\n\nthanks\nManoj\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1222", "title": "Literal Map collections using Cypher in Neo4j 2.0.0 M5+", "closed": "2013-10-31 10:50:30", "commitsDetails": [], "commits": {}, "ttf": 37.000277777777775, "created": "2013-09-23 21:07:03", "user": "bunkat", "body": "I'm trying to use the new literal map support to return a collection of JSON objects, but am having some problems getting it to work. I'm using a private build that includes pull request #1206. \n\nStarting with the following graph:\n\n```\nCREATE (u:User {id: \"1\"}),\n  u-[:PHONE]->(:Phone {id: \"2\"}),\n  u-[:PHONE]->(:Phone {id: \"3\"});\n```\n\nI'm trying to return the user with all of their phone numbers. Before literal maps were supported, I would return nested arrays of values. This works but is incredibly brittle since I then need to parse out the arrays myself and any changes to property ordering breaks everything.\n\n```\nMATCH (u:User)\nWHERE u.id = \"1\"\nWITH u\nMATCH u-[?:PHONE]->ph\nRETURN u.id, COLLECT([ph.id]);\n-> \"1\", [[\"2\"],[\"3\"]]\n```\n\nWith literal maps, I would like to return something like this:\n\n```\n{id: \"1\", phones: [{id: \"2\"}, {id: \"3\"}]}\n```\n\nI've tried the following but it just returns `undefined` and seems to hang the Neo4j console.\n\n```\nMATCH (u:User)\nWHERE u.id = \"1\"\nWITH u\nMATCH u-[?:PHONE]->ph\nRETURN {id: u.id, phones: COLLECT({id: ph.id})};\n-> undefined\n```\n\nHow do you return a collection of literal maps using Cypher?\n"}, {"labels": ["bug", "build"], "url": "https://github.com/neo4j/neo4j/issues/1216", "title": "Debian / Ubuntu package for version 2.0-M05 missing", "closed": "2013-10-13 22:54:20", "commitsDetails": [], "commits": {}, "ttf": 20.00027777777778, "created": "2013-09-23 08:52:49", "user": "kaazoo", "body": "Your apt repository still has 2.0-M04 as the most recent version.\n\nPlease provide version 2.0-M05. Thanks ;)\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1204", "title": "Error with comments, shell, v2.0 & \"-file\" redirection on Windows 7?", "closed": "2013-12-17 09:45:49", "commitsDetails": [], "commits": {}, "ttf": 89.00027777777778, "created": "2013-09-18 18:03:59", "user": "bassman99", "body": "Any idea why Neo4jShell.bat in the bin directory doesn't like \"//\" comments when using file redirection (-file), but work fine interactively?\n\nI'm on Windows 7, with the latest milestone 5 v2.0 Neo4J release.  When I use redirection (-file) with a script, script commands work OK, but comments (//) give me an error.  No such problem interactively.\n\nAny words of wisdom?\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1191", "title": "Cypher: 2.0M05 exception thrown if you set two maps with different keys in a transaction", "closed": "2013-11-14 17:05:41", "commitsDetails": [], "commits": {}, "ttf": 58.000277777777775, "created": "2013-09-17 02:20:23", "user": "freeeve", "body": "stack trace: \nhttps://gist.github.com/wfreeman/6589282\n\ncode to reproduce:\nhttps://gist.github.com/wfreeman/6589286\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1183", "title": "BUG: CREATE does not work with backward paths in cypher M05", "closed": "2013-10-01 07:57:25", "commitsDetails": [], "commits": {}, "ttf": 16.00027777777778, "created": "2013-09-14 20:31:08", "user": "agsha", "body": "```\nCREATE \n(a {name : 'a'}), \n(b {name:'b'}), \n(c{name:'c'}), \na<-[:R1]-b<-[:R2]-c \nRETURN a, b, c\n```\n\nWe expect c --[:R2]-->b\n\nBut Cypher creates c --[:R2]-->a\n\nThis is happening since M05\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1181", "title": "neo4j backup app in Embedded Mode ran into Out Of Memory", "closed": "2015-12-05 19:08:02", "commitsDetails": [], "commits": {}, "ttf": 813.0002777777778, "created": "2013-09-13 11:57:56", "user": "socialsampath", "body": "Hi,\n\nI am trying to create a simple neo4j backup app with below steps\n\n1) Create Online Backup complete/incremental\n2) Execeute few cypher queries on new backedup data\n3) Bring Neo4j up in embedded mode with Backed up DB\n4) Bring WrappingNeoServerBootstrapper up\n5) Perform some read operations through Web Admin\n6) Shutdown WrappingNeoServerBootstrapper using WrappingNeoServerBootstrapper.shutdown();\n7) Shutdown EmbeddedGraphDatabase using EmbeddedGraphDatabase.shutdown();\n8) Repeat steps 1 - 7 after regular intervals\n\nAfter couple of successful backups, shutdowns/startups it ran into OutOfMemory. The heapdump suggested below leak suspect -\n\nThe class \"java.lang.ApplicationShutdownHooks\", loaded by \"<system class loader>\", occupies 54,33,81,152 (73.14%) bytes. The memory is accumulated in one instance of \"java.lang.Object[]\" loaded by \"<system class loader>\".\n\nKeywords\njava.lang.Object[]\njava.lang.ApplicationShutdownHooks\n\nThe Accumulated objects refer to many threads as below:\n\norg.neo4j.server.Bootstrapper$1 @ 0x886d24b8 Thread-122\norg.neo4j.server.Bootstrapper$1 @ 0x8e2b61b0 Thread-260\norg.neo4j.server.Bootstrapper$1 @ 0x8ea612c8 Thread-272\norg.neo4j.server.Bootstrapper$1 @ 0x89dc36a8 Thread-158\norg.neo4j.server.Bootstrapper$1 @ 0x8b4bd4c0 Thread-196\n.....\n\nKindly suggest if I am missing something while shutting down Wrapper/GraphDB. Thanks.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1168", "title": "Calling 'last' on empty collection throws BadInputException 2.0.0M5", "closed": "2013-11-01 13:16:41", "commitsDetails": [], "commits": {}, "ttf": 51.000277777777775, "created": "2013-09-10 16:50:39", "user": "wainwrightmark", "body": "match ()-[r*0..0]-() return last(r) limit 1\n\nStackTrace:\nscala.collection.LinearSeqOptimized$class.last(LinearSeqOptimized.scala:135)\nscala.collection.immutable.List.last(List.scala:84)\norg.neo4j.cypher.internal.commands.expressions.LastFunction.compute(LastFunction.scala:27)\norg.neo4j.cypher.internal.commands.expressions.NullInNullOutExpression.apply(NullInNullOutExpression.scala:29)\norg.neo4j.cypher.internal.pipes.ExtractPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(ExtractPipe.scala:47)\norg.neo4j.cypher.internal.pipes.ExtractPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(ExtractPipe.scala:45)\nscala.collection.immutable.Map$Map1.foreach(Map.scala:109)\norg.neo4j.cypher.internal.pipes.ExtractPipe$$anonfun$internalCreateResults$1.apply(ExtractPipe.scala:45)\norg.neo4j.cypher.internal.pipes.ExtractPipe$$anonfun$internalCreateResults$1.apply(ExtractPipe.scala:44)\nscala.collection.Iterator$$anon$11.next(Iterator.scala:328)\norg.neo4j.cypher.internal.pipes.SlicePipe.internalCreateResults(SlicePipe.scala:39)\norg.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:71)\norg.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:68)\norg.neo4j.cypher.internal.executionplan.ExecutionPlanBuilder.org$neo4j$cypher$internal$executionplan$ExecutionPlanBuilder$$prepareStateAndResult(ExecutionPlanBuilder.scala:153)\norg.neo4j.cypher.internal.executionplan.ExecutionPlanBuilder$$anonfun$1.apply(ExecutionPlanBuilder.scala:130)\norg.neo4j.cypher.internal.executionplan.ExecutionPlanBuilder$$anonfun$1.apply(ExecutionPlanBuilder.scala:129)\norg.neo4j.cypher.internal.executionplan.ExecutionPlanBuilder$$anon$1.execute(ExecutionPlanBuilder.scala:51)\norg.neo4j.cypher.ExecutionEngine$$anonfun$execute$1.apply(ExecutionEngine.scala:70)\norg.neo4j.cypher.ExecutionEngine$$anonfun$execute$1.apply(ExecutionEngine.scala:69)\norg.neo4j.cypher.ExecutionEngine.prepare(ExecutionEngine.scala:143)\norg.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:69)\norg.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:93)\norg.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:80)\norg.neo4j.server.rest.web.CypherService.cypher(CypherService.java:100)\njava.lang.reflect.Method.invoke(Unknown Source)\norg.neo4j.server.rest.transactional.TransactionalRequestDispatcher.dispatch(TransactionalRequestDispatcher.java:132)\norg.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\n\nFor comparison, using head instead of last returns null.\n\nAn (ugly) workaround is using \"reduce(x = null, y in r | y)\"  instead of \"last(r)\".\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1114", "title": "loosing identifiers after match (2.0)", "closed": "2014-06-10 08:51:33", "commitsDetails": [], "commits": {}, "ttf": 285.0002777777778, "created": "2013-08-28 12:53:55", "user": "jexp", "body": "```\nSTART n=node(1), h=node(0) \nWITH n, h \nMATCH n-[:KNOWS]->o \nRETURN collect(o) + [h]\nError: Unknown identifier `h`.\n```\n\nhttp://console.neo4j.org/r/744sqt\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1105", "title": "BatchInserter setNodeProperty (2.0M04)", "closed": "2013-10-17 10:00:09", "commitsDetails": [], "commits": {}, "ttf": 52.000277777777775, "created": "2013-08-26 05:03:38", "user": "freeeve", "body": "running `setNodeProperty()` multiple times with different types of properties seems to fail sometimes (causing a corrupt propertystore). I'll come up with a specific example test, but this is so I don't forget. My scenario was converting a string to an array of strings.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1097", "title": "TransactionNotPresentOnMasterException", "closed": "2013-12-17 12:16:26", "commitsDetails": [], "commits": {}, "ttf": 118.00027777777778, "created": "2013-08-21 11:15:06", "user": "nadavfin", "body": "Hi,\n\nI configured a cluster (with and without arbiter) 3 instances include master.\nVersion: 2.x m04.\n\nI have starting to get the following Error:\n2013-08-21 11:11:54.893+0000 ERROR [o.n.k.h.c.m.MasterServer]: Could not finish off dead channel\norg.neo4j.com.TransactionNotPresentOnMasterException: Transaction RequestContext[session: 1377077593803, ID:3, eventIdentifier:108, [lucene-index/1, nioneodb/14089]] has either timed out on the master or was not started on this master. There may have been a master switch between the time this transaction started and up to now. This transaction cannot continue since the state from the previous master isn't transferred.\n    at org.neo4j.kernel.ha.com.master.MasterImpl.suspendOtherAndResumeThis(MasterImpl.java:290) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.ha.com.master.MasterImpl.finishTransaction(MasterImpl.java:476) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.ha.com.master.MasterServer.finishOffChannel(MasterServer.java:57) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.com.Server.tryToFinishOffChannel(Server.java:402) ~[neo4j-com-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.com.Server$4.run(Server.java:581) ~[neo4j-com-2.0.0-M04.jar:2.0.0-M04]\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) ~[na:1.7.0_25]\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) ~[na:1.7.0_25]\n    at java.util.concurrent.FutureTask.run(FutureTask.java:166) ~[na:1.7.0_25]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) ~[na:1.7.0_25]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) ~[na:1.7.0_25]\n    at java.lang.Thread.run(Thread.java:724) ~[na:1.7.0_25]\n2013-08-21 11:11:54.900+0000 ERROR [o.n.k.h.c.m.MasterServer]: Could not finish off dead channel\norg.neo4j.com.TransactionNotPresentOnMasterException: Transaction RequestContext[session: 1377077593803, ID:3, eventIdentifier:108, [lucene-index/1, nioneodb/14089]] has either timed out on the master or was not started on this master. There may have been a master switch between the time this transaction started and up to now. This transaction cannot continue since the state from the previous master isn't transferred.\n    at org.neo4j.kernel.ha.com.master.MasterImpl.suspendOtherAndResumeThis(MasterImpl.java:290) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.ha.com.master.MasterImpl.finishTransaction(MasterImpl.java:476) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.ha.com.master.MasterServer.finishOffChannel(MasterServer.java:57) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.com.Server.tryToFinishOffChannel(Server.java:402) ~[neo4j-com-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.com.Server$4.run(Server.java:581) ~[neo4j-com-2.0.0-M04.jar:2.0.0-M04]\n    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) ~[na:1.7.0_25]\n    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334) ~[na:1.7.0_25]\n    at java.util.concurrent.FutureTask.run(FutureTask.java:166) ~[na:1.7.0_25]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) ~[na:1.7.0_25]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) ~[na:1.7.0_25]\n    at java.lang.Thread.run(Thread.java:724) ~[na:1.7.0_25]\n2013-08-21 11:11:54.901+0000 ERROR [o.n.k.h.c.m.MasterServer]: Could not finish off dead channel\norg.neo4j.com.TransactionNotPresentOnMasterException: Transaction RequestContext[session: 1377077593803, ID:3, eventIdentifier:108, [lucene-index/1, nioneodb/14089]] has either timed out on the master or was not started on this master. There may have been a master switch between the time this transaction started and up to now. This transaction cannot continue since the state from the previous master isn't transferred.\n    at org.neo4j.kernel.ha.com.master.MasterImpl.suspendOtherAndResumeThis(MasterImpl.java:290) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.ha.com.master.MasterImpl.finishTransaction(MasterImpl.java:476) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.ha.com.master.MasterServer.finishOffChannel(MasterServer.java:57) ~[neo4j-ha-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.com.Server.tryToFinishOffChannel(Server.java:402) [neo4j-com-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.com.Server.tryToFinishOffChannel(Server.java:395) [neo4j-com-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.com.Server$ServerHandler.channelDisconnected(Server.java:373) ~[neo4j-com-2.0.0-M04.jar:2.0.0-M04]\n    at org.jboss.netty.channel.SimpleChannelHandler.handleUpstream(SimpleChannelHandler.java:120) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:560) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.DefaultChannelPipeline$DefaultChannelHandlerContext.sendUpstream(DefaultChannelPipeline.java:787) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.cleanup(FrameDecoder.java:493) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.handler.codec.frame.FrameDecoder.channelDisconnected(FrameDecoder.java:365) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.SimpleChannelUpstreamHandler.handleUpstream(SimpleChannelUpstreamHandler.java:102) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:560) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.DefaultChannelPipeline.sendUpstream(DefaultChannelPipeline.java:555) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.Channels.fireChannelDisconnected(Channels.java:396) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.close(AbstractNioWorker.java:336) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.NioWorker.read(NioWorker.java:93) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.process(AbstractNioWorker.java:107) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioSelector.run(AbstractNioSelector.java:312) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.AbstractNioWorker.run(AbstractNioWorker.java:88) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.channel.socket.nio.NioWorker.run(NioWorker.java:178) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.util.ThreadRenamingRunnable.run(ThreadRenamingRunnable.java:108) ~[netty-3.6.3.Final.jar:na]\n    at org.jboss.netty.util.internal.DeadLockProofWorker$1.run(DeadLockProofWorker.java:42) ~[netty-3.6.3.Final.jar:na]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) ~[na:1.7.0_25]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) ~[na:1.7.0_25]\n    at java.lang.Thread.run(Thread.java:724) ~[na:1.7.0_25]\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1093", "title": "NPE in Cypher 2.0", "closed": "2013-10-01 13:38:32", "commitsDetails": [], "commits": {}, "ttf": 42.000277777777775, "created": "2013-08-20 09:00:00", "user": "peterneubauer", "body": "See http://gist.neo4j.org/?6268488, first query for details.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1073", "title": "XAException and Master/Slave disconnections in HA mode", "closed": "2015-12-05 06:48:15", "commitsDetails": [], "commits": {}, "ttf": 843.0002777777778, "created": "2013-08-14 05:35:09", "user": "sampb4u", "body": "Hi,\nI am doing a POC where in I am using neo4j in embedded mode but with HA enabled. I am running neo4j on 3 different servers(embedded but in HA). Below are the details of the environment. After having a stress run for around 60 hours, the following exceptions are being thrown. This is happening almost every time I start the application with high load(performing stress) and after 30-40 hrs of stress run, the following exceptions are being thrown.\n\nThe logs of the master and slave machines are placed at github. It would be really really helpful if we can get the root cause of these exceptions.\n\nNeo4j - 1.9.2\nOS - Red Hat Enterprise Linux Server release 5.9 (Tikanga)\nJRE version: 6.0_21-b06 (Due to the environment where we still have JRE6, I am forced to go with JRE6. This will be updated in a few days. But based on the exceptions, I feel they are not dependent on JRE version, as all the functionality is proper. )\n\nRequests per second : Around 120-140 (60-65% are reads, remaining writes. All the requests are equally distributed to 3 servers)\n\nBelow is the ha configuration for master(server-2): (same configurations for slaves - server-1,server3 )\n\nHA Configuration:\n\nread_only=false\nha.state_switch_timeout=20s\nha.join_timeout=300s\nha.heartbeat_interval=5s\nha.read_timeout=20s\nha.leave_timeout=30s\nha.heartbeat_timeout=11s\n# Default timeout used for clustering timeouts. Override with specific timeouts if necessary\n\nha.default_timeout=5s\n# using hashcode of the hostname for server_id\n\nha.server_id=1414338758\n# Maximum number of connections a slave can have to the master . Increased to 100\n\nha.max_concurrent_channels_per_slave=100\nha.configuration_timeout=1s\nha.initial_hosts=<server-1>:5001,<server-2>:5001,<server-3>:5001\nha.tx_push_factor=2\nha.broadcast_timeout=30s\nha.election_timeout=5s\nha.cluster_server=:5001-5099\nha.server=:6001-6011\nha.pull_interval=100ms\nha.paxos_timeout=5s\n\nI am not providing any value for \"use_memory_mapped_buffers\".\n\nPlease find the logs at : (The logs for master/slaves are at the same time.)\nhttps://gist.github.com/socialsampath/8ee43eca7323bc36973d\n\nAny help is greatly appreciated. Thanks.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1070", "title": "possible cypher/scala memory leak after redeploy on tomcat", "closed": "2015-12-05 06:51:36", "commitsDetails": [], "commits": {}, "ttf": 843.0002777777778, "created": "2013-08-13 09:17:43", "user": "wouterv", "body": "Hi,\n\nWe are using tomcat for running our webapplication backed by embedded neo4j and on redeploy we get this error:\n\naug 13, 2013 10:52:55 AM org.apache.catalina.loader.WebappClassLoader checkThreadLocalMapForLeaks\nSEVERE: The web application [] created a ThreadLocal with key of type [scala.util.DynamicVariable$$anon$1](value [scala.util.DynamicVariable$$anon$1@5d99bd24]) and a value of type [scala.None$](value [None]) but failed to remove it when the web application was stopped. Threads are going to be renewed over time to try and avoid a probable memory leak.\n\nI have looked in our maven dependencies, and the only library that is using scala is neo4j-cypher. \n\nWhen we redeploy to tomcat a couple of times we eventually get an OutOfMemoryError: PermGen space \n\nWe already added the following to the jvm args, but the only thing it did is postpone the issue:\n-XX:MaxPermSize=256m\n-XX:+CMSClassUnloadingEnabled\n-XX:+CMSPermGenSweepingEnabled\n\nI also had a head dump done and the only thing that really stands out that there are a LOT of classes in memory, which is what you would expect when a classloader cant be cleaned up.\n\nSpecs: Neo4j 1.9.2, spring-data-neo4j 2.2.1,  Windows server 2008 R2, Java 1.7.0_21, Tomcat 7.0.40\n\nSo, could this be an issue in neo4j's scala usage?\n\nThanks\nWouter\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1069", "title": "Unique Constraint in 2.0M04 causes transaction failure and requires restart", "closed": "2013-12-11 09:40:13", "commitsDetails": [], "commits": {}, "ttf": 120.00027777777778, "created": "2013-08-12 21:54:48", "user": "justinoverton", "body": "To reproduce:\n\n```\nCREATE CONSTRAINT ON (n:TestConstraints) ASSERT n.Id IS UNIQUE;\nCREATE (n:TestConstraints {Id: 'SomeId', Value: 'SomeValue'}) RETURN n;\nCREATE (n:TestConstraints {Id: 'SomeId', Value: 'SomeOtherValue'}) RETURN n;\n```\n\nFrom messages.log:\n\n```\n2013-08-12 21:52:18.281+0000 ERROR [o.n.k.i.t.TxManager]: setting TM not OK\njavax.transaction.xa.XAException: null\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.doCommit(TransactionImpl.java:572) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.TxManager.commit(TxManager.java:399) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.TxManager.commit(TxManager.java:349) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.StoreKernelTransaction.commit(StoreKernelTransaction.java:82) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.DelegatingKernelTransaction.commit(DelegatingKernelTransaction.java:51) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.StateHandlingKernelTransaction.commit(StateHandlingKernelTransaction.java:139) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.DelegatingKernelTransaction.commit(DelegatingKernelTransaction.java:51) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.LockingKernelTransaction.commit(LockingKernelTransaction.java:83) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.ReferenceCountingKernelTransaction.commit(ReferenceCountingKernelTransaction.java:67) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.commit(TransactionImpl.java:124) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.TopLevelTransaction.finish(TopLevelTransaction.java:127) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.shell.kernel.apps.TransactionProvidingApp.execute(TransactionProvidingApp.java:237) [neo4j-shell-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.shell.impl.AbstractAppServer.interpretLine(AbstractAppServer.java:115) [neo4j-shell-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.shell.kernel.GraphDatabaseShellServer.interpretLine(GraphDatabaseShellServer.java:92) [neo4j-shell-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.shell.impl.RemotelyAvailableServer.interpretLine(RemotelyAvailableServer.java:60) [neo4j-shell-2.0.0-M04.jar:2.0.0-M04]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_21]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_21]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_21]\n    at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_21]\n    at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322) [na:1.7.0_21]\n    at sun.rmi.transport.Transport$1.run(Transport.java:177) [na:1.7.0_21]\n    at sun.rmi.transport.Transport$1.run(Transport.java:174) [na:1.7.0_21]\n    at java.security.AccessController.doPrivileged(Native Method) [na:1.7.0_21]\n    at sun.rmi.transport.Transport.serviceCall(Transport.java:173) [na:1.7.0_21]\n    at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:553) [na:1.7.0_21]\n    at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:808) [na:1.7.0_21]\n    at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:667) [na:1.7.0_21]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_21]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_21]\n    at java.lang.Thread.run(Thread.java:722) [na:1.7.0_21]\nCaused by: java.lang.IllegalStateException: Index for label:24 propertyKey:2 should not require unique values.\n    at org.neo4j.kernel.api.index.IndexEntryConflictException.notAllowed(IndexEntryConflictException.java:50) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.api.index.IndexEntryConflictException.notAllowed(IndexEntryConflictException.java:57) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.OnlineIndexProxy.update(OnlineIndexProxy.java:63) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.AbstractDelegatingIndexProxy.update(AbstractDelegatingIndexProxy.java:45) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.ContractCheckingIndexProxy.update(ContractCheckingIndexProxy.java:95) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.AbstractDelegatingIndexProxy.update(AbstractDelegatingIndexProxy.java:45) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.RuleUpdateFilterIndexProxy.update(RuleUpdateFilterIndexProxy.java:49) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.AbstractDelegatingIndexProxy.update(AbstractDelegatingIndexProxy.java:45) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.IndexingService.updateIndexes(IndexingService.java:286) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.applyCommit(WriteTransaction.java:703) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.doCommit(WriteTransaction.java:645) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.xaframework.XaTransaction.commit(XaTransaction.java:321) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.xaframework.XaResourceManager.commit(XaResourceManager.java:475) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.xaframework.XaResourceHelpImpl.commit(XaResourceHelpImpl.java:64) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.doCommit(TransactionImpl.java:564) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    ... 29 common frames omitted\nCaused by: org.neo4j.kernel.api.index.PreexistingIndexEntryConflictException: Multiple nodes have property value 'SomeId':\n  node(4792)\n  node(4793)\n    at org.neo4j.kernel.impl.api.index.PropertyUpdateUniquenessValidator.validateUniqueness(PropertyUpdateUniquenessValidator.java:86) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.api.impl.index.UniqueLuceneIndexAccessor.updateAndCommit(UniqueLuceneIndexAccessor.java:45) ~[neo4j-lucene-index-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.OnlineIndexProxy.update(OnlineIndexProxy.java:59) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    ... 41 common frames omitted\n2013-08-12 21:52:18.283+0000 ERROR [o.n.k.i.t.TxManager]: TM error tx commit\norg.neo4j.graphdb.TransactionFailureException: commit threw exception\n    at org.neo4j.kernel.impl.transaction.TxManager.commit(TxManager.java:437) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.TxManager.commit(TxManager.java:349) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.StoreKernelTransaction.commit(StoreKernelTransaction.java:82) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.DelegatingKernelTransaction.commit(DelegatingKernelTransaction.java:51) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.StateHandlingKernelTransaction.commit(StateHandlingKernelTransaction.java:139) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.DelegatingKernelTransaction.commit(DelegatingKernelTransaction.java:51) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.LockingKernelTransaction.commit(LockingKernelTransaction.java:83) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.ReferenceCountingKernelTransaction.commit(ReferenceCountingKernelTransaction.java:67) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.commit(TransactionImpl.java:124) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.TopLevelTransaction.finish(TopLevelTransaction.java:127) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.shell.kernel.apps.TransactionProvidingApp.execute(TransactionProvidingApp.java:237) [neo4j-shell-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.shell.impl.AbstractAppServer.interpretLine(AbstractAppServer.java:115) [neo4j-shell-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.shell.kernel.GraphDatabaseShellServer.interpretLine(GraphDatabaseShellServer.java:92) [neo4j-shell-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.shell.impl.RemotelyAvailableServer.interpretLine(RemotelyAvailableServer.java:60) [neo4j-shell-2.0.0-M04.jar:2.0.0-M04]\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.7.0_21]\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57) ~[na:1.7.0_21]\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.7.0_21]\n    at java.lang.reflect.Method.invoke(Method.java:601) ~[na:1.7.0_21]\n    at sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:322) [na:1.7.0_21]\n    at sun.rmi.transport.Transport$1.run(Transport.java:177) [na:1.7.0_21]\n    at sun.rmi.transport.Transport$1.run(Transport.java:174) [na:1.7.0_21]\n    at java.security.AccessController.doPrivileged(Native Method) [na:1.7.0_21]\n    at sun.rmi.transport.Transport.serviceCall(Transport.java:173) [na:1.7.0_21]\n    at sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:553) [na:1.7.0_21]\n    at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:808) [na:1.7.0_21]\n    at sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:667) [na:1.7.0_21]\n    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_21]\n    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615) [na:1.7.0_21]\n    at java.lang.Thread.run(Thread.java:722) [na:1.7.0_21]\nCaused by: javax.transaction.xa.XAException: null\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.doCommit(TransactionImpl.java:572) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.TxManager.commit(TxManager.java:399) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    ... 28 common frames omitted\nCaused by: java.lang.IllegalStateException: Index for label:24 propertyKey:2 should not require unique values.\n    at org.neo4j.kernel.api.index.IndexEntryConflictException.notAllowed(IndexEntryConflictException.java:50) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.api.index.IndexEntryConflictException.notAllowed(IndexEntryConflictException.java:57) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.OnlineIndexProxy.update(OnlineIndexProxy.java:63) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.AbstractDelegatingIndexProxy.update(AbstractDelegatingIndexProxy.java:45) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.ContractCheckingIndexProxy.update(ContractCheckingIndexProxy.java:95) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.AbstractDelegatingIndexProxy.update(AbstractDelegatingIndexProxy.java:45) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.RuleUpdateFilterIndexProxy.update(RuleUpdateFilterIndexProxy.java:49) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.AbstractDelegatingIndexProxy.update(AbstractDelegatingIndexProxy.java:45) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.IndexingService.updateIndexes(IndexingService.java:286) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.applyCommit(WriteTransaction.java:703) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.doCommit(WriteTransaction.java:645) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.xaframework.XaTransaction.commit(XaTransaction.java:321) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.xaframework.XaResourceManager.commit(XaResourceManager.java:475) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.xaframework.XaResourceHelpImpl.commit(XaResourceHelpImpl.java:64) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.transaction.TransactionImpl.doCommit(TransactionImpl.java:564) [neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    ... 29 common frames omitted\nCaused by: org.neo4j.kernel.api.index.PreexistingIndexEntryConflictException: Multiple nodes have property value 'SomeId':\n  node(4792)\n  node(4793)\n    at org.neo4j.kernel.impl.api.index.PropertyUpdateUniquenessValidator.validateUniqueness(PropertyUpdateUniquenessValidator.java:86) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.api.impl.index.UniqueLuceneIndexAccessor.updateAndCommit(UniqueLuceneIndexAccessor.java:45) ~[neo4j-lucene-index-2.0.0-M04.jar:2.0.0-M04]\n    at org.neo4j.kernel.impl.api.index.OnlineIndexProxy.update(OnlineIndexProxy.java:59) ~[neo4j-kernel-2.0.0-M04.jar:2.0.0-M04]\n    ... 41 common frames omitted\n```\n\nThere are no other log files being created for some reason, though it looks like the exception has some good details.\n\nI have to restart Neo4J after this occurs, and the dupe does exist, so the transaction does not actually rollback.\n"}, {"labels": ["bug"], "filteredCommits": ["f2ed4187ca9e93f15d4ce37699ebb14c23826502"], "url": "https://github.com/neo4j/neo4j/issues/1046", "gitStatsSummary": {"insertions": 14, "gitFilesChange": 1, "lines": 14, "deletions": 0}, "numCommits": 1, "commits": {"245088f5ea996afce57404d60d956547bed3e200": {"commitUser": "apcj", "commitGHEventType": "referenced"}, "f2ed4187ca9e93f15d4ce37699ebb14c23826502": {"commitUser": "apcj", "commitGHEventType": "closed"}}, "ttf": 54.000277777777775, "user": "justinoverton", "changesInPackagesSPOON": ["org.neo4j.server.rest.transactional.Neo4jJsonCodec.writeIterator(org.codehaus.jackson.JsonGenerator,java.util.Iterator)", "org.neo4j.server.rest.transactional.Neo4jJsonCodec.writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)"], "changesInPackagesGIT": ["community/server/src/main/java/org/neo4j/server/rest/transactional"], "body": "Edit: This is neo4j-community-2.0.0-M03\n\nI was not sure what to search for, but I searched a lot of terms to see if this is a dupe issue.  So I hope that it is not.\n### This query (newlines added for clarity):\n\n```\nPOST http://localhost:7474/db/data/transaction/commit\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"statements\": [\n    {\n      \"statement\": \"START n=node({id}) \n              MATCH n-[:HAS_CABLE_END]->ce\n              WITH ce\n              MATCH a<-[:ALLOWS_PORT_A]-ce-[:ALLOWS_PORT_B]->b\n              RETURN ID(ce) as CeNodeId, COLLECT(ID(a)) as aNodeIds, COLLECT(a) as PortTypesA, COLLECT(ID(b)) as bNodeIds, COLLECT(b) as PortTypesB\",\n      \"parameters\": {\n        \"id\": 55\n      }\n    }\n  ]\n}\n```\n### This response (body expanded for clarity):\n\n```\nStatus Code: 200\nAccess-Control-Allow-Origin: *\nContent-Encoding: UTF-8\nServer: Jetty(6.1.25)\nTransfer-Encoding: chunked\nContent-Type: application/json\n\n{\n    \"results\": [{\n        \"columns\": [\"CeNodeId\", \"aNodeIds\", \"PortTypesA\", \"bNodeIds\", \"PortTypesB\"],\n        \"data\": [\n            [54, [41, 46, 41, 46],\n                [{\n                    \"id\": 41,\n                    \"graphDatabase\": {\n                        \"storeDir\": \"data\\\\graph.db\",\n                        \"storeId\": {\n                            \"creationTime\": 1375798256941,\n                            \"randomId\": -8587718381763510377,\n                            \"storeVersion\": 13843131341501958\n                        },\n                        \"config\": {\n                            \"params\": {\n                                \"store_dir\": \"data/graph.db\",\n                                \"neostore.nodestore.db.mapped_memory\": \"16M\",\n                                \"ephemeral\": \"false\",\n                                \"remote_shell_enabled\": \"true\",\n                                \"neostore.propertystore.db.arrays.mapped_memory\": \"58M\",\n                                \"neostore.propertystore.db.strings.mapped_memory\": \"51M\",\n                                \"neostore.relationshipstore.db.mapped_memory\": \"73M\",\n                                \"keep_logical_logs\": \"true\",\n                                \"neostore.propertystore.db.mapped_memory\": \"60M\",\n                                \"neo4j.ext.udc.source\": \"server\"\n                            },\n                            \"settingsClasses\": [\"org.neo4j.graphdb.factory.GraphDatabaseSettings\", \"org.neo4j.shell.ShellSettings\", \"org.neo4j.ext.udc.UdcSettings\"],\n                            \"diagnosticsIdentifier\": \"org.neo4j.kernel.configuration.Config\"\n                        },\n                        \"dependencyResolver\"\n                    }\n                }\n```\n\nI have restarted Neo4j several times and set all log levels to FINEST.  The neo4j log does not ever record anything at all.  I think an exception may be occuring that isn't caught and logged, or maybe an aborted thread.\n\nThe messages.log does contain some information. Though it seems like the error is after it started dealing with junk data.  For some reason it's spewing out config information rather than the query results.\n### Messages.log:\n\n```\n2013-08-07 17:15:59.771+0000 ERROR [o.n.s.r.t.TransactionFacade]: Failed to generate JSON output.\norg.codehaus.jackson.JsonGenerationException: Current context not an ARRAY but OBJECT\n    at org.codehaus.jackson.impl.JsonGeneratorBase._reportError(JsonGeneratorBase.java:480) ~[jackson-core-asl-1.9.7.jar:1.9.7]\n    at org.codehaus.jackson.impl.Utf8Generator.writeEndArray(Utf8Generator.java:354) ~[jackson-core-asl-1.9.7.jar:1.9.7]\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.writeRows(ExecutionResultSerializer.java:260) ~[neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.statementResult(ExecutionResultSerializer.java:99) ~[neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.TransactionHandle.executeStatements(TransactionHandle.java:259) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:190) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:110) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:199) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) [jersey-core-1.9.jar:1.9]\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) [jersey-core-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) [jersey-server-1.9.jar:1.9]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:820) [servlet-api-2.5-20081211.jar:na]\n    at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166) [jetty-6.1.25.jar:6.1.25]\n    at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.Server.handle(Server.java:326) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582) [jetty-util-6.1.25.jar:6.1.25]\n2013-08-07 17:15:59.773+0000 ERROR [o.n.s.r.t.TransactionFacade]: Failed to generate JSON output.\norg.codehaus.jackson.JsonGenerationException: Current context not an ARRAY but OBJECT\n    at org.codehaus.jackson.impl.JsonGeneratorBase._reportError(JsonGeneratorBase.java:480) ~[jackson-core-asl-1.9.7.jar:1.9.7]\n    at org.codehaus.jackson.impl.Utf8Generator.writeEndArray(Utf8Generator.java:354) ~[jackson-core-asl-1.9.7.jar:1.9.7]\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.ensureResultsFieldClosed(ExecutionResultSerializer.java:230) ~[neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.errors(ExecutionResultSerializer.java:122) ~[neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:118) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:199) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) [jersey-core-1.9.jar:1.9]\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) [jersey-core-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) [jersey-server-1.9.jar:1.9]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:820) [servlet-api-2.5-20081211.jar:na]\n    at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166) [jetty-6.1.25.jar:6.1.25]\n    at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.Server.handle(Server.java:326) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582) [jetty-util-6.1.25.jar:6.1.25]\n2013-08-07 17:15:59.774+0000 ERROR [o.n.s.r.t.TransactionFacade]: Failed to generate JSON output.\norg.codehaus.jackson.JsonGenerationException: Current context not an ARRAY but OBJECT\n    at org.codehaus.jackson.impl.JsonGeneratorBase._reportError(JsonGeneratorBase.java:480) ~[jackson-core-asl-1.9.7.jar:1.9.7]\n    at org.codehaus.jackson.impl.Utf8Generator.writeEndArray(Utf8Generator.java:354) ~[jackson-core-asl-1.9.7.jar:1.9.7]\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.ensureResultsFieldClosed(ExecutionResultSerializer.java:230) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.errors(ExecutionResultSerializer.java:122) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.ExecutionResultSerializer.finish(ExecutionResultSerializer.java:184) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.transactional.TransactionHandle.commit(TransactionHandle.java:119) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.neo4j.server.rest.web.TransactionalService$2.write(TransactionalService.java:199) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) [jersey-core-1.9.jar:1.9]\n    at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) [jersey-core-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) [jersey-server-1.9.jar:1.9]\n    at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) [jersey-server-1.9.jar:1.9]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:820) [servlet-api-2.5-20081211.jar:na]\n    at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1166) [jetty-6.1.25.jar:6.1.25]\n    at org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112) [neo4j-server-2.0.0-M03.jar:2.0.0-M03]\n    at org.mortbay.jetty.servlet.ServletHandler$CachedChain.doFilter(ServletHandler.java:1157) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:388) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.Server.handle(Server.java:326) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:212) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410) [jetty-6.1.25.jar:6.1.25]\n    at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582) [jetty-util-6.1.25.jar:6.1.25]\n```\n\nThe same query run from the console or the Cypher endpoint functions as expected.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 2, "UPD": 0, "TOT": 3, "DEL": 0, "INS": 2, "spoonFilesChanged": 1, "MOV": 1}, "title": "HTTP Transactional Endpoint returns garbled response and config when using COLLECT", "statsSkippedReason": "", "closed": "2013-10-01 07:57:17", "commitsDetails": [{"commitUser": "apcj", "commitDateTime": "2013-08-13 00:54:34", "commitHash": "245088f5ea996afce57404d60d956547bed3e200", "commitParents": ["6131ef0e3b7ef49d75bff4688cf6472ea2c919b7", "f2ed4187ca9e93f15d4ce37699ebb14c23826502"], "commitGHEventType": "referenced", "nameRev": "245088f5ea996afce57404d60d956547bed3e200 tags/2.0.0-M05~139", "commitGitStats": [{"insertions": 22, "lines": 22, "filePath": "community/server/src/test/java/org/neo4j/server/rest/TransactionFunctionalTest.java", "deletions": 0}, {"insertions": 14, "lines": 14, "filePath": "community/server/src/main/java/org/neo4j/server/rest/transactional/Neo4jJsonCodec.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.Neo4jJsonCodec.writeIterator(org.codehaus.jackson.JsonGenerator,java.util.Iterator)"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.transactional.Neo4jJsonCodec.writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)"}], "spoonFilePath": "Neo4jJsonCodec.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.TransactionFunctionalTest.should_serialize_collect_correctly()"}], "spoonFilePath": "TransactionFunctionalTest.java"}], "commitMessage": "Merge pull request #1055 from jakewins/fix-1046\n\nFix #1046", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-08-13 00:54:34"}, {"commitUser": "apcj", "commitDateTime": "2013-08-12 07:59:49", "commitHash": "f2ed4187ca9e93f15d4ce37699ebb14c23826502", "commitParents": ["5a6037343a508f5ea580978fe10b90f160e2b79c"], "commitGHEventType": "closed", "nameRev": "f2ed4187ca9e93f15d4ce37699ebb14c23826502 tags/2.0.0-M05~139^2", "commitGitStats": [{"insertions": 22, "lines": 22, "filePath": "community/server/src/test/java/org/neo4j/server/rest/TransactionFunctionalTest.java", "deletions": 0}, {"insertions": 14, "lines": 14, "filePath": "community/server/src/main/java/org/neo4j/server/rest/transactional/Neo4jJsonCodec.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.transactional.Neo4jJsonCodec.writeIterator(org.codehaus.jackson.JsonGenerator,java.util.Iterator)"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.transactional.Neo4jJsonCodec.writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)"}], "spoonFilePath": "Neo4jJsonCodec.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.TransactionFunctionalTest.should_serialize_collect_correctly()"}], "spoonFilePath": "TransactionFunctionalTest.java"}], "commitMessage": "Make transactional endpoint correctly serialize scala collection types, fixes #1046\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-08-08 14:20:48"}], "created": "2013-08-07 17:20:21"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/1033", "title": "Cypher query with >3 START points of a Node with a Relationship to itself, returns no results", "closed": "2014-06-10 09:15:26", "commitsDetails": [], "commits": {}, "ttf": 311.0002777777778, "created": "2013-08-02 15:42:15", "user": "BHilton888", "body": "Hi,\nThis issue has been raise based on my original question:\n\"I was wondering if there's a limit on the \"Multiple starting points\" on a recursive relationship? and if so is it configurable?\"\ni.e. START point of a Node with a Relationship to itself,\nAs up to 3 all works fine, > 3 no results get returned.\n\nOriginal post and sample code below, not sure if this is a bug or not, comment from nawroth suggested it possible.\n\n-best regards\n.....................................................................................\nI'm running embedded in Java using 2.0.0-M03.\n\nI was wondering if there's a limit on the \"Multiple starting points\" on a recursive relationship?\n\nand if so is it configurable?\n\nE.g.\n\nI created a Node with a relationship to itself and added it to the 'nodesIndex':\n\nNode b = graphDb.createNode();\n\nb.setProperty(\"name\", \"B\");\n\nnodesIndex.add(b, \"name\", \"B\");\n\nThen I set up a relationship to itself:\n\naRel = b.createRelationshipTo(b, RelLabels.KNOWS);\n\naRel.setProperty(\"name\", \"rel:\" + b.getProperty(\"name\") + \"-\" + b.getProperty(\"name\"));\n\nIn Java i have the following Cypher query that works fine:\n\nMap<string, object=\"\"> params = new HashMap<string, object=\"\">();\n\nparams.put(\"p1\", \"name:B\");\n\nparams.put(\"p2\", \"name:B\");\n\nparams.put(\"p3\", \"name:B\");\n\nExecutionEngine engine = new ExecutionEngine(graphDb);\n\nExecutionResult result = engine.execute(\n\nExecutionResult result = engine.execute(\"START position1=node:nodes({p1}), position2=node:nodes({p2}), position3=node:nodes({p3}) \"\n- \"MATCH position1-[aRel:KNOWS]-position2-[bRel:KNOWS]-position3 RETURN aRel, bRel\", params);\n\ngives as expected:\n\n+-----------------------------------------------------------------------------------------------------------------------------+\n\n| aRel | bRel |\n\n+-----------------------------------------------------------------------------------------------------------------------------+\n\n| :RelationshipTypeToken[name:KNOWS, id:0][1] {name:\"rel:B-B\"} | :RelationshipTypeToken[name:KNOWS, id:0][1] {name:\"rel:B-B\"} |\n\n+-----------------------------------------------------------------------------------------------------------------------------+\n\nhowever when I add another position, \"position4\" I get nothing back:\n\nparams.put(\"p1\", \"name:B\");\n\nparams.put(\"p2\", \"name:B\");\n\nparams.put(\"p3\", \"name:B\");\n\nparams.put(\"p4\", \"name:B\");\n\nExecutionEngine engine = new ExecutionEngine(graphDb);\n\nExecutionResult result = engine.execute(\n\n\"START position1=node:nodes({p1}), position2=node:nodes({p2}), position3=node:nodes({p3}), position4=node:nodes({p4}) \"\n- \"MATCH position1-[aRel:KNOWS]-position2-[bRel:KNOWS]-position3-[cRel:KNOWS]-position4 RETURN aRel, bRel, cRel\", params);\n\n+--------------------+\n\n| aRel | bRel | cRel |\n\n+--------------------+\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/1012", "title": "Transactional HTTP endpoint doesn't contain any result ...", "closed": "2013-12-09 11:08:36", "commitsDetails": [], "commits": {}, "ttf": 133.00027777777777, "created": "2013-07-29 09:27:13", "user": "nawroth", "body": "...  when parameters are put before the statement in the request json. See below.\n\nOriginal report from http://docs.neo4j.org/chunked/snapshot/rest-api-transactional.html#comment-930009921\n\nWhen changing the order of 'statement' and 'parameters' in the request json such that 'parameters' is listed first, the transaction reports that it completed successfully but contains no results. Is this intended?\n\nThe json encoder I am using likes to put the keys in alphabetical order for some reason.\n"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/997", "title": "neo4j with java query giving org.neo4j.helpers.ThisShouldNotHappenError", "closed": "2017-10-09 06:48:00", "commitsDetails": [], "commits": {}, "ttf": 1537.0002777777777, "created": "2013-07-24 13:56:21", "user": "prachikhartadkar", "body": "try{\nString query3=\"START p3=node:aProduct('productId:*')  \"+\"\\n\"+ \n\"WHERE p3.dvsn_nbr IN  [20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,4,3,2,1]\"+\n\" WITH p3 \"+\"\\n\"+\n\"MATCH p3<-[r:HAS_BOUGHT]-t  \"+\"\\n\"+\n\"RETURN p3.dvsn_nbr as p3, count(distinct t) as supp2  \"+\"\\n\"+\n\"ORDER BY p3.dvsn_nbr DESC\";\nSystem.out.println(query3);\nExecutionResult rs3 = engine.execute(query3);\n\nSystem.out.println(\"check2\");\n}catch(Exception e){\n        db.shutdown();\n}\n\n----------------------------------------error---\nERROR [org.apache.catalina.core.ContainerBase.[jboss.web].[default-host].[/MarketBasketAnalysis].[ProductServ]](http-localhost-127.0.0.1-8080-1) Servlet.service() for servlet ProductServ threw exception: org.neo4j.helpers.ThisShouldNotHappenError: Developer: Andres claims that: Need something with properties\n    at org.neo4j.cypher.internal.commands.expressions.Property.apply(Property.scala:32) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.pipes.ExtractPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(ExtractPipe.scala:47) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.pipes.ExtractPipe$$anonfun$internalCreateResults$1$$anonfun$apply$1.apply(ExtractPipe.scala:45) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at scala.collection.immutable.Map$Map1.foreach(Map.scala:109) [scala-library-2.10.0.jar:]\n    at org.neo4j.cypher.internal.pipes.ExtractPipe$$anonfun$internalCreateResults$1.apply(ExtractPipe.scala:45) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.pipes.ExtractPipe$$anonfun$internalCreateResults$1.apply(ExtractPipe.scala:44) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at scala.collection.Iterator$$anon$11.next(Iterator.scala:328) [scala-library-2.10.0.jar:]\n    at scala.collection.Iterator$class.foreach(Iterator.scala:727) [scala-library-2.10.0.jar:]\n    at scala.collection.AbstractIterator.foreach(Iterator.scala:1156) [scala-library-2.10.0.jar:]\n    at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48) [scala-library-2.10.0.jar:]\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:178) [scala-library-2.10.0.jar:]\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:45) [scala-library-2.10.0.jar:]\n    at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:259) [scala-library-2.10.0.jar:]\n    at scala.collection.AbstractIterator.to(Iterator.scala:1156) [scala-library-2.10.0.jar:]\n    at scala.collection.TraversableOnce$class.toList(TraversableOnce.scala:243) [scala-library-2.10.0.jar:]\n    at scala.collection.AbstractIterator.toList(Iterator.scala:1156) [scala-library-2.10.0.jar:]\n    at org.neo4j.cypher.internal.pipes.SortPipe.internalCreateResults(SortPipe.scala:33) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:69) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:66) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.org$neo4j$cypher$internal$executionplan$ExecutionPlanImpl$$prepareStateAndResult(ExecutionPlanImpl.scala:164) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl$$anonfun$getLazyReadonlyQuery$1.apply(ExecutionPlanImpl.scala:139) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl$$anonfun$getLazyReadonlyQuery$1.apply(ExecutionPlanImpl.scala:138) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.execute(ExecutionPlanImpl.scala:38) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:72) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:67) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:66) [neo4j-cypher-1.9.2.jar:1.9.2]\n    at com.mba.dao.hibernate.DataDAOImpl.getProdAssoc(DataDAOImpl.java:44) [classes:]\n    at com.mba.service.DataServiceImpl.getProdAssoc(DataServiceImpl.java:19) [classes:]\n    at com.mba.servelet.ProductServ.handleRequest(ProductServ.java:29) [classes:]\n    at org.springframework.web.context.support.HttpRequestHandlerServlet.service(HttpRequestHandlerServlet.java:67) [org.springframework.web_3.1.1.RELEASE.jar:3.1.1.RELEASE]\n    at javax.servlet.http.HttpServlet.service(HttpServlet.java:847) [jboss-servlet-api_3.0_spec-1.0.0.Final.jar:1.0.0.Final]\n    at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:329) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:248) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:275) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:161) [jbossweb-7.0.13.Final.jar:]\n    at org.jboss.as.web.security.SecurityContextAssociationValve.invoke(SecurityContextAssociationValve.java:153) [jboss-as-web-7.1.1.Final.jar:7.1.1.Final]\n    at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:155) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:102) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:109) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:368) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:877) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:671) [jbossweb-7.0.13.Final.jar:]\n    at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:930) [jbossweb-7.0.13.Final.jar:]\n    at java.lang.Thread.run(Thread.java:722) [rt.jar:1.7.0_09]\n\n---\n\nHi is my query.I am using neo4j-community-1.9.2 version.I am tryin to implement on a java platform.I have all the necessary jar files.All my other cypher queries are getting executed without any issues ,apart from this one\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/993", "title": "Batch exception with POST/PUT {0}/labels", "closed": "2013-10-24 04:38:36", "commitsDetails": [], "commits": {}, "ttf": 93.00027777777778, "created": "2013-07-22 23:02:40", "user": "technige", "body": "Using **neo4j-community-2.0.0-M3**...\n\nWhen executing a batch that either adds or replaces labels on a node created within the same batch, all executes correctly. When the batch contains both a POST followed by a PUT to the same labels endpoint, a failure occurs. Code below:\n\nWorks fine (POST node, PUT {0}/labels):\n\n```\ncurl -X POST http://localhost:7474/db/data/batch\n     -H 'Content-Type: application/json'\n     -d '[\n           {\"body\":{\"name\":\"Alice\"},\"to\":\"node\",\"id\":0,\"method\":\"POST\"},\n           {\"body\":[\"expert\",\"coder\"],\"to\":\"{0}/labels\",\"id\":1,\"method\":\"PUT\"}\n         ]'\n```\n\nWorks fine (POST node, POST {0}/labels):\n\n```\ncurl -X POST http://localhost:7474/db/data/batch\n     -H 'Content-Type: application/json'\n     -d '[\n           {\"body\":{\"name\":\"Alice\"},\"to\":\"node\",\"id\":0,\"method\":\"POST\"},\n           {\"body\":[\"expert\",\"coder\"],\"to\":\"{0}/labels\",\"id\":1,\"method\":\"POST\"}\n         ]'\n```\n\nFails (POST node, POST {0}/labels, PUT {0}/labels):\n\n```\ncurl -X POST http://localhost:7474/db/data/batch\n     -H 'Content-Type: application/json'\n     -d '[\n           {\"body\":{\"name\":\"Alice\"},\"to\":\"node\",\"id\":0,\"method\":\"POST\"},\n           {\"body\":[\"expert\",\"coder\"],\"to\":\"{0}/labels\",\"id\":1,\"method\":\"POST\"},\n           {\"body\":[\"novice\",\"chef\"],\"to\":\"{0}/labels\",\"id\":2,\"method\":\"PUT\"}\n         ]'\n```\n\nThe exception:\n\n```\n{\n  \"message\" : \"\",\n  \"exception\" : \"BatchOperationFailedException\",\n  \"fullname\" : \"org.neo4j.server.rest.domain.BatchOperationFailedException\",\n  \"stacktrace\" : [ \"org.neo4j.server.rest.batch.NonStreamingBatchOperations.invoke(NonStreamingBatchOperations.java:63)\", \"org.neo4j.server.rest.batch.BatchOperations.performRequest(BatchOperations.java:188)\", \"org.neo4j.server.rest.batch.BatchOperations.parseAndPerform(BatchOperations.java:159)\", \"org.neo4j.server.rest.batch.NonStreamingBatchOperations.performBatchJobs(NonStreamingBatchOperations.java:48)\", \"org.neo4j.server.rest.web.BatchOperationService.batchProcess(BatchOperationService.java:117)\", \"org.neo4j.server.rest.web.BatchOperationService.performBatchOperations(BatchOperationService.java:71)\", \"java.lang.reflect.Method.invoke(Method.java:606)\", \"org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\" ]\n}\n```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/990", "title": "bug or undocumented feature of variable length relationship?", "closed": "2015-12-05 06:52:17", "commitsDetails": [], "commits": {}, "ttf": 866.0002777777778, "created": "2013-07-21 21:50:49", "user": "bebbi", "body": "With the default graph setup of console.neo4j.org,\n\nthe following query behaves differently with the first relation written as `[:KNOWS]` vs `[:KNOWS*]` or `[:KNOWS*1..]`\n\n```\nSTART a=node:node_auto_index(name=\"Cypher\")\nMATCH a<-[:KNOWS*1]-()-[:KNOWS]->b \nRETURN b\n```\n\nThey give the following results\n- first: \"cypher\"\n- second and third: \"cypher, morpheus, trinity\"\n\nThe doc (12.2.10. Variable length relationships) seems to imply that they should all be the same.\nI was stumbling over this when looking for a match that includes the start node as well. Maybe it's something to document?\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/989", "title": "funny error message", "closed": "2013-10-17 06:37:08", "commitsDetails": [], "commits": {}, "ttf": 87.00027777777778, "created": "2013-07-21 21:19:19", "user": "bebbi", "body": "found this while looking for a solution that would display the matches INCL the start node (neo-1.8.2)\n\nstart strt=node({param})\nMATCH strt-[:BELONGS_TO]->()<-[:BELONGS_TO]-p\nwith collect([p, strt]) as d\nreturn nodes(d)\n\nError:\n\nInvalid query\n\nExpected `d` to be a Collection but it was a Collection\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/984", "title": "service info broken on linux for non-owners ", "closed": "2018-11-07 18:52:41", "commitsDetails": [], "commits": {}, "ttf": 1937.0002777777777, "created": "2013-07-19 14:00:28", "user": "davidszotten", "body": "```\nvagrant@precise32:~(1)$ /etc/init.d/neo4j-service info\nNeo4j Server is not running\nvagrant@precise32:~(1)$ sudo /etc/init.d/neo4j-service info\nNeo4j Server is running at pid 4404\n```\n\nit appears that `checkstatus()` in `/var/lib/neo4j/bin/utils` sends signal `0` to the process, which fails for non-owners, and at which point the script unsets the `NEO4J_PID` variable\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/981", "title": "Setting comma delineated map and property doesn't work", "closed": "2016-10-20 13:07:50", "commitsDetails": [], "commits": {}, "ttf": 1189.0002777777777, "created": "2013-07-18 17:33:44", "user": "brian-gates", "body": "See these two examples:\n\nhttp://stackoverflow.com/questions/17729347/merge-query-set-map-and-created-property-upon-creation\nhttp://stackoverflow.com/questions/17686010/neo4j-cypher-setting-a-map-and-property-yields-expected-valid-query-body\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/970", "title": "Weird behaviour of cypher queries with start and match in 2.0.0 M3", "closed": "2017-10-20 13:28:15", "commitsDetails": [], "commits": {}, "ttf": 1557.0002777777777, "created": "2013-07-16 04:24:55", "user": "Phil-Ba", "body": "As discussed here, queries dont behave as expected:\nhttp://stackoverflow.com/questions/17658314/weird-cypher-behaviour-bug\nGiven following datamodel:\n\n![clipboard01](https://f.cloud.github.com/assets/5018561/802593/f6fdaffa-edcf-11e2-8ec8-650482d4493d.jpg)\n\nThis quer should return 9 rows:\nSTART s=node:**types**(className='Supplier'),f=node:**types**(className='Factory')\nMATCH (s)-[d:delivers]->(f) \nRETURN s.name,d.price, f.name;\n\nhowever, this is the result:\n5 rows\ns.name      d.price f.name\n\"Amazon\"    30      \"K\u00f6ln\"\n\"eBay\"        33      \"K\u00f6ln\"\n\"Amazon\"    29      \"Frankfurt\"\n\"Amazon\"    32      \"Mannheim\"\n\"Conrad\"     27      \"Stuttgart\"\n\nnow oddly enough if I run the same query but dont bind the relationship to a varibale, I get 7 rows\n\nSTART s=node:**types**(className='Supplier'),f=node:**types**(className='Factory')\nMATCH (s)-[delivers]->(f) \nRETURN s.name, f.name;\n\n7 rows\ns.name        f.name\n\"Amazon\"    \"K\u00f6ln\"\n\"eBay\"         \"K\u00f6ln\"\n\"eBay\"         \"Frankfurt\"\n\"Amazon\"     \"Frankfurt\"\n\"eBay\"         \"Mannheim\"\n\"Amazon\"     \"Mannheim\"\n\"Conrad\"      \"Stuttgart\"\n\nI guess it is related to this issue https://github.com/neo4j/neo4j/issues/897 \n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/942", "title": "Arbiter fails when cluster member restarts", "closed": "2013-10-02 07:59:26", "commitsDetails": [], "commits": {}, "ttf": 85.00027777777778, "created": "2013-07-09 01:07:11", "user": "jtescher", "body": "Maybe a configuration issue but this seems like the default 2 instance and 1 arbiter setup. All instances can communicate, but if one drops out the arbiter seems to get stuck in an election state when the instance reconnects.\n\nmessages.log from master node that is up the whole time: http://d.pr/n/1iTg\nmessages.log from slave node that tries to rejoin: http://d.pr/n/BgXC\nmessages.log from arbiter node: http://d.pr/n/Zihy (Just a few lines but the log file quickly becomes many GB of the same lines repeated)\n\nAm I missing something obvious? All are running version 2.0.0-MO3 but the same thing happens on 1.9.1. All on AWS ec2 small instances.\n"}, {"labels": ["bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/929", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"e3ad6851599a1cbe66f7aac56eee42eebe05cd0f": {"commitUser": "lassewesth", "commitGHEventType": "referenced"}}, "ttf": 89.00027777777778, "user": "Falmarri", "changesInPackagesSPOON": [], "changesInPackagesGIT": [], "body": "Trying to query one of my 2.0 style schema indexes for a boolean value throws this error:\n\n```\njava.lang.UnsupportedOperationException: true, class java.lang.Boolean\n        at org.neo4j.kernel.api.impl.index.LuceneDocumentStructure.newQuery(LuceneDocumentStructure.java:59)\n        at org.neo4j.kernel.api.impl.index.LuceneIndexAccessorReader.lookup(LuceneIndexAccessorReader.java:54)\n        at org.neo4j.kernel.impl.api.StoreStatementContext.nodesGetFromIndexLookup(StoreStatementContext.java:595)\n        at org.neo4j.kernel.impl.api.CompositeStatementContext.nodesGetFromIndexLookup(CompositeStatementContext.java:195)\n        at org.neo4j.kernel.impl.api.CompositeStatementContext.nodesGetFromIndexLookup(CompositeStatementContext.java:195)\n        at org.neo4j.kernel.impl.api.CompositeStatementContext.nodesGetFromIndexLookup(CompositeStatementContext.java:195)\n        at org.neo4j.kernel.impl.api.CompositeStatementContext.nodesGetFromIndexLookup(CompositeStatementContext.java:195)\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.nodesByLabelAndProperty(InternalAbstractGraphDatabase.java:1500)\n        at org.neo4j.kernel.InternalAbstractGraphDatabase.access$400(InternalAbstractGraphDatabase.java:163)\n        at org.neo4j.kernel.InternalAbstractGraphDatabase$7.iterator(InternalAbstractGraphDatabase.java:1472)\n        at org.neo4j.kernel.InternalAbstractGraphDatabase$7.iterator(InternalAbstractGraphDatabase.java:1468)\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 0, "UPD": 0, "TOT": 0, "DEL": 0, "INS": 0, "spoonFilesChanged": 0, "MOV": 0}, "title": "findNodesByLabelAndProperty can't search for boolean values", "statsSkippedReason": "", "closed": "2013-10-01 07:57:36", "commitsDetails": [{"commitUser": "lassewesth", "commitDateTime": "2013-08-20 00:51:27", "commitHash": "e3ad6851599a1cbe66f7aac56eee42eebe05cd0f", "commitParents": ["45212810fc846a645ae6e869155a7aa27221739f", "850b9e8d85bbd4d3aa3ef64eb2f9f69964e89ca1"], "commitGHEventType": "referenced", "nameRev": "e3ad6851599a1cbe66f7aac56eee42eebe05cd0f tags/2.0.0-M05~114", "commitGitStats": [{"insertions": 47, "lines": 47, "filePath": "community/kernel/src/test/java/org/neo4j/graphdb/IndexingAcceptanceTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphdb.IndexingAcceptanceTest.assertCanCreateAndFind(org.neo4j.graphdb.GraphDatabaseService,org.neo4j.graphdb.Label,java.lang.String,java.lang.Object)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphdb.IndexingAcceptanceTest.shouldBeAbleToQuerySupportedPropertyTypes()"}], "spoonFilePath": "IndexingAcceptanceTest.java"}], "commitMessage": "Merge pull request #1090 from jakewins/fix929\n\nWrote test case to assert that #929 has been resolved.", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-08-20 00:51:27"}], "created": "2013-07-03 17:39:13"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/920", "title": "Can't profile UNION queries", "closed": "2015-12-05 23:24:22", "commitsDetails": [], "commits": {}, "ttf": 886.0002777777778, "created": "2013-07-02 07:02:29", "user": "nawroth", "body": "This is what I get:\n\n```\njava.lang.AssertionError: assertion failed: Can't profile the same pipe twice\n    at scala.Predef$.assert(Predef.scala:179)\n    at org.neo4j.cypher.internal.profiler.Profiler.decorate(Profiler.scala:47)\n    at org.neo4j.cypher.internal.pipes.Pipe$class.createResults(Pipe.scala:35)\n    at org.neo4j.cypher.internal.pipes.NullPipe$.createResults(Pipe.scala:47)\n    at org.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:61)\n    at org.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:61)\n    at org.neo4j.cypher.internal.pipes.PipeWithSource.createResults(Pipe.scala:61)\n    at org.neo4j.cypher.internal.pipes.UnionIterator.loadNextIterator$1(UnionIterator.scala:60)\n    at org.neo4j.cypher.internal.pipes.UnionIterator.step$1(UnionIterator.scala:68)\n    at org.neo4j.cypher.internal.pipes.UnionIterator.stepIfNeccessary(UnionIterator.scala:79)\n    at org.neo4j.cypher.internal.pipes.UnionIterator.hasNext(UnionIterator.scala:43)\n    at org.neo4j.cypher.internal.profiler.ProfilingIterator.hasNext(Profiler.scala:164)\n    at scala.collection.Iterator$$anon$11.hasNext(Iterator.scala:327)\n    at scala.collection.Iterator$$anon$14.hasNext(Iterator.scala:388)\n    at org.neo4j.cypher.internal.profiler.ProfilingIterator.hasNext(Profiler.scala:164)\n    at org.neo4j.cypher.internal.ClosingIterator$$anonfun$next$1.apply(ClosingIterator.scala:45)\n    at org.neo4j.cypher.internal.ClosingIterator.failIfThrows(ClosingIterator.scala:84)\n    at org.neo4j.cypher.internal.ClosingIterator.next(ClosingIterator.scala:43)\n    at scala.collection.Iterator$class.foreach(Iterator.scala:727)\n    at org.neo4j.cypher.internal.ClosingIterator.foreach(ClosingIterator.scala:31)\n    at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:178)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:45)\n    at scala.collection.TraversableOnce$class.to(TraversableOnce.scala:259)\n    at org.neo4j.cypher.internal.ClosingIterator.to(ClosingIterator.scala:31)\n    at scala.collection.TraversableOnce$class.toList(TraversableOnce.scala:243)\n    at org.neo4j.cypher.internal.ClosingIterator.toList(ClosingIterator.scala:31)\n    at org.neo4j.cypher.EagerPipeExecutionResult.<init>(EagerPipeExecutionResult.scala:32)\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanBuilder$$anonfun$5.apply(ExecutionPlanBuilder.scala:145)\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanBuilder$$anonfun$5.apply(ExecutionPlanBuilder.scala:143)\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanBuilder$$anon$1.profile(ExecutionPlanBuilder.scala:51)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$profile$1.apply(ExecutionEngine.scala:53)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$profile$1.apply(ExecutionEngine.scala:52)\n    at org.neo4j.cypher.ExecutionEngine.prepare(ExecutionEngine.scala:132)\n    at org.neo4j.cypher.ExecutionEngine.profile(ExecutionEngine.scala:52)\n    at org.neo4j.cypher.ExecutionEngine.profile(ExecutionEngine.scala:61)\n    at org.neo4j.cypher.javacompat.ExecutionEngine.profile(ExecutionEngine.java:96)\n```\n"}, {"labels": ["bug"], "filteredCommits": ["fa1ae146251d598624f9ee1d599279bfcf92f019"], "url": "https://github.com/neo4j/neo4j/issues/911", "gitStatsSummary": {"insertions": 57, "gitFilesChange": 3, "lines": 59, "deletions": 2}, "numCommits": 1, "commits": {"53a98b0736387e9e71640b7ae062697ceee7d966": {"commitUser": "systay", "commitGHEventType": "referenced"}, "fa1ae146251d598624f9ee1d599279bfcf92f019": {"commitUser": "tinwelint", "commitGHEventType": "closed"}}, "ttf": 4.000277777777778, "user": "systay", "changesInPackagesSPOON": ["org.neo4j.kernel.impl.nioneo.xa.Command.SchemaRuleCommand.readFromFile(org.neo4j.kernel.impl.nioneo.store.NeoStore,org.neo4j.kernel.impl.api.index.IndexingService,java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)", "org.neo4j.test.AllItemsMatcher", "org.neo4j.helpers.FutureAdapter.processFuture(java.lang.Process)", "org.neo4j.test.ProcessStreamHandler", "org.neo4j.test.ProcessUtil", "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.gatherUpdatesFromNodeCommands(java.util.Collection)"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo", "community/kernel/src/main/java/org/neo4j/helpers"], "body": "So I'm using neo4j 2.0-M03 in an embedded python application. I have the python embedded bindings that work for the latest version here https://github.com/Falmarri/python-embedded\n\nThe problem is that nodes created after an index is made cannot be looked up using that index if the database is not cleanly shut down (ie db.shutdown() is not called). Weird things seem to happen. When using the java API (ie findNodeByLabelAndProperty) it returns an empty list. However, when using cypher WITHOUT using the index, it finds it correctly. When using cypher WITH the index, it finds the node twice. Attached is a gist showing exactly what I mean.\n\nhttps://gist.github.com/Falmarri/5878512\n\nYou have to run this file twice.\n\npython ./neoindex.py 1\npython ./neoindex.py 2\n\nAnd this is a sample output in case you don't want to have to install my embedded bindings.\n# python neobug.py 2\n\n10000\nNode[10001]{\"name\": \"test10000\"}\n[Node[10001]{\"name\": \"test10000\"}, Node[10001]{\"name\": \"test10000\"}]\n10001\nNode[10002]{\"name\": \"test10001\"}\n[Node[10002]{\"name\": \"test10001\"}, Node[10002]{\"name\": \"test10001\"}]\n10002\nNode[10003]{\"name\": \"test10002\"}\n[Node[10003]{\"name\": \"test10002\"}, Node[10003]{\"name\": \"test10002\"}]\n10003\nNode[10004]{\"name\": \"test10003\"}\n[Node[10004]{\"name\": \"test10003\"}, Node[10004]{\"name\": \"test10003\"}]\n10004\nNode[10005]{\"name\": \"test10004\"}\n[Node[10005]{\"name\": \"test10004\"}, Node[10005]{\"name\": \"test10004\"}]\n10005\nNode[10006]{\"name\": \"test10005\"}\n[Node[10006]{\"name\": \"test10005\"}, Node[10006]{\"name\": \"test10005\"}]\n10006\nNode[10007]{\"name\": \"test10006\"}\n[Node[10007]{\"name\": \"test10006\"}, Node[10007]{\"name\": \"test10006\"}]\n10007\nNode[10008]{\"name\": \"test10007\"}\n[Node[10008]{\"name\": \"test10007\"}, Node[10008]{\"name\": \"test10007\"}]\n10008\n\nThis continues with every node 10000 through 10100 (ie the ones created after the index was created).\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 6, "UPD": 0, "TOT": 17, "DEL": 2, "INS": 12, "spoonFilesChanged": 6, "MOV": 3}, "title": " indexes fail after unclean shutdown", "statsSkippedReason": "", "closed": "2013-07-01 22:52:07", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-07-01 15:52:06", "commitHash": "53a98b0736387e9e71640b7ae062697ceee7d966", "commitParents": ["6f0b0f3dd36d3d0d66c6a16034076738891b03c6", "fa1ae146251d598624f9ee1d599279bfcf92f019"], "commitGHEventType": "referenced", "nameRev": "53a98b0736387e9e71640b7ae062697ceee7d966 tags/2.0.0-M04~85^2~55", "commitGitStats": [{"insertions": 114, "lines": 114, "filePath": "community/kernel/src/test/java/org/neo4j/test/ProcessUtil.java", "deletions": 0}, {"insertions": 10, "lines": 12, "filePath": "community/kernel/src/test/java/org/neo4j/test/ProcessStreamHandler.java", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa/Command.java", "deletions": 1}, {"insertions": 70, "lines": 73, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/nioneo/xa/WriteTransactionTest.java", "deletions": 3}, {"insertions": 47, "lines": 47, "filePath": "community/kernel/src/main/java/org/neo4j/helpers/FutureAdapter.java", "deletions": 0}, {"insertions": 8, "lines": 9, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa/WriteTransaction.java", "deletions": 1}, {"insertions": 66, "lines": 66, "filePath": "community/kernel/src/test/java/org/neo4j/test/AllItemsMatcher.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.gatherUpdatesFromNodeCommands(java.util.Collection)"}], "spoonFilePath": "WriteTransaction.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.test.ProcessUtil"}], "spoonFilePath": "ProcessUtil.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.helpers.FutureAdapter.processFuture(java.lang.Process)"}], "spoonFilePath": "FutureAdapter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.Command.SchemaRuleCommand.readFromFile(org.neo4j.kernel.impl.nioneo.store.NeoStore,org.neo4j.kernel.impl.api.index.IndexingService,java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)"}], "spoonFilePath": "Command.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 11, "DEL": 2, "INS": 7, "MOV": 2, "spoonMethodName": "org.neo4j.test.ProcessStreamHandler"}], "spoonFilePath": "ProcessStreamHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.test.AllItemsMatcher"}], "spoonFilePath": "AllItemsMatcher.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransactionTest.shouldCreateEqualNodePropertyUpdatesOnRecoveryOfCreatedNode()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransactionTest.CommandCapturingVisitor"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransactionTest.prepareAndCommitRecovered(org.neo4j.kernel.impl.nioneo.xa.WriteTransaction)"}, {"UPD": 0, "TOT": 3, "DEL": 0, "INS": 1, "MOV": 2, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransactionTest.shouldUpdateHighIdsOnRecoveredTransaction()"}], "spoonFilePath": "WriteTransactionTest.java"}], "commitMessage": "Merge pull request #913 from tinwelint/fix-911\n\nFixes #911", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-07-01 15:52:06"}, {"commitUser": "tinwelint", "commitDateTime": "2013-06-28 15:21:16", "commitHash": "fa1ae146251d598624f9ee1d599279bfcf92f019", "commitParents": ["a9cd199b1086cf1d996764b54caba53b95d3727c"], "commitGHEventType": "closed", "nameRev": "fa1ae146251d598624f9ee1d599279bfcf92f019 tags/2.0.0-M04~85^2~55^2", "commitGitStats": [{"insertions": 114, "lines": 114, "filePath": "community/kernel/src/test/java/org/neo4j/test/ProcessUtil.java", "deletions": 0}, {"insertions": 10, "lines": 12, "filePath": "community/kernel/src/test/java/org/neo4j/test/ProcessStreamHandler.java", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa/Command.java", "deletions": 1}, {"insertions": 70, "lines": 73, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/nioneo/xa/WriteTransactionTest.java", "deletions": 3}, {"insertions": 47, "lines": 47, "filePath": "community/kernel/src/main/java/org/neo4j/helpers/FutureAdapter.java", "deletions": 0}, {"insertions": 8, "lines": 9, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa/WriteTransaction.java", "deletions": 1}, {"insertions": 66, "lines": 66, "filePath": "community/kernel/src/test/java/org/neo4j/test/AllItemsMatcher.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.gatherUpdatesFromNodeCommands(java.util.Collection)"}], "spoonFilePath": "WriteTransaction.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.test.ProcessUtil"}], "spoonFilePath": "ProcessUtil.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.helpers.FutureAdapter.processFuture(java.lang.Process)"}], "spoonFilePath": "FutureAdapter.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.Command.SchemaRuleCommand.readFromFile(org.neo4j.kernel.impl.nioneo.store.NeoStore,org.neo4j.kernel.impl.api.index.IndexingService,java.nio.channels.ReadableByteChannel,java.nio.ByteBuffer)"}], "spoonFilePath": "Command.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 11, "DEL": 2, "INS": 7, "MOV": 2, "spoonMethodName": "org.neo4j.test.ProcessStreamHandler"}], "spoonFilePath": "ProcessStreamHandler.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.test.AllItemsMatcher"}], "spoonFilePath": "AllItemsMatcher.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransactionTest.shouldCreateEqualNodePropertyUpdatesOnRecoveryOfCreatedNode()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransactionTest.CommandCapturingVisitor"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransactionTest.prepareAndCommitRecovered(org.neo4j.kernel.impl.nioneo.xa.WriteTransaction)"}, {"UPD": 0, "TOT": 3, "DEL": 0, "INS": 1, "MOV": 2, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransactionTest.shouldUpdateHighIdsOnRecoveredTransaction()"}], "spoonFilePath": "WriteTransactionTest.java"}], "commitMessage": "Fixes #911\n\nProblem manifested like this:\nAfter an unclean shutdown and recovery some index queries seemed to\nreturn nodes duplicated in the same result.\n\nProblem distilled to be:\nWhen applying a transaction property updates (to be fed to indexes) are\nderived by looking at the before/after views of the changed records.\nExcept for one case: where a label gets added to a node, in which case\nupdates for all its existing properties needs to also be generated. This\nspecial case weren't previously isolated to labels added/removed to/from\nexisting nodes, but were always considered, even for (in that tx) created nodes.\nThis resulted in a normal commit working since properties aren't loaded\nif the node already exists. But recovery would see those properties and\nhence generate duplicate updates.\n\nSolution:\nOnly generate label-changes-updates for (not previously existing) modified nodes.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-06-28 13:25:55"}], "created": "2013-06-27 19:23:07"}, {"labels": ["bug", "team-drivers"], "url": "https://github.com/neo4j/neo4j/issues/906", "title": "Batch REST calls return cryptic error messages.", "closed": "2018-02-19 15:12:26", "commitsDetails": [], "commits": {}, "ttf": 1700.0002777777777, "created": "2013-06-25 11:03:21", "user": "jonpacker", "body": "Here's a couple of examples. When creating a unique node, in the event of a conflict, with the normal API a 409 is returned, as such:\n\n```\nPOST   http://127.0.0.1:25911/db/data/index/node/singers?uniqueness=create_or_fail\n--- BODY ---\n{\n \"key\": \"name\",\n \"value\": \"johanna\",\n \"properties\": {\n  \"name\": \"Johanna\"\n }\n}\n------------\n\nRESPONSE\nContent-Type: application/json\nStatus code: 409\n--- BODY ---\n{ extensions: {},\n  outgoing_relationships: 'http://127.0.0.1:25911/db/data/node/4/relationships/out',\n  labels: 'http://127.0.0.1:25911/db/data/node/4/labels',\n  all_typed_relationships: 'http://127.0.0.1:25911/db/data/node/4/relationships/all/{-list|&|types}',\n  traverse: 'http://127.0.0.1:25911/db/data/node/4/traverse/{returnType}',\n  self: 'http://127.0.0.1:25911/db/data/node/4',\n  property: 'http://127.0.0.1:25911/db/data/node/4/properties/{key}',\n  outgoing_typed_relationships: 'http://127.0.0.1:25911/db/data/node/4/relationships/out/{-list|&|types}',\n  properties: 'http://127.0.0.1:25911/db/data/node/4/properties',\n  incoming_relationships: 'http://127.0.0.1:25911/db/data/node/4/relationships/in',\n  create_relationship: 'http://127.0.0.1:25911/db/data/node/4/relationships',\n  paged_traverse: 'http://127.0.0.1:25911/db/data/node/4/paged/traverse/{returnType}{?pageSize,leaseTime}',\n  all_relationships: 'http://127.0.0.1:25911/db/data/node/4/relationships/all',\n  incoming_typed_relationships: 'http://127.0.0.1:25911/db/data/node/4/relationships/in/{-list|&|types}',\n  data: { name: 'Johanna' },\n  indexed: 'http://127.0.0.1:25911/db/data/index/node/singers/name/johanna/4' }\n------------\n```\n\nThe 409 makes it clear that the request failed because of a conflict. If I do it in a batch, this is what I get back:\n\n```\nPOST   http://127.0.0.1:25911/db/data/batch\n--- BODY ---\n[\n {\n  \"method\": \"POST\",\n  \"to\": \"index/node/singers?uniqueness=create_or_fail\",\n  \"body\": {\n   \"key\": \"name\",\n   \"value\": \"johanna\",\n   \"properties\": {\n    \"name\": \"Johanna\"\n   }\n  },\n  \"id\": 0\n }\n]\n------------\n\nRESPONSE\nContent-Type: application/json\nStatus code: 500\n--- BODY ---\n{ message: '{\\n  \"extensions\" : {\\n  },\\n  \"outgoing_relationships\" : \"http://127.0.0.1:25911/db/data/node/4/relationships/out\",\\n  \"labels\" : \"http://127.0.0.1:25911/db/data/node/4/labels\",\\n  \"all_typed_relationships\" : \"http://127.0.0.1:25911/db/data/node/4/relationships/all/{-list|&|types}\",\\n  \"traverse\" : \"http://127.0.0.1:25911/db/data/node/4/traverse/{returnType}\",\\n  \"self\" : \"http://127.0.0.1:25911/db/data/node/4\",\\n  \"property\" : \"http://127.0.0.1:25911/db/data/node/4/properties/{key}\",\\n  \"outgoing_typed_relationships\" : \"http://127.0.0.1:25911/db/data/node/4/relationships/out/{-list|&|types}\",\\n  \"properties\" : \"http://127.0.0.1:25911/db/data/node/4/properties\",\\n  \"incoming_relationships\" : \"http://127.0.0.1:25911/db/data/node/4/relationships/in\",\\n  \"create_relationship\" : \"http://127.0.0.1:25911/db/data/node/4/relationships\",\\n  \"paged_traverse\" : \"http://127.0.0.1:25911/db/data/node/4/paged/traverse/{returnType}{?pageSize,leaseTime}\",\\n  \"all_relationships\" : \"http://127.0.0.1:25911/db/data/node/4/relationships/all\",\\n  \"incoming_typed_relationships\" : \"http://127.0.0.1:25911/db/data/node/4/relationships/in/{-list|&|types}\",\\n  \"data\" : {\\n    \"name\" : \"Johanna\"\\n  },\\n  \"indexed\" : \"http://127.0.0.1:25911/db/data/index/node/singers/name/johanna/4\"\\n}',\n  exception: 'BatchOperationFailedException',\n  fullname: 'org.neo4j.server.rest.domain.BatchOperationFailedException',\n  stacktrace:\n   [ 'org.neo4j.server.rest.batch.NonStreamingBatchOperations.invoke(NonStreamingBatchOperations.java:63)',\n     'org.neo4j.server.rest.batch.BatchOperations.performRequest(BatchOperations.java:188)',\n     'org.neo4j.server.rest.batch.BatchOperations.parseAndPerform(BatchOperations.java:159)',\n     'org.neo4j.server.rest.batch.NonStreamingBatchOperations.performBatchJobs(NonStreamingBatchOperations.java:48)',\n     'org.neo4j.server.rest.web.BatchOperationService.batchProcess(BatchOperationService.java:117)',\n     'org.neo4j.server.rest.web.BatchOperationService.performBatchOperations(BatchOperationService.java:71)',\n     'java.lang.reflect.Method.invoke(Method.java:597)',\n     'org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)' ] }\n------------\n```\n\nI understand that it's returning a BatchOperationException but it would be nice if it returned the underlying error that caused the exception in the first place. Right now there's no easy way to find out that this was caused by a uniqueness conflict.\n\nHere's another example, in trying to read a non-existent node. Regularly you would expect a 404, such as this:\n\n```\nGET   http://127.0.0.1:25911/db/data/node/25125/properties\n\nRESPONSE\nContent-Type: application/json\nStatus code: 404\n--- BODY ---\n{\n  \"message\" : \"Cannot find node with id [25125] in database.\",\n  \"exception\" : \"NodeNotFoundException\",\n  \"fullname\" : \"org.neo4j.server.rest.web.NodeNotFoundException\",\n  \"stacktrace\" : [ \"org.neo4j.server.rest.web.DatabaseActions.node(DatabaseActions.java:179)\", \"org.neo4j.server.rest.web.DatabaseActions.getAllNodeProperties(DatabaseActions.java:323)\", \"org.neo4j.server.rest.web.RestfulGraphDatabase.getAllNodeProperties(RestfulGraphDatabase.java:322)\", \"java.lang.reflect.Method.invoke(Method.java:597)\", \"org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\" ]\n}\n------------\n```\n\nBut if you do this in a batch, you get this:\n\n```\nRESPONSE\nContent-Type: application/json\nStatus code: 500\n--- BODY ---\n{ message: '{\\n  \"message\" : \"Cannot find node with id [25125] in database.\",\\n  \"exception\" : \"NodeNotFoundException\",\\n  \"fullname\" : \"org.neo4j.server.rest.web.NodeNotFoundException\",\\n  \"stacktrace\" : [ \"org.neo4j.server.rest.web.DatabaseActions.node(DatabaseActions.java:179)\", \"org.neo4j.server.rest.web.DatabaseActions.getAllNodeProperties(DatabaseActions.java:323)\", \"org.neo4j.server.rest.web.RestfulGraphDatabase.getAllNodeProperties(RestfulGraphDatabase.java:322)\", \"java.lang.reflect.Method.invoke(Method.java:597)\", \"org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\", \"org.neo4j.server.web.Jetty6WebServer.invokeDirectly(Jetty6WebServer.java:291)\", \"org.neo4j.server.rest.batch.NonStreamingBatchOperations.invoke(NonStreamingBatchOperations.java:55)\", \"org.neo4j.server.rest.batch.BatchOperations.performRequest(BatchOperations.java:188)\", \"org.neo4j.server.rest.batch.BatchOperations.parseAndPerform(BatchOperations.java:159)\", \"org.neo4j.server.rest.batch.NonStreamingBatchOperations.performBatchJobs(NonStreamingBatchOperations.java:48)\", \"org.neo4j.server.rest.web.BatchOperationService.batchProcess(BatchOperationService.java:117)\", \"org.neo4j.server.rest.web.BatchOperationService.performBatchOperations(BatchOperationService.java:71)\", \"java.lang.reflect.Method.invoke(Method.java:597)\", \"org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)\" ]\\n}',\n  exception: 'BatchOperationFailedException',\n  fullname: 'org.neo4j.server.rest.domain.BatchOperationFailedException',\n  stacktrace:\n   [ 'org.neo4j.server.rest.batch.NonStreamingBatchOperations.invoke(NonStreamingBatchOperations.java:63)',\n     'org.neo4j.server.rest.batch.BatchOperations.performRequest(BatchOperations.java:188)',\n     'org.neo4j.server.rest.batch.BatchOperations.parseAndPerform(BatchOperations.java:159)',\n     'org.neo4j.server.rest.batch.NonStreamingBatchOperations.performBatchJobs(NonStreamingBatchOperations.java:48)',\n     'org.neo4j.server.rest.web.BatchOperationService.batchProcess(BatchOperationService.java:117)',\n     'org.neo4j.server.rest.web.BatchOperationService.performBatchOperations(BatchOperationService.java:71)',\n     'java.lang.reflect.Method.invoke(Method.java:597)',\n     'org.neo4j.server.rest.security.SecurityFilter.doFilter(SecurityFilter.java:112)' ] }\n------------\n```\n\nIt's much easier to tell what's going on this time, but I still have no way of finding a 404 from that, which is what the actual exception was.\n\nI'd be ok with the original exception being nested inside the BatchOperationFailedException, so long as I have access to it and can find the original status code.\n\nThis is a big hitch for me when using batching, so I'd be grateful for any help you guys can give.\n"}, {"labels": ["bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/887", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"c82beffff5c25bf973370a9c12bea14888531341": {"commitUser": "jakewins", "commitGHEventType": "referenced"}}, "ttf": 183.00027777777777, "user": "alex859", "changesInPackagesSPOON": [], "changesInPackagesGIT": [], "body": "Hi guys,\n\nI'm using A\\* algorithm to find the best path in a graph with which I modeled Milan Public transport network. I found that this piece of code:\n\nif ( !this.nextNodesSet.contains( node ) ){\n    addNext( node, estimate + tentativeGScore );\n    isBetter = true;\n}else if ( tentativeGScore < this.score.get( node.getId() ).wayLength ){\n    isBetter = true;\n}\n\ndoesn't give the expected result if you reach the same node more than once and the cost of the first path is not the lesser. I tried calling addNext also when (tentativeGScore < this.score.get( node.getId() ).wayLength) and the results were correct. \n\nWhat do you think about it?\n\nThank you very much for all of your work! You're great! \n\nAlessandro\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 0, "UPD": 0, "TOT": 0, "DEL": 0, "INS": 0, "spoonFilesChanged": 0, "MOV": 0}, "title": "Graph Algo - A*", "statsSkippedReason": "", "closed": "2013-12-17 14:20:37", "commitsDetails": [{"commitUser": "jakewins", "commitDateTime": "2013-10-15 00:47:29", "commitHash": "c82beffff5c25bf973370a9c12bea14888531341", "commitParents": ["3483dc70103166165b00d4ccf0bf708f3138399d", "9415b6dcff601f6777cc0d15b56440c6a9d85422"], "commitGHEventType": "referenced", "nameRev": "c82beffff5c25bf973370a9c12bea14888531341 tags/1.9.5~34", "commitGitStats": [{"insertions": 244, "lines": 244, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/path/GeoDataGenerator.java", "deletions": 0}, {"insertions": 52, "lines": 68, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/path/TestAStar.java", "deletions": 16}, {"insertions": 87, "lines": 198, "filePath": "community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/path/AStar.java", "deletions": 111}, {"insertions": 103, "lines": 103, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/path/AStarPerformanceIT.java", "deletions": 0}, {"insertions": 10, "lines": 14, "filePath": "community/graph-algo/src/main/java/org/neo4j/graphalgo/impl/util/PriorityMap.java", "deletions": 4}, {"insertions": 24, "lines": 26, "filePath": "community/graph-algo/src/test/java/org/neo4j/graphalgo/impl/util/TestPriorityMap.java", "deletions": 2}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.path.TestAStar.betterTentativePath()"}], "spoonFilePath": "TestAStar.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.util.TestPriorityMap.shouldReplaceIfBetter()"}], "spoonFilePath": "TestPriorityMap.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.path.GeoDataGenerator"}], "spoonFilePath": "GeoDataGenerator.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Doer.endNode()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.AStarIterator"}, {"UPD": 1, "TOT": 10, "DEL": 7, "INS": 0, "MOV": 2, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Doer.fetchNextOrNull()"}, {"UPD": 14, "TOT": 20, "DEL": 2, "INS": 0, "MOV": 4, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Doer"}, {"UPD": 0, "TOT": 3, "DEL": 0, "INS": 3, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.AStarIterator.addNext(org.neo4j.graphdb.Node,double,org.neo4j.graphalgo.impl.path.AStar$Visit)"}, {"UPD": 0, "TOT": 5, "DEL": 0, "INS": 5, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.AStarIterator.popLowestScoreNode()"}, {"UPD": 5, "TOT": 14, "DEL": 5, "INS": 0, "MOV": 4, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Doer.popLowestScoreNode()"}, {"UPD": 11, "TOT": 30, "DEL": 10, "INS": 0, "MOV": 9, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Doer.expand()"}, {"UPD": 0, "TOT": 4, "DEL": 0, "INS": 4, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.AStarIterator.fetchNextOrNull()"}, {"UPD": 1, "TOT": 9, "DEL": 2, "INS": 4, "MOV": 2, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.findAllPaths(org.neo4j.graphdb.Node,org.neo4j.graphdb.Node)"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Data.getFscore()"}, {"UPD": 1, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Doer.startNode()"}, {"UPD": 12, "TOT": 23, "DEL": 3, "INS": 4, "MOV": 4, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.findSinglePath(org.neo4j.graphdb.Node,org.neo4j.graphdb.Node)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Data"}, {"UPD": 1, "TOT": 7, "DEL": 4, "INS": 0, "MOV": 2, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.Doer.addNext(org.neo4j.graphdb.Node,double)"}, {"UPD": 0, "TOT": 8, "DEL": 0, "INS": 8, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.path.AStar.AStarIterator.expand()"}], "spoonFilePath": "AStar.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.path.AStarPerformanceIT"}], "spoonFilePath": "AStarPerformanceIT.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.util.PriorityMap"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.util.PriorityMap.1.convert(java.lang.Object)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.util.PriorityMap.2.compare(org.neo4j.graphalgo.impl.util.PriorityMap$Node,org.neo4j.graphalgo.impl.util.PriorityMap$Node)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.graphalgo.impl.util.PriorityMap.NaturalPriority.compare(java.lang.Comparable,java.lang.Comparable)"}], "spoonFilePath": "PriorityMap.java"}], "commitMessage": "Merge pull request #1303 from tinwelint/fix-887\n\nFixes AStar algo shortcoming and thereby #887", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-10-15 00:47:29"}], "created": "2013-06-16 22:59:14"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/883", "title": "Node at end of optional relationship doesn't return if Label specified", "closed": "2013-10-01 07:57:47", "commitsDetails": [], "commits": {}, "ttf": 108.00027777777778, "created": "2013-06-14 14:04:33", "user": "mneedham", "body": "Given the following data:\n\n```\nCREATE (:Random)\n```\n\nWhen we query it:\n\n```\nMATCH n:Random WITH n MATCH n<-[r?]-e:Error RETURN ID(n), e;\n```\n\nWe should see the node coming back with an empty error but instead we get no rows:\n\n```\nMATCH n:Random WITH n MATCH n<-[r?]-e:Error RETURN ID(n), e;\n==> +-----------+\n==> | ID(n) | e |\n==> +-----------+\n==> +-----------+\n==> 0 row\n```\n\nIf we don't define a label for 'e' then it's fine:\n\n```\n MATCH n:Random WITH n MATCH n<-[r?]-e RETURN ID(n), e;\n ==> +----------------+\n==> | ID(n) | e      |\n==> +----------------+\n==> | 63520 | <null> |\n==> +----------------+\n==> 1 row\n```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/867", "title": "neo4j crashes on Ubuntu 12.04 when started as a service through a psuedo-tty", "closed": "2013-12-10 11:29:02", "commitsDetails": [], "commits": {}, "ttf": 185.00027777777777, "created": "2013-06-08 09:53:20", "user": "dwwoelfel", "body": "neo4j crashes as soon as the ssh connection is ended when it is started as a service.\n\nIf I do:\n\n```\nssh host@port -tt \"sudo service neo4j-service start\"\n```\n\nEverything starts up normally:\n\n```\nWARNING: Max 4096 open files allowed, minimum of 40 000 recommended. See the Neo4j manual.\nStarting Neo4j Server...process [28032]... waiting for server to be ready..... OK.\nGo to http://localhost:7474/webadmin/ for administration interface.\nConnection to 50.16.83.103 closed.\n```\n\nHowever, neo4j crashes as soon as the ssh connection closes. The log at `/var/lib/neo4j/data/log/console.log`:\n\n```\n01:18:40.687 [main] INFO org.mortbay.log - Started SelectChannelConnector@localhost:7474\n01:18:41.156 [main] INFO org.mortbay.log - Started SslSocketConnector@localhost:7473\n6/8/13 1:18:41 AM org.neo4j.server.AbstractNeoServer INFO: Server started on http://localhost:7474/\n6/8/13 1:20:21 AM org.neo4j.server.CommunityBootstrapper INFO: Neo4j Server shutdown initiated by kill signal\n```\n\nIf I add a sleep to the command I send through ssh, I can run strace on the process:\n\n```\nubuntu@box151:~$ sudo strace -p 28032\nProcess 28032 attached - interrupt to quit\nfutex(0x7eff663f89d0, FUTEX_WAIT, 28033, NULL\n```\n\nThen when the sleep ends and the ssh connection closes, the full output is:\n\n```\nubuntu@box151:~$ sudo strace -p 28032\nProcess 28032 attached - interrupt to quit\nfutex(0x7eff663f89d0, FUTEX_WAIT, 28033, NULL) = ? ERESTARTSYS (To be restarted)\n\u2014 SIGHUP (Hangup) @ 0 (0) \u2014\nfutex(0x7eff672cee20, FUTEX_WAKE_PRIVATE, 1) = 1\nrt_sigreturn(0x7eff672cee20) = 202\nfutex(0x7eff663f89d0, FUTEX_WAIT, 28033, NULLPANIC: attached pid 28032 exited with 129\n<unfinished ... exit status 129>\n```\n"}, {"labels": ["bug", "cypher", "docs"], "url": "https://github.com/neo4j/neo4j/issues/863", "title": "Cypher prettify uppercases keyword inside string", "closed": "2016-10-20 13:08:27", "commitsDetails": [], "commits": {}, "ttf": 1231.0002777777777, "created": "2013-06-07 10:09:49", "user": "nawroth", "body": "This input:\n\nMATCH (actor:Actor)\nWHERE actor.name = \"Tom Hanks\"\nCREATE (movie:Movie {title:'Sleepless in Seattle'})\nCREATE (actor)-[:ACTED_IN]->(movie);\n\nyields:\n\nMATCH (actor:Actor)\nWHERE actor.name = 'Tom Hanks'\nCREATE (movie:Movie { title:'Sleepless IN Seattle' })\nCREATE (actor)-[:ACTED_IN]->(movie);\n\nThat is, \"in\" inside a string gets uppercased.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/852", "title": "[Rest api] diacritics gets malformed when using batches", "closed": "2015-12-05 18:22:20", "commitsDetails": [], "commits": {}, "ttf": 915.0002777777778, "created": "2013-06-03 16:21:50", "user": "bazo", "body": "as i already explained on jadell/neo4jphp https://github.com/jadell/neo4jphp/issues/78 thinking, it was a bug in the library, but found it is a bug directly in neo4j\n\nif you do a request like with property values containing diacritics, the diacritics gets malformed. \n\n```\npost /db/data/batch [{\"method\" : \"POST\", \"to\" : \"/node\", \"body\" : {\"name\" : \"\u013e\u0161\u010d\u0165\u017e\u00fd\u00e1\u00ed\u00e9\u00fa\u00e4\u00f4\u0148\", \"hej\": \"hou\"}}]\n```\n\nif you delete the \"hej\" property so the request look like this\n\n```\npost /db/data/batch [{\"method\" : \"POST\", \"to\" : \"/node\", \"body\" : {\"name\" : \"\u013e\u0161\u010d\u0165\u017e\u00fd\u00e1\u00ed\u00e9\u00fa\u00e4\u00f4\u0148\"}}]\n```\n\nneo4j throws a BadInputException\n\nThere's no problem with diacritics when not using batches.\n\ntested on neo4j 1.8.2 and 1.9 stable.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/851", "title": "Method createRelationshipTo hangs up ", "closed": "2015-12-05 18:53:50", "commitsDetails": [], "commits": {}, "ttf": 915.0002777777778, "created": "2013-06-03 11:53:20", "user": "retrostyle", "body": "Hey i use the Community Neo4J 1.9 Stable Release Version and i have big Problem,\nif i create a Relation with this Line,\n\n`Relationship createtRelation = sourceNode.createRelationshipTo(targetNode, relation);`\n\nthe Embedded Transaction Hangs Up and i dont now why... i think it is a Neo4J internel problem!?\nAnd some minutes later i got this Exception:\n\n`WARNING: GRIZZLY0023: Interrupting idle Thread: http-thread-pool-8080(1)\n  (com.sun.grizzly.http.KeepAliveThreadAttachment timedOut)`\n\nGreetz Chriss\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/850", "title": "REST API: Add node_labels entry to database metadata", "closed": "2013-12-20 15:05:20", "commitsDetails": [], "commits": {}, "ttf": 200.00027777777777, "created": "2013-06-02 21:09:41", "user": "technige", "body": "Just as the `relationship_types` URI is discoverable via the database metadata, so should the URI for `node_labels` be.\n\nThis would produce output such as:\n\n``` json\n{\n  \"extensions\" : {\n  },\n  \"node\" : \"http://localhost:7474/db/data/node\",\n  \"node_index\" : \"http://localhost:7474/db/data/index/node\",\n  \"relationship_index\" : \"http://localhost:7474/db/data/index/relationship\",\n  \"extensions_info\" : \"http://localhost:7474/db/data/ext\",\n  \"relationship_types\" : \"http://localhost:7474/db/data/relationship/types\",\n\n  \"node_labels\" : \"http://localhost:7474/db/data/labels\",\n\n  \"batch\" : \"http://localhost:7474/db/data/batch\",\n  \"cypher\" : \"http://localhost:7474/db/data/cypher\",\n  \"transaction\" : \"http://localhost:7474/db/data/transaction\",\n  \"neo4j_version\" : \"2.0.0-M03\"\n}\n```\n"}, {"labels": ["bolt server", "bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/848", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"d8b5a3dd736b7f2cf8404b1b3b3dacb40149d66f": {"commitUser": "chrisvest", "commitGHEventType": "referenced"}}, "ttf": 919.0002777777778, "user": "ddossot", "changesInPackagesSPOON": [], "changesInPackagesGIT": [], "body": "There's currently no way to get the base URI needed to form this kind of requests: http://docs.neo4j.org/chunked/milestone/rest-api-relationships.html#rest-api-get-relationship-by-id\n\nThis would be possible if the service root had:\n\n```\n\"relationship\" : \" http://localhost:7474/db/data/relationship\"\n```\n\nthe same way it already has:\n\n```\n\"node\" : \"http://localhost:7474/db/data/node\"\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 0, "UPD": 0, "TOT": 0, "DEL": 0, "INS": 0, "spoonFilesChanged": 0, "MOV": 0}, "title": "Add `relationship` to REST API's service root", "statsSkippedReason": "", "closed": "2015-12-07 09:34:57", "commitsDetails": [{"commitUser": "chrisvest", "commitDateTime": "2015-12-07 10:34:56", "commitHash": "d8b5a3dd736b7f2cf8404b1b3b3dacb40149d66f", "commitParents": ["7ec2c0857e65b9e9009cee8b14d6078e3e378f17", "b46f2a2e072c5696e0b6e2ac3f8400656290ae2d"], "commitGHEventType": "referenced", "nameRev": "d8b5a3dd736b7f2cf8404b1b3b3dacb40149d66f tags/3.0.0-M02~71", "commitGitStats": [{"insertions": 4, "lines": 6, "filePath": "community/server/src/main/java/org/neo4j/server/rest/repr/DatabaseRepresentation.java", "deletions": 2}, {"insertions": 63, "lines": 63, "filePath": "community/server/src/test/java/org/neo4j/server/rest/repr/DatabaseRepresentationTest.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.DatabaseRepresentationTest"}], "spoonFilePath": "DatabaseRepresentationTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.repr.DatabaseRepresentation.serialize(org.neo4j.server.rest.repr.MappingSerializer)"}], "spoonFilePath": "DatabaseRepresentation.java"}], "commitMessage": "Merge pull request #6033 from jakewins/3.0-discovery-list-rels\n\nAdd relationship to REST discovery, fixes #848", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-12-07 10:34:56"}], "created": "2013-05-31 16:38:30"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/843", "title": "Impossible nested logical expressions in Cypher", "closed": "2015-12-05 18:18:28", "commitsDetails": [], "commits": {}, "ttf": 920.0002777777778, "created": "2013-05-29 10:52:25", "user": "rduga", "body": "Neo4j cypher query language doesn't support nested logical expressions, i.e.:\n\nThis is valid query expression and returns true:\n\n```\nstart n=node(3) return 1 <> 2\n```\n\nBut this is not:\n\n```\nstart n=node(3) return (1 <> 2) = true\n```\n\nit should return also true, but it returns error:\n\nError: string matching regex `\\z' expected but`=' found\n\nSimilar queries like (which also fail):\n\n```\nstart n = node(3) return not(true = true) = true\nstart n = node(3) return (true <> true) = true\n```\n\n(queries tested on http://docs.neo4j.org/chunked/stable/query-where.html when click on try this query live)\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/836", "title": "Cypher WHERE clause error in 2.0.0 M02", "closed": "2017-10-05 12:48:05", "commitsDetails": [], "commits": {}, "ttf": 1592.0002777777777, "created": "2013-05-26 22:19:24", "user": "RichSimon", "body": "Using v1.9.3 RC2, this Cypher query works fine. Using 2.0.0 M02, my console hangs and the Java process seems to run away unless I remove the constraining, highlighted part of the where clause (and m.strength > 0.8):\n\nstart n1=node:entities('entityID:_'), n2=node:entities('entityID:_')\nmatch n1-[:has_address]->add1-[m:MATCHES_TO]-add2<-[:has_address]-n2,\n    add1-[:has_street]-street1, add2-[:has_street]-street2\nwhere (m.strength < 1 and m.strength > 0.8)\nreturn distinct add1.addressID, n1.entityID, street1.line1, add2.addressID, street2.line2, m.strength limit 1;\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/831", "title": "2.0 / snapshot - merge is not thread safe / transactional", "closed": "2015-12-05 18:20:18", "commitsDetails": [], "commits": {}, "ttf": 925.0002777777778, "created": "2013-05-24 11:43:26", "user": "mybyte", "body": "It seems that when firing a lot of batch queries via REST API, they cause two issues:\n\n1) Double entries\n\nIn a multithreaded environment, firing a couple of queries such as:\n\n```\nmerge (x:Website {key:\"google.com\"}) \nmerge (y:Application {key:\"google reader\"})\ncreate unique x-[:`has application']-y\n```\n\nwill produce double entries.\n\n2) Some operations seem to be relying on iterating over node id's\nIt seems that during batch jobs, nodes are created temporarily. Some queries fired in parallel to batch jobs seem to include those e.g.:\n\n```\nstart n=node(*)\nwith labels(n) as lbl\nwhere length(lbl)<>0\nreturn distinct lbl;\n```\n\nWill very often produce an error such as: \n`No node with id 9102 found.`\n\nIt seems that selectors matching all nodes (node(*) or match n) would always include nodes that are temporary (no idea how this can happen, does merge temporarily create nodes?) and following operating fail when they disappear during processing...\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/811", "title": "ArrayOutOfBounds on property query with regex on large database", "closed": "2014-06-10 09:05:26", "commitsDetails": [], "commits": {}, "ttf": 388.0002777777778, "created": "2013-05-17 23:08:02", "user": "Bouncner", "body": "Hello,\n\nthe following query should return all nodes, which have \"Satoshi\" in their name. The database has ~7M nodes and ~300 of these do have the property \"username\".\n\n``` SQL\nSTART n=node(*)\nWHERE n.username? =~ '.*Satoshi.*'\nRETURN n\n```\n\nAfter a while (maybe 15 minutes) I get this error message:\n\n```\nJsonBuildRuntimeException\n\norg.codehaus.jackson.map.JsonMappingException: (was java.lang.ArrayIndexOutOfBoundsException) (through reference chain: java.util.LinkedHashMap[\"data\"]->java.util.ArrayList[1757664]->java.util.ArrayList[0]->java.util.HashMap[\"paged_traverse\"])\n\nStackTrace:\norg.neo4j.server.rest.domain.JsonHelper.createJsonFrom(JsonHelper.java:105)\norg.neo4j.server.rest.repr.formats.JsonFormat.complete(JsonFormat.java:68)\norg.neo4j.server.rest.repr.MappingRepresentation.serialize(MappingRepresentation.java:44)\norg.neo4j.server.rest.repr.OutputFormat.assemble(OutputFormat.java:179)\norg.neo4j.server.rest.repr.OutputFormat.formatRepresentation(OutputFormat.java:131)\norg.neo4j.server.rest.repr.OutputFormat.response(OutputFormat.java:117)\norg.neo4j.server.rest.repr.OutputFormat.ok(OutputFormat.java:55)\norg.neo4j.server.rest.web.CypherService.cypher(CypherService.java:75)\njava.lang.reflect.Method.invoke(Method.java:597)\n```\n\nI am using the current RC2 version of Neo4j and the server has tons of memory.\n\nUnless I made an error in the query, I would guess this is an error. The actual returned result should be very small.\n\nPS: I know the query is highly inefficient. But this is more or less a one-time query, fire and forget.\n\nUpdate:\n\nThe following query should scan the whole DB as well (unless Neo4j uses some hidden indices, which I am not aware of) and returns in 13s:\n\n``` SQL\nSTART n=node(*)\nWHERE HAS(n.username)\nRETURN COUNT(n)\n```\n\nSo even if I would return all nodes with a username, it's still nothing that Jackson should complain about.\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["b9814528621c95b2f4e8552f96ed3442fc18175a", "127635a89ce5f56f30827dabbe439e6d71834146"], "url": "https://github.com/neo4j/neo4j/issues/795", "gitStatsSummary": {"insertions": 28, "gitFilesChange": 9, "lines": 77, "deletions": 49}, "numCommits": 2, "commits": {"8f25b6edd1572d92137c1aa40186eb222c9c8737": {"commitUser": "boggle", "commitGHEventType": "referenced"}, "b9814528621c95b2f4e8552f96ed3442fc18175a": {"commitUser": "systay", "commitGHEventType": "closed"}, "127635a89ce5f56f30827dabbe439e6d71834146": {"commitUser": "digitalstain", "commitGHEventType": "referenced"}, "834dff37779be1716422629bbe11cdc512159796": {"commitUser": "systay", "commitGHEventType": "referenced"}}, "ttf": 3.000277777777778, "user": "jinxmcg", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan", "community/cypher/src/docs/dev/ql/skip/index.asciidoc", "community/cypher/src/docs/dev/general/updating.asciidoc", "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes", "community/cypher/src/docs/dev/ql/limit/index.asciidoc"], "body": "Hi, \n\nIf the query is like that:\nSTART \n    me=node:objects('object_id:{userId}') \nMATCH \n    me-[rel:ACTION_ADD_OBJECT]->myobjects  \nWITH \n        myobjects\nMATCH \n    myobjects<-[act:ACTION_LIKE]-user\nSET\n        act.viewed=1\nWHERE\n        act.viewed=0\nRETURN  \n        myobjects,act,user\nORDER BY act.date DESC\nSKIP 30\nLIMIT 20\n\nVERY IMPORTANT !\n\nwith the ORDER BY CLAUSE i get all ACT relations updated, and without ORDER BY I get only 20 updated which is correct but not the right ones :)\n\nIn Neo4j - Graph Database Kernel 1.9.M04\nI think the issue also replicates in Neo4j - 1.8.2\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 2}, "spoonStatsSummary": {}, "title": "CYPHER SET with ORDER BY  and LIMIT does  not work", "statsSkippedReason": "", "closed": "2013-05-18 18:57:25", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-05-18 17:09:15", "commitHash": "b9814528621c95b2f4e8552f96ed3442fc18175a", "commitParents": ["7e59359ab439c084034fc6f184fd73b43c3fb548"], "commitGHEventType": "closed", "nameRev": "b9814528621c95b2f4e8552f96ed3442fc18175a tags/1.9~6^2", "commitGitStats": [{"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/UpdateActionBuilder.scala", "deletions": 1}, {"insertions": 5, "lines": 5, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 45, "lines": 52, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 7}, {"insertions": 7, "lines": 10, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TopPipeBuilder.scala", "deletions": 3}, {"insertions": 9, "lines": 10, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/SliceBuilder.scala", "deletions": 1}, {"insertions": 3, "lines": 5, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/PartiallySolvedQuery.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/PlanBuilder.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #795 - Inconsistent behaviour when using ORDER BY and LIMIT while updating the graph\n\no Changes priority of ORDER BY...LIMIT (PlanBuilder.TopX) so it is executed\n  before updating the graph\no Changes so TopPipeBuilder waits for aggregation, but not for return\n  expressions execution\no UpdateActionBuilder waits on slice to be done before accepting work\no SliceBuilder does not wait for updates to be done\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-05-18 13:15:57"}, {"commitUser": "boggle", "commitDateTime": "2013-05-18 11:57:24", "commitHash": "8f25b6edd1572d92137c1aa40186eb222c9c8737", "commitParents": ["7e59359ab439c084034fc6f184fd73b43c3fb548", "b9814528621c95b2f4e8552f96ed3442fc18175a"], "commitGHEventType": "referenced", "nameRev": "8f25b6edd1572d92137c1aa40186eb222c9c8737 tags/1.9~6", "commitGitStats": [{"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/UpdateActionBuilder.scala", "deletions": 1}, {"insertions": 5, "lines": 5, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 45, "lines": 52, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 7}, {"insertions": 7, "lines": 10, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TopPipeBuilder.scala", "deletions": 3}, {"insertions": 9, "lines": 10, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/SliceBuilder.scala", "deletions": 1}, {"insertions": 3, "lines": 5, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/PartiallySolvedQuery.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/PlanBuilder.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #813 from systay/795\n\nFixes #795 - Inconsistent behaviour when using ORDER BY and LIMIT while updating the graph", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-05-18 11:57:24"}, {"commitUser": "digitalstain", "commitDateTime": "2013-05-20 10:16:25", "commitHash": "127635a89ce5f56f30827dabbe439e6d71834146", "commitParents": ["834dff37779be1716422629bbe11cdc512159796"], "commitGHEventType": "referenced", "nameRev": "127635a89ce5f56f30827dabbe439e6d71834146 tags/1.9~4", "commitGitStats": [{"insertions": 0, "lines": 58, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 58}, {"insertions": 0, "lines": 53, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/SlicePipeTest.scala", "deletions": 53}, {"insertions": 0, "lines": 4, "filePath": "community/cypher/CHANGES.txt", "deletions": 4}, {"insertions": 0, "lines": 4, "filePath": "community/cypher/src/docs/dev/ql/limit/index.asciidoc", "deletions": 4}, {"insertions": 3, "lines": 29, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/SlicePipe.scala", "deletions": 26}, {"insertions": 0, "lines": 3, "filePath": "community/cypher/src/docs/dev/general/updating.asciidoc", "deletions": 3}, {"insertions": 0, "lines": 3, "filePath": "community/cypher/src/docs/dev/ql/skip/index.asciidoc", "deletions": 3}, {"insertions": 0, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/PartiallySolvedQuery.scala", "deletions": 2}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/SliceBuilder.scala", "deletions": 3}], "commitSpoonAstDiffStats": [], "commitMessage": "Revert \"Fixes #795 - Inconsistent behaviour when using ORDER BY and LIMIT while updating the graph\"\n\nThis reverts commit f299aa394be4563d3724573547b04f39ce6c4517.\n\nReverted because it is too close to GA and a workaround exists. Will be included again after the upcoming release.\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-05-20 10:16:25"}, {"commitUser": "systay", "commitDateTime": "2013-05-19 12:20:28", "commitHash": "834dff37779be1716422629bbe11cdc512159796", "commitParents": ["8f25b6edd1572d92137c1aa40186eb222c9c8737", "f299aa394be4563d3724573547b04f39ce6c4517"], "commitGHEventType": "referenced", "nameRev": "834dff37779be1716422629bbe11cdc512159796 tags/1.9~5", "commitGitStats": [{"insertions": 1, "lines": 3, "filePath": "community/cypher/CHANGES.txt", "deletions": 2}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/src/docs/dev/ql/limit/index.asciidoc", "deletions": 0}, {"insertions": 34, "lines": 48, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 14}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/UpdateActionBuilder.scala", "deletions": 2}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/src/docs/dev/ql/skip/index.asciidoc", "deletions": 0}, {"insertions": 3, "lines": 10, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TopPipeBuilder.scala", "deletions": 7}, {"insertions": 4, "lines": 16, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/SliceBuilder.scala", "deletions": 12}, {"insertions": 53, "lines": 53, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/SlicePipeTest.scala", "deletions": 0}, {"insertions": 26, "lines": 29, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/SlicePipe.scala", "deletions": 3}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/src/docs/dev/general/updating.asciidoc", "deletions": 0}, {"insertions": 4, "lines": 7, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/PartiallySolvedQuery.scala", "deletions": 3}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/PlanBuilder.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #815 from systay/795\n\nFixes #795 - Inconsistent behaviour when using LIMIT and updates", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-05-19 12:20:28"}], "created": "2013-05-15 09:20:02"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/788", "title": "Cypher returns null for all nodes when searching for at least 1 node that doesn't exist", "closed": "2014-06-10 09:06:36", "commitsDetails": [], "commits": {}, "ttf": 392.0002777777778, "created": "2013-05-13 15:11:54", "user": "mybyte", "body": "Here's the deal:\n\nstart x=node:node_auto_index(key=\"x\"), y=node(*)\nreturn x\n\nIf \"y\" doesn't exist, the result is empty.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/787", "title": "Different result sets when different cache types are used", "closed": "2013-12-10 15:51:53", "commitsDetails": [], "commits": {}, "ttf": 211.00027777777777, "created": "2013-05-12 16:17:59", "user": "DFoxinator", "body": "I've been playing around with the object cache configuration, and I was surprised when I turned the object cache to \"none\" that I got a different result set than when it was set to \"soft\" or \"weak.\"  For example, if I just use the web relationship viewer (db/data/node/x/relationships), I get about 1/4 of the expected relationships when cache type is none, and all of the expected relationships when cache type is soft or weak.  I would expect that object cache type would have no effect on the actual data that's returned and only impact performance.\n\nI'm using 1.9.RC1 on a box running CentOS with 128gb of RAM.  My database has a little over 1 billion nodes and about 10 billion relationships.  Although I've been tweaking them a lot because of very poor traversing performance, I'm usually around 60gb for the JVM heap (set in wrapper), I use memory mapped buffers for the low level cache and set the nodestore to have 12gb and I let Neo4j auto-set the rest (it gives about 40gb to the rel store).\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/785", "title": "neo-shell readonly model can't work with index", "closed": "2015-12-05 18:50:26", "commitsDetails": [], "commits": {}, "ttf": 937.0002777777778, "created": "2013-05-12 05:28:29", "user": "fudy", "body": "I modified the demo EmbeddedNeo4jWithIndexing.java . Comment all shutdown() method\nafter do it, I open the database by neo4j-shell -readonly,then I run \nstart n=node:nodes(\"_:_\") return n;\nI get 0 rows\nif I open the database without -readonly ,and run the command above,it successed!\nI am very confused about it\nI tried 1.8.2 and 1.9\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/780", "title": "Label Index cause errors with string[] properties   ", "closed": "2013-05-13 15:42:54", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2013-05-09 22:09:37", "user": "jla", "body": "Tested also on http://console.neo4j.org/\n\nCREATE (n:TestLabel {name:['a','b']})\nRETURN n\n\nMATCH n:TestLabel \nWHERE n.name=['a','b']\nRETURN n\n\nCREATE INDEX ON :TestLabel(name)\n\nMATCH n:TestLabel \nWHERE n.name=['a','b']\nRETURN n\n\nError: java.lang.UnsupportedOperationException: List(a, b), class scala.collection.immutable.$colon$colon\n\nStackTrace:\norg.neo4j.server.rest.repr.RepresentationExceptionHandlingIterable.exceptionOnHasNext(RepresentationExceptionHandlingIterable.java:50)\norg.neo4j.helpers.collection.ExceptionHandlingIterable$1.hasNext(ExceptionHandlingIterable.java:60)\norg.neo4j.helpers.collection.IteratorWrapper.hasNext(IteratorWrapper.java:42)\norg.neo4j.server.rest.repr.ListRepresentation.serialize(ListRepresentation.java:58)\norg.neo4j.server.rest.repr.Serializer.serialize(Serializer.java:75)\norg.neo4j.server.rest.repr.MappingSerializer.putList(MappingSerializer.java:61)\norg.neo4j.server.rest.repr.CypherResultRepresentation.serialize(CypherResultRepresentation.java:79)\norg.neo4j.server.rest.repr.MappingRepresentation.serialize(MappingRepresentation.java:42)\norg.neo4j.server.rest.repr.OutputFormat.assemble(OutputFormat.java:179)\norg.neo4j.server.rest.repr.OutputFormat.formatRepresentation(OutputFormat.java:131)\norg.neo4j.server.rest.repr.OutputFormat.response(OutputFormat.java:117)\norg.neo4j.server.rest.repr.OutputFormat.ok(OutputFormat.java:55)\norg.neo4j.server.rest.web.CypherService.cypher(CypherService.java:95)\njava.lang.reflect.Method.invoke(Method.java:597)\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/771", "title": "Create unique always created new nodes along", "closed": "2014-06-10 09:07:46", "commitsDetails": [], "commits": {}, "ttf": 398.0002777777778, "created": "2013-05-07 18:18:03", "user": "mybyte", "body": "With the current stable release (1.8.2) it seems that every time the create unique statement creates a new link, it also creates a new node along.\n\nHere's an example:\n\nstart head=node:node_auto_index(key=\"somekey\")\ncreate unique head-[:LINKS_TO]->(tail {key:\"someotherkey\"})\n\nI would expect neo4j to check, if the tail node (key:\"someotherkey\") exists before creating it, instead of creating a new node every time a new link from head is created...\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/746", "title": "Startup fails with \"Bad value for setting 'neostore.propertystore.db.strings.mapped_memory': value does not match expression:\\d+[kmgKMG]?\"", "closed": "2015-09-29 08:29:58", "commitsDetails": [], "commits": {}, "ttf": 882.0002777777778, "created": "2013-04-30 05:14:22", "user": "amorgner", "body": "If Neo4j embedded is started on a machine with less physical memory than the JVM tries to allocate, the following exception is thrown (with a varying number nn):\n\n```\nBad value '-nnM' for setting 'neostore.propertystore.db.strings.mapped_memory': value does not match expression:\\d+[kmgKMG]?\n```\n\nThe error can easily be reproduced on a virtual machine with f.e. 128 MB RAM.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/727", "title": "Cypher Type Exception introduced in 1.9M05 with COALESCE / WITH / MATCH", "closed": "2015-08-07 19:03:38", "commitsDetails": [], "commits": {}, "ttf": 836.0002777777778, "created": "2013-04-23 10:11:52", "user": "wildcat63", "body": "Using the Matrix dataset as a simple example, the following query works in 1.9M04 as follows:\n\nSTART node:node_auto_index(name='Neo')\nMATCH n-[:KNOWS]->m, n-[:LOVES]->t\nWITH COALESCE(m,t) AS k\nMATCH k-[:KNOWS]->j RETURN k,j;\n\n==> +----------------------------------------------------+\n==> | k                        | j                       |\n==> +----------------------------------------------------+\n==> | Node[5]{name:\"Morpheus\"} | Node[4]{name:\"Trinity\"} |\n==> | Node[5]{name:\"Morpheus\"} | Node[3]{name:\"Cypher\"}  |\n==> +----------------------------------------------------+\n==> 2 rows\n==> 21 ms\n==>\n\nIn 1.9M05, the result is the following error:\n\nError: org.neo4j.cypher.CypherTypeException: An identifier is used with\ndifferent types. The identifier `k` is used both as Node and as Any\n\nIn this case COALESCE should be providing nodes to the next step in the query.\n\nPeter Neubauer responded on google groups to say that this is a bug and to post it here.  \n"}, {"labels": ["bug"], "filteredCommits": ["1c7b97993abf222aa93945484a0d821619a87119"], "url": "https://github.com/neo4j/neo4j/issues/697", "gitStatsSummary": {"insertions": 28, "gitFilesChange": 2, "lines": 29, "deletions": 1}, "numCommits": 1, "commits": {"1c7b97993abf222aa93945484a0d821619a87119": {"commitUser": "jexp", "commitGHEventType": "closed"}, "92180938f148132f43a83f9a495b9385bc38315f": {"commitUser": "lassewesth", "commitGHEventType": "referenced"}}, "ttf": 171.00027777777777, "user": "MEngher", "changesInPackagesSPOON": ["org.neo4j.server.rest.web.DatabaseActions.getOrCreateIndexedNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.util.Map)", "org.neo4j.server.rest.IndexNodeDocIT.get_or_create_node_with_array_properties()", "org.neo4j.server.rest.domain.PropertySettingStrategy.convert(java.lang.Object)"], "changesInPackagesGIT": ["community/server/src/main/java/org/neo4j/server/rest/web", "community/server/src/main/java/org/neo4j/server/rest/domain"], "body": "(see example in manual 18.11.3)\nThis the http post request\n\n[{\"method\":\"POST\",\"to\":\"/index/node/seriesIdx?uniqueness=get_or_create\",\"body\":{\"key\":\"seriesId\",\"value\":\"B_series_1\",\"properties\":{\"seriesId\":\"B_series_1\",\"Descriptor\":\"time series:series_1\",\"OValues\":[\"1.0\",\"1.2\"]}}}]\n\nThis the return message:\n\n{[\n  {\n    \"from\": \"/index/node/seriesIdx?uniqueness=get_or_create\",\n    \"body\": {\n      \"message\": \"Unknown property type on: [1.0, 1.2], class java.util.ArrayList\",\n      \"exception\": \"IllegalArgumentException\",\n      \"stacktrace\": [\n        \"org.neo4j.kernel.impl.nioneo.store.PropertyStore.encodeValue(PropertyStore.java:582)\",\n        \"org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.nodeAddProperty(WriteTransaction.java:1238)\",\n        \"org.neo4j.kernel.impl.persistence.PersistenceManager.nodeAddProperty(PersistenceManager.java:144)\",\n        \"org.neo4j.kernel.impl.core.NodeManager.nodeAddProperty(NodeManager.java:910)\",\n        \"org.neo4j.kernel.impl.core.NodeImpl.addProperty(NodeImpl.java:123)\",\n        \"org.neo4j.kernel.impl.core.Primitive.setProperty(Primitive.java:436)\",\n        \"org.neo4j.kernel.impl.core.NodeImpl.setProperty(NodeImpl.java:53)\",\n        \"org.neo4j.kernel.impl.core.NodeProxy.setProperty(NodeProxy.java:130)\",\n        \"org.neo4j.server.rest.web.DatabaseActions$UniqueNodeFactory.initialize(DatabaseActions.java:1069)\",\n        \"org.neo4j.server.rest.web.DatabaseActions$UniqueNodeFactory.initialize(DatabaseActions.java:1053)\",\n        \"org.neo4j.graphdb.index.UniqueFactory.getOrCreate(UniqueFactory.java:205)\",\n        \"org.neo4j.server.rest.web.DatabaseActions.getOrCreateIndexedNode(DatabaseActions.java:965)\",\n        \"org.neo4j.server.rest.web.RestfulGraphDatabase.addToNodeIndex(RestfulGraphDatabase.java:791)\",\n        \"java.lang.reflect.Method.invoke(Unknown Source)\",\n        \"org.neo4j.server.web.Jetty6WebServer.invokeDirectly(Jetty6WebServer.java:294)\",\n        \"org.neo4j.server.rest.web.StreamingBatchOperations.invoke(StreamingBatchOperations.java:65)\",\n        \"org.neo4j.server.rest.batch.BatchOperations.performRequest(BatchOperations.java:188)\",\n        \"org.neo4j.server.rest.batch.BatchOperations.parseAndPerform(BatchOperations.java:159)\",\n        \"org.neo4j.server.rest.web.StreamingBatchOperations.readAndExecuteOperations(StreamingBatchOperations.java:53)\",\n        \"org.neo4j.server.rest.web.BatchOperationService$1.write(BatchOperationService.java:89)\"\n      ]\n    },\n    \"status\": 400\n  }\n]}\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 3, "UPD": 0, "TOT": 6, "DEL": 1, "INS": 4, "spoonFilesChanged": 3, "MOV": 1}, "title": "not able to pass an array as a property when Create a Unique Node in a index", "statsSkippedReason": "", "closed": "2013-10-01 07:58:23", "commitsDetails": [{"commitUser": "jexp", "commitDateTime": "2013-04-29 16:50:40", "commitHash": "1c7b97993abf222aa93945484a0d821619a87119", "commitParents": ["4d9575d67b87b0835afc39fa62a8f5497caf378e"], "commitGHEventType": "closed", "nameRev": "1c7b97993abf222aa93945484a0d821619a87119 tags/1.9.RC2~6", "commitGitStats": [{"insertions": 9, "lines": 10, "filePath": "community/server/src/main/java/org/neo4j/server/rest/web/DatabaseActions.java", "deletions": 1}, {"insertions": 19, "lines": 19, "filePath": "community/server/src/main/java/org/neo4j/server/rest/domain/PropertySettingStrategy.java", "deletions": 0}, {"insertions": 26, "lines": 26, "filePath": "community/server/src/test/java/org/neo4j/server/rest/IndexNodeDocIT.java", "deletions": 0}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.IndexNodeDocIT.get_or_create_node_with_array_properties()"}], "spoonFilePath": "IndexNodeDocIT.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.domain.PropertySettingStrategy.convert(java.lang.Object)"}], "spoonFilePath": "PropertySettingStrategy.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "DEL": 1, "INS": 2, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.web.DatabaseActions.getOrCreateIndexedNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.util.Map)"}], "spoonFilePath": "DatabaseActions.java"}], "commitMessage": "fixes #697 passing arrays as properties to unique node creation by making sure all the collections in the supplied properties are converted into arrays like in other places in the REST API\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-04-14 00:03:23"}, {"commitUser": "lassewesth", "commitDateTime": "2013-04-29 07:03:26", "commitHash": "92180938f148132f43a83f9a495b9385bc38315f", "commitParents": ["69255f840b8f4513511bdc4b4cb1006d75f52bdb", "76c534c608c5c2611a7a9815bf983c6b6545cd19"], "commitGHEventType": "referenced", "nameRev": "92180938f148132f43a83f9a495b9385bc38315f tags/1.8.3~14", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/server/src/main/java/org/neo4j/server/rest/web/RestfulGraphDatabase.java", "deletions": 1}, {"insertions": 26, "lines": 26, "filePath": "community/server/src/functionaltest/java/org/neo4j/server/rest/IndexNodeFunctionalTest.java", "deletions": 0}, {"insertions": 9, "lines": 10, "filePath": "community/server/src/main/java/org/neo4j/server/rest/web/DatabaseActions.java", "deletions": 1}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.rest.IndexNodeFunctionalTest.get_or_create_node_with_array_properties()"}], "spoonFilePath": "IndexNodeFunctionalTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 4, "DEL": 1, "INS": 2, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.web.DatabaseActions.getOrCreateIndexedNode(java.lang.String,java.lang.String,java.lang.String,java.lang.Long,java.util.Map)"}], "spoonFilePath": "DatabaseActions.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 1, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.server.rest.web.RestfulGraphDatabase.addToNodeIndex(org.neo4j.kernel.impl.transaction.xaframework.ForceMode,java.lang.String,java.lang.String,java.lang.String)"}], "spoonFilePath": "RestfulGraphDatabase.java"}], "commitMessage": "Merge pull request #700 from jexp/697-array-properties-in-unique-indexes\n\nfixes #697 passing arrays as properties to unique node creation", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-04-29 07:03:26"}], "created": "2013-04-12 18:14:20"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/658", "title": "\"Failed to mark transaction as rollback only\" exception and NPE", "closed": "2015-12-06 00:18:52", "commitsDetails": [], "commits": {}, "ttf": 984.0002777777778, "created": "2013-03-27 00:08:47", "user": "amorgner", "body": "In Neo4j 1.9.M02-M05 you cannot delete nodes and relationships which stem from cypher queries outside a transaction.\n\nFor details, see this article on SO:\nhttp://stackoverflow.com/questions/15571909/intended-change-in-behaviour-with-cypher-in-neo4j-1-9-m02-m05\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["8348fae382c1b037c54708777bdd485aceaa7b0c"], "url": "https://github.com/neo4j/neo4j/issues/650", "gitStatsSummary": {"insertions": 5, "gitFilesChange": 1, "lines": 8, "deletions": 3}, "numCommits": 1, "commits": {"8348fae382c1b037c54708777bdd485aceaa7b0c": {"commitUser": "systay", "commitGHEventType": "closed"}, "e352f3a7574d7f19fde89c3894109db1be755fbb": {"commitUser": "jakewins", "commitGHEventType": "referenced"}}, "ttf": 191.00027777777777, "user": "freeeve", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan"], "body": "```\nstart n=node(*) \nmatch n-[:parent_of*]->child \nwhere not(child-[:parent_of]->()) \nreturn n, sum(child.val), collect(child.val);\n\nError: Unknown identifier `child`.\n```\n\nhttp://console.neo4j.org/?id=l6lz2e\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "Cypher: collect and sum of same expression fails", "statsSkippedReason": "", "closed": "2013-10-01 07:58:42", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-03-26 20:26:40", "commitHash": "8348fae382c1b037c54708777bdd485aceaa7b0c", "commitParents": ["831e02c63c1d360602dacb731189935cece2664b"], "commitGHEventType": "closed", "nameRev": "8348fae382c1b037c54708777bdd485aceaa7b0c tags/1.9.RC1~60^2", "commitGitStats": [{"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 5, "lines": 8, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/AggregationBuilder.scala", "deletions": 3}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #650 - issue when doing multiple aggregation expressions on the same identifier\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-03-26 20:22:52"}, {"commitUser": "jakewins", "commitDateTime": "2013-03-27 02:01:25", "commitHash": "e352f3a7574d7f19fde89c3894109db1be755fbb", "commitParents": ["dc850de56e5955e93e00a9c3c0d1e060b02560a8", "8348fae382c1b037c54708777bdd485aceaa7b0c"], "commitGHEventType": "referenced", "nameRev": "e352f3a7574d7f19fde89c3894109db1be755fbb tags/1.9.RC1~60", "commitGitStats": [{"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 5, "lines": 8, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/AggregationBuilder.scala", "deletions": 3}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #657 from systay/650\n\nFixes #650 - issue when doing multiple aggregation expressions on the same identifier", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-03-27 02:01:25"}], "created": "2013-03-23 21:07:09"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/630", "title": "SET within FOREACH fails when referring to outside identifiers as part of the expression", "closed": "2014-03-03 14:16:41", "commitsDetails": [], "commits": {}, "ttf": 351.0002777777778, "created": "2013-03-17 02:21:59", "user": "jexp", "body": "```\nSTART root=node(1) \nMATCH root -[foo:KNOWS]-> other \nWITH root, COLLECT(foo) AS foos FOREACH(foo in foos : \n                                        SET root = other) \nRETURN root\n```\n\nfails with: unknown identifier other\n\nhttp://console.neo4j.org/r/9jgk7a\n\nAlso the stacktrace no longer allows reasoning about the source of the problem, it comes out of the execution-plan-building and has no nested exception.\n\n```\nUnknown identifier `other`\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.produceAndThrowException(ExecutionPlanImpl.scala:187)\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.prepareExecutionPlan(ExecutionPlanImpl.scala:64)\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.<init>(ExecutionPlanImpl.scala:36)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$prepare$1.apply(ExecutionEngine.scala:80)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$prepare$1.apply(ExecutionEngine.scala:80)\n    at org.neo4j.cypher.internal.LRUCache.getOrElseUpdate(LRUCache.scala:37)\n    at org.neo4j.cypher.ExecutionEngine.prepare(ExecutionEngine.scala:80)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:72)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:67)\n    at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:66)\n    at org.neo4j.community.console.CypherQueryExecutor.cypherQuery(CypherQueryExecutor.java:170)\n```\n"}, {"labels": ["bug", "feature"], "url": "https://github.com/neo4j/neo4j/issues/625", "title": "Deprecation warnings, and config issues", "closed": "2015-08-07 19:09:57", "commitsDetails": [], "commits": {}, "ttf": 875.0002777777778, "created": "2013-03-15 05:13:13", "user": "pboling", "body": "These kinds of messages in the log ([example](http://pastie.org/6506884)) seem like low hanging fruit.\n1. `INFO ... Could NOT find resource [logback.groovy]`\n2. `INFO ... Could NOT find resource [logback-test.xml]`\n3. `ERROR ... Could not find resource corresponding to [custom-logback.xml]`\n4. And this one\n   \n   ```\n   WARNING! Deprecated configuration options used. See manual for details\n   cannot configure writers and searchers individually since they go together\n   ```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/608", "title": "Parametized LIMIT clause after collect function throws exception", "closed": "2013-03-26 07:02:40", "commitsDetails": [], "commits": {}, "ttf": 13.000277777777777, "created": "2013-03-12 11:47:46", "user": "tathamoddie", "body": "This REST call to `1.8.M07-1-g09701c5`:\n\n```\nPOST /db/data/cypher HTTP/1.1\nUser-Agent: Fiddler\nHost: localhost:8000\nContent-Length: 121\nAccept: application/json\nContent-Type: application/json\n\n{\n  \"query\": \"START root=node({p0}) RETURN collect(root) LIMIT {p1}\",\n  \"params\" : {\n    \"p0\": 0,\n    \"p1\": 3\n  }\n}\n```\n\nResults in this error:\n\n```\nHTTP/1.1 400 Bad Request\nContent-Length: 1377\nContent-Encoding: UTF-8\nContent-Type: application/json\nAccess-Control-Allow-Origin: *\nServer: Jetty(6.1.25)\n\n{\n  \"message\" : \"Expected a parameter named p1\",\n  \"exception\" : \"BadInputException\",\n  \"stacktrace\" : [ \"org.neo4j.server.rest.repr.RepresentationExceptionHandlingIterable.exceptionOnHasNext(RepresentationExceptionHandlingIterable.java:51)\", \"org.neo4j  .  helpers.collection.ExceptionHandlingIterable$1.hasNext(ExceptionHandlingIterable.java:61)\", \"org.neo4j.helpers.collection.IteratorWrapper.hasNext(IteratorWrapper.    java:42)\", \"org.neo4j.server.rest.repr.ListRepresentation.serialize(ListRepresentation.java:58)\", \"org.neo4j.server.rest.repr.Serializer.serialize(Serializer.  java:75)  \", \"org.neo4j.server.rest.repr.MappingSerializer.putList(MappingSerializer.java:61)\", \"org.neo4j.server.rest.repr.CypherResultRepresentation.serialize(    CypherResultRepresentation.java:50)\", \"org.neo4j.server.rest.repr.MappingRepresentation.serialize(MappingRepresentation.java:42)\", \"org.neo4j.server.rest.repr.    OutputFormat.format(OutputFormat.java:170)\", \"org.neo4j.server.rest.repr.OutputFormat.formatRepresentation(OutputFormat.java:120)\", \"org.neo4j.server.rest.repr.    OutputFormat.response(OutputFormat.java:107)\", \"org.neo4j.server.rest.repr.OutputFormat.ok(OutputFormat.java:55)\", \"org.neo4j.server.rest.web.CypherService.cypher(    CypherService.java:68)\", \"java.lang.reflect.Method.invoke(Unknown Source)\", \"org.neo4j.server.statistic.StatisticFilter.doFilter(StatisticFilter.java:62)\" ]\n}\n```\n\nIt only happens when there is a `LIMIT` clause after a `collect` function and that clause uses a parameter.\n\nIt can clearly find the parameters ok, because it finds `p0`. It just doesn't believe that `p1` exists.\n\n(I acknowledge that this is against an old milestone, and I will test against a newer one shortly. Just capturing for now.)\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/600", "title": "Strange behavior when querying for Nodes with self-referential relationships", "closed": "2013-12-10 11:48:22", "commitsDetails": [], "commits": {}, "ttf": 276.0002777777778, "created": "2013-03-08 15:23:47", "user": "blevine", "body": "I have reproduced this on 1.8.1 and 1.8.2.\n\nCreate a node that has 1 link to itself.  The query below is designed to return the node and its relationships separated into incoming and outgoing relationships. It also includes the start nodes (for incoming relationships) and end nodes (for outgoing relationships). \n\n```\nSTART n=node(12) MATCH n<-[links_n_in?]-(n_from),n-[links_n_out?]->(n_to) RETURN n,COLLECT(n_from) AS n_from,COLLECT(links_n_in) AS links_n_in,COLLECT(n_to) AS n_to,COLLECT(links_n_out) AS links_n_out\n```\n\nWhen the node has 1 self-referential relationship, either the links_n_in or links_n_out array is populated with the expected relationships, but not both.  And the behavior seems to be nondeterministic.  Sometimes the links_n_in array is populated and sometimes the links_n_out array is populated.  Note the use of optional relationships in the query. When I do not use optional relationships (omit the '?'), this behavior does not occur and both arrays are populated as expected.\n\nWhen the node has 2 self-referential relationships, this problem does not occur and both arrays are populated with 2 relationships as expected. This is true regardless of whether optional relationships are used in the query.\n\nHowever, when the node has 3 self-referential relationships, both arrays are populated with 6 relationships instead of the expected 3.  In other words, each relationship is duplicated.  Similar behavior also results with more than 3 relationships.  This occurs regardless of whether optional relationships are used in the query. Note that adding DISTINCT inside COLLECT(links_n_in) and COLLECT(links_n_out) fixes this problem.\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/597", "title": "Unable to install as a service under windows 7", "closed": "2017-06-22 12:14:04", "commitsDetails": [], "commits": {}, "ttf": 1567.0002777777777, "created": "2013-03-07 16:50:43", "user": "mijujoel", "body": "Here's the command in \"Services\" under Windows:\n\nC:\\Program Files (x86)\\Java\\jre\\bin\\java.exe -Djava.util.logging.config.file=conf\\windows-wrapper-logging.properties -DworkingDir=C:\\NEO4J-~1.M05\\bin.. -DconfigFile=conf\\neo4j-wrapper.conf -DserverClasspath=lib/_.jar;system/lib/_.jar;plugins/_.jar;system/coordinator/lib/_.jar;./conf\\* -DserverMainClass=org.neo4j.server.Bootstrapper -Dorg.neo4j.cluster.logdirectory=C:\\NEO4J-~1.M05\\bin..\\data\\log -jar C:\\NEO4J-~1.M05\\bin\\windows-service-wrapper-*.jar Neo4j-Server\n\nThe Neo4J directory is not correct in this command - ~1.M05 - I was trying to install 1.9.M05.  I changed the directory name since I couldn't find a config file that let me set the directory.  Neo4J_Home and Java_Home seem to be okay.  I have a 64-bit OS and both 32-bit and 64-bit java are installed, but I set Java_Home to the 32-bit version and listed the 32-bit version first in my Path.  The service installs but says it can't start in a timely manner.  Any suggestions?\n"}, {"labels": ["bug"], "filteredCommits": ["4d9575d67b87b0835afc39fa62a8f5497caf378e"], "url": "https://github.com/neo4j/neo4j/issues/594", "gitStatsSummary": {"insertions": 3, "gitFilesChange": 3, "lines": 5, "deletions": 2}, "numCommits": 1, "commits": {"4d9575d67b87b0835afc39fa62a8f5497caf378e": {"commitUser": "digitalstain", "commitGHEventType": "referenced"}}, "ttf": 208.00027777777777, "user": "yeysus", "changesInPackagesGIT": ["packaging/standalone/src/main/distribution/shell-scripts/bin/neo4j", "packaging/standalone/standalone-community/src/main/distribution/text/community/conf/neo4j-wrapper.conf", "packaging/standalone/src/main/distribution/shell-scripts/bin/utils"], "body": "service neo4j-service start \nreturns\nsu: user neo4jwrapper.user.created=false does not exist\n... \nIt does not start. I think the solution is to repair the last line from the file conf/neo4j-wrapper.conf from\nwrapper.user=neo4jwrapper.user.created=false\nto\nwrapper.user=neo4j\nwrapper.user.created=false\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Neo4j Community 1.9.M05 fails to install under CentOS 6.3", "statsSkippedReason": "", "closed": "2013-10-01 07:58:49", "commitsDetails": [{"commitUser": "digitalstain", "commitDateTime": "2013-04-29 16:21:02", "commitHash": "4d9575d67b87b0835afc39fa62a8f5497caf378e", "commitParents": ["f6109de4cef32374f2ac89daaa1248020e5f936c"], "commitGHEventType": "referenced", "nameRev": "4d9575d67b87b0835afc39fa62a8f5497caf378e tags/1.9.RC2~7", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "packaging/standalone/src/main/distribution/shell-scripts/bin/neo4j", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "packaging/standalone/standalone-community/src/main/distribution/text/community/conf/neo4j-wrapper.conf", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "packaging/standalone/src/main/distribution/shell-scripts/bin/utils", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes issue #594\n\nAdds newline in community's neo4j-wrapper.conf so the username doesn't get mangled\n by the user creation flag\nFixes the user creation flag reset on service remove\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-04-29 16:18:37"}], "created": "2013-03-06 22:58:47"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/593", "title": "Cypher: CREATE should not work on an identifier that already exists in the context", "closed": "2016-10-20 19:36:00", "commitsDetails": [], "commits": {}, "ttf": 1323.0002777777777, "created": "2013-03-06 22:11:17", "user": "systay", "body": "This should throw an error: http://console.neo4j.org/r/u6y91s\n\n```\nSTART n=node(0)\nCREATE n\n```\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/583", "title": "500 Internal Server Error when adding long text to an index", "closed": "2013-03-25 12:09:50", "commitsDetails": [], "commits": {}, "ttf": 20.00027777777778, "created": "2013-03-05 11:24:39", "user": "bnikolov", "body": "I'm using Neo4j-community-1.9.M04, connecting with python rest client (py2neo 1.4.5).\nWhen I try to add a long text to an index, the server returns 500 Internal Server Error.\n\nUsing the py2neo client, I something like:\n\n```\neverything_idx = gdb.get_or_create_index(neo4j.Node, \"everything\", config={\"type\": \"fulltext\"})\neverything_idx.add(\"everything\", long_text, recommendation_node)\n```\n\nWhere long_text is a variable containing text parsed from a URL and recommendation_node is the Node instance I want to index.\n\nThis is what I have in the py2neo log:\n\n```\nINFO 2013-03-05 11:47:17,855 rest 11104 1108 POST /db/data/index/node/everything {'Content-Type': 'application/json', 'X-Stream': 'true', 'Accept': 'application/json', 'User-Agent': 'py2neo/1.4.6 (win32; python/2.7.2)'} (47486 bytes)\nINFO 2013-03-05 11:47:17,894 rest 11104 1108 500 Internal Server Error {'content-length': '0', 'server': 'Jetty(6.1.25)'}\n```\n\nIn Neo4j logs I have the following:\nconsole.log:\n\n```\n11:47:19.733 [1695422617@qtp-1319007734-22] WARN  org.mortbay.log - header full: java.lang.ArrayIndexOutOfBoundsException\n11:47:19.734 [1695422617@qtp-1319007734-22] ERROR org.mortbay.log - /db/data/index/node/everything\njavax.ws.rs.WebApplicationException: null\n        at org.neo4j.server.rest.repr.OutputFormat$1.write(OutputFormat.java:156) ~[neo4j-server-1.9.M04.jar:1.9.M04]\n        at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71) ~[jersey-core-1.9.jar:1.9]\n        at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57) ~[jersey-core-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537) ~[jersey-server-1.9.jar:1.9]\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699) ~[jersey-server-1.9.jar:1.9]\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820) ~[servlet-api-2.5-20081211.jar:na]\n        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511) ~[jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:390) ~[jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.Server.handle(Server.java:326) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410) [jetty-6.1.25.jar:6.1.25]\n        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582) [jetty-util-6.1.25.jar:6.1.25]\n```\n\nand in neo4j.0.0.log:\n\n```\nMar 5, 2013 11:47:19 AM com.sun.jersey.server.impl.application.WebApplicationImpl _handleRequest\nSEVERE: The response of the WebApplicationException cannot be utilized as the response is already committed. Re-throwing to the HTTP container\njavax.ws.rs.WebApplicationException\n        at org.neo4j.server.rest.repr.OutputFormat$1.write(OutputFormat.java:156)\n        at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:71)\n        at com.sun.jersey.core.impl.provider.entity.StreamingOutputProvider.writeTo(StreamingOutputProvider.java:57)\n        at com.sun.jersey.spi.container.ContainerResponse.write(ContainerResponse.java:306)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl._handleRequest(WebApplicationImpl.java:1437)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1349)\n        at com.sun.jersey.server.impl.application.WebApplicationImpl.handleRequest(WebApplicationImpl.java:1339)\n        at com.sun.jersey.spi.container.servlet.WebComponent.service(WebComponent.java:416)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:537)\n        at com.sun.jersey.spi.container.servlet.ServletContainer.service(ServletContainer.java:699)\n        at javax.servlet.http.HttpServlet.service(HttpServlet.java:820)\n        at org.mortbay.jetty.servlet.ServletHolder.handle(ServletHolder.java:511)\n        at org.mortbay.jetty.servlet.ServletHandler.handle(ServletHandler.java:390)\n        at org.mortbay.jetty.servlet.SessionHandler.handle(SessionHandler.java:182)\n        at org.mortbay.jetty.handler.ContextHandler.handle(ContextHandler.java:765)\n        at org.mortbay.jetty.handler.HandlerCollection.handle(HandlerCollection.java:114)\n        at org.mortbay.jetty.handler.HandlerWrapper.handle(HandlerWrapper.java:152)\n        at org.mortbay.jetty.Server.handle(Server.java:326)\n        at org.mortbay.jetty.HttpConnection.handleRequest(HttpConnection.java:542)\n        at org.mortbay.jetty.HttpConnection$RequestHandler.content(HttpConnection.java:943)\n        at org.mortbay.jetty.HttpParser.parseNext(HttpParser.java:756)\n        at org.mortbay.jetty.HttpParser.parseAvailable(HttpParser.java:218)\n        at org.mortbay.jetty.HttpConnection.handle(HttpConnection.java:404)\n        at org.mortbay.io.nio.SelectChannelEndPoint.run(SelectChannelEndPoint.java:410)\n        at org.mortbay.thread.QueuedThreadPool$PoolThread.run(QueuedThreadPool.java:582)\n```\n\nI thought the problem could be the rest client I'm using, so I changed it (I tried neo4jrestclient first).\n\nAny Ideas?\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["0de610459c21769eaa1a8ee2688b2cc2bcaf9b5e"], "url": "https://github.com/neo4j/neo4j/issues/578", "gitStatsSummary": {"insertions": 8, "gitFilesChange": 3, "lines": 20, "deletions": 12}, "numCommits": 1, "commits": {"0de610459c21769eaa1a8ee2688b2cc2bcaf9b5e": {"commitUser": "boggle", "commitGHEventType": "closed"}}, "ttf": 211.00027777777777, "user": "systay", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan", "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes", "community/cypher/src/main/scala/org/neo4j/cypher/internal/profiler"], "body": "http://console.neo4j.org/r/k8bz8c\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Cypher: Profile throws exception on queries with LIMIT", "statsSkippedReason": "", "closed": "2013-10-01 07:58:57", "commitsDetails": [{"commitUser": "boggle", "commitDateTime": "2013-03-15 16:41:45", "commitHash": "0de610459c21769eaa1a8ee2688b2cc2bcaf9b5e", "commitParents": ["248906468c945273c8678f043de83a7e8ea772ff"], "commitGHEventType": "closed", "nameRev": "0de610459c21769eaa1a8ee2688b2cc2bcaf9b5e tags/2.0.0-M01~18^2~22", "commitGitStats": [{"insertions": 2, "lines": 9, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/ExecutionPlanImpl.scala", "deletions": 7}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 15, "lines": 15, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 4, "lines": 7, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/profiler/Profiler.scala", "deletions": 3}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/PipeDecorator.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/profiler/ProfilerTest.scala", "deletions": 2}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #578\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-03-15 16:40:38"}], "created": "2013-03-03 15:25:35"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/576", "title": "/opt/local/bin/lsof: illegal option -- T", "closed": "2015-12-05 06:32:54", "commitsDetails": [], "commits": {}, "ttf": 1007.0002777777778, "created": "2013-03-02 08:21:11", "user": "webjay", "body": "When I start Neo4j on SmartOS I use this script:\n\n```\n#!/bin/sh\n\nJAVA_HOME=/opt/local/java/sun6\nexport JAVA_HOME\n\nulimit -n 65536\n\n`dirname $0`/bin/neo4j start-no-wait\n```\n\nThat works, but I get this:\n\n```\n/opt/local/bin/lsof: illegal option -- T\n```\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/570", "title": "Webadmin collapses space characters of node's property", "closed": "2015-12-05 06:45:27", "commitsDetails": [], "commits": {}, "ttf": 1009.0002777777778, "created": "2013-02-28 13:57:29", "user": "psysp", "body": "When a Cypher query returns a node's string property which contains multiple sequenced  space characters, then the webadmin interface displays this property with only one space character left. \n\n<pre>\nE.g. a property like \"Homer      Simpson\" will be shown as \"Homer Simpson\".\n</pre>\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/564", "title": "Wrong match results if two variables bind to the same node", "closed": "2015-12-05 06:44:50", "commitsDetails": [], "commits": {}, "ttf": 1010.0002777777778, "created": "2013-02-27 19:14:50", "user": "BGehrels", "body": "If my graph looks like this:\n\n```\n(1)-[:L1]->(2)\n```\n\ni would expect\n\n```\nSTART\n    n=node(1),\n    m=node(1)\nMATCH m-[:L1]->x<-[:L1]-n\nRETURN x.name AS x\n```\n\nto return\n\n```\nx = node(2)\n```\n\nInstead, it returns an empty result. This may even be a feature, not a bug, but it should then be explicitly documented somewhere.\n\nBut i would propose not to call this a feature: If i would have wanted both edges to differ, i would have added a\n\n```\nrel1 != rel2\n```\n\ncondition.\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/559", "title": "StringIndexOutOfBoundsException when executing cypher statement from java", "closed": "2013-03-04 12:55:57", "commitsDetails": [], "commits": {}, "ttf": 6.000277777777778, "created": "2013-02-26 10:07:25", "user": "fahrrad", "body": "When executing following Cypher statement, I get an StringIndexOutOfBoundsException.\n\nI know there is an error in the query: the trailing comma. But I guess the error message could be clearer :)\n\n``` cypher\nSTART davidson=node:actors(actor='Peter Davison'), freema=node:actors(actor='Freema Agyeman')\ndoctor=node:characters(character='Doctor') \nMATCH davidson-[:APPEARED_IN]->(episode) <-[:APPEARD_IN]- \n (enemy)-[:ENEMY_OF]-doctor\nRETURN episode.episode, episode.episode, collect(enemy.character?) AS characters,  collect(enemy.species?) AS species,\n```\n\nThe way I executed the query was like so:\n\n``` java\nExecutionResult result = engine.execute( query);\n```\n\nthis is the stacktrace:\n\njava.lang.StringIndexOutOfBoundsException: String index out of range: 0\n    at java.lang.String.charAt(Unknown Source)\n    at org.neo4j.cypher.internal.parser.v1_8.StringLiteral$$anonfun$stringLit$1.apply(StringLiteral.scala:30)\n    at org.neo4j.cypher.internal.parser.v1_8.StringLiteral$$anonfun$stringLit$1.apply(StringLiteral.scala:25)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1$$anonfun$apply$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1$$anonfun$apply$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Failure.append(Parsers.scala:163)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at org.neo4j.cypher.internal.parser.v1_8.Base$$anonfun$trap$1.apply(Base.scala:61)\n    at org.neo4j.cypher.internal.parser.v1_8.Base$$anonfun$trap$1.apply(Base.scala:60)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Success.flatMapWithNext(Parsers.scala:114)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$$anonfun$rep1$1.applyp$1(Parsers.scala:594)\n    at scala.util.parsing.combinator.Parsers$$anonfun$rep1$1.continue$1(Parsers.scala:599)\n    at scala.util.parsing.combinator.Parsers$$anonfun$rep1$1.apply(Parsers.scala:603)\n    at scala.util.parsing.combinator.Parsers$$anonfun$rep1$1.apply(Parsers.scala:588)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Success.flatMapWithNext(Parsers.scala:114)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Success.flatMapWithNext(Parsers.scala:114)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Success.flatMapWithNext(Parsers.scala:114)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Success.flatMapWithNext(Parsers.scala:114)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1$$anonfun$apply$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1$$anonfun$apply$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Failure.append(Parsers.scala:163)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$append$1.apply(Parsers.scala:210)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Success.flatMapWithNext(Parsers.scala:114)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$map$1.apply(Parsers.scala:204)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$Parser$$anonfun$flatMap$1.apply(Parsers.scala:201)\n    at scala.util.parsing.combinator.Parsers$$anon$3.apply(Parsers.scala:183)\n    at scala.util.parsing.combinator.Parsers$$anon$2.apply(Parsers.scala:754)\n    at scala.util.parsing.combinator.RegexParsers$class.parse(RegexParsers.scala:100)\n    at org.neo4j.cypher.internal.parser.v1_8.Base.parse(Base.scala:26)\n    at scala.util.parsing.combinator.RegexParsers$class.parseAll(RegexParsers.scala:116)\n    at org.neo4j.cypher.internal.parser.v1_8.Base.parseAll(Base.scala:26)\n    at org.neo4j.cypher.internal.parser.v1_8.CypherParserImpl.parse(CypherParserImpl.scala:40)\n    at org.neo4j.cypher.CypherParser.parse(CypherParser.scala:44)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$prepare$1.apply(ExecutionEngine.scala:61)\n    at org.neo4j.cypher.ExecutionEngine$$anonfun$prepare$1.apply(ExecutionEngine.scala:61)\n    at org.neo4j.cypher.internal.LRUCache.getOrElseUpdate(LRUCache.scala:31)\n    at org.neo4j.cypher.ExecutionEngine.prepare(ExecutionEngine.scala:61)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:55)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:52)\n    at org.neo4j.tutorial.Koan08c.shouldListTheEnemySpeciesAndCharactersForEachEpisodeWithPeterDavisonOrderedByIncreasingEpisodeNumber(Koan08c.java:151)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)\n    at java.lang.reflect.Method.invoke(Unknown Source)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:45)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:15)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:42)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:20)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:263)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:68)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:47)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:231)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:60)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:50)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:222)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:28)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:30)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:300)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["77e82a8951eb219b99694c34e07032ceccdfa74d"], "url": "https://github.com/neo4j/neo4j/issues/550", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 1, "lines": 1, "deletions": 1}, "numCommits": 1, "commits": {"77e82a8951eb219b99694c34e07032ceccdfa74d": {"commitUser": "systay", "commitGHEventType": "closed"}, "7565445f8c3cca88f6fd6abc18a8a63e1ee23638": {"commitUser": "digitalstain", "commitGHEventType": "referenced"}}, "ttf": 221.00027777777777, "user": "jexp", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan"], "body": "SyntaxException: All parts of the pattern must either directly or indirectly be connected to at least one bound entity. These identifiers were found to be disconnected:   UNNAMED5,   UNNAMED6, document, person, startEntity\n\nstart p=node:Id_Index(Type='PER') \nwith collect(distinct p) as people \nSTART startEntity=node:Id_Index(Id='JamesDSteffesPER') \nMATCH startEntity<-[:HAS_ENTITY]-(document)-[:HAS_ENTITY]->(person) \nwhere person IN people \nRETURN person.Id as Id, count(document) as DocCount \nORDER BY DocCount DESC \nLIMIT 11;\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "1.9.M04 All parts of the pattern must either directly or indirectly be connected", "statsSkippedReason": "", "closed": "2013-10-01 07:59:11", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-03-06 07:08:17", "commitHash": "77e82a8951eb219b99694c34e07032ceccdfa74d", "commitParents": ["ed7f315fe5d8d1b23d4369ca54934aa68efd734f"], "commitGHEventType": "closed", "nameRev": "77e82a8951eb219b99694c34e07032ceccdfa74d tags/2.0.0-M01~18^2~51^2", "commitGitStats": [{"insertions": 14, "lines": 15, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 1}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/ExecutionPlanImpl.scala", "deletions": 1}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #550 - problem when using START after WITH\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-03-06 07:08:17"}, {"commitUser": "digitalstain", "commitDateTime": "2013-03-06 01:24:26", "commitHash": "7565445f8c3cca88f6fd6abc18a8a63e1ee23638", "commitParents": ["01dc533ef4f03455bd7dda353c7c0ad462931487", "77e82a8951eb219b99694c34e07032ceccdfa74d"], "commitGHEventType": "referenced", "nameRev": "7565445f8c3cca88f6fd6abc18a8a63e1ee23638 tags/2.0.0-M01~18^2~51", "commitGitStats": [{"insertions": 14, "lines": 15, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 1}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/ExecutionPlanImpl.scala", "deletions": 1}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #585 from systay/550\n\nFixes #550 - problem when using START after WITH", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-03-06 01:24:26"}], "created": "2013-02-22 00:30:23"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/544", "title": "LowestCommonAncestor: Incorrect results for DAGs", "closed": "2019-12-10 12:37:32", "commitsDetails": [], "commits": {}, "ttf": 2483.0002777777777, "created": "2013-02-20 19:54:30", "user": "jdgarrett", "body": "The lowestCommonAncestor algorithm under org.neo4j.graphalgo.impl.ancestor.AncestorsUtil seems to only work for trees.  It returns incorrect results when performing the algorithm on DAGs.  For example, given the following graph:\n`A`\n`|\\`\n`B C`\n`| |`\n`D |`\n`|/`\n`E`\nThe common ancestor for D and C returns A correctly, however the common ancestor between  E and C also returns A, when it should return C, since C is a direct ancestor of E.\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["1591ab4cb36302569a1acb645c8b98d48b27dd49"], "url": "https://github.com/neo4j/neo4j/issues/535", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"1591ab4cb36302569a1acb645c8b98d48b27dd49": {"commitUser": "systay", "commitGHEventType": "closed"}, "759c91f738ad28361eccec702e18232febababaf": {"commitUser": "tinwelint", "commitGHEventType": "referenced"}}, "ttf": 2.000277777777778, "user": "baarden", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan"], "body": "In recent versions of Neo4j (at least 1.8.1 and above, but not 1.8.M04), queries that sort by ID have started including a column titled something like INTERNAL_SORT (e.g., '  INTERNAL_SORT-1772116390').\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "INTERNAL_SORT* column in results sorted by ID", "statsSkippedReason": "", "closed": "2013-02-20 09:13:31", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-02-19 08:35:37", "commitHash": "1591ab4cb36302569a1acb645c8b98d48b27dd49", "commitParents": ["ee1618f470a8d79a1de5eabbca1e28ab110056c8"], "commitGHEventType": "closed", "nameRev": "1591ab4cb36302569a1acb645c8b98d48b27dd49 tags/1.9.M05~37^2", "commitGitStats": [{"insertions": 1, "lines": 1, "filePath": "packaging/standalone/standalone-enterprise/src/main/distribution/text/enterprise/CHANGES.txt", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/SortBuilder.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "packaging/standalone/standalone-community/src/main/distribution/text/community/CHANGES.txt", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "packaging/standalone/standalone-advanced/src/main/distribution/text/advanced/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #535 - \"INTERNAL_SORT\" columns show when doing RETURN * ORDER BY\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-02-19 08:33:58"}, {"commitUser": "tinwelint", "commitDateTime": "2013-02-20 01:13:30", "commitHash": "759c91f738ad28361eccec702e18232febababaf", "commitParents": ["0ef092283414c5c3f7886a09a5271234aa9af136", "1591ab4cb36302569a1acb645c8b98d48b27dd49"], "commitGHEventType": "referenced", "nameRev": "759c91f738ad28361eccec702e18232febababaf tags/1.9.M05~37", "commitGitStats": [{"insertions": 1, "lines": 1, "filePath": "packaging/standalone/standalone-enterprise/src/main/distribution/text/enterprise/CHANGES.txt", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/SortBuilder.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "packaging/standalone/standalone-community/src/main/distribution/text/community/CHANGES.txt", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "packaging/standalone/standalone-advanced/src/main/distribution/text/advanced/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #537 from systay/535\n\nFixes #535 - \"INTERNAL_SORT\" columns show when doing RETURN * ORDER BY", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-02-20 01:13:30"}], "created": "2013-02-18 03:46:47"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/513", "title": "Statistics returns zero for deleted relationships", "closed": "2013-02-22 00:32:40", "commitsDetails": [], "commits": {}, "ttf": 10.000277777777777, "created": "2013-02-11 21:06:01", "user": "vshank77", "body": "When I delete just a relationship, statistics still returns 0 for getRelationshipsDeleted()\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/505", "title": "webadmin GUI lies about property count", "closed": "2013-12-10 12:07:32", "commitsDetails": [], "commits": {}, "ttf": 306.0002777777778, "created": "2013-02-06 20:51:40", "user": "odigity", "body": "The properties count on the front page of the webadmin GUI does not actually report the total number of properties, which is what anyone would assume.  It instead reports the number of property blocks, where every node and relationship has at least one block, and each block holds up to four properties.\n\nFor example, I recently imported a data set containing 6,645 nodes with one property each, and 11,469 relationships with two properties each.  I expected the total number of properties to be 29,583 (6,645 + (11,469 \\* 2)).  Instead it was 18,114 (6,645 + 11,469).\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["53094b8f6765b57c2b654b8d70255b74833c8b24"], "url": "https://github.com/neo4j/neo4j/issues/489", "gitStatsSummary": {"insertions": 2, "gitFilesChange": 1, "lines": 11, "deletions": 9}, "numCommits": 1, "commits": {"dcdddacbcb8ff771a85abb8a59cd0e44470de168": {"commitUser": "boggle", "commitGHEventType": "referenced"}, "53094b8f6765b57c2b654b8d70255b74833c8b24": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 22.00027777777778, "user": "freeeve", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation"], "body": "Attempting to link all nodes in a collection to eachother uniquely...\n\nhttp://console.neo4j.org/r/6uolm3\n\nonly creates one relationship.\n\n`create` creates 49 relationships:\n\nhttp://console.neo4j.org/r/q1qoyq\n\nThis was my eventual solution, but it seems like `create unique` should have done a better job:\n\nhttp://console.neo4j.org/r/8gf7bv\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "Cypher: create unique doesn't seem to work correctly in foreach for a collection of nodes", "statsSkippedReason": "", "closed": "2013-02-25 10:11:16", "commitsDetails": [{"commitUser": "boggle", "commitDateTime": "2013-02-25 02:11:15", "commitHash": "dcdddacbcb8ff771a85abb8a59cd0e44470de168", "commitParents": ["78669668e6fe3fd1c4b9ef280bcd8c82bf3d4bb2", "53094b8f6765b57c2b654b8d70255b74833c8b24"], "commitGHEventType": "referenced", "nameRev": "dcdddacbcb8ff771a85abb8a59cd0e44470de168 tags/1.9.M05~26", "commitGitStats": [{"insertions": 19, "lines": 19, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/CreateUniqueAcceptanceTest.scala", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 2, "lines": 11, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/ForeachAction.scala", "deletions": 9}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #555 from systay/489\n\nFixes #489 - CREATE UNIQUE does not work as expected inside FOREACH", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-02-25 02:11:15"}, {"commitUser": "systay", "commitDateTime": "2013-02-24 09:30:49", "commitHash": "53094b8f6765b57c2b654b8d70255b74833c8b24", "commitParents": ["78669668e6fe3fd1c4b9ef280bcd8c82bf3d4bb2"], "commitGHEventType": "closed", "nameRev": "53094b8f6765b57c2b654b8d70255b74833c8b24 tags/1.9.M05~26^2", "commitGitStats": [{"insertions": 19, "lines": 19, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/CreateUniqueAcceptanceTest.scala", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 2, "lines": 11, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/ForeachAction.scala", "deletions": 9}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #489 - CREATE UNIQUE does not work as expected inside FOREACH\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-02-24 09:30:49"}], "created": "2013-02-02 16:09:59"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/485", "title": "Better support for lucene numerics notation", "closed": "2015-12-05 06:42:54", "commitsDetails": [], "commits": {}, "ttf": 1037.0002777777777, "created": "2013-01-31 17:49:09", "user": "NicholasAStuart", "body": "When I try to use use Lucene supported notation for numerical values in cypher, such as `[0 TO 1]` or `[0 TO *]`, these do not match numically stored values that I have created with neo4j in the index. Some of this works, such as doing `[0 TO 2]` for a numeric of `1`, but if I do `[1 TO 1]` or `[0 TO 1]` which works for lucene I do not get any results in Cypher.\n"}, {"labels": ["bug"], "filteredCommits": ["08f3ac424df953c46e6b217112da2254531555bd"], "url": "https://github.com/neo4j/neo4j/issues/468", "gitStatsSummary": {"insertions": 14, "gitFilesChange": 2, "lines": 78, "deletions": 64}, "numCommits": 1, "commits": {"08f3ac424df953c46e6b217112da2254531555bd": {"commitUser": "tinwelint", "commitGHEventType": "closed"}, "2b66b6d2bf73d370a812ec94eeb5518e16136ed8": {"commitUser": "systay", "commitGHEventType": "referenced"}}, "ttf": 21.00027777777778, "user": "breun", "changesInPackagesSPOON": ["org.neo4j.kernel.impl.transaction.TxManager.doRecovery()", "org.neo4j.kernel.impl.transaction.TxManager", "org.neo4j.kernel.impl.transaction.TxManager.begin(org.neo4j.kernel.impl.transaction.xaframework.ForceMode)", "org.neo4j.kernel.impl.transaction.TxManager.attemptWaitForTxCompletionAndBlockFutureTransactions(long)", "org.neo4j.kernel.impl.transaction.AbstractTransactionManager.attemptWaitForTxCompletionAndBlockFutureTransactions(long)"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/kernel/impl/transaction"], "body": "After starting up a new Neo4j instance, not performing any operations, shutting it down and starting it up again, it logged the following INFO message:\n\n`TM non resolved transactions found in /tmp/bug/tm_tx_log.1`\n\nI stepped with a debugger through the doRecovery() method in https://github.com/neo4j/neo4j/blob/master/community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/TxManager.java and found that regardless of whether knownDanglingRecordList contains any records this message is logged and recovery is attempted.\n\nTo avoid confusion I would recommend changing this method to not log this message when there are no dangling records.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {"spoonMethodsChanged": 5, "UPD": 2, "TOT": 17, "DEL": 5, "INS": 6, "spoonFilesChanged": 2, "MOV": 4}, "title": "Empty transaction log causes TxManager to log non resolved transactions on startup", "statsSkippedReason": "", "closed": "2013-02-20 09:28:45", "commitsDetails": [{"commitUser": "tinwelint", "commitDateTime": "2013-02-20 10:23:27", "commitHash": "08f3ac424df953c46e6b217112da2254531555bd", "commitParents": ["ee1618f470a8d79a1de5eabbca1e28ab110056c8"], "commitGHEventType": "closed", "nameRev": "08f3ac424df953c46e6b217112da2254531555bd tags/1.9.M05~36^2", "commitGitStats": [{"insertions": 14, "lines": 69, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/TxManager.java", "deletions": 55}, {"insertions": 0, "lines": 9, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/AbstractTransactionManager.java", "deletions": 9}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.AbstractTransactionManager.attemptWaitForTxCompletionAndBlockFutureTransactions(long)"}], "spoonFilePath": "AbstractTransactionManager.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 11, "DEL": 1, "INS": 4, "MOV": 4, "spoonMethodName": "org.neo4j.kernel.impl.transaction.TxManager.doRecovery()"}, {"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.TxManager.begin(org.neo4j.kernel.impl.transaction.xaframework.ForceMode)"}, {"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.TxManager.attemptWaitForTxCompletionAndBlockFutureTransactions(long)"}, {"UPD": 0, "TOT": 3, "DEL": 1, "INS": 2, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.TxManager"}], "spoonFilePath": "TxManager.java"}], "commitMessage": "Fixes #468\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-02-19 11:01:12"}, {"commitUser": "systay", "commitDateTime": "2013-02-20 01:28:44", "commitHash": "2b66b6d2bf73d370a812ec94eeb5518e16136ed8", "commitParents": ["759c91f738ad28361eccec702e18232febababaf", "08f3ac424df953c46e6b217112da2254531555bd"], "commitGHEventType": "referenced", "nameRev": "2b66b6d2bf73d370a812ec94eeb5518e16136ed8 tags/1.9.M05~36", "commitGitStats": [{"insertions": 14, "lines": 69, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/TxManager.java", "deletions": 55}, {"insertions": 0, "lines": 9, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/AbstractTransactionManager.java", "deletions": 9}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.AbstractTransactionManager.attemptWaitForTxCompletionAndBlockFutureTransactions(long)"}], "spoonFilePath": "AbstractTransactionManager.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 11, "DEL": 1, "INS": 4, "MOV": 4, "spoonMethodName": "org.neo4j.kernel.impl.transaction.TxManager.doRecovery()"}, {"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.TxManager.begin(org.neo4j.kernel.impl.transaction.xaframework.ForceMode)"}, {"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.TxManager.attemptWaitForTxCompletionAndBlockFutureTransactions(long)"}, {"UPD": 0, "TOT": 3, "DEL": 1, "INS": 2, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.transaction.TxManager"}], "spoonFilePath": "TxManager.java"}], "commitMessage": "Merge pull request #539 from tinwelint/fix-468\n\nFixes #468", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-02-20 01:28:44"}], "created": "2013-01-29 11:42:11"}, {"labels": ["bug", "cypher"], "filteredCommits": ["051f6ab285eb21d16afeb87ed5bd9cfacfc67e47"], "url": "https://github.com/neo4j/neo4j/issues/464", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"051f6ab285eb21d16afeb87ed5bd9cfacfc67e47": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 20.00027777777778, "user": "Finomosec", "changesInPackagesSPOON": ["org.neo4j.cypher.javacompat.QueryStatistics.getDeletedRelationships()"], "changesInPackagesGIT": ["community/cypher/src/main/java/org/neo4j/cypher/javacompat"], "body": "ExecutionEngine engine = new ExecutionEngine(graphDb);\nExecutionResult result = engine.execute(\"START user=node:userIndex(NICK = {nick})\" //\n                + \" MATCH user-[offer:OFFERS]->stuff\" //\n                + \" WHERE stuff.ID = {id}\" //\n                + \" DELETE offer\" //\n        , params);\nQueryStatistics queryStatistics = result.getQueryStatistics();\n\nqueryStatistics.getDeletedRelationships(); // --> always returns 0, it seems it returns getDeletedNodes() instead.\n\nSystem.out.println(result.dumpToString()); // BUT ...\n+-------------------+\n| No data returned. |\n+-------------------+\nRelationships deleted: 1\n1 ms\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "spoonFilesChanged": 1, "MOV": 0}, "title": "getDeletedRelationships() returns getDeletedNodes()", "statsSkippedReason": "", "closed": "2013-02-18 10:46:44", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-02-18 11:46:24", "commitHash": "051f6ab285eb21d16afeb87ed5bd9cfacfc67e47", "commitParents": ["b6501aac03cf70419e94b4cfc160695e4950914a"], "commitGHEventType": "closed", "nameRev": "051f6ab285eb21d16afeb87ed5bd9cfacfc67e47 tags/1.9.M05~53", "commitGitStats": [{"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/java/org/neo4j/cypher/javacompat/QueryStatistics.java", "deletions": 1}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.javacompat.QueryStatistics.getDeletedRelationships()"}], "spoonFilePath": "QueryStatistics.java"}], "commitMessage": "Fixes #464 - getDeletedRelationships does not work for javacompat.ExecutionResult\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-02-16 19:47:02"}], "created": "2013-01-28 18:24:45"}, {"labels": ["bug", "cypher"], "filteredCommits": ["34794d04b81aefb3784b308e3552ee600e8f1f14"], "url": "https://github.com/neo4j/neo4j/issues/450", "gitStatsSummary": {"insertions": 37, "gitFilesChange": 6, "lines": 60, "deletions": 23}, "numCommits": 1, "commits": {"34794d04b81aefb3784b308e3552ee600e8f1f14": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 35.000277777777775, "user": "nitecoder", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan", "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands", "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes"], "body": "Greetings! Great work on neo4j - awesome product!\n\n(Updating with a clear example and console link)\n\nThere appears to be a strange issue in the current 1.9 build (as of 2/06/2013).\nIt also exists in 1.9.M4 and can be replicated on console.neo4j.org\nThis works correctly in 1.8.\n\nIt appears that the names of variables make a difference in result of a query. Some names lead to incorrect results while others work properly!\n- Example graph:\n  \n  (adv) {\"name\":\"advertiser1\"}\n  (color) {\"name\":\"Color\"}\n  (red) {\"name\":\"red\"}\n  (p1) {\"name\":\"product1\"}\n  (p4) {\"name\":\"product4\"}\n  (adv)-[:adv_has_product]->(p4)\n  (adv)-[:adv_has_product]->(p1)\n  (color)-[:aa_has_value]->(red)\n  (p1)-[:ap_has_value]->(red)\n  (p4)-[:ap_has_value]->(red)\n\nThe following query works and gives correct result of product1:\n- WORKS - single product1 returned *\n\n```\nSTART advertiser=node(1), b=node(2) \nMATCH (advertiser)-[:adv_has_product]->(out),       \n      (b)-[:aa_has_value]->(path0)<-[:ap_has_value]-(out) \nWHERE path0.name='red' and out.name='product1' \nRETURN out\n```\n- FAILS - returns both product1 and product2 *\n\n```\nSTART advertiser=node(1), a=node(2) \nMATCH (advertiser)-[:adv_has_product]->(out),       \n      (a)-[:aa_has_value]->(path0)<-[:ap_has_value]-(out) \nWHERE path0.name='red' and out.name='product1' \nRETURN out\n```\n\nPlease see http://console.neo4j.org/r/qcvrhm\n\nThe only difference between these queries is the name given to node(2). If the name is lexicographically less than string \"advertiser\" the result is incorrect. If it's greater - result is correct.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Cypher BUG: Wrong results depending on variable names", "statsSkippedReason": "", "closed": "2013-02-28 14:49:26", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-02-28 15:48:56", "commitHash": "34794d04b81aefb3784b308e3552ee600e8f1f14", "commitParents": ["10c2104ea99b2a2d1a00b9b3a2e3d4c28b43d245"], "commitGHEventType": "closed", "nameRev": "34794d04b81aefb3784b308e3552ee600e8f1f14 tags/1.9.M05~17", "commitGitStats": [{"insertions": 4, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/Predicate.scala", "deletions": 0}, {"insertions": 12, "lines": 22, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/ExpanderStep.scala", "deletions": 10}, {"insertions": 7, "lines": 7, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/Trail.scala", "deletions": 0}, {"insertions": 24, "lines": 24, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailToStepTest.scala", "deletions": 0}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStep.scala", "deletions": 2}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 53, "lines": 80, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/ExpanderStepReversalTest.scala", "deletions": 27}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStepTrail.scala", "deletions": 1}, {"insertions": 29, "lines": 31, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailBuilderTest.scala", "deletions": 2}, {"insertions": 12, "lines": 22, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TrailBuilder.scala", "deletions": 10}, {"insertions": 31, "lines": 31, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #450 - Predicates in WHERE are not evaluated correctly for certain patterns\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-02-28 15:47:59"}], "created": "2013-01-23 21:46:44"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/434", "title": "collection concatenation and aggregation ", "closed": "2014-06-10 09:10:53", "commitsDetails": [], "commits": {}, "ttf": 510.0002777777778, "created": "2013-01-15 13:57:47", "user": "jexp", "body": "This used to work: http://console.neo4j.org/r/mcl3uv\n\n```\nstart user=node(1) \nmatch user-[:activities]-stream-[:next*]-nextStream \nreturn [stream] + collect(nextStream) as streams\n```\n\nError: Unknown identifier `stream`.\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/430", "title": "1.8M06: Neo4j.bat should use JRE_HOME", "closed": "2017-07-14 16:13:06", "commitsDetails": [], "commits": {}, "ttf": 1641.0002777777777, "created": "2013-01-14 21:42:23", "user": "sjnester", "body": "Still running 1.8 on Windows - maybe this has been fixed since.  The 1.8 Neo4j.bat script assumes that the jre directory is found at %JAVA_HOME%/jre instead of using %JRE_HOME% to find it if that environment variable is available.\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/413", "title": "Returning array with hash breaks gremlin", "closed": "2015-12-05 06:36:06", "commitsDetails": [], "commits": {}, "ttf": 1061.0002777777777, "created": "2013-01-08 05:51:30", "user": "elado", "body": "Try on the web console, http://localhost:7474/webadmin/#/console/http\n\n```\n# this is fine\nhttp> POST /db/data/ext/GremlinPlugin/graphdb/execute_script { \"script\": \"1\" }\n==> 200 OK\n==> 1\n\n# this is fine too\nhttp> POST /db/data/ext/GremlinPlugin/graphdb/execute_script { \"script\": \"[1,2,3]\" }\n==> 200 OK\n==> [ 1, 2, 3 ]\n\n# this is not\nhttp> POST /db/data/ext/GremlinPlugin/graphdb/execute_script { \"script\": \"[{}]\" }\n==> 200 OK\n==> [ \"Script1$_run_closure1@2b0a141e\" ]\nhttp>\n```\n\nTried on neo4j-community-1.9.M03\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/401", "title": "Aggregation in ORDER BY that is not in RETURN fails, worked before 1.8.1", "closed": "2013-01-07 10:22:37", "commitsDetails": [], "commits": {}, "ttf": 3.000277777777778, "created": "2013-01-04 10:07:04", "user": "jexp", "body": "This worked pre 1.8.1 / 1.9.M02 (used for instance in one of the SDN tests / samples).\n\n```\nstart n=node(*) \nwhere has(n.name) \nreturn n,count(*) \norder by count(*) desc, avg(length(n.name))\n```\n\nas soon as `avg(length(n.name))` is added to return, it works again\n\nsee:\n\nhttp://console.neo4j.org/r/wkfo0j\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/399", "title": "This should not happen Error in Cypher", "closed": "2013-01-09 08:14:56", "commitsDetails": [], "commits": {}, "ttf": 5.000277777777778, "created": "2013-01-03 11:27:22", "user": "peterneubauer", "body": "see https://groups.google.com/forum/?fromgroups=#!topic/neo4j/CjKNqI5WGhE for context.\n\nI constantly encounter a strange problem when running a relatively simple query on Linux based machines while on Windows 7 I have no problems at all (both from neo4j-shell and from Python using py2neo).\n\nI have a database with 7762 nodes and 20730 relationships. I have an index on node property 'venueID'. There are 817 nodes with node property 'venueID:2826' and 1233 nodes wirh 'venueID:2611' (for all the other values of this node property there are few nodes). I created the database using py2neo both on Windows and Linux.\n\nIf  I run the following query\n\n```\nSTART a=node:my_nodes('venueID:2611'), b=node:my_nodes('venueID:2826')\nMATCH a-->b\nRETURN count(a)\n```\n- on Windows 7 with Java version 1.7.0_09 using neo4j versions 1.8, 1.9.M01, 1.7.2 I get an answer within 15000ms;\n- on Debian-based server (Linux 2.6.32-5-amd64) with Java version 1.6.0-18 using stable neo4j  version 1.8 as well as 1.9-SNAPSHOT and 1.9.M02 I constantly get an error \n  \n  \"ServerError: Error occurred in server thread; nested exception is:\n      org.neo4j.helpers.ThisShouldNotHappenError: Developer: Andres claims that: Unexpected traversal state encountered\"\n  In the console log when using 1.9-SNAPSHOT I see the following message\n  11:18:32.807 [535102763@qtp-423265228-2] ERROR org.mortbay.log - /db/data/cypher\n  org.neo4j.helpers.ThisShouldNotHappenError: Developer: Andres claims that: Unexpected traversal state encountered\n      at org.neo4j.cypher.internal.pipes.matching.BidirectionalTraversalMatcher$StepCollisionDetector.includePath(Bidirect$\n      at org.neo4j.kernel.StandardBranchCollisionDetector.evaluate(StandardBranchCollisionDetector.java:74) ~[neo4j-kernel$\n      at org.neo4j.kernel.StandardBranchCollisionDetector.evaluate(StandardBranchCollisionDetector.java:37) ~[neo4j-kernel$\n      at org.neo4j.kernel.impl.traversal.BidirectionalTraverserIterator.fetchNextOrNull(BidirectionalTraverserIterator.jav$\n      at org.neo4j.kernel.impl.traversal.BidirectionalTraverserIterator.fetchNextOrNull(BidirectionalTraverserIterator.jav$\n      at org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:55) ~[neo4j-kernel-1.9-SNAPSHOT$\n      at scala.collection.JavaConversions$JIteratorWrapper.hasNext(JavaConversions.scala:574) ~[scala-library-2.9.1-1.jar:$\n      at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:371) ~[scala-library-2.9.1-1.jar:na]\n      at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:371) ~[scala-library-2.9.1-1.jar:na]\n      at scala.collection.Iterator$class.foreach(Iterator.scala:660) ~[scala-library-2.9.1-1.jar:na]\n      at scala.collection.Iterator$$anon$21.foreach(Iterator.scala:368) ~[scala-library-2.9.1-1.jar:na]\n      at org.neo4j.cypher.internal.pipes.EagerAggregationPipe.createResults(EagerAggregationPipe.scala:76) ~[neo4j-cypher-$\n      at org.neo4j.cypher.internal.pipes.ColumnFilterPipe.createResults(ColumnFilterPipe.scala:37) ~[neo4j-cypher-1.9-SNAP$\n      at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl$$anonfun$6.apply(ExecutionPlanImpl.scala:127) ~[neo4j-c$\n      at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl$$anonfun$6.apply(ExecutionPlanImpl.scala:125) ~[neo4j-c$\n      at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.execute(ExecutionPlanImpl.scala:33) ~[neo4j-cypher-1.9-$\n      at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:59) ~[neo4j-cypher-1.9-SNAPSHOT.jar:1.9-SNAPSHOT]\n      at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:63) ~[neo4j-cypher-1.9-SNAPSHOT.jar:1.9-SNAPSHOT]\n      at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:79) ~[neo4j-cypher-1.9-SNAPSHOT.jar:1.9-\n\nWhen I change the node properties for which I query to the ones which do not exist in the database, the query executes with no problem.\n- I tried it out also on virtual Linux Mint installed inside my Windows 7, but I get the same error as on the server.\n\nCould anyone provide a hint what might be wrong?\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/398", "title": "Cypher query error with \"NOT IN expressions\" ", "closed": "2013-01-03 11:38:26", "commitsDetails": [], "commits": {}, "ttf": 0.0002777777777777778, "created": "2013-01-03 06:34:44", "user": "giamai", "body": "Dear Neo4j team,\n    I have a issue when i'm trying to use NOT IN expressions\n\n```\nThis is my use case:\n\n- The first query, i get nodes that have relationship with cypher\nstart cypher=node(4) \nmatch cypher-[:KNOWS]-friends \nreturn friends\n\nExpect result: node 2 and node 5\nActual result: node 2 and node 5. This query run pretty good.\n\n- The second query, i inherit the first query but i want to exclude node 5  \n\nstart cypher=node(4) \nmatch cypher-[:KNOWS]-friends \nwhere NOT (ID(friends) IN [5]) \nreturn friends\n\nExpect result: node 2\nActual result: \"Error: java.lang.RuntimeException: java.lang.RuntimeException\"\n\nPlease try above use cases on http://tinyurl.com/bn35krt \n\nThanks!\nGia\n```\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["6c98037a8959218804f37c413ed0b645c1f65abe", "81d079deed779ee6bae7e6acf1fd006ffa0a4a29"], "url": "https://github.com/neo4j/neo4j/issues/395", "gitStatsSummary": {"insertions": 61, "gitFilesChange": 5, "lines": 88, "deletions": 27}, "numCommits": 2, "commits": {"6c98037a8959218804f37c413ed0b645c1f65abe": {"commitUser": "systay", "commitGHEventType": "closed"}, "985b6c1d2bed35614e779f91daa328f84b8666a3": {"commitUser": "boggle", "commitGHEventType": "referenced"}, "81d079deed779ee6bae7e6acf1fd006ffa0a4a29": {"commitUser": "systay", "commitGHEventType": "referenced"}}, "ttf": 11.000277777777777, "user": "SchulteMarkus", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan", "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes"], "body": "Hi,\n\nwhen updating from neo4j 1.8 to 1.8.1 I get a new exception[1]. \n\nShort description: I have two entities, company and product, which are 1..n related to each other. When saving a product with a set company, the exception is thrown. Product is savable when no company is set.\n\nI am using Spring Data neo4j RC4\n\nHere are the relevant parts:\n\n```\npublic class Company ... {\n...\n@Fetch\n@RelatedTo(type = \"sells\")\nprotected Set<Product> products;\n...\n}\n\npublic class Product ... implements Cloneable {\n...\n@Fetch\n@RelatedTo(type = \"sells\", direction = Direction.INCOMING)\n@NotNull\nprotected Company company;\n...\n}\n```\n\n(Spring-data-neo4j) Debugging ends when failing at:\n14:10:06.274 [main] DEBUG o.s.d.n.mapping.EntityInstantiator - Using class domain.entities.Product no-arg constructor\n14:10:06.315 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company<-[:orderAtCompany]-orderNode WHERE NOT company-[:accepts|denies]->orderNode RETURN orderNode ORDER BY orderNode.created params {self=1}\n14:10:06.315 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company-[:sells]->products WHERE NOT products<-[:covers]-() RETURN products ORDER BY products.name params {self=1}\n\nDebugging when using neo4j 1.8:\n14:12:03.022 [main] DEBUG o.s.d.n.mapping.EntityInstantiator - Using class domain.entities.Product no-arg constructor\n14:12:03.073 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company<-[:orderAtCompany]-orderNode WHERE NOT company-[:accepts|denies]->orderNode RETURN orderNode ORDER BY orderNode.created params {self=1}\n14:12:03.073 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company-[:sells]->products WHERE NOT products<-[:covers]-() RETURN products ORDER BY products.name params {self=1}\n14:12:03.098 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company<-[:orderAtCompany]-orderNode WHERE NOT company-[:accepts|denies]->orderNode RETURN orderNode ORDER BY orderNode.created params {self=1}\n14:12:03.099 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company-[:sells]->products WHERE NOT products<-[:covers]-() RETURN products ORDER BY products.name params {self=1}\n14:12:03.103 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company<-[:orderAtCompany]-orderNode WHERE NOT company-[:accepts|denies]->orderNode RETURN orderNode ORDER BY orderNode.created params {self=1}\n14:12:03.103 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company-[:sells]->products WHERE NOT products<-[:covers]-() RETURN products ORDER BY products.name params {self=1}\n14:12:03.110 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company<-[:orderAtCompany]-orderNode WHERE NOT company-[:accepts|denies]->orderNode RETURN orderNode ORDER BY orderNode.created params {self=1}\n14:12:03.110 [main] DEBUG o.s.d.n.s.query.CypherQueryEngine - Executing cypher query: START company=node({self}) MATCH company-[:sells]->products WHERE NOT products<-[:covers]-() RETURN products ORDER BY products.name params {self=1}\n\n[1]  In DomainTest.java:155 the new product is saved.\n\norg.neo4j.helpers.ThisShouldNotHappenError: Developer: Andres claims that: This execution plan should not exist.\n    at org.neo4j.cypher.internal.commands.PathExpression$$anonfun$4.apply(PathExpression.scala:47)\n    at org.neo4j.cypher.internal.commands.PathExpression$$anonfun$4.apply(PathExpression.scala:46)\n    at scala.collection.LinearSeqOptimized$class.exists(LinearSeqOptimized.scala:79)\n    at scala.collection.immutable.List.exists(List.scala:45)\n    at org.neo4j.cypher.internal.commands.PathExpression.apply(PathExpression.scala:46)\n    at org.neo4j.cypher.internal.commands.PathExpression.apply(PathExpression.scala:31)\n    at org.neo4j.cypher.internal.commands.NonEmpty.isMatch(Predicate.scala:283)\n    at org.neo4j.cypher.internal.commands.Not.isMatch(Predicate.scala:115)\n    at org.neo4j.cypher.internal.commands.And.isMatch(Predicate.scala:83)\n    at org.neo4j.cypher.internal.pipes.matching.FilteringIterable$FilteringIterator.spoolToNextInLine(FilteringIterable.scala:55)\n    at org.neo4j.cypher.internal.pipes.matching.FilteringIterable$FilteringIterator.<init>(FilteringIterable.scala:34)\n    at org.neo4j.cypher.internal.pipes.matching.FilteringIterable.iterator(FilteringIterable.scala:72)\n    at org.neo4j.cypher.internal.pipes.matching.FilteringIterable.iterator(FilteringIterable.scala:27)\n    at scala.collection.JavaConversions$IterableWrapperTrait$class.iterator(JavaConversions.scala:557)\n    at scala.collection.JavaConversions$IterableWrapper.iterator(JavaConversions.scala:583)\n    at scala.collection.JavaConversions$IterableWrapper.iterator(JavaConversions.scala:583)\n    at org.neo4j.kernel.impl.traversal.TraversalBranchWithState.expandRelationshipsWithoutChecks(TraversalBranchWithState.java:70)\n    at org.neo4j.kernel.impl.traversal.TraversalBranchImpl.expandRelationships(TraversalBranchImpl.java:104)\n    at org.neo4j.kernel.impl.traversal.StartNodeTraversalBranch.next(StartNodeTraversalBranch.java:47)\n    at org.neo4j.kernel.impl.traversal.AsOneStartBranch.next(AsOneStartBranch.java:100)\n    at org.neo4j.kernel.PreorderDepthFirstSelector.next(PreorderDepthFirstSelector.java:52)\n    at org.neo4j.kernel.impl.traversal.TraverserIterator.fetchNextOrNull(TraverserIterator.java:65)\n    at org.neo4j.kernel.impl.traversal.TraverserIterator.fetchNextOrNull(TraverserIterator.java:34)\n    at org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:55)\n    at scala.collection.JavaConversions$JIteratorWrapper.hasNext(JavaConversions.scala:574)\n    at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:371)\n    at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:371)\n    at scala.collection.Iterator$$anon$22.hasNext(Iterator.scala:388)\n    at scala.collection.Iterator$$anon$19.hasNext(Iterator.scala:334)\n    at scala.collection.Iterator$$anon$19.hasNext(Iterator.scala:334)\n    at scala.collection.Iterator$class.foreach(Iterator.scala:660)\n    at scala.collection.Iterator$$anon$19.foreach(Iterator.scala:333)\n    at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:128)\n    at scala.collection.TraversableOnce$class.toList(TraversableOnce.scala:242)\n    at scala.collection.Iterator$$anon$19.toList(Iterator.scala:333)\n    at org.neo4j.cypher.internal.pipes.SortPipe.createResults(SortPipe.scala:39)\n    at org.neo4j.cypher.internal.pipes.ColumnFilterPipe.createResults(ColumnFilterPipe.scala:37)\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl$$anonfun$6.apply(ExecutionPlanImpl.scala:127)\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl$$anonfun$6.apply(ExecutionPlanImpl.scala:125)\n    at org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.execute(ExecutionPlanImpl.scala:33)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:59)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:63)\n    at org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:79)\n    at org.springframework.data.neo4j.support.query.CypherQueryEngine.parseAndExecuteQuery(CypherQueryEngine.java:61)\n    at org.springframework.data.neo4j.support.query.CypherQueryEngine.query(CypherQueryEngine.java:49)\n    at org.springframework.data.neo4j.fieldaccess.QueryFieldAccessorFactory$QueryFieldAccessor.executeQuery(QueryFieldAccessorFactory.java:105)\n    at org.springframework.data.neo4j.fieldaccess.QueryFieldAccessorFactory$QueryFieldAccessor.getValue(QueryFieldAccessorFactory.java:98)\n    at org.springframework.data.neo4j.fieldaccess.DefaultEntityState.getValue(DefaultEntityState.java:97)\n    at org.springframework.data.neo4j.support.mapping.SourceStateTransmitter.copyEntityStatePropertyValue(SourceStateTransmitter.java:90)\n    at org.springframework.data.neo4j.support.mapping.SourceStateTransmitter.access$000(SourceStateTransmitter.java:40)\n    at org.springframework.data.neo4j.support.mapping.SourceStateTransmitter$2.doWithAssociation(SourceStateTransmitter.java:61)\n    at org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(BasicPersistentEntity.java:207)\n    at org.springframework.data.neo4j.support.mapping.SourceStateTransmitter.copyPropertiesFrom(SourceStateTransmitter.java:57)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityConverterImpl.loadEntity(Neo4jEntityConverterImpl.java:100)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityConverterImpl.read(Neo4jEntityConverterImpl.java:92)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityPersister$CachedConverter.read(Neo4jEntityPersister.java:170)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityPersister.createEntityFromState(Neo4jEntityPersister.java:189)\n    at org.springframework.data.neo4j.support.Neo4jTemplate.createEntityFromState(Neo4jTemplate.java:180)\n    at org.springframework.data.neo4j.fieldaccess.RelationshipHelper.createEntitySetFromRelationshipEndNodes(RelationshipHelper.java:130)\n    at org.springframework.data.neo4j.fieldaccess.RelatedToFieldAccessor.createEntitySetFromRelationshipEndNodes(RelatedToFieldAccessor.java:86)\n    at org.springframework.data.neo4j.fieldaccess.RelatedToSingleFieldAccessorFactory$RelatedToSingleFieldAccessor.getValue(RelatedToSingleFieldAccessorFactory.java:76)\n    at org.springframework.data.neo4j.fieldaccess.DefaultEntityState.getValue(DefaultEntityState.java:97)\n    at org.springframework.data.neo4j.support.mapping.SourceStateTransmitter.copyEntityStatePropertyValue(SourceStateTransmitter.java:90)\n    at org.springframework.data.neo4j.support.mapping.SourceStateTransmitter.access$000(SourceStateTransmitter.java:40)\n    at org.springframework.data.neo4j.support.mapping.SourceStateTransmitter$2.doWithAssociation(SourceStateTransmitter.java:61)\n    at org.springframework.data.mapping.model.BasicPersistentEntity.doWithAssociations(BasicPersistentEntity.java:207)\n    at org.springframework.data.neo4j.support.mapping.SourceStateTransmitter.copyPropertiesFrom(SourceStateTransmitter.java:57)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityConverterImpl.loadEntity(Neo4jEntityConverterImpl.java:100)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityConverterImpl.read(Neo4jEntityConverterImpl.java:92)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityPersister$CachedConverter.read(Neo4jEntityPersister.java:170)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityPersister.createEntityFromState(Neo4jEntityPersister.java:189)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityPersister.persist(Neo4jEntityPersister.java:244)\n    at org.springframework.data.neo4j.support.mapping.Neo4jEntityPersister.persist(Neo4jEntityPersister.java:231)\n    at org.springframework.data.neo4j.support.Neo4jTemplate.save(Neo4jTemplate.java:293)\n    at org.springframework.data.neo4j.support.Neo4jTemplate.save(Neo4jTemplate.java:287)\n    at org.springframework.data.neo4j.repository.AbstractGraphRepository.save(AbstractGraphRepository.java:108)\n    at libTest.DomainTest.createProduct(DomainTest.java:155)\n    at domainTest.entities.ProductTest.saveWithCompany(ProductTest.java:22)\n    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)\n    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n    at java.lang.reflect.Method.invoke(Method.java:601)\n    at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)\n    at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)\n    at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)\n    at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)\n    at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)\n    at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\n    at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)\n    at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)\n    at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n    at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n    at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n    at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n    at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n    at org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n    at org.eclipse.jdt.internal.junit4.runner.JUnit4TestReference.run(JUnit4TestReference.java:50)\n    at org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:38)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:467)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:683)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:390)\n    at org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:197)\n\nGreetz to Andres ;-)\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "org.neo4j.helpers.ThisShouldNotHappenError: Developer: Andres claims that: This execution plan should not exist. when updating from 1.8 to 1.8.1", "statsSkippedReason": "", "closed": "2013-01-09 14:39:22", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-01-09 12:41:55", "commitHash": "6c98037a8959218804f37c413ed0b645c1f65abe", "commitParents": ["31889ecfc95309ff0d7db8ace715778822b28cca"], "commitGHEventType": "closed", "nameRev": "6c98037a8959218804f37c413ed0b645c1f65abe tags/1.9.M04~39^2", "commitGitStats": [{"insertions": 14, "lines": 27, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailDecomposeTest.scala", "deletions": 13}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/Trail.scala", "deletions": 0}, {"insertions": 10, "lines": 20, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailToStepTest.scala", "deletions": 10}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/LazyTest.scala", "deletions": 1}, {"insertions": 6, "lines": 13, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStepTrail.scala", "deletions": 7}, {"insertions": 37, "lines": 50, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TraversalMatcherBuilder.scala", "deletions": 13}, {"insertions": 22, "lines": 44, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailBuilderTest.scala", "deletions": 22}, {"insertions": 14, "lines": 20, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TrailBuilder.scala", "deletions": 6}, {"insertions": 20, "lines": 21, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TraversalMatcherBuilderTest.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #395 - ThisShouldNotHappenError when using path expressions in predicates for certain patterns\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-09 12:34:38"}, {"commitUser": "boggle", "commitDateTime": "2013-01-09 06:39:20", "commitHash": "985b6c1d2bed35614e779f91daa328f84b8666a3", "commitParents": ["7fc184eb8534ffaeafbf881db74d6ea3308b115b", "6c98037a8959218804f37c413ed0b645c1f65abe"], "commitGHEventType": "referenced", "nameRev": "985b6c1d2bed35614e779f91daa328f84b8666a3 tags/1.9.M04~39", "commitGitStats": [{"insertions": 14, "lines": 27, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailDecomposeTest.scala", "deletions": 13}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/Trail.scala", "deletions": 0}, {"insertions": 10, "lines": 20, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailToStepTest.scala", "deletions": 10}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/LazyTest.scala", "deletions": 1}, {"insertions": 6, "lines": 13, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStepTrail.scala", "deletions": 7}, {"insertions": 37, "lines": 50, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TraversalMatcherBuilder.scala", "deletions": 13}, {"insertions": 22, "lines": 44, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailBuilderTest.scala", "deletions": 22}, {"insertions": 14, "lines": 20, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TrailBuilder.scala", "deletions": 6}, {"insertions": 20, "lines": 21, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TraversalMatcherBuilderTest.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #420 from systay/395\n\nFixes #395", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-09 06:39:20"}, {"commitUser": "systay", "commitDateTime": "2013-03-01 20:58:31", "commitHash": "81d079deed779ee6bae7e6acf1fd006ffa0a4a29", "commitParents": ["cfadd3def39fc2bd3320af6c73c943fef5d79187"], "commitGHEventType": "referenced", "nameRev": "81d079deed779ee6bae7e6acf1fd006ffa0a4a29 tags/1.8.3~21", "commitGitStats": [{"insertions": 4, "lines": 4, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/BidirectionalTraversalMatcher.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #395 - ThisShouldNotHappenError for certain patterns\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-03-01 20:58:31"}], "created": "2012-12-29 13:21:41"}, {"labels": ["bug", "cypher"], "filteredCommits": ["268e1403f83cab067e632cb34da8a8b9534d0a96"], "url": "https://github.com/neo4j/neo4j/issues/394", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 2, "deletions": 1}, "numCommits": 1, "commits": {"f26e97094125f1bbc00101f1c352a0bb9cd82cbb": {"commitUser": "systay", "commitGHEventType": "referenced"}, "268e1403f83cab067e632cb34da8a8b9534d0a96": {"commitUser": "systay", "commitGHEventType": "closed"}, "0e8edf72f66ca16575680fdfde93c58eaa553752": {"commitUser": "jakewins", "commitGHEventType": "referenced"}}, "ttf": 10.000277777777777, "user": "jexp", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan"], "body": "```\nstart n=node(0),n1=node(1)  \nforeach(x in [n1] : create x-[:FOO]->n) \n```\n\nsee: http://console.neo4j.org/r/amhvbj\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 2}, "spoonStatsSummary": {}, "title": "FOREACH: Error: org.neo4j.cypher.CypherTypeException: An identifier is used with different types. The identifier `x` is used both as Node and as Collection", "statsSkippedReason": "", "closed": "2013-01-07 14:22:44", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-01-08 11:34:42", "commitHash": "f26e97094125f1bbc00101f1c352a0bb9cd82cbb", "commitParents": ["d560d83e788ff4f1175ba08b70b8e29e34b44f36"], "commitGHEventType": "referenced", "nameRev": "f26e97094125f1bbc00101f1c352a0bb9cd82cbb tags/1.8.2~25", "commitGitStats": [{"insertions": 8, "lines": 22, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/ExpanderStep.scala", "deletions": 14}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/VarLengthStep.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/EagerAggregationPipe.scala", "deletions": 1}, {"insertions": 4, "lines": 5, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/ShortestPathBuilder.scala", "deletions": 1}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 13, "lines": 15, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/SortBuilderTest.scala", "deletions": 2}, {"insertions": 17, "lines": 36, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/Pipe.scala", "deletions": 19}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStep.scala", "deletions": 1}, {"insertions": 3, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/UpdateActionBuilder.scala", "deletions": 1}, {"insertions": 17, "lines": 18, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/SortBuilder.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/FilteringIterable.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/ExecutionPlanImpl.scala", "deletions": 1}, {"insertions": 6, "lines": 6, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ErrorMessagesTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/ParameterPipe.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/FilterBuilder.scala", "deletions": 1}, {"insertions": 7, "lines": 7, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/MutatingIntegrationTest.scala", "deletions": 0}, {"insertions": 4, "lines": 6, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/CreateNodesAndRelationshipsBuilder.scala", "deletions": 2}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/docgen/AggregationTest.scala", "deletions": 0}, {"insertions": 9, "lines": 13, "filePath": "community/cypher/CHANGES.txt", "deletions": 4}], "commitSpoonAstDiffStats": [], "commitMessage": "This is a backport of several bug fixes:\n o Clearer error message for when aggregations are used in ORDER BY and not in RETURN\n o Fixes #390 - IN/ANY/NONE/ANY/SINGLE causes RuntimeException for some patterns\n o Fixes #394 - Identifiers inside of FOREACH get the wrong type\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-07 11:14:01"}, {"commitUser": "systay", "commitDateTime": "2013-01-07 15:19:08", "commitHash": "268e1403f83cab067e632cb34da8a8b9534d0a96", "commitParents": ["778aee3688d74487c23f3725b1d595ec82b8fd8a"], "commitGHEventType": "closed", "nameRev": "268e1403f83cab067e632cb34da8a8b9534d0a96 tags/1.9.M04~57^2", "commitGitStats": [{"insertions": 7, "lines": 7, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/MutatingIntegrationTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/CreateNodesAndRelationshipsBuilder.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #394 - Identifiers inside of FOREACH get the wrong type\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-07 11:45:11"}, {"commitUser": "jakewins", "commitDateTime": "2013-01-07 06:22:42", "commitHash": "0e8edf72f66ca16575680fdfde93c58eaa553752", "commitParents": ["778aee3688d74487c23f3725b1d595ec82b8fd8a", "268e1403f83cab067e632cb34da8a8b9534d0a96"], "commitGHEventType": "referenced", "nameRev": "0e8edf72f66ca16575680fdfde93c58eaa553752 tags/1.9.M04~57", "commitGitStats": [{"insertions": 7, "lines": 7, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/MutatingIntegrationTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/CreateNodesAndRelationshipsBuilder.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #411 from systay/394\n\nFixes #394 - Identifiers inside of FOREACH get the wrong type", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-07 06:22:42"}], "created": "2012-12-28 10:22:08"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/391", "title": "Unable to access jarfile ...\\windows-service-wrapper-*.jar", "closed": "2017-06-22 12:04:56", "commitsDetails": [], "commits": {}, "ttf": 1638.0002777777777, "created": "2012-12-27 08:22:22", "user": "kkurni", "body": "Hi,\n\nI get this error on my windows 8 machine.\n\nI try using 1.8 and 1.9 but still get the same error when calling neo4j.bat start\n\nAny hints ?\n\nThanks\n"}, {"labels": ["bug", "cypher"], "filteredCommits": ["99211a591355908f1bafa04ba126f1e213e29550"], "url": "https://github.com/neo4j/neo4j/issues/390", "gitStatsSummary": {"insertions": 185, "gitFilesChange": 75, "lines": 360, "deletions": 175}, "numCommits": 1, "commits": {"634e7472ca12b43296d59993aa299ee852d08f04": {"commitUser": "jakewins", "commitGHEventType": "referenced"}, "99211a591355908f1bafa04ba126f1e213e29550": {"commitUser": "systay", "commitGHEventType": "closed"}, "f26e97094125f1bbc00101f1c352a0bb9cd82cbb": {"commitUser": "systay", "commitGHEventType": "referenced"}}, "ttf": 11.000277777777777, "user": "jexp", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan", "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands", "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes", "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation", "community/cypher/src/main/scala/org/neo4j/cypher/internal/ExecutionContext.scala"], "body": "```\nSTART n = node(0) \nMATCH n-->me \nWHERE me.name IN ['Neo'] \nRETURN me.name\n```\n\nsee:\n\nhttp://console.neo4j.org/r/52dbcy\n\nworks without the `MATCH` also works when adding `has(me.name)`\n\n```\n Caused by: java.lang.RuntimeException\n   at org.neo4j.cypher.internal.pipes.matching.MiniMap.newWith(ExpanderStep.scala:167)\n   at org.neo4j.cypher.internal.pipes.matching.MiniMap.newWith(ExpanderStep.scala:150)\n   at org.neo4j.cypher.internal.commands.InCollection$$anonfun$isMatch$1.apply(InCollection.scala:38)\n   at scala.collection.Iterator$$anon$19.hasNext(Iterator.scala:334)\n   at org.neo4j.cypher.internal.pipes.matching.FilteringIterable$FilteringIterator.spoolToNextInLine(FilteringIterable.scala:55)\n   at org.neo4j.cypher.internal.commands.And.isMatch(Predicate.scala:78)\n   at scala.collection.immutable.List.exists(List.scala:45)\n   at org.neo4j.cypher.internal.ClosingIterator.hasNext(ClosingIterator.scala:35)\n   at scala.collection.Iterator$class.foreach(Iterator.scala:660)\n   at scala.collection.LinearSeqOptimized$class.exists(LinearSeqOptimized.scala:79)\n   at scala.collection.JavaConversions$IterableWrapperTrait$class.iterator(JavaConversions.scala:557)\n   at org.neo4j.cypher.internal.commands.AnyInCollection$$anonfun$seqMethod$2.apply(InCollection.scala:72)\n   at scala.collection.JavaConversions$IterableWrapper.iterator(JavaConversions.scala:583)\n   at org.neo4j.cypher.internal.commands.AnyInCollection$$anonfun$seqMethod$2.apply(InCollection.scala:72)\n   at scala.collection.JavaConversions$IterableWrapper.iterator(JavaConversions.scala:583)\n   at org.neo4j.cypher.internal.ClosingIterator.foreach(ClosingIterator.scala:31)\n   at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)\n   at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:128)\n   at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:371)\n   at org.neo4j.helpers.collection.PrefetchingIterator.hasNext(PrefetchingIterator.java:55)\n   at scala.collection.Iterator$$anon$22.hasNext(Iterator.scala:388)\n   at org.neo4j.kernel.impl.traversal.AsOneStartBranch.next(AsOneStartBranch.java:100)\n   at org.neo4j.kernel.PreorderDepthFirstSelector.next(PreorderDepthFirstSelector.java:52)\n   at org.neo4j.kernel.impl.traversal.TraverserIterator.fetchNextOrNull(TraverserIterator.java:65)\n   at org.neo4j.cypher.internal.ClosingIterator$$anonfun$hasNext$1.apply$mcZ$sp(ClosingIterator.scala:36)\n   at scala.collection.TraversableOnce$class.toList(TraversableOnce.scala:242)\n   at org.neo4j.kernel.impl.traversal.TraversalBranchWithState.expandRelationshipsWithoutChecks(TraversalBranchWithState.java:70)\n   at org.neo4j.cypher.internal.pipes.matching.FilteringIterable$FilteringIterator.<init>(FilteringIterable.scala:34)\n   at org.neo4j.kernel.impl.traversal.TraversalBranchImpl.expandRelationships(TraversalBranchImpl.java:104)\n   at org.neo4j.cypher.internal.ClosingIterator$$anonfun$hasNext$1.apply(ClosingIterator.scala:35)\n   at org.neo4j.cypher.internal.commands.InCollection.isMatch(InCollection.scala:38)\n   at java.lang.reflect.Method.invoke(Method.java:616)\n   at org.neo4j.community.console.CypherQueryExecutor.createTimedResults(CypherQueryExecutor.java:202)\n   at org.neo4j.kernel.impl.traversal.StartNodeTraversalBranch.next(StartNodeTraversalBranch.java:47)\n   at org.neo4j.cypher.internal.ClosingIterator$$anonfun$hasNext$1.apply(ClosingIterator.scala:35)\n   at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n   at org.neo4j.cypher.internal.pipes.matching.FilteringIterable.iterator(FilteringIterable.scala:27)\n   at org.neo4j.cypher.internal.pipes.matching.FilteringIterable.iterator(FilteringIterable.scala:72)\n   at org.neo4j.kernel.impl.traversal.TraverserIterator.fetchNextOrNull(TraverserIterator.java:34)\n 2012-12-26 22:44:57,801 DEBUG - MatcherFilter              - Time for request: 44\n   at sun.reflect.GeneratedMethodAccessor5.invoke(Unknown Source)\n   at org.neo4j.cypher.internal.ClosingIterator.toList(ClosingIterator.scala:31)\n   at scala.collection.JavaConversions$JIteratorWrapper.hasNext(JavaConversions.scala:574)\n   at scala.collection.Iterator$$anon$21.hasNext(Iterator.scala:371)\n   at scala.collection.Iterator$$anon$19.hasNext(Iterator.scala:334)\n   at org.neo4j.cypher.PipeExecutionResult.createTimedResults(PipeExecutionResult.scala:73)\n   at org.neo4j.cypher.internal.ClosingIterator.failIfThrows(ClosingIterator.scala:87)\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 2}, "spoonStatsSummary": {}, "title": "RuntimeException with MATCH and IN operator", "statsSkippedReason": "", "closed": "2013-01-07 14:25:40", "commitsDetails": [{"commitUser": "jakewins", "commitDateTime": "2013-01-07 15:25:25", "commitHash": "634e7472ca12b43296d59993aa299ee852d08f04", "commitParents": ["0e8edf72f66ca16575680fdfde93c58eaa553752", "99211a591355908f1bafa04ba126f1e213e29550"], "commitGHEventType": "referenced", "nameRev": "634e7472ca12b43296d59993aa299ee852d08f04 tags/1.9.M04~56", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/MatchingContext.scala", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/MatchingContextTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Nullable.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/expressions/ExpressionTest.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/Predicate.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/UniqueLink.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/ExtractFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/TailFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/SeqPredicateTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/HistoryTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/RelationshipFunction.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/MapPropertySetAction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/TypeTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/VarLengthStep.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/NullInNullOutExpression.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/PropertyValueTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/IdFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/SumFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/ReduceFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/ReduceTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Property.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/PatternMatcher.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/CoalesceTest.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Collection.scala", "deletions": 2}, {"insertions": 1, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/ParameterExpression.scala", "deletions": 3}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/ForeachAction.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/StartPipe.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Expression.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/LastFunction.scala", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/CreateNode.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/ExtractTest.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/TopPipe.scala", "deletions": 0}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/BidirectionalTraversalMatcher.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/aggregation/PercentileFunctionsTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/NodesFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Literal.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/PathExpression.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/PercentileFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/HeadFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/StringFunctionsTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/AggregationFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/EagerAggregationPipe.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/NamedExpectation.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TraversalMatcherBuilder.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/TraversalMatcher.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/PatterMatchingBuilder.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/CountStarFunction.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/DeletePropertyAction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/History.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Add.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/PropertySetAction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/MutationTest.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/mutation/DoubleCheckCreateUniqueTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Identifier.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/RelationshipTypeFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/AvgFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/LengthFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/MaxFunction.scala", "deletions": 3}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/InCollection.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/FilteringIterable.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/ExecutionPlanImpl.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/ExecuteUpdateCommandsPipe.scala", "deletions": 0}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/CreateRelationship.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/mutation/MapPropertySetActionTest.scala", "deletions": 2}, {"insertions": 1, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/AggregationExpression.scala", "deletions": 3}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/CollectFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/aggregation/AggregateTest.scala", "deletions": 2}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/ParameterPipe.scala", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/SlicePipe.scala", "deletions": 0}, {"insertions": 9, "lines": 24, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/ExpanderStep.scala", "deletions": 15}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/AddTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/MathFunction.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/ExpanderStepReversalTest.scala", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/VariableLengthExpanderStepExpandTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/CoalesceFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/SubtractTest.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStep.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/StringFunctions.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/CountFunction.scala", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/mutation/CreateNodeActionTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Null.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/TraversalPathExpander.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/PathExpressionTest.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/HasRelationshipTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/LazyTest.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/FakePipe.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/DoubleOptionalPatternMatcher.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/MonodirectionalTraversalMatcher.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/UpdateAction.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/TraversalMatcherTest.scala", "deletions": 1}, {"insertions": 85, "lines": 85, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/ExecutionContext.scala", "deletions": 0}, {"insertions": 1, "lines": 5, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/ComparablePredicate.scala", "deletions": 4}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/symbols/SymbolTableTest.scala", "deletions": 2}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 2, "lines": 67, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/Pipe.scala", "deletions": 65}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/CreateUniqueAction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SimplePatternMatcherBuilder.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/IndexQueryBuilder.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/DistinctFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/ShortestPathExpression.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/FilterFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/MathFunctionsTest.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/DeleteEntityAction.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #410 from systay/390\n\nFixes #390 - IN/ANY/NONE/ANY/SINGLE causes RuntimeException for some patterns\n\nConflicts:\n\tcommunity/cypher/CHANGES.txt\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-07 15:25:25"}, {"commitUser": "systay", "commitDateTime": "2013-01-07 15:09:29", "commitHash": "99211a591355908f1bafa04ba126f1e213e29550", "commitParents": ["778aee3688d74487c23f3725b1d595ec82b8fd8a"], "commitGHEventType": "closed", "nameRev": "99211a591355908f1bafa04ba126f1e213e29550 tags/1.9.M04~56^2", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/MatchingContext.scala", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/MatchingContextTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Nullable.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/expressions/ExpressionTest.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/Predicate.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/UniqueLink.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/ExtractFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/TailFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/SeqPredicateTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/HistoryTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/RelationshipFunction.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/MapPropertySetAction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/TypeTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/VarLengthStep.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/NullInNullOutExpression.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/PropertyValueTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/IdFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/SumFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/ReduceFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/ReduceTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Property.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/PatternMatcher.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/CoalesceTest.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Collection.scala", "deletions": 2}, {"insertions": 1, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/ParameterExpression.scala", "deletions": 3}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/ForeachAction.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/StartPipe.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Expression.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/LastFunction.scala", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/CreateNode.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/ExtractTest.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/TopPipe.scala", "deletions": 0}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/BidirectionalTraversalMatcher.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/aggregation/PercentileFunctionsTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/NodesFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Literal.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/PathExpression.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/PercentileFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/HeadFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/StringFunctionsTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/AggregationFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/EagerAggregationPipe.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/NamedExpectation.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/TraversalMatcherBuilder.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/TraversalMatcher.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/PatterMatchingBuilder.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/CountStarFunction.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/DeletePropertyAction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/History.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Add.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/PropertySetAction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/MutationTest.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/mutation/DoubleCheckCreateUniqueTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Identifier.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/RelationshipTypeFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/AvgFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/LengthFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/MaxFunction.scala", "deletions": 3}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/InCollection.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/FilteringIterable.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/ExecutionPlanImpl.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/ExecuteUpdateCommandsPipe.scala", "deletions": 0}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/CreateRelationship.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/mutation/MapPropertySetActionTest.scala", "deletions": 2}, {"insertions": 1, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/AggregationExpression.scala", "deletions": 3}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/CollectFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/aggregation/AggregateTest.scala", "deletions": 2}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/ParameterPipe.scala", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/SlicePipe.scala", "deletions": 0}, {"insertions": 9, "lines": 24, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/ExpanderStep.scala", "deletions": 15}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/AddTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/MathFunction.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/ExpanderStepReversalTest.scala", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/VariableLengthExpanderStepExpandTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/CoalesceFunction.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/SubtractTest.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStep.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/StringFunctions.scala", "deletions": 2}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/CountFunction.scala", "deletions": 2}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/mutation/CreateNodeActionTest.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/Null.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/TraversalPathExpander.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/PathExpressionTest.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/HasRelationshipTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/LazyTest.scala", "deletions": 1}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/FakePipe.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/DoubleOptionalPatternMatcher.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/MonodirectionalTraversalMatcher.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/UpdateAction.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/pipes/matching/TraversalMatcherTest.scala", "deletions": 1}, {"insertions": 85, "lines": 85, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/ExecutionContext.scala", "deletions": 0}, {"insertions": 1, "lines": 5, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/ComparablePredicate.scala", "deletions": 4}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/symbols/SymbolTableTest.scala", "deletions": 2}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 2, "lines": 67, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/Pipe.scala", "deletions": 65}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/CreateUniqueAction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SimplePatternMatcherBuilder.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/IndexQueryBuilder.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/aggregation/DistinctFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/ShortestPathExpression.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/commands/expressions/FilterFunction.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/commands/MathFunctionsTest.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/mutation/DeleteEntityAction.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #390 - IN/ANY/NONE/ANY/SINGLE causes RuntimeException for some patterns\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-07 13:00:00"}, {"commitUser": "systay", "commitDateTime": "2013-01-08 11:34:42", "commitHash": "f26e97094125f1bbc00101f1c352a0bb9cd82cbb", "commitParents": ["d560d83e788ff4f1175ba08b70b8e29e34b44f36"], "commitGHEventType": "referenced", "nameRev": "f26e97094125f1bbc00101f1c352a0bb9cd82cbb tags/1.8.2~25", "commitGitStats": [{"insertions": 8, "lines": 22, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/ExpanderStep.scala", "deletions": 14}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/VarLengthStep.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/EagerAggregationPipe.scala", "deletions": 1}, {"insertions": 4, "lines": 5, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/ShortestPathBuilder.scala", "deletions": 1}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 13, "lines": 15, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/SortBuilderTest.scala", "deletions": 2}, {"insertions": 17, "lines": 36, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/Pipe.scala", "deletions": 19}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStep.scala", "deletions": 1}, {"insertions": 3, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/UpdateActionBuilder.scala", "deletions": 1}, {"insertions": 17, "lines": 18, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/SortBuilder.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/FilteringIterable.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/ExecutionPlanImpl.scala", "deletions": 1}, {"insertions": 6, "lines": 6, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ErrorMessagesTest.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/ParameterPipe.scala", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/FilterBuilder.scala", "deletions": 1}, {"insertions": 7, "lines": 7, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/MutatingIntegrationTest.scala", "deletions": 0}, {"insertions": 4, "lines": 6, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/executionplan/builders/CreateNodesAndRelationshipsBuilder.scala", "deletions": 2}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/docgen/AggregationTest.scala", "deletions": 0}, {"insertions": 9, "lines": 13, "filePath": "community/cypher/CHANGES.txt", "deletions": 4}], "commitSpoonAstDiffStats": [], "commitMessage": "This is a backport of several bug fixes:\n o Clearer error message for when aggregations are used in ORDER BY and not in RETURN\n o Fixes #390 - IN/ANY/NONE/ANY/SINGLE causes RuntimeException for some patterns\n o Fixes #394 - Identifiers inside of FOREACH get the wrong type\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-07 11:14:01"}], "created": "2012-12-26 22:49:06"}, {"labels": ["bug", "cypher"], "filteredCommits": ["31889ecfc95309ff0d7db8ace715778822b28cca"], "url": "https://github.com/neo4j/neo4j/issues/387", "gitStatsSummary": {"insertions": 16, "gitFilesChange": 1, "lines": 33, "deletions": 17}, "numCommits": 1, "commits": {"31889ecfc95309ff0d7db8ace715778822b28cca": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 18.00027777777778, "user": "peterneubauer", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes"], "body": "see http://console.neo4j.org/?id=258d6g for an example, and http://stackoverflow.com/questions/13970033/returning-all-relationships-for-a-list-of-nodes for the discussion on this.\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "\"Unexpected traversal state\" encountered in Cypher", "statsSkippedReason": "", "closed": "2013-01-09 09:06:32", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-01-09 10:05:58", "commitHash": "31889ecfc95309ff0d7db8ace715778822b28cca", "commitParents": ["10cd1b549a19a45be10da5554999b673b2f4c5de"], "commitGHEventType": "closed", "nameRev": "31889ecfc95309ff0d7db8ace715778822b28cca tags/1.9.M04~45", "commitGitStats": [{"insertions": 14, "lines": 14, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/ExecutionEngineTest.scala", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 16, "lines": 33, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/BidirectionalTraversalMatcher.scala", "deletions": 17}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #387 - Some patterns produced \"Unexpected traversal state\" in Cypher\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-08 12:30:58"}], "created": "2012-12-21 10:59:34"}, {"labels": ["bug", "cypher"], "filteredCommits": ["5350ef689b9f62b55098efc6c7f169401094f44a"], "url": "https://github.com/neo4j/neo4j/issues/355", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 2, "lines": 9, "deletions": 8}, "numCommits": 1, "commits": {"5350ef689b9f62b55098efc6c7f169401094f44a": {"commitUser": "systay", "commitGHEventType": "closed"}}, "ttf": 32.000277777777775, "user": "freeeve", "changesInPackagesSPOON": ["org.neo4j.cypher.pycompat.ScalaToPythonWrapper.wrap(java.lang.Object)"], "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/PipeExecutionResult.scala", "python-embedded/src/main/java/org/neo4j/cypher/pycompat"], "body": "You need some sample data to be able to see anything, but the matrix example works.\n\n``` Shell\ncurl -X POST -H Accept:application/json -H Content-Type:application/json -v http://localhost:7474/db/data/cypher -d '{\"query\":\"start n=node(*) match n--m--fof with n, m, collect(fof) as fof return n, collect(m), collect(fof);\", \"params\":{}}'\n```\n\nThe question is, why are some things coming back as \"List(...)\"--did this always work this way?\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 1, "UPD": 0, "TOT": 9, "DEL": 3, "INS": 1, "spoonFilesChanged": 1, "MOV": 5}, "title": "Cypher: Collect of Collect with strange results", "statsSkippedReason": "", "closed": "2013-01-11 13:34:09", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2013-01-11 11:45:47", "commitHash": "5350ef689b9f62b55098efc6c7f169401094f44a", "commitParents": ["b6debb76ef21a26677bf0b08fd88f3a0130f3806"], "commitGHEventType": "closed", "nameRev": "5350ef689b9f62b55098efc6c7f169401094f44a tags/1.9.M04~28^2~1", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/PipeExecutionResult.scala", "deletions": 1}, {"insertions": 42, "lines": 42, "filePath": "community/cypher/src/test/java/org/neo4j/cypher/javacompat/JavaCompatibilityTest.java", "deletions": 0}, {"insertions": 2, "lines": 2, "filePath": "community/cypher/CHANGES.txt", "deletions": 0}, {"insertions": 0, "lines": 7, "filePath": "python-embedded/src/main/java/org/neo4j/cypher/pycompat/ScalaToPythonWrapper.java", "deletions": 7}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.cypher.javacompat.JavaCompatibilityTest"}], "spoonFilePath": "JavaCompatibilityTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 9, "DEL": 3, "INS": 1, "MOV": 5, "spoonMethodName": "org.neo4j.cypher.pycompat.ScalaToPythonWrapper.wrap(java.lang.Object)"}], "spoonFilePath": "ScalaToPythonWrapper.java"}], "commitMessage": "Fixes #355 - Collections in collections are still Scala collections instead of Java collections\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-01-11 10:50:02"}], "created": "2012-12-09 20:56:49"}, {"labels": ["bug", "cypher"], "filteredCommits": ["d6e7cf26cf67139891c09081b63b6f2d999ef8d2"], "url": "https://github.com/neo4j/neo4j/issues/336", "gitStatsSummary": {"insertions": 52, "gitFilesChange": 3, "lines": 83, "deletions": 31}, "numCommits": 1, "commits": {"d6e7cf26cf67139891c09081b63b6f2d999ef8d2": {"commitUser": "systay", "commitGHEventType": "closed"}, "22ccbe08e64ca45cc399569bd5e3d832447476a3": {"commitUser": "jakewins", "commitGHEventType": "referenced"}}, "ttf": 10.000277777777777, "user": "b-m", "changesInPackagesGIT": ["community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes"], "body": "Here's is the web console setup: http://console.neo4j.org/?id=1t0d7x\n\nThe following query is supposed to return all paths from the given `person` to their `friend` such that `friend` _lives in_ as well as _attends_ an `event` _hosted by_ `city`. For the given setup, there is only one such path from any `person [node(2, 3, 4)]` for `friend [adam=node(1)]` through `city [london=node(5)]` and `event [exhibition=node(9)]`. \n\nThe query below returns non-existing paths for each `person=node(2, 3, 4)`. However, when `person=node(*)` the three existing matching paths are returned.\n\n```\nstart person=node(2) \nmatch person-[:FRIEND]-friend-[:LIVES]->city-[:HOSTS]->event<-[:ATTENDS]-friend \nreturn person, friend, city, event, friend;\n```\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 1}, "spoonStatsSummary": {}, "title": "Query returning non-existing paths", "statsSkippedReason": "", "closed": "2012-12-11 14:11:02", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2012-12-10 16:39:02", "commitHash": "d6e7cf26cf67139891c09081b63b6f2d999ef8d2", "commitParents": ["6dee45537928a502c295c335863d5c65f525170b"], "commitGHEventType": "closed", "nameRev": "d6e7cf26cf67139891c09081b63b6f2d999ef8d2 tags/1.9.M03~41^2", "commitGitStats": [{"insertions": 58, "lines": 58, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailDecomposeTest.scala", "deletions": 0}, {"insertions": 8, "lines": 10, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/EndPoint.scala", "deletions": 2}, {"insertions": 5, "lines": 6, "filePath": "community/cypher/CHANGES.txt", "deletions": 1}, {"insertions": 16, "lines": 24, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStepTrail.scala", "deletions": 8}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/docgen/WithTest.scala", "deletions": 1}, {"insertions": 28, "lines": 49, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/VariableLengthStepTrail.scala", "deletions": 21}], "commitSpoonAstDiffStats": [], "commitMessage": "Fixes #336 - Patterns that re-use a pattern node can produce non-existing matches\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2012-12-10 16:39:02"}, {"commitUser": "jakewins", "commitDateTime": "2012-12-11 06:11:01", "commitHash": "22ccbe08e64ca45cc399569bd5e3d832447476a3", "commitParents": ["6a8c2ad85c0993a1ba5d271bc6eb5eecbf700122", "d6e7cf26cf67139891c09081b63b6f2d999ef8d2"], "commitGHEventType": "referenced", "nameRev": "22ccbe08e64ca45cc399569bd5e3d832447476a3 tags/1.9.M03~41", "commitGitStats": [{"insertions": 58, "lines": 58, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/internal/executionplan/builders/TrailDecomposeTest.scala", "deletions": 0}, {"insertions": 8, "lines": 10, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/EndPoint.scala", "deletions": 2}, {"insertions": 5, "lines": 6, "filePath": "community/cypher/CHANGES.txt", "deletions": 1}, {"insertions": 16, "lines": 24, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/SingleStepTrail.scala", "deletions": 8}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/src/test/scala/org/neo4j/cypher/docgen/WithTest.scala", "deletions": 1}, {"insertions": 28, "lines": 49, "filePath": "community/cypher/src/main/scala/org/neo4j/cypher/internal/pipes/matching/VariableLengthStepTrail.scala", "deletions": 21}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #357 from systay/336\n\nFixes #336 - Patterns that re-use a pattern node can produce non-existing matches", "spoonStatsSkippedReason": "", "authoredDateTime": "2012-12-11 06:11:01"}], "created": "2012-12-01 02:08:14"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/329", "title": "Pattern n--()--()--()--e  does not work", "closed": "2013-01-03 11:15:14", "commitsDetails": [], "commits": {}, "ttf": 34.000277777777775, "created": "2012-11-29 22:47:58", "user": "jexp", "body": "start n=node(0) \nMATCH p = n--()--()--()--e \nRETURN p,length(p)\nError: All parts of the pattern must either directly or indirectly be connected to at least one bound entity. These identifiers were found to be disconnected: e,   UNNAMED21,   UNNAMED17\n\nsee: http://console.neo4j.org/r/2v3ghg\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/325", "title": "pattern-matchers return different results", "closed": "2013-03-04 13:12:32", "commitsDetails": [], "commits": {}, "ttf": 97.00027777777778, "created": "2012-11-26 23:36:20", "user": "tbaum", "body": "```\nMATCH  (a)-[:REL]->(b) ...\n```\n\nand\n\n```\nMATCH  (a)-[:REL*1..1]->(b)  ...\n```\n\nwill not return the same results\n\ntest:\n\nhttps://github.com/tbaum/neo4j/blob/master/community/cypher/src/test/java/org/neo4j/cypher/javacompat/PatternMatcherTest.java\n\nconsole-links:\n\nhttp://console.neo4j.org/?id=cypher-pm-ok\nhttp://console.neo4j.org/?id=cypher-pm-failes\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/324", "title": "cypher SET node = {param} : failed removing properties via map, value null", "closed": "2015-12-05 06:40:08", "commitsDetails": [], "commits": {}, "ttf": 1103.0002777777777, "created": "2012-11-26 23:33:06", "user": "tbaum", "body": "removing a property by updating (set-operation)  fails.\n\n```\n    engine.execute(\n            \"START n=node(0) SET n = {data}\",\n            map( \"data\",\n                    map(\"key1\", null)\n            )\n    );\n```\n\n... throws a \n\n```\njava.lang.IllegalStateException: Node[0] has been deleted in this tx\n```\n\nfailing test:\n\nhttps://github.com/tbaum/neo4j/blob/master/community/cypher/src/test/java/org/neo4j/cypher/javacompat/CypherUpdateMapTest.java\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/309", "title": "CYPHER: next on empty iterator", "closed": "2014-11-11 23:26:28", "commitsDetails": [], "commits": {}, "ttf": 721.0002777777778, "created": "2012-11-20 03:50:40", "user": "radford", "body": "With an empty db, the following CYPHER query fails with a stacktrace indicating \"next on empty iterator\".\n\n```\nSTART n=node(0) MATCH n-[?:none]->p WITH p MATCH p-[?:missing]->q RETURN q;\n```\n\nIt fails in 1.8, 1.9.M01 and 1.9-SNAPSHOT.\n"}, {"labels": ["bug", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/295", "title": "node_auto_index 500 error on query after initial install", "closed": "2017-10-04 10:22:33", "commitsDetails": [], "commits": {}, "ttf": 1786.0002777777777, "created": "2012-11-12 15:39:12", "user": "cicomputing", "body": "For full discussion see:  https://groups.google.com/forum/?hl=en&fromgroups=#!topic/neo4j/07itKJmRsbI\n\nWe have a script that does a fresh install of neo4j for development. After we do this, our web app makes an initial query for nodes that match a certain attribute. This always fails with a 500 error until we manually create an index called \"node_auto_index\"\n\nHere is a slightly modified version of the query from our logs (forgive any punctuation mistakes, the query does work when there is an index):\n\n```\nSTART nodes=node:node_auto_index('email_indexed:email1@example.net OR other.email_indexed:email1@example.net OR other2.email_indexed:email1@example.net')\nRETURN nodes\n```\n\nThe response body:\n\n```\n   body:\n    { message: 'Index `node_auto_index` does not exist',\n      exception: 'MissingIndexException',\n      stacktrace:\n       [ 'org.neo4j.cypher.internal.executionplan.builders.IndexQueryBuilder.checkNodeIndex(IndexQueryBuilder.scala:53)',\n         'org.neo4j.cypher.internal.executionplan.builders.IndexQueryBuilder.createStartPipe(IndexQueryBuilder.scala:80)',\n         'org.neo4j.cypher.internal.executionplan.builders.IndexQueryBuilder.apply(IndexQueryBuilder.scala:37)',\n         'org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.prepareExecutionPlan(ExecutionPlanImpl.scala:46)',\n         'org.neo4j.cypher.internal.executionplan.ExecutionPlanImpl.<init>(ExecutionPlanImpl.scala:32)',\n         'org.neo4j.cypher.ExecutionEngine$$anonfun$prepare$1.apply(ExecutionEngine.scala:61)',\n         'org.neo4j.cypher.ExecutionEngine$$anonfun$prepare$1.apply(ExecutionEngine.scala:61)',\n         'org.neo4j.cypher.internal.LRUCache.getOrElseUpdate(LRUCache.scala:31)',\n         'org.neo4j.cypher.ExecutionEngine.prepare(ExecutionEngine.scala:61)',\n         'org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:55)',\n         'org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:58)',\n         'org.neo4j.cypher.javacompat.ExecutionEngine.execute(ExecutionEngine.java:86)',\n         'org.neo4j.server.rest.web.CypherService.cypher(CypherService.java:79)',\n         'java.lang.reflect.Method.invoke(Method.java:597)' ] } }\n```\n\nFrom Michael Hunger:\n\nI think the issue is from a change in the neo4j internals that don't cause indexes to be created by default (without anything stored in them) before the first getIndex() is called, and as cypher checks upfront if the index is there ....\n\nI think for the auto-indexes that they should be created at db-startup even if there is nothing in there.\n\nI hit the same issue with the console.\n\nA workaround is to add an indexed property to (for instance the root node, and remove it again).\n\nstart n=node(0)  \nset n.name='foo' \ndelete n.name \nreturn n\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/270", "title": "Neo4j Install Error on RedHat Linux", "closed": "2016-01-07 10:23:50", "commitsDetails": [], "commits": {}, "ttf": 1150.0002777777777, "created": "2012-11-12 14:03:16", "user": "lassewesth", "body": "@Muzaknut: 'Problem:\n\nTrying to install neo4j as a service on Red Hat Linux per documentation at \nhttp://docs.neo4j.org/chunked/1.6/server-installation.html#_linux_service\nbut getting the \"command not found\" error below:\n\n[pharos_priv_user@pdevdv1db128]$ sudo ./bin/neo4j install\nGraph-like power should be handled carefully. What user should run Neo4j? [neo4j]\n/opt/neo4j-enterprise-1.6/bin/neo4j: line 349: update-rc.d: command\nnot found\n\nIs update-rc.d command specific to Ubuntu distribution?\nIf so, how can neo4j service be installed on RedHat?\n\nEnvironment:\n\nRed Hat Enterprise Linux Server release 5.6 (Tikanga)\nNeo4j - Graph Database Kernel 1.6 (Enterprise)\njava version \"1.6.0_25\"\nJava(TM) SE Runtime Environment (build 1.6.0_25-b06)\nJava HotSpot(TM) 64-Bit Server VM (build 20.0-b11, mixed mode) \n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/269", "title": "build a separate init.d script for debian", "closed": "2013-03-04 13:17:24", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 14:03:15", "user": "lassewesth", "body": "@peterneubauer: 'with a symlinked /etc/init.d/neo4j-service -> neo4j.sh it is possible to do\n\n```\nsudo /etc/initi.d/neo4j-service console\n```\n\nwhich will run as root and barf the installation. This should not be allowed or explicitly provided for.'\n"}, {"labels": ["bug", "operability", "team-documentation"], "url": "https://github.com/neo4j/neo4j/issues/268", "title": "Missing backup manpage in deb", "closed": "2018-10-29 10:13:49", "commitsDetails": [], "commits": {}, "ttf": 2176.0002777777777, "created": "2012-11-12 14:03:15", "user": "lassewesth", "body": "@nawroth: 'All other manpages show up in the system after installing the corresponding package, but the backup manpage is missing in the enterprise package.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/231", "title": "Not all rels are returned when deleting at the same time as lazily loading", "closed": "2013-11-13 15:25:21", "commitsDetails": [], "commits": {}, "ttf": 366.0002777777778, "created": "2012-11-12 14:02:26", "user": "lassewesth", "body": "@tinwelint: 'If creating more than one \"grab size\" relationships of a type for a node and then iterating over those relationships (when they haven't been loaded for that node before) at the same time as deleting them and committing the transaction now and then, not all rels are returned from the getRelationships' Iterable. If done several times all relationships are returned at last.\n\nSee @Ignored test in: org.neo4j.kernel.impl.core.TestRelationship#deleteRelsWithCommitInMiddle()'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/223", "title": "Inconsistent Evaluator behavior at Depth 0", "closed": "2013-10-01 08:01:35", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 14:02:18", "user": "lassewesth", "body": "@peterneubauer: 'Issue: fromDepth, toDepth and atDepth might not show consistent behavior, in particular, the following code\n\nTraversal.description.breadthFirst\n.evaluator(Evaluators.fromDepth(0)) .evaluator(Evaluators.toDepth(0))\n\ndoes not return the start node. Using .fromDepth(1) & .toDepth(1) seem to correctly return the nodes at depth 1.\n\nPlease tests the following:\n\n.fromDepth(0) & .toDepth(0) and atDepth(0) return the start node .fromDepth(n) & .toDepth(n) and atDepth(n) return the nodes at depth n\n\nThank you.'\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/220", "title": "Database Upgrade - multiple backups not supported", "closed": "2015-12-10 20:42:07", "commitsDetails": [], "commits": {}, "ttf": 1123.0002777777777, "created": "2012-11-12 14:02:13", "user": "lassewesth", "body": "@Romiko: 'Hi,\n\nI notice that if a DB Upgrade needs to be performed, it will try upgrade the database, but if there was already a backup of the DB from a previous upgrade, it then fails.\n\n[WaWorkerHost.exe]  at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:52)\n[WaWorkerHost.exe] Caused by: org.neo4j.kernel.impl.storemigration.StoreUpgrader$UnableToUpgradeException: Cannot proceed with upgrade because there is an existing upgrade backup in the way at C:\\AzureTemp\\neo4j-db\\upgrade_backup. If you do not need this backup please delete it or move it out of the way before re-attempting upgrade.\n\nI am wondering, would it not be better to have support for multiple backup folders.'\n"}, {"labels": ["bug", "build"], "url": "https://github.com/neo4j/neo4j/issues/216", "title": "make JDK 1.7 build cleanly", "closed": "2013-03-04 13:36:39", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 14:02:10", "user": "lassewesth", "body": "@grncdr: 'Maven install was throwing errors about missing two files. The build appears to work after creating the following (empty) files in \nkernel/src/main/resources/META-INF/services:\n\norg.neo4j.kernel.Version\norg.neo4j.kernel.impl.transaction.TransactionManagerProvider\n\nThis is probably not the appropriate way to fix things, but I'm a bit of a Maven newb, so any pointers would be appreciated. There is also a failure in the Graphviz component, but I just skipped over that one for now.'\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/211", "title": "Copy/paste using mouse in webadmin console", "closed": "2013-10-01 08:01:41", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 14:02:07", "user": "lassewesth", "body": "@baldric: 'Selecting text with the mouse: text selection does not always stay selected. Specifically, if one drags selection to the end of the line, it is fine, but if trying to select part of a line, the moment the mouse button is released, the selection disappears.\nI'm posting this because of peer pressure, and in response to: http://neo4j.org/forums/#nabble-td3509232|a3512275 '\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/210", "title": "MUST_NOT in Index.query leads to NPE", "closed": "2013-03-04 13:39:50", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 14:02:06", "user": "lassewesth", "body": "@danielbrenner: 'The method Index.query() raises a NullPointerException when the query contains MUST_NOT like \"id:MUST_NOT 1\"\nHowever, plain Lucene does support MUST_NOT and works perfectly fine. Therefore, neo4j should not throw a NullPointerException.\n\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/208", "title": "REST batch handles properties with \" and \\ incorrectly", "closed": "2013-10-01 08:01:53", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 14:01:58", "user": "lassewesth", "body": "@jadell: 'There appears to be a problem with the Neo4j REST parsing the JSON for batch operations. If you go to http://localhost:7474/webadmin/#/console/http and try:\n\n```\nPOST /db/data/batch [{\"method\":\"POST\",\"to\":\"\\/node\",\"body\":{\"NAME\":\"string\\\\ and \\\"test\\\"\"},\"id\":0}]\n```\n\nit fails. But if you try:\n\n```\nPOST /db/data/batch [{\"method\":\"POST\",\"to\":\"\\/node\",\"body\":{\"NAME\":\"string\\\\\\\\ and \\\\\\\"test\\\\\\\"\"},\"id\":0}]\n```\n\nit succeeds.  What's more, the \"data\" for the returned node shows the property escaped the first way.\n\nIf you retrieve the node, the NAME property comes back escaped the first way even, though it was created the second way.  This only appears to be the case for batch operations; regular node (and I assume relationship?) creation works correctly.\n'\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/205", "title": "Webadmin HTTP Console displays a disconnect after a bad query", "closed": "2013-03-04 13:45:38", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 14:01:56", "user": "lassewesth", "body": "@prehfeldt: 'If you enter `GET /\\` in the Webadmin HTTP console, the request gets canceled and it displays the disconnect page which disappears after the next request done by webadmin.\n\nThis bug only appears in webkit browser (Chrome and Safari). \n\nTested in Neo4j 1.6 M01, M02, M03 and GA'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/201", "title": "Ulimit warning in Mac", "closed": "2013-10-01 09:50:06", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 14:01:55", "user": "lassewesth", "body": "@systay: 'When I start the server, I get a warning about my ulimit being too low. The warning tells me to consult the manual for information on how to remedy this situation, but the only mention of ulimit is under Linux stuff:\n\nhttp://docs.neo4j.org/chunked/snapshot/configuration-linux-notes.html#_setting_the_number_of_open_files'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/200", "title": "Only implement Iterable where appropriate", "closed": "2014-11-11 22:46:04", "commitsDetails": [], "commits": {}, "ttf": 729.0002777777778, "created": "2012-11-12 14:01:52", "user": "lassewesth", "body": "@ractive: 'This is a followup to [this mailing list topic](https://groups.google.com/forum/#!topic/neo4j/IefEwe2j6wY).\n\nFor the second time we stumbled about Iterables that are no Iterables in Neo4j. `IndexHits` e.g. extends `Iterator` and `Iterable` and states in its documentation that it is not really an iterable but always returns \"this\" in calls to iterator(). So far so good. At least the docu states that.\n\nBut now when using Spring Data Neo4j (and probably other frameworks), the `IndexHits` is wrapped and hidden behind other constructs like `ClosableIterable` and `IterableAdapter` etc. The user has no idea anymore that those IterableWrapper and ClosableIterable things he gets back are no iterables at all - well the names tell him of course that those things _are_ Iterables. This leads to very, very strange behavior like this:\n\n``` java\n@Test\npublic void ouch() {\n    Device d1 = new Device(\"d1\").persist();\n    Device d2 = new Device(\"d2\").persist();\n\n    ClosableIterable<Device> devices = deviceRepository().findAll();\n    assertThat(devices, hasItems(d1));\n    assertEquals(1, IteratorUtil.count(devices));\n}\n```\n\nWe add two devices to our DB, but the test clearly states that findAll() only returns one `(assertEquals(1, IteratorUtil.count(devices))`).\n\nAs an exercise for the reader: explain why this test misleads you....\n\nAn Iterable should always return a valid (new) iterator for every call to iterator(). Implementing Iterable just to be able to use an iterator in a for loop is evil..... >:-)\n\nI'm not sure if there are other classes misleadingly implementing Iterable, but IndexHits definitively must not implement it.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/193", "title": "ShortestPath (paths with length) doesn't return expected paths", "closed": "2015-12-05 06:31:40", "commitsDetails": [], "commits": {}, "ttf": 1117.0002777777777, "created": "2012-11-12 14:01:43", "user": "lassewesth", "body": "@tinwelint: '\"paths with length\" algo is using the same code as ShortestPath and there seems to be some assumptions regarding only shortest paths, so in some scenario (when using \"paths with length\" option) some paths doesn't get returned.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/183", "title": "RelationshipType interface violates enum best practices", "closed": "2013-03-04 13:53:45", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 14:01:36", "user": "lassewesth", "body": "@jasonab: 'The RelationshipType interface is recommended for use with enums, but violates several best practices for enum usage.\n\nThe interface defines a name() method that matches a pre-existing final method on Enum. However, JavaDoc on enum prescribes the use of toString() over name(). The interface should define a separate method that can be overridden to specify the exact name of the relationship.\n\nSecondly, RT says that relationships should be tested for equality via the name() method, not via equals() or == on the type. This is the exact opposite of proper enum usage, where == should be used, and equals() on Enum specifically returns the == result.\n\nIf relationships are truly defined by their name value and not their type, we should move away from / discourage the use of enums and focus on string constants instead.\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/178", "title": "REST API errors are still sometimes HTML when they should be JSON", "closed": "2015-03-14 12:02:20", "commitsDetails": [], "commits": {}, "ttf": 851.0002777777778, "created": "2012-11-12 14:01:33", "user": "lassewesth", "body": "@aseemk: 'This was filed and fixed for Cypher in the past; see issue #13.\n\nWe're upgrading now from 1.4 to 1.5, and part of that of course is the indexing API change. We forgot about that, and had a helluva time debugging it, because here also now, the returned error wasn't JSON.\n\nI don't know if this has been fixed since 1.5, but at least in 1.5, you can see this for yourself by:\n1. Open up the web admin; go to the console tab and click on the HTTP tab.\n2. Paste this in (old indexing syntax):\n\n```\nPOST /db/data/index/node/nodes/foo/bar {\"url\": \"/db/data/node/1\"}\n```\n\nThe response is a 405, which is fine, but it's HTML when it should be JSON:\n\n`````` html\n<html>\n<head>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\"/>\n<title>Error 405 Method Not Allowed</title>\n</head>\n<body><h2>HTTP ERROR 405</h2>\n<p>Problem accessing /db/data/index/node/nodes/foo/bar. Reason:\n<pre>    Method Not Allowed</pre></p><hr /><i><small>Powered by Jetty://</small></i><br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n<br/>                                                \n\n</body>\n</html>\n```'\n``````\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/177", "title": "Neo4j server has dependency on slf4j-jdk14 bridge", "closed": "2013-03-04 13:56:57", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 14:01:32", "user": "lassewesth", "body": "@jasonab: 'Neo4j server pulls in several slf4j dependencies that should not be forced on a client. Slf4j-api is appropriate, while the end clients should choose one of slf4j-log4j, slf4j-jdk, or slf4j-jcl.\n\nAdditionally, importing jcl-over-slf4j and log4j-over-slf4j could break clients that natively use jcl or log4j.\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/170", "title": "Could not create data source lucene-index[lucene-index]", "closed": "2013-03-04 13:58:50", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 14:01:23", "user": "lassewesth", "body": "@Romiko: 'Background\nNeo4j with indexes hosted in Azure on a worker role\n\nLatest change was to change Virtual Machine size from Large instance to Small instance\n\nScenario\nAfter the VM instance size change, which causes the VM to use less CPU's the Lucene Index system in Neo4j could not work when running a gremlin query. Not sure that this caused the issue, we cannot imagine why change in number of CPU's would corrupt indexes.\n\nNeo4j Starts up fine, however there is an exception for  cannot create data source\nQueries using indexes fail.\n\nReproduce\nSend an email to Romiko.Derbynew@readify.net to get a copy of the database to reproduce the problem.\n\nCurrent Fix\nDeleted the index files in the folder Index's and the system recovered correctly.\n\nLog Files\n\n2012-02-07 05:30:40.120+0000: F:\\DBFiles\\neostore non clean shutdown detected\n2012-02-07 05:30:40.167+0000: F:\\DBFiles\\neostore.relationshiptypestore.db non clean shutdown detected\n2012-02-07 05:30:40.183+0000: F:\\DBFiles\\neostore.relationshiptypestore.db.names non clean shutdown detected\n2012-02-07 05:30:40.230+0000: F:\\DBFiles\\neostore.propertystore.db non clean shutdown detected\n2012-02-07 05:30:40.245+0000: F:\\DBFiles\\neostore.propertystore.db.strings non clean shutdown detected\n2012-02-07 05:30:40.261+0000: F:\\DBFiles\\neostore.propertystore.db.index non clean shutdown detected\n2012-02-07 05:30:40.277+0000: F:\\DBFiles\\neostore.propertystore.db.index.keys non clean shutdown detected\n2012-02-07 05:30:40.277+0000: F:\\DBFiles\\neostore.propertystore.db.arrays non clean shutdown detected\n2012-02-07 05:30:40.292+0000: F:\\DBFiles\\neostore.relationshipstore.db non clean shutdown detected\n2012-02-07 05:30:40.308+0000: F:\\DBFiles\\neostore.nodestore.db non clean shutdown detected\n2012-02-07 05:30:40.370+0000: Non clean shutdown detected on log [F:\\DBFiles\\nioneo_logical.log.1]. Recovery started ...\n2012-02-07 05:30:40.370+0000: [F:\\DBFiles\\nioneo_logical.log.1] logVersion=134 with committed tx=18220\n2012-02-07 05:30:40.370+0000: [F:\\DBFiles\\nioneo_logical.log.1] entries found=0 lastEntryPos=16\n2012-02-07 05:30:40.386+0000: Internal recovery completed, scanned 0 log entries. Recovered 0 transactions. Last tx recovered: -1\n2012-02-07 05:30:40.386+0000: XaResourceManager[F:\\DBFiles\\nioneo_logical.log] sorting 0 xids\n2012-02-07 05:30:40.386+0000: XaResourceManager[F:\\DBFiles\\nioneo_logical.log] checkRecoveryComplete 0 xids\n2012-02-07 05:30:40.417+0000: F:\\DBFiles\\neostore.relationshiptypestore.db.names rebuild id generator, highId=79 defragged count=0\n2012-02-07 05:30:40.589+0000: F:\\DBFiles\\neostore.propertystore.db.index.keys rebuild id generator, highId=124 defragged count=0\n2012-02-07 05:30:40.667+0000: F:\\DBFiles\\neostore.propertystore.db.index rebuild id generator, highId=120 defragged count=0\n2012-02-07 05:30:40.761+0000: F:\\DBFiles\\neostore.propertystore.db.strings rebuild id generator, highId=988 defragged count=0\n2012-02-07 05:30:40.839+0000: F:\\DBFiles\\neostore.propertystore.db.arrays rebuild id generator, highId=1 defragged count=0\n2012-02-07 05:30:40.933+0000: F:\\DBFiles\\neostore.propertystore.db rebuild id generator, highId=415442 defragged count=0\n2012-02-07 05:30:41.011+0000: F:\\DBFiles\\neostore.relationshipstore.db rebuild id generator, highId=85011 defragged count=0\n2012-02-07 05:30:41.105+0000: F:\\DBFiles\\neostore.nodestore.db rebuild id generator, highId=82178 defragged count=0\n2012-02-07 05:30:41.183+0000: F:\\DBFiles\\neostore rebuild id generator, highId=6 defragged count=0\n2012-02-07 05:30:41.230+0000: XaResourceManager[F:\\DBFiles\\nioneo_logical.log] recovery completed.\n2012-02-07 05:30:41.230+0000: Recovery on log [F:\\DBFiles\\nioneo_logical.log.1] completed.\n2012-02-07 05:30:41.464+0000: Failed to load index provider lucene Could not create data source lucene-index[lucene-index]\norg.neo4j.graphdb.TransactionFailureException: Could not create data source lucene-index[lucene-index]\n    at org.neo4j.kernel.impl.transaction.TxModule.registerDataSource(TxModule.java:189)\n    at org.neo4j.index.impl.lucene.LuceneIndexImplementation.<init>(LuceneIndexImplementation.java:71)\n    at org.neo4j.index.lucene.LuceneIndexProvider.load(LuceneIndexProvider.java:37)\n    at org.neo4j.kernel.KernelData.loadIndexImplementations(KernelData.java:150)\n    at org.neo4j.kernel.EmbeddedGraphDbImpl$2.initializeIndexProviders(EmbeddedGraphDbImpl.java:180)\n    at org.neo4j.kernel.GraphDbInstance.start(GraphDbInstance.java:155)\n    at org.neo4j.kernel.EmbeddedGraphDbImpl.<init>(EmbeddedGraphDbImpl.java:190)\n    at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:77)\n    at org.neo4j.server.NeoServerBootstrapper$1.createDatabase(NeoServerBootstrapper.java:65)\n    at org.neo4j.server.database.Database.createDatabase(Database.java:81)\n    at org.neo4j.server.database.Database.<init>(Database.java:64)\n    at org.neo4j.server.NeoServerWithEmbeddedWebServer.startDatabase(NeoServerWithEmbeddedWebServer.java:181)\n    at org.neo4j.server.NeoServerWithEmbeddedWebServer.start(NeoServerWithEmbeddedWebServer.java:93)\n    at org.neo4j.server.Bootstrapper.start(Bootstrapper.java:87)\n    at org.neo4j.server.Bootstrapper.main(Bootstrapper.java:52)\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(Unknown Source)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(Unknown Source)\n    at java.lang.reflect.Constructor.newInstance(Unknown Source)\n    at org.neo4j.kernel.impl.transaction.XaDataSourceManager.create(XaDataSourceManager.java:77)\n    at org.neo4j.kernel.impl.transaction.TxModule.registerDataSource(TxModule.java:183)\n    ... 14 more\nCaused by: org.neo4j.graphdb.NotFoundException: Target file[lucene.log.v142] already exists\n    at org.neo4j.kernel.impl.util.FileUtils.renameFile(FileUtils.java:152)\n    at org.neo4j.kernel.CommonFactories$5.renameFile(CommonFactories.java:198)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.renameLogFileToRightVersion(XaLogicalLog.java:688)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.renameIfExists(XaLogicalLog.java:217)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaLogicalLog.open(XaLogicalLog.java:169)\n    at org.neo4j.kernel.impl.transaction.xaframework.XaContainer.openLogicalLog(XaContainer.java:120)\n    at org.neo4j.index.impl.lucene.LuceneDataSource.<init>(LuceneDataSource.java:218)\n    ... 20 more\n2012-02-07 05:30:41.480+0000: TM opening log: F:\\DBFiles\\tm_tx_log.2\n2012-02-07 05:30:41.558+0000: --- STARTUP diagnostics START ---\n2012-02-07 05:30:41.558+0000: Graph Database: org.neo4j.kernel.EmbeddedGraphDatabase StoreId[time:1321234551841, id:-8974411494144916416, store version: 13561656364791302]\n2012-02-07 05:30:41.573+0000: Kernel version: Neo4j - Graph Database Kernel 1.6\n2012-02-07 05:30:41.573+0000: Neo4j component versions:\n2012-02-07 05:30:41.573+0000:   Neo4j - Graph Database Kernel 1.6\n2012-02-07 05:30:41.573+0000: Diagnostics providers:\n    KernelDiagnostics:Versions\n    org.neo4j.kernel.info.DiagnosticsManager\n    SYSTEM_MEMORY\n    JAVA_MEMORY\n    OPERATING_SYSTEM\n    JAVA_VIRTUAL_MACHINE\n    CLASSPATH\n    LIBRARY_PATH\n    SYSTEM_PROPERTIES\n    org.neo4j.kernel.Config\n    NEO_STORE_VERSIONS\n    NEO_STORE_ID_USAGE\n    KernelDiagnostics:StoreFiles\n2012-02-07 05:30:41.573+0000: System memory information:\n    Total Physical memory: 7.06 GB\n    Free Physical memory: 5.89 GB\n    Committed virtual memory: 673.87 MB\n    Total swap space: 11.06 GB\n    Free swap space: 9.15 GB\n2012-02-07 05:30:41.573+0000: JVM memory information:\n    Free  memory: 376.48 MB\n    Total memory: 490.69 MB\n    Max   memory: 910.25 MB\n    Garbage Collector: PS Scavenge: [PS Eden Space, PS Survivor Space]\n    Garbage Collector: PS MarkSweep: [PS Eden Space, PS Survivor Space, PS Old Gen, PS Perm Gen]\n    Memory Pool: Code Cache (Non-heap memory): committed=2.44 MB, used=1.34 MB, max=48.00 MB, threshold=0.00 B\n    Memory Pool: PS Eden Space (Heap memory): committed=128.00 MB, used=105.01 MB, max=298.69 MB, threshold=?\n    Memory Pool: PS Survivor Space (Heap memory): committed=21.31 MB, used=9.21 MB, max=21.31 MB, threshold=?\n    Memory Pool: PS Old Gen (Heap memory): committed=341.38 MB, used=0.00 B, max=682.69 MB, threshold=0.00 B\n    Memory Pool: PS Perm Gen (Non-heap memory): committed=20.75 MB, used=13.52 MB, max=82.00 MB, threshold=0.00 B\n2012-02-07 05:30:41.573+0000: Operating system information:\n    Operating System: Windows Server 2008 R2; version: 6.1; arch: amd64; cpus: 4\n    Process id: 3100@RD00155D3425DC\n    Byte order: LITTLE_ENDIAN\n2012-02-07 05:30:41.573+0000: JVM information:\n    VM Name: Java HotSpot(TM) 64-Bit Server VM\n    VM Vendor: Oracle Corporation\n    VM Version: 21.0-b17\n    JIT compiler: HotSpot 64-Bit Tiered Compilers\n    VM Arguments: [-Dorg.neo4j.server.properties=conf/neo4j-server.properties, -Djava.util.logging.config.file=conf/logging.properties, -Xms512m, -Xmx1024m, -Xss2048k, -Dcom.sun.management.jmxremote.port=6666, -Dcom.sun.management.jmxremote.ssl=false, -Dcom.sun.management.jmxremote.authenticate=false, -javaagent:..\\newrelic-2.2.1.jar, -Dnewrelic.environment=staging]\n2012-02-07 05:30:41.573+0000: Java classpath:\n     [bootstrap] C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\lib\\resources.jar\n     [bootstrap] C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\lib\\jce.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jackson-mapper-asl-1.8.3.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-kernel-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-jmx-1.6.jar\n     [loader.1] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/jre7/lib/ext/zipfs.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/mimepull-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/neo4j-cypher-plugin-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jersey-multipart-1.9.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/pipes-0.9.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/newrelic-2.2.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jetty-6.1.25.jar\n     [loader.1] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/jre7/lib/ext/localedata.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/asm-tree-3.2.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/scala-library-2.9.0-1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/slf4j-api-1.6.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/log4j-over-slf4j-1.6.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/commons-beanutils-core-1.8.0.jar\n     [bootstrap] C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\classes\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/neo4j-server-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/rrd4j-2.0.7.jar\n     [bootstrap] C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\lib\\sunrsasign.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/blueprints-neo4j-graph-1.1.jar\n     [bootstrap] C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\lib\\rt.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jackson-jaxrs-1.8.3.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/lucene-core-3.5.0.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/slf4j-jdk14-1.6.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jsr311-api-1.1.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/commons-logging-1.1.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/blueprints-core-1.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/neo4j-server-1.6-tests.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/commons-configuration-1.6.jar\n     [bootstrap] C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\lib\\charsets.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/asm-analysis-3.2.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-shell-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/asm-3.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/asm-util-3.2.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/server-api-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/stax-api-1.0.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-graph-matching-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/groovy-1.8.4.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/antlr-2.7.7.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-community-1.6.jar\n     [bootstrap] C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\lib\\jsse.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jersey-core-1.9.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/servlet-api-2.5-20081211.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/neo4j-server-1.6-static-web.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jansi-1.5.jar\n     [loader.1] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/jre7/lib/ext/dnsns.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jetty-util-6.1.25.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-graph-algo-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-cypher-1.6.jar\n     [loader.1] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/jre7/lib/ext/sunec.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jackson-core-asl-1.8.3.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/commons-io-1.4.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-kernel-1.6-tests.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/org.apache.servicemix.bundles.jline-0.9.94_1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/gremlin-java-1.4.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/commons-digester-1.8.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/commons-beanutils-1.8.0.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-udc-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/geronimo-jta_1.1_spec-1.1.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/gremlin-groovy-1.4.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jersey-server-1.9.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jcl-over-slf4j-1.6.1.jar\n     [loader.1] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/jre7/lib/ext/sunjce_provider.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/jettison-1.3.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/neo4j-gremlin-plugin-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/commons-collections-3.2.1.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/lib/neo4j-lucene-index-1.6.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/commons-lang-2.4.jar\n     [loader.1] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/jre7/lib/ext/sunmscapi.jar\n     [classpath + loader.0] file:/C:/Resources/Directory/d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst/neo4j-community-1.6/system/lib/asm-commons-3.2.jar\n2012-02-07 05:30:41.589+0000: Library path:\n    C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\bin\n    D:\\Windows\\Sun\\Java\\bin\n    D:\\Windows\\System32\n    D:\\Windows\n    D:\\Windows\\System32\n    D:\\Windows\n    D:\\Windows\\System32\\wbem\n    D:\\Windows\\System32\\WindowsPowerShell\\v1.0\n    C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\neo4j-community-1.6\n    E:\\base\\x64\n    E:\\base\\x86\n    E:\\diagnostics\\x64\n    C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\neo4j-community-1.6\n    D:\\Packages\\GuestAgent\\LegacyRuntime\\x64\n    D:\\Packages\\GuestAgent\\LegacyRuntime\\x86D:\\Windows\\system32\n    D:\\Windows\n    D:\\Windows\\System32\\wbem\n    D:\\Windows\\System32\\WindowsPowerShell\\v1.0\n    C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\neo4j-community-1.6\n    E:\\base\\x64\n    E:\\base\\x86\n    E:\\diagnostics\\x64\n    C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\neo4j-community-1.6\n    D:\\Packages\\GuestAgent\\LegacyRuntime\\x64\n    D:\\Packages\\GuestAgent\\LegacyRuntime\\x86D:\\Windows\\system32\n    D:\\Windows\n    D:\\Windows\\System32\\wbem\n    D:\\Windows\\System32\\WindowsPowerShell\\v1.0\n    C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\neo4j-community-1.6\n    E:\\base\\x64\n    E:\\base\\x86\n    E:\\diagnostics\\x64\n    C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\neo4j-community-1.6\n    D:\\Packages\\GuestAgent\\LegacyRuntime\\x64\n    D:\\Packages\\GuestAgent\\LegacyRuntime\\x86\n    C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\neo4j-community-1.6\n2012-02-07 05:30:41.589+0000: System.properties:\n    com.sun.management.jmxremote.authenticate = false\n    sun.boot.library.path = C:\\Resources\\directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\jre7\\bin\n    org.neo4j.server.properties = conf/neo4j-server.properties\n    path.separator = ;\n    file.encoding.pkg = sun.io\n    user.country = US\n    user.script = \n    sun.java.launcher = SUN_STANDARD\n    sun.os.patch.level = Service Pack 1\n    com.sun.management.jmxremote.port = 6666\n    user.dir = C:\\Resources\\Directory\\d9c27a3e42fa4ed4aac44d7b11fb227e.Neo4jServerHost.Neo4jInst\\neo4j-community-1.6\n    user.variant = \n    sun.jnu.encoding = Cp1252\n    sun.management.compiler = HotSpot 64-Bit Tiered Compilers\n    user.home = C:\\\n    user.timezone = GMT\n    file.encoding = Cp1252\n    user.name = RD00155D3425DC$\n    sun.java.command = org.neo4j.server.Bootstrapper\n    sun.arch.data.model = 64\n    user.language = en\n    newrelic.environment = staging\n    awt.toolkit = sun.awt.windows.WToolkit\n    com.sun.management.jmxremote.ssl = false\n    file.separator = \\\n    sun.io.unicode.encoding = UnicodeLittle\n    sun.cpu.endian = little\n    sun.desktop = windows\n    sun.cpu.isalist = amd64\n2012-02-07 05:30:41.605+0000: Neo4j Kernel properties:\n    store_dir=F:\\DBFiles\n    logical_log=F:\\DBFiles\\nioneo_logical.log\n    node_auto_indexing=false\n    neostore.relationshipstore.db.mapped_memory=100M\n    keep_logical_logs=true\n    neostore.nodestore.db.mapped_memory=20M\n    use_memory_mapped_buffers=false\n    rebuild_idgenerators_fast=true\n    neostore.propertystore.db.index.keys.mapped_memory=1M\n    neostore.propertystore.db.arrays.mapped_memory=130M\n    neostore.propertystore.db.strings.mapped_memory=130M\n    neo_store=F:\\DBFiles\\neostore\n    neostore.propertystore.db.index.mapped_memory=1M\n    create=true\n    enable_remote_shell=true\n    neostore.propertystore.db.mapped_memory=90M\n    relationship_auto_indexing=false\n    allow_store_upgrade=true\n    neo4j.ext.udc.source=server\n2012-02-07 05:30:41.605+0000: Store versions:\n    NeoStore v0.A.0\n    NodeStore v0.A.0\n    RelationshipStore v0.A.0\n    RelationshipTypeStore v0.A.0\n    PropertyStore v0.A.0\n    PropertyIndexStore v0.A.0\n    StringPropertyStore v0.A.0\n    ArrayPropertyStore v0.A.0\n2012-02-07 05:30:41.605+0000: Id usage:\n    NodeStore: used=82178 high=82177\n    RelationshipStore: used=85011 high=85010\n    RelationshipTypeStore: used=74 high=73\n    PropertyStore: used=415442 high=415441\n    PropertyIndexStore: used=120 high=119\n    StringPropertyStore: used=988 high=987\n    ArrayPropertyStore: used=1 high=0\n2012-02-07 05:30:41.605+0000: Storage files:\n    active_tx_log: 11.00 B\n    index:\n      lucene:\n        node:\n          agency1-clients:\n            segments.gen: 20.00 B\n            segments_7: 1.28 kB\n            _2b.fdt: 1.80 kB\n            _2b.fdx: 148.00 B\n            _2b.fnm: 200.00 B\n            _2b.frq: 175.00 B\n            _2b.nrm: 274.00 B\n            _2b.prx: 175.00 B\n            _2b.tii: 49.00 B\n            _2b.tis: 1.79 kB\n            _2b_3.del: 33.00 B\n            _2c.fdt: 140.00 B\n            _2c.fdx: 12.00 B\n            _2c.fnm: 200.00 B\n            _2c.frq: 15.00 B\n            _2c.nrm: 19.00 B\n            _2c.prx: 15.00 B\n            _2c.tii: 35.00 B\n            _2c.tis: 184.00 B\n            _2f.cfs: 586.00 B\n            _2i.cfs: 598.00 B\n            _2y.cfs: 620.00 B\n            _3a.cfs: 592.00 B\n          - Total: 8.87 kB\n          agency111-clients:\n            segments.gen: 20.00 B\n            segments_3: 909.00 B\n            _12.fdt: 121.00 B\n            _12.fdx: 12.00 B\n            _12.fnm: 136.00 B\n            _12.frq: 10.00 B\n            _12.nrm: 15.00 B\n            _12.prx: 10.00 B\n            _12.tii: 35.00 B\n            _12.tis: 154.00 B\n            _1b.fdt: 85.00 B\n            _1b.fdx: 12.00 B\n            _1b.fnm: 136.00 B\n            _1b.frq: 7.00 B\n            _1b.nrm: 15.00 B\n            _1b.prx: 7.00 B\n            _1b.tii: 35.00 B\n            _1b.tis: 107.00 B\n            _1t.fdt: 141.00 B\n            _1t.fdx: 12.00 B\n            _1t.fnm: 200.00 B\n            _1t.frq: 15.00 B\n            _1t.nrm: 19.00 B\n            _1t.prx: 15.00 B\n            _1t.tii: 35.00 B\n            _1t.tis: 186.00 B\n            _l.fdt: 679.00 B\n            _l.fdx: 60.00 B\n            _l.fnm: 108.00 B\n            _l.frq: 60.00 B\n            _l.nrm: 67.00 B\n            _l.prx: 60.00 B\n            _l.tii: 35.00 B\n            _l.tis: 696.00 B\n            _l_1.del: 31.00 B\n          - Total: 4.15 kB\n          agency143-clients:\n            segments.gen: 20.00 B\n            segments_2: 890.00 B\n            _9.fdt: 99.00 B\n            _9.fdx: 12.00 B\n            _9.fnm: 108.00 B\n            _9.frq: 9.00 B\n            _9.nrm: 13.00 B\n            _9.prx: 9.00 B\n            _9.tii: 35.00 B\n            _9.tis: 120.00 B\n            _d.fdt: 91.00 B\n            _d.fdx: 12.00 B\n            _d.fnm: 108.00 B\n            _d.frq: 9.00 B\n            _d.nrm: 13.00 B\n            _d.prx: 9.00 B\n            _d.tii: 35.00 B\n            _d.tis: 114.00 B\n            _e.fdt: 81.00 B\n            _e.fdx: 12.00 B\n            _e.fnm: 108.00 B\n            _e.frq: 7.00 B\n            _e.nrm: 13.00 B\n            _e.prx: 7.00 B\n            _e.tii: 35.00 B\n            _e.tis: 96.00 B\n            _f.fdt: 81.00 B\n            _f.fdx: 12.00 B\n            _f.fnm: 108.00 B\n            _f.frq: 7.00 B\n            _f.nrm: 13.00 B\n            _f.prx: 7.00 B\n            _f.tii: 35.00 B\n            _f.tis: 96.00 B\n          - Total: 2.37 kB\n          agency21-clients:\n            segments.gen: 20.00 B\n            segments_1: 237.00 B\n            _5.fdt: 143.00 B\n            _5.fdx: 12.00 B\n            _5.fnm: 168.00 B\n            _5.frq: 13.00 B\n            _5.nrm: 17.00 B\n            _5.prx: 13.00 B\n            _5.tii: 35.00 B\n            _5.tis: 183.00 B\n          - Total: 841.00 B\n          agency22-clients:\n            segments.gen: 20.00 B\n            segments_9: 498.00 B\n            _ab.fdt: 6.76 kB\n            _ab.fdx: 460.00 B\n            _ab.fnm: 200.00 B\n            _ab.frq: 689.00 B\n            _ab.nrm: 859.00 B\n            _ab.prx: 726.00 B\n            _ab.tii: 96.00 B\n            _ab.tis: 5.90 kB\n            _ab_1.del: 38.00 B\n            _ae.cfs: 654.00 B\n          - Total: 16.80 kB\n          agency31-clients:\n            segments.gen: 20.00 B\n            segments_p: 1.76 kB\n            _3j4s.fdt: 3.59 MB\n            _3j4s.fdx: 294.43 kB\n            _3j4s.fnm: 200.00 B\n            _3j4s.frq: 649.30 kB\n            _3j4s.nrm: 552.06 kB\n            _3j4s.prx: 327.95 kB\n            _3j4s.tii: 13.32 kB\n            _3j4s.tis: 1.05 MB\n            _3j4s_3.del: 53.00 B\n            _3j4v.cfs: 648.00 B\n            _3j57.cfs: 640.00 B\n            _3j5r.cfs: 662.00 B\n            _3j5x.cfs: 750.00 B\n            _3j61.cfs: 632.00 B\n            _3j65.cfs: 628.00 B\n            _3j6c.cfs: 799.00 B\n          - Total: 6.44 MB\n          agency41-clients:\n            segments.gen: 20.00 B\n            segments_3: 886.00 B\n            _36.fdt: 2.35 kB\n            _36.fdx: 196.00 B\n            _36.fnm: 200.00 B\n            _36.frq: 220.00 B\n            _36.nrm: 364.00 B\n            _36.prx: 220.00 B\n            _36.tii: 50.00 B\n            _36.tis: 1.57 kB\n            _36_1.del: 12.00 B\n            _38.fdt: 126.00 B\n            _38.fdx: 12.00 B\n            _38.fnm: 200.00 B\n            _38.frq: 11.00 B\n            _38.nrm: 19.00 B\n            _38.prx: 11.00 B\n            _38.tii: 35.00 B\n            _38.tis: 160.00 B\n            _39.cfs: 620.00 B\n            _3a.cfs: 620.00 B\n          - Total: 7.81 kB\n          agency90-clients:\n            segments.gen: 20.00 B\n            segments_1: 1.57 kB\n            _1g0t.fdt: 840.84 kB\n            _1g0t.fdx: 77.81 kB\n            _1g0t.fnm: 118.00 B\n            _1g0t.frq: 133.51 kB\n            _1g0t.nrm: 87.53 kB\n            _1g0t.prx: 68.35 kB\n            _1g0t.tii: 5.06 kB\n            _1g0t.tis: 425.46 kB\n            _1g0t_1.del: 15.00 B\n            _266s.fdt: 845.58 kB\n            _266s.fdx: 81.17 kB\n            _266s.fnm: 118.00 B\n            _266s.frq: 139.63 kB\n            _266s.nrm: 91.31 kB\n            _266s.prx: 70.42 kB\n            _266s.tii: 4.91 kB\n            _266s.tis: 405.72 kB\n            _266s_1.del: 15.00 B\n            _2mzj.fdt: 538.22 kB\n            _2mzj.fdx: 51.07 kB\n            _2mzj.fnm: 118.00 B\n            _2mzj.frq: 84.24 kB\n            _2mzj.nrm: 57.45 kB\n            _2mzj.prx: 45.10 kB\n            _2mzj.tii: 3.68 kB\n            _2mzj.tis: 307.08 kB\n            _2mzj_1.del: 15.00 B\n            _2mzk.cfs: 500.00 B\n            _2mzn.cfs: 496.00 B\n            _2mzq.cfs: 512.00 B\n            _qf4.fdt: 847.62 kB\n            _qf4.fdx: 84.39 kB\n            _qf4.fnm: 118.00 B\n            _qf4.frq: 140.75 kB\n            _qf4.nrm: 94.93 kB\n            _qf4.prx: 71.14 kB\n            _qf4.tii: 4.75 kB\n            _qf4.tis: 395.18 kB\n            _qf4_1.del: 15.00 B\n          - Total: 5.87 MB\n        - Total: 12.34 MB\n      - Total: 12.34 MB\n      lucene-store.db: 40.00 B\n      lucene.log.1: 16.00 B\n      lucene.log.active: 4.00 B\n      lucene.log.v0: 12.21 MB\n      lucene.log.v1: 239.00 B\n      lucene.log.v10: 10.37 kB\n      lucene.log.v100: 772.00 B\n      lucene.log.v101: 2.42 kB\n      lucene.log.v102: 16.00 B\n      lucene.log.v103: 16.00 B\n      lucene.log.v104: 16.00 B\n      lucene.log.v105: 16.00 B\n      lucene.log.v106: 16.00 B\n      lucene.log.v107: 16.00 B\n      lucene.log.v108: 16.00 B\n      lucene.log.v109: 16.00 B\n      lucene.log.v11: 16.00 B\n      lucene.log.v110: 16.00 B\n      lucene.log.v111: 16.00 B\n      lucene.log.v112: 16.00 B\n      lucene.log.v113: 979.00 B\n      lucene.log.v114: 16.00 B\n      lucene.log.v115: 764.00 B\n      lucene.log.v116: 774.00 B\n      lucene.log.v117: 16.00 B\n      lucene.log.v118: 16.00 B\n      lucene.log.v119: 756.00 B\n      lucene.log.v12: 1.44 kB\n      lucene.log.v120: 756.00 B\n      lucene.log.v121: 2.71 kB\n      lucene.log.v122: 16.00 B\n      lucene.log.v123: 2.52 kB\n      lucene.log.v124: 16.00 B\n      lucene.log.v125: 16.00 B\n      lucene.log.v126: 4.92 kB\n      lucene.log.v127: 16.00 B\n      lucene.log.v128: 2.05 kB\n      lucene.log.v129: 17.30 kB\n      lucene.log.v13: 1.17 kB\n      lucene.log.v130: 16.00 B\n      lucene.log.v131: 16.00 B\n      lucene.log.v132: 16.00 B\n      lucene.log.v133: 16.00 B\n      lucene.log.v134: 34.38 kB\n      lucene.log.v135: 9.93 kB\n      lucene.log.v136: 2.45 kB\n      lucene.log.v137: 16.00 B\n      lucene.log.v138: 16.00 B\n      lucene.log.v139: 16.00 B\n      lucene.log.v14: 16.00 B\n      lucene.log.v140: 1.39 kB\n      lucene.log.v141: 16.00 B\n      lucene.log.v142: 16.00 B\n      lucene.log.v15: 4.98 kB\n      lucene.log.v16: 33.17 kB\n      lucene.log.v17: 21.59 MB\n      lucene.log.v18: 35.84 kB\n      lucene.log.v19: 1.32 kB\n      lucene.log.v2: 15.05 MB\n      lucene.log.v20: 25.00 MB\n      lucene.log.v21: 1.75 MB\n      lucene.log.v22: 2.46 kB\n      lucene.log.v23: 16.00 B\n      lucene.log.v24: 1.05 kB\n      lucene.log.v25: 16.00 B\n      lucene.log.v26: 16.00 B\n      lucene.log.v27: 16.00 B\n      lucene.log.v28: 16.00 B\n      lucene.log.v29: 5.01 kB\n      lucene.log.v3: 8.48 kB\n      lucene.log.v30: 1.18 kB\n      lucene.log.v31: 16.00 B\n      lucene.log.v32: 16.00 B\n      lucene.log.v33: 20.38 kB\n      lucene.log.v34: 2.00 kB\n      lucene.log.v35: 25.00 MB\n      lucene.log.v36: 23.39 MB\n      lucene.log.v37: 3.16 kB\n      lucene.log.v38: 9.95 kB\n      lucene.log.v39: 16.00 B\n      lucene.log.v4: 16.00 B\n      lucene.log.v40: 8.69 kB\n      lucene.log.v41: 2.31 kB\n      lucene.log.v42: 16.00 B\n      lucene.log.v43: 8.53 kB\n      lucene.log.v44: 16.47 kB\n      lucene.log.v45: 3.10 kB\n      lucene.log.v46: 16.00 B\n      lucene.log.v47: 16.00 B\n      lucene.log.v48: 16.00 B\n      lucene.log.v49: 16.00 B\n      lucene.log.v5: 16.00 B\n      lucene.log.v50: 16.00 B\n      lucene.log.v51: 16.00 B\n      lucene.log.v52: 16.00 B\n      lucene.log.v53: 16.00 B\n      lucene.log.v54: 16.00 B\n      lucene.log.v55: 16.00 B\n      lucene.log.v56: 16.00 B\n      lucene.log.v57: 16.00 B\n      lucene.log.v58: 16.00 B\n      lucene.log.v59: 16.00 B\n      lucene.log.v6: 4.76 kB\n      lucene.log.v60: 16.00 B\n      lucene.log.v61: 16.00 B\n      lucene.log.v62: 16.00 B\n      lucene.log.v63: 16.00 B\n      lucene.log.v64: 16.00 B\n      lucene.log.v65: 16.00 B\n      lucene.log.v66: 16.00 B\n      lucene.log.v67: 16.00 B\n      lucene.log.v68: 16.00 B\n      lucene.log.v69: 16.00 B\n      lucene.log.v7: 3.48 kB\n      lucene.log.v70: 16.00 B\n      lucene.log.v71: 16.00 B\n      lucene.log.v72: 16.00 B\n      lucene.log.v73: 16.00 B\n      lucene.log.v74: 16.00 B\n      lucene.log.v75: 16.00 B\n      lucene.log.v76: 16.00 B\n      lucene.log.v77: 16.00 B\n      lucene.log.v78: 16.00 B\n      lucene.log.v79: 16.00 B\n      lucene.log.v8: 9.95 kB\n      lucene.log.v80: 16.00 B\n      lucene.log.v81: 16.00 B\n      lucene.log.v82: 16.00 B\n      lucene.log.v83: 16.00 B\n      lucene.log.v84: 16.00 B\n      lucene.log.v85: 16.00 B\n      lucene.log.v86: 16.00 B\n      lucene.log.v87: 16.00 B\n      lucene.log.v88: 4.41 kB\n      lucene.log.v89: 16.00 B\n      lucene.log.v9: 1.45 kB\n      lucene.log.v90: 1.19 kB\n      lucene.log.v91: 846.00 B\n      lucene.log.v92: 16.00 B\n      lucene.log.v93: 16.00 B\n      lucene.log.v94: 16.00 B\n      lucene.log.v95: 16.00 B\n      lucene.log.v96: 16.00 B\n      lucene.log.v97: 21.12 kB\n      lucene.log.v98: 16.00 B\n      lucene.log.v99: 16.00 B\n    - Total: 136.63 MB\n    index.db: 4.78 kB\n    lock: 0.00 B\n    messages.log: 2.19 MB\n    neostore: 54.00 B\n    neostore.id: 9.00 B\n    neostore.nodestore.db: 722.27 kB\n    neostore.nodestore.db.id: 9.00 B\n    neostore.propertystore.db: 16.24 MB\n    neostore.propertystore.db.arrays: 128.00 B\n    neostore.propertystore.db.arrays.id: 9.00 B\n    neostore.propertystore.db.id: 9.00 B\n    neostore.propertystore.db.index: 1.05 kB\n    neostore.propertystore.db.index.id: 9.00 B\n    neostore.propertystore.db.index.keys: 4.60 kB\n    neostore.propertystore.db.index.keys.id: 9.00 B\n    neostore.propertystore.db.strings: 123.50 kB\n    neostore.propertystore.db.strings.id: 9.00 B\n    neostore.relationshipstore.db: 2.68 MB\n    neostore.relationshipstore.db.id: 9.00 B\n    neostore.relationshiptypestore.db: 370.00 B\n    neostore.relationshiptypestore.db.id: 9.00 B\n    neostore.relationshiptypestore.db.names: 2.93 kB\n    neostore.relationshiptypestore.db.names.id: 9.00 B\n    nioneo_logical.log.1: 16.00 B\n    nioneo_logical.log.active: 4.00 B\n    nioneo_logical.log.v0: 315.78 kB\n    nioneo_logical.log.v1: 28.83 kB\n    nioneo_logical.log.v10: 1.12 kB\n    nioneo_logical.log.v100: 16.00 B\n    nioneo_logical.log.v101: 16.00 B\n    nioneo_logical.log.v102: 16.00 B\n    nioneo_logical.log.v103: 16.00 B\n    nioneo_logical.log.v104: 16.00 B\n    nioneo_logical.log.v105: 16.00 B\n    nioneo_logical.log.v106: 16.00 B\n    nioneo_logical.log.v107: 16.00 B\n    nioneo_logical.log.v108: 16.00 B\n    nioneo_logical.log.v109: 16.00 B\n    nioneo_logical.log.v11: 16.00 B\n    nioneo_logical.log.v110: 16.00 B\n    nioneo_logical.log.v111: 16.00 B\n    nioneo_logical.log.v112: 16.00 B\n    nioneo_logical.log.v113: 16.00 B\n    nioneo_logical.log.v114: 16.00 B\n    nioneo_logical.log.v115: 16.00 B\n    nioneo_logical.log.v116: 177.12 kB\n    nioneo_logical.log.v117: 63.32 kB\n    nioneo_logical.log.v118: 152.15 kB\n    nioneo_logical.log.v119: 294.60 kB\n    nioneo_logical.log.v12: 16.00 B\n    nioneo_logical.log.v120: 2.34 kB\n    nioneo_logical.log.v121: 4.98 kB\n    nioneo_logical.log.v122: 431.54 kB\n    nioneo_logical.log.v123: 326.95 kB\n    nioneo_logical.log.v124: 543.86 kB\n    nioneo_logical.log.v125: 257.30 kB\n    nioneo_logical.log.v126: 161.01 kB\n    nioneo_logical.log.v127: 2.61 kB\n    nioneo_logical.log.v128: 377.00 B\n    nioneo_logical.log.v129: 39.13 kB\n    nioneo_logical.log.v13: 16.00 B\n    nioneo_logical.log.v130: 106.05 kB\n    nioneo_logical.log.v131: 40.08 kB\n    nioneo_logical.log.v132: 377.00 B\n    nioneo_logical.log.v133: 2.96 kB\n    nioneo_logical.log.v14: 16.00 B\n    nioneo_logical.log.v15: 16.00 B\n    nioneo_logical.log.v16: 16.00 B\n    nioneo_logical.log.v17: 16.00 B\n    nioneo_logical.log.v18: 16.00 B\n    nioneo_logical.log.v19: 16.00 B\n    nioneo_logical.log.v2: 62.88 kB\n    nioneo_logical.log.v20: 16.00 B\n    nioneo_logical.log.v21: 16.00 B\n    nioneo_logical.log.v22: 16.00 B\n    nioneo_logical.log.v23: 16.00 B\n    nioneo_logical.log.v24: 16.00 B\n    nioneo_logical.log.v25: 16.00 B\n    nioneo_logical.log.v26: 16.00 B\n    nioneo_logical.log.v27: 16.00 B\n    nioneo_logical.log.v28: 16.00 B\n    nioneo_logical.log.v29: 16.00 B\n    nioneo_logical.log.v3: 33.12 kB\n    nioneo_logical.log.v30: 16.00 B\n    nioneo_logical.log.v31: 16.00 B\n    nioneo_logical.log.v32: 16.00 B\n    nioneo_logical.log.v33: 16.00 B\n    nioneo_logical.log.v34: 16.00 B\n    nioneo_logical.log.v35: 16.00 B\n    nioneo_logical.log.v36: 16.00 B\n    nioneo_logical.log.v37: 16.00 B\n    nioneo_logical.log.v38: 16.00 B\n    nioneo_logical.log.v39: 16.00 B\n    nioneo_logical.log.v4: 16.00 B\n    nioneo_logical.log.v40: 16.00 B\n    nioneo_logical.log.v41: 16.00 B\n    nioneo_logical.log.v42: 16.00 B\n    nioneo_logical.log.v43: 16.00 B\n    nioneo_logical.log.v44: 16.00 B\n    nioneo_logical.log.v45: 16.00 B\n    nioneo_logical.log.v46: 16.00 B\n    nioneo_logical.log.v47: 16.00 B\n    nioneo_logical.log.v48: 16.00 B\n    nioneo_logical.log.v49: 16.00 B\n    nioneo_logical.log.v5: 189.54 kB\n    nioneo_logical.log.v50: 681.91 kB\n    nioneo_logical.log.v51: 8.10 kB\n    nioneo_logical.log.v52: 96.52 kB\n    nioneo_logical.log.v53: 42.47 kB\n    nioneo_logical.log.v54: 6.99 kB\n    nioneo_logical.log.v55: 8.71 kB\n    nioneo_logical.log.v56: 16.00 B\n    nioneo_logical.log.v57: 108.72 kB\n    nioneo_logical.log.v58: 10.73 kB\n    nioneo_logical.log.v59: 973.30 kB\n    nioneo_logical.log.v6: 482.50 kB\n    nioneo_logical.log.v60: 41.03 kB\n    nioneo_logical.log.v61: 3.80 kB\n    nioneo_logical.log.v62: 137.38 kB\n    nioneo_logical.log.v63: 238.45 kB\n    nioneo_logical.log.v64: 16.00 B\n    nioneo_logical.log.v65: 7.90 kB\n    nioneo_logical.log.v66: 3.85 kB\n    nioneo_logical.log.v67: 16.00 B\n    nioneo_logical.log.v68: 16.00 B\n    nioneo_logical.log.v69: 16.00 B\n    nioneo_logical.log.v7: 203.73 kB\n    nioneo_logical.log.v70: 1.07 kB\n    nioneo_logical.log.v71: 16.00 B\n    nioneo_logical.log.v72: 4.70 kB\n    nioneo_logical.log.v73: 32.02 kB\n    nioneo_logical.log.v74: 6.30 kB\n    nioneo_logical.log.v75: 16.00 B\n    nioneo_logical.log.v76: 92.82 kB\n    nioneo_logical.log.v77: 106.11 kB\n    nioneo_logical.log.v78: 52.10 kB\n    nioneo_logical.log.v79: 214.19 kB\n    nioneo_logical.log.v8: 45.11 kB\n    nioneo_logical.log.v80: 241.74 kB\n    nioneo_logical.log.v81: 33.25 kB\n    nioneo_logical.log.v82: 15.63 kB\n    nioneo_logical.log.v83: 213.12 kB\n    nioneo_logical.log.v84: 151.18 kB\n    nioneo_logical.log.v85: 53.06 kB\n    nioneo_logical.log.v86: 879.00 B\n    nioneo_logical.log.v87: 193.50 kB\n    nioneo_logical.log.v88: 16.00 B\n    nioneo_logical.log.v89: 16.00 B\n    nioneo_logical.log.v9: 16.00 B\n    nioneo_logical.log.v90: 16.00 B\n    nioneo_logical.log.v91: 16.00 B\n    nioneo_logical.log.v92: 16.00 B\n    nioneo_logical.log.v93: 32.18 kB\n    nioneo_logical.log.v94: 16.00 B\n    nioneo_logical.log.v95: 16.00 B\n    nioneo_logical.log.v96: 16.00 B\n    nioneo_logical.log.v97: 16.00 B\n    nioneo_logical.log.v98: 16.00 B\n    nioneo_logical.log.v99: 16.00 B\n    tm_tx_log.1: 28.68 kB\n    tm_tx_log.2: 0.00 B\n    upgrade:\n    - Total: 0.00 B\n2012-02-07 05:30:41.683+0000: --- STARTUP diagnostics END ---\n2012-02-07 05:30:41.714+0000: Extension org.neo4j.kernel.KernelExtension[kernel jmx] loaded ok\n2012-02-07 05:30:41.714+0000: Extension org.neo4j.kernel.KernelExtension[dummy] loaded ok\n2012-02-07 05:30:41.714+0000: Extension org.neo4j.kernel.KernelExtension[other dummy] loaded ok\n2012-02-07 05:30:43.027+0000: Extension org.neo4j.kernel.KernelExtension[shell] loaded ok\n2012-02-07 05:30:43.027+0000: Extension org.neo4j.kernel.KernelExtension[kernel udc] loaded ok\n2012-02-07 05:30:43.042+0000: --- SERVER STARTUP START ---\n2012-02-07 05:30:43.042+0000: --- STARTUP diagnostics for org.neo4j.server.configuration.Configurator START ---\n2012-02-07 05:30:43.042+0000: Server configuration:\n    org.neo4j.server.database.location = F:/DBFiles/\n    org.neo4j.server.webserver.address = 0.0.0.0\n    org.neo4j.server.webserver.http.enabled = true\n    org.neo4j.server.webserver.port = 20001\n    org.neo4j.server.webserver.https.enabled = true\n    org.neo4j.server.webserver.https.port = 7473\n    org.neo4j.server.webserver.https.cert.location = conf/ssl/snakeoil.cert\n    org.neo4j.server.webserver.https.key.location = conf/ssl/snakeoil.key\n    org.neo4j.server.webserver.https.keystore.location = system/keystore\n    org.neo4j.server.webadmin.rrdb.location = data/rrd\n    org.neo4j.server.db.tuning.properties = conf/neo4j.properties\n    org.neo4j.server.webadmin.management.uri = /db/manage/\n    org.neo4j.server.webadmin.data.uri = /db/data/\n2012-02-07 05:30:43.042+0000: --- STARTUP diagnostics for org.neo4j.server.configuration.Configurator END ---\n2012-02-07 05:30:43.089+0000: Mounted discovery module (org.neo4j.server.rest.discovery) at: /\n2012-02-07 05:30:43.167+0000: Loaded server plugin \"CypherPlugin\" (org.neo4j.server.plugin.cypher.CypherPlugin)\n2012-02-07 05:30:43.167+0000:   GraphDatabaseService.execute_query: execute a query\n2012-02-07 05:30:43.167+0000: Loaded server plugin \"GremlinPlugin\" (org.neo4j.server.plugin.gremlin.GremlinPlugin)\n2012-02-07 05:30:43.167+0000:   GraphDatabaseService.execute_script: execute a Gremlin script with 'g' set to the Neo4jGraph and 'results' containing the results. Only results of one object type is supported.\n2012-02-07 05:30:43.183+0000: Mounted REST API at: /db/data/\n2012-02-07 05:30:43.183+0000: Mounted management API at: /db/manage/\n2012-02-07 05:30:43.308+0000: Mounted webadmin at: /webadmin\n2012-02-07 05:30:45.792+0000: Server started on: http://0.0.0.0:20001/\n2012-02-07 05:30:45.792+0000: --- SERVER STARTUP END ---\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/165", "title": "Neo4j Server not starting on latest OS X 10.6 java update", "closed": "2013-03-04 14:00:40", "commitsDetails": [], "commits": {}, "ttf": 112.00027777777778, "created": "2012-11-12 13:24:40", "user": "lassewesth", "body": "@peterneubauer: 'See https://discussions.apple.com/message/17611657#17611657 for an explaination of the issue.\n\nWe need to find a workaround :/'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/163", "title": "Accessing node properties with batch inserter", "closed": "2013-03-04 14:01:21", "commitsDetails": [], "commits": {}, "ttf": 112.00027777777778, "created": "2012-11-12 13:24:38", "user": "lassewesth", "body": "@pauljackson: 'Using the graphDatabaseService that is returned from a BatchInserterImpl instance. The properties returned are empty. Should contain the property that was just added. This is Neo4J 1.5 GA.\n\n```\nBatchInserter batchInserter = new BatchInserterImpl(storeDir);\nGraphDatabaseService graph = batchInserter.getGraphDbService();\nNode node = graph.createNode();\nnode.setProperty(\"MyKey\", \"MyValue\");\nlong id = node.getId();\nMap<String,Object> properties = batchInserter.getNodeProperties(id);\n```\n\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/162", "title": "Cannot connect using neo4j-shell", "closed": "2013-03-04 14:02:13", "commitsDetails": [], "commits": {}, "ttf": 112.00027777777778, "created": "2012-11-12 13:24:37", "user": "lassewesth", "body": "@ceefour: 'neo4j version: 1.6.\n\n```\nceefour@annafi:/$ neo4j-shell -host localhost -v\nNOTE: Remote Neo4j graph database service 'shell' at port 1337\n[Reconnected to server]\nERROR (-v for expanded information):\n        Connection refused\njava.lang.RuntimeException: java.rmi.ConnectException: Connection refused to host: 67.215.65.132; nested exception is:\n        java.net.ConnectException: Connection timed out\n        at org.neo4j.shell.impl.AbstractClient.possiblyGrabDefaultVariableFromServer(AbstractClient.java:244)\n        at org.neo4j.shell.impl.AbstractClient.init(AbstractClient.java:208)\n        at org.neo4j.shell.impl.AbstractClient.grabPrompt(AbstractClient.java:80)\n        at org.neo4j.shell.StartClient.grabPromptOrJustExecuteCommand(StartClient.java:364)\n        at org.neo4j.shell.StartClient.startRemote(StartClient.java:346)\n        at org.neo4j.shell.StartClient.start(StartClient.java:169)\n        at org.neo4j.shell.StartClient.main(StartClient.java:108)\nCaused by: java.rmi.ConnectException: Connection refused to host: 67.215.65.132; nested exception is:\n        java.net.ConnectException: Connection timed out\n        at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:619)\n        at sun.rmi.transport.tcp.TCPChannel.createConnection(TCPChannel.java:216)\n        at sun.rmi.transport.tcp.TCPChannel.newConnection(TCPChannel.java:202)\n        at sun.rmi.server.UnicastRef.invoke(UnicastRef.java:128)\n        at java.rmi.server.RemoteObjectInvocationHandler.invokeRemoteMethod(RemoteObjectInvocationHandler.java:194)\n        at java.rmi.server.RemoteObjectInvocationHandler.invoke(RemoteObjectInvocationHandler.java:148)\n        at $Proxy2.getProperty(Unknown Source)\n        at org.neo4j.shell.impl.AbstractClient.possiblyGrabDefaultVariableFromServer(AbstractClient.java:237)\n        ... 6 more\nCaused by: java.net.ConnectException: Connection timed out\n        at java.net.PlainSocketImpl.socketConnect(Native Method)\n        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:327)\n        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:193)\n        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:180)\n        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:384)\n        at java.net.Socket.connect(Socket.java:546)\n        at java.net.Socket.connect(Socket.java:495)\n        at java.net.Socket.<init>(Socket.java:392)\n        at java.net.Socket.<init>(Socket.java:206)\n        at sun.rmi.transport.proxy.RMIDirectSocketFactory.createSocket(RMIDirectSocketFactory.java:40)\n        at sun.rmi.transport.proxy.RMIMasterSocketFactory.createSocket(RMIMasterSocketFactory.java:146)\n        at sun.rmi.transport.tcp.TCPEndpoint.newSocket(TCPEndpoint.java:613)\n        ... 13 more\n\n-host      Domain name or IP of host to connect to (default: localhost)\n-port      Port of host to connect to (default: 1337)\n-name      RMI name, i.e. rmi://<host>:<port>/<name> (default: shell)\n-pid       Process ID to connect to\n-c         Command line to execute. After executing it the shell exits\n-readonly  Connect in readonly mode\n-path      Points to a neo4j db path so that a local server can be started there\n-config    Points to a config file when starting a local server\n\nExample arguments for remote:\n        -port 1337\n        -host 192.168.1.234 -port 1337 -name shell\n        -host localhost -readonly\n        ...or no arguments for default values\nExample arguments for local:\n        -path /path/to/db\n        -path /path/to/db -config /path/to/neo4j.config\n        -path /path/to/db -readonly\n```\n\nThe above error needs about 5 minutes to show up, all the while it was blank. (neo4j-shell should output connection progress/logging etc. in order to have better diagnostics info)\n\nAnd why connect to \"67.215.65.132\" ??? I specified `-host localhost` on the command line.\n\nHowever I can access webadmin via browser successfully.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/161", "title": "neo4j lucene problems with neo4j-utils", "closed": "2013-03-04 14:03:29", "commitsDetails": [], "commits": {}, "ttf": 112.00027777777778, "created": "2012-11-12 13:24:36", "user": "lassewesth", "body": "@Daidalos: 'Hi,\n\nthere is an bug, if you use neo4j-utils - if not, everything is fine. I need the NodeWrapper from the util package. I did'nt found any other solution than this is a bug. Everyone in the internet had the same problems and often no solution.\n\nThis are dependancies.\n\n```\n<dependency>\n  <groupId>org.neo4j</groupId>\n  <artifactId>neo4j-kernel</artifactId>\n  <version>1.6.1</version>\n</dependency>  \n<dependency>\n  <groupId>org.neo4j</groupId>\n  <artifactId>neo4j-lucene-index</artifactId>\n  <version>1.6.1</version>\n</dependency> \n<dependency>\n<groupId>org.neo4j</groupId>\n<artifactId>neo4j-utils</artifactId>\n<version>1.3-1.3.M01</version>\n```\n\n</dependency>\n\nIf you leave the neo4j-utils it works fine.\n\nHere an demo code - it from the neo4j startup pages.\n\nimport org.neo4j.graphdb.Direction;\nimport org.neo4j.graphdb.GraphDatabaseService;\nimport org.neo4j.graphdb.Node;\nimport org.neo4j.graphdb.Relationship;\nimport org.neo4j.graphdb.RelationshipType;\nimport org.neo4j.graphdb.Transaction;\nimport org.neo4j.graphdb.index.Index;\nimport org.neo4j.graphdb.index.IndexManager;\nimport org.neo4j.kernel.EmbeddedGraphDatabase;\n\npublic class Neo4jTest {\n    private static final String DB_PATH = \"neo4j-store\";\n    private static final String USERNAME_KEY = \"username\";\n    private static GraphDatabaseService graphDb;\n    private static Index<Node> nodeIndex;\n\n```\n// START SNIPPET: createRelTypes\nprivate static enum RelTypes implements RelationshipType\n{\n    USERS_REFERENCE,\n    USER\n}\n// END SNIPPET: createRelTypes\n\npublic static void main( final String[] args )\n{\n    // START SNIPPET: startDb\n    graphDb = new EmbeddedGraphDatabase( DB_PATH );\n    final IndexManager index = graphDb.index();\n    nodeIndex = index.forNodes( \"nodes\" );\n    registerShutdownHook();\n    // END SNIPPET: startDb\n\n    // START SNIPPET: addUsers\n    Transaction tx = graphDb.beginTx();\n    try\n    {\n        // Create users sub reference node (see design guidelines on\n        // http://wiki.neo4j.org/ )\n        Node usersReferenceNode = graphDb.createNode();\n        graphDb.getReferenceNode().createRelationshipTo(\n                usersReferenceNode, RelTypes.USERS_REFERENCE );\n        // Create some users and index their names with the IndexService\n        for ( int id = 0; id < 100; id++ )\n        {\n            Node userNode = createAndIndexUser( idToUserName( id ) );\n            usersReferenceNode.createRelationshipTo( userNode,\n                    RelTypes.USER );\n        }\n        // END SNIPPET: addUsers\n        System.out.println( \"Users created\" );\n\n        // Find a user through the search index\n        // START SNIPPET: findUser\n        int idToFind = 45;\n        Node foundUser = nodeIndex.get( USERNAME_KEY,\n                idToUserName( idToFind ) ).getSingle();\n        System.out.println( \"The username of user \" + idToFind + \" is \"\n                + foundUser.getProperty( USERNAME_KEY ) );\n        // END SNIPPET: findUser\n\n        // Delete the persons and remove them from the index\n        for ( Relationship relationship : usersReferenceNode.getRelationships(\n                RelTypes.USER, Direction.OUTGOING ) )\n        {\n            Node user = relationship.getEndNode();\n            nodeIndex.remove(  user, USERNAME_KEY,\n                    user.getProperty( USERNAME_KEY ) );\n            user.delete();\n            relationship.delete();\n        }\n        usersReferenceNode.getSingleRelationship( RelTypes.USERS_REFERENCE,\n                Direction.INCOMING ).delete();\n        usersReferenceNode.delete();\n        tx.success();\n    }\n    finally\n    {\n        tx.finish();\n    }\n    System.out.println( \"Shutting down database ...\" );\n    shutdown();\n}\n\nprivate static void shutdown()\n{\n    graphDb.shutdown();\n}\n\n// START SNIPPET: helperMethods\nprivate static String idToUserName( final int id )\n{\n    return \"user\" + id + \"@neo4j.org\";\n}\n\nprivate static Node createAndIndexUser( final String username )\n{\n    Node node = graphDb.createNode();\n    node.setProperty( USERNAME_KEY, username );\n    nodeIndex.add( node, USERNAME_KEY, username );\n    return node;\n}\n// END SNIPPET: helperMethods\n\nprivate static void registerShutdownHook()\n{\n    // Registers a shutdown hook for the Neo4j and index service instances\n    // so that it shuts down nicely when the VM exits (even if you\n    // \"Ctrl-C\" the running example before it's completed)\n    Runtime.getRuntime().addShutdownHook( new Thread()\n    {\n        @Override\n        public void run()\n        {\n            shutdown();\n        }\n    } );\n}\n```\n\n}\n\nErrorMessage\n\norg.neo4j.graphdb.TransactionFailureException: Could not create data source lucene[lucene]\n    at org.neo4j.kernel.impl.transaction.TxModule.registerDataSource(TxModule.java:189)\n    at org.neo4j.kernel.GraphDbInstance.registerLuceneDataSource(GraphDbInstance.java:221)\n    at org.neo4j.kernel.GraphDbInstance.start(GraphDbInstance.java:117)\n    at org.neo4j.kernel.EmbeddedGraphDbImpl.<init>(EmbeddedGraphDbImpl.java:190)\n    at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:77)\n    at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:61)\n    at neo4jtest.org.tingo.test.Neo4jTest.main(Neo4jTest.java:30)\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at org.neo4j.kernel.impl.transaction.XaDataSourceManager.create(XaDataSourceManager.java:77)\n    at org.neo4j.kernel.impl.transaction.TxModule.registerDataSource(TxModule.java:183)\n    ... 6 more\nCaused by: java.lang.NoSuchMethodError: org.neo4j.kernel.impl.transaction.xaframework.XaContainer.create(Lorg/neo4j/kernel/impl/transaction/xaframework/XaDataSource;Ljava/lang/String;Lorg/neo4j/kernel/impl/transaction/xaframework/XaCommandFactory;Lorg/neo4j/kernel/impl/transaction/xaframework/XaTransactionFactory;Ljava/util/Map;)Lorg/neo4j/kernel/impl/transaction/xaframework/XaContainer;\n    at org.neo4j.index.lucene.LuceneDataSource.<init>(LuceneDataSource.java:128)\n    ... 12 more\nException in thread \"main\" org.neo4j.graphdb.TransactionFailureException: Could not create data source lucene[lucene]\n    at org.neo4j.kernel.impl.transaction.TxModule.registerDataSource(TxModule.java:189)\n    at org.neo4j.kernel.GraphDbInstance.registerLuceneDataSource(GraphDbInstance.java:221)\n    at org.neo4j.kernel.GraphDbInstance.start(GraphDbInstance.java:117)\n    at org.neo4j.kernel.EmbeddedGraphDbImpl.<init>(EmbeddedGraphDbImpl.java:190)\n    at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:77)\n    at org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:61)\n    at neo4jtest.org.tingo.test.Neo4jTest.main(Neo4jTest.java:30)\nCaused by: java.lang.reflect.InvocationTargetException\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:39)\n    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:27)\n    at java.lang.reflect.Constructor.newInstance(Constructor.java:513)\n    at org.neo4j.kernel.impl.transaction.XaDataSourceManager.create(XaDataSourceManager.java:77)\n    at org.neo4j.kernel.impl.transaction.TxModule.registerDataSource(TxModule.java:183)\n    ... 6 more\nCaused by: java.lang.NoSuchMethodError: org.neo4j.kernel.impl.transaction.xaframework.XaContainer.create(Lorg/neo4j/kernel/impl/transaction/xaframework/XaDataSource;Ljava/lang/String;Lorg/neo4j/kernel/impl/transaction/xaframework/XaCommandFactory;Lorg/neo4j/kernel/impl/transaction/xaframework/XaTransactionFactory;Ljava/util/Map;)Lorg/neo4j/kernel/impl/transaction/xaframework/XaContainer;\n    at org.neo4j.index.lucene.LuceneDataSource.<init>(LuceneDataSource.java:128)\n    ... 12 more\n'\n"}, {"labels": ["bug", "operability"], "filteredCommits": ["b1a9aae12e94357feca35c22670b1cfaa37ac6d0"], "url": "https://github.com/neo4j/neo4j/issues/159", "gitStatsSummary": {"insertions": 1, "gitFilesChange": 1, "lines": 1, "deletions": 0}, "numCommits": 1, "commits": {"b1a9aae12e94357feca35c22670b1cfaa37ac6d0": {"commitUser": "chrisvest", "commitGHEventType": "closed"}}, "ttf": 1124.0002777777777, "user": "lassewesth", "changesInPackagesGIT": ["packaging/standalone/src/main/distribution/shell-scripts/bin/neo4j"], "body": "@anderskristian: 'Problems with the operation of the server may occur. Please refer to the Neo4j manual regarding lifting this limitation.\n\nI have tried to \"lifting\" this limitation on my OSX 10.7.3.\nIn the beginning I found no solution to the problem.\n\nBut then I found a tool to set the limit to 100 open files\nulimit -S -n 100\n\nThen I  Restart neo4j and got warning.... Detected a limit of 100 for maximum open files....\n\nBut it still worked..\nAnd the number of open files is\nsudo lsof | grep REG |grep -c \"PID\"\nThat is over 200\n(Replace PID with the pid from bin/neo4j info)\n\nSo my final conclusion is that the warning is wrong.\nReading: http://krypted.com/mac-os-x/maximum-files-in-mac-os-x/ says that OSX by default has over 10.000 in this value.\n\nThis also explains why my neo4j works. \n\nConclusion: The warning is not necessary.'\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Detected a limit of 256 for maximum open files, while a minimum value of 40000 is recommended", "statsSkippedReason": "", "closed": "2015-12-11 15:21:01", "commitsDetails": [{"commitUser": "chrisvest", "commitDateTime": "2015-12-09 10:38:39", "commitHash": "b1a9aae12e94357feca35c22670b1cfaa37ac6d0", "commitParents": ["15da4c5bc0d9c4c4b2cc5c29b60e078d2dba53fd"], "commitGHEventType": "closed", "nameRev": "b1a9aae12e94357feca35c22670b1cfaa37ac6d0 tags/3.0.0-M02~2^2~4^2", "commitGitStats": [{"insertions": 1, "lines": 1, "filePath": "packaging/standalone/src/main/distribution/shell-scripts/bin/neo4j", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Don't show a file limit warning on OS X when running `neo4j console`\n\nWe generally don't want to detect and warn about file limits on OS X because `ulimit -n` reports an incorrect value.\nThe problem was that `console` did not detect the operating system before checking for limits, so it ended up showing the file limits warning on OS X.\n\nThis fixes #159\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-12-09 10:36:38"}], "created": "2012-11-12 13:24:34"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/156", "title": "CentOS 6.2 failed install with Neo4j Server 1.6.1 Community", "closed": "2013-03-04 14:05:49", "commitsDetails": [], "commits": {}, "ttf": 112.00027777777778, "created": "2012-11-12 13:24:29", "user": "lassewesth", "body": "@piratadelfuturo: 'When you try to install neo4j in CentOs or any RHEL based distro you get this:\n\n[root@dyn106 bin]# ./neo4j install\nGraph-like power should be handled carefully. What user should run Neo4j? [neo4j] \nUser \"neo4j\" does not yet exist. Shall I create the account for you? [Yn]Y\nCreated user \"neo4j\".\n./neo4j: line 349: update-rc.d: command not found\n[root@dyn106 bin]# ./neo4j start\nWARNING: Detected a limit of 1024 for maximum open files, while a minimum value of 40000 is recommended.\nWARNING: Problems with the operation of the server may occur. Please refer to the Neo4j manual regarding lifting this limitation.\nStarting Neo4j Server...Exception in thread \"main\" java.lang.NoClassDefFoundError: org/neo4j/server/storemigration/PreStartupStoreUpgrader\nCaused by: java.lang.ClassNotFoundException: org.neo4j.server.storemigration.PreStartupStoreUpgrader\n    at java.net.URLClassLoader$1.run(Unknown Source)\n    at java.security.AccessController.doPrivileged(Native Method)\n    at java.net.URLClassLoader.findClass(Unknown Source)\n    at java.lang.ClassLoader.loadClass(Unknown Source)\n    at sun.misc.Launcher$AppClassLoader.loadClass(Unknown Source)\n    at java.lang.ClassLoader.loadClass(Unknown Source)\nCould not find the main class: org.neo4j.server.storemigration.PreStartupStoreUpgrader.  Program will exit.\n\nThen if you remove the neo4j folder and create a new installation, you can start the server again but if the machine gets shot down suddenly and then you try to restart the server you can't and then you get this error:\n\n[root@dyn098 bin]# ./neo4j start\nStarting Neo4j Server...Bad level value for property: org.neo4j.server.level\n[root@dyn098 bin]# \n\nin the log:\nFeb 27, 2012 10:21:20 AM org.neo4j.server.logging.Logger log\nSEVERE: \nThrowable occurred: java.lang.IllegalArgumentException\n    at sun.nio.ch.FileChannelImpl.position(FileChannelImpl.java:278)\n    at org.neo4j.kernel.impl.storemigration.CurrentDatabase.storeFilesAtCurrentVersion(CurrentDatabase.java:75)\n    at org.neo4j.server.storemigration.PreStartupStoreUpgrader.run(PreStartupStoreUpgrader.java:79)\n    at org.neo4j.server.storemigration.PreStartupStoreUpgrader.main(PreStartupStoreUpgrader.java:52)\n\n'\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/154", "title": "Cypher: Stating a pattern twice in the match clause doesn't work", "closed": "2013-03-04 14:06:36", "commitsDetails": [], "commits": {}, "ttf": 112.00027777777778, "created": "2012-11-12 13:24:27", "user": "lassewesth", "body": "@systay: 'This query should work:\n\nSTART x=node(0)\nMATCH x-->y<--x\nRETURN x\n\nIt's repeating x-->y twice, which should work. No matches are found instead.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/153", "title": "Adding a ValueContext to an Index makes it impossible to search for that value", "closed": "2014-11-11 22:32:21", "commitsDetails": [], "commits": {}, "ttf": 729.0002777777778, "created": "2012-11-12 13:24:26", "user": "lassewesth", "body": "@Glamdring: '(Assume proper transaction handling):\n\n```\nNode node = db.createNode();\nnode.setProperty(\"foo\", 12345);\nnode.setProperty(\"bar\", \"baz\");\ndb.index().forNodes(\"Person\").add(node, \"foo\", ValueContext.numeric(12345));\n```\n\nThis piece of code adds the netry to the index and when the index is queried for `*:*` the entry is found. However, you can't search for \"foo:12345\". It returns no results. Neither from a \"index.query(..)\", nor from index.get(key, value), nor from the webadmin;\n\nIf I only use:\n\n```\ndb.index().forNodes(\"Person\").add(node, \"foo\", 12345);\n```\n\nThen everything works properly.\n\nUnfortunately, spring-data-neo4j is using ValueContext, so practically the indexing functionality does not work.\n\nVersion: 1.6.1, embedded.'\n"}, {"labels": ["bug", "cypher", "docs"], "url": "https://github.com/neo4j/neo4j/issues/152", "title": "Document Cypher string concat", "closed": "2013-10-01 09:50:16", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:24:26", "user": "lassewesth", "body": "@peterneubauer: ''\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/149", "title": "Gremlin plugin failures after server restart", "closed": "2013-03-04 13:01:26", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 13:24:22", "user": "lassewesth", "body": "@lphuberdeau: 'I am using Neo4j over REST. Everything normally works fine, but when the server has just started, I always get errors like this one when executing a Gremlin query.\n\nAn error was detected: javax.script.ScriptException: \n\n```\norg.codehaus.groovy.runtime.metaclass.MethodSelectionException: Could not find which method count() to invoke from this list:\n    public java.lang.Number java.util.Collection#count(groovy.lang.Closure)\n    public java.lang.Number java.util.Collection#count(java.lang.Object)\n```\n\nIt eventually goes away after some amount of time, but I could never find the cause of it.\n\nThe gremlin shell from the web admin works fine and all of my tests that do not involve queries on the REST interface work just fine.'\n"}, {"labels": ["bug", "build"], "url": "https://github.com/neo4j/neo4j/issues/147", "title": "Compile fails using OpenJDK 6.b23", "closed": "2013-03-04 12:59:30", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 13:24:21", "user": "lassewesth", "body": "@nawroth: 'Environment:\n\nApache Maven 3.0.3 (r1075438; 2011-02-28 18:31:09+0100)\nMaven home: /usr/share/apache-maven-3.0.3\nJava version: 1.6.0_23, vendor: Sun Microsystems Inc.\nJava home: /usr/lib/jvm/java-6-openjdk/jre\nDefault locale: sv_SE, platform encoding: UTF-8\nOS name: \"linux\", version: \"3.0.0-16-generic\", arch: \"amd64\", family: \"unix\"\n\njava version \"1.6.0_23\"\nOpenJDK Runtime Environment (IcedTea6 1.11pre) (6b23~pre11-0ubuntu1.11.10.2)\nOpenJDK 64-Bit Server VM (build 20.0-b11, mixed mode)\n\nCompiling kernel:\nkernel: Compilation failure: Compilation failure:\n[ERROR] Specifications.java:[54,15] cannot find symbol\n[ERROR] symbol  : method and(java.lang.Iterable<java.lang.Object>)\n[ERROR] location: class org.neo4j.helpers.Specifications\n[ERROR] Specifications.java:[64,15] cannot find symbol\n[ERROR] symbol  : method or(java.lang.Iterable<java.lang.Object>)\n[ERROR] location: class org.neo4j.helpers.Specifications\n[ERROR] Specifications.java:[74,17] incompatible types\n[ERROR] found   : org.neo4j.helpers.Specification<java.lang.Object>\n[ERROR] required: org.neo4j.helpers.Specification<T>\n[ERROR] Specifications.java:[150,33] cannot find symbol\n[ERROR] symbol  : method or(java.lang.Iterable<java.lang.Object>)\n[ERROR] location: class org.neo4j.helpers.Specifications\n[ERROR] Specifications.java:[178,33] cannot find symbol\n[ERROR] symbol  : method and(java.lang.Iterable<java.lang.Object>)\n[ERROR] location: class org.neo4j.helpers.Specifications\n[ERROR] Iterables.java:[342,63] <FROM,TO>map(org.neo4j.helpers.Function<? super FROM,? extends TO>,java.lang.Iterable<FROM>) in org.neo4j.helpers.collection.Iterables cannot be applied to (<anonymous org.neo4j.helpers.Function<java.lang.Iterable<T>,java.util.Iterator<T>>>,java.lang.Iterable<java.lang.Object>) \n\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/146", "title": "Final expanders should not accept modifications", "closed": "2013-10-01 09:55:51", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:24:20", "user": "lassewesth", "body": "@systay: 'If I create an expander like this:\nExpander expander = Traversal.expanderForAllTypes(Direction.OUTGOING);\n\nThis expander does not accept any changes - doing expander.add(relType) does nothing. Instead of silently dropping the changes, a helpful exception telling that no changes are accepted would be nicer.\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/144", "title": "Relationship indexes couple of times slower than node indexes?", "closed": "2013-10-01 09:56:00", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:24:18", "user": "lassewesth", "body": "@tinwelint: 'From mail with subject: \"[Neo4j] Adding relations to relationshipindexing seems slow\" 20 Jan\n\nCompare:\n\nRelationshipIndex myRelIndex;\n\nvoid addRelationIfNotExists(Node aNode1, Node aNode2, String aRelType)\n{\n  if (myRelIndex.get(\"type\", aRelType, node1, node2).size() == 0) {\n     Relationship rel = node1.createRelationshipTo(node2, aRelType);\n     myRelIndex.add(rel, \"type\", aRelType.toString());\n  }\n}\n\nto \n\nIndex<Node> relationIndexDummy;\n\nvoid addRelationIfNotExists(Node aNode1, Node aNode2, String aRelType)\n{\n  String relName = aRelType.toString() + \"_\" +\nnode1.getProperty(\"name\") + \"_\" + node2.getProperty(\"name\");\n  if (relationIndexDummy.get(\"exists\", relName).size() == 0) {\n     Relationship rel = node1.createRelationshipTo(node2, aRelType);\n     relationIndexDummy.add(node1, \"exists\", relName);\n  }\n}'\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/142", "title": "Cypher throws ClassCastException when applying a regex to a boolean", "closed": "2014-11-11 22:30:11", "commitsDetails": [], "commits": {}, "ttf": 729.0002777777778, "created": "2012-11-12 13:24:17", "user": "lassewesth", "body": "@ractive: 'When trying to match a boolean value against a regex, a ClassCastException is thrown. When comparing a boolean to a string, it just evaluates to false, but does not throw.\n\n``` java\n@Test\npublic void regexWithBoolean() {\n    GraphDatabaseService db = neo4j.getGraphDatabaseService();\n\n    Node d = db.createNode();\n    d.setProperty(\"boolean\", true);\n    db.getReferenceNode().createRelationshipTo(d, DynamicRelationshipType.withName(\"TEST\"));\n\n    // A string comparison vs. a boolean value is ok, but...\n    String query = \"START ref=node(0) MATCH ref-[:TEST]->d WHERE d.boolean = 'foobar' RETURN d\";\n\n    ExecutionEngine engine = new ExecutionEngine(db);\n    ExecutionResult result = engine.execute(query);\n    System.out.println(result);\n\n    // applying a regex vs. a boolean throws\n    //java.lang.ClassCastException: java.lang.Boolean cannot be cast to java.lang.String\n    query = \"START ref=node(0) MATCH ref-[:TEST]->d WHERE d.boolean =~ /.*/ RETURN d\";\n\n    engine = new ExecutionEngine(db);\n    result = engine.execute(query);\n    System.out.println(result);\n}\n```\n\n```\njava.lang.ClassCastException: java.lang.Boolean cannot be cast to java.lang.String\n    at org.neo4j.cypher.commands.RegularExpression.isMatch(Predicate.scala:165)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher$$anonfun$isMatchSoFar$1.apply(PatternMatcher.scala:156)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher$$anonfun$isMatchSoFar$1.apply(PatternMatcher.scala:156)\n    at scala.collection.LinearSeqOptimized$class.forall(LinearSeqOptimized.scala:69)\n    at scala.collection.immutable.List.forall(List.scala:45)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher.isMatchSoFar(PatternMatcher.scala:156)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher.traverseNextSpecificNode(PatternMatcher.scala:50)\n    at org.neo4j.cypher.internal.pipes.matching.DoubleOptionalPatternMatcher.traverseNextSpecificNode(DoubleOptionalPatternMatcher.scala:39)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher.traverseNode(PatternMatcher.scala:71)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher.traverseNextNodeFromRelationship(PatternMatcher.scala:92)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher$$anonfun$4.apply(PatternMatcher.scala:138)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher$$anonfun$4.apply(PatternMatcher.scala:138)\n    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)\n    at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\n    at scala.collection.immutable.List.foreach(List.scala:45)\n    at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)\n    at scala.collection.immutable.List.map(List.scala:45)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher.traverseRelationship(PatternMatcher.scala:138)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher.traverseNextSpecificNode(PatternMatcher.scala:59)\n    at org.neo4j.cypher.internal.pipes.matching.DoubleOptionalPatternMatcher.traverseNextSpecificNode(DoubleOptionalPatternMatcher.scala:39)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher.traverseNode(PatternMatcher.scala:71)\n    at org.neo4j.cypher.internal.pipes.matching.PatternMatcher.foreach(PatternMatcher.scala:33)\n    at scala.collection.generic.Growable$class.$plus$plus$eq(Growable.scala:48)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:128)\n    at scala.collection.mutable.ListBuffer.$plus$plus$eq(ListBuffer.scala:42)\n    at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:200)\n    at scala.collection.TraversableLike$$anonfun$flatMap$1.apply(TraversableLike.scala:200)\n    at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.scala:59)\n    at scala.collection.immutable.List.foreach(List.scala:45)\n    at scala.collection.TraversableLike$class.flatMap(TraversableLike.scala:200)\n    at scala.collection.immutable.List.flatMap(List.scala:45)\n    at org.neo4j.cypher.internal.pipes.MatchPipe.createResults(MatchPipe.scala:43)\n    at org.neo4j.cypher.internal.pipes.FilterPipe.createResults(FilterPipe.scala:29)\n    at org.neo4j.cypher.internal.pipes.ExtractPipe.createResults(ExtractPipe.scala:41)\n    at org.neo4j.cypher.internal.pipes.ColumnFilterPipe.createResults(ColumnFilterPipe.scala:33)\n    at org.neo4j.cypher.internal.ExecutionPlanImpl$$anonfun$6.apply(ExecutionPlanImpl.scala:120)\n    at org.neo4j.cypher.internal.ExecutionPlanImpl$$anonfun$6.apply(ExecutionPlanImpl.scala:118)\n    at org.neo4j.cypher.internal.ExecutionPlanImpl.execute(ExecutionPlanImpl.scala:34)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:54)\n    at org.neo4j.cypher.ExecutionEngine.execute(ExecutionEngine.scala:57)\n    at net.junisphere.eranger.test.filter.FilterTests.regexWithBoolean(FilterTests.java:777)\n```\n\nIMHO cypher should silently evaluate to false when trying to apply a regex to a non-string type.'\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/139", "title": "Server startup fails in a bad way if lsof is not in path", "closed": "2016-01-07 10:23:50", "commitsDetails": [], "commits": {}, "ttf": 1150.0002777777777, "created": "2012-11-12 13:24:16", "user": "lassewesth", "body": "@gorbachev: 'Using 1.6.1 on Unix.\n\nIf lsof is not in path, the server startup fails and leaves the database in a dirty state.\n\n$ bin/neo4j start\nWARNING: Detected a limit of 16384 for maximum open files, while a minimum value of 40000 is recommended.\nWARNING: Problems with the operation of the server may occur. Please refer to the Neo4j manual regarding lifting this limitation.\nStarting Neo4j Server...WARNING: not changing user\n process [10861]... waiting for server to be ready.bin/neo4j: line 213: lsof: command not found\n.bin/neo4j: line 213: lsof: command not found\n.bin/neo4j: line 213: lsof: command not found\n.bin/neo4j: line 213: lsof: command not found\n[several more of the same errors omitted]\n.bin/neo4j: line 213: lsof: command not found\n. BAD.\n another server-process is running with []\n\nThe script should check that lsof is in path before proceeding.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/135", "title": "IndexProviderStoreException", "closed": "2013-03-04 12:53:45", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 13:24:13", "user": "lassewesth", "body": "@peterneubauer: 'Opening a 1.6.1 db with 1.7.M03 gives this error:\n\n```\n2012-04-16 08:47:54.584+0000: Opened [/home/sometime/neo4j-enterprise-1.7.M03/data/graph.db/nioneo_logical.log.1] clean empty log, version=440, lastTxId=10143891\n2012-04-16 08:47:54.687+0000: TM opening log: /home/sometime/neo4j-enterprise-1.7.M03/data/graph.db/tm_tx_log.1\n2012-04-16 08:47:54.713+0000: Failed to load index provider lucene Expected to read at least 5 records, but could only read 4 (32b)\njava.lang.RuntimeException: Expected to read at least 5 records, but could only read 4 (32b)\nat org.neo4j.kernel.impl.index.IndexProviderStore.readRecordsWithNullDefaults(IndexProviderStore.java:115)\nat org.neo4j.kernel.impl.index.IndexProviderStore.<init>(IndexProviderStore.java:60)\nat org.neo4j.index.impl.lucene.LuceneDataSource.newIndexStore(LuceneDataSource.java:288)\nat org.neo4j.index.impl.lucene.LuceneDataSource.<init>(LuceneDataSource.java:186)\nat org.neo4j.index.lucene.LuceneIndexProvider.load(LuceneIndexProvider.java:70)\nat     org.neo4j.kernel.AbstractGraphDatabase$DefaultKernelExtensionLoader.loadIndexImplementations(AbstractGraphDatabase.java:1219)\nat org.neo4j.kernel.AbstractGraphDatabase$DefaultKernelExtensionLoader.init(AbstractGraphDatabase.java:1191)\nat org.neo4j.kernel.lifecycle.LifeSupport$LifecycleInstance.init(LifeSupport.java:382)\nat org.neo4j.kernel.lifecycle.LifeSupport.init(LifeSupport.java:82)\nat org.neo4j.kernel.lifecycle.LifeSupport.start(LifeSupport.java:116)\nat org.neo4j.kernel.AbstractGraphDatabase.run(AbstractGraphDatabase.java:229)\nat org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:79)\nat org.neo4j.kernel.EmbeddedGraphDatabase.<init>(EmbeddedGraphDatabase.java:70)\nat org.neo4j.server.enterprise.EnterpriseNeoServerBootstrapper$DatabaseMode$1.createDatabase(EnterpriseNeoServerBootstrapper.java:45)\nat org.neo4j.server.database.Database.createDatabase(Database.java:81)\nat org.neo4j.server.database.Database.<init>(Database.java:64)\nat org.neo4j.server.NeoServerWithEmbeddedWebServer.startDatabase(NeoServerWithEmbeddedWebServer.java:175)\nat org.neo4j.server.NeoServerWithEmbeddedWebServer.start(NeoServerWithEmbeddedWebServer.java:93)\nat org.neo4j.server.Bootstrapper.start(Bootstrapper.java:87)\nat org.neo4j.server.advanced.AdvancedNeoServerBootstrapper.start(AdvancedNeoServerBootstrapper.java:37)\nat org.neo4j.server.Bootstrapper.main(Bootstrapper.java:52)\n```\n\n'\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/133", "title": "launcher script's max file limit detection erroneous", "closed": "2016-01-07 10:23:50", "commitsDetails": [], "commits": {}, "ttf": 1150.0002777777777, "created": "2012-11-12 13:24:12", "user": "lassewesth", "body": "@oyiptong: 'In neo4j's shell script launcher, the max open file limit detection is faulty if the launcher is executed from root.\n\nIt will run ulimit -n for the root user, then switch to the neo4j user to run the db. ulimit is per-user.'\n"}, {"labels": ["bug"], "filteredCommits": ["1a261f85215c39039a8e8d12b1363ec328e56bf7"], "url": "https://github.com/neo4j/neo4j/issues/132", "gitStatsSummary": {"insertions": 155, "gitFilesChange": 6, "lines": 160, "deletions": 5}, "numCommits": 1, "commits": {"1a261f85215c39039a8e8d12b1363ec328e56bf7": {"commitUser": "tinwelint", "commitGHEventType": "closed"}}, "ttf": 322.0002777777778, "user": "lassewesth", "changesInPackagesSPOON": ["org.neo4j.kernel.impl.persistence.PersistenceManager.getCreatedRelationships()", "org.neo4j.kernel.impl.core.NodeManager.getAllRelationships().2", "org.neo4j.kernel.impl.core.NodeManager.asSet(org.neo4j.kernel.impl.util.RelIdIterator)", "org.neo4j.kernel.impl.core.NodeManager", "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.getCreatedRelationships()", "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.getMoreRelationships(long,long)", "org.neo4j.kernel.impl.nioneo.xa.ReadTransaction.getCreatedRelationships()", "org.neo4j.kernel.impl.core.NodeManager.getAllRelationships()", "org.neo4j.kernel.impl.nioneo.store.NodeStore.updateRecord(org.neo4j.kernel.impl.nioneo.store.NodeRecord)", "org.neo4j.kernel.impl.core.NodeManager.getAllNodes()", "org.neo4j.kernel.impl.core.NodeManager.getAllRelationships().2.fetchNextOrNull()", "org.neo4j.kernel.impl.persistence.PersistenceManager", "org.neo4j.kernel.impl.core.NodeManager.getCreatedRelationships()", "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.CommandSorter.compare(org.neo4j.kernel.impl.nioneo.xa.Command,org.neo4j.kernel.impl.nioneo.xa.Command)", "org.neo4j.kernel.impl.nioneo.store.NodeStore.getRecord(long)", "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.getRelationshipChainPosition(long)", "org.neo4j.kernel.impl.persistence.getCreatedRelationships()"], "changesInPackagesGIT": ["community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo", "community/kernel/src/main/java/org/neo4j/kernel/impl/core", "community/kernel/src/main/java/org/neo4j/kernel/impl/persistence"], "body": "@tinwelint: 'It only reads from store/cache w/o consulting transactional state within that same transaction.'\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 0, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 17, "UPD": 5, "TOT": 38, "DEL": 2, "INS": 29, "spoonFilesChanged": 6, "MOV": 2}, "title": "GlobalGraphOperations should take tx state into consideration", "statsSkippedReason": "", "closed": "2013-10-01 09:56:07", "commitsDetails": [{"commitUser": "tinwelint", "commitDateTime": "2013-03-06 13:40:41", "commitHash": "1a261f85215c39039a8e8d12b1363ec328e56bf7", "commitParents": ["e9de62e7befeeb8b49cf594775b843b963d6ef6d"], "commitGHEventType": "closed", "nameRev": "1a261f85215c39039a8e8d12b1363ec328e56bf7 tags/2.0.0-M01~18^2~47^2", "commitGitStats": [{"insertions": 6, "lines": 6, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa/ReadTransaction.java", "deletions": 0}, {"insertions": 115, "lines": 119, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/core/NodeManager.java", "deletions": 4}, {"insertions": 8, "lines": 8, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/persistence/NeoStoreTransaction.java", "deletions": 0}, {"insertions": 18, "lines": 18, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/xa/WriteTransaction.java", "deletions": 0}, {"insertions": 6, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/persistence/PersistenceManager.java", "deletions": 1}, {"insertions": 2, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/nioneo/store/NodeStore.java", "deletions": 0}, {"insertions": 90, "lines": 95, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/core/NodeManagerTest.java", "deletions": 5}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.getRelationshipChainPosition(long)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.getCreatedRelationships()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.getMoreRelationships(long,long)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.WriteTransaction.CommandSorter.compare(org.neo4j.kernel.impl.nioneo.xa.Command,org.neo4j.kernel.impl.nioneo.xa.Command)"}], "spoonFilePath": "WriteTransaction.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.xa.ReadTransaction.getCreatedRelationships()"}], "spoonFilePath": "ReadTransaction.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.persistence.PersistenceManager.getCreatedRelationships()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.persistence.PersistenceManager"}], "spoonFilePath": "PersistenceManager.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManager.getAllRelationships().2.fetchNextOrNull()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManager"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManager.getCreatedRelationships()"}, {"UPD": 1, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManager.getAllRelationships().2"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManager.asSet(org.neo4j.kernel.impl.util.RelIdIterator)"}, {"UPD": 0, "TOT": 9, "DEL": 1, "INS": 8, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManager.getAllRelationships()"}, {"UPD": 0, "TOT": 10, "DEL": 1, "INS": 8, "MOV": 1, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManager.getAllNodes()"}], "spoonFilePath": "NodeManager.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.persistence.getCreatedRelationships()"}], "spoonFilePath": "NeoStoreTransaction.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManagerTest.shouldRemoveAllPropertiesWhenDeletingNode()"}, {"UPD": 1, "TOT": 5, "DEL": 0, "INS": 1, "MOV": 3, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManagerTest.createRelationshipWith(java.lang.String,java.lang.Object)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManagerTest.getAllNodesShouldConsiderTxState()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManagerTest.getAllRelationshipsShouldConsiderTxState()"}, {"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManagerTest.shouldNotRemovePropertyTwice()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManagerTest.getNodeManager()"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 1, "MOV": 1, "spoonMethodName": "org.neo4j.kernel.impl.core.NodeManagerTest.shouldRemoveRelationshipProperties()"}], "spoonFilePath": "NodeManagerTest.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.store.NodeStore.getRecord(long)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.nioneo.store.NodeStore.updateRecord(org.neo4j.kernel.impl.nioneo.store.NodeRecord)"}], "spoonFilePath": "NodeStore.java"}], "commitMessage": "getAllNodes() and getAllRelationships() considers transaction state (if any)\n\nFixes #132\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-03-06 12:39:08"}], "created": "2012-11-12 13:24:12"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/127", "title": "Webadmin Console: pasting multi-line queries doesn't work prettily", "closed": "2013-10-01 09:56:25", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:24:08", "user": "lassewesth", "body": "@systay: 'When pasting examples into the console, if the examples are multi-line queries, they get squashed together into a single line'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/123", "title": "new nodes get put into caches too early", "closed": "2014-11-11 22:07:56", "commitsDetails": [], "commits": {}, "ttf": 729.0002777777778, "created": "2012-11-12 13:24:05", "user": "lassewesth", "body": "@peterneubauer: 'reported by Marko at http://groups.google.com/group/gremlin-users/browse_thread/thread/795fd5f6c74538df :\n\ngetVertices() -- the vertices returned by getVertices() are not respective of the current transactions view of the data. To rectify this (in this situation), I check the underlying nodes properties. If this throws an \"IllegalStateException -- Node[x] has been removed from the current transaction,\" then I know that the transaction and vertex are out of sync and I sequester the exception and move forward. The issue with this is that the iterable that turns Neo4j nodes into Blueprints vertices has a try/catch for every node coming out of Neo4j.\n\nThis is a real issue, it's the new-nodes-gets-put-in-cache issues we've been over already.\n\nPROBLEM 2:\n    getEdges() -- the same as above, but for edges.'\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/121", "title": "JMX big decimal properties cause an error, b/c of PropertyDispatcher usage.", "closed": "2019-12-10 10:14:56", "commitsDetails": [], "commits": {}, "ttf": 2583.0002777777777, "created": "2012-11-12 13:24:04", "user": "lassewesth", "body": "@jexp: 'see: https://groups.google.com/d/topic/neo4j/LOFtBiAZC2E/discussion\n\n@thobe says:\n\nThis is a bug, JMX attributes are not properties, therefore the PropertyTypeDispatcher is not apt to dispatch them. It has worked \"by accident\" in most cases, because most beans return attribute value objects that happen to match our property types, but this guy has some bean that returns a BigDecimal, which is perfectly valid JMX, but not a valid Neo4j property.\n\nI see two ways of fixing this:\n1. Don't use PropertyTypeDispatcher for this purpose, use some other conversion mechanism for converting JMX attributes to serializable representation.\n2. Extend PropertyTypeDispatcher ever so slightly so that instead of just throwing an exception straight away it invokes a method for \"unknownNumberType(Number number)\" (and similar for other places where exceptions are thrown), the default implementation of these methods would throw exception, but it would allow to override those methods for further dispatch in a subclass as in this case.\n'\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/119", "title": "Cypher: Different results with same query and same data", "closed": "2014-11-11 22:06:37", "commitsDetails": [], "commits": {}, "ttf": 729.0002777777778, "created": "2012-11-12 13:24:02", "user": "lassewesth", "body": "@abuechler: 'Developing some Cypher queries I noticed that for the same data and using the same query I get different results:\n\n``` neo4j-console\nneo4j-sh (0)$ start ref=node(0) match ref-[:SERVICE]->subRef-[:SERVICE]->service, service<-[d1?:DEPENDS_ON]->otherService, service-[d2?:DEPENDS_ON]->parentOfSharedService, service-[d3?:HAS_PROPERTY_VALUE]->pValue where (d1 is null and d2 is null) or (d2 is not null and d3 is not null and pValue.name = 'service.isshared' and pValue.value = true ) return distinct service.uuid\n+----------------------------------------+\n| service.uuid                           |\n+----------------------------------------+\n| \"a62b90c3-841e-423f-b131-26276c3af219\" |\n| \"d1430985-25eb-4aae-8dd5-803eb32269d3\" |\n| \"6acaf31c-2deb-44cc-9d80-e9eb1297d9bc\" |\n| \"54b015df-93e2-4a06-aebc-827e3b100ba3\" |\n+----------------------------------------+\n4 rows, 20 ms\n\nneo4j-sh (0)$ start ref=node(0) match ref-[:SERVICE]->subRef-[:SERVICE]->service, service<-[d1?:DEPENDS_ON]->otherService, service-[d2?:DEPENDS_ON]->parentOfSharedService, service-[d3?:HAS_PROPERTY_VALUE]->pValue where (d1 is null and d2 is null) or (d2 is not null and d3 is not null and pValue.name = 'service.isshared' and pValue.value = true ) return distinct service.uuid\n+----------------------------------------+\n| service.uuid                           |\n+----------------------------------------+\n| \"a62b90c3-841e-423f-b131-26276c3af219\" |\n| \"6acaf31c-2deb-44cc-9d80-e9eb1297d9bc\" |\n| \"54b015df-93e2-4a06-aebc-827e3b100ba3\" |\n+----------------------------------------+\n3 rows, 11 ms\n\n```\n\nThis was done using neo4j-community-1.7.M01 (also occurs in 1.6.x) querying a database I created solely for these tests and with no other processes / applications accessing it.\n\nAny ideas what's going wrong? I could offer a copy of my database to reproduce this behavior if necessary.\n\nRegards,\nAndi B\u00fcchler'\n"}, {"labels": ["bug", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/117", "title": "Better error message for unsuccessful deletion", "closed": "2017-10-17 10:13:39", "commitsDetails": [], "commits": {}, "ttf": 1799.0002777777777, "created": "2012-11-12 13:24:00", "user": "lassewesth", "body": "@wingy: 'When deleting a node that has a relationship to another node you will get an error message telling the transaction failed.\n\nIt would be better if it told which relationships must be deleted to be able to delete the node.'\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/115", "title": "strange webadmin session-behavior ", "closed": "2013-10-01 09:56:31", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:23:59", "user": "lassewesth", "body": "@tbaum: 'running multiple queries in different browser-windows behaves strange.\n\n1) create two windows on the same neo4j-server\n2) enter in 1st shell window\n\n```\nstart n=node(0) return n  <return>\n```\n\n3) enter in 2nd shell window\n\n```\n; <return>\n```\n\n... and see the output from the 1st window\n'\n"}, {"labels": ["bug", "cypher", "team-cypher"], "url": "https://github.com/neo4j/neo4j/issues/114", "title": "StackOverflowError in graph-matching", "closed": "2017-10-04 09:31:51", "commitsDetails": [], "commits": {}, "ttf": 1786.0002777777777, "created": "2012-11-12 13:23:59", "user": "lassewesth", "body": "@tinwelint: 'Given the Cypher query:\n\nstart root=node(0)\nmatch\n root-[:CATEGORY]->category-[:TWITTER_USER]->user-[:POSTED]->value,\n value<-[:VALUE]-hour<-[h]-day<-[:IDX_DAY_04]-month<-[:IDX_MONTH_05]-year<-[:IDX_YEAR_2012]-root,\n root-[:CATEGORY]->category-[:TAG]->tag,\n value-[r:TAGGED]-tag\nwhere tag.name='tinkerpop' and category.type='TWITTER' and type(h)\n=~/IDX_HOUR_.*/ return count(r)\n\nIt gives:\n\njava.lang.StackOverflowError\n        at java.util.Stack.pop(Stack.java:84)\n        at org.neo4j.graphmatching.PatternFinder.traverse(PatternFinder.java:323)\n        at org.neo4j.graphmatching.PatternFinder.traverse(PatternFinder.java:325)\n        at org.neo4j.graphmatching.PatternFinder.traverse(PatternFinder.java:325)\n        at org.neo4j.graphmatching.PatternFinder.traverse(PatternFinder.java:238)\n        at org.neo4j.graphmatching.PatternFinder.traverseFromCallStack(PatternFinder.java:203)\n        at org.neo4j.graphmatching.PatternFinder.extractPotentialResult(PatternFinder.java:190)\n        at org.neo4j.graphmatching.PatternFinder.traverseFromCallStack(PatternFinder.java:208)\n        at org.neo4j.graphmatching.PatternFinder.extractPotentialResult(PatternFinder.java:190)\n        at org.neo4j.graphmatching.PatternFinder.traverseFromCallStack(PatternFinder.java:208)\n        at org.neo4j.graphmatching.PatternFinder.extractPotentialResult(PatternFinder.java:190)\n        ....\n\nFor a data set I do not know at the time of writing this...'\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/113", "title": "Neo4J web admin incorrect display of large Long property values (code attached)", "closed": "2015-12-05 05:58:27", "commitsDetails": [], "commits": {}, "ttf": 1117.0002777777777, "created": "2012-11-12 13:23:58", "user": "lassewesth", "body": "@johnoa: 'The web admin interface incorrectly displays large long property values stored on relationships.\n\nThe attached Unit test proves this.  Here you can see that the long value: 20020000000346382l is correctly held in neo4j and can be retrieved as such, however when viewed in the admin interface it is displayed as: 20020000000346384\n\nUnit test with instructions available at:\n\nhttps://gist.github.com/gists/2836562/download\n\nThis bug is specific to the web admin gui, http://localhost:7474/webadmin/#/data/search/rels%3A1/\n\n'\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/112", "title": "webadmin.js doesn't work behind proxy", "closed": "2013-10-23 15:17:27", "commitsDetails": [], "commits": {}, "ttf": 345.0002777777778, "created": "2012-11-12 13:23:58", "user": "lassewesth", "body": "@shining4u: 'Description:\nHi, I'm running neo4j server on 7474 port and apache on 80 port.\nI set proxy setting to expose neo4j server with url, \"http://domain/neo4j\"\nOther things seem to works fine but webadmin.\n\nWhen I open the url \"http://domain/neo4j\", it runs following steps.\n1. GET /neo4j/webadmin/\n2. GET /neo4j/webadmin/css/style.css\n3. GET /neo4j/webadmin/js/require.js\n4. GET /neo4j/webadmin/js/webadmin.js\n5. GET /neo4j/webadmin/js/lib/arbor.js\n6. GET /?_=1338775347645\n...\nAnd on step 6, it should be GET \"/neo4j/?_=1338775347645\", NOT \"/?_=1338775347645\"\nI guess, that's why webadmin doesn't work properly.\n\nHere is my running environment:\n\nNeo4j version : Neo4j - Graph Database Kernel 1.7-SNAPSHOT (revision: jenkins-community-1418)\n\nSettings on apache,\n\n[Location /neo4j]\n        # Proxy to localhost:7474\n        ProxyPass http://localhost:7474\n        proxyPassReverse http://localhost:7474\n\n```\n    # Substitutes\n    AddOutputFilterByType SUBSTITUTE application/json\n    AddOutputFilterByType SUBSTITUTE text/html\n    AddOutputFilterByType SUBSTITUTE */*\n    Substitute \"s|localhost:7474|<DOMAIN>/neo4j|n\"\n\n    # Authentication\n    AuthType Basic\n    AuthName \"Neo4j\"\n    AuthUserFile /var/lib/neo4j/conf/.htpasswd\n    Require valid-user\n```\n\n[/Location]'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/111", "title": "Cypher in REST API Batch command cannot take params : null", "closed": "2015-12-05 06:24:39", "commitsDetails": [], "commits": {}, "ttf": 1117.0002777777777, "created": "2012-11-12 13:23:57", "user": "lassewesth", "body": "@maxdemarzi: 'java.lang.NullPointerException is thrown if params value is null when passing Cypher command via batch.\n\nWork around is to omit params or pass a non null params value.\n\nFound this while adding it to Neography.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/103", "title": "Make UDC disabling behave as advertised in the docs", "closed": "2013-03-04 12:40:42", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 13:23:53", "user": "lassewesth", "body": "@peterneubauer: 'Make sure UDC can be disabled and add tests for UDC jars not being on the classpath.'\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/99", "title": "Neo4j service on Linux", "closed": "2016-05-03 14:04:21", "commitsDetails": [], "commits": {}, "ttf": 1268.0002777777777, "created": "2012-11-12 13:23:49", "user": "lassewesth", "body": "@Alan-R: 'According to the Linux Standard Base specification for init scripts, if you start a service that's started, or stop one that's stopped, the init script should exit with return code zero.\n\nThe neo4j-service script doesn't follow the LSB init script spec.  At least for the start case, it complains if it's already started (which is tolerable) but it exits with non-zero return code - which is not tolerable.\n\nThe LSB behavior actually makes sense - if you're running a script and you wanted it started, you got what you wanted - so it should not give the same exit code as though the script did not give you what you wanted.\n\nThe full set of well-defined exit codes for init scripts can be found here:\nhttp://refspecs.linuxbase.org/LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/iniscrptact.html\n\nIn a perfect world, if you might say things like this for starting neo4j:\n    Neo4j already running - pid xxx                                                   [with exit code zero of course]\n    Neo4j started - pid xxx                                                               [also with exit code zero]\n    Neo4j already stopped                                                               [with exit code zero of course]\n    Neo4j stopped successfully.                                                       [also with exit code zero]\n\nFWIW, if the script is in /etc/init.d - it _is_ a service script.  Putting service on the end of the name is kinda redundant (and not usually done).  This isn't a bug, but it does make typing service neo4j-service start a lot harder than service neo4j start.\n'\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/94", "title": "SET not working for aggregates?", "closed": "2013-10-01 09:56:39", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:23:46", "user": "lassewesth", "body": "@radford: 'Using 1.8.M05 the following SET doesn't actually set _anything_ even though the returned data is correct and (in the shell) it says it updated more properties than it should have.\n\n```\nSTART c=node(*) MATCH c-[:likes]->i SET c.like_count = COUNT(i) RETURN c, COUNT(i);\n```\n\nIn particular number of properties it claims to update is like it was executing the SET for \"each i\" not \"each c\" even though it really does nothing.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/84", "title": "Allow batch created unique nodes to be referable", "closed": "2014-11-10 22:09:08", "commitsDetails": [], "commits": {}, "ttf": 728.0002777777778, "created": "2012-11-12 13:23:40", "user": "lassewesth", "body": "@maxdemarzi: 'http://docs.neo4j.org/chunked/milestone/rest-api-batch-ops.html\n\n19.14.2. Refer to items created earlier in the same batch job\nThe batch operation API allows you to refer to the URI returned from a created resource in subsequent job descriptions, within the same batch call.\n\nIn the following, both the add_node_to_index call and the create_relationship call fail since create_unique_node is a reference to an index entry instead of a node.\n\nbatch_result = @neo.batch \n[:create_unique_node, \"person\", \"ssn\", \"000-00-0001\", {:first_name=>\"Jane\", :last_name=>\"Doe\", :ssn=>\"000-00-0001\"],\n[:add_node_to_index, \"person_ssn\", \"ssn\", \"000-00-0001\", \"{0}\"],\n[:create_node, {:street1=>\"94437 Kemmer Crossing\", :street2=>\"Apt. 333\", :city=>\"Abshireton\", :state=>\"AA\", :zip=>\"65820\"],\n[:create_relationship, \"has\", \"{0}\", \"{2}\", {}]\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/79", "title": "Cypher Nested Arrays: JSON Representation different in Data Browser, Console and Rest API", "closed": "2014-11-10 20:12:50", "commitsDetails": [], "commits": {}, "ttf": 728.0002777777778, "created": "2012-11-12 13:23:35", "user": "lassewesth", "body": "@maxdemarzi: 'pri is a string array property  [\"one\",\"two\",\"three\"]\n\nSTART vq=node(_), vs =node:word_tag(tag='pp') \n            MATCH path = vq -[:co_occurence_]-> vs\n             WHERE vq.vsn! = true\n               AND vs.ven! = true\n               AND length(path) > 2\n             RETURN distinct extract(n in nodes(path) : [n.tag, n.word, n.pri]\n\nOn Data Browser:\n[\"List(nn, drop, [Ljava.lang.String;@630ff939)\",\"List(rb, too, [Ljava.lang.String;@27bc0b1e)\",\"List(rb, frequently, [Ljava.lang.String;@2db33ffe)\",\"List(in, with, [Ljava.lang.String;@532e5422)\",\"List(de, the, [Ljava.lang.String;@695aed8)\",\"List(nn, calls, [Ljava.lang.String;@17d7f4e9)\",\"List(nn, drop, [Ljava.lang.String;@630ff939)\",\"List(rb, frequently, [Ljava.lang.String;@2db33ffe)\",\"List(pp, ., [Ljava.lang.String;@45f4447b)\"]\n\nOn Console: (This is what they all should display)\n[[\"nn\",\"drop\",[\"0:3\",\"1:6\"]],[\"rb\",\"too\",[\"1:7\"]],[\"rb\",\"frequently\",[\"0:4\",\"1:8\"]],[\"in\",\"with\",[\"0:5\"]],[\"de\",\"the\",[\"0:6\",\"1:4\"]],[\"nn\",\"calls\",[\"0:2\",\"1:5\"]],[\"nn\",\"drop\",[\"0:3\",\"1:6\"]],[\"rb\",\"frequently\",[\"0:4\",\"1:8\"]],[\"pp\",\".\",[\"0:8\",\"1:9\"]]]\n\nOn Rest API:\n{\"columns\"=>[\"extract(n in nodes(path) : [n.tag, n.word, n.pri])\"], \"data\"=>[[[\"List(nn, my, [Ljava.lang.String;@3761d803)\", \"List(nn, phone, [Ljava.lang.String;@78acc95c)\", \"List(nn, calls, [Ljava.lang.String;@17d7f4e9)\", \"List(nn, drop, [Ljava.lang.String;@630ff939)\", \"List(rb, frequently, [Ljava.lang.String;@2db33ffe)\", \"List(in, with, [Ljava.lang.String;@532e5422)\", \"List(de, the, [Ljava.lang.String;@695aed8)\", \"List(nn, iphone, [Ljava.lang.String;@4d09ea48)\", \"List(pp, ., [Ljava.lang.String;@45f4447b)\"]], [[\"List(nn, my, [Ljava.lang.String;@3761d803)\", \"List(nn, phone, [Ljava.lang.String;@78acc95c)\", \"List(nn, calls, [Ljava.lang.String;@17d7f4e9)\", \"List(nn, drop, [Ljava.lang.String;@630ff939)\", \"List(rb, frequently, [Ljava.lang.String;@2db33ffe)\", \"List(in, with, [Ljava.lang.String;@532e5422)\", \"List(de, the, [Ljava.lang.String;@695aed8)\", \"List(nn, iphone, [Ljava.lang.String;@4d09ea48)\", \"List(pp, ., [Ljava.lang.String;@45f4447b)\"]], [[\"List(nn, my, [Ljava.lang.String;@3761d803)\", \"List(nn, phone, [Ljava.lang.String;@78acc95c)\", \"List(nn, calls, [Ljava.lang.String;@17d7f4e9)\", \"List(nn, drop, [Ljava.lang.String;@630ff93\n\nWork around is to un-nest the array:\n\nSTART vq=node(_), vs =node:word_tag(tag='pp') \n            MATCH path = vq -[:co_occurence_]-> vs\n            WHERE vq.vsn! = true\n              AND vs.ven! = true\n              AND length(path) > 2\n            RETURN distinct extract(n in nodes(path) : n.word), \n                            extract(n in nodes(path) : n.tag), \n                            extract(n in nodes(path) : n.pri)\n\n{\"columns\"=>[\"extract(n in nodes(path) : n.word)\", \"extract(n in nodes(path) : n.tag)\", \"extract(n in nodes(path) : n.pri)\"], \"data\"=>[[[\"but\", \"the\", \"calls\", \"drop\", \"too\", \"frequently\", \".\"], [\"cc\", \"de\", \"nn\", \"nn\", \"rb\", \"rb\", \"pp\"], [[\"1:3\"], [\"0:6\", \"1:4\"], [\"0:2\", \"1:5\"], [\"0:3\", \"1:6\"], [\"1:7\"], [\"0:4\", \"1:8\"], [\"0:8\", \"1:9\"]]], [[\"great\", \"device\", \",\", \"but\", \"the\", \"calls\", \"drop\", \"frequently\", \"with\", \"the\", \"iphone\", \".\"], [\"nn\", \"nn\", \"pp\", \"cc\", \"de\", \"nn\", \"nn\", \"rb\", \"in\", \"de\", \"nn\", \"pp\"], [[\"1:0\"], [\"1:1\"], [\"1:2\"], [\"1:3\"], [\"0:6\", \"1:4\"], [\"0:2\", \"1:5\"], [\"0:3\", \"1:6\"], [\"0:4\", \"1:8\"], [\"0:5\"], [\"0:6\", \"1:4\"], [\"0:7\"], [\"0:8\", \"1:9\"]]], [[\"too\", \"frequently\", \"with\", \"the\", \"iphone\", \".\"], [\"rb\", \"rb\", \"in\", \"de\", \"nn\", \"pp\"], [[\"1:7\"], [\"0:4\", \"1:8\"], [\"0:5\"], [\"0:6\", \"1:4\"], [\"0:7\"], [\"0:8\", \"1:9\"]]], [[\"great\", \"device\", \",\", \"but\", \"the\", \"calls\", \"drop\", \"frequently\", \".\"]\n'\n"}, {"labels": ["bug", "build"], "url": "https://github.com/neo4j/neo4j/issues/76", "title": "System locale impacts the compilation", "closed": "2014-11-10 22:44:47", "commitsDetails": [], "commits": {}, "ttf": 728.0002777777778, "created": "2012-11-12 13:23:31", "user": "lassewesth", "body": "@miaoski: 'Hi.\nI pulled the latest Neo4j Community from github (d1f68872db43e11e2aaa8c935ba85a68e835dda1) and found that system locale impacts the compilation.\n\nSteps to reproduce:\n$ export LC_ALL=zh_TW.UTF-8\n$ mvn clean package\n[...](Neo4j-server)\njava.net.BindException: Address already in use\n\n$ export LC_ALL=C\n$ mvn clean package\n[...](Jasmine)\n  1.) PropertyContainerView it recognizes odd characters as strings <<< FAILURE!\n\n$ export LC_ALL=en_US.UTF-8\n$ mvn clean package\nBUILD SUCCESS\n\nThanks!'\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/71", "title": "Longs get converted to Doubles during arithmetic operations", "closed": "2013-10-01 15:47:42", "commitsDetails": [], "commits": {}, "ttf": 323.0002777777778, "created": "2012-11-12 13:23:27", "user": "lassewesth", "body": "@denismo: 'I had a Cypher query where as part of return clause I was doing Long arithmetic (addition) and I noticed that the output value is Double:\nreturn .... (dp.timeMS + jptl.timeOffsetMs) as departureMS ...\n\nOutput:\ndepartureMS: 1.368E7\n\nLooking at the code, I think I can see why this is happening:\nExpression.scala (org.neo4j.cypher.internal.commands)\n\n``` scala\ncase class Add(a: Expression, b: Expression) extends Expression {\n  val identifier = Identifier(a.identifier.name + \" + \" + b.identifier.name, ScalarType())\n\n  def compute(m: Map[String, Any]) = {\n    val aVal = a(m)\n    val bVal = b(m)\n\n    (aVal, bVal) match {\n      case (x: Number, y: Number) => x.doubleValue() + y.doubleValue()\n```\n\nThe last case seems to convert any Number (Long is a Number) to double. The same happens for other arithmetic operations. \n\nTo reproduce, a simpler query can be used: start n=node(0) return 1+1\nThis returns \"2.0\"'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/67", "title": "ReST API Batch: Syntax error but HTTP 200 Response returned", "closed": "2013-02-18 15:03:08", "commitsDetails": [], "commits": {}, "ttf": 98.00027777777778, "created": "2012-11-12 13:23:24", "user": "lassewesth", "body": "@kwattro: 'Hello,\n\nVersion: Neo4j Server 1.8M06\n\nSituation:\n\nGiven the following example from the [doc](http://docs.neo4j.org/chunked/milestone/rest-api-batch-ops.html#rest-api-refer-to-items-created-earlier-in-the-same-batch-job) .\n\n_NB: I changed intetionally the last operation id, so there is a duplicated batch operation id in the query_\n\n```\n[ {\n  \"method\" : \"POST\",\n  \"to\" : \"/node\",\n  \"id\" : 0,\n  \"body\" : {\n    \"name\" : \"bob\"\n  }\n}, {\n  \"method\" : \"POST\",\n  \"to\" : \"/node\",\n  \"id\" : 1,\n  \"body\" : {\n    \"age\" : 12\n  }\n}, {\n  \"method\" : \"POST\",\n  \"to\" : \"{0}/relationships\",\n  \"id\" : 3,\n  \"body\" : {\n    \"to\" : \"{1}\",\n    \"data\" : {\n      \"since\" : \"2010\"\n    },\n    \"type\" : \"KNOWS\"\n  }\n}, {\n  \"method\" : \"POST\",\n  \"to\" : \"/index/relationship/my_rels\",\n  \"id\" : 3,\n  \"body\" : {\n    \"key\" : \"since\",\n    \"value\" : \"2010\",\n    \"uri\" : \"{3}\"\n  }\n} ]\n```\n\nIf you execute this query, you receive a `EndNodeNotFound Exception` because of a duplicated operation id. So there is no possibility to create the relation.\n\nThe query does not pass and the database is not affected by the changes.\n\nBUT ! You receive a 200 status code and full representations of the \"not\" created nodes. you just get a 404 for the\nrelation query.\n\nI think it should rather return a 400 response code and do not return the nodes representations.\n\nHere is the received response (you can see the 404 raised inside the node creation part) :\n\n```\n\"outgoing_relationships\":\"http://192.168.43.29:7474/db/data/node/649321/relationships/out\",\"traverse\":\"http://192.168.43.29:7474/db/data/node/649321/traverse/{returnType}\",\"all_typed_relationships\":\"http://192.168.43.29:7474/db/data/node/649321/relationships/all/{-list|&|types}\",\"property\":\"http://192.168.43.29:7474/db/data/node/649321/properties/{key}\",\"all_relationships\":\"http://192.168.43.29:7474/db/data/node/649321/relationships/all\",\"self\":\"http://192.168.43.29:7474/db/data/node/649321\",\"properties\":\"http://192.168.43.29:7474/db/data/node/649321/properties\",\"outgoing_typed_relationships\":\"http://192.168.43.29:7474/db/data/node/649321/relationships/out/{-list|&|types}\",\"incoming_relationships\":\"http://192.168.43.29:7474/db/data/node/649321/relationships/in\",\"incoming_typed_relationships\":\"http://192.168.43.29:7474/db/data/node/649321/relationships/in/{-list|&|types}\",\"create_relationship\":\"http://192.168.43.29:7474/db/data/node/649321/relationships\",\"data\":{\"_id\":\"50192ece61312\",\"name\":\"some 50192ece61309 name\"}},\"location\":\"http://192.168.43.29:7474/db/data/node/649321\",\"status\":201},{\"id\":5,\"from\":\"http://192.168.43.29:7474/db/data/relationship/12231/relationships\",\"body\":null,\"status\":404}\n```\n\nRegards,\n\nChristophe\n\n'\n"}, {"labels": ["bug", "operability"], "url": "https://github.com/neo4j/neo4j/issues/63", "title": "neo4j service not ckconfig compliant", "closed": "2018-11-07 18:51:38", "commitsDetails": [], "commits": {}, "ttf": 2186.0002777777777, "created": "2012-11-12 13:23:21", "user": "lassewesth", "body": "@johnjansen: 'its missing a description line'\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/53", "title": "Cypher: WHERE following updates should not be allowed", "closed": "2013-10-01 09:56:47", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:23:15", "user": "lassewesth", "body": "@systay: 'This query should throw an error saying that the user can't read the graph after updating it, without first using WITH.\n\n```\nstart n=node(0) \nset n.foo = 2 \nwhere n.foo = 2 \nreturn n\n```\n\nhttp://console.neo4j.org/r/s3zyn3\n\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/47", "title": "Lists not indexable via the REST API", "closed": "2013-10-01 09:56:57", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:23:09", "user": "lassewesth", "body": "@ZackGC: 'While using the REST API and the batch methods, indexing via an array causes errors, i.e. \n\"Unknown property type on: [104e08f3a15c49f1809dfbef2a4f5ec8], class java.util.ArrayList\"\n\nMichael Hunger and Peter Neubauer have advised me on the simple fix to this problem. I'm taking a shot at fixing this now. \n-Zack '\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/46", "title": "Cypher head(tail(head(...))) fails on aggregated data, works on fixed data", "closed": "2013-03-04 12:23:14", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 13:23:08", "user": "lassewesth", "body": "@jexp: '\n\n```\nstart n=node(1) \nwhere has(n.name) \nwith id(n) as id, n.name as name, count(*) as cnt \nwith id, collect([name,cnt]) as data \nreturn filter(x in data : head(x)=\"Neo\") as cnt\n+-------------+\n| cnt         |\n+-------------+\n| [[\"Neo\",1]] |\n+-------------+\n1 row\n0 ms\n\n\nstart n=node(1) \nwhere has(n.name) \nwith id(n) as id, n.name as name, count(*) as cnt \nwith id, collect([name,cnt]) as data \nreturn head(filter(x in data : head(x)=\"Neo\")) as cnt\n+-----------+\n| cnt       |\n+-----------+\n| [\"Neo\",1] |\n+-----------+\n1 row\n0 ms\n\n\nstart n=node(1) \nwhere has(n.name) \nwith id(n) as id, n.name as name, count(*) as cnt \nwith id, collect([name,cnt]) as data \nreturn tail(head(filter(x in data : head(x)=\"Neo\"))) as cnt\n+-----+\n| cnt |\n+-----+\n| [1] |\n+-----+\n1 row\n0 ms\n\n\nstart n=node(1) \nwhere has(n.name) \nwith id(n) as id, n.name as name, count(*) as cnt \nwith id, collect([name,cnt]) as data \nreturn head(tail(head(filter(x in data : head(x)=\"Neo\")))) as cnt\nError: `tail(head(filter(x in data : head(x) == Neo)))` expected to be a Collection but it is a Scalar\n```\n\nthis works:\n\n```\nstart n=node(0) \nreturn head(tail(head(filter(x in [[\"foo\",1]] : head(x)=\"foo\")))) as cnt\n+-----+\n| cnt |\n+-----+\n| 1   |\n+-----+\n1 row\n0 ms\n```\n\nhttp://console.neo4j.org/r/zguxf6'\n"}, {"labels": ["bug", "team-cypher", "team-kernel"], "url": "https://github.com/neo4j/neo4j/issues/37", "title": "Support \"repeatable read\" within a single cypher statement", "closed": "2018-04-09 09:12:52", "commitsDetails": [], "commits": {}, "ttf": 1973.0002777777777, "created": "2012-11-12 13:23:01", "user": "lassewesth", "body": "_NOTE: This description has been updated, the original description is at the bottom_\n\nWhile Neo4j primitives are `read committed`, Cypher composes these primitives together in ways that can lead to errors - notably cypher may read an entity that is subsequently deleted, and will then fail to perform some operation on it.\n\nWhile this could be construed as a cypher issue, it is really an issue of isolation levels - we need to implement `repeatable read` isolation in the kernel to allow cypher to expose a single cypher statement as a read committed operation.\n### If you suspect an isolation issue\n\nIf you believe you are hitting a problem related to transaction isolation levels, please post a comment on this ticket with:\n- Any setup required\n- All cypher statements involved\n- What you expected the result to be\n- What the result actually is\n- Your Neo4j version, Java version and operating system\n## Workarounds\n### Lock the read set\n\nMany (but not all) of the cases where this is an issue have a format like:\n\n```\n<match some stuff>\n<perform some mutation>\n```\n\nFor this category of statements, we suffer the same problem as SQL solves with `SELECT ... FOR UPDATE`. Cypher does not yet support a construct like that, but it can be emulated using the following pattern:\n\n```\n<match some stuff>\n<set a property, for instance __lock__>\nWITH <stuff>\n<perform some mutation>\n```\n\nFor example:\n\n```\nMATCH (n:Person)\nSET n.__lock__ = 1\nWITH n\nSET n.description = \"Some description\"\n```\n### Retry transaction\n\nParticularly for small read operations and small writes, given the transactional nature of Neo4j, you can rollback and retry any transaction where a statement fails due to this issue. A common pattern for this is to model your query as a unit of work that can be retried.\n## Original message\n\n@peterneubauer: 'See https://groups.google.com/group/neo4j/browse_thread/thread/9355edd2059d70e2/a51d06c894107327?lnk=gst&q=Concurrent+reading+and+deleting+on+relationships+leads+to+NotFoundException.+How+to+ignore%3F#a51d06c894107327 for background.\n\nExample code is at http://code.google.com/p/graph-query-benchmarks/source/browse/trunk/graph-query-benchmarks/src/test/nz/ac/massey/cs/graphbenchmarks/spikes/neo4j/NeoIssues.java'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/35", "title": "Neo4j won't install. Doesn't see Java RE", "closed": "2014-11-10 19:39:24", "commitsDetails": [], "commits": {}, "ttf": 728.0002777777778, "created": "2012-11-12 13:22:57", "user": "lassewesth", "body": "@BobZ123BobZ: 'C:\\Neo4j\\neo4j-community-1.8.RC1\\bin>Neo4j.bat\nUnable to locate jvm. Could not find HKLM\\SOFTWARE\\JavaSoft\\Java Runtime Environ\nment/CurrentVersion entry in windows registry.\n\nWhen I run the Java Download, it comes back and says:\n\nYou have the recommended Java installed (Version 7 Update 7).\n'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/27", "title": "'Node concurrently deleted while loading its relationships' error when issuing concurrent 'delete all' Cypher query", "closed": "2015-12-05 05:35:34", "commitsDetails": [], "commits": {}, "ttf": 1117.0002777777777, "created": "2012-11-12 13:22:46", "user": "lassewesth", "body": "@blevine: 'Environment:\n  Neo4j Communit 1.8GA\n  Ubuntu 12.04\n  Oracle JDK 1.6.0_32-b05\n  Node.js/node-neo4j driver\n\nThis problem is most likely related to issue [#872](https://github.com/neo4j/community/issues/872). After running a similar test for a while, I see the following error:\n\n```\n\"Node[1877] concurrently deleted while loading its relationships?\"\n```\n\nas a result of the following 'delete all' query:\n\n```\nstart n = node(*) match n-[r?]-() delete r,n\n```\n\nAt this point all attempts to execute that query (both programmatically and from the Data Browser) result in the same error. Nothing appears in the log related to this error.\n\nI then went to the Data Browser and was able to view Node 1877 although all of its properties had been deleted.  I then restarted the server after which Node 1877 disappeared (according to the Data Browser).  I was then able to issue the 'delete all' query successfully.'\n"}, {"labels": ["bug"], "url": "https://github.com/neo4j/neo4j/issues/25", "title": "Inserting single property using BatchInserter causes InvalidRecordException", "closed": "2013-03-04 12:16:05", "commitsDetails": [], "commits": {}, "ttf": 111.00027777777778, "created": "2012-11-12 13:22:45", "user": "lassewesth", "body": "@lassewesth: ''\n"}, {"labels": ["browser", "bug"], "url": "https://github.com/neo4j/neo4j/issues/24", "title": "Using property names with special characters in style in Data Browser does not work", "closed": "2013-10-01 09:57:27", "commitsDetails": [], "commits": {}, "ttf": 322.0002777777778, "created": "2012-11-12 13:22:45", "user": "lassewesth", "body": "@blevine: 'We have property names on nodes and relationships that use period '.' separators. This doesn't present a problem in Cypher queries as we just escape the property name by surrounding it with back single quotes. However, we can't seem to get these properties to display in the graph view of the Data Browser.  When we specify something like {Node.name} in the style, \"{Node.name}\" is displayed rather than the value of that property. Using back single quotes here doesn't seem to work.\n\nSee discusion here https://groups.google.com/d/topic/neo4j/fCAt9p9uOpw/discussion'\n"}, {"labels": ["bug", "cypher"], "url": "https://github.com/neo4j/neo4j/issues/20", "title": "Cypher's ExecutionResult is traversable only once, but it is an Iterable - document this", "closed": "2015-12-05 05:36:22", "commitsDetails": [], "commits": {}, "ttf": 1117.0002777777777, "created": "2012-11-12 13:22:42", "user": "lassewesth", "body": "@wujek-srujek: 'I am using the ExecutionEngine / ExecutionResult classes form the 'javacompat' package. The following  code:\n\n``` groovy\n        ExecutionResult res = new ExecutionEngine(graphDb).execute('start from = node({from}) match from-[:IS_PART_OF]->t return t', [from: node])\n        println '> first traversal start'\n        for (def o : res) {\n            println o['t']\n        }\n        println '> first traversal end'\n        println '> second traversal start'\n        for (def o : res) {\n            println o['t']\n        }\n        println '> second traversal end'\n```\n\nresults in:\n\n> first traversal start\n> Node[3]\n> first traversal end\n> second traversal start\n> second traversal end\n\nThe second traversal (calling iterator() for the second time) yields an Scala iterator whose toString() method says 'empty iterator'.\nOn the other hand, when people see an Iterable, they most likely expect it to be traversable more than once. If some API, like this one, doesn't implement this, it must be documented.\n\nI know this can be too late, but how about changing the result types to Iterator? This will mean it can be traversed only once and be clearly documented by the API itself.'\n"}, {"labels": ["bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/16", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"9ac9db28664cb24f69eefc6dc6ffad165793c37e": {"commitUser": "davidegrohmann", "commitGHEventType": "referenced"}}, "ttf": 322.0002777777778, "user": "lassewesth", "changesInPackagesSPOON": [], "changesInPackagesGIT": [], "body": "@blevine: 'Neo4j 1.8GA\n\nSteps to reproduce:\n\nOpen the neo4j Web UI in a browser\nNavigate to the Data Browser tab.\nDisplay an existing Node or create a new one.\nModify a property of the Node and click the 'Save' button.\n\nTwo PUT requests are issued to db/data/node/{id}'\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 1, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 0, "UPD": 0, "TOT": 0, "DEL": 0, "INS": 0, "spoonFilesChanged": 0, "MOV": 0}, "title": "Data Browser UI issues 2 PUT requests when an entity is modified and saved", "statsSkippedReason": "", "closed": "2013-10-01 09:57:55", "commitsDetails": [{"commitUser": "davidegrohmann", "commitDateTime": "2017-05-08 14:20:25", "commitHash": "9ac9db28664cb24f69eefc6dc6ffad165793c37e", "commitParents": ["7b0b7a6aa4b0cc227df4d444ca75ff8887c9a2e6", "931516331d03b91349dc6339679ff0b667d4fcf6"], "commitGHEventType": "referenced", "nameRev": "9ac9db28664cb24f69eefc6dc6ffad165793c37e tags/3.3.0-alpha01~104", "commitGitStats": [{"insertions": 2, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StoreAbstractIteratorRelationshipCursor.java => AbstractIteratorRelationshipCursor.java}", "deletions": 2}, {"insertions": 7, "lines": 14, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StoreNodeRelationshipCursor.java => NodeRelationshipCursor.java}", "deletions": 7}, {"insertions": 61, "lines": 61, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/pool/LinkedQueuePoolMonitor.java", "deletions": 0}, {"insertions": 4, "lines": 70, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/txstate/RelationshipState.java", "deletions": 66}, {"insertions": 10, "lines": 20, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/GlobalCursorPools.java", "deletions": 10}, {"insertions": 6, "lines": 11, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StoreSingleRelationshipCursor.java => SingleRelationshipCursor.java}", "deletions": 5}, {"insertions": 9, "lines": 22, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StorePropertyCursor.java => PropertyCursor.java}", "deletions": 13}, {"insertions": 4, "lines": 69, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/txstate/NodeState.java", "deletions": 65}, {"insertions": 1, "lines": 1, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/NodeCursor.java", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StoreAbstractRelationshipCursor.java => AbstractRelationshipCursor.java}", "deletions": 2}, {"insertions": 12, "lines": 25, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/{StoreNodeRelationshipCursorTest.java => NodeRelationshipCursorTest.java}", "deletions": 13}, {"insertions": 64, "lines": 64, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/txstate/PropertyContainerState.java", "deletions": 0}, {"insertions": 6, "lines": 27, "filePath": "community/primitive-collections/src/test/java/org/neo4j/collection/pool/LinkedQueuePoolTest.java", "deletions": 21}, {"insertions": 25, "lines": 25, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/pool/CheckStrategy.java", "deletions": 0}, {"insertions": 7, "lines": 14, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/{StoreIteratorRelationshipCursorTest.java => IteratorRelationshipCursorTest.java}", "deletions": 7}, {"insertions": 1, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/record/PropertyRecord.java", "deletions": 1}, {"insertions": 4, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storemigration/participant/StoreMigrator.java", "deletions": 3}, {"insertions": 4, "lines": 86, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/pool/LinkedQueuePool.java", "deletions": 82}, {"insertions": 42, "lines": 83, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/{StorePropertyCursorTest.java => PropertyCursorTest.java}", "deletions": 41}, {"insertions": 3, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/unsafe/batchinsert/internal/BatchRelationshipIterable.java", "deletions": 4}, {"insertions": 53, "lines": 53, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/pool/TimeoutCheckStrategy.java", "deletions": 0}, {"insertions": 6, "lines": 12, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/{StoreSingleRelationshipCursorTest.java => SingleRelationshipCursorTest.java}", "deletions": 6}, {"insertions": 5, "lines": 10, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StoreIteratorRelationshipCursor.java => IteratorRelationshipCursor.java}", "deletions": 5}, {"insertions": 21, "lines": 43, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/{StorePropertyPayloadCursorTest.java => PropertyPayloadCursorTest.java}", "deletions": 22}, {"insertions": 6, "lines": 12, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StoreSinglePropertyCursor.java => SinglePropertyCursor.java}", "deletions": 6}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StorePropertyPayloadCursor.java => PropertyPayloadCursor.java}", "deletions": 2}, {"insertions": 7, "lines": 13, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StoreAbstractPropertyCursor.java => AbstractPropertyCursor.java}", "deletions": 6}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursor.doClose()"}, {"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursor"}, {"UPD": 4, "TOT": 6, "DEL": 1, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursor.init(long,org.neo4j.kernel.impl.locking.Lock,org.neo4j.storageengine.api.txstate.PropertyContainerState)"}, {"UPD": 2, "TOT": 5, "DEL": 1, "INS": 0, "MOV": 2, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursor.nextAdded()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursor.nextAdded()"}], "spoonFilePath": "PropertyCursor.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.next()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.otherNode(long)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.endNode()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.visit(long,int,long,long)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.nextPropertyId()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.dispose()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.id()"}, {"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.lock()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.close()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.startNode()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.get()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractRelationshipCursor.type()"}], "spoonFilePath": "AbstractRelationshipCursor.java"}, {"spoonMethods": [{"UPD": 16, "TOT": 16, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.init(boolean,long,long,org.neo4j.storageengine.api.Direction,java.util.function.IntPredicate,org.neo4j.storageengine.api.txstate.ReadableTransactionState,org.neo4j.collection.primitive.PrimitiveLongIterator)"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.init(boolean,long,long,org.neo4j.storageengine.api.Direction,org.neo4j.storageengine.api.txstate.ReadableTransactionState)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.dispose()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.toString()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.close()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.init(boolean,long,long,org.neo4j.storageengine.api.Direction,int[],org.neo4j.storageengine.api.txstate.ReadableTransactionState)"}, {"UPD": 6, "TOT": 6, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.GroupChain"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.GroupChain.1"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.GroupChain.3"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.GroupChain.2"}, {"UPD": 8, "TOT": 8, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor"}, {"UPD": 17, "TOT": 17, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.doFetchNext()"}, {"UPD": 18, "TOT": 18, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursor.nextChainStart()"}], "spoonFilePath": "NodeRelationshipCursor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.TimeoutCheckStrategy"}], "spoonFilePath": "TimeoutCheckStrategy.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractIteratorRelationshipCursor.close()"}, {"UPD": 11, "TOT": 11, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractIteratorRelationshipCursor.fetchNext()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractIteratorRelationshipCursor.internalInitTxState(org.neo4j.storageengine.api.txstate.ReadableTransactionState,org.neo4j.collection.primitive.PrimitiveLongIterator)"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractIteratorRelationshipCursor"}], "spoonFilePath": "AbstractIteratorRelationshipCursor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.getId()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.storageengine.api.txstate.EmptyRelationshipState"}, {"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.storageengine.api.txstate"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.accept(org.neo4j.kernel.impl.api.RelationshipVisitor)"}], "spoonFilePath": "RelationshipState.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool"}], "spoonFilePath": "LinkedQueuePoolMonitor.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSinglePropertyCursor.init(int,long,org.neo4j.kernel.impl.locking.Lock,org.neo4j.storageengine.api.txstate.PropertyContainerState)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSinglePropertyCursor.nextAdded()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSinglePropertyCursor.loadNextFromDisk()"}, {"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSinglePropertyCursor"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSinglePropertyCursor.doClose()"}], "spoonFilePath": "SinglePropertyCursor.java"}, {"spoonMethods": [{"UPD": 6, "TOT": 6, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.close()"}, {"UPD": 11, "TOT": 11, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.readFromStore(org.neo4j.kernel.impl.store.CommonAbstractStore,org.neo4j.io.pagecache.PageCursor)"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.dispose()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.type()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.propertyKeyId()"}, {"UPD": 29, "TOT": 29, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.value()"}, {"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.init(java.util.function.IntPredicate,long[],int)"}, {"UPD": 13, "TOT": 13, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.next()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.currentBlocksUsed()"}, {"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.valueAsBits()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.currentHeader()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursor.newBiggerBuffer(int)"}], "spoonFilePath": "PropertyPayloadCursor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.relationshipTypes()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.getAddedRelationships(org.neo4j.storageengine.api.Direction,int[])"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.labelDiffSets()"}, {"UPD": 0, "TOT": 2, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.storageengine.api.txstate"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.augmentDegree(org.neo4j.storageengine.api.Direction,int,int)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.getAddedRelationships(org.neo4j.storageengine.api.Direction)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.accept(org.neo4j.storageengine.api.txstate.NodeState$Visitor)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.augmentLabels(org.neo4j.collection.primitive.PrimitiveIntSet)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.augmentDegree(org.neo4j.storageengine.api.Direction,int)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 1, "spoonMethodName": "org.neo4j.storageengine.api.txstate.1.getId()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.storageengine.api.txstate.EmptyNodeState"}], "spoonFilePath": "NodeState.java"}, {"spoonMethods": [], "spoonFilePath": "PropertyRecord.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.NodeCursor.close()"}], "spoonFilePath": "NodeCursor.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor.close()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor.doFetchNext()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor.addedRelationships(org.neo4j.storageengine.api.txstate.ReadableTransactionState)"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor.init(org.neo4j.collection.primitive.PrimitiveLongIterator,org.neo4j.storageengine.api.txstate.ReadableTransactionState)"}], "spoonFilePath": "IteratorRelationshipCursor.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursorTest.retrieveUnusedRelationship()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursorTest.shouldCloseThePageCursorWhenDisposed()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursorTest.retrieveUsedRelationship()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursorTest"}, {"UPD": 8, "TOT": 8, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursorTest.createRelationshipCursor(boolean)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursorTest.noCache(org.neo4j.kernel.impl.api.store.StoreIteratorRelationshipCursor)"}], "spoonFilePath": "IteratorRelationshipCursorTest.java"}, {"spoonMethods": [{"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.createNodeRelationships()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.shouldHandleDenseNodeWithNoRelationships()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.createRelationshipGroup(long,long)"}, {"UPD": 19, "TOT": 19, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.shouldObserveCorrectAugmentedNodeRelationshipsState()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.nodeRelationshipCursor()"}, {"UPD": 11, "TOT": 11, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.cursor(long,java.util.Map,org.neo4j.kernel.impl.api.state.TxState,org.neo4j.storageengine.api.Direction,int[])"}, {"UPD": 10, "TOT": 10, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.shouldClosePageCursorsWhenDisposed()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.setupStores()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.getFirstIn(long)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.relationshipsForNode(long,java.util.Map,org.neo4j.storageengine.api.Direction,int[])"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.getFirstLoop(long)"}, {"UPD": 12, "TOT": 12, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.retrieveNodeRelationships()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.createRelationship(long,long)"}, {"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.retrieveRelationshipChainWithUnusedLink()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.assertRelationshipEquals(org.neo4j.storageengine.api.RelationshipItem,org.neo4j.storageengine.api.RelationshipItem)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.getFirstNode()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.getSecondNode()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.createRelationshipChain(int)"}, {"UPD": 6, "TOT": 6, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.retrieveUsedRelationshipChain()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.randomTypes(int,java.util.Random)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreNodeRelationshipCursorTest.getFirstOut(long)"}], "spoonFilePath": "NodeRelationshipCursorTest.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor.close()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor.loadNextRecord()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.SingleRelationshipCursor.close()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor.fetchFromTxState()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor.isDeletedInTx()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor.init(long,org.neo4j.storageengine.api.txstate.ReadableTransactionState)"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor.fetchNext()"}], "spoonFilePath": "SingleRelationshipCursor.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool"}], "spoonFilePath": "CheckStrategy.java"}, {"spoonMethods": [{"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.shouldReclaimAndRecreateWhenLullBetweenSpikesOccurs()"}, {"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.FakeClock"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.shouldMaintainPoolAtHighWatermarkWhenConcurrentUsagePassesMinSize()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.shouldKeepSmallPeakAndNeverDisposeIfAcquireAndReleaseContinuously()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.shouldTimeoutGracefully()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.shouldSlowlyReduceTheNumberOfFlyweightsInThePoolWhenFlyweightsAreReleased()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.buildAPeakOfAcquiredFlyweightsAndTriggerAlarmWithSideEffects(int,org.neo4j.collection.pool.LinkedQueuePoolTest$FakeClock,org.neo4j.collection.pool.LinkedQueuePool,java.util.List)"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.shouldBuildUpGracefullyWhilePassingMinPoolSizeBeforeTimerRings()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.getLinkedQueuePool(org.neo4j.collection.pool.LinkedQueuePoolTest$StatefulMonitor,org.neo4j.collection.pool.LinkedQueuePoolTest$FakeClock,int)"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.shouldUpdateTargetSizeWhenSpikesOccur()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePoolTest.shouldBuildUpGracefullyUntilReachedMinPoolSize()"}], "spoonFilePath": "LinkedQueuePoolTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursorTest.noCache(org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursor)"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursorTest.getStoreFactory()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursorTest.createRelationshipCursor()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursorTest.retrieveUnusedRelationship()"}, {"UPD": 6, "TOT": 6, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursorTest.retrieveUsedRelationship()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursorTest"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursorTest.setUp()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreSingleRelationshipCursorTest.tearDown()"}], "spoonFilePath": "SingleRelationshipCursorTest.java"}, {"spoonMethods": [{"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.SingleAndMultipleValuePayload.shouldReturnCorrectValues()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.nextShouldAlwaysReturnFalseWhenNotInitialized()"}, {"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.newDynamicStoreMock(java.lang.Class)"}, {"UPD": 9, "TOT": 9, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.shouldClosePageCursorWhenDisposed()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.shouldBePossibleToCallCloseOnEmptyCursor()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.Param.toString()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.shouldBeOkToClosePartiallyExhaustedCursor()"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.nextMultipleInvocations()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.SingleAndMultipleValuePayload"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.createCursor(java.util.function.IntPredicate,org.neo4j.kernel.impl.store.DynamicStringStore,org.neo4j.kernel.impl.store.DynamicArrayStore,org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest$Param[])"}, {"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.SingleAndMultipleValuePayload.shouldReturnCorrectSingleValueOrNone()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.singleProperty(int,org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest$Params)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.Params.iterator()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.Params.params(org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest$Param[])"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.shouldBeOkToCloseExhaustedCursor()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.SingleAndMultipleValuePayload.shouldReturnNothingForNonExistentPropertyKeyId()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.Params.toString()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.shouldBeOkToCloseAnUnusedCursor()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.allProperties(org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest$Params)"}, {"UPD": 9, "TOT": 9, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.shouldUseDynamicStringAndArrayStoresThroughDifferentCursors()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.Param.paramArg(int,java.lang.Object,org.neo4j.kernel.impl.store.PropertyType)"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.Param"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.Params"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.nextShouldAlwaysReturnFalseWhenClosed()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.asBlocks(org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest$Param[])"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.BasicContract.shouldBePossibleToCallNextOnEmptyCursor()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest.assertNextAndSameValue(boolean,org.neo4j.kernel.impl.api.store.StorePropertyPayloadCursorTest$Param,org.neo4j.kernel.impl.store.PropertyType,java.lang.Object)"}], "spoonFilePath": "PropertyPayloadCursorTest.java"}, {"spoonMethods": [{"UPD": 4, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 3, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePool.TimeoutCheckStrategy"}, {"UPD": 4, "TOT": 9, "DEL": 5, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.collection.pool.LinkedQueuePool"}], "spoonFilePath": "LinkedQueuePool.java"}, {"spoonMethods": [{"UPD": 5, "TOT": 5, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.GlobalCursorPools"}], "spoonFilePath": "GlobalCursorPools.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.propertyKeyId()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.dispose()"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.initialize(java.util.function.IntPredicate,long,org.neo4j.kernel.impl.locking.Lock,org.neo4j.storageengine.api.txstate.PropertyContainerState)"}, {"UPD": 7, "TOT": 9, "DEL": 2, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.payloadHasNext()"}, {"UPD": 17, "TOT": 17, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.fetchNext()"}, {"UPD": 7, "TOT": 7, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 2, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.AbstractPropertyCursor.payloadHasNext()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.get()"}, {"UPD": 9, "TOT": 9, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.close()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.next()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.AbstractPropertyCursor.close()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StoreAbstractPropertyCursor.value()"}], "spoonFilePath": "AbstractPropertyCursor.java"}, {"spoonMethods": [{"UPD": 3, "TOT": 4, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.skipUnusedConsecutiveRecordsInChain()"}, {"UPD": 11, "TOT": 12, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.TwoValueProperties.shouldReturnAPropertyBySkippingOne()"}, {"UPD": 19, "TOT": 19, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.CloseDisposeTest.shouldClosePageCursorsOnDispose()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.TwoValueProperties"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.readPropertyChainWithLongStringDynamicRecordsNotInUse()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.BigProperty"}, {"UPD": 3, "TOT": 4, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyChainWithLongStringDynamicRecordsNotInUse()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyValueWhenSomeLongStringDynamicRecordsAreNotInUse()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.verifyPropertyValue(java.lang.String,long)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.skipAllRecordsWhenWholeChainNotInUse()"}, {"UPD": 12, "TOT": 14, "DEL": 2, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.CursorReuse.shouldReuseCorrectlyCursor()"}, {"UPD": 3, "TOT": 3, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.BigProperty.toString()"}, {"UPD": 3, "TOT": 4, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.skipAllRecordsWhenWholeChainNotInUse()"}, {"UPD": 8, "TOT": 9, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.SingleValueProperties.shouldReturnAProperty()"}, {"UPD": 3, "TOT": 4, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyChainWithLongArrayDynamicRecordsNotInUse()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.actualValue(java.lang.Object)"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.BigProperty.value()"}, {"UPD": 11, "TOT": 12, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.TwoValueProperties.shouldReturnTwoProperties()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.readPropertyChainWithMultipleEntries()"}, {"UPD": 9, "TOT": 10, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.callNextAfterReadingPropertyChain()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyValueWhenAllLongStringDynamicRecordsAreNotInUse()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.skipUnusedConsecutiveRecordsInChain()"}, {"UPD": 15, "TOT": 15, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.CloseDisposeTest"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyValueWhenAllLongArrayDynamicRecordsAreNotInUse()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.CursorReuse"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.callNextAfterReadingPropertyChain()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.asPropertyValuesList(org.neo4j.kernel.impl.api.store.StorePropertyCursor)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.verifyPropertyValue(byte[],long)"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.SingleValueProperties.shouldReturnAProperty()"}, {"UPD": 5, "TOT": 6, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.verifyPropertyValue(byte[],long)"}, {"UPD": 9, "TOT": 10, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.CloseDisposeTest.shouldReturnTheCursorToTheCacheOnClose()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.TwoValueProperties.shouldReturnAPropertyBySkippingOne()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.CloseDisposeTest.shouldReturnTheCursorToTheCacheOnClose()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyValueWhenSomeLongArrayDynamicRecordsAreNotInUse()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.SingleValueProperties"}, {"UPD": 0, "TOT": 2, "DEL": 0, "INS": 2, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.CursorReuse.shouldReuseCorrectlyCursor()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.TwoValueProperties.shouldReturnTwoProperties()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyValueWhenFirstLongStringDynamicRecordIsNotInUse()"}, {"UPD": 3, "TOT": 4, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.skipUnusedRecordsInChain()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.skipUnusedRecordsInChain()"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.PropertyCursorTest.PropertyChains.readPropertyChainWithLongArrayDynamicRecordsNotInUse()"}, {"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyValueWhenFirstLongArrayDynamicRecordIsNotInUse()"}, {"UPD": 3, "TOT": 4, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.readPropertyChainWithMultipleEntries()"}, {"UPD": 2, "TOT": 2, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.newStorePropertyCursor(org.neo4j.kernel.impl.store.PropertyStore)"}, {"UPD": 5, "TOT": 6, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.PropertyChains.verifyPropertyValue(java.lang.String,long)"}, {"UPD": 4, "TOT": 4, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.api.store.StorePropertyCursorTest.assertEqualValues(java.lang.Object,org.neo4j.storageengine.api.PropertyItem)"}], "spoonFilePath": "PropertyCursorTest.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 1, "DEL": 0, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.unsafe.batchinsert.internal.BatchRelationshipIterable"}], "spoonFilePath": "BatchRelationshipIterable.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.storageengine.api.txstate.EmptyPropertyContainerState"}, {"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.storageengine.api.txstate"}], "spoonFilePath": "PropertyContainerState.java"}, {"spoonMethods": [{"UPD": 1, "TOT": 3, "DEL": 1, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.kernel.impl.storemigration.participant.StoreMigrator.propertyDecorator(boolean,org.neo4j.kernel.impl.store.PropertyStore)"}], "spoonFilePath": "StoreMigrator.java"}], "commitMessage": "Merge pull request #16 from davidegrohmann/3.3-cleanup\n\nFinal cleanup\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2017-05-08 10:28:32"}], "created": "2012-11-12 13:22:40"}, {"labels": ["bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/15", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"7b0b7a6aa4b0cc227df4d444ca75ff8887c9a2e6": {"commitUser": "davidegrohmann", "commitGHEventType": "referenced"}}, "ttf": 322.0002777777778, "user": "lassewesth", "changesInPackagesGIT": [], "body": "@aseemk: 'Simpler than it sounds:\n1. Open up the wedadmin.\n2. Click on the console tab.\n3. Change to a different console, e.g. Gremlin or HTTP.\n\nSee how the URL says `#/console/gremlin` or `#/console/http`? That's good -- the URL reflects the state of the webadmin.\n\nNow reload, or copy/paste the URL into a new tab. Note how the correct console isn't loaded by default. That's the bug.\n\nBut it's a bit worse: clicking the shell you want to load it also won't work if it's the same as the URL. You have to first manually switch to a different shell in order to be able to switch to the shell you want.'\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 1, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "Webadmin regression: console doesn't respect initial URL", "statsSkippedReason": "", "closed": "2013-10-01 09:59:46", "commitsDetails": [{"commitUser": "davidegrohmann", "commitDateTime": "2017-05-08 14:20:24", "commitHash": "7b0b7a6aa4b0cc227df4d444ca75ff8887c9a2e6", "commitParents": ["530cd9dd6f2874f7121a6905d6d7ad1a6b42f376", "464fac36cb0215e369d99bef8a4d867a157d5421"], "commitGHEventType": "referenced", "nameRev": "7b0b7a6aa4b0cc227df4d444ca75ff8887c9a2e6 tags/3.3.0-alpha01~105", "commitGitStats": [{"insertions": 1, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/factory/DataSourceModule.java", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/state/machines/token/ReplicatedTokenHolder.java", "deletions": 2}, {"insertions": 34, "lines": 58, "filePath": "enterprise/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StoreParallelNodeScanIntegrationTest.java", "deletions": 24}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/LockingStatementOperationsTest.java", "deletions": 2}, {"insertions": 7, "lines": 9, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/AllRelationshipIterator.java", "deletions": 2}, {"insertions": 0, "lines": 3, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/EnterpriseCoreEditionModule.java", "deletions": 3}, {"insertions": 26, "lines": 49, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storageengine/impl/recordstorage/RecordStorageEngine.java", "deletions": 23}, {"insertions": 4, "lines": 8, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreIteratorRelationshipCursor.java", "deletions": 4}, {"insertions": 0, "lines": 284, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreStatement.java", "deletions": 284}, {"insertions": 9, "lines": 22, "filePath": "community/kernel/src/test/java/org/neo4j/test/rule/RecordStorageEngineRule.java", "deletions": 13}, {"insertions": 7, "lines": 15, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/KernelTransactionImplementation.java", "deletions": 8}, {"insertions": 0, "lines": 23, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/api/TransactionStatementSharingTest.java", "deletions": 23}, {"insertions": 2, "lines": 11, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StorageLayerPropertyTest.java", "deletions": 9}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/spi/v3_2/TransactionBoundQueryContextTest.scala", "deletions": 2}, {"insertions": 70, "lines": 70, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/SchemaResources.java", "deletions": 0}, {"insertions": 6, "lines": 11, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreSingleRelationshipCursor.java", "deletions": 5}, {"insertions": 0, "lines": 3, "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/factory/HighlyAvailableEditionModule.java", "deletions": 3}, {"insertions": 3, "lines": 12, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StoreIteratorRelationshipCursorTest.java", "deletions": 9}, {"insertions": 57, "lines": 119, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StorageLayer.java", "deletions": 62}, {"insertions": 6, "lines": 12, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/KernelStatementTest.java", "deletions": 6}, {"insertions": 4, "lines": 15, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StorageLayerNodeAndRelTest.java", "deletions": 11}, {"insertions": 92, "lines": 92, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreSchemaResources.java", "deletions": 0}, {"insertions": 1, "lines": 3, "filePath": "community/kernel/src/test/java/org/neo4j/test/rule/NeoStoreDataSourceRule.java", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/KernelTransactionImplementationTest.java", "deletions": 2}, {"insertions": 23, "lines": 55, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/coreapi/TxStateTransactionDataViewTest.java", "deletions": 32}, {"insertions": 6, "lines": 6, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/state/RelationshipChangesForNode.java", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/command/IndexWorkSyncTransactionApplicationStressIT.java", "deletions": 2}, {"insertions": 0, "lines": 77, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/StatementLifecycleTest.java", "deletions": 77}, {"insertions": 1, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/TransactionHook.java", "deletions": 2}, {"insertions": 5, "lines": 5, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/core/NodeProxySingleRelationshipTest.java", "deletions": 0}, {"insertions": 10, "lines": 41, "filePath": "enterprise/kernel/src/main/java/org/neo4j/kernel/impl/enterprise/PropertyExistenceEnforcer.java", "deletions": 31}, {"insertions": 8, "lines": 21, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/txstate/TransactionCountingStateVisitor.java", "deletions": 13}, {"insertions": 72, "lines": 72, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/CursorPool.java", "deletions": 0}, {"insertions": 7, "lines": 14, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/api/KernelTransactionFactory.java", "deletions": 7}, {"insertions": 23, "lines": 48, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/StateHandlingStatementOperationsTest.java", "deletions": 25}, {"insertions": 1, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/CursorRelationshipIterator.java", "deletions": 1}, {"insertions": 6, "lines": 9, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/core/RelationshipConversion.java", "deletions": 3}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/StorageEngine.java", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/KernelStatement.java", "deletions": 2}, {"insertions": 25, "lines": 66, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/StateHandlingStatementOperations.java", "deletions": 41}, {"insertions": 6, "lines": 13, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StoreSingleRelationshipCursorTest.java", "deletions": 7}, {"insertions": 23, "lines": 56, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/StateOperationsAutoIndexingTest.java", "deletions": 33}, {"insertions": 5, "lines": 10, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StorageLayerLabelTest.java", "deletions": 5}, {"insertions": 12, "lines": 24, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/KernelTransactionsTest.java", "deletions": 12}, {"insertions": 4, "lines": 8, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/StatementOperationsTestHelper.java", "deletions": 4}, {"insertions": 0, "lines": 1, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/KernelTransactions.java", "deletions": 1}, {"insertions": 15, "lines": 32, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/IndexQueryTransactionStateTest.java", "deletions": 17}, {"insertions": 3, "lines": 6, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/internal/TransactionEventHandlers.java", "deletions": 3}, {"insertions": 1, "lines": 2, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StorageLayerTest.java", "deletions": 1}, {"insertions": 3, "lines": 7, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/integrationtest/TransactionHookIT.java", "deletions": 4}, {"insertions": 0, "lines": 35, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storageengine/impl/recordstorage/StorageStatementFactory.java", "deletions": 35}, {"insertions": 3, "lines": 6, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/core/state/machines/token/ReplicatedTokenHolderTest.java", "deletions": 3}, {"insertions": 0, "lines": 84, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/InstanceCache.java", "deletions": 84}, {"insertions": 3, "lines": 7, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/{StoreStatementTest.java => StoreSchemaResourcesTest.java}", "deletions": 4}, {"insertions": 44, "lines": 110, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/store/NeoStoresTest.java", "deletions": 66}, {"insertions": 7, "lines": 8, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/RelationshipIterator.java", "deletions": 1}, {"insertions": 6, "lines": 6, "filePath": "community/cypher/cypher/src/main/java/org/neo4j/cypher/internal/codegen/CompiledExpandUtils.java", "deletions": 0}, {"insertions": 2, "lines": 5, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/TransactionHooks.java", "deletions": 3}, {"insertions": 4, "lines": 8, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/KernelTransactionTestBase.java", "deletions": 4}, {"insertions": 1, "lines": 6, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/NeoStoreDataSource.java", "deletions": 5}, {"insertions": 11, "lines": 32, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/coreapi/TxStateTransactionDataSnapshot.java", "deletions": 21}, {"insertions": 6, "lines": 12, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/SchemaTransactionStateTest.java", "deletions": 6}, {"insertions": 6, "lines": 15, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/core/NodeProxy.java", "deletions": 9}, {"insertions": 0, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/factory/EditionModule.java", "deletions": 3}, {"insertions": 8, "lines": 19, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/KernelStatementImplementation.java", "deletions": 11}, {"insertions": 0, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/factory/CommunityEditionModule.java", "deletions": 3}, {"insertions": 15, "lines": 31, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/state/LabelTransactionStateTest.java", "deletions": 16}, {"insertions": 144, "lines": 144, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/GlobalCursorPools.java", "deletions": 0}, {"insertions": 5, "lines": 10, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StorageLayerRelTypesAndDegreeTest.java", "deletions": 5}, {"insertions": 4, "lines": 6, "filePath": "enterprise/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiled_runtime/v3_2/codegen/CodeGeneratorTest.scala", "deletions": 2}, {"insertions": 22, "lines": 53, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/StoreReadLayer.java", "deletions": 31}, {"insertions": 1, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/StorageCommand.java", "deletions": 1}, {"insertions": 2, "lines": 77, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/{StorageStatement.java => CursorPools.java}", "deletions": 75}, {"insertions": 0, "lines": 3, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/readreplica/EnterpriseReadReplicaEditionModule.java", "deletions": 3}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #15 from davidegrohmann/3.3-global-cursor-cache\n\nAdd Global Cursor Cache\n", "spoonStatsSkippedReason": "tooManyFiles", "authoredDateTime": "2017-05-02 16:00:36"}], "created": "2012-11-12 13:22:39"}, {"labels": ["bug", "cypher"], "filteredCommits": ["e3d733d6497ce985dd3d3c686ac7c54c997f5bed"], "url": "https://github.com/neo4j/neo4j/issues/4", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"e3d733d6497ce985dd3d3c686ac7c54c997f5bed": {"commitUser": "systay", "commitGHEventType": "referenced"}, "f9f03c28f4b333c0d454c73ff387dd8fe0ea21c4": {"commitUser": "davidegrohmann", "commitGHEventType": "referenced"}}, "ttf": 111.00027777777778, "user": "lassewesth", "changesInPackagesGIT": [], "body": "@blevine: 'Environment:\nNeo4j 1.8GA (also repro on 1.9 M01)\nUbuntu 12.04\nJava:\n  java version \"1.6.0_32\"\n Java(TM) SE Runtime Environment (build 1.6.0_32-b05)\n Java HotSpot(TM) 64-Bit Server VM (build 20.7-b02, mixed mode)\nHardware:\n  Quad core home-brew, 8 G memory\n\nI have a test that is designed to test out a retry strategy for dealing with deadlock exceptions.  The test creates 50 nodes and multiple relationships between one node and the next node. It then issues 50 DELETE queries against each of these nodes. The specific DELETE query is:\n\n```\nSTART n = node({neoId}) MATCH n-[r?]-() DELETE r, n\n```\n\nSome of these queries produce the error: \"Relationship[nnn] not in use\"\n\nOnce this error is seen, any Cypher query that would encounter that relationship returns the error:\n\n\"Relationship[nnn] not found. This can be because someone else deleted this entity while we were trying to read properties from it, or because of concurrent modification of other properties on this entity. The problem should be temporary.\"\n\nFor example, the query:\n\n```\nSTART r = rel(*) return r \n```\n\nwill return this error.  Also note that the query\n\n```\nSTART r = rel(*) return count(*) \n```\n\nwill return a non-zero value even though all of the relationships should have been deleted.\n\nThis condition persists until the database is restarted. \n\nThis appears to be a caching issue.  When the node cache is disabled by setting cache_type=none, this problem does not occur.\n\nI have a test (requires Node.js) that reproduces this problem at https://github.com/blevine/neo4j-concurrent-delete-test. The conc directory contains a full Node.js project.  You should be able to cd into conc and run npm test.  Or if you don't have npm installed, cd into conc and run node index.js'\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 1, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {}, "title": "'Relationship[nnn] in use error' when issuing concurrent Cypher DELETE queries when cache is enabled", "statsSkippedReason": "", "closed": "2013-03-04 12:06:37", "commitsDetails": [{"commitUser": "systay", "commitDateTime": "2015-03-31 08:06:13", "commitHash": "e3d733d6497ce985dd3d3c686ac7c54c997f5bed", "commitParents": ["b19b20093b99965058fd23d28b2c332d884b27be"], "commitGHEventType": "referenced", "nameRev": "e3d733d6497ce985dd3d3c686ac7c54c997f5bed tags/2.2.1~57", "commitGitStats": [{"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/ErrorMessagesTest.scala", "deletions": 1}], "commitSpoonAstDiffStats": [], "commitMessage": "Fix newline unit test problem on Windows - attempt #4\n", "spoonStatsSkippedReason": "", "authoredDateTime": "2015-03-31 08:06:13"}, {"commitUser": "davidegrohmann", "commitDateTime": "2017-05-08 14:20:10", "commitHash": "f9f03c28f4b333c0d454c73ff387dd8fe0ea21c4", "commitParents": ["c6f73a21bb5e63382c41bc430d245795d59ec1f9", "286ecb9924b3fa824f301f1b1e0ef5d7186857cb"], "commitGHEventType": "referenced", "nameRev": "f9f03c28f4b333c0d454c73ff387dd8fe0ea21c4 tags/3.3.0-alpha01~118", "commitGitStats": [{"insertions": 49, "lines": 49, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/AllNodeProgression.java", "deletions": 0}, {"insertions": 7, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/StateHandlingStatementOperations.java", "deletions": 0}, {"insertions": 6, "lines": 6, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/ConstraintEnforcingEntityOperations.java", "deletions": 0}, {"insertions": 7, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/GuardingStatementOperations.java", "deletions": 0}, {"insertions": 605, "lines": 605, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/NodeCursorTest.java", "deletions": 0}, {"insertions": 0, "lines": 64, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StoreSingleNodeCursorTest.java", "deletions": 64}, {"insertions": 51, "lines": 51, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/SingleNodeProgression.java", "deletions": 0}, {"insertions": 1, "lines": 15, "filePath": "community/consistency-check/src/test/java/org/neo4j/consistency/checking/full/FullCheckIntegrationTest.java", "deletions": 14}, {"insertions": 1, "lines": 2, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/state/NodeLabelsFieldTest.java", "deletions": 1}, {"insertions": 7, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StorageLayer.java", "deletions": 0}, {"insertions": 2, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/StorageStatement.java", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/StatementConstants.java", "deletions": 0}, {"insertions": 2, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/operations/EntityReadOperations.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/txstate/ReadableTransactionState.java", "deletions": 1}, {"insertions": 142, "lines": 142, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/integrationtest/NodeIT.java", "deletions": 0}, {"insertions": 33, "lines": 33, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/Progression.java", "deletions": 0}, {"insertions": 62, "lines": 133, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/{StoreSingleNodeCursor.java => NodeCursor.java}", "deletions": 71}, {"insertions": 2, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/ReadOperations.java", "deletions": 0}, {"insertions": 12, "lines": 18, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/store/StoreStatement.java", "deletions": 6}, {"insertions": 14, "lines": 27, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/store/StorageLayerRelTypesAndDegreeTest.java", "deletions": 13}, {"insertions": 7, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/OperationsFacade.java", "deletions": 0}, {"insertions": 0, "lines": 5, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/util/diffsets/SuperDiffSets.java", "deletions": 5}, {"insertions": 3, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/StoreReadLayer.java", "deletions": 0}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #4 from davidegrohmann/3.3-refactor-node-cursor\n\nRefactor node cursor\n", "spoonStatsSkippedReason": "tooManyFiles", "authoredDateTime": "2017-04-26 15:27:38"}], "created": "2012-11-12 13:22:32"}, {"labels": ["bug"], "filteredCommits": [], "url": "https://github.com/neo4j/neo4j/issues/1", "gitStatsSummary": {"insertions": 0, "gitFilesChange": 0, "lines": 0, "deletions": 0}, "numCommits": 0, "commits": {"d130e8c0ecaeeefff48d2f8f83463316399d7aea": {"commitUser": "sherfert", "commitGHEventType": "referenced"}, "519368d3751bcc0c0e0662ac2e071a2f8c167480": {"commitUser": "sarmbruster", "commitGHEventType": "referenced"}}, "ttf": 322.0002777777778, "user": "lassewesth", "changesInPackagesSPOON": [], "changesInPackagesGIT": [], "body": "@cheadp: 'On node deletion, related indexes entries will be removed only when the next query on those indexes occurs and should return the deleted node.\nAs indexes work with internal node id, and as they can be recycled, not removing indexes entries when a node is deleted can lead to index corruption (and happened in one of our pre-production database)\n\nAs it was told, indexing will be refactored in a futur milestone.\nBut I think a good thing to do now is to add a warning in the manual about this issue, and advice users to always think about removing indexes entries'\n", "filteredCommitsReason": {"duplicated": 0, "unavailable": 0, "moreThanOneParent": 2, "alsoFixesPhrase": 0, "mergeCommitUsed": 0, "multipleIssueFixes": 0}, "spoonStatsSummary": {"spoonMethodsChanged": 0, "UPD": 0.0, "TOT": 0.0, "DEL": 0.0, "INS": 0.0, "spoonFilesChanged": 0, "MOV": 0.0}, "title": "Index corruption in case of node ID recycling", "statsSkippedReason": "", "closed": "2013-10-01 10:04:59", "commitsDetails": [{"commitUser": "sherfert", "commitDateTime": "2018-01-02 18:04:50", "commitHash": "d130e8c0ecaeeefff48d2f8f83463316399d7aea", "commitParents": ["6dd750325a56403ae94b3c23272f4f97527cb795", "e793b2f8dfd67b813557607f16337e02eda3f874"], "commitGHEventType": "referenced", "nameRev": "d130e8c0ecaeeefff48d2f8f83463316399d7aea tags/3.5.0-alpha01~1^2~12^2^2~7", "commitGitStats": [{"insertions": 10, "lines": 18, "filePath": "enterprise/cypher/physical-planning/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/SlotAllocation.scala", "deletions": 8}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/executionplan/procs/ProcedureCallExecutionPlan.scala", "deletions": 2}, {"insertions": 28, "lines": 51, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/ExecutionContext.scala", "deletions": 23}, {"insertions": 16, "lines": 21, "filePath": "community/cypher/cypher-logical-plans-3.4/src/main/scala/org/neo4j/cypher/internal/v3_4/logical/plans/LogicalPlan.scala", "deletions": 5}, {"insertions": 2, "lines": 7, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/discovery/CoreClusterMember.java", "deletions": 5}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/commands/expressions/ReduceFunction.scala", "deletions": 3}, {"insertions": 14, "lines": 24, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/consensus/RaftServer.java", "deletions": 10}, {"insertions": 17, "lines": 25, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/spi/v3_4/codegen/GeneratedQueryStructure.scala", "deletions": 8}, {"insertions": 71, "lines": 72, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/PropertyStore.java", "deletions": 1}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/EagerAggregationWithoutGroupingSlottedPipe.scala", "deletions": 3}, {"insertions": 20, "lines": 40, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/SelectPatternPredicatesTest.scala", "deletions": 20}, {"insertions": 10, "lines": 13, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/catchup/tx/BatchingTxApplier.java", "deletions": 3}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/DistinctSlottedPipe.scala", "deletions": 2}, {"insertions": 5, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruneStrategyFactory.java", "deletions": 2}, {"insertions": 7, "lines": 15, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/MergeNodeCompatibilityAcceptanceTest.scala", "deletions": 8}, {"insertions": 5, "lines": 5, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/AbstractSwallowingIndexProxy.java", "deletions": 0}, {"insertions": 8, "lines": 16, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/mergeUniqueIndexSeekLeafPlanner.scala", "deletions": 8}, {"insertions": 4, "lines": 4, "filePath": "community/cypher/util-3.4/src/main/scala/org/neo4j/cypher/internal/util/v3_4/PrefixNameGenerator.scala", "deletions": 0}, {"insertions": 7, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/index/schema/fusion/FusionIndexAccessor.java", "deletions": 0}, {"insertions": 2, "lines": 5, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/CartesianProductsOrValueJoinsTest.scala", "deletions": 3}, {"insertions": 8, "lines": 10, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/NodeByIdSeekPipe.scala", "deletions": 2}, {"insertions": 5, "lines": 11, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/IDPSolverTest.scala", "deletions": 6}, {"insertions": 5, "lines": 7, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/messaging/marshalling/RaftMessageDecoder.java", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/plans/AllNodesLeafPlannerTest.scala", "deletions": 2}, {"insertions": 6, "lines": 12, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/IDPSolverStep.scala", "deletions": 6}, {"insertions": 11, "lines": 22, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PlanWithTail.scala", "deletions": 11}, {"insertions": 115, "lines": 115, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/TxLayerPlanningIntegrationTest.scala", "deletions": 0}, {"insertions": 1, "lines": 4, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/test/causalclustering/ClusterRule.java", "deletions": 3}, {"insertions": 13, "lines": 15, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/ReplicationModule.java", "deletions": 2}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/AggregationTest.scala", "deletions": 4}, {"insertions": 26, "lines": 98, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/IDPQueryGraphSolverTest.scala", "deletions": 72}, {"insertions": 3, "lines": 7, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/IDPSolverConfig.scala", "deletions": 4}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/OptionalExpandAllSlottedPipe.scala", "deletions": 3}, {"insertions": 8, "lines": 10, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/CypherCompiler.scala", "deletions": 2}, {"insertions": 35, "lines": 59, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/{PrimitiveExecutionContext.scala => SlottedExecutionContext.scala}", "deletions": 24}, {"insertions": 73, "lines": 73, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/debug/DebugPrinter.scala", "deletions": 0}, {"insertions": 8, "lines": 16, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/recovery/DefaultRecoveryService.java", "deletions": 8}, {"insertions": 11, "lines": 15, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/ShortestPathPipe.scala", "deletions": 4}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/interpreted-runtime/src/test/scala/org/neo4j/cypher/internal/runtime/interpreted/commands/PatternComprehensionTest.scala", "deletions": 2}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/phases/CompilationPhases.scala", "deletions": 1}, {"insertions": 5, "lines": 5, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/IndexProxyAdapter.java", "deletions": 0}, {"insertions": 3, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/RelationshipGroupStore.java", "deletions": 1}, {"insertions": 5, "lines": 10, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/pickBestPlanUsingHintsAndCost.scala", "deletions": 5}, {"insertions": 9, "lines": 16, "filePath": "enterprise/{cluster/src/test/java/org/neo4j/cluster/Verifier.java => causal-clustering/src/main/java/org/neo4j/causalclustering/messaging/ComposableMessageHandler.java}", "deletions": 7}, {"insertions": 10, "lines": 21, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/NeoStores.java", "deletions": 11}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/util-3.4/src/main/scala/org/neo4j/cypher/internal/util/v3_4/Rewritable.scala", "deletions": 2}, {"insertions": 4, "lines": 9, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/projection.scala", "deletions": 5}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/ProcedureCallPipe.scala", "deletions": 1}, {"insertions": 207, "lines": 426, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/LogicalPlanProducer.scala", "deletions": 219}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PlanEventHorizonTest.scala", "deletions": 4}, {"insertions": 27, "lines": 27, "filePath": "enterprise/metrics/src/main/java/org/neo4j/metrics/source/causalclustering/CoreMetrics.java", "deletions": 0}, {"insertions": 67, "lines": 78, "filePath": "enterprise/metrics/src/test/java/org/neo4j/metrics/MetricsTestHelper.java", "deletions": 11}, {"insertions": 5, "lines": 11, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/checkpoint/AbstractCheckPointThresholdTest.java", "deletions": 6}, {"insertions": 6, "lines": 6, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/inmemory/UpdateCapturingIndexAccessor.java", "deletions": 0}, {"insertions": 8, "lines": 11, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_1/Compatibility.scala", "deletions": 3}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/NodeHashJoinSlottedPipe.scala", "deletions": 2}, {"insertions": 6, "lines": 12, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/ProjectEndpointsPipe.scala", "deletions": 6}, {"insertions": 20, "lines": 44, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/planShortestPaths.scala", "deletions": 24}, {"insertions": 124, "lines": 124, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/primitive/PrimitiveLongList.java", "deletions": 0}, {"insertions": 30, "lines": 55, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/CacheAccessor.scala", "deletions": 25}, {"insertions": 4, "lines": 10, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/consensus/LeaderAvailabilityTimers.java", "deletions": 6}, {"insertions": 14, "lines": 20, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexingService.java", "deletions": 6}, {"insertions": 3, "lines": 6, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/readreplica/EnterpriseReadReplicaEditionModule.java", "deletions": 3}, {"insertions": 8, "lines": 10, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/state/RaftLogPruner.java", "deletions": 2}, {"insertions": 12, "lines": 24, "filePath": "community/cypher/interpreted-runtime/src/test/scala/org/neo4j/cypher/internal/runtime/interpreted/commands/predicates/ConstantCachedInTest.scala", "deletions": 12}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/ArgumentSlottedPipe.scala", "deletions": 3}, {"insertions": 13, "lines": 24, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/Compatibility.scala", "deletions": 11}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/UnwindSlottedPipeTest.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/HashJoinSlottedPipeTestHelper.scala", "deletions": 2}, {"insertions": 7, "lines": 7, "filePath": "community/cypher/runtime-util/src/main/scala/org/neo4j/cypher/internal/runtime/QueryContext.scala", "deletions": 0}, {"insertions": 111, "lines": 154, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/consensus/LeaderAvailabilityHandler.java", "deletions": 43}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/matching/History.scala", "deletions": 1}, {"insertions": 8, "lines": 16, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/sortSkipAndLimit.scala", "deletions": 8}, {"insertions": 2, "lines": 2, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/compiled/codegen/spi/MethodStructure.scala", "deletions": 0}, {"insertions": 8, "lines": 16, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/IndexSeekLeafPlanner.scala", "deletions": 8}, {"insertions": 46, "lines": 46, "filePath": "community/cypher/util-3.4/src/main/scala/org/neo4j/cypher/internal/util/v3_4/Unchangeable.scala", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/NodeOuterHashJoinPipe.scala", "deletions": 1}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/OptionalExpandIntoPipe.scala", "deletions": 4}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/commands/convert/ExpressionConverters.scala", "deletions": 0}, {"insertions": 7, "lines": 7, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/DelegatingQueryContext.scala", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/IDPSolver.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/ValueHashJoinSlottedPipe.scala", "deletions": 2}, {"insertions": 6, "lines": 12, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/ProjectionTest.scala", "deletions": 6}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/ast/convert/plannerQuery/StatementConvertersTest.scala", "deletions": 3}, {"insertions": 14, "lines": 31, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/triadicSelectionFinder.scala", "deletions": 17}, {"insertions": 17, "lines": 33, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/SlottedPipeBuilder.scala", "deletions": 16}, {"insertions": 1, "lines": 2, "filePath": "tools/src/main/java/org/neo4j/tools/dump/InconsistencyReportReader.java", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/package.scala", "deletions": 1}, {"insertions": 25, "lines": 25, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/RecoveryTest.java", "deletions": 0}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/StartPointFindingAcceptanceTest.scala", "deletions": 3}, {"insertions": 1, "lines": 3, "filePath": "stresstests/src/test/java/org/neo4j/causalclustering/stresstests/CatchupStoreCopyInteractionStressTesting.java", "deletions": 2}, {"insertions": 0, "lines": 2, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ShortestPathComplexQueryAcceptanceTest.scala", "deletions": 2}, {"insertions": 11, "lines": 17, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/executionplan/PlanFingerprint.scala", "deletions": 6}, {"insertions": 13, "lines": 13, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/PropertyCursor.java", "deletions": 0}, {"insertions": 13, "lines": 28, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/idSeekLeafPlanner.scala", "deletions": 15}, {"insertions": 6, "lines": 16, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/MatchAcceptanceTest.scala", "deletions": 10}, {"insertions": 7, "lines": 8, "filePath": "community/kernel-api/src/test/java/org/neo4j/internal/kernel/api/KernelAPIWriteTestBase.java", "deletions": 1}, {"insertions": 14, "lines": 14, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/RelationshipScanCursor.java", "deletions": 0}, {"insertions": 5, "lines": 9, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/aggregation.scala", "deletions": 4}, {"insertions": 2, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexProxy.java", "deletions": 0}, {"insertions": 16, "lines": 34, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/IDPQueryGraphSolver.scala", "deletions": 18}, {"insertions": 14, "lines": 14, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/FlippableIndexProxy.java", "deletions": 0}, {"insertions": 5, "lines": 12, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/LogicalPlanningTestSupport.scala", "deletions": 7}, {"insertions": 92, "lines": 92, "filePath": "enterprise/metrics/src/test/java/org/neo4j/metrics/RaftMessageProcessingMetricIT.java", "deletions": 0}, {"insertions": 52, "lines": 52, "filePath": "enterprise/kernel/src/main/java/org/neo4j/kernel/impl/enterprise/transaction/log/checkpoint/ContinuousCheckPointThreshold.java", "deletions": 0}, {"insertions": 13, "lines": 19, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CountCommittedTransactionThreshold.java", "deletions": 6}, {"insertions": 17, "lines": 35, "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/schema/LuceneIndexAccessor.java", "deletions": 18}, {"insertions": 17, "lines": 17, "filePath": "tools/src/test/java/org/neo4j/tools/dump/InconsistencyReportReaderTest.java", "deletions": 0}, {"insertions": 1, "lines": 13, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/catchup/storecopy/RemoteStore.java", "deletions": 12}, {"insertions": 8, "lines": 16, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PatternExpressionPatternElementNamerTest.scala", "deletions": 8}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/NodeIndexSeekSlottedPipe.scala", "deletions": 3}, {"insertions": 0, "lines": 151, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/server/BatchingMessageHandler.java", "deletions": 151}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/TopSlottedPipeTest.scala", "deletions": 3}, {"insertions": 45, "lines": 45, "filePath": "enterprise/kernel/src/main/java/org/neo4j/kernel/impl/enterprise/transaction/log/checkpoint/VolumetricCheckPointPolicy.java", "deletions": 0}, {"insertions": 42, "lines": 72, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/selectPatternPredicates.scala", "deletions": 30}, {"insertions": 7, "lines": 14, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ExpressionAcceptanceTest.scala", "deletions": 7}, {"insertions": 36, "lines": 37, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/QueryState.scala", "deletions": 1}, {"insertions": 68, "lines": 68, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointThresholdPolicy.java", "deletions": 0}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/OptionalExpandIntoSlottedPipe.scala", "deletions": 3}, {"insertions": 2, "lines": 3, "filePath": "integrationtests/src/test/java/org/neo4j/causalclustering/scenarios/BoltCausalClusteringIT.java", "deletions": 1}, {"insertions": 9, "lines": 23, "filePath": "enterprise/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiled_runtime/v3_4/codegen/ir/CompiledProfilingTest.scala", "deletions": 14}, {"insertions": 3, "lines": 17, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/NeoStoreDataSource.java", "deletions": 14}, {"insertions": 8, "lines": 15, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/TimeCheckPointThreshold.java", "deletions": 7}, {"insertions": 9, "lines": 10, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/NodeStore.java", "deletions": 1}, {"insertions": 13, "lines": 17, "filePath": "community/cypher/cypher-logical-plans-3.4/src/main/scala/org/neo4j/cypher/internal/v3_4/logical/plans/Argument.scala", "deletions": 4}, {"insertions": 4, "lines": 14, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/state/CoreLife.java", "deletions": 10}, {"insertions": 8, "lines": 11, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v2_3/Compatibility.scala", "deletions": 3}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/RelationshipCountFromCountStorePipe.scala", "deletions": 1}, {"insertions": 22, "lines": 30, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruneStrategy.java", "deletions": 8}, {"insertions": 6, "lines": 12, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/SelectCoveredTest.scala", "deletions": 6}, {"insertions": 7, "lines": 8, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/PopulatingIndexProxy.java", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/compiled/BuildCompiledExecutionPlan.scala", "deletions": 1}, {"insertions": 10, "lines": 16, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/consensus/RaftMachine.java", "deletions": 6}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/labelScanLeafPlanner.scala", "deletions": 4}, {"insertions": 21, "lines": 34, "filePath": "community/{primitive-collections/src/main/java/org/neo4j/cursor/LongValue.java => kernel-api/src/test/java/org/neo4j/internal/kernel/api/CursorsClosedPostCondition.java}", "deletions": 13}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/LatestRuntimeVariablePlannerCompatibility.scala", "deletions": 1}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/NodeIndexScanPipe.scala", "deletions": 2}, {"insertions": 16, "lines": 22, "filePath": "enterprise/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiled_runtime/spi/v3_4/GeneratedMethodStructureTest.scala", "deletions": 6}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/CompilerEngineDelegator.scala", "deletions": 2}, {"insertions": 5, "lines": 9, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/PatternExpressionImplementationAcceptanceTest.scala", "deletions": 4}, {"insertions": 2, "lines": 2, "filePath": "enterprise/kernel/src/main/resources/META-INF/services/org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThresholdPolicy", "deletions": 0}, {"insertions": 23, "lines": 24, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/OnlineIndexProxy.java", "deletions": 1}, {"insertions": 0, "lines": 75, "filePath": "community/lucene-index/src/main/java/org/neo4j/kernel/api/impl/index/collector/FirstHitCollector.java", "deletions": 75}, {"insertions": 0, "lines": 134, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/checkpoint/TimeCheckPointThresholdTest.java", "deletions": 134}, {"insertions": 6, "lines": 11, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/EnterpriseCoreEditionModule.java", "deletions": 5}, {"insertions": 3, "lines": 3, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/Pipe.scala", "deletions": 0}, {"insertions": 3, "lines": 7, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/DynamicPropertyNotifier.scala", "deletions": 4}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/UnwindSlottedPipe.scala", "deletions": 3}, {"insertions": 38, "lines": 105, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/core/consensus/LeaderAvailabilityHandlerTest.java", "deletions": 67}, {"insertions": 12, "lines": 24, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/PatternExpressionSolverTest.scala", "deletions": 12}, {"insertions": 6, "lines": 7, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/format/standard/RelationshipTypeTokenRecordFormat.java", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/ExpandAllPipe.scala", "deletions": 1}, {"insertions": 21, "lines": 21, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/index/IndexAccessor.java", "deletions": 0}, {"insertions": 5, "lines": 6, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/spi/v3_4/codegen/Fields.scala", "deletions": 1}, {"insertions": 5, "lines": 8, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/replication/RaftReplicator.java", "deletions": 3}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/executionplan/procs/PureSideEffectExecutionPlan.scala", "deletions": 2}, {"insertions": 6, "lines": 6, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/AbstractDelegatingIndexProxy.java", "deletions": 0}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/plans/LabelScanLeafPlannerTest.scala", "deletions": 4}, {"insertions": 8, "lines": 8, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/TransactionalContextWrapper.scala", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/PhysicalTransactionCursor.java", "deletions": 0}, {"insertions": 15, "lines": 15, "filePath": "enterprise/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiled_runtime/v3_4/codegen/ir/BuildProbeTableInstructionsTest.scala", "deletions": 0}, {"insertions": 92, "lines": 92, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/consensus/RaftMessageMonitoringHandler.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/spi/v3_1/codegen/GeneratedQueryStructure.scala", "deletions": 1}, {"insertions": 9, "lines": 18, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/StorageStatement.java", "deletions": 9}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/VarLengthExpandPipe.scala", "deletions": 3}, {"insertions": 1, "lines": 2, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/CypherCompilerStringCacheMonitoringAcceptanceTest.scala", "deletions": 1}, {"insertions": 7, "lines": 16, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/api/labelscan/NodeLabelRange.java", "deletions": 9}, {"insertions": 57, "lines": 57, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/PeriodicThresholdPolicy.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/ExecutionPlan.scala", "deletions": 1}, {"insertions": 21, "lines": 28, "filePath": "community/primitive-collections/src/test/java/org/neo4j/concurrent/WorkSyncTest.java", "deletions": 7}, {"insertions": 0, "lines": 25, "filePath": "community/collections/src/main/java/org/neo4j/helpers/collection/ClosableIterable.java", "deletions": 25}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/PatternMatchingTest.scala", "deletions": 4}, {"insertions": 0, "lines": 67, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointThresholds.java", "deletions": 67}, {"insertions": 80, "lines": 80, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/ClusterBindingHandler.java", "deletions": 0}, {"insertions": 4, "lines": 8, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/LdbcQueries.scala", "deletions": 4}, {"insertions": 1, "lines": 3, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/scenarios/ClusterCommunityToEnterpriseIT.java", "deletions": 2}, {"insertions": 37, "lines": 40, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/IndexingServiceTest.java", "deletions": 3}, {"insertions": 9, "lines": 18, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/patternExpressionRewriterTest.scala", "deletions": 9}, {"insertions": 20, "lines": 56, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/state/{RaftMessageHandler.java => RaftMessageApplier.java}", "deletions": 36}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/CartesianProductSlottedPipe.scala", "deletions": 2}, {"insertions": 0, "lines": 27, "filePath": "community/collections/src/main/java/org/neo4j/helpers/collection/ClosableIterator.java", "deletions": 27}, {"insertions": 102, "lines": 102, "filePath": "enterprise/kernel/src/test/java/org/neo4j/kernel/impl/enterprise/transaction/log/checkpoint/EnterpriseCheckPointThresholdTest.java", "deletions": 0}, {"insertions": 4, "lines": 9, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/TransactionBoundQueryContext.scala", "deletions": 5}, {"insertions": 3, "lines": 4, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/state/snapshot/PersistentSnapshotDownloader.java", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/commands/expressions/FilterFunction.scala", "deletions": 1}, {"insertions": 17, "lines": 33, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/QueryPlanner.scala", "deletions": 16}, {"insertions": 130, "lines": 232, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/WithPlanningIntegrationTest.scala", "deletions": 102}, {"insertions": 5, "lines": 9, "filePath": "community/cypher/runtime-util/src/test/scala/org/neo4j/cypher/internal/runtime/planDescription/RenderTreeTableTest.scala", "deletions": 4}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/queryReduction/CypherReductionSupportTest.scala", "deletions": 1}, {"insertions": 7, "lines": 10, "filePath": "enterprise/{com/src/main/java/org/neo4j/com/ConnectionLostHandler.java => causal-clustering/src/main/java/org/neo4j/causalclustering/core/consensus/RaftMessageProcessingMonitor.java}", "deletions": 3}, {"insertions": 13, "lines": 13, "filePath": "community/common/src/main/java/org/neo4j/time/Clocks.java", "deletions": 0}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/AbstractHashJoinPipe.scala", "deletions": 3}, {"insertions": 16, "lines": 32, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/plans/IdSeekLeafPlannerTest.scala", "deletions": 16}, {"insertions": 6, "lines": 9, "filePath": "pom.xml", "deletions": 3}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/argumentLeafPlanner.scala", "deletions": 2}, {"insertions": 11, "lines": 11, "filePath": "community/kernel/src/main/java/org/neo4j/graphdb/factory/GraphDatabaseSettings.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/commands/InList.scala", "deletions": 1}, {"insertions": 6, "lines": 12, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/plans/ArgumentLeafPlannerTest.scala", "deletions": 6}, {"insertions": 3, "lines": 6, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/VarLengthExpandSlottedPipe.scala", "deletions": 3}, {"insertions": 14, "lines": 14, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/RelationshipExplicitIndexCursor.java", "deletions": 0}, {"insertions": 1, "lines": 4, "filePath": "stresstests/src/test/java/org/neo4j/causalclustering/stresstests/BackupStoreCopyInteractionStressTesting.java", "deletions": 3}, {"insertions": 9, "lines": 10, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/ast/rewriters/LiteralReplacementTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/AllNodesScanPipe.scala", "deletions": 1}, {"insertions": 56, "lines": 56, "filePath": "enterprise/kernel/src/main/java/org/neo4j/kernel/impl/enterprise/transaction/log/checkpoint/VolumetricCheckPointThreshold.java", "deletions": 0}, {"insertions": 1, "lines": 1, "filePath": "community/kernel/src/main/resources/META-INF/services/org.neo4j.kernel.impl.transaction.log.checkpoint.CheckPointThresholdPolicy", "deletions": 0}, {"insertions": 7, "lines": 13, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/ExecutionEngine.scala", "deletions": 6}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/ForeachPipe.scala", "deletions": 1}, {"insertions": 15, "lines": 30, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/plans/IndexScanLeafPlannerTest.scala", "deletions": 15}, {"insertions": 0, "lines": 212, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/core/server/BatchingMessageHandlerTest.java", "deletions": 212}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/MapSupport.scala", "deletions": 4}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/ast/rewriters/ASTRewriter.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PickBestPlanUsingHintsAndCostTest.scala", "deletions": 1}, {"insertions": 0, "lines": 24, "filePath": "community/collections/src/main/java/org/neo4j/helpers/collection/CloseableVisitor.java", "deletions": 24}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/runtime-util/src/main/scala/org/neo4j/cypher/internal/runtime/planDescription/LogicalPlan2PlanDescription.scala", "deletions": 3}, {"insertions": 12, "lines": 25, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/indexScanLeafPlanner.scala", "deletions": 13}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/AllNodesScanSlottedPipe.scala", "deletions": 2}, {"insertions": 6, "lines": 6, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/index/schema/NativeSchemaNumberIndexAccessor.java", "deletions": 0}, {"insertions": 75, "lines": 75, "filePath": "enterprise/metrics/src/main/java/org/neo4j/metrics/source/causalclustering/RaftMessageProcessingMetric.java", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/executionplan/ExecutionPlan.scala", "deletions": 2}, {"insertions": 19, "lines": 19, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/cypher/features/UnwindAcceptance.feature", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/NodeIndexSeekPipe.scala", "deletions": 1}, {"insertions": 10, "lines": 16, "filePath": "enterprise/cypher/morsel-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/vectorized/MorselExecutionContext.scala", "deletions": 6}, {"insertions": 105, "lines": 105, "filePath": "community/cypher/cypher/src/main/java/org/neo4j/cypher/internal/codegen/CompiledCursorUtils.java", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/ExpandAllSlottedPipe.scala", "deletions": 2}, {"insertions": 8, "lines": 12, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/IdSeekIterator.scala", "deletions": 4}, {"insertions": 10, "lines": 21, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/SetAcceptanceTest.scala", "deletions": 11}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/EagerSlottedPipe.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/commands/expressions/ExtractFunction.scala", "deletions": 1}, {"insertions": 12, "lines": 26, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/ThresholdBasedPruneStrategy.java", "deletions": 14}, {"insertions": 75, "lines": 76, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/spi/v3_4/codegen/Templates.scala", "deletions": 1}, {"insertions": 4, "lines": 86, "filePath": "enterprise/backup/src/test/java/org/neo4j/causalclustering/ClusterSeedingIT.java", "deletions": 82}, {"insertions": 2, "lines": 3, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/core/consensus/log/pruning/PruningSchedulerTest.java", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/BuildInterpretedExecutionPlan.scala", "deletions": 1}, {"insertions": 12, "lines": 23, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PlanSingleQuery.scala", "deletions": 11}, {"insertions": 1, "lines": 2, "filePath": "enterprise/kernel/src/main/java/org/neo4j/kernel/impl/store/format/highlimit/HighLimitFormatSettings.java", "deletions": 1}, {"insertions": 14, "lines": 14, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/NodeExplicitIndexCursor.java", "deletions": 0}, {"insertions": 9, "lines": 18, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/ScalaPatternMatchingTest.scala", "deletions": 9}, {"insertions": 88, "lines": 88, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruningTest.java", "deletions": 0}, {"insertions": 4, "lines": 6, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/CartesianProductNotificationAcceptanceTest.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/NodeByLabelScanPipe.scala", "deletions": 1}, {"insertions": 10, "lines": 12, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/DirectedRelationshipByIdSeekPipe.scala", "deletions": 2}, {"insertions": 46, "lines": 48, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/SlottedQueryState.scala", "deletions": 2}, {"insertions": 4, "lines": 8, "filePath": "community/server/src/test/java/org/neo4j/server/rest/RetrieveRelationshipsFromNodeIT.java", "deletions": 4}, {"insertions": 15, "lines": 31, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/countStorePlanner.scala", "deletions": 16}, {"insertions": 1, "lines": 1, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/recovery/Recovery.java", "deletions": 0}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/phases/AstRewriting.scala", "deletions": 2}, {"insertions": 25, "lines": 50, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/TriadicSelectionFinderTest.scala", "deletions": 25}, {"insertions": 26, "lines": 28, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/api/index/IndexUpdateMode.java", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/phases/StatsDivergenceCalculatorTest.scala", "deletions": 1}, {"insertions": 22, "lines": 45, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/cartesianProductsOrValueJoins.scala", "deletions": 23}, {"insertions": 15, "lines": 26, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/pruning/ThresholdBasedPruneStrategyTest.java", "deletions": 11}, {"insertions": 0, "lines": 91, "filePath": "enterprise/backup/src/test/java/org/neo4j/backup/ServerProcess.java", "deletions": 91}, {"insertions": 26, "lines": 63, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/Eagerness.scala", "deletions": 37}, {"insertions": 3, "lines": 5, "filePath": "community/cypher/runtime-util/src/test/scala/org/neo4j/cypher/internal/runtime/planDescription/PlanDescriptionArgumentSerializerTests.scala", "deletions": 2}, {"insertions": 27, "lines": 27, "filePath": "enterprise/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compiled_runtime/v3_4/codegen/CodeGeneratorTest.scala", "deletions": 0}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/CypherCompilerAstCacheAcceptanceTest.scala", "deletions": 2}, {"insertions": 4, "lines": 8, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/scenarios/ServerPoliciesLoadBalancingIT.java", "deletions": 4}, {"insertions": 0, "lines": 16, "filePath": "community/primitive-collections/src/main/java/org/neo4j/register/Register.java", "deletions": 16}, {"insertions": 3, "lines": 5, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/NodeCountFromCountStorePipe.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/NodeIndexScanSlottedPipe.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/FakeSlottedPipe.scala", "deletions": 2}, {"insertions": 53, "lines": 68, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/spi/v3_4/codegen/GeneratedMethodStructure.scala", "deletions": 15}, {"insertions": 24, "lines": 24, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruning.java", "deletions": 0}, {"insertions": 45, "lines": 45, "filePath": "enterprise/kernel/src/main/java/org/neo4j/kernel/impl/enterprise/transaction/log/checkpoint/ContinuousThresholdPolicy.java", "deletions": 0}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/ast/rewriters/NamespacerTest.scala", "deletions": 1}, {"insertions": 35, "lines": 35, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/messaging/LifecycleMessageHandler.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/state/DumpClusterState.java", "deletions": 1}, {"insertions": 19, "lines": 38, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/AbstractIndexSeekLeafPlanner.scala", "deletions": 19}, {"insertions": 4, "lines": 10, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/QueryPlannerConfiguration.scala", "deletions": 6}, {"insertions": 1, "lines": 2, "filePath": "community/kernel-api/src/test/java/org/neo4j/internal/kernel/api/ManagedTestCursors.java", "deletions": 1}, {"insertions": 12, "lines": 29, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/QueryGraphSolver.scala", "deletions": 17}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/ExpandIntoSlottedPipe.scala", "deletions": 2}, {"insertions": 7, "lines": 7, "filePath": "enterprise/cypher/cypher/pom.xml", "deletions": 0}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/ast/rewriters/PatternExpressionPatternElementNamer.scala", "deletions": 3}, {"insertions": 35, "lines": 35, "filePath": "community/cypher/cypher/src/main/java/org/neo4j/cypher/internal/codegen/CompiledConversionUtils.java", "deletions": 0}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/selectCovered.scala", "deletions": 3}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/OptionalSlottedPipe.scala", "deletions": 2}, {"insertions": 5, "lines": 10, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/uniqueIndexSeekLeafPlanner.scala", "deletions": 5}, {"insertions": 156, "lines": 156, "filePath": "community/primitive-collections/src/test/java/org/neo4j/collection/primitive/PrimitiveLongListTest.java", "deletions": 0}, {"insertions": 12, "lines": 24, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/plans/IndexSeekLeafPlannerTest.scala", "deletions": 12}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/UnionSlottedPipeTest.scala", "deletions": 2}, {"insertions": 5, "lines": 11, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/LogicalPlanningTestSupport2.scala", "deletions": 6}, {"insertions": 10, "lines": 10, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/primitive/Primitive.java", "deletions": 0}, {"insertions": 17, "lines": 17, "filePath": "community/kernel-api/src/test/java/org/neo4j/internal/kernel/api/StubNodeCursor.java", "deletions": 0}, {"insertions": 5, "lines": 16, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/discovery/Cluster.java", "deletions": 11}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/OptionalExpandAllPipe.scala", "deletions": 2}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/leafPlanOptions.scala", "deletions": 3}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/selectHasLabelWithJoin.scala", "deletions": 3}, {"insertions": 0, "lines": 1, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_3/LogicalPlanConverterTest.scala", "deletions": 1}, {"insertions": 9, "lines": 18, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PriorityLeafPlannerListTest.scala", "deletions": 9}, {"insertions": 26, "lines": 50, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/SingleComponentPlanner.scala", "deletions": 24}, {"insertions": 212, "lines": 212, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointThresholdTest.java", "deletions": 0}, {"insertions": 18, "lines": 41, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/PatternExpressionSolver.scala", "deletions": 23}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/ConditionalApplySlottedPipe.scala", "deletions": 2}, {"insertions": 14, "lines": 14, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/NodeCursor.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ShortestPathExhaustiveForbiddenAcceptanceTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/ExpandIntoPipe.scala", "deletions": 1}, {"insertions": 19, "lines": 37, "filePath": "enterprise/security/src/test/java/org/neo4j/server/security/enterprise/auth/BuiltInProceduresInteractionTestBase.java", "deletions": 18}, {"insertions": 7, "lines": 14, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/EagerAggregationSlottedPipe.scala", "deletions": 7}, {"insertions": 4, "lines": 6, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/messaging/RaftMessageProcessingTest.java", "deletions": 2}, {"insertions": 15, "lines": 30, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/plans/IndexLeafPlannerTest.scala", "deletions": 15}, {"insertions": 8, "lines": 16, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/AllStoreHolder.java", "deletions": 8}, {"insertions": 70, "lines": 70, "filePath": "enterprise/metrics/src/test/java/org/neo4j/metrics/source/causalclustering/RaftMessageProcessingMetricTest.java", "deletions": 0}, {"insertions": 11, "lines": 15, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/messaging/marshalling/RaftMessageEncodingDecodingTest.java", "deletions": 4}, {"insertions": 6, "lines": 12, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/OrLeafPlanner.scala", "deletions": 6}, {"insertions": 9, "lines": 11, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/LoadCSVPipe.scala", "deletions": 2}, {"insertions": 5, "lines": 6, "filePath": "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/prettifier/Prettifier.scala", "deletions": 1}, {"insertions": 5, "lines": 9, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/helpers.scala", "deletions": 4}, {"insertions": 1, "lines": 2, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/scenarios/ServerGroupsIT.java", "deletions": 1}, {"insertions": 2, "lines": 3, "filePath": "community/cypher/frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/ast/rewriters/literalReplacement.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/allNodesLeafPlanner.scala", "deletions": 2}, {"insertions": 3, "lines": 4, "filePath": "enterprise/kernel/src/main/java/org/neo4j/kernel/impl/store/format/highlimit/HighLimit.java", "deletions": 1}, {"insertions": 2, "lines": 2, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/StartAcceptanceTest.scala", "deletions": 0}, {"insertions": 5, "lines": 11, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/patternExpressionRewriter.scala", "deletions": 6}, {"insertions": 2, "lines": 4, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/messaging/RaftOutbound.java", "deletions": 2}, {"insertions": 66, "lines": 66, "filePath": "community/common/src/main/java/org/neo4j/time/TickOnAccessClock.java", "deletions": 0}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/CypherCompilerFactory.scala", "deletions": 2}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/slotted-runtime/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/pipes/NodesByLabelScanSlottedPipe.scala", "deletions": 2}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/verifyBestPlan.scala", "deletions": 1}, {"insertions": 5, "lines": 5, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/api/index/inmemory/InMemoryIndex.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/CommunityPipeBuilder.scala", "deletions": 1}, {"insertions": 93, "lines": 94, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointThreshold.java", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/PruningVarLengthExpandPipe.scala", "deletions": 2}, {"insertions": 7, "lines": 48, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/LogicalPlanningFunction.scala", "deletions": 41}, {"insertions": 91, "lines": 91, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/codegen/CompiledCursorUtilsTest.scala", "deletions": 0}, {"insertions": 25, "lines": 30, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/RelationshipGroupCursor.java", "deletions": 5}, {"insertions": 0, "lines": 79, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/backup/ArgsBuilder.java", "deletions": 79}, {"insertions": 2, "lines": 3, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/store/RelationshipStore.java", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PatternPredicatePlanningIntegrationTest.scala", "deletions": 2}, {"insertions": 17, "lines": 27, "filePath": "enterprise/ha/src/main/java/org/neo4j/kernel/ha/lock/SlaveLocksClient.java", "deletions": 10}, {"insertions": 14, "lines": 14, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/NodeLabelIndexCursor.java", "deletions": 0}, {"insertions": 171, "lines": 171, "filePath": "community/kernel-api/src/test/java/org/neo4j/internal/kernel/api/StubRead.java", "deletions": 0}, {"insertions": 4, "lines": 205, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/storageengine/impl/recordstorage/StoreStatement.java", "deletions": 201}, {"insertions": 5, "lines": 8, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/BuildSlottedExecutionPlan.scala", "deletions": 3}, {"insertions": 15, "lines": 29, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/Compatibility.scala", "deletions": 14}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/expressions-3.4/src/main/scala/org/neo4j/cypher/internal/v3_4/expressions/Expression.scala", "deletions": 1}, {"insertions": 112, "lines": 112, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/RaftServerModule.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/ForeachAcceptanceTest.scala", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/test/scala/org/neo4j/cypher/internal/runtime/interpreted/MatchingContextTest.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/morsel-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/vectorized/Message.scala", "deletions": 2}, {"insertions": 6, "lines": 12, "filePath": "enterprise/cypher/slotted-runtime/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/PrimitiveExecutionContextTest.scala", "deletions": 6}, {"insertions": 20, "lines": 40, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/OrLeafPlannerTest.scala", "deletions": 20}, {"insertions": 16, "lines": 32, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PlanEventHorizon.scala", "deletions": 16}, {"insertions": 4, "lines": 8, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/UnwindPipe.scala", "deletions": 4}, {"insertions": 57, "lines": 71, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/pruning/LogPruningImpl.java", "deletions": 14}, {"insertions": 6, "lines": 12, "filePath": "enterprise/cypher/slotted-runtime/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/slotted/helpers/SlottedPipeBuilderUtilsTest.scala", "deletions": 6}, {"insertions": 8, "lines": 16, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/SingleComponentPlannerTest.scala", "deletions": 8}, {"insertions": 4, "lines": 8, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/catchup/tx/BatchingTxApplierTest.java", "deletions": 4}, {"insertions": 10, "lines": 20, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/solveOptionalMatches.scala", "deletions": 10}, {"insertions": 98, "lines": 98, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CheckPointThresholdTestSupport.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/monitoring/Monitors.java", "deletions": 1}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/NodeIndexContainsScanPipe.scala", "deletions": 1}, {"insertions": 2, "lines": 4, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/index/labelscan/NativeAllEntriesLabelScanReader.java", "deletions": 2}, {"insertions": 20, "lines": 40, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/countStorePlannerTest.scala", "deletions": 20}, {"insertions": 301, "lines": 301, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/core/BatchingMessageHandlerTest.java", "deletions": 0}, {"insertions": 13, "lines": 27, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/transaction/log/checkpoint/AbstractCheckPointThreshold.java", "deletions": 14}, {"insertions": 10, "lines": 12, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/UndirectedRelationshipByIdSeekPipe.scala", "deletions": 2}, {"insertions": 3, "lines": 5, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/scenarios/PreElectionIT.java", "deletions": 2}, {"insertions": 164, "lines": 182, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/consensus/RaftMessages.java", "deletions": 18}, {"insertions": 29, "lines": 50, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/executionplan/PlanFingerprintReferenceTest.scala", "deletions": 21}, {"insertions": 258, "lines": 258, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/BatchingMessageHandler.java", "deletions": 0}, {"insertions": 7, "lines": 14, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/JoinSolverStepTest.scala", "deletions": 7}, {"insertions": 9, "lines": 18, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/DefaultQueryPlannerTest.scala", "deletions": 9}, {"insertions": 27, "lines": 52, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/PatternComprehensionAcceptanceTest.scala", "deletions": 25}, {"insertions": 1, "lines": 2, "filePath": "community/cypher/interpreted-runtime/src/main/scala/org/neo4j/cypher/internal/runtime/interpreted/pipes/FullPruningVarLengthExpandPipe.scala", "deletions": 1}, {"insertions": 3, "lines": 6, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/Selector.scala", "deletions": 3}, {"insertions": 2, "lines": 4, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_4/runtime/compiled/codegen/ir/ScanAllNodes.scala", "deletions": 2}, {"insertions": 0, "lines": 127, "filePath": "community/kernel/src/test/java/org/neo4j/kernel/impl/transaction/log/checkpoint/CountCommittedTransactionThresholdTest.java", "deletions": 127}, {"insertions": 0, "lines": 1, "filePath": "community/kernel/src/main/java/org/neo4j/storageengine/api/StorageEngine.java", "deletions": 1}, {"insertions": 8, "lines": 17, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/LeafPlannerIterable.scala", "deletions": 9}, {"insertions": 1, "lines": 3, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/queryReduction/CypherReductionSupport.scala", "deletions": 2}, {"insertions": 13, "lines": 28, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/expandSolverStep.scala", "deletions": 15}, {"insertions": 2, "lines": 3, "filePath": "enterprise/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/BuildVectorizedExecutionPlan.scala", "deletions": 1}, {"insertions": 75, "lines": 75, "filePath": "enterprise/kernel/src/test/java/org/neo4j/kernel/impl/store/format/highlimit/RelationshipTypeTokenRecordFormatTest.java", "deletions": 0}, {"insertions": 1, "lines": 2, "filePath": "community/primitive-collections/src/main/java/org/neo4j/collection/primitive/PrimitiveLongArrayQueue.java", "deletions": 1}, {"insertions": 6, "lines": 12, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/ExpandSolverStepTest.scala", "deletions": 6}, {"insertions": 122, "lines": 122, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/core/ClusterBindingHandlerTest.java", "deletions": 0}, {"insertions": 7, "lines": 14, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/EagerizationAcceptanceTest.scala", "deletions": 7}, {"insertions": 83, "lines": 83, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/scala/org/neo4j/internal/cypher/acceptance/DebugToStringTest.scala", "deletions": 0}, {"insertions": 10, "lines": 13, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/Labels.java", "deletions": 3}, {"insertions": 30, "lines": 31, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/RelationshipTraversalCursor.java", "deletions": 1}, {"insertions": 108, "lines": 204, "filePath": "enterprise/causal-clustering/src/main/java/org/neo4j/causalclustering/core/server/CoreServerModule.java", "deletions": 96}, {"insertions": 0, "lines": 8, "filePath": "community/primitive-collections/src/main/java/org/neo4j/register/Registers.java", "deletions": 8}, {"insertions": 7, "lines": 10, "filePath": "community/cypher/cypher/src/main/scala/org/neo4j/cypher/internal/compatibility/v3_3/LogicalPlanConverter.scala", "deletions": 3}, {"insertions": 47, "lines": 47, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/scenarios/ReadReplicaReplicationIT.java", "deletions": 0}, {"insertions": 21, "lines": 42, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/ExtractBestPlanTest.scala", "deletions": 21}, {"insertions": 15, "lines": 24, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/core/replication/RaftReplicatorTest.java", "deletions": 9}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher/src/test/scala/org/neo4j/cypher/internal/queryReduction/ReductionTestHelper.scala", "deletions": 2}, {"insertions": 2, "lines": 5, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/idp/joinSolverStep.scala", "deletions": 3}, {"insertions": 16, "lines": 30, "filePath": "community/cypher/{frontend-3.4/src/main/scala/org/neo4j/cypher/internal/frontend/v3_4/phases => cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4}/StatsDivergenceCalculator.scala", "deletions": 14}, {"insertions": 115, "lines": 115, "filePath": "enterprise/causal-clustering/src/test/java/org/neo4j/causalclustering/core/consensus/RaftMessageMonitoringHandlerTest.java", "deletions": 0}, {"insertions": 52, "lines": 110, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/PlanUpdates.scala", "deletions": 58}, {"insertions": 5, "lines": 10, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/SortSkipAndLimitTest.scala", "deletions": 5}, {"insertions": 2, "lines": 4, "filePath": "community/cypher/cypher-planner-3.4/src/test/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/steps/OuterHashJoinTest.scala", "deletions": 2}, {"insertions": 7, "lines": 8, "filePath": "community/kernel-api/src/test/java/org/neo4j/internal/kernel/api/KernelAPIReadTestBase.java", "deletions": 1}, {"insertions": 5, "lines": 8, "filePath": "community/cypher/cypher-planner-3.4/src/main/scala/org/neo4j/cypher/internal/compiler/v3_4/planner/logical/LogicalPlanningContext.scala", "deletions": 3}, {"insertions": 16, "lines": 16, "filePath": "community/kernel/src/main/java/org/neo4j/kernel/impl/newapi/NodeValueIndexCursor.java", "deletions": 0}, {"insertions": 0, "lines": 2, "filePath": "enterprise/cypher/acceptance-spec-suite/src/test/resources/blacklists/cost-slotted.txt", "deletions": 2}], "commitSpoonAstDiffStats": [], "commitMessage": "Merge pull request #1 from neo4j/3.4\n\nrebase", "spoonStatsSkippedReason": "tooManyFiles", "authoredDateTime": "2018-01-02 18:04:50"}, {"commitUser": "sarmbruster", "commitDateTime": "2013-06-18 08:17:39", "commitHash": "519368d3751bcc0c0e0662ac2e071a2f8c167480", "commitParents": ["4f89e56f0ee884054d3f00aed574199c796f2e18", "9901a157f0f5f16b74972bc9b1b49daed2d2d5ac"], "commitGHEventType": "referenced", "nameRev": "519368d3751bcc0c0e0662ac2e071a2f8c167480 tags/1.9.1~15^2", "commitGitStats": [{"insertions": 8, "lines": 15, "filePath": "community/server/src/main/java/org/neo4j/server/AbstractNeoServer.java", "deletions": 7}, {"insertions": 61, "lines": 105, "filePath": "community/server/src/main/java/org/neo4j/server/security/KeyStoreFactory.java", "deletions": 44}, {"insertions": 105, "lines": 105, "filePath": "community/server/src/test/java/org/neo4j/server/security/KeyStoreFactoryTest.java", "deletions": 0}, {"insertions": 0, "lines": 77, "filePath": "community/server/src/test/java/org/neo4j/server/security/TestKeyStoreFactory.java", "deletions": 77}], "commitSpoonAstDiffStats": [{"spoonMethods": [{"UPD": 0, "TOT": 9, "DEL": 4, "INS": 2, "MOV": 3, "spoonMethodName": "org.neo4j.server.AbstractNeoServer.initHttpsKeyStore()"}], "spoonFilePath": "AbstractNeoServer.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 1, "INS": 0, "MOV": 0, "spoonMethodName": "org.neo4j.server.security.TestKeyStoreFactory"}], "spoonFilePath": "TestKeyStoreFactory.java"}, {"spoonMethods": [{"UPD": 0, "TOT": 1, "DEL": 0, "INS": 1, "MOV": 0, "spoonMethodName": "org.neo4j.server.security.KeyStoreFactoryTest"}], "spoonFilePath": "KeyStoreFactoryTest.java"}, {"spoonMethods": [], "spoonFilePath": "KeyStoreFactory.java"}], "commitMessage": "Merge pull request #1 from jimwebber/chained_certificates\n\nChained certificates support", "spoonStatsSkippedReason": "", "authoredDateTime": "2013-06-18 08:17:39"}], "created": "2012-11-12 13:22:27"}], "captureTime": "Mon Jul  6 16:10:36 2020", "projectName": "neo4j/neo4j"}